{"version":3,"file":"token-action-hud-pf1.min.js","sources":["../src/scripts/constants.js","../src/scripts/utils.js","../src/scripts/groups.js","../src/scripts/models/actor-data.js","../src/scripts/settings.js","../src/scripts/hud-builder.js","../src/scripts/roll-handler.js","../src/scripts/system-manager.js","../src/scripts/migration/index.js","../src/scripts/init.js"],"sourcesContent":["/**\n * Module-based constants\n */\nexport const MODULE = {\n    ID: 'token-action-hud-pf1'\n};\n\n/**\n * Core module\n */\nexport const CORE_MODULE = {\n    ID: 'token-action-hud-core'\n};\n\n/**\n * Core module version required by the system module\n */\nexport const REQUIRED_CORE_MODULE_VERSION = '2.0';\n\nexport const ROLL_TYPE = {\n    abilityCheck: 'abilityCheck',\n    addToCombat: 'addToCombat',\n    bab: 'bab',\n    buff: 'buff',\n    casterLevel: 'casterLevel',\n    cmb: 'cmb',\n    concentration: 'concentration',\n    condition: 'condition',\n    defenses: 'defenses',\n    endTurn: 'endTurn',\n    initiative: 'initiative',\n    item: 'item',\n    makeInvisible: 'makeInvisible',\n    makeVisible: 'makeVisible',\n    melee: 'melee',\n    openSettings: 'openSettings',\n    openTokenConfig: 'openTokenConfig',\n    ranged: 'ranged',\n    removeFromCombat: 'removeFromCombat',\n    rest: 'rest',\n    save: 'save',\n    skill: 'skill',\n    toggleSkip: 'toggleSkip',\n    toggleTahGrid: 'toggleTahGrid',\n    toggleUntrainedSkills: 'toggleUntrainedSkills',\n};\n","import { MODULE } from './constants.js'\n\nexport class Utils {\n    static isEmptyObject = (obj) => !Object.keys(obj).length;\n\n    static localize = (key, opts = {}) => {\n        const myKey = `${MODULE.ID}.${key}`;\n        return Utils.isEmptyObject(opts)\n            ? (game.i18n.localize(myKey) === myKey ? game.i18n.localize(key) : game.i18n.localize(myKey))\n            : (game.i18n.format(myKey, opts) === myKey ? game.i18n.format(key, opts) : game.i18n.format(myKey, opts));\n    }\n\n    static getFirstActiveGM = () => pf1.utils.getFirstActiveGM();\n    static isFirstGM = () => this.getFirstActiveGM() === game.user;\n    static isCurrentUser = (userId) => game.user.id === userId;\n    static doOnce = (func) => this.handleSingleOwner(game.user.id, func);\n    static handleSingleOwner = async (userId, func) => {\n        const gm = this.getFirstActiveGM();\n\n        if (this.isFirstGM() || (!gm && this.isCurrentUser(userId))) {\n            await func();\n        }\n    }\n\n    static #itemHasActions = (item) => !!this.getItemActions(item).length;\n    static canUseItem = (item) => this.#itemHasActions(item) || !!item.getScriptCalls(\"use\").length;\n    static getItemActions = (item) => {\n        const actions = item.actions;\n        return actions ? [...actions] : [];\n        // const unchained = game.settings.get('pf1', 'unchainedActionEconomy');\n\n        // disabling this but leaving it here for future use -- \"passive\" actions are still actions because they can still be used.\n        // const isActive = (action) => unchained\n        //     ? action.data.unchainedAction?.activation?.type && action.data.unchainedAction.activation.type !== 'passive'\n        //     : action.data.activation?.type && action.data.activation?.type !== 'passive';\n\n        // leaving this here again -- it seems right, but an action might not have an activation type configured but can still be used\n        // const isAction = (action) => unchained\n        //     ? action.data.unchainedAction?.activation?.type\n        //     : action.data.activation?.type;\n        // return (actions || []).filter(isAction);\n    }\n\n    /**\n     * Get actor from the token or actor object\n     * @param {string} actorId The actor id\n     * @param {string} tokenId The token id\n     * @returns {object}       The actor\n     */\n    static getActor(actorId, tokenId) {\n        let token = null\n        if (tokenId) token = canvas.tokens.placeables.find((token) => token.id === tokenId)\n        if (token) return token.actor\n        return game.actors.get(actorId)\n    }\n\n    /**\n     * Get item from the actor object\n     * @param {object} actor  The actor\n     * @param {string} itemId The item id\n     * @returns {object}      The item\n     */\n    static getItem(actor, itemId) {\n        return actor.items.get(itemId)\n    }\n\n    /**\n     * Get token\n     * @param {string} tokenId The token id\n     * @returns {object}       The token\n     */\n    static getToken(tokenId) {\n        return canvas.tokens.placeables.find((token) => token.id === tokenId)\n    }\n}\n","import { MODULE } from \"./constants\";\nimport { Utils } from \"./utils\";\n\n/**\n * Default categories and groups\n */\nexport let GROUPS = null;\n\nconst gearSubtypes = ['gear', 'adventuring', 'tool', 'reagent', 'remedy', 'herb', 'animal', 'animalGear'];\nconst miscSubtypes = ['misc', 'food', 'entertainment', 'vehicle'];\nconst tradeSubtypes = ['tradeGoods', 'treasure'];\nconst handledItemTypes = [\n    'attack',\n    'buff',\n    'consumable',\n    'container',\n    'equipment',\n    'feat',\n    'implant',\n    'loot',\n    'spell',\n    'weapon',\n];\n\nexport const GROUP_MAP = {\n    combat: {\n        id: 'combat',\n        name: 'PF1.Combat',\n        groups: {\n            // misc actions not defined by Items (e.g. initiative, cmb, etc)\n            base: { id: 'combat-base', name: 'PF1.Base', settings: { showTitle: false } },\n\n            weaponAttaack: { id: 'combat-weaponAttack', name: 'PF1.Subtypes.Item.attack.weapon.Plural', filter: (item) => item.type === 'attack' && item.subType === 'weapon' },\n            naturalAttack: { id: 'combat-naturalAttack', name: 'PF1.Subtypes.Item.attack.natural.Plural', filter: (item) => item.type === 'attack' && item.subType === 'natural' },\n            classAbilities: { id: 'combat-classAbilities', name: 'PF1.Subtypes.Item.attack.ability.Plural', filter: (item) => item.type === 'attack' && item.subType === 'ability' },\n            racialAbilities: { id: 'combat-racialAbilities', name: 'PF1.Subtypes.Item.attack.racial.Plural', filter: (item) => item.type === 'attack' && item.subType === 'racialAbility' },\n            items: { id: 'combat-items', name: 'PF1.Subtypes.Item.attack.item.Plural', filter: (item) => item.type === 'attack' && item.subType === 'item' },\n            miscellaneous: { id: 'combat-miscellaneous', name: 'PF1.Subtypes.Item.attack.misc.Plural', filter: (item) => item.type === 'attack' && item.subType === 'misc' },\n\n            other: {\n                id: 'combat-other',\n                name: 'PF1.Other',\n                filter: (item) => {\n                    Object.entries(GROUP_MAP.combat.groups)\n                        .filter(([key, _]) => key !== 'other' && key !== 'base')\n                        .map(([_, value]) => value.filter)\n                        .every((filter) => !filter(item));\n                },\n            },\n        },\n    },\n    saves: {\n        id: 'saves',\n        name: 'PF1.SavingThrowPlural',\n        groups: {\n            saves: { id: 'saves-saves', name: 'PF1.SavingThrowPlural', settings: { showTitle: false } },\n        },\n    },\n    checks: {\n        id: 'checks',\n        name: 'PF1.BuffTarAbilityChecks',\n        groups: {\n            checks: { id: 'checks-checks', name: 'PF1.BuffTarAbilityChecks', settings: { showTitle: false } },\n        },\n    },\n    inventory: {\n        id: 'inventory',\n        name: 'PF1.Inventory',\n        groups: {\n            weapons: { id: 'inventory-weapons', name: 'PF1.InventoryWeapons', filter: (item) => item.type === 'weapon' },\n            armor: { id: 'inventory-armor', name: 'PF1.ArmorOrShield', filter: (item) => item.type === 'equipment' && ['armor', 'shield'].includes(item.subType) },\n            equipment: { id: 'inventory-equipment', name: 'PF1.InventoryEquipment', filter: (item) => item.type === 'equipment' && ['wondrous', 'other', 'clothing'].includes(item.subType) },\n            implant: { id: 'inventory-implant', name: 'PF1.InventoryImplants', filter: (item) => item.type === 'implant' },\n            consumables: { id: 'inventory-consumables', name: 'PF1.InventoryConsumables', filter: (item) => item.type === 'consumable' },\n            gear: { id: 'inventory-gear', name: 'PF1.Subtypes.Item.loot.gear.Plural', filter: (item) => item.type === 'loot' && gearSubtypes.includes(item.subType) },\n            ammunition: { id: 'inventory-ammunition', name: 'PF1.Subtypes.Item.loot.ammo.Plural', filter: (item) => item.type === 'loot' && item.subType === 'ammo' },\n            miscellaneous: { id: 'inventory-miscellaneous', name: 'PF1.Subtypes.Item.loot.misc.Plural', filter: (item) => item.type === 'loot' && miscSubtypes.includes(item.subType) },\n            tradeGoods: { id: 'inventory-tradeGoods', name: 'PF1.Subtypes.Item.loot.tradeGoods.Plural', filter: (item) => item.type === 'loot' && tradeSubtypes.includes(item.subType) },\n            containers: { id: 'inventory-containers', name: 'PF1.InventoryContainers', filter: (item) => item.type === 'container' },\n\n            // leftovers that could be from other mods or from a change in pf1\n            other: {\n                id: 'inventory-other',\n                name: 'PF1.Other',\n                filter: (item) => {\n                    Object.entries(GROUP_MAP.inventory.groups)\n                        .filter(([key, _]) => key !== 'other')\n                        .map(([_, value]) => value.filter)\n                        .every((filter) => !filter(item));\n                },\n            },\n        },\n    },\n    features: {\n        id: 'features',\n        name: 'PF1.Features',\n        groups: {\n            classFeat: { id: 'features-classFeat', name: 'PF1.Subtypes.Item.feat.classFeat.Plural', filter: (item) => item.type === 'feat' && item.subType === 'classFeat' },\n            feat: { id: 'features-feat', name: 'PF1.Subtypes.Item.feat.feat.Plural', filter: (item) => item.type === 'feat' && item.subType === 'feat' },\n            racial: { id: 'features-racial', name: 'PF1.Subtypes.Item.feat.racial.Plural', filter: (item) => item.type === 'feat' && item.subType === 'racial' },\n            template: { id: 'features-template', name: 'PF1.Subtypes.Item.feat.template.Plural', filter: (item) => item.type === 'feat' && item.subType === 'template' },\n            trait: { id: 'features-trait', name: 'PF1.Subtypes.Item.feat.trait.Plural', filter: (item) => item.type === 'feat' && item.subType === 'trait' },\n            misc: { id: 'features-misc', name: 'PF1.Subtypes.Item.feat.misc.Plural', filter: (item) => item.type === 'feat' && item.subType === 'misc' },\n\n            // spheres of power sections\n            combatTalents: { id: 'features-combat-talents', name: 'PF1SPHERES.CombatTalentPlural', filter: (item) => item.type === 'feat' && item.subType === 'combatTalent' },\n            magicTalents: { id: 'features-magic-talents', name: 'PF1SPHERES.MagicTalentPlural', filter: (item) => item.type === 'feat' && item.subType === 'magicTalent' },\n\n            // leftovers that could be from other mods or from a change in pf1\n            other: {\n                id: 'features-other',\n                name: 'PF1.Other',\n                filter: (item) => {\n                    Object.entries(GROUP_MAP.features.groups)\n                        .filter(([key, _]) => key !== 'other')\n                        .map(([_, value]) => value.filter)\n                        .every((filter) => !filter(item));\n                },\n            },\n        },\n    },\n    skills: {\n        id: 'skills',\n        name: 'PF1.Skills',\n        groups: {\n            skills: { id: 'skills-skills', name: 'PF1.Skills', settings: { showTitle: false } },\n            utils: { id: 'skills-utils', name: 'categories.utility' }\n        },\n    },\n    spells: {\n        id: 'spells',\n        name: 'PF1.Spells',\n        groups: {\n            spells: { id: 'spells-spells', name: 'PF1.Spells', settings: { showTitle: false } },\n        },\n    },\n    buffs: {\n        id: 'buffs',\n        name: 'PF1.Buffs',\n        groups: {\n            actions: { id: 'buffs-actions', name: `${MODULE.ID}.categories.activeBuffActions` },\n\n            temporary: { id: 'buffs-temporary', name: 'PF1.Temporary', filter: (item) => item.type === 'buff' && item.subType === 'temp' },\n            spell: { id: 'buffs-spell', name: 'PF1.Spells', filter: (item) => item.type === 'buff' && item.subType === 'spell' },\n            item: { id: 'buffs-item', name: 'PF1.Items', filter: (item) => item.type === 'buff' && item.subType === 'item' },\n            feat: { id: 'buffs-feat', name: 'PF1.Features', filter: (item) => item.type === 'buff' && item.subType === 'feat' },\n            permanent: { id: 'buffs-permanent', name: 'PF1.Permanent', filter: (item) => item.type === 'buff' && item.subType === 'perm' },\n            miscellaneous: { id: 'buffs-miscellaneous', name: 'PF1.Misc', filter: (item) => item.type === 'buff' && item.subType === 'misc' },\n\n            other: {\n                id: 'buffs-other',\n                name: 'PF1.Other',\n                filter: (item) => {\n                    Object.entries(GROUP_MAP.buffs.groups)\n                        .filter(([key, _]) => key !== 'other')\n                        .map(([_, value]) => value.filter)\n                        .every((filter) => !filter(item));\n                },\n            },\n        },\n    },\n    conditions: {\n        id: 'conditions',\n        name: 'PF1.ConditionPlural',\n        groups: {\n            conditions: { id: 'conditions-conditions', name: 'PF1.ConditionPlural', settings: { showTitle: false } },\n        },\n    },\n    other: {\n        id: 'other',\n        name: 'PF1.Other',\n        groups: {\n            other: { id: 'other-other', name: 'PF1.Other', filter: (item) => !handledItemTypes.includes(item.type) },\n        },\n    },\n    utility: {\n        id: 'utility',\n        name: 'categories.utility',\n        groups: {\n            rest: { id: 'utility-rest', name: 'PF1.Rest' },\n            token: { id: 'utility-token', name: 'Token' },\n            utility: { id: 'utility-utility', name: 'categories.utility' },\n        },\n    },\n};\n\nHooks.on('i18nInit', async () => {\n    // this will have to be updated if I ever need nested pre-defined groups\n    const allGroups = [];\n    const getGroups = (catMap) => {\n        const groups = [];\n        if (catMap.groups) {\n            Object.keys(catMap.groups).forEach((subKey) => {\n                const subMap = catMap.groups[subKey];\n                subMap.name = Utils.localize(subMap.name);\n                subMap.nestId = `${catMap.nestId || catMap.id}_${subMap.id}`;\n                subMap.type = 'system';\n                subMap.listName = `${catMap.name} - ${subMap.name}`;\n                const sub = {\n                    ...subMap,\n                    type: 'system',\n                };\n                groups.push(sub);\n                allGroups.push(sub);\n            });\n        }\n        return groups;\n    };\n\n    const layout = Object.keys(GROUP_MAP).map((catKey) => {\n        const catMap = GROUP_MAP[catKey];\n        catMap.nestId = catMap.nestId || catMap.id;\n        catMap.name = Utils.localize(catMap.name);\n        return {\n            ...catMap,\n            groups: getGroups(catMap),\n        };\n    });\n\n    GROUPS = {\n        layout,\n        groups: allGroups,\n    };\n});\n","import { ROLL_TYPE } from \"../constants\";\nimport { Utils } from \"../utils\";\n\nexport class ActionBuilderActorData {\n    #_knownActorTypes = ['character', 'npc'];\n\n    #_fallbackActor = null;\n    get actor() { return this.#_fallbackActor || this.actors[0] || {}; }\n\n    #_fallbackToken = null;\n    get token() { return this.#_fallbackToken || this.tokens[0] || {}; }\n\n    /** @returns {ActorPF[]} */\n    get actors() { return this.#_fallbackActor ? [this.#_fallbackActor] : this.tokens.map(token => token.actor).filter(x => !!x); }\n    get tokens() { return this.#_fallbackToken ? [this.#_fallbackToken] : canvas.tokens.controlled; }\n\n    get actorId() { return this.actor?.id; }\n    get actorIds() { return this.actors?.map(x => x.id) ?? []; }\n    get isMulti() { return (this.actors?.length ?? 0) > 1; }\n    get isSingle() { return !this.isMulti; }\n    get tokenId() { return this.token?.id; }\n    get tokenIds() { return this.tokens?.map(x => x.id) ?? []; }\n\n    get isValid() {\n        const filter = (actor) => this.#_knownActorTypes.includes(actor?.type);\n        const isValid = this.actors?.some(filter) ?? false;\n        if (!this.actors.every(filter)) {\n            console.warn('TAH detected invalid selected actor');\n        }\n        return isValid;\n    }\n\n    get inCombat() {\n        return !!this.combatants.length;\n    }\n\n    get combatant() { return this.combatants[0] || {}; }\n    get combatants() {\n        if (this.#_fallbackActor) {\n            return game.combat?.combatants.filter((combatant) => combatant.actor === this.#_fallbackActor) ?? [];\n        }\n\n        const combatantants = game.combat?.combatants ?? [];\n        return combatantants.filter((combatant) => this.actors.find((actor) => combatant.actor === actor));\n    }\n\n    get isCurrentCombatant() { return !this.isMulti && this.inCombat && game.combat?.combatant?.id === this.combatant.id; }\n\n    #_items = null;\n    /** @type {ItemPF[]} */\n    get items() {\n        return this.#_items ??=\n            this.actor.items\n                ? this.actor.items\n                    .filter((item) => Utils.canUseItem(item))\n                    .sort((a, b) => a.name < b.name ? -1 : 1)\n                : [];\n    }\n\n    #_unusableItems = null;\n    get unusableItems() {\n        return this.#_unusableItems ??=\n            this.actor.items\n                ? this.actor.items\n                    .filter((item) => !Utils.canUseItem(item))\n                    .sort((a, b) => a.name < b.name ? -1 : 1)\n                : [];\n    }\n\n    #_buffs = null;\n    get buffs() {\n        return this.#_buffs ??=\n            this.actor.itemTypes.buff\n                .filter((item) => item.type === 'buff')\n                .sort((a, b) => a.name < b.name ? -1 : 1);\n    }\n\n    constructor({ actor, token } = { actor: {}, token: {} }) {\n        if (!canvas.tokens.controlled.length) {\n            // covers the case for \"always show my actor bar\" when this is called without a selection\n            this.#_fallbackActor = actor;\n            this.#_fallbackToken = token;\n        }\n    }\n}\n\nexport class RollHandlerActorData extends ActionBuilderActorData {\n    actionId = null;\n    book = null;\n    enable = null;\n    item = null;\n    rollType = null;\n    subAction = null;\n\n    constructor(action = {}) {\n        const { actorId, book, enable, tokenId, actionId, rollType, subActionId } = action;\n        const itemId = [ROLL_TYPE.buff, ROLL_TYPE.item].includes(rollType) ? actionId : '';\n\n        const actor = Utils.getActor(actorId, tokenId);\n        const token = Utils.getToken(tokenId);\n\n        super({ actor, token });\n\n        if (itemId) {\n            this.item = Utils.getItem(actor, action.actionId);\n\n            if (subActionId) {\n                this.subAction = this.item.actions.find((a) => a.id === subActionId);\n            }\n        }\n\n        this.actionId = actionId;\n        this.book = book;\n        this.enable = enable || false;\n        this.rollType = rollType;\n    }\n}\n","/**\n *  see https://foundryvtt.wiki/en/development/api/settings for defaults\n */\n\nimport { MODULE } from './constants.js';\nimport { Utils } from './utils.js';\n\nconst keys = {\n    actionLayout: 'actionLayout',\n    categorizeSkills: 'categorizeSkills',\n    hideUntrainedSkills: 'hideUntrainedSkills',\n    migrationVersion: 'migrationVersion',\n    showModifiers: 'showModifiers',\n    showPassiveFeatures: 'showPassiveFeatures',\n    showPassiveInventory: 'showPassiveInventory',\n    simplifySkillNames: 'simplifySkillNames',\n    spellPreparation: 'spellPreparation',\n};\n\nexport function register(updateFunc) {\n    const defaultSetting = {\n        config: true,\n        scope: 'client',\n        onChange: (value) => {\n            updateFunc(value)\n        },\n    }\n\n    const settings = {\n        [keys.actionLayout]: {\n            choices: {\n                'onlyItems': Utils.localize('settings.actionLayout.choices.onlyItems'),\n                'onlyActions': Utils.localize('settings.actionLayout.choices.onlyActions'),\n                'categorized': Utils.localize('settings.actionLayout.choices.categorized'),\n            },\n            default: 'categorized',\n            type: String,\n        },\n        [keys.showModifiers]: {\n            default: true,\n            type: Boolean,\n        },\n        [keys.categorizeSkills]: {\n            default: true,\n            type: Boolean,\n        },\n        [keys.hideUntrainedSkills]: {\n            default: false,\n            type: Boolean,\n        },\n        [keys.showPassiveFeatures]: {\n            default: false,\n            type: Boolean,\n        },\n        [keys.showPassiveInventory]: {\n            default: false,\n            type: Boolean,\n        },\n        [keys.simplifySkillNames]: {\n            default: true,\n            type: Boolean,\n        },\n        [keys.spellPreparation]: {\n            ...defaultSetting,\n            choices: {\n                'onlyRemaining': Utils.localize('settings.spellPreparation.choices.onlyRemaining'),\n                'allPrepared': Utils.localize('settings.spellPreparation.choices.allPrepared'),\n                'allSpells': Utils.localize('settings.spellPreparation.choices.allSpells'),\n            },\n            default: 'onlyRemaining',\n            type: String,\n        },\n    };\n\n    Object.keys(settings)\n        .forEach((key) =>\n            game.settings.register(MODULE.ID, key, {\n                ...defaultSetting,\n                name: Utils.localize(`settings.${key}.name`),\n                hint: Utils.localize(`settings.${key}.hint`),\n                ...settings[key],\n            })\n        );\n}\n\nexport class Settings {\n    /**\n     * User: determines how to layout sub-actions\n     */\n    static get actionLayout() {\n        return Settings.#getSetting(keys.actionLayout);\n    }\n\n    static get categorizeSkills() {\n        return Settings.#getSetting(keys.categorizeSkills);\n    }\n\n    static get hideUntrainedSkills() {\n        return Settings.#getSetting(keys.hideUntrainedSkills);\n    }\n\n    static get migrationVersion() {\n        return Settings.#getSetting(keys.migrationVersion);\n    }\n\n    static set migrationVersion(version) {\n        Settings.#setSetting(keys.migrationVersion, version);\n    }\n\n    /**\n     * @returns {boolean} Simplifies skill names to only the name in parenthesis\n     */\n    static get simplifySkillNames() {\n        return Settings.#getSetting(keys.simplifySkillNames);\n    }\n\n    /**\n     * @returns {boolean} Simplifies skill names to only the name in parenthesis\n     */\n    static set simplifySkillNames(value) {\n        return Settings.#setSetting(keys.simplifySkillNames, value);\n    }\n\n    /**\n     * @returns {boolean} Should show roll modifiers\n     */\n    static get showModifiers() {\n        return Settings.#getSetting(keys.showModifiers);\n    }\n\n    static get showPassiveFeatures() {\n        return Settings.#getSetting(keys.showPassiveFeatures);\n    }\n\n    static get showPassiveInventory() {\n        return Settings.#getSetting(keys.showPassiveInventory);\n    }\n\n    static get spellPreparation() {\n        return Settings.#getSetting(keys.spellPreparation);\n    }\n\n    static get pf1SkipActionDialogs() {\n        return Settings.#getSetting('skipActionDialogs', 'pf1');\n    }\n\n    static get tahGrid() {\n        return Settings.#getSetting('grid', 'token-action-hud-core');\n    }\n\n    static async toggleSkipDialog() {\n        const current = Settings.pf1SkipActionDialogs;\n        await Settings.#setSetting('skipActionDialogs', !current, 'pf1');\n    }\n\n    static async toggleTahGrid() {\n        const current = Settings.tahGrid;\n        await Settings.#setSetting('grid', !current, 'token-action-hud-core');\n    }\n\n    static async toggleUntrainedSkills() {\n        const current = Settings.hideUntrainedSkills;\n        await Settings.#setSetting(keys.hideUntrainedSkills, !current);\n    }\n\n    static #getSetting(key, moduleId = MODULE.ID) {\n        return game.settings.get(moduleId, key);\n    }\n\n    static async #setSetting(key, value, moduleId = MODULE.ID) {\n        await game.settings.set(moduleId, key, value);\n    }\n}\n","import { ActionBuilderActorData } from './models/actor-data.js';\nimport { GROUP_MAP } from './groups.js';\nimport { ROLL_TYPE } from './constants.js';\nimport { Settings } from './settings.js';\nimport { Utils } from \"./utils.js\";\n\nexport let HudBuilder = null\n\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\n    HudBuilder = class HudBuilder extends coreModule.api.ActionHandler {\n        actorData = new ActionBuilderActorData();\n\n        /**\n         * Build System Actions\n         * @override\n         * @param {array} groupIds\n         */\n        async buildSystemActions(_groupIds) {\n            const { actor, token } = this;\n            this.actorData = new ActionBuilderActorData({ actor, token });\n\n            if (!this.actorData.isValid) {\n                return;\n            }\n\n            this.#_buildSkills();\n            this.#_buildSaves();\n            this.#_buildChecks();\n            this.#_buildConditions();\n\n            await this.#_buildCombat();\n            await this.#_buildBuffs();\n            await this.#_buildInventory();\n            await this.#_buildSpells();\n            await this.#_buildFeatures();\n            await this.#_buildOtherItems();\n            this.#_buildUtils();\n        }\n\n        #_buildChecks() {\n            const saves = Object.keys(pf1.config.abilities);\n\n            const actions = saves.map((key) => ({\n                id: `ability-${key}`,\n                info1: this.#modToInfo(this.actorData.actor.system.abilities[key].mod),\n                encodedValue: this.#_encodeData(ROLL_TYPE.abilityCheck, key),\n                name: pf1.config.abilities[key],\n            }));\n            this.addActions(actions, GROUP_MAP.checks.groups.checks);\n        }\n\n        #_buildSaves() {\n            const saves = Object.keys(pf1.config.savingThrows);\n\n            const actions = saves.map((key) => ({\n                id: `save-${key}`,\n                encodedValue: this.#_encodeData(ROLL_TYPE.save, key),\n                info1: this.#modToInfo(this.actorData.actor.system.attributes.savingThrows[key].total),\n                name: pf1.config.savingThrows[key],\n            }));\n            this.addActions(actions, GROUP_MAP.saves.groups.saves);\n        }\n\n        #_buildUtils() {\n            const { groups } = GROUP_MAP.utility;\n\n            const rest = {\n                id: 'util-rest',\n                name: Utils.localize('PF1.Rest'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.rest),\n            }\n            this.addActions([rest], groups.rest);\n\n            const tokenActions = [];\n            if (game.user.isGM) {\n                const isHidden = this.actorData.tokens\n                    .every((token) => token.document.hidden);\n                tokenActions.push(isHidden ? {\n                    id: 'util-makeVisible',\n                    name: Utils.localize('categories.makeVisible'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.makeVisible),\n                } : {\n                    id: 'util-makeInvisible',\n                    name: Utils.localize('categories.makeInvisible'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.makeInvisible),\n                });\n            }\n\n            if (game.user.can('TOKEN_CONFIGURE')\n                && this.actorData.tokens.every((token) => token.isOwner)\n            ) {\n                tokenActions.push({\n                    id: 'util-openTokenConfig',\n                    name: Utils.localize('actions.openTokenConfig'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.openTokenConfig),\n                });\n            };\n            this.addActions(tokenActions, groups.token);\n\n            const utilActions = [{\n                id: 'util-toggleTahGrid',\n                name: Utils.localize('actions.toggleTahGrid'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.toggleTahGrid),\n                cssClass: Settings.tahGrid ? ' active' : '',\n            }, {\n                id: 'util-toggleSkip',\n                name: Utils.localize(Settings.pf1SkipActionDialogs ? 'actions.toggleSkipEnabled' : 'actions.toggleSkipDisabled'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.toggleSkip),\n                cssClass: Settings.pf1SkipActionDialogs ? ' active' : '',\n            }, {\n                id: 'util-openSettings',\n                name: Utils.localize('actions.openSettings'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.openSettings),\n            }];\n            this.addActions(utilActions, groups.utility);\n        }\n\n        async #_buildCombat() {\n            const { groups } = GROUP_MAP.combat;\n\n            let meleeMod, rangedMod;\n\n            if (this.actorData.isSingle) {\n                const { abilities, attributes, traits } = this.actorData.actor.system;\n                const { attack } = attributes;\n                const sizeModifier = pf1.config.sizeMods[traits.size.base]\n                const baseBonus = attack.shared + attack.general;\n                const meleeAbility = abilities[attack.meleeAbility]?.mod ?? 0;\n                const rangedAbility = abilities[attack.rangedAbility]?.mod ?? 0;\n\n                meleeMod = baseBonus + attack.melee + meleeAbility + sizeModifier;\n                rangedMod = baseBonus + attack.ranged + rangedAbility + sizeModifier;\n            }\n\n            const basicActions = [{\n                id: 'combat-showDefenses',\n                name: Utils.localize('actions.displayDefenses'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.defenses),\n            }, {\n                id: 'combat-bab',\n                encodedValue: this.#_encodeData(ROLL_TYPE.bab),\n                info1: this.#modToInfo(this.actorData.actor.system.attributes.bab.total),\n                name: Utils.localize('PF1.BABAbbr'),\n            }, {\n                id: 'combat-cmb',\n                encodedValue: this.#_encodeData(ROLL_TYPE.cmb),\n                info1: this.#modToInfo(this.actorData.actor.system.attributes.cmb.total),\n                name: Utils.localize('PF1.CMBAbbr'),\n            }, {\n                id: 'combat-melee',\n                encodedValue: this.#_encodeData(ROLL_TYPE.melee),\n                info1: this.#modToInfo(meleeMod),\n                name: Utils.localize('PF1.Melee'),\n            }, {\n                id: 'combat-ranged',\n                encodedValue: this.#_encodeData(ROLL_TYPE.ranged),\n                info1: this.#modToInfo(rangedMod),\n                name: Utils.localize('PF1.Ranged'),\n            }, {\n                id: 'combat-initiative',\n                name: Utils.localize('PF1.Initiative'),\n                encodedValue: this.#_encodeData(ROLL_TYPE.initiative),\n                cssClass: `${this.actorData.inCombat ? 'active' : ''} ${game.user.isGM ? '' : 'flat-disabled'}`,\n                info1: [null, undefined].includes(this.actorData.combatant.initiative)\n                    ? this.#modToInfo(this.actorData.actor.system.attributes.init.total)\n                    : { text: this.actorData.combatant.initiative },\n            }];\n\n            if (game.user.isGM) {\n                const action = this.actorData.inCombat ? {\n                    id: 'combat-removeFromCombat',\n                    name: Utils.localize('COMBAT.CombatantRemove'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.removeFromCombat),\n                } : {\n                    id: 'combat-addToCombat',\n                    name: Utils.localize('COMBAT.CombatantCreate'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.addToCombat),\n                };\n                basicActions.push(action);\n            }\n\n            if (this.actorData.isCurrentCombatant) {\n                basicActions.push({\n                    id: 'combat-endTurn',\n                    name: Utils.localize('COMBAT.TurnEnd'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.endTurn),\n                });\n            }\n\n            this.addActions(basicActions, groups.base);\n\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            var builds = Object.entries(groups)\n                .filter(([key, _]) => key !== 'base')\n                .map(([_, g]) => g)\n                .map((group) => this.#_buildFilteredItemActions(group, Settings.showPassiveInventory));\n            await Promise.all(builds);\n        }\n\n        async #_buildBuffs() {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            const mapBuff = (buff) => ({\n                cssClass: 'toggle' + (buff.isActive ? ' active' : ''),\n                encodedValue: this.#_encodeData(ROLL_TYPE.buff, buff.id, { enable: !buff.isActive }),\n                id: buff.id,\n                img: buff.img,\n                name: buff.name,\n            });\n\n            const addBuffs = (subType, group) => {\n                const buffs = this.actorData.buffs\n                    .filter((buff) => buff.subType === subType)\n                    .map(mapBuff);\n                this.addActions(buffs, group);\n            };\n\n            const { groups } = GROUP_MAP.buffs;\n\n            addBuffs('temp', groups.temporary);\n            addBuffs('spell', groups.spell);\n            addBuffs('item', groups.item);\n            addBuffs('feat', groups.feat);\n            addBuffs('perm', groups.permanent);\n            addBuffs('misc', groups.miscellaneous);\n\n            const withActions = this.actorData.buffs\n                .filter((buff) => buff.isActive && Utils.getItemActions(buff).length > 0);\n            await this.#_addItemActions(withActions, groups.actions, { actionLayout: 'onlyActions' });\n\n            // leftovers that could be from other mods or from a change in pf1\n            const otherBuffs = this.actorData.buffs\n                .filter((item) => !['item', 'temp', 'perm', 'misc', 'feat', 'spell'].includes(item.subType))\n                .map(mapBuff);\n            this.addActions(otherBuffs, groups.other);\n        }\n\n        async #_buildFeatures() {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            var builds = Object.values(GROUP_MAP.features.groups)\n                .map((group) => this.#_buildFilteredItemActions(group, Settings.showPassiveInventory));\n            await Promise.all(builds);\n        }\n\n        async #_buildOtherItems() {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            await this.#_buildFilteredItemActions(GROUP_MAP.other.groups.other, Settings.showPassiveFeatures);\n        }\n\n        async #_buildInventory() {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            var builds = Object.values(GROUP_MAP.inventory.groups)\n                .map((group) => this.#_buildFilteredItemActions(group, Settings.showPassiveInventory));\n            await Promise.all(builds);\n        }\n\n        #toSignedString = (mod) => !mod ? '±0' : mod > 0 ? `+${mod}` : `${mod}`;\n        #modToInfo = (mod) => Settings.showModifiers && this.actorData.isSingle ? { class: 'roll-modifier', text: this.#toSignedString(mod) } : undefined;\n\n        #knowledgeSkillIds = ['kar', 'kdu', 'ken', 'kge', 'khi', 'klo', 'kna', 'kno', 'kpl', 'kre'];\n        #_buildSkills() {\n            const skillGroup = GROUP_MAP.skills.groups.skills;\n\n            const actorSkills = this.actorData.isMulti\n                ? pf1.config.skills\n                : this.actorData.actor.system.skills;\n\n            const excludedSkills = game.settings.get('pf1', 'allowBackgroundSkills')\n                ? []\n                : CONFIG.PF1.backgroundOnlySkills;\n\n            const skillIds = Object.keys(actorSkills).filter((id) => !excludedSkills.includes(id));\n\n            const getParentheticalName = (original) => /\\(([^)]+)\\)/g.exec(original)?.[1] || original;\n\n            const nameFilter = (name) => Settings.simplifySkillNames\n                ? getParentheticalName(name)\n                : name;\n\n            if (Settings.categorizeSkills) {\n                const skills = skillIds\n                    .filter((id) => this.actorData.isMulti || Utils.isEmptyObject(actorSkills[id].subSkills || {}))\n                    .filter((id) => !this.#knowledgeSkillIds.includes(id))\n                    .map((id) => ({ id, name: pf1.config.skills[id] || actorSkills[id].name }));\n                const actions = skills\n                    .filter(({ id }) => !Settings.hideUntrainedSkills || !actorSkills[id]?.rt || !!actorSkills[id].rank)\n                    .map(({ id, name }) => ({\n                        id: `skill_${id}`,\n                        cssClass: this.actorData.isSingle && actorSkills[id].rt && !actorSkills[id].rank ? 'action-nulled-out' : '',\n                        encodedValue: this.#_encodeData(ROLL_TYPE.skill, id),\n                        info1: this.#modToInfo(actorSkills[id]?.mod),\n                        name: nameFilter(name),\n                    }));\n\n                if (this.actorData.isSingle) {\n                    const subSkillIds = Object.keys(actorSkills).filter((id) => !Utils.isEmptyObject(actorSkills[id].subSkills || {}));\n                    subSkillIds.forEach((id) => {\n                        const currentSubskills = actorSkills[id].subSkills;\n                        const subskillActions = currentSubskills\n                            ? Object.keys(currentSubskills)\n                                .filter((sid) => !Settings.hideUntrainedSkills || !currentSubskills[sid].rt || !!currentSubskills[sid].rank)\n                                .map((sid) => ({\n                                    id: `categorized-${id}.subSkills.${sid}`,\n                                    cssClass: currentSubskills[sid].rt && !currentSubskills[sid].rank ? 'action-nulled-out' : '',\n                                    encodedValue: this.#_encodeData(ROLL_TYPE.skill, `${id}.subSkills.${sid}`),\n                                    info1: this.#modToInfo(currentSubskills[sid].mod),\n                                    name: nameFilter(currentSubskills[sid].name),\n                                }))\n                            : [];\n\n                        if (subskillActions.length) {\n                            const groupedActions =\n                                !Settings.hideUntrainedSkills || !actorSkills[id].rt || !!actorSkills[id].rank\n                                    ? [\n                                        {\n                                            id: `categorized-${id}`,\n                                            cssClass: actorSkills[id].rt && !actorSkills[id].rank ? 'action-nulled-out' : '',\n                                            encodedValue: this.#_encodeData(ROLL_TYPE.skill, id),\n                                            info1: this.#modToInfo(actorSkills[id].mod),\n                                            name: nameFilter(pf1.config.skills[id] || actorSkills[id].name),\n                                        },\n                                        ...subskillActions,\n                                    ]\n                                    : subskillActions;\n                            const subSkillGroup = {\n                                id: `${skillGroup.id}-${id}`,\n                                name: groupedActions[0].name,\n                                type: 'system-derived',\n                            };\n                            this.addGroup(subSkillGroup, skillGroup);\n                            this.addActions(groupedActions, subSkillGroup);\n                        }\n                        else {\n                            // if there are no subskills don't categorize it\n                            // (e.g. if the actor doesn't have any specific \"perform\" skills, then just put the single generic \"perform\" skill alongside the rest of the non-categorized skills)\n                            if (!Settings.hideUntrainedSkills || !actorSkills[id].rt || !!actorSkills[id].rank) {\n                                actions.push({\n                                    id,\n                                    cssClass: actorSkills[id].rt && !actorSkills[id].rank ? 'action-nulled-out' : '',\n                                    encodedValue: this.#_encodeData(ROLL_TYPE.skill, id),\n                                    info1: this.#modToInfo(actorSkills[id].mod),\n                                    name: nameFilter(pf1.config.skills[id] || actorSkills[id].name),\n                                });\n                            }\n                        }\n                    });\n                }\n\n                const knowledges = this.#knowledgeSkillIds\n                    .filter((id) => !Settings.hideUntrainedSkills || !actorSkills[id].rt || !!actorSkills[id].rank)\n                    .map((id) => ({\n                        id: `categorized-${id}`,\n                        cssClass: this.actorData.isSingle && actorSkills[id].rt && !actorSkills[id].rank ? 'action-nulled-out' : '',\n                        encodedValue: this.#_encodeData(ROLL_TYPE.skill, id),\n                        info1: this.#modToInfo(actorSkills[id]?.mod),\n                        name: nameFilter(getParentheticalName(pf1.config.skills[id])),\n                    }));\n                const knowledgeGroupData = {\n                    id: `${skillGroup.id}-knowledge`,\n                    name: Utils.localize('token-action-hud-pf1.knowledge-skills'),\n                    type: 'system-derived',\n                };\n                this.addGroup(knowledgeGroupData, skillGroup);\n                this.addActions(knowledges, knowledgeGroupData);\n\n                const sorted = [...actions].sort((a, b) => a.name < b.name ? -1 : 1);\n                this.addActions(sorted, skillGroup);\n            }\n            else {\n                const getSubskills = (key) => actorSkills[key].subSkills\n                    ? Object.keys(actorSkills[key].subSkills).map((s) => ({\n                        id: `${key}.subSkills.${s}`,\n                        ...actorSkills[key].subSkills[s], // rank, name, rt\n                    }))\n                    : [];\n                const skills = [\n                    ...skillIds.map((id) => ({\n                        id,\n                        name: pf1.config.skills[id],\n                        ...actorSkills[id], // rank, name (if it exists overwrite previous), rt\n                    })),\n                    ...skillIds.flatMap(getSubskills),\n                ];\n                const actions = skills\n                    .filter(({ rank, rt }) => !Settings.hideUntrainedSkills || !rt || !!rank)\n                    .map(({ id, name, rt }) => ({\n                        id,\n                        cssClass: this.actorData.isSingle && rt && !actorSkills[id]?.rank ? 'action-nulled-out' : '',\n                        encodedValue: this.#_encodeData(ROLL_TYPE.skill, id),\n                        info1: this.#modToInfo(actorSkills[id]?.mod),\n                        name: nameFilter(name),\n                    }));\n                const sorted = [...actions].sort((a, b) => a.name < b.name ? -1 : 1);\n\n                this.addActions(sorted, skillGroup);\n            }\n\n            // add skill utilities\n            {\n                const utils = [];\n                const areHidden = Settings.hideUntrainedSkills;\n                utils.push(areHidden ? {\n                    id: 'util-makeVisible',\n                    name: Utils.localize('actions.toggleUntrainedSkillsDisabled'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.toggleUntrainedSkills),\n                } : {\n                    id: 'util-makeInvisible',\n                    name: Utils.localize('actions.toggleUntrainedSkillsEnabled'),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.toggleUntrainedSkills),\n                });\n\n                this.addActions(utils, GROUP_MAP.skills.groups.utils);\n            }\n        }\n\n        #_buildConditions() {\n            const actions = pf1.registry.conditions.contents.map(({ id, name, texture }) => {\n                const isEnabled = this.actorData.actors.every((actor) => actor.statuses.has(id));\n                return {\n                    cssClass: 'toggle' + (isEnabled ? ' active' : ''),\n                    encodedValue: this.#_encodeData(ROLL_TYPE.condition, id, { enable: !isEnabled }),\n                    id,\n                    img: texture,\n                    name,\n                };\n            });\n\n            this.addActions(actions, GROUP_MAP.conditions.groups.conditions);\n        }\n\n        async #_buildSpells() {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            const spellGroup = GROUP_MAP.spells.groups.spells;\n            const allSpells = this.actorData.items\n                .filter((item) => item.type === 'spell');\n\n            const spellbookKeys = Object.keys(this.actorData.actor.system.attributes.spells.spellbooks)\n                .map((key) => ({ key, spellbook: this.actorData.actor.system.attributes.spells.spellbooks[key] }))\n                .filter(({ _key, spellbook }) => spellbook.inUse)\n                .map(({ key, _spellbook }) => key);\n\n            const { spellbooks } = this.actorData.actor.system.attributes.spells;\n            const levels = Array.from(Array(10).keys());\n\n            for (const key of spellbookKeys) {\n                const spellbook = spellbooks[key];\n                let spellbookGroup = spellGroup;\n                if (spellbookKeys.length > 1) {\n                    spellbookGroup = {\n                        id: `${spellGroup.id}-${key}`,\n                        name: Utils.localize(spellbook.label) || spellbook.name,\n                        type: 'system-derived',\n                        settings: { style: 'tab' },\n                    };\n                    this.addGroup(spellbookGroup, spellGroup);\n                }\n\n                // todo add roll icons\n                const basicActions = [\n                    {\n                        id: `casterLevel-${key}`,\n                        name: Utils.localize('PF1.CasterLevelCheck'),\n                        encodedValue: this.#_encodeData(ROLL_TYPE.casterLevel, 'casterLevel', { book: key }),\n                    },\n                    {\n                        id: `concentration-${key}`,\n                        name: Utils.localize('PF1.ConcentrationCheck'),\n                        encodedValue: this.#_encodeData(ROLL_TYPE.concentration, 'concentration', { book: key }),\n                    },\n                ];\n                this.addActions(basicActions, spellbookGroup);\n\n                let prepFilter;\n                switch (Settings.spellPreparation) {\n                    case 'allSpells':\n                        prepFilter = (_spell) => true;\n                        break;\n                    case 'allPrepared':\n                        prepFilter = (spell) => !!spell.maxCharges;\n                        break;\n                    case 'onlyRemaining':\n                    default:\n                        prepFilter = (spell) => (spell.charges || 0) - (spell.slotCost || 0) >= 0;\n                        // todo v10\n                        //prepFilter = (spell) => !!spell.canUse;\n                        break;\n                }\n\n                const bookSpells = allSpells.filter((spell) => spell.system.spellbook === key && prepFilter(spell));\n\n                for (const level of levels) {\n                    const levelGroup = {\n                        id: `${spellbookGroup.id}-${level}`,\n                        name: Utils.localize(`PF1.SpellLevels.${level}`),\n                        type: 'system-derived',\n                    };\n\n                    const spellLevel = spellbook.spells[`spell${level}`];\n                    if (level && spellbook.spontaneous && spellLevel.max) {\n                        levelGroup.info1 = { text: `${spellLevel.value || 0}/${spellLevel.max}` };\n                    }\n\n                    this.addGroup(levelGroup, spellbookGroup);\n\n                    const itemChargeInfo = (spell) => spellbook.spontaneous\n                        ? {}\n                        : { text: spell.maxCharges === Number.POSITIVE_INFINITY ? '' : `${spell.charges}/${spell.maxCharges}` };\n\n                    const levelSpells = bookSpells.filter((item) => item.system.level === level);\n                    await this.#_addItemActions(levelSpells, levelGroup, { itemChargeInfo, actionChargeInfo: () => ({}) });\n                }\n            }\n        }\n\n        /**\n         * @param {{id: string, name: string, filter: (item: ItemPF) => booelean}} parentGroup\n         * @param {boolean} includeUnusable\n         */\n        async #_buildFilteredItemActions(parentGroup, includeUnusable = false) {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            const { filter } = parentGroup;\n\n            const filtered = this.actorData.items.filter(filter);\n            await this.#_addItemActions(filtered, parentGroup);\n\n            if (includeUnusable) {\n                const unusable = this.actorData.unusableItems.filter(filter);\n                const itemGroup = {\n                    id: `${parentGroup.id}-unusable`,\n                    name: Utils.localize('PF1.ActivationTypePassive'),\n                    type: 'system-derived',\n                };\n                this.addGroup(itemGroup, parentGroup);\n                await this.#_addItemActions(unusable, itemGroup);\n            }\n        }\n\n        #_encodeData = (\n            rollType,\n            actionId,\n            extraData = {},\n        ) => JSON.stringify({\n            rollType,\n            actionId,\n            actorId: this.actorData.isMulti ? '' : this.actorData.actorId,\n            tokenId: this.actorData.isMulti ? '' : this.actorData.tokenId,\n            isMulti: this.actorData.isMulti,\n            ...extraData,\n        });\n\n        /**\n         * @param {Array<Item>} items\n         * @param {object} parentGroupData\n         * @param {object} [options]\n         * @param {(item: Item) => string} [options.itemChargeInfo]\n         * @param {(action: Action) => Promise<{ text: string, class?: string }>} [options.actionChargeInfo]\n         * @param {'onlyItems' | 'onlyActions' | 'categorized'} [options.actionLayout]\n         * @returns {Promise}\n         */\n        async #_addItemActions(\n            items,\n            parentGroupData, {\n                itemChargeInfo = null,\n                actionChargeInfo = null,\n                actionLayout = Settings.actionLayout,\n            } = {}) {\n            if (this.actorData.isMulti) {\n                return;\n            }\n\n            const info1 = (_item) => ({});\n            const info2 = (_item) => ({});\n\n            itemChargeInfo ??= (item) => item.maxCharges && item.maxCharges !== Number.POSITIVE_INFINITY\n                ? { text: `${item.charges}/${item.maxCharges}`, class: 'charged' }\n                : {};\n            actionChargeInfo ??= async (action) => {\n                const { self } = action.uses;\n                const cost = await action.getChargeCost();\n                const values = [];\n                if (cost) {\n                    values.push(cost);\n                }\n                if (action.isSelfCharged && self.max) {\n                    values.push(`${self.value}/${self.max}`)\n                }\n                return { text: values.join(', '), class: 'charged' };\n            }\n\n            const mapItemToAction = (item, idType) => ({\n                id: `${item.id}-${idType}-${item.id}`,\n                img: item.img,\n                name: item.name,\n                encodedValue: this.#_encodeData(ROLL_TYPE.item, item.id),\n                info1: info1(item),\n                info2: info2(item),\n                info3: itemChargeInfo(item),\n            });\n            const mapSubActionToAction = async (item, action, idType, { name } = { name: action.name }) => ({\n                id: `${idType}-${item.id}-${action.id}`,\n                img: action.img || item.img,\n                name: name,\n                encodedValue: this.#_encodeData(ROLL_TYPE.item, item.id, { subActionId: action.id }),\n                info1: info1(item),\n                info2: info2(item),\n                info3: await actionChargeInfo(action),\n            });\n\n            switch (actionLayout) {\n                case 'onlyItems': {\n                    const actions = items.map((item) => mapItemToAction(item, 'onlyItems'));\n                    this.addActions(actions, parentGroupData);\n                } break;\n                case 'onlyActions': {\n                    const actions = await Promise.all(items.flatMap((item) => (Utils.getItemActions(item).length > 1 || item.type === 'buff')\n                        ? Utils.getItemActions(item).map((action) => mapSubActionToAction(item, action, 'onlyActions', { name: `${item.name} - ${action.name}` }))\n                        : mapItemToAction(item, 'onlyActions'))\n                    );\n                    this.addActions(actions, parentGroupData);\n                } break;\n                case 'categorized':\n                default: {\n                    for (const item of items) {\n                        if (Utils.getItemActions(item).length > 1) {\n                            const subActions = await Promise.all(item.actions.map((action) => mapSubActionToAction(item, action, 'categorized')));\n\n                            const groupData = {\n                                id: `${parentGroupData.id}-${item.id}`,\n                                info1: itemChargeInfo(item),\n                                name: item.name,\n                                type: 'system-derived',\n                            };\n                            this.addGroup(groupData, parentGroupData);\n                            this.addActions(subActions, groupData);\n                        }\n                        else {\n                            // has a use script call or a single action\n                            const action = mapItemToAction(item, 'categorized');\n                            this.addActions([action], parentGroupData);\n                        }\n                    }\n                } break;\n            }\n        }\n    }\n});\n","import { Utils } from './utils.js'\n\n// Core Module Imports\nimport { MODULE, ROLL_TYPE } from './constants.js';\nimport { RollHandlerActorData } from './models/actor-data.js';\nimport { Settings } from './settings.js';\n\nexport let RollHandler = null\n\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\n    RollHandler = class RollHandler extends coreModule.api.RollHandler {\n\n        actorData = new RollHandlerActorData();\n\n        get skipActionDialog() {\n            const skip = Settings.pf1SkipActionDialogs;\n            return skip !== this.isShift;\n        }\n\n        #logInvalidMulti = () => {\n            console.error(`TAH - this shouldn't happen`, action);\n            ui.notifications.warn(`TAH tried to perform an action that wasn't intended for multiple tokens`);\n        };\n\n        #logInvalidAction = () => {\n            console.error(`TAH - this shouldn't happen`, action);\n            ui.notifications.warn(`TAH tried to perform an action that doesn't exist`);\n        }\n\n        /**\n         * Handle Action Event\n         * @override\n         * @param {object} event\n         * @param {string} encodedValue\n         */\n        async handleActionClick(event, encodedValue) {\n            const action = JSON.parse(encodedValue);\n            this.actorData = new RollHandlerActorData(action);\n\n            const { actionId, actor, actors, book, enable, rollType, tokens } = this.actorData;\n\n            switch (rollType) {\n                case ROLL_TYPE.abilityCheck: await Promise.all(actors.map((actor) => actor.rollAbilityTest(actionId, { skipDialog: this.skipActionDialog }))); break;\n                case ROLL_TYPE.addToCombat: await this.#_addToCombat(); break;\n                case ROLL_TYPE.bab: await Promise.all(actors.map((actor) => actor.rollBAB({ skipDialog: this.skipActionDialog }))); break;\n                case ROLL_TYPE.buff: await this.#_rollBuff(); break;\n                case ROLL_TYPE.casterLevel: this.actorData.isMulti ? this.#logInvalidMulti() : await actor.rollCL(book, { skipDialog: this.skipActionDialog }); break;\n                case ROLL_TYPE.cmb: await Promise.all(actors.map((actor) => actor.rollAttack({ maneuver: true, skipDialog: this.skipActionDialog }))); break;\n                case ROLL_TYPE.concentration: this.actorData.isMulti ? this.#logInvalidMulti() : await actor.rollConcentration(book, { skipDialog: this.skipActionDialog }); break;\n                case ROLL_TYPE.condition: await Promise.all(actors.map((actor) => actor.setCondition(actionId, enable))); break;\n                case ROLL_TYPE.defenses: await Promise.all(tokens.map((token) => token.actor.displayDefenseCard({ token }))); break;\n                case ROLL_TYPE.endTurn: this.#_endTurn(); break;\n                case ROLL_TYPE.initiative: await Promise.all(actors.map((actor) => actor.rollInitiative({ createCombatants: true, skipDialog: this.skipActionDialog, rerollInitiative: game.user.isGM }))); break;\n                case ROLL_TYPE.item: await this.#_rollItem(); break;\n                case ROLL_TYPE.makeInvisible: await this.#_makeInvisible(); break;\n                case ROLL_TYPE.makeVisible: await this.#_makeVisible(); break;\n                case ROLL_TYPE.melee: await Promise.all(actors.map((actor) => actor.rollAttack({ skipDialog: this.skipActionDialog, ranged: false }))); break;\n                case ROLL_TYPE.openSettings: await this.#_openSettings(); break;\n                case ROLL_TYPE.openTokenConfig: tokens.map((token) => new TokenConfig(token.document).render(true)); break;\n                case ROLL_TYPE.ranged: await Promise.all(actors.map((actor) => actor.rollAttack({ skipDialog: this.skipActionDialog, ranged: true }))); break;\n                case ROLL_TYPE.removeFromCombat: await this.#_removeFromCombat(); break;\n                case ROLL_TYPE.rest: await this.#_rest(); break;\n                case ROLL_TYPE.save: await Promise.all(actors.map((actor) => actor.rollSavingThrow(actionId, { skipDialog: this.skipActionDialog }))); break;\n                case ROLL_TYPE.skill: await Promise.all(actors.map((actor) => actor.rollSkill(actionId, { skipDialog: this.skipActionDialog }))); break;\n                case ROLL_TYPE.toggleSkip: await this.#_toggleSkipDialog(); break;\n                case ROLL_TYPE.toggleTahGrid: await this.#_toggleTahGrid(); break;\n                case ROLL_TYPE.toggleUntrainedSkills: await this.#_toggleUntrainedSkills(); break;\n                default: this.#logInvalidAction(); break;\n            }\n        }\n\n        async #_addToCombat() {\n            if (canvas.tokens.controlled.length) {\n                await canvas.tokens.toggleCombat(true, game.combat);\n            }\n            else {\n                const { actorId, tokenId } = this.actorData;\n                if (!(game.combat?.combatants || []).find((combatant) => combatant.actorId === actorId)) {\n                    await Combatant.create({ actorId, tokenId }, { parent: game.combat });\n                }\n            }\n            Hooks.callAll('forceUpdateTokenActionHud');\n        }\n\n        async #_endTurn() {\n            if (this.actorData.isMulti) {\n                this.#logInvalidMulti();\n                return;\n            }\n\n            const combat = game.combat;\n            if (combat && this.actorData.isCurrentCombatant) {\n                await combat.nextTurn();\n            }\n        }\n\n        async #_makeVisible() {\n            const updates = this.actorData.tokens\n                .filter((token) => token.document.hidden)\n                .map(t => ({ _id: t.id, hidden: false }));\n            await canvas.scene.updateEmbeddedDocuments(\"Token\", updates);\n        }\n\n        async #_makeInvisible() {\n            const updates = this.actorData.tokens\n                .filter((token) => !token.document.hidden)\n                .map(t => ({ _id: t.id, hidden: true }));\n            await canvas.scene.updateEmbeddedDocuments(\"Token\", updates);\n        }\n\n        async #_openSettings() {\n            new SettingsConfig().render(true);\n            await new Promise(r => setTimeout(r, 100)).then(() => ui.activeWindow.activateTab(MODULE.ID));\n        }\n\n        async #_removeFromCombat() {\n            const combat = game.combat;\n            if (!combat) {\n                return;\n            }\n\n            if (canvas.tokens.controlled.length) {\n                await canvas.tokens.toggleCombat(false, combat);\n            }\n            else {\n                const { actorId, tokenId } = this.actorData;\n                const combatant = combat.combatants.find((combatant) => combatant.actorId === actorId && combatant.tokenId === tokenId);\n                if (combatant) {\n                    await combat.deleteEmbeddedDocuments('Combatant', [combatant.id]);\n                }\n            }\n\n            Hooks.callAll('forceUpdateTokenActionHud');\n        }\n\n        async #_rest() {\n            pf1.utils.party.rest({ actors: this.actorData.actors });\n        }\n\n        async #_rollBuff() {\n            const { enable, isMulti, item: buff } = this.actorData;\n            if (isMulti) {\n                this.#logInvalidMulti();\n                return;\n            }\n\n            if (this.isRightClick) {\n                buff.sheet.render(true, { focus: true });\n                return;\n            }\n\n            await buff.setActive(enable);\n        }\n\n        async #_rollItem() {\n            if (this.actorData.isMulti) {\n                this.#logInvalidMulti();\n                return;\n            }\n\n            const { item, subAction } = this.actorData;\n\n            if (this.isRightClick) {\n                if (subAction) {\n                    const app = new pf1.applications.component.ItemActionSheet(subAction);\n                    app.render(true);\n                    return;\n                }\n                item.sheet.render(true, { focus: true });\n                return;\n            }\n\n            if (subAction) {\n                item.use({ actionID: subAction.id, skipDialog: this.skipActionDialog });\n            }\n            else if (Utils.getItemActions(item).size === 1) {\n                const actionId = Utils.getItemActions(item)[0].id;\n                item.use({ actionID: actionId, skipDialog: this.skipActionDialog });\n            }\n            else {\n                if (item.hasAction || item.getScriptCalls(\"use\").length) {\n                    item.use({ skipDialog: this.skipActionDialog });\n                }\n                else {\n                    item.displayCard();\n                }\n            }\n        }\n\n        async #_toggleSkipDialog() {\n            await Settings.toggleSkipDialog();\n            Hooks.callAll('forceUpdateTokenActionHud');\n        }\n\n        async #_toggleTahGrid() {\n            await Settings.toggleTahGrid();\n            Hooks.callAll('forceUpdateTokenActionHud');\n        }\n\n        async #_toggleUntrainedSkills() {\n            await Settings.toggleUntrainedSkills();\n            Hooks.callAll('forceUpdateTokenActionHud');\n        }\n    }\n});\n","// System Module Imports\nimport { GROUPS } from './groups.js'\nimport { HudBuilder } from './hud-builder.js';\nimport { RollHandler as Core } from './roll-handler.js'\nimport { Utils } from './utils.js';\nimport * as systemSettings from './settings.js'\n\nexport let SystemManager = null\n\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\n    SystemManager = class SystemManager extends coreModule.api.SystemManager {\n        // todo - what is this doing?\n        /** @override */\n        doGetCategoryManager(_user) {\n            return new coreModule.api.CategoryManager();\n        }\n\n        /** @override */\n        getActionHandler(categoryManager) {\n            const actionHandler = new HudBuilder(categoryManager);\n            return actionHandler;\n        }\n\n        /** @override */\n        getAvailableRollHandlers() {\n            const coreTitle = Utils.localize('PF1.Default');\n\n            const choices = { core: coreTitle };\n\n            return choices;\n        }\n\n        /** @override */\n        getRollHandler(handlerId) {\n            switch (handlerId) {\n                case 'core':\n                default:\n                    return new Core();\n            }\n        }\n\n        /** @override */\n        registerSettings(updateFunc) {\n            systemSettings.register(updateFunc);\n        }\n\n        /** @override */\n        async registerDefaults() {\n            return GROUPS;\n        }\n    }\n});\n","import { CORE_MODULE, MODULE } from \"../constants\";\nimport { Settings } from \"../settings\";\n\nconst migrate = async () => {\n    game.settings.register(MODULE.ID, 'migrationVersion', {\n        config: false,\n        scope: 'client',\n        default: '',\n        type: String,\n    });\n\n    const lastMigrated = Settings.migrationVersion || 1;\n\n    if (foundry.utils.isNewerVersion('1.2.0', lastMigrated)) {\n        await game.user.unsetFlag(CORE_MODULE.ID, 'categories');\n        await game.user.unsetFlag(CORE_MODULE.ID, 'default.categories');\n    }\n\n    const current = game.modules.get(MODULE.ID).version;\n    Settings.migrationVersion = current;\n};\n\nexport {\n    migrate,\n};\n","import { SystemManager } from './system-manager.js';\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from './constants.js';\nimport { migrate } from './migration/index.js';\n\nHooks.once('ready', async () => {\n    const module = game.modules.get(MODULE.ID);\n    module.api = {\n        requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\n        SystemManager\n    };\n    Hooks.call('tokenActionHudSystemReady', module);\n});\n\nHooks.once('tokenActionHudCoreApiReady', async () => {\n    await migrate();\n});\n"],"names":["Core","systemSettings.register"],"mappings":"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"}