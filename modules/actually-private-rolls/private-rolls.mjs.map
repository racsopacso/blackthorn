{
  "version": 3,
  "sources": ["../src/config.mjs", "../src/settings.mjs", "../src/private-rolls.mjs"],
  "sourcesContent": ["export const CFG = {\n\tid: 'actually-private-rolls',\n\tSETTINGS: {\n\t\thalfBlind: 'halfBlind',\n\t\tallSeeingGM: 'allSeeingGM'\n\t}\n};\n", "import { CFG } from './config.mjs';\n\nconst registerPrivateRollsSettings = () => {\n\tgame.settings.register(CFG.id, CFG.SETTINGS.halfBlind, {\n\t\tname: 'ActuallyPrivateRolls.Settings.HalfBlind.Label',\n\t\thint: 'ActuallyPrivateRolls.Settings.HalfBlind.Hint',\n\t\tscope: 'world',\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\trequiresReload: true,\n\t\tconfig: true,\n\t});\n\n\tgame.settings.register(CFG.id, CFG.SETTINGS.allSeeingGM, {\n\t\tname: 'ActuallyPrivateRolls.Settings.AllSeeingGM.Label',\n\t\thint: 'ActuallyPrivateRolls.Settings.AllSeeingGM.Hint',\n\t\tscope: 'world',\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\trequiresReload: true,\n\t\tconfig: true,\n\t});\n}\n\nHooks.once('init', registerPrivateRollsSettings);\n", "import { CFG } from './config.mjs';\nimport './settings.mjs';\n\nconst isMessageVisible = ({ isBlind, isAuthor, isWhisper, whisper } = {}) => {\n\t// GM always sees their own message, even if it's blind GM roll\n\tif (isAuthor && game.user.isGM) return true;\n\t// Blind rolls are not visible to author\n\tif (isBlind && isAuthor) return false;\n\t// Whispers are only visible to recipients and author\n\tif (isWhisper) return isAuthor || whisper.includes(game.user.id);\n\t// All others are visible\n\treturn true;\n}\n\n/**\n * Test message visibility.\n *\n * @param {ChatMessage} cm\n */\nconst getMessageVisibility = (cm) => {\n\tconst cmData = game.release.generation >= 10 ? cm : cm.data,\n\t\twhisper = cmData.whisper ?? [],\n\t\tisWhisper = whisper.length > 0,\n\t\tisBlind = isWhisper && cmData.blind,\n\t\tisAuthor = cm.isAuthor,\n\t\tisVisible = isMessageVisible({ isWhisper, isBlind, isAuthor, whisper });\n\n\treturn { whisper, isWhisper, isBlind, isAuthor, isVisible };\n}\n\n/**\n * Find user name, even if user info has not been initialized yet\n *\n * @param {ChatMessage} cm\n */\nfunction getUserName(cm) {\n\tconst userId = cm._source.user;\n\tconst user = cm.user ?? game.data.users.find(i => i._id == userId);\n\treturn user?.name;\n}\n\n/**\n * Hide private messages entirely.\n *\n * @param {ChatMessage} cm\n * @param {JQuery} html\n */\nconst renderChatMessageEvent = (cm, [html]) => {\n\t// GM always sees everything?\n\tif (game.user.isGM && game.settings.get(CFG.id, CFG.SETTINGS.allSeeingGM)) return;\n\n\tconst { isAuthor, isVisible } = getMessageVisibility(cm);\n\tconst baseMsg = html.dataset.messageId ? html : html.closest('[data-message-id]');\n\tif (game.settings.get(CFG.id, CFG.SETTINGS.halfBlind) && isAuthor && !isVisible) {\n\t\tbaseMsg?.querySelector('.message-content')?.replaceChildren();\n\t\tconst header = baseMsg?.querySelector('.message-header');\n\t\tconst flavor = header?.querySelector('.flavor-text');\n\t\tif (!flavor) {\n\t\t\tconst msg = document.createElement('span');\n\t\t\tmsg.classList.add('flavor-text');\n\t\t\tconst userName = getUserName(cm);\n\t\t\tmsg.textContent = game.i18n.format('ActuallyPrivateRolls.PrivateMessage', { user: userName });\n\t\t\theader?.append(msg);\n\t\t}\n\t}\n\telse\n\t\tbaseMsg.classList.toggle('actually-private-roll', !isVisible);\n}\n\nHooks.on('renderChatMessage', renderChatMessageEvent);\n// Hooks.on('updateChatMessage', ...); // unnecessary\n\n/**\n * Eliminate new message notification if the message is not visible.\n *\n * @param {Function} wrapped\n * @param {ChatMessage} cm\n */\nfunction chatLogNotifyWrapper(wrapped, cm) {\n\tconst { isVisible } = getMessageVisibility(cm);\n\tif (!isVisible) return;\n\twrapped.call(this, cm);\n}\n\nHooks.once('init', () => {\n\t// BUG: This might not work on all systems, in case they extend ChatLog\n\t/* global libWrapper */\n\tlibWrapper.register(CFG.id, 'ChatLog.prototype.notify', chatLogNotifyWrapper, libWrapper.MIXED);\n});\n\nHooks.once('ready', () => {\n\tconst mod = game.modules.get(CFG.id);\n\tconsole.log('Actually Private Rolls |', mod.version);\n});\n"],
  "mappings": "gHAAO,IAAM,IAAM,CAClB,GAAI,yBACJ,SAAU,CACT,UAAW,YACX,YAAa,aACd,CACD,ECJA,IAAM,6BAA+B,WAAM,CAC1C,KAAK,SAAS,SAAS,IAAI,GAAI,IAAI,SAAS,UAAW,CACtD,KAAM,gDACN,KAAM,+CACN,MAAO,QACP,KAAM,QACN,QAAS,GACT,eAAgB,GAChB,OAAQ,EACT,CAAC,EAED,KAAK,SAAS,SAAS,IAAI,GAAI,IAAI,SAAS,YAAa,CACxD,KAAM,kDACN,KAAM,iDACN,MAAO,QACP,KAAM,QACN,QAAS,GACT,eAAgB,GAChB,OAAQ,EACT,CAAC,CACF,EApBqC,gCAsBrC,MAAM,KAAK,OAAQ,4BAA4B,ECrB/C,IAAM,iBAAmB,QAAC,CAAE,QAAS,SAAU,UAAW,OAAQ,EAAI,CAAC,IAElE,UAAY,KAAK,KAAK,KAAa,GAEnC,SAAW,SAAiB,GAE5B,UAAkB,UAAY,QAAQ,SAAS,KAAK,KAAK,EAAE,EAExD,GARiB,oBAgBnB,qBAAuB,OAAC,IAAO,CACpC,IAAM,OAAS,KAAK,QAAQ,YAAc,GAAK,GAAK,GAAG,KACtD,QAAU,OAAO,SAAW,CAAC,EAC7B,UAAY,QAAQ,OAAS,EAC7B,QAAU,WAAa,OAAO,MAC9B,SAAW,GAAG,SACd,UAAY,iBAAiB,CAAE,UAAW,QAAS,SAAU,OAAQ,CAAC,EAEvE,MAAO,CAAE,QAAS,UAAW,QAAS,SAAU,SAAU,CAC3D,EAT6B,wBAgB7B,SAAS,YAAY,GAAI,CACxB,IAAM,OAAS,GAAG,QAAQ,KAE1B,OADa,GAAG,MAAQ,KAAK,KAAK,MAAM,KAAK,GAAK,EAAE,KAAO,MAAM,IACpD,IACd,CAJS,kCAYT,IAAM,uBAAyB,QAAC,GAAI,CAAC,IAAI,IAAM,CAE9C,GAAI,KAAK,KAAK,MAAQ,KAAK,SAAS,IAAI,IAAI,GAAI,IAAI,SAAS,WAAW,EAAG,OAE3E,GAAM,CAAE,SAAU,SAAU,EAAI,qBAAqB,EAAE,EACjD,QAAU,KAAK,QAAQ,UAAY,KAAO,KAAK,QAAQ,mBAAmB,EAChF,GAAI,KAAK,SAAS,IAAI,IAAI,GAAI,IAAI,SAAS,SAAS,GAAK,UAAY,CAAC,UAAW,CAChF,SAAS,cAAc,kBAAkB,GAAG,gBAAgB,EAC5D,IAAM,OAAS,SAAS,cAAc,iBAAiB,EAEvD,GAAI,CADW,QAAQ,cAAc,cAAc,EACtC,CACZ,IAAM,IAAM,SAAS,cAAc,MAAM,EACzC,IAAI,UAAU,IAAI,aAAa,EAC/B,IAAM,SAAW,YAAY,EAAE,EAC/B,IAAI,YAAc,KAAK,KAAK,OAAO,sCAAuC,CAAE,KAAM,QAAS,CAAC,EAC5F,QAAQ,OAAO,GAAG,CACnB,CACD,MAEC,QAAQ,UAAU,OAAO,wBAAyB,CAAC,SAAS,CAC9D,EApB+B,0BAsB/B,MAAM,GAAG,oBAAqB,sBAAsB,EASpD,SAAS,qBAAqB,QAAS,GAAI,CAC1C,GAAM,CAAE,SAAU,EAAI,qBAAqB,EAAE,EACxC,WACL,QAAQ,KAAK,KAAM,EAAE,CACtB,CAJS,oDAMT,MAAM,KAAK,OAAQ,IAAM,CAGxB,WAAW,SAAS,IAAI,GAAI,2BAA4B,qBAAsB,WAAW,KAAK,CAC/F,CAAC,EAED,MAAM,KAAK,QAAS,IAAM,CACzB,IAAM,IAAM,KAAK,QAAQ,IAAI,IAAI,EAAE,EACnC,QAAQ,IAAI,2BAA4B,IAAI,OAAO,CACpD,CAAC",
  "names": []
}
