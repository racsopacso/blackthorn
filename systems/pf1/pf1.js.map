{"version":3,"file":"pf1.js","sources":["module/patch-core.mjs","module/compendium-directory.mjs","module/chatlog.mjs","module/utils/internal.mjs","module/socket.mjs","module/utils/semver.mjs","module/documents/macros.mjs","module/utils/chat.mjs","module/documents/actor/actor-base.mjs","module/documents/actor/actor-proxy.mjs","module/documents/item/item-base.mjs","module/documents/item/item-proxy.mjs","module/tours/base-tours.mjs","module/tours/actor-sheet-tour.mjs","module/tours.mjs","module/config.mjs","module/const.mjs","module/applications/compendium-browser/filters/base.mjs","node_modules/fuzzysort/fuzzysort.js","module/applications/compendium-browser/compendium-browser.mjs","module/applications/mixins/no-autocomplete.mjs","module/applications/trait-selector.mjs","module/applications/mixins/drag-drop.mjs","module/applications/abstract-list-selector.mjs","module/applications/damage-resistance-selector.mjs","module/applications/actor/actor-rest.mjs","module/applications/point-buy-calculator.mjs","module/applications/item-picker.mjs","module/applications/settings/abstract-settings.mjs","module/dice/roll.mjs","module/models/fields/formula-field.mjs","module/applications/settings/experience.mjs","module/applications/settings/health.mjs","module/applications/settings/integration.mjs","module/applications/settings/performance.mjs","module/documents/settings.mjs","module/applications/level-up.mjs","module/applications/currency-transfer.mjs","module/utils/handlebars/templates.mjs","module/applications/actor/actor-sheet.mjs","module/applications/actor/character-sheet.mjs","module/applications/actor/npc-sheet.mjs","module/applications/actor/npc-lite-sheet.mjs","module/applications/actor/npc-loot-sheet.mjs","module/applications/actor/haunt-sheet.mjs","module/applications/actor/trap-sheet.mjs","module/applications/actor/vehicle-sheet.mjs","module/applications/speed-editor.mjs","module/applications/categorized-item-picker.mjs","module/applications/flag-selector.mjs","module/applications/item/item-sheet.mjs","module/applications/item/container-sheet.mjs","module/applications/item/item-create.mjs","module/applications/component/action-sheet.mjs","module/applications/compendium-browser/filters/checkbox.mjs","module/applications/compendium-browser/filters/text.mjs","module/applications/compendium-browser/filters/number-range.mjs","module/applications/compendium-browser/filters/item.mjs","module/applications/compendium-browser/filters/common.mjs","module/applications/compendium-browser/filters/spell.mjs","module/applications/compendium-browser/filters/feat.mjs","module/applications/compendium-browser/filters/class.mjs","module/applications/compendium-browser/filters/race.mjs","module/applications/compendium-browser/filters/buff.mjs","module/applications/compendium-browser/filters/creature.mjs","module/applications/compendium-browser/buff-browser.mjs","module/applications/compendium-browser/class-browser.mjs","module/applications/compendium-browser/creature-browser.mjs","module/applications/compendium-browser/feat-browser.mjs","module/applications/compendium-browser/item-browser.mjs","module/applications/compendium-browser/race-browser.mjs","module/applications/compendium-browser/spell-browser.mjs","module/applications/journal/journal-text-sheet.mjs","module/applications/utils/co-edit.mjs","module/applications/action-selector.mjs","module/action-use/chat-attack.mjs","module/action-use/action-use.mjs","module/applications/attack-dialog.mjs","module/applications/change-log.mjs","module/applications/damage-type-selector.mjs","module/applications/abstract-document-selector.mjs","module/applications/item-selector.mjs","module/applications/help-browser.mjs","module/applications/script-editor.mjs","module/applications/senses-selector.mjs","module/applications/skill-editor.mjs","module/applications/content-source-editor.mjs","module/applications/vision-sharing.mjs","module/applications/experience-distributor.mjs","module/applications/change-editor.mjs","module/applications/sidebar/items-directory.mjs","module/applications/troubleshooter.mjs","module/applications/actor-selector.mjs","module/applications/split-stack.mjs","module/applications/html-editor.mjs","module/applications/apply-damage.mjs","module/applications/_module.mjs","module/applications/entry-selector.mjs","module/documents/active-effect.mjs","module/documents/chat-message.mjs","module/documents/combat.mjs","module/documents/combatant.mjs","module/documents/controls.mjs","module/documents/token.mjs","module/documents/actor/utils/apply-changes.mjs","module/documents/actor/utils/spellbook.mjs","module/documents/actor/components/resource.mjs","module/documents/actor/actor-pf.mjs","module/documents/actor/abstract/base-character.mjs","module/documents/actor/actor-character.mjs","module/documents/actor/actor-npc.mjs","module/documents/actor/actor-haunt.mjs","module/documents/actor/actor-trap.mjs","module/documents/actor/actor-vehicle.mjs","module/documents/item/item-pf.mjs","module/documents/item/item-attack.mjs","module/documents/item/item-buff.mjs","module/documents/item/item-class.mjs","module/documents/item/item-physical.mjs","module/documents/item/item-consumable.mjs","module/documents/item/item-container.mjs","module/documents/item/item-equipment.mjs","module/documents/item/item-feat.mjs","module/documents/item/item-loot.mjs","module/documents/item/item-race.mjs","module/documents/item/item-spell.mjs","module/documents/item/item-weapon.mjs","module/documents/item/item-implant.mjs","module/models/fields/id-field.mjs","module/models/abstract/prepared-model.mjs","module/models/abstract/document-like-model.mjs","module/models/ae/ae-base.mjs","module/models/ae/ae-buff.mjs","module/models/mixins/compacting-mixin.mjs","module/models/action/damage-part-model.mjs","module/models/action/extra-attack-model.mjs","module/models/mixins/replaceable-source.mjs","module/models/chat/base-message.mjs","module/models/chat/item-message.mjs","module/models/chat/action-message.mjs","module/models/chat/check-message.mjs","module/models/actor/haunt-model.mjs","module/models/actor/trap-model.mjs","module/models/actor/vehicle-model.mjs","module/chat/text-enrichers.mjs","module/chat/chat-commands.mjs","module/canvas/measure.mjs","module/canvas/attack-reach.mjs","module/canvas/low-light-vision.mjs","module/canvas/token.mjs","module/canvas/detection-modes.mjs","module/canvas/vision-modes.mjs","module/canvas/token-hud.mjs","module/canvas/ability-template.mjs","module/dice/d20roll.mjs","module/dice/damage-roll.mjs","module/dice/terms/function-term.mjs","module/dice/terms/string-term.mjs","module/components/action.mjs","module/components/change.mjs","module/components/conditionals.mjs","module/components/script-call.mjs","module/components/context-note.mjs","module/utils/handlebars/helpers.mjs","module/utils/canvas.mjs","module/utils/dialog.mjs","module/utils/currency.mjs","module/utils/formulas.mjs","module/utils/roll-functions.mjs","module/utils/initialization.mjs","module/utils/roll-data.mjs","module/utils/i18n.mjs","module/utils/packs.mjs","module/utils/party.mjs","module/utils/lib.mjs","module/registry/base-registry.mjs","module/registry/damage-types.mjs","module/registry/materials.mjs","module/registry/script-call.mjs","module/registry/conditions.mjs","module/registry/sources.mjs","module/migration/migration-category.mjs","module/migration/migration-state.mjs","module/applications/migration/migration-issues-dialog.mjs","module/applications/migration/migration-dialog.mjs","module/migration/asset-moves.mjs","module/migration.mjs","pf1.mjs","module/modules.mjs","module/canvas/token-ruler.mjs","module/calendar.mjs"],"sourcesContent":["// Document link attribute stuffing\n{\n  const origFunc = TextEditor._createContentLink;\n  TextEditor._createContentLink = async function (match, { relativeTo } = {}) {\n    const name = match[4];\n    const a = await origFunc.call(this, match, { relativeTo });\n    if (name?.indexOf(\"::\") > -1) {\n      const args = name.split(\"::\"),\n        label = args.pop();\n      if (args.length) {\n        args.forEach((o) => {\n          let [key, value] = o.split(/(?<!\\\\):/);\n          if (!(key && value)) {\n            value = key;\n            key = \"extra\";\n          }\n          switch (key) {\n            case \"icon\":\n              a.firstChild.className = \"fa-solid fa-\" + value;\n              break;\n            case \"class\":\n              a.classList.add(...value.split(\" \"));\n              break;\n            default:\n              a.setAttribute(\"data-\" + key, value);\n          }\n        });\n        a.lastChild.textContent = label;\n      }\n    }\n    return a;\n  };\n}\n\n// Patch the `fromData` method used by Foundry to allow rolls from builds with a renamed roll class\n// to still be created from JSON for tooltips etc.\n// Introduced in v0.81.1 for Foundry v9.269\n// RollPF2 added with PF1 v11.1 for Foundry v12.331\n{\n  const origFunc = Roll.fromData;\n  Roll.fromData = function (data, ...args) {\n    if ([\"RollPF$1\", \"RollPF2\"].includes(data.class)) data.class = \"RollPF\";\n    return origFunc.call(this, data, ...args);\n  };\n}\n\n/**\n * Patch ImagePopout image share handling function to respect identified status of items\n *\n * Synchronized with Foundry VTT v12.331\n *\n * HACK: This breaks Foundry API by turning it into async function, but since this is a socket handler, that should not matter.\n *\n * @see https://github.com/foundryvtt/foundryvtt/issues/8953\n */\n{\n  const original_handleShareImage = ImagePopout._handleShareImage;\n  ImagePopout._handleShareImage = async function ({ image, title, caption, uuid, showTitle } = {}) {\n    const doc = await fromUuid(uuid);\n    if (doc instanceof Item) {\n      title = doc.name;\n    }\n\n    return original_handleShareImage.call(this, { image, title, caption, uuid, showTitle });\n  };\n}\n\n/**\n * Stop releasing modifiers on HTMLButtonElement. Check again on proper support of popouts. How blur is handled will have to be reevaluated\n *\n * Introduced Foundry VTT v10.291\n * Still needed with v12.331\n */\n{\n  KeyboardManager.prototype._onFocusIn = function (event) {\n    const formElements = [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLOptionElement];\n\n    if (event.target.isContentEditable || formElements.some((cls) => event.target instanceof cls)) {\n      this.releaseKeys();\n    }\n  };\n\n  Object.defineProperty(KeyboardManager.prototype, \"hasFocus\", {\n    get() {\n      // Pulled from https://www.w3schools.com/html/html_form_elements.asp\n      const formElements = [\"input\", \"select\", \"textarea\", \"option\", \"[contenteditable]\"];\n      const selector = formElements.map((el) => `${el}:focus`).join(\", \");\n      return document.querySelectorAll(selector).length > 0;\n    },\n  });\n}\n","const buttons = {\n  spells: { label: \"PF1.BrowseSpells\" },\n  items: { label: \"PF1.BrowseItems\" },\n  bestiary: { label: \"PF1.BrowseBestiary\" },\n  feats: { label: \"PF1.BrowseFeats\" },\n  classes: { label: \"PF1.BrowseClasses\" },\n  races: { label: \"PF1.BrowseRaces\" },\n  buffs: { label: \"PF1.BrowseBuffs\", wide: true },\n};\n\n/**\n * @param {Event} event - Triggering event\n */\nfunction compendiumButtonClick(event) {\n  event.preventDefault();\n  const type = event.target.dataset.category;\n  pf1.applications.compendiums[type]._render(true, { focus: true });\n}\n\n/**\n * Render compendium browser buttons.\n *\n * @param {CompendiumDirectory} app\n * @param {HTMLElement|JQuery} html\n * @param {object} options\n */\nHooks.on(\"renderCompendiumDirectory\", async (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n\n  if (html.querySelector(\"section.pf1.action-buttons\")) return; // Avoid duplicating the buttons\n\n  let element;\n  if (game.release.generation >= 13) {\n    element = document.createElement(\"section\");\n    html.append(element);\n  } else {\n    element = html.querySelector(\"footer.directory-footer\");\n  }\n  element.classList.add(\"pf1\", \"action-buttons\");\n  if (game.release.generation >= 13) element.classList.add(\"v13\");\n\n  for (const [category, info] of Object.entries(buttons)) {\n    const button = document.createElement(\"button\");\n    button.type = \"button\";\n    button.dataset.category = category;\n    button.classList.add(\"compendium\", category);\n    button.innerText = game.i18n.localize(info.label);\n    if (info.wide) button.classList.add(\"colspan-2\");\n    element.append(button);\n    button.addEventListener(\"click\", compendiumButtonClick);\n  }\n});\n\n// Add compendium sidebar context options\nfunction toggleCompendiumVisibility(html, entries) {\n  // Add option to enable & disable pack\n  entries.unshift(\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.HidePack\"),\n      icon: '<i class=\"fa-solid fa-low-vision\"></i>',\n      condition: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled !== true;\n      },\n      callback: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: true } });\n      },\n    },\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.ShowPack\"),\n      icon: '<i class=\"fa-solid fa-eye\"></i>',\n      condition: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled === true;\n      },\n      callback: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: false } });\n      },\n    }\n  );\n}\n\n/**\n * @param {CompendiumDirectory} app\n * @param {HTMLElement} html\n */\nfunction displayCompendiumVisibility(app, html) {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n\n  for (const li of html.querySelectorAll(\"li[data-pack]\")) {\n    const pack = game.packs.get(li.dataset.pack);\n    const hidden = pack.config.pf1?.disabled === true;\n    if (!hidden) continue;\n\n    const el = li.querySelector(\".status-icons\");\n    const hiddenIcon = document.createElement(\"i\");\n    hiddenIcon.classList.add(\"fa-solid\", \"fa-filter-circle-xmark\");\n    hiddenIcon.dataset.tooltip = \"PF1.Hidden\"; // TODO: Add better tooltip\n    hiddenIcon.ariaLabel = game.i18n.localize(\"PF1.Hidden\");\n    el.prepend(hiddenIcon);\n  }\n}\n\nHooks.on(\"getCompendiumDirectoryEntryContext\", toggleCompendiumVisibility); // v12\nHooks.on(\"getCompendiumContextOptions\", toggleCompendiumVisibility); // v13\nHooks.on(\"renderCompendiumDirectory\", displayCompendiumVisibility);\n","const getMessage = (html) => game.messages.get(html.dataset.messageId);\nconst isOwnedSpellCard = (msg) => {\n  const item = msg.itemSource;\n  return item && item.type === \"spell\" && item.isOwner && !!item.actor;\n};\n\n/**\n * @param {ChatLog} app\n * @param {object[]} entries - Context menu entries\n */\nfunction spellCardContextMenu(app, entries) {\n  entries.unshift(\n    {\n      name: \"PF1.Chat.FocusReference\",\n      id: \"pf1-focus-reference\", // made up ID field so modules can recognize this\n      icon: '<i class=\"fa-solid fa-magnifying-glass context-icon pf1 focus-reference\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        return fromUuidSync(getMessage(html)?.system.reference) instanceof ChatMessage;\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        /** @type {ChatMessage} */\n        const msg = fromUuidSync(getMessage(html).system.reference);\n        /** @type {HTMLElement} */\n        const log = html.closest(\".chat-message[data-message-id]\").parentElement;\n        log.querySelector(`.chat-message[data-message-id='${msg.id}']`).scrollIntoView({ block: \"start\" });\n      },\n    },\n    {\n      name: \"PF1.ConcentrationCheck\",\n      id: \"pf1-roll-concentration\",\n      icon: '<i class=\"fa-solid fa-brain context-icon pf1 concentration\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        isOwnedSpellCard(getMessage(html));\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollConcentration(item.system.spellbook, { messageId: msg.id, reference: msg.uuid });\n      },\n    },\n    {\n      name: \"PF1.CasterLevelCheck\",\n      id: \"pf1-roll-caster-level\",\n      icon: '<i class=\"fa-solid fa-wand-magic-sparkles context-icon pf1 caster-level\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        return isOwnedSpellCard(getMessage(html));\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollCL(item.system.spellbook, { messageId: msg.id, reference: msg.uuid });\n      },\n    }\n    // TODO: Roll ASF option\n  );\n}\n\nHooks.on(\"getChatLogEntryContext\", spellCardContextMenu); // V12 and prior\nHooks.on(\"getChatMessageContextOptions\", spellCardContextMenu); // V13\n","/**\n * Adjusts a string to a number, allowing relative adjustments.\n *\n * @internal\n * @param {number} initialValue - The initial number to use for relative operations.\n * @param {string} cmdStr - The exact string inputted by the user.\n * @param {number} [maxValue=null] - The maximum allowed value for this variable.\n * @param {number} [clearValue=null] - What to change the variable to if the user simply erased the value.\n * @returns {number} The resulting new value.\n */\nexport const adjustNumberByStringCommand = (initialValue, cmdStr, maxValue = null, clearValue = null) => {\n  let result = initialValue;\n  const re = cmdStr.match(/(?<abs>=)?(?<op>[+-]+)?(?<value>\\d+)/);\n  if (re) {\n    const { op: operator, abs, value: rawValue } = re.groups;\n    const isAbsolute = abs == \"=\" || [\"--\", \"++\"].includes(operator) || (!abs && !operator);\n    const isNegative = [\"-\", \"--\"].includes(operator);\n    let value = parseInt(rawValue);\n    if (isNegative) value = -value;\n    result = isAbsolute ? value : initialValue + value;\n  } else if (cmdStr === \"\" && clearValue !== null) {\n    result = clearValue;\n  } else {\n    result = parseFloat(cmdStr || \"0\");\n  }\n\n  if (Number.isFinite(maxValue)) result = Math.min(result, maxValue);\n\n  if (Number.isNaN(result)) {\n    console.warn(\"Input resulted in NaN\", { initial: initialValue, command: cmdStr });\n    result = initialValue;\n  }\n\n  return result;\n};\n\n/**\n * Determine if buff target or buff target category is valid for the defined actor and item.\n *\n * @internal\n * @param {object} data - Buff target or category data\n * @param {object} options - Additional options\n * @param {Actor} [options.actor] - Actor to test\n * @param {Item} [options.item] - Item to test\n * @returns {{actor:boolean,item:boolean,valid:boolean}} - Validity statement\n */\nexport function isValidChangeTarget(data, { actor, item } = {}) {\n  const { filters } = data;\n  if (!filters) return { actor: true, item: true, valid: true };\n\n  let ar = true;\n  if (filters.actor && actor) {\n    const { include, exclude, fn } = filters.actor;\n    if (exclude && exclude.includes(actor.type)) ar = false;\n    else if (include && !include.includes(actor.type)) ar = false;\n    else if (typeof fn === \"function\") ar = fn(data, { actor, item });\n  }\n\n  let ir = true;\n  if (filters.item && item) {\n    const { include, exclude, fn } = filters.item;\n    if (exclude && exclude.includes(item.type)) ir = false;\n    else if (include && !include.includes(item.type)) ir = false;\n    else if (typeof fn === \"function\") ir = fn(data, { actor, item });\n  }\n\n  return {\n    actor: actor ? ar : undefined,\n    item: item ? ir : undefined,\n    valid: ar && ir,\n  };\n}\n\n/**\n * @typedef {object} BuffTargetItem\n * @property {string} [label] - The buff target's label.\n * @property {string} category - The buff target's category.\n * @property {string} [icon] - The URL to an icon.\n */\n/**\n * Assembles an array of all possible buff targets.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to fetch\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Record<string, BuffTargetItem>} The resulting array of buff targets.\n */\nexport function getBuffTargets(type, { actor, item } = {}) {\n  const buffTargets = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargets,\n      contextNotes: pf1.config.contextNoteTargets,\n    }[type]\n  );\n\n  // Append individual skills to buff targets\n  const allowSkills = isValidChangeTarget(pf1.config.buffTargetCategories.skills, { actor, item }).valid;\n\n  if (actor) {\n    const skillTargets = actor._skillTargets ?? [];\n    for (const s of skillTargets) {\n      const skillId = s.split(\".\").slice(1).join(\".\");\n      if (skillId.startsWith(\"~\")) continue; // Skip secondary targets that affect only the parent skill\n      const skill = actor.getSkillInfo(skillId);\n      buffTargets[s] = { label: skill.fullName, category: \"skill\", valid: allowSkills };\n    }\n  } else {\n    for (const [key, label] of Object.entries(pf1.config.skills)) {\n      buffTargets[`skill.${key}`] = { label, category: \"skill\", valid: allowSkills };\n    }\n  }\n\n  // Append spell targets\n  const allowSpells = isValidChangeTarget(pf1.config.buffTargetCategories.spell, { actor, item }).valid;\n\n  const books = actor?.system.attributes?.spells?.spellbooks ?? {\n    primary: { label: game.i18n.localize(\"PF1.SpellBookPrimary\") },\n    secondary: { label: game.i18n.localize(\"PF1.SpellBookSecondary\") },\n    tertiary: { label: game.i18n.localize(\"PF1.SpellBookTertiary\") },\n    spelllike: { label: game.i18n.localize(\"PF1.SpellBookSpelllike\") },\n  };\n\n  // Get actor specific spell targets\n  const spellTargets = actor?._spellbookTargets ?? [];\n\n  // Add spell school DCs and CLs\n  for (const schoolId of Object.keys(pf1.config.spellSchools)) {\n    spellTargets.push(`dc.school.${schoolId}`, `cl.school.${schoolId}`);\n  }\n\n  for (const s of spellTargets) {\n    const re = /^(?<key>\\w+)(?:\\.(?<category>\\w+))?\\.(?<subKey>\\w+)$/.exec(s);\n    if (!re) continue;\n    const { key, category, subKey } = re.groups;\n\n    let subLabel;\n    if (category === \"school\") subLabel = pf1.config.spellSchools[subKey];\n    else subLabel = books[subKey]?.label || subKey;\n\n    const fullKey = category ? `${key}.${category}` : key;\n    const mainLabel = game.i18n.localize(\n      {\n        \"dc.school\": \"PF1.DC\",\n        concn: \"PF1.Concentration\",\n        \"cl.book\": \"PF1.CasterLevel\",\n        \"cl.school\": \"PF1.CasterLevelAbbr\",\n      }[fullKey]\n    );\n\n    buffTargets[s] = {\n      label: `${mainLabel} (${subLabel})`,\n      category: \"spell\",\n      valid: allowSpells,\n    };\n  }\n\n  return buffTargets;\n}\n\n/**\n * @typedef {object} BuffTargetCategory\n * @property {string} label - The category's label.\n */\n/**\n * Assembles an array of buff targets and their categories, ready to be inserted into a Widget_CategorizedItemPicker.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to retrieve\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Widget_CategorizedItemPicker~Category[]}\n */\nexport function getBuffTargetDictionary(type = \"buffs\", { actor, item } = {}) {\n  const buffTargets = getBuffTargets(type, { actor, item });\n\n  // Assemble initial categories and items\n  const targetCategories = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargetCategories,\n      contextNotes: pf1.config.contextNoteCategories,\n    }[type]\n  );\n\n  const categories = Object.values(\n    Object.entries(buffTargets).reduce((cur, [key, { label, category, icon, ...options }]) => {\n      if (!key.startsWith(\"~\")) {\n        cur[category] ??= {\n          key: category,\n          label: targetCategories[category].label,\n          items: [],\n          validity: isValidChangeTarget(targetCategories[category], { actor, item }),\n        };\n\n        cur[category].items.push({\n          key,\n          label,\n          icon,\n          validity: isValidChangeTarget({ key, label, category, icon, ...options }, { actor, item }),\n        });\n      }\n      return cur;\n    }, {})\n  );\n\n  pf1.utils.naturalSort(categories, \"label\");\n\n  // Return result\n  return categories;\n}\n\n/**\n * A locale-safe insertion sort of an Array of Objects, not in place. Ignores punctuation and capitalization.\n * `name` properties in objects will be lowercased.\n *\n * @internal\n * @template T\n * @param {Array.<T & {name: string}>} inputArr - Array to be sorted. Each element must have a name property set\n * @returns {T[]} - New sorted Array\n */\nexport const sortArrayByName = (inputArr) => {\n  inputArr = foundry.utils.deepClone(inputArr);\n  for (const elem of inputArr) {\n    elem.name = elem.name.toLocaleLowerCase();\n  }\n  return pf1.utils.naturalSort(inputArr, \"name\", { numeric: true, ignorePunctuation: true });\n};\n\n/**\n * Variant of TextEditor._createInlineRoll for creating unrolled inline rolls.\n *\n * Synchronized with Foundry VTT v12.331\n *\n * {@inheritDoc TextEditor._createInlineRoll}\n *\n * @internal\n * @experimental\n * @param {string[]} match - RegExp match\n * @param {object} rollData - Roll data\n * @param {object} _options - Parser options\n */\nexport function createInlineFormula(match, rollData, _options) {\n  let [command, formula, closing, label] = match.slice(1, 5);\n\n  if (command) return TextEditor._createInlineRoll(match, rollData);\n\n  // Handle the possibility of the roll formula ending with a closing bracket\n  if (closing.length === 3) formula += \"]\";\n\n  const rollCls = Roll.defaultImplementation;\n\n  // Extract components of the matched command\n  const resolvedFormula = rollCls.replaceFormulaData(formula.trim() || \"0\", rollData || {});\n\n  let pLabel;\n  if (!label) {\n    /** @type {pf1.dice.RollPF} */\n    const roll = new rollCls(resolvedFormula);\n    if (roll.isDeterministic) {\n      roll.evaluateSync();\n      pLabel = roll.total;\n    } else {\n      pLabel = pf1.utils.formula.simplify(resolvedFormula);\n    }\n  }\n\n  // Construct the roll element\n  const a = document.createElement(\"a\");\n  a.classList.add(\"inline-preroll\", \"inline-formula\");\n  a.dataset.formula = resolvedFormula;\n  a.dataset.tooltip = formula;\n  a.innerHTML = `<i class=\"fa-solid fa-dice-d20\"></i>${label || pLabel || resolvedFormula}`;\n\n  return a;\n}\n\n/**\n * Recursively transforms an ES module to a regular, writable object.\n *\n * @internal\n * @template T\n * @param {T} module - The ES module to transform.\n * @returns {T} The transformed module.\n */\nexport function moduleToObject(module) {\n  const result = {};\n  for (const key in module) {\n    if (Object.prototype.toString.call(module[key]) === \"[object Module]\") {\n      result[key] = moduleToObject(module[key]);\n    } else {\n      result[key] = module[key];\n    }\n  }\n  return result;\n}\n\n/**\n * Set default scene scaling and default template scaling in scenes.\n *\n * `imperial` sets scaling to 5 ft, `metric` sets scaling to 1.5 m\n *\n * @internal\n * @param {UnitSystem | undefined} [system] System of units. Pull current setting if undefined.\n */\nexport function setDefaultSceneScaling(system) {\n  system ??= pf1.utils.getDistanceSystem();\n\n  let scaling, units;\n  if (system == \"metric\") {\n    units = \"m\";\n    scaling = 1.5;\n  } else {\n    units = \"ft\";\n    scaling = 5;\n  }\n\n  game.system.grid.units = units;\n  game.system.grid.distance = scaling;\n  CONFIG.MeasuredTemplate.defaults.width = scaling;\n}\n\n/**\n * Turns dictionaries with numbered keys into arrays.\n *\n * @internal\n * @param {object} sourceObj The source object which contains the full array in the same path as targetObj.\n * @param {object} targetObj The target object to alter. The array doesn't have to be immediately in this object.\n * @param {string} keepPath A path to the array to keep, separated with dots. e.g. \"system.damageParts\".\n */\nexport function keepUpdateArray(sourceObj, targetObj, keepPath) {\n  const newValue = foundry.utils.getProperty(targetObj, keepPath);\n  if (newValue == null) return;\n  if (Array.isArray(newValue)) return;\n\n  const newArray = foundry.utils.deepClone(foundry.utils.getProperty(sourceObj, keepPath) || []);\n\n  for (const [key, value] of Object.entries(newValue)) {\n    if (foundry.utils.getType(value) === \"Object\") {\n      const subData = foundry.utils.expandObject(value);\n      newArray[key] = foundry.utils.mergeObject(newArray[key], subData);\n    } else {\n      newArray[key] = value;\n    }\n  }\n\n  foundry.utils.setProperty(targetObj, keepPath, newArray);\n}\n\n/**\n * Resolve UUID by fastest means possible\n *\n * This is partial implementation to sidestep fromUuidSync() not supporting items embedded in compendium actors that you have document for.\n *\n * @remarks\n * - Does not support retrieval of other than Item documents\n * - May or may not return an actual document.\n *\n * @internal\n * @param {string} uuid - UUID\n * @param {Actor} [parent] - Parent actor\n * @returns {object|Item}\n */\nexport function fromUuid(uuid, parent) {\n  if (!parent?.pack) return fromUuidSync(uuid, { relative: parent });\n  const result = foundry.utils.parseUuid(uuid, { relative: parent });\n  if (result.embedded.length) {\n    const [type, itemId] = result.embedded;\n    if (type === \"Item\") return parent.items.get(itemId);\n    throw new Error(`Unsupported embedded document type \"${type}\" for UUID: ${uuid}`);\n  }\n  return fromUuidSync(uuid, { relative: parent });\n}\n\n/**\n * Transform UUID into its long form\n *\n * Converts relative UUIDs to full and old format UUIDs to current format.\n *\n * @param {string} uuid - UUID\n * @param {Actor|Item} [parent] - Parent document\n * @returns {string} - Long for UUID\n */\nexport function uniformUuid(uuid, parent) {\n  return foundry.utils.parseUuid(uuid, { relative: parent }).uuid;\n}\n\n/**\n * Return map of template ID to label.\n *\n * @internal\n * @returns {Record<string,string>}\n */\nexport function getTemplateTypes() {\n  if (game.release.generation >= 13)\n    return Object.fromEntries(\n      Object.values(CONST.MEASURED_TEMPLATE_TYPES).map((id) => [id, game.i18n.localize(`TEMPLATE.TYPES.${id}`)])\n    );\n  else return CONFIG.MeasuredTemplate.types;\n}\n","export function initializeSocket() {\n  game.socket.on(\"system.pf1\", runSocketFunction);\n}\n\n/**\n * Handle socket message\n *\n * @param {object} msg - Message data\n * @param {string} senderId - User ID\n */\nasync function runSocketFunction(msg, senderId) {\n  const isFirstGM = game.users.activeGM?.isSelf;\n  const sender = game.users.get(senderId);\n  try {\n    switch (msg.eventType) {\n      case \"currencyTransfer\": {\n        if (!isFirstGM) return;\n        let source = await fromUuid(msg.data.sourceActor);\n        let dest = await fromUuid(msg.data.destActor);\n\n        if (msg.data.sourceContainer) source = source.items.get(msg.data.sourceContainer);\n        if (msg.data.destContainer) dest = dest.items.get(msg.data.destContainer);\n        const amount = msg.data.amount;\n\n        pf1.applications.CurrencyTransfer.transfer(source, dest, amount, msg.data.sourceAlt, msg.data.destAlt, false);\n        break;\n      }\n      case \"alterChatTargetAttribute\":\n        if (isFirstGM) alterChatTargetAttribute(msg);\n        break;\n      case \"giveItem\": {\n        if (!isFirstGM) return;\n        const item = await fromUuid(msg.item);\n        const sourceActor = item.actor;\n        if (!sourceActor.testUserPermission(sender, \"OWNER\")) return;\n        const targetActor = await fromUuid(msg.targetActor);\n        const itemData = item.toObject();\n        const newItem = await Item.implementation.create(itemData, { parent: targetActor });\n        if (newItem) {\n          await sourceActor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n        }\n        break;\n      }\n      case \"refreshActorSheets\":\n        if (sender.hasPermission(CONST.USER_PERMISSIONS.SETTINGS_MODIFY)) {\n          pf1.utils.refreshActors({ renderOnly: true });\n        }\n        break;\n    }\n  } catch (err) {\n    console.log(\"PF1 | Socket Error:\", err);\n  }\n}\n\nexport function alterChatTargetAttribute(args) {\n  const message = game.messages.get(args.message);\n  const contentHTML = $(message.content);\n\n  // Alter saving throw\n  if (args.save != null) {\n    const targetElem = contentHTML.find(\n      `div.attack-targets .target[data-uuid=\"${args.targetUuid}\"] .saving-throws .${args.save}`\n    );\n    const valueElem = targetElem.find(\".value\");\n    valueElem.html(`${args.value}`);\n\n    // Add classes based off extra data\n    if (args.isFailure) valueElem.addClass(\"failure\");\n    else valueElem.removeClass(\"failure\");\n    if (args.isSuccess) valueElem.addClass(\"success\");\n    else valueElem.removeClass(\"success\");\n\n    return message.update({\n      content: contentHTML.prop(\"outerHTML\"),\n    });\n  }\n}\n","export class SemanticVersion {\n  static re = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)?$/\n\n  constructor() {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.preRelease = \"\";\n    this.buildMetaData = \"\";\n  }\n\n  static fromString(str) {\n    if (str.match(this.re)) {\n      const result = new this();\n      result.major = parseInt(RegExp.$1);\n      result.minor = parseInt(RegExp.$2);\n      result.patch = parseInt(RegExp.$3 || 0);\n      result.preRelease = RegExp.$4 || \"\";\n      result.buildMetaData = RegExp.$5 || \"\";\n      return result;\n    }\n    return null;\n  }\n\n  toString() {\n    return `${this.major}.${this.minor}.${this.patch}`;\n  }\n\n  isHigherThan(otherVersion) {\n    if (this.major > otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor > otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch > otherVersion.patch) return true;\n    return false;\n  }\n\n  isLowerThan(otherVersion) {\n    if (this.major < otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor < otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch < otherVersion.patch) return true;\n    return false;\n  }\n\n  isSame(otherVersion) {\n    return this.major == otherVersion.major && this.minor == otherVersion.minor && this.patch == otherVersion.patch;\n  }\n}\n","/**\n * Finds old macro with same name and command that user can execute and see.\n *\n * @param {string} name - Macro name\n * @param {string} command - Macro command\n * @returns {Macro|undefined} - Old macro\n */\nfunction findOldMacro(name, command) {\n  return game.macros.find((m) => m.name === name && m.command === command && m.canExecute && m.visible && m.isAuthor);\n}\n\n/**\n * Various functions dealing with the creation and usage of macros.\n *\n * @module macros\n */\n\n/**\n * Create a Macro from an Item drop, or get an existing one.\n *\n * @param {object} uuid - UUID\n * @param {number} slot The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createItemMacro = async (uuid, slot) => {\n  const item = fromUuidSync(uuid);\n  const command = `fromUuidSync(\"${uuid}\").use();`;\n  let macro = findOldMacro(item.name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: item.name,\n        type: \"script\",\n        img: item.img,\n        command,\n        flags: { \"pf1.itemMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create action use macro from dropped action.\n *\n * @param {string} actionId Action ID\n * @param {string} uuid UUID to parent item\n * @param {number} slot Hotbar slot to assign to\n * @param _slot\n * @returns {Promise<User>} The updated User\n */\nexport const createActionMacro = async (uuid, slot, _slot) => {\n  /** @type {pf1.components.ItemAction} */\n  let action;\n  // @deprecated\n  if (typeof _slot === \"number\") {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.documents.macros.createActionMacro() parameters have changed to (uuid, slot).\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    const item = fromUuidSync(slot);\n    action = item?.actions.get(uuid);\n    uuid = action.uuid;\n    slot = _slot;\n  } else {\n    action = fromUuidSync(uuid);\n  }\n\n  if (!action) return void ui.notifications.error(game.i18n.format(\"PF1.Error.UUIDNotFound\", { uuid }));\n\n  /** @type {ItemPF} */\n  const item = action.parent;\n\n  const command = `fromUuidSync(\"${uuid}\")\\n\\t.use();`;\n\n  const name = `${action.name} (${item.name})`;\n\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: action.img,\n        command,\n        flags: { pf1: { actionMacro: { uuid: action.uuid } } },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from skill data to roll an actor's skill, or get an existing one.\n *\n * @param {string} skillId - The skill's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSkillMacro = async (skillId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const skillInfo = actor.getSkillInfo(skillId);\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSkill(\"${skillId}\");`;\n  const name = game.i18n.format(\"PF1.RollSkillMacroName\", { actor: actor.name, skill: skillInfo.fullName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command,\n        flags: { \"pf1.skillMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from save data to roll an actor's save, or get an existing one.\n *\n * @param {string} saveId - The save's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSaveMacro = async (saveId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const saveName = game.i18n.localize(\"PF1.SavingThrow\" + saveId.capitalize());\n\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSavingThrow(\"${saveId}\");`;\n  const name = game.i18n.format(\"PF1.RollSaveMacroName\", { actor: actor.name, type: saveName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command,\n        flags: { \"pf1.saveMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro to roll one of various checks for an actor\n *\n * @param {string} type The type of macro to create\n * @param {string} uuid The actor's UUID\n * @param {number} slot The hotbar slot to use\n * @param {object} [data] Additional context data\n * @returns {Promise<User|void>} The updated User, if an update is triggered\n */\nexport const createMiscActorMacro = async (type, uuid, slot, data) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const getBookLabel = (bookId) => actor.system.attributes?.spells?.spellbooks?.[bookId]?.label;\n\n  let name,\n    img,\n    command = `fromUuidSync(\"${actor.uuid}\")\\n\\t`;\n  switch (type) {\n    case \"defenses\":\n      command += `.displayDefenseCard();`;\n      name = game.i18n.format(\"PF1.DisplayDefensesMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/items/armor/shield-light-metal.png\";\n      break;\n    case \"cmb\":\n      command += `.rollAttack({maneuver:true});`;\n      name = game.i18n.format(\"PF1.RollCMBMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/feats/improved-grapple.jpg\";\n      break;\n    case \"cl\": {\n      const { bookId } = data;\n      command += `.rollCL(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollCLMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/spells/wind-grasp-eerie-3.jpg\";\n      break;\n    }\n    case \"concentration\": {\n      const { bookId } = data;\n      command += `.rollConcentration(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollConcentrationMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/skills/light_01.jpg\";\n      break;\n    }\n    case \"bab\":\n      command += `.rollBAB();`;\n      name = game.i18n.format(\"PF1.RollBABMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/yellow_08.jpg\";\n      break;\n    case \"initiative\":\n      command += \".rollInitiative({ createCombatants: true });\";\n      name = game.i18n.format(\"PF1.RollInitiativeMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/weapon_41.jpg\";\n      break;\n    case \"attack\": {\n      const { attack } = data;\n      const isMelee = attack === \"melee\";\n      command += `.rollAttack({ ranged: ${isMelee ? \"false\" : \"true\"}});`;\n      name = game.i18n.format(isMelee ? \"PF1.RollMeleeMacroName\" : \"PF1.RollRangedMacroName\", { actor: actor.name });\n      img = isMelee ? \"systems/pf1/icons/skills/weapon_23.jpg\" : \"systems/pf1/icons/skills/arrow_07.jpg\";\n      break;\n    }\n    case \"abilityScore\": {\n      const { ability } = data;\n      command += `.rollAbilityTest(\"${ability}\");`;\n      name = game.i18n.format(\"PF1.RollAbilityMacroName\", {\n        actor: actor.name,\n        ability: pf1.config.abilities[ability],\n      });\n      img = \"systems/pf1/icons/skills/blue_35.jpg\";\n      break;\n    }\n  }\n\n  if (!name) return;\n\n  let macro = findOldMacro(name, command);\n  macro ??= await Macro.create(\n    {\n      name,\n      type: \"script\",\n      img,\n      command,\n      flags: { pf1: { type, actor: uuid } },\n    },\n    { displaySheet: false }\n  );\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n","/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function hideRollInfo(cm, jq) {\n  const whisper = cm.whisper || [];\n  const isBlind = whisper.length && cm.blind;\n  const isVisible = whisper.length ? whisper.includes(game.user.id) || (cm.isAuthor && !isBlind) : true;\n  if (!isVisible) {\n    jq.find(\".dice-formula\").text(\"???\");\n    jq.find(\".dice-total\").text(\"?\");\n    jq.find(\".dice\").text(\"\");\n    jq.find(\".success\").removeClass(\"success\");\n    jq.find(\".failure\").removeClass(\"failure\");\n  }\n}\n\n/**\n * @deprecated\n * @typedef {object} ChatMessagePFIdentifiedInfo\n * @property {boolean} identified - True if item was identified when rolled.\n * @property {string} name - Name of the identified item.\n * @property {string} description - Description of the identified item.\n * @property {string} [actionName] - Name of the action that was used\n * @property {string} [actionDescription] - Description of the action that was used\n */\n\n/**\n * Generates an info block containing an item's identified info for GMs\n *\n * @remarks This HTML has to be generated in a synchronous way, as adding to a rendered chat message's content\n *          will cause erratic scrolling behaviour.\n * @param {ChatMessagePFIdentifiedInfo} info - An object containing the item's identified info\n * @returns {string} HTML string containing the info block\n */\nfunction getIdentifiedBlock(info) {\n  const hasUniqueActionName = info.action?.name && info.item.name !== info.action?.name;\n  return renderTemplate(\"systems/pf1/templates/chat/parts/gm-description.hbs\", { ...info, hasUniqueActionName });\n}\n\nexport async function addExtraGMInfo(cm, html) {\n  if (!game.user.isGM) return;\n\n  if (![\"item\", \"action\"].includes(cm.type)) return;\n\n  // Show identified info box for GM if item was unidentified when rolled\n  const metadata = cm.system;\n  const { identified, id: itemId } = metadata.item;\n\n  if (identified === false && itemId) {\n    const cardContent = html.querySelector(\".card-content\");\n    if (!cardContent) return;\n    cardContent.insertAdjacentHTML(\"beforeEnd\", await getIdentifiedBlock(metadata));\n  }\n}\n\n/**\n * Add GM-sensitive info for GMs and hide GM-sensitive info for players\n *\n * @param {ChatMessagePF} cm - Chat message\n * @param {HTMLElement} html - Chat message content\n */\nexport function hideGMSensitiveInfo(cm, html) {\n  // Handle adding of GM-sensitive info. No other processing for GM\n  if (game.user.isGM) return addExtraGMInfo(cm, html);\n\n  // Hide info about unowned tokens\n  for (const elem of html.querySelectorAll(\"[data-gm-sensitive-uuid]\")) {\n    // Quickly hide element\n    elem.classList.add(\"hidden\");\n\n    // Then check for stuff\n    const uuid = elem.dataset.gmSensitiveUuid;\n    if (!uuid) continue;\n\n    let obj = fromUuidSync(uuid);\n    // If token or token document, get actor for testing user permissions\n    // TODO: This should no longer be necessary with Foundry v11, unlinked actors give actor directly.\n    if (obj instanceof Token || obj instanceof TokenDocument) obj = obj.actor;\n\n    //  Show element again, since we have permission\n    if (obj?.testUserPermission && obj.testUserPermission(game.user, \"OBSERVER\")) {\n      elem.classList.remove(\"hidden\");\n    }\n    // Remove element completely, since we don't have permission\n    else {\n      elem.remove();\n    }\n  }\n\n  const showDCs = !game.settings.get(\"pf1\", \"obscureSaveDCs\");\n  if (!showDCs) for (const elem of html.querySelectorAll(\".difficulty-class .threshold.sensitive\")) elem.remove();\n\n  // Message author, regardless of actor ownership, sees the rest\n  if (cm.isAuthor) return;\n\n  const actor = ChatMessage.getSpeakerActor(cm.speaker);\n  // Exit if allowed to see, followup is for hiding info\n  if (actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n  // Hide text enricher DCs\n  for (const elem of html.querySelectorAll(\".pf1-link[data-dc][data-sensitive-label]\")) {\n    for (const node of elem.childNodes) if (node.nodeName === \"#text\") node.remove();\n    if (elem.children.length) elem.append(\" \");\n    elem.append(elem.dataset.sensitiveLabel);\n    delete elem.dataset.sensitiveLabel;\n  }\n\n  // Hide info\n  for (const elem of html.querySelectorAll(\".gm-sensitive\")) elem.remove();\n\n  // Alter GM inner texts\n  for (const elem of html.querySelectorAll(\"[data-gm-sensitive-inner]\")) {\n    if (showDCs && elem.dataset.action === \"save\") continue;\n\n    elem.textContent = elem.dataset.gmSensitiveInner;\n    delete elem.dataset[\"gm-sensitive-inner\"];\n  }\n\n  if (game.settings.get(\"pf1\", \"obscureInlineRolls\")) {\n    // Turn rolls into raw strings\n    /** @type {HTMLElement[]} */\n    const inlineEls = html.querySelectorAll(\".inline-roll\");\n    for (const elem of inlineEls) {\n      if (!elem.dataset.roll) continue;\n\n      let roll;\n      try {\n        roll = Roll.fromJSON(unescape(elem.dataset.roll));\n      } catch (err) {\n        console.error(`Inline roll in chat message ${cm.id} had invalid data`, err);\n        continue;\n      }\n\n      const nroll = Roll.defaultImplementation.safeRollSync(`${roll.total}`);\n      elem.dataset.roll = escape(JSON.stringify(nroll));\n      delete elem.dataset.tooltip;\n      elem.classList.add(\"obfuscated\");\n    }\n\n    /** @type {HTMLElement[]} */\n    const results = html.querySelectorAll(\".dice-roll .dice-result\");\n    for (const result of results) {\n      // Hide natural roll and bonus, leaving only total\n      /** @type {HTMLElement[]} */\n      const rollEls = result.querySelectorAll(\".roll-total\");\n      for (const elem of rollEls) {\n        elem.replaceChildren(\n          ...[...elem.children].filter((el) => el.classList.contains(\"total\") || el.tagName === \"I\")\n        );\n        elem.classList.add(\"obfuscated\");\n        elem.classList.remove(\"has-details\");\n        delete elem.dataset.tooltip;\n      }\n\n      /** @type {HTMLElement[]} */\n      const detailEls = result.querySelectorAll(\".dice-tooltip\");\n      for (const elem of detailEls) {\n        elem.remove();\n      }\n    }\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterAmmoRecovery(cm, jq) {\n  const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n  if (!recoveryData) return;\n\n  jq.find(\".chat-attack .ammo[data-ammo-id]\").each((a, el) => {\n    const attackIndex = el.closest(\".chat-attack\").dataset.index;\n    const ammoId = el.dataset.ammoId;\n    const data = recoveryData[attackIndex]?.[ammoId];\n    if (!data) return;\n    const { recovered } = data;\n    $(el)\n      .find(\".inline-action\")\n      .each((i, ia) => {\n        // TODO: Disable button & track proper quantities\n        // TODO: Mark partial recovery\n        if (recovered === undefined) return;\n        else if (recovered > 0) ia.classList.add(\"recovered\");\n        else ia.classList.add(\"recovery-failed\");\n      });\n  });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterTargetDefense(cm, jq) {\n  const defenseData = cm.getFlag(\"pf1\", \"targetDefense\");\n  if (!defenseData) return;\n\n  const html = jq[0];\n\n  for (const targetEl of html.querySelectorAll(\".attack-targets .target[data-uuid]\")) {\n    const uuid = targetEl.dataset.uuid;\n    const targetDefense = foundry.utils.getProperty(defenseData, uuid)?.save;\n    if (!targetDefense) continue;\n\n    // data-saving-throw is obsolete\n    for (const saveEl of targetEl.querySelectorAll(\"[data-save],[data-saving-throw]\")) {\n      const save = saveEl.dataset.save || saveEl.dataset.savingThrow;\n      const value = targetDefense[save];\n      if (Number.isFinite(value)) {\n        saveEl.querySelector(\".value\").textContent = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {HTMLElement} html - HTML element\n * @param {boolean} recursive - Is this recursive call?\n */\nexport function hideInvisibleTargets(cm, html, recursive = false) {\n  const targetsElem = html.querySelector(\".pf1.chat-card .attack-targets\");\n  if (!targetsElem) return; // No targets\n\n  // Delay until canvas ready if it's not yet so.\n  if (!canvas.ready) {\n    if (recursive) return;\n    targetsElem.classList.add(\"hidden\");\n    if (!game.settings.get(\"core\", \"noCanvas\")) {\n      Hooks.once(\"canvasReady\", () => hideInvisibleTargets(cm, html, true));\n    } else {\n      // Canvas disabled, remove targets\n      targetsElem.remove();\n    }\n    return;\n  }\n\n  const targetElems = targetsElem.querySelectorAll(\".target\");\n  const targets = Array.from(targetElems).map((elem) => ({ uuid: elem.dataset.uuid, elem }));\n\n  let hasVisible = false;\n  for (const t of targets) {\n    /** @type {TokenDocumentPF} */\n    const token = fromUuidSync(t.uuid);\n    if (!token) continue;\n    t.token = token.object;\n\n    const isVisible = t.token?.isVisible;\n    const isObserver = token.actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER) ?? false;\n\n    // Hide if token invisible and user isn't observer of token\n    if ((!isVisible && !isObserver) || token.isSecret) t.elem.remove();\n    else hasVisible = true;\n  }\n\n  // Hide targets if there's none visible to not reveal presence of invisible targets\n  if (!hasVisible) targetsElem.remove();\n  else targetsElem.classList.remove(\"hidden\");\n}\n\nconst getTokenByUuid = (uuid) => fromUuidSync(uuid)?.object;\n\n/**\n * Pan to defined token\n *\n * Provided here to allow overriding the behaviour.\n *\n * @internal\n * @param {Token} token - Token to pan to\n * @param {number} [duration=250] - Animation duration\n */\nexport function panToToken(token, duration = 250) {\n  canvas.animatePan({ ...token.center, duration });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function addTargetCallbacks(cm, jq) {\n  const targetElems = jq[0].querySelectorAll(\".attack-targets .target[data-uuid]\");\n\n  const _mouseEnterCallback = (event, uuid) => getTokenByUuid(uuid)?._onHoverIn(event, { hoverOutOthers: false });\n\n  const _mouseLeaveCallback = (event, uuid) => getTokenByUuid(uuid)?._onHoverOut(event);\n\n  const _imageClickCallback = (event, uuid) => {\n    event.preventDefault();\n\n    const token = getTokenByUuid(uuid);\n    if (!token?.actor.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n    const toggle = event.shiftKey;\n\n    if (!toggle || (!token.controlled && toggle)) pf1.utils.chat.panToToken(token);\n\n    if (token.actor.isOwner) {\n      if (token.controlled) {\n        if (toggle) token.release();\n      } else {\n        token.control({ releaseOthers: !toggle });\n      }\n    }\n  };\n\n  // Add callbacks\n  for (let elem of targetElems) {\n    const uuid = elem.dataset.uuid;\n    const t = fromUuidSync(uuid);\n    if (!t) continue;\n\n    // Image element events\n    const imgElem = elem.querySelector(\".target-image\");\n    imgElem.addEventListener(\"pointerenter\", (ev) => _mouseEnterCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"pointerleave\", (ev) => _mouseLeaveCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"click\", (ev) => _imageClickCallback(ev, uuid));\n\n    // Misc element events\n    elem = $(elem);\n    elem.find(\".ac\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetACClick(cm, jq, t.actor, event);\n    });\n\n    elem.find(\".saving-throws .click\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetSavingThrowClick(cm, jq, t, t.actor, event);\n    });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} _event - Triggering event\n */\nexport async function targetACClick(cm, jq, actor, _event) {\n  try {\n    await actor.displayDefenseCard({ rollMode: \"selfroll\" });\n  } catch (err) {\n    ui.notifications.error(\"PF1.Error.NoDefenseCard\", { localize: true, console: false });\n    throw new Error(\"Could not display defense card\", { cause: err });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Token} token - Target token\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetSavingThrowClick(cm, jq, token, actor, event) {\n  const elem = event.currentTarget;\n  const save = elem.dataset.save || elem.dataset.savingThrow;\n  const dc = cm.system.save?.dc;\n\n  actor.rollSavingThrow(save, { event, dc, reference: cm.uuid });\n}\n\n/* Card Listeners */\n\n/**\n * @internal\n * @param {ChatMessagePF} cm\n * @param {HTMLElement} html\n */\nexport function addListeners(cm, html) {\n  // Header click to expand description\n  html.querySelector(\".item-name\")?.addEventListener(\"click\", (event) => pf1.utils.chat.onToggleDescription(cm, event));\n\n  for (const elem of html.querySelectorAll(\"button[data-action], a[data-action]\")) {\n    elem.addEventListener(\"click\", (event) => pf1.utils.chat.onButton(cm, event));\n  }\n}\n\n/**\n * Handle toggling the visibility of chat card content when the name is clicked\n *\n * @internal\n * @param {ChatMessagePF} cm - Chat message\n * @param {Event} event - Triggering event\n */\nexport function onToggleDescription(cm, event) {\n  event.preventDefault();\n\n  /** @type {HTMLElement} */\n  const content = event.currentTarget.closest(\".message-content\");\n  const desc = content.querySelector(\".card-content\");\n  cm._collapsedDescription = desc.classList.toggle(\"hidden\");\n\n  // Update chat popout size\n  const popout = content.closest(\".chat-popout\");\n  ui.windows[popout?.dataset.appid]?.setPosition();\n}\n\n/**\n * Handle `<a data-action>` buttons.\n *\n * @internal\n * @param {ChatMessagePF} cm\n * @param {Event} event - Button event\n */\nexport async function onButton(cm, event) {\n  event.preventDefault();\n\n  // Extract card data\n  const button = event.currentTarget;\n  const buttonActionId = button.dataset.action;\n\n  const getLinkedItem = () => {\n    const item = cm.itemSource;\n    if (!item) throw new Error(\"Associated item not found\");\n    return item;\n  };\n\n  switch (buttonActionId) {\n    case \"applyDamage\": {\n      let asNonlethal;\n      if (cm.system.config?.nonlethal) asNonlethal = true;\n\n      const value = parseInt(button.dataset.value);\n      if (isNaN(value)) return void console.warn(\"Invalid damage value:\", value, { button });\n\n      const attackIndex = parseInt(button.closest(\"[data-index]\")?.dataset.index);\n      const attackType = button.dataset.type;\n\n      const attack = cm.systemRolls?.attacks?.[attackIndex];\n      const isCritical = attackType === \"critical\";\n\n      const instances = [];\n      const addInstances = (damageRolls) => {\n        if (!damageRolls) return;\n        for (const dmg of damageRolls) {\n          const d = new pf1.models.action.DamagePartModel(dmg.damageType.toObject());\n          d.value = dmg.total;\n          instances.push(d);\n        }\n      };\n\n      if (attack) {\n        addInstances(attack.damage);\n        if (isCritical) addInstances(attack.critDamage);\n      }\n\n      pf1.documents.actor.ActorPF.applyDamage(value, {\n        asNonlethal,\n        event,\n        element: button,\n        message: cm,\n        reference: cm.uuid,\n        isCritical,\n        critMult: isCritical ? (cm.system.config.critMult ?? 0) : 0,\n        instances,\n      });\n      button.disabled = false;\n      break;\n    }\n    // Recover ammunition\n    case \"recoverAmmo\":\n    case \"forceRecoverAmmo\": {\n      const item = cm.itemSource;\n      if (!item?.isOwner) return;\n\n      // Check for recovery state\n      const attackIndex = button.closest(\".chat-attack\").dataset.index;\n      if (!attackIndex) throw new Error(\"Attack index not found\");\n\n      // Find ammo item\n      const ammoId = button.dataset.ammoId || button.closest(\".ammo\")?.dataset.ammoId;\n      const ammoItem = item.actor.items.get(ammoId);\n      if (!ammoItem) return void ui.notifications.error(game.i18n.format(\"PF1.Error.ItemNotFound\", { id: ammoId }));\n      if (ammoItem.getFlag(\"pf1\", \"abundant\")) return; // Abundant is unrecoverable\n\n      const ammoQuantity = button.dataset.ammoQuantity || button.closest(\".ammo\")?.dataset.ammoQuantity || 1;\n      if (ammoQuantity == 0) return; // Zero ammo used\n      const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n      const ammoRecovery = recoveryData?.[attackIndex]?.[ammoId];\n      // Backwards compatibility (PF1 v10) with old messages\n      if (ammoRecovery?.failed === true) return;\n      // Recovered is the number recovered, the rest failed\n      if (ammoRecovery?.recovered !== undefined) return;\n\n      let chance = 100; // Force recover\n      if (buttonActionId === \"recoverAmmo\") {\n        chance = ammoItem.system.recoverChance ?? 50;\n      }\n\n      // (Try to) recover ammo\n      let recovered = 0;\n      if (chance > 0) {\n        for (let i = 0; i < ammoQuantity; i++) {\n          const rngResult = Math.random() * 100;\n          if (rngResult <= chance) {\n            recovered += 1;\n          }\n        }\n      }\n\n      const promises = [];\n\n      // Update ammo if any were recovered\n      if (recovered > 0) promises.push(ammoItem.addCharges(recovered));\n\n      // Update chat card\n      promises.push(cm.setFlag(\"pf1\", \"ammoRecovery\", { [attackIndex]: { [ammoId]: { recovered } } }));\n\n      await Promise.all(promises);\n\n      ui.notifications.info(game.i18n.format(\"PF1.RecoveredAmmo\", { count: recovered }));\n\n      return true;\n    }\n    case \"save\": {\n      // .dataset.type is deprecated\n      const saveId = button.dataset.save || button.dataset.type;\n      const as = button.dataset.as;\n      const dc = cm.system.save?.dc ?? (button.dataset.dc ? parseInt(button.dataset.dc) : undefined);\n\n      /** @type {ActorPF[]} */\n      let actors;\n      // Defense cards want only speaker\n      if (as === \"speaker\") actors = [ChatMessage.getSpeakerActor(cm.speaker)];\n      // Otherwise use controlled or configured actor\n      else {\n        actors = canvas.tokens.controlled.map((t) => t.actor);\n        if (actors.length == 0 && game.user.character) actors = [game.user.character];\n      }\n      actors = actors.filter((t) => !!t);\n\n      if (!actors.length) return void ui.notifications.warn(\"PF1.Warning.NoActorSelected\", { localize: true });\n\n      let noSound = false,\n        errored = false;\n      for (const actor of actors) {\n        actor?.rollSavingThrow(saveId, { event, noSound, dc, reference: cm.uuid }).catch((err) => {\n          if (!errored) {\n            ui.notifications.error(\"PF1.Error.NoSave\", { localize: true, console: false });\n            errored = true;\n          }\n          throw new Error(\"Failed to roll saving throw\", { cause: err });\n        });\n        // TODO: Update card targets if they exist\n        noSound = true;\n      }\n      break;\n    }\n    case \"concentration\": {\n      const item = getLinkedItem();\n      // TODO: Apply bonuses on card if any\n      item.actor.rollConcentration(item.system.spellbook, {\n        item,\n        reference: cm.uuid,\n        dc: item.getConcentrationDC(\"defensive\"),\n      });\n      break;\n    }\n    case \"caster-level-check\": {\n      const item = getLinkedItem();\n      // TODO: Apply bonuses on card (e.g. CL increase in dialog, conditional modifiers, etc.)\n      item.actor.rollCL(item.system.spellbook, { item, reference: cm.uuid });\n      break;\n    }\n    // Show journal entry\n    case \"journal\":\n    case \"open-compendium-entry\": {\n      // .dataset.compendiumEntry is deprecated\n      const uuid = button.dataset.uuid || button.dataset.compendiumEntry;\n      // .dataset.type is defined sometimes, but we only use journals\n      pf1.utils.openJournal(uuid);\n      break;\n    }\n  }\n}\n","/**\n * Base actor class with minimal functionality.\n *\n * Provides only caching of .itemTypes and nothing else.\n */\nexport class ActorBasePF extends Actor {\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.actors}\n   *\n   * @internal\n   * @override\n   * @param {object} [actorData] - Actor data to guide creation if any\n   * @returns {object} - Resulting data alterations\n   */\n  static getDefaultArtwork(actorData) {\n    const result = super.getDefaultArtwork(actorData);\n    const image = pf1.config.defaultIcons.actors[actorData?.type];\n    if (image) {\n      result.img = image;\n      result.texture.src = image;\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  reset() {\n    // Reset item types cache\n    this._itemTypes = null;\n    // Reset roll data cache if it exists.\n    this._rollData = null;\n\n    this._initialized = false; // For preventing items initializing certain data too early\n\n    super.reset();\n  }\n\n  /** @override */\n  _initialize(options) {\n    super._initialize(options);\n    this._initialized = true;\n  }\n\n  /**\n   * Get item by its identifier tag.\n   *\n   * @param {string} tag - Desired tag.\n   * @returns {Item|undefined} - Matching item or undefined if no item is found.\n   */\n  getItemByTag(tag) {\n    return this.items.find((o) => o.system.tag === tag);\n  }\n\n  /**\n   * Cached result of .itemTypes\n   *\n   * @internal\n   * @type {ItemTypesMap}\n   */\n  _itemTypes;\n\n  /**\n   * Cached override\n   *\n   * @override\n   * @type {ItemTypesMap}\n   */\n  get itemTypes() {\n    // Return cache\n    if (this._itemTypes) return this._itemTypes;\n\n    // Generate new copy (or fetch Foundry cached copy in v13+)\n    this._itemTypes = super.itemTypes;\n\n    // HACK: Avoids errors in v13 due to Foundry having its own cache\n    if (this._itemTypes.base.getName) return this._itemTypes;\n\n    // Enrich the arrays with getName() and getId()\n    for (const items of Object.values(this._itemTypes)) {\n      Object.defineProperties(items, {\n        getName: {\n          value: function (name) {\n            return this.find((i) => i.name === name);\n          },\n        },\n        getId: {\n          value: function (identifier) {\n            return this.find((i) => i.system.tag === identifier);\n          },\n        },\n      });\n    }\n\n    return this._itemTypes;\n  }\n\n  /**\n   * Returns first active owner, favoring players and GM as fallback.\n   *\n   * @type {User|null}\n   */\n  get activeOwner() {\n    const firstOwner =\n      game.users\n        .filter((u) => u.active && !u.isGM)\n        .filter((u) => this.testUserPermission(u, \"OWNER\"))\n        .sort((a, b) => (a.id > b.id ? 1 : -1))[0] ?? null;\n\n    return firstOwner ?? game.users.activeGM;\n  }\n\n  /**\n   * Get related combatants.\n   *\n   * @param {Combat} [combat=game.combat] Combat instance\n   * @returns {Combatant[]} Related combatants.\n   */\n  getCombatants(combat = game.combat) {\n    return combat?.combatants.filter((c) => c.actor === this) ?? [];\n  }\n\n  /**\n   * Whether current user can see through this actor.\n   *\n   * @type {boolean}\n   */\n  get sharesVision() {\n    const visionFlag = this.getFlag(\"pf1\", \"visionSharing\");\n    if (!visionFlag) return false;\n\n    return visionFlag.users?.[game.user.id] ?? visionFlag.default ?? false;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 where visibility of AE no longer controls if it's temporary.\n   *\n   * @internal\n   * @returns {ActiveEffectPF[]}\n   */\n  get _effectsWithDuration() {\n    const effects = [];\n    for (const effect of this.allApplicableEffects()) {\n      if (effect.active && effect._hasDuration) effects.push(effect);\n    }\n    return effects;\n  }\n\n  /**\n   * Override to support toggling buffs from token HUD\n   *\n   * Called by {@link pf1.canvas.TokenHUDPF TokenHUD}\n   *\n   * @todo Add separate listener for buffs\n   * @override\n   * @param {string} statusId - Status effect ID\n   * @param {object} options - Additional options\n   *\n   * Synced with Foundry v12.331\n   */\n  async toggleStatusEffect(statusId, { active, overlay = false } = {}) {\n    // Support toggling buffs via token  HUD\n    const [_, buffId] = statusId?.split(\"buff-\") ?? [];\n    if (buffId) {\n      const buff = this.items.get(buffId);\n      if (!buff) throw new Error(`Buff not found to toggle: ${buffId}`);\n      const isActive = buff.isActive;\n      const state = active ?? !isActive;\n      if (state === isActive) return;\n\n      await buff.setActive(state);\n      // Slight deviation from API, we do not return created AE here.\n      return state;\n    }\n\n    return super.toggleStatusEffect(statusId, { active, overlay });\n  }\n\n  /**\n   * Condition immunities\n   *\n   * @internal\n   * @returns {Set<string>} - Set of immunity IDs.\n   */\n  getConditionImmunities() {\n    const ci = this.system.traits?.ci?.total ?? [];\n    const list = new Set([...ci]);\n\n    // Map immunities to actual conditions\n    // TODO: Unify the IDs where possible\n    const condToImmMap = {\n      confuse: [\"confused\"],\n      daze: [\"dazed\"],\n      dazzle: [\"dazzled\"],\n      fatigue: [\"fatigued\"],\n      fear: pf1.registry.conditions.conditionsInTrack(\"fear\"),\n      sicken: [\"sickened\"],\n      paralyze: [\"paralyzed\"],\n      petrify: [\"petrified\"],\n      stun: [\"stunned\"],\n    };\n    for (const [key, conditions] of Object.entries(condToImmMap)) {\n      if (list.has(key)) {\n        for (const cond of conditions) list.add(cond);\n      }\n    }\n\n    return list;\n  }\n\n  /**\n   * Per-actor type initiative options\n   *\n   * @abstract\n   * @returns {object} - Options object\n   */\n  getInitiativeOptions() {\n    // TODO: Pull these from system model if possible\n    return {};\n  }\n\n  /**\n   * @abstract\n   */\n  expireActiveEffects() {}\n\n  /**\n   * Movement details for current movement\n   *\n   * @abstract\n   * @param {MovementType} type\n   * @returns {MovementInfo|undefined}\n   */\n\n  getMovement(type) {\n    return this.system.getMovement?.(type);\n  }\n}\n\n/**\n * All items sorted by type.\n *\n * Also includes any module introduced types.\n *\n * @typedef ItemTypesMap\n * @property {ItemAttackPF[]} attack - Attacks\n * @property {ItemBuffPF[]} buff - Buffs\n * @property {ItemClassPF[]} class - Classes\n * @property {ItemConsumablePF[]} consumable - Consumables\n * @property {ItemContainerPF[]} container - Containers\n * @property {ItemEquipmentPF[]} equipment - Equipment\n * @property {ItemImplantPF[]} implant - Implants\n * @property {ItemFeatPF[]} feat - Features\n * @property {ItemLootPF[]} loot - Loot\n * @property {ItemRacePF[]} race - Race\n * @property {ItemSpellPF[]} spell - Spells\n * @property {ItemWeaponPF[]} weapon - Weapons\n */\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\nconst actorHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Actor.documentClasses[type] ?? ActorBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ActorPFProxy = new Proxy(ActorBasePF, actorHandler);\n","/**\n * Base item\n *\n * From which all other item documents inherit from.\n */\nexport class ItemBasePF extends Item {\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.items}\n   *\n   * @internal\n   * @override\n   * @param {object} [itemData] - Item data\n   * @returns {{img:string}} - Default image\n   */\n  static getDefaultArtwork(itemData) {\n    const result = super.getDefaultArtwork(itemData);\n    const image = pf1.config.defaultIcons.items[itemData?.type];\n    if (image) result.img = image;\n    return result;\n  }\n\n  /**\n   * Item create dialog.\n   *\n   * @override\n   * @param {object} data Initial form data\n   * @param {object} [context] Additional options.\n   * @param {Actor|null} [context.parent=null] Parent parameter passed to Item.create() options\n   * @param {string|null} [context.pack=null] Pack ID parameter passed to Item.create() options\n   * @param {Array<string>} [context.types] Item types to limit creation choices to.\n   * @param {object} [context.options] Dialog context options.\n   * @returns {Promise<Item|null>}\n   *\n   * Synchronized with Foundry VTT v12.331\n   */\n  static async createDialog(\n    data = {},\n    createOptions = {},\n    { folders, types, template, context, renderOptions, ...dialogOptions } = {}\n  ) {\n    // Copy of Foundry's deprecation code\n    const applicationOptions = {\n      top: \"position\",\n      left: \"position\",\n      width: \"position\",\n      height: \"position\",\n      scale: \"position\",\n      zIndex: \"position\",\n      title: \"window\",\n      id: \"\",\n      classes: \"\",\n      jQuery: \"\",\n    };\n\n    for (const [k, v] of Object.entries(createOptions)) {\n      if (k in applicationOptions) {\n        if (game.release.generation >= 13) {\n          foundry.utils.logCompatibilityWarning(\n            \"The ClientDocument.createDialog signature has changed. \" +\n              \"It now accepts database operation options in its second parameter, \" +\n              \"and options for DialogV2.prompt in its third parameter.\",\n            { since: 13, until: 15, once: true }\n          );\n        }\n        const dialogOption = applicationOptions[k];\n        if (dialogOption) foundry.utils.setProperty(dialogOptions, `${dialogOption}.${k}`, v);\n        else dialogOptions[k] = v;\n        delete createOptions[k];\n      }\n    }\n\n    // Build new options\n    template ??= \"systems/pf1/templates/widgets/item-create.hbs\"; // Not actually used yet\n\n    dialogOptions = {\n      data,\n      folders,\n      context, // Not used yet\n      types,\n      template,\n      ...dialogOptions,\n      createOptions,\n    };\n\n    return pf1.applications.item.CreateDialog.waitPrompt(dialogOptions, renderOptions);\n  }\n\n  /**\n   * Override to provide naming by subType potential.\n   *\n   * @override\n   * @param {object} context - Context where the name would be used\n   * @param {string} [context.type] - Type\n   * @param {string} [context.subType] - Document subtype. Nonstandard option.\n   * @param {Document|null} [context.parent] - Parent document\n   * @param {string|null} [context.pack] - Pack this would be within\n   * @returns {string}\n   * Synced with Foundry v12.331\n   */\n  static defaultName({ type, subType, parent, pack } = {}) {\n    const documentName = this.metadata.name;\n    let collection;\n    if (parent) collection = parent.getEmbeddedCollection(documentName);\n    else if (pack) collection = game.packs.get(pack);\n    else collection = game.collections.get(documentName);\n    const takenNames = new Set();\n    for (const document of collection) takenNames.add(document.name);\n    let baseNameKey = this.metadata.label;\n    if (type && this.hasTypeData) {\n      let typeNameKey;\n      if (subType && CONFIG.Item.documentClasses[type]?.system?.subtypeName) {\n        const key = `PF1.Subtypes.Item.${type}.${subType}.Single`;\n        if (game.i18n.has(key)) typeNameKey = key;\n      }\n      typeNameKey ||= CONFIG[documentName].typeLabels?.[type];\n      if (typeNameKey && game.i18n.has(typeNameKey)) baseNameKey = typeNameKey;\n    }\n    const baseName = game.i18n.localize(baseNameKey);\n    let name = baseName;\n    let index = 1;\n    while (takenNames.has(name)) name = `${baseName} (${++index})`;\n    return name;\n  }\n\n  /**\n   * On-Create Operation\n   *\n   * Post-create processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onCreateOperation(documents, operation, user) {\n    await super._onCreateOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    // Create spellbook if the class has spellcasting defined\n    const promises = [];\n\n    for (const item of documents) {\n      // Creation data\n      const data = operation.data.find((i) => i._id === item.id);\n      if (!data) continue; // Shouldn't happen\n\n      // Class added\n      switch (item.type) {\n        case \"class\": {\n          // Has casting\n          if (item.system.casting?.type) {\n            // Create spellbook entry\n            const bookData = { ...item.system.casting, class: item.system.tag };\n            const p = actor.createSpellbook(bookData);\n            promises.push(p);\n          }\n\n          // Adjust associations if any exist\n          const level = item.system.level ?? 0;\n          if (level > 0) {\n            const p = item._onLevelChange(0, level, { event: \"create\" });\n            promises.push(p);\n          }\n          break;\n        }\n        case \"buff\": {\n          if (item.isActive) {\n            const p = item._updateTrackingEffect(data);\n            promises.push(p);\n          }\n          break;\n        }\n        case \"race\": {\n          // Update owning actor speed to match racial speed.\n          // TODO: Make this derived data on the actor instead, eliminating the update.\n          if (item.system.speeds) {\n            const speedUpdates = {};\n            for (const key of pf1.const.movementKeys) {\n              speedUpdates[key] = { base: item.system.speeds[key] ?? null };\n            }\n            if (speedUpdates.fly) {\n              speedUpdates.fly.maneuverability = item.system.speeds.flyManeuverability || \"average\";\n            }\n            const p = actor.update({ \"system.attributes.speed\": speedUpdates });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    // Supplements\n    if (operation._pf1NoSupplements !== true) {\n      const p = this._createSupplements(documents, actor);\n      promises.push(p);\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * On-Update Operation\n   *\n   * Post-update processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onUpdateOperation(documents, operation, user) {\n    await super._onUpdateOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    const promises = [];\n\n    for (const item of documents) {\n      const changed = operation.updates.find((i) => i._id === item.id);\n      if (!changed) continue; // Shouldn't happen\n\n      switch (item.type) {\n        case \"class\": {\n          // Update class associations if level changed\n          const oldLevel = operation.pf1?.item?.[item.id]?.oldLevel ?? 0;\n          const newLevel = changed.system?.level ?? 0;\n          if (newLevel !== oldLevel) {\n            const p = item._onLevelChange(oldLevel, newLevel, { event: \"update\" });\n            promises.push(p);\n          }\n          break;\n        }\n        case \"buff\": {\n          const p = item._updateTrackingEffect(changed);\n          promises.push(p);\n          break;\n        }\n        case \"race\": {\n          // Change actor size if the old size is same as old race size.\n          if (operation._pf1SizeChanged) {\n            const p = actor.update({ \"system.traits.size\": item.system.size });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * On-Delete Operation\n   *\n   * Post-delete processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onDeleteOperation(documents, operation, user) {\n    await super._onDeleteOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    const promises = [];\n\n    for (const item of documents) {\n      switch (item.type) {\n        case \"class\": {\n          // Adjust associations if any exist\n          const prevLevel = item.system.level ?? 0;\n          if (prevLevel > 0) {\n            const p = item._onLevelChange(prevLevel, 0, { event: \"delete\" });\n            promises.push(p);\n          }\n\n          // Disable spellbook associated with this class, if it has spellcasting defined\n          const tag = item.system.tag;\n          if (!tag || !item.system.casting?.type) continue;\n\n          const books = actor.system.attributes.spells.spellbooks ?? {};\n          const usedBook = Object.entries(books).find(([_, book]) => !!book.class && book.class === tag);\n          if (usedBook === undefined) continue;\n\n          const [bookId, book] = usedBook;\n          if (!book.inUse) continue;\n\n          const p = actor.update({ [`system.attributes.spells.spellbooks.${bookId}.inUse`]: false });\n          promises.push(p);\n          break;\n        }\n        case \"race\": {\n          if (actor.itemTypes.race.length === 0) {\n            // Reset some race dependant details\n            // TODO: Make this derived data\n            const p = actor.update({\n              \"system.attributes.speed\": {\n                \"land.base\": 30,\n                \"fly.base\": 0,\n                \"fly.maneuverability\": \"average\",\n                \"swim.base\": 0,\n                \"climb.base\": 0,\n                \"burrow.base\": 0,\n              },\n            });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * Collect Data on supplements\n   *\n   * @internal\n   * @param {Array<Item>} items - Array of items to draw supplemental data from\n   * @param {Actor} actor - Owner\n   */\n  static async _createSupplements(items, actor) {\n    const allSupplements = new Collection();\n\n    let t0 = performance.now();\n    const collect = async (item, classLink, _depth = 0) => {\n      const supplements = item.system.links?.supplements ?? [];\n      classLink ??= item.system.class;\n\n      // Log slow fetches occasionally\n      const t1 = performance.now();\n      if (t1 - t0 >= 2_000) {\n        console.debug(\"Fetching\", supplements.length, \"supplements for\", item.name);\n        t0 = t1;\n      }\n\n      // Collect supplements\n      const newItemData = [];\n      for (const supplement of supplements) {\n        const { uuid } = supplement;\n        if (!uuid) continue; // Erroneous supplement data\n        const extraItem = await fromUuid(uuid);\n        if (!extraItem) {\n          // TODO: Display notification instead when this is from UI interaction.\n          console.warn(\"Supplement\", uuid, \"not found for\", item.name, item);\n          continue;\n        }\n\n        const itemData = game.items.fromCompendium(extraItem, { clearFolder: true });\n        foundry.utils.setProperty(itemData, \"flags.pf1.source\", uuid);\n\n        const old = allSupplements.get(uuid);\n        if (old) old.count += 1;\n        else {\n          allSupplements.set(uuid, { parent: item, item: extraItem, data: itemData, count: 1, classLink, uuid });\n          newItemData.push(itemData);\n        }\n      }\n\n      if (!newItemData.length) return;\n\n      // TODO: Make the limits here configurable?\n      if (_depth > 3) {\n        return void console.warn(\"Stopping collecting supplements deeper than 3 layers\");\n      }\n      if (allSupplements.size > 100 && newItemData.length) {\n        return void console.warn(`Too many supplements (${allSupplements.size}), stopping collecting more`);\n      }\n\n      for (const newItem of newItemData) {\n        // TODO: Somehow add child relation to the children\n        await collect(newItem, classLink, _depth + 1);\n      }\n    };\n\n    // Collect supplements for all items\n    for (const item of items) {\n      await collect(item);\n    }\n\n    // Do additional preparation on collected data\n    const lastSortOrder = {};\n\n    const createData = [];\n    for (const supplement of allSupplements) {\n      const { item, data: itemData, count } = supplement;\n\n      // Adjust quantity of physical items if more than one was added of the same item\n      if (item.isPhysical && itemData.system.quantity > 0) {\n        itemData.system.quantity *= count;\n      }\n      // Inherit class link\n      if (supplement.classLink && item.type === \"feat\" && item.system.subType === \"classFeat\") {\n        itemData.system.class = supplement.classLink;\n      }\n\n      // Sort to end of the item list of their type\n      const oldItemsOfSameType = actor.itemTypes[itemData.type] ?? [];\n      lastSortOrder[itemData.type] ??= oldItemsOfSameType.length\n        ? oldItemsOfSameType.reduce((max, i) => Math.max(i.sort || 0, max), -Number.MIN_SAFE_INTEGER) +\n          CONST.SORT_INTEGER_DENSITY\n        : 0;\n      itemData.sort = lastSortOrder[itemData.type];\n      lastSortOrder[itemData.type] += CONST.SORT_INTEGER_DENSITY;\n\n      // Create item\n      createData.push(itemData);\n    }\n\n    // Create supplements\n    const newItems = await actor.createEmbeddedDocuments(\"Item\", createData, {\n      _pf1NoSupplements: true,\n      render: false, // Following child link creation causes render again\n    });\n\n    // Add child links\n    const updates = new Collection();\n    const allItems = [...items, ...newItems];\n\n    /** @type {Collection<Item>} */\n    for (const item of newItems) {\n      const source = pf1.utils.internal.uniformUuid(item.getFlag(\"pf1\", \"source\"));\n      const parent = allItems.find((i) =>\n        i.system.links?.supplements?.some((si) => pf1.utils.internal.uniformUuid(si.uuid) === source)\n      );\n      if (!parent) {\n        console.warn(item.name, \"parent not found!\", source, allItems);\n        continue;\n      }\n\n      let update = updates.get(parent.id);\n      if (!update) {\n        update = { system: { links: { children: [] } } };\n        update._id = parent.id;\n        updates.set(parent.id, update);\n      }\n      update.system.links.children.push({ uuid: item.getRelativeUUID(actor) });\n    }\n\n    await actor.updateEmbeddedDocuments(\"Item\", Array.from(updates));\n  }\n\n  /**\n   * Item name\n   *\n   * @param {boolean} [forcePlayerPerspective=false] - If true, return value players see.\n   * @returns {string} - Item name\n   */\n  // eslint-disable-next-line no-unused-vars\n  getName(forcePlayerPerspective = false) {\n    return this.name;\n  }\n\n  /**\n   * Is the item is fully functional.\n   *\n   * This returns composite result of if the item is equipped, has quantity, is not disabled, is not out of charges, etc.\n   * and is not representative if the item can be set active or not via {@link setActive}.\n   *\n   * @see {@link activeState}\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get isActive() {\n    return true;\n  }\n\n  /**\n   * If the item can be activated via {@link setActive}.\n   *\n   * {@link isActive} can return variable state independent of the toggle that {@link setActive} controls, this returns .\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get activeState() {\n    return this.isActive;\n  }\n\n  /**\n   * Set item's active state.\n   *\n   * @abstract\n   * @param {boolean} active - Active state\n   * @param {object} [context] - Optional update context\n   * @returns {Promise<this>} - Update promise if item type supports the operation.\n   * @throws {Error} - If item does not support the operation.\n   */\n  // eslint-disable-next-line no-unused-vars\n  async setActive(active, context) {\n    throw new Error(`Item type ${this.type} does not support ItemBasePF#setActive`);\n  }\n\n  /**\n   * Is this item usable at base level, disregarding per-action details.\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get canUse() {\n    return this.isActive;\n  }\n\n  /**\n   * For supporting actions and changes in fromUuid()\n   *\n   * @override\n   *\n   * Synced with Foundry v12.331\n   */\n  getEmbeddedDocument(embeddedName, id, options) {\n    switch (embeddedName) {\n      case pf1.components.ItemAction.metadata.name:\n        return this.actions?.get(id);\n      case pf1.components.ItemChange.metadata.name:\n        return this.changes?.get(id);\n    }\n\n    return super.getEmbeddedDocument(embeddedName, id, options);\n  }\n}\n","import { ItemBasePF } from \"./item-base.mjs\";\n\nconst itemHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Item.documentClasses[type] ?? ItemBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ItemPFProxy = new Proxy(ItemBasePF, itemHandler);\n","export class PF1Tour extends Tour {\n  /**\n   * An array of {@link Application}s that are currently open.\n   * This needs manual tracking from the classes that inherit from `PF1Tour` and\n   * render the applications themselves.\n   *\n   * @type {Array<Application>}\n   */\n  apps = [];\n\n  /**\n   * @returns {TourStep} The previous step.\n   */\n  get previousStep() {\n    return this.hasPrevious ? this.steps[this.stepIndex - 1] : undefined;\n  }\n\n  /**\n   * Gets the current sheet based on if it's displayed or not.\n   * WARNING: This won't work if the actor sheet is not displayed or there are multiple actor sheets open at once.\n   *\n   * @returns {pf1.applications.actor.ActorSheetPF | undefined} The current actor sheet if found.\n   */\n  get sheetInDisplay() {\n    // We need to Actor ID to find the sheet. The actor ID is in the ID of the sheet element but needs some formatting\n    return Object.values(ui.windows).find((app) => app instanceof ActorSheet);\n  }\n\n  /**\n   * Based on the `steps` variable, it returns an object with the normalized step IDs as keys and the step IDs as values.\n   * The formatting will take `step-1` and return `STEP_1`.\n   *\n   * @returns {Record<string, string>} An object with the normalized step IDs as keys and the step IDs as values.\n   */\n  get StepsEnum() {\n    return this.steps.reduce((steps, step) => {\n      const stepKey = step.id.replaceAll(/-/g, \"_\").toUpperCase();\n      steps[stepKey] = step.id;\n      return steps;\n    }, {});\n  }\n\n  /**\n   * Given the ID of a step, returns the step index associated with it.\n   *\n   * @param {string} id The ID of the step.\n   * @returns {number} The step index with the given ID (-1 if not found).\n   */\n  getStepIndexById(id) {\n    return this.steps.findIndex((step) => step.id === id);\n  }\n\n  /**\n   * In many steps we might need an specific {@link pf1.applications.compendiumBrowser.CompendiumBrowser} to be opened\n   * to continue. This function opens the given type of compendium and stores it for later closing or referencing.\n   *\n   * @param {string} compendium - The compendium to open.\n   * @param {object} [options={}] - Additional options to pass to the render function.\n   * @see {@link pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers}\n   * @see {@link Application._render}\n   *\n   * @returns {Promise<pf1.applications.compendiumBrowser.CompendiumBrowser>} The opened compendium.\n   */\n  async openCompendiumBrowser(compendium, options = {}) {\n    // Open compendium\n    const comp = pf1.applications.compendiums[compendium];\n    if (!comp) {\n      throw new Error(`Compendium \"${compendium}\" not found`);\n    }\n    // Set current compendium\n    await comp._render(true, { focus: true, ...options });\n    // Add CompendiumBrowser to apps\n    this.apps.push(comp);\n\n    return comp;\n  }\n\n  /**\n   * Same as {@link openCompendiumBrowser} but for {@link CompendiumCollection}.\n   *\n   * @param {string} compendium - The compendium to open.\n   * @param {object} [options={}] - Additional options to pass to the render function.\n   * @see {@link openCompendiumBrowser}\n   * @see {@link Application._render}\n   * @see {@link Compendium}\n   *\n   * @returns {Promise<CompendiumCollection>} The opened compendium.\n   */\n  async openCompendium(compendium, options = {}) {\n    /** @type {CompendiumCollection} */\n    const comp = game.packs.get(compendium, { strict: true });\n\n    // Open compendium\n    const compApp = comp.apps.find((app) => app instanceof comp.applicationClass);\n    // Render and add to apps\n    await compApp._render(true, { focus: true, ...options });\n    // Add Compendium to apps\n    this.apps.push(compApp);\n\n    return comp;\n  }\n\n  /**\n   * Closes the currently opened {@link pf1.applications.compendiumBrowser.CompendiumBrowser} or {@link Compendium} either\n   * by referencing the variable or checking if the active window is the compendium.\n   *\n   * @see {@link openCompendiumBrowser}\n   * @see {@link Application.close}\n   *\n   * @returns {Promise<void>}\n   */\n  async closeCompendium() {\n    const compApps = this.apps.filter(\n      (app) => app instanceof pf1.applications.compendiumBrowser.CompendiumBrowser || app instanceof Compendium\n    );\n\n    for (const app of compApps) {\n      this._debug(`Closing \\`${app.constructor.name}\\` ${app.id}`);\n      await app.close();\n    }\n  }\n\n  /**\n   * This log functions outputs the given text to the console with Tour ID in the log message.\n   *\n   * @param {string} text The text to log.\n   * @param {\"log\"|\"debug\"|\"warn\"} loglevel The log level to use.\n   * @param {...any} args Extra arguments to pass to {@link console.info}.\n   */\n  _log(text, loglevel = \"log\", ...args) {\n    console[loglevel](`[Tour Step \"%s.%s.%s\"]: ${text}`, ...[this.namespace, this.id, this.currentStep?.id, ...args]);\n  }\n\n  /**\n   * @param {string} text The text to log.\n   * @param  {...any} args Extra arguments to pass to {@link console.info}.\n   * @see {@link _log}\n   */\n  _debug(text, ...args) {\n    this._log(text, \"debug\", ...args);\n  }\n\n  /**\n   * @param {string} text The text to log.\n   * @param  {...any} args Extra arguments to pass to {@link console.info}.\n   * @see {@link _log}\n   */\n  _warn(text, ...args) {\n    this._log(text, \"warn\", ...args);\n  }\n\n  /**\n   * Expands a compendium folder and parent folders if found in the Compendium tab.\n   * Ultimately returns the direct compendium folder.\n   *\n   * @param {string} pack - The name of the compendium from which to get the folder.\n   *\n   * @returns {Folder | null} The actors folder.\n   */\n  expandCompendiumFolder(pack) {\n    // We'll retrieve the element based on the ID and for that we'll need the folder object from compendium\n    const compendium = game.packs.get(pack, { strict: true });\n    /** @type {Folder} */\n    const folder = compendium.folder;\n\n    if (!folder) {\n      this._debug(\n        \"Couldn't find the folder ID for the Basic Monsters compendium. It could be that the compendium isn't in a folder.\"\n      );\n      return null;\n    }\n\n    /**\n     * Given a folder it removes the `collapse` tag expanding it and searches for a parent folder in order to to the same.\n     *\n     * @param {Folder} folder - The folder to expand.\n     */\n    const clickFolder = (folder) => {\n      if (!folder.expanded) {\n        /** @type {HTMLLIElement | null} */\n        const folderEl = document.querySelector(`li.directory-item.folder[data-uuid=\"Folder.${folder.id}\"]`);\n        // The one that triggers the click is the header\n        folderEl?.querySelector(\"header\")?.click();\n      }\n\n      // If this folder is child of another folder we want to expand it as well\n      if (folder.folder) {\n        clickFolder(folder.folder);\n      }\n    };\n\n    clickFolder(folder);\n\n    return folder;\n  }\n\n  /** @override */\n  async _preStep() {\n    if (this.currentStep.sheetTab) {\n      this._debug(\n        `(${this._preStep.name}) Activating ${this.currentStep.sheetTab.tabName} (${this.currentStep.sheetTab.group}) tab`\n      );\n      this.sheetInDisplay?.activateTab(this.currentStep.sheetTab.tabName, { group: this.currentStep.sheetTab.group });\n    }\n\n    await super._preStep();\n  }\n}\n","import { PF1Tour } from \"./base-tours.mjs\";\n\nexport class PF1ActorSheetTour extends PF1Tour {\n  /**\n   * Opens the sheet of the actor used for the tour and assigns it to `this.sheetInDisplay`.\n   *\n   * @param {object} [options={}] - Options to pass to the render function.\n   *\n   * @returns {Promise<ActorSheet>} The opened sheet.\n   */\n  async openSheet(options = {}) {\n    const comp = game.packs.get(this.config.compendiumId, { strict: true });\n\n    /** @type {pf1.documents.actor.ActorPF | undefined} */\n    const actor = await comp.getDocument(this.config.actorId);\n    if (!actor) {\n      throw new Error(`Actor with ID ${this.config.actorId} not found in compendium ${this.config.compendiumId}`);\n    }\n\n    /** @type {ActorSheet | undefined} */\n    const sheet = actor.sheet;\n    await sheet._render(true, { focus: true, options });\n    // Add sheet to apps\n    this.apps.push(sheet);\n    return sheet;\n  }\n\n  /** @override */\n  async start() {\n    ui.sidebar.tabs.compendium.activate();\n\n    await super.start();\n  }\n\n  /** @override */\n  async previous() {\n    switch (this.previousStep?.id) {\n      // Returning to the Compendium tab after opening the compendium\n      case this.StepsEnum.GO_TO_BASIC_MONSTERS:\n        this._debug(`(${this.previous.name}) Closing Basic Monsters compendium to return to the compendium tab`);\n        await this.closeCompendium();\n        // FIXME: Since the compendium is closed we need to remove manually the tooltips otherwise they will still be visible\n        // and tour stuck\n        // This will cause to `_postStep` to be called twice but it *should* be fine\n        await this._postStep();\n        break;\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        this._debug(`(${this.previous.name}) Closing sheet to return to the compendium`);\n        await this.sheetInDisplay?.close();\n        break;\n      default:\n        if (!this.previousStep) {\n          this._warn(`(${this.previous.name}) The previous step to ${this.currentStep?.id} doesn't seem exist.`);\n        }\n        break;\n    }\n\n    await super.previous();\n  }\n\n  /** @override */\n  exit() {\n    this.apps.forEach((app) => app.close());\n\n    super.exit();\n  }\n\n  /** @override */\n  async _preStep() {\n    // Based on the current step index we'll know if the character sheet needs to be opened\n    // From HIGHLIGHT_SHEET onwards we'll be overseeing the character sheet\n    if (this.stepIndex >= this.getStepIndexById(this.StepsEnum.HIGHLIGHT_SHEET)) {\n      this._debug(`(${this._preStep.name}) Opening character sheet for overview`);\n      await this.openSheet(this.config.actorId);\n    }\n\n    // Actions for *specific* steps\n    switch (this.currentStep?.id) {\n      case this.StepsEnum.GO_TO_BASIC_MONSTERS:\n        // We need to expand the Actors folder for the selector of this step to work\n        this._debug(`(${this._preStep.name}) Expanding Actors folder`);\n        this.expandCompendiumFolder(this.config.compendiumId);\n        break;\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        // We need to open the Basic Monsters compendium\n        this._debug(`(${this._preStep.name}) Rendering Basic Monsters compendium`);\n        await this.openCompendium(this.config.compendiumId);\n        break;\n      case this.StepsEnum.SPELLBOOKS_CONFIGURATION:\n        // Expand the Configuration section\n        this._debug(`(${this._preStep.name}) Opening primary spellbook configuration`);\n        // At this point we don't have a targetElement so we need to find it by selector\n        document.querySelector(this.currentStep?.selector)?.click();\n        break;\n      default:\n        if (!this.currentStep?.id) {\n          this._warn(`(${this._preStep.name}) The current step doesn't seem to have an ID.`);\n          return;\n        }\n        break;\n    }\n\n    await super._preStep();\n  }\n\n  /** @override */\n  async _postStep() {\n    await super._postStep();\n\n    switch (this.currentStep?.id) {\n      // After highlighting the entry in the compendium, we need to open the sheet\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        this._debug(`(${this._postStep.name}) Closing Basic Monsters compendium`);\n        this.closeCompendium();\n        break;\n      case this.StepsEnum.SPELLBOOKS_CONFIGURATION:\n        this._debug(`(${this._postStep.name}) Closing primary spellbook configuration`);\n        this.targetElement?.click();\n        break;\n      default:\n        if (!this.currentStep?.id) {\n          this._warn(`(${this._postStep.name}) The current step doesn't seem to have an ID.`);\n          return;\n        }\n        break;\n    }\n  }\n\n  /** @override */\n  async complete() {\n    this._debug(`(${this.complete.name}) Completing tour`);\n    this.apps.forEach((app) => app.close());\n\n    await super.complete();\n  }\n}\n","import { PF1ActorSheetTour } from \"./tours/actor-sheet-tour.mjs\";\n\nHooks.once(\"ready\", async function registerPF1Tours() {\n  // Actor Sheet Tour\n  game.tours.register(\"pf1\", \"actorSheet\", await PF1ActorSheetTour.fromJSON(\"systems/pf1/tours/actor-sheet-tour.json\"));\n});\n","/**\n * PF1 Configuration Values\n *\n * A dictionary of dictionaries providing configuration data like formulae,\n * translation keys, and other configuration values. Translations keys are\n * assumed to get replaced by their proper translation when the system is loaded.\n *\n * These may be adjusted to influence the system's behaviour during runtime.\n * It is available as `pf1.config` as well as through `CONFIG.PF1`.\n *\n * @module\n */\n\n/**\n * @internal\n */\nexport const re = {\n  traitSeparator: /\\s*[;]\\s*/g,\n};\n\n/**\n * The set of Ability Scores used within the system\n *\n * @enum {string}\n */\nexport const abilities = /** @type {const} */ ({\n  str: \"PF1.AbilityStr\",\n  dex: \"PF1.AbilityDex\",\n  con: \"PF1.AbilityCon\",\n  int: \"PF1.AbilityInt\",\n  wis: \"PF1.AbilityWis\",\n  cha: \"PF1.AbilityCha\",\n});\n\n/**\n * The set of Ability Scores used within the system in short form\n */\nexport const abilitiesShort = /** @type {const} */ ({\n  str: \"PF1.AbilityShortStr\",\n  dex: \"PF1.AbilityShortDex\",\n  con: \"PF1.AbilityShortCon\",\n  int: \"PF1.AbilityShortInt\",\n  wis: \"PF1.AbilityShortWis\",\n  cha: \"PF1.AbilityShortCha\",\n});\n\n/**\n * The point cost to increase an ability score using Point Buy\n */\nexport const abilityCost = /** @type {const} */ ({\n  7: -4,\n  8: -2,\n  9: -1,\n  10: 0,\n  11: 1,\n  12: 2,\n  13: 3,\n  14: 5,\n  15: 7,\n  16: 10,\n  17: 13,\n  18: 17,\n});\n\n/**\n * Point buy calculator.\n */\nexport const pointBuy = /** @type {const} */ ({\n  low: { label: \"PF1.Application.PointBuy.Type.low\", points: 10 },\n  standard: { label: \"PF1.Application.PointBuy.Type.standard\", points: 15 },\n  high: { label: \"PF1.Application.PointBuy.Type.high\", points: 20 },\n  epic: { label: \"PF1.Application.PointBuy.Type.epic\", points: 25 },\n});\n\n/**\n * At which levels you receive how many new ability points.\n */\nexport const levelAbilityScores = /** @type {const} */ ({\n  4: 1,\n  8: 1,\n  12: 1,\n  16: 1,\n  20: 1,\n});\n\n/**\n * How many points are assigned per choice.\n *\n * For homebrew support.\n *\n * @type {number}\n */\nexport const levelAbilityScoreMult = 1;\n\n/**\n * At which mythic tiers you receive how many new ability points.\n */\nexport const tierAbilityScores = /** @type {const} */ ({\n  2: 2,\n  4: 2,\n  6: 2,\n  8: 2,\n  10: 2,\n});\n\n/**\n * How many points are assigned per choice.\n *\n * @type {number}\n */\nexport const tierAbilityScoreMult = 2;\n\n/**\n * Valid hit die sizes.\n */\nexport const hitDieSizes = /** @type {const} */ ([6, 8, 10, 12]);\n\n/**\n * Item data for the feature associated with ability scores gained from leveling.\n */\nexport const levelAbilityScoreFeature = /** @type {const} */ ({\n  img: \"systems/pf1/icons/skills/affliction_10.jpg\",\n  name: \"PF1.LevelUp.AbilityScore.Item.Name\",\n  system: {\n    description: {\n      value: \"PF1.LevelUp.AbilityScore.Item.Desc\",\n    },\n    subType: \"misc\",\n  },\n  type: \"feat\",\n});\n\n/**\n * The set of Saving Throws\n */\nexport const savingThrows = /** @type {const} */ ({\n  fort: \"PF1.SavingThrowFort\",\n  ref: \"PF1.SavingThrowRef\",\n  will: \"PF1.SavingThrowWill\",\n});\n\n/**\n * The types of classes\n */\nexport const classTypes = /** @type {const} */ ({\n  base: \"PF1.Subtypes.Item.class.base.Single\",\n  prestige: \"PF1.Subtypes.Item.class.prestige.Single\",\n  npc: \"PF1.Subtypes.Item.class.npc.Single\",\n  racial: \"PF1.Subtypes.Item.class.racial.Single\",\n  mythic: \"PF1.Subtypes.Item.class.mythic.Single\",\n});\n\n/**\n * Valid options for a class's BAB progression\n */\nexport const classBAB = /** @type {const} */ ({\n  low: \"PF1.Low\",\n  med: \"PF1.Medium\",\n  high: \"PF1.High\",\n  custom: \"PF1.Custom\",\n});\n\n/**\n * Valid options for a class's saving throw bonus progression\n */\nexport const classSavingThrows = /** @type {const} */ ({\n  low: \"PF1.Poor\",\n  high: \"PF1.Good\",\n  custom: \"PF1.Custom\",\n});\n\n/**\n * The formulae for BAB progressions\n */\nexport const classBABFormulas = /** @type {const} */ ({\n  low: \"floor(@hitDice * 0.5)\",\n  med: \"floor(@hitDice * 0.75)\",\n  high: \"@hitDice\",\n  custom: \"0\",\n});\n\nexport const classFractionalBABFormulas = /** @type {const} */ ({\n  low: \"@hitDice * 0.5\", // 1/2\n  med: \"@hitDice * 0.75\", // 3/4\n  high: \"@hitDice\", // 1/1\n  custom: \"0\",\n});\n\n/**\n * The formulae for saving throw progressions by class type\n */\nexport const classSavingThrowFormulas = /** @type {const} */ ({\n  base: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  prestige: {\n    low: \"floor((1 + @hitDice) / 3)\",\n    high: \"floor((1 + @hitDice) / 2)\",\n  },\n  npc: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  racial: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n});\n\nexport const classFractionalSavingThrowFormulas = /** @type {const} */ ({\n  goodSaveBonus: \"2\",\n  base: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  prestige: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  npc: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  racial: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n});\n\n/**\n * Item types that can have class associations.\n *\n * @todo\n * - Move this to item metadata.\n */\nexport const classAssociations = /** @type {const} */ ([\"feat\", \"attack\"]);\n\n/**\n * The choices available for favoured class bonuses\n */\nexport const favouredClassBonuses = /** @type {const} */ ({\n  hp: \"PF1.FavouredClass.Bonuses.hp\",\n  skill: \"PF1.FavouredClass.Bonuses.skill\",\n  alt: \"PF1.FavouredClass.Bonuses.alt\",\n});\n\n/**\n * Icons used for favoured class bonus choices\n */\nexport const favouredClassBonusIcons = /** @type {const} */ ({\n  hp: \"fa-heartbeat\",\n  skill: \"fa-wrench\",\n  alt: \"fa-tag\",\n});\n\n/**\n * The set of Armor Classes\n */\nexport const ac = /** @type {const} */ ({\n  normal: \"PF1.ACNormal\",\n  touch: \"PF1.ACTouch\",\n  flatFooted: \"PF1.ACFlatFooted\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Character alignment options\n */\nexport const alignments = /** @type {const} */ ({\n  lg: \"PF1.Alignments.lg\",\n  ng: \"PF1.Alignments.ng\",\n  cg: \"PF1.Alignments.cg\",\n  ln: \"PF1.Alignments.ln\",\n  tn: \"PF1.Alignments.tn\",\n  cn: \"PF1.Alignments.cn\",\n  le: \"PF1.Alignments.le\",\n  ne: \"PF1.Alignments.ne\",\n  ce: \"PF1.Alignments.ce\",\n});\n\n/**\n * Character alignment options in their short form\n */\nexport const alignmentsShort = /** @type {const} */ ({\n  lg: \"PF1.Alignments.Short.lg\",\n  ng: \"PF1.Alignments.Short.ng\",\n  cg: \"PF1.Alignments.Short.cg\",\n  ln: \"PF1.Alignments.Short.ln\",\n  tn: \"PF1.Alignments.Short.tn\",\n  cn: \"PF1.Alignments.Short.cn\",\n  le: \"PF1.Alignments.Short.le\",\n  ne: \"PF1.Alignments.Short.ne\",\n  ce: \"PF1.Alignments.Short.ce\",\n});\n\n/**\n * Extra damage reduction types\n *\n * @alpha\n */\nexport const damageResistances = /** @type {const} */ ({\n  lawful: \"PF1.Alignments.l\",\n  chaotic: \"PF1.Alignments.c\",\n  good: \"PF1.Alignments.g\",\n  evil: \"PF1.Alignments.e\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The set of Armor Proficiencies which a character may have\n */\nexport const armorProficiencies = /** @type {const} */ ({\n  lgt: \"PF1.Proficiency.Armor.light\",\n  med: \"PF1.Proficiency.Armor.medium\",\n  hvy: \"PF1.Proficiency.Armor.heavy\",\n  shl: \"PF1.Proficiency.Armor.shield\",\n  twr: \"PF1.Proficiency.Armor.tower\",\n});\n\n/**\n * The set of broad Weapon Proficiencies a character may have\n */\nexport const weaponProficiencies = /** @type {const} */ ({\n  simple: \"PF1.Proficiency.Weapon.simple\",\n  martial: \"PF1.Proficiency.Weapon.martial\",\n  firearm: \"PF1.Proficiency.Weapon.firearm\",\n  siege: \"PF1.Proficiency.Weapon.siege\",\n  heavy: \"PF1.Proficiency.Weapon.heavy\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * This describes the ways that an ability can be activated.\n */\nexport const abilityActivationTypes = /** @type {const} */ ({\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  swift: \"PF1.Activation.swift.Single\",\n  immediate: \"PF1.Activation.immediate.Single\",\n  move: \"PF1.Activation.move.Single\",\n  standard: \"PF1.Activation.standard.Single\",\n  full: \"PF1.Activation.fullRound.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  round: \"PF1.Activation.round.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n});\n\n/**\n * This describes plurals for activation types.\n */\nexport const abilityActivationTypesPlurals = /** @type {const} */ ({\n  free: \"PF1.Activation.free.Plural\",\n  swift: \"PF1.Activation.swift.Plural\",\n  immediate: \"PF1.Activation.immediate.Plural\",\n  move: \"PF1.Activation.move.Plural\",\n  standard: \"PF1.Activation.standard.Plural\",\n  full: \"PF1.Activation.fullRound.Plural\",\n  attack: \"PF1.Activation.attack.Plural\",\n  round: \"PF1.Activation.round.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n});\n\n/**\n * This describes the ways that an ability can be activated when using\n * Unchained rules.\n */\nexport const abilityActivationTypes_unchained = /** @type {const} */ ({\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  reaction: \"PF1.Activation.reaction.Single\",\n  action: \"PF1.Activation.action.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n});\n\n/**\n * This describes plurals for the ways that an ability can be activated when\n * using Unchained rules.\n */\nexport const abilityActivationTypesPlurals_unchained = /** @type {const} */ ({\n  passive: \"PF1.Activation.passive.Plural\",\n  free: \"PF1.Activation.free.Plural\",\n  reaction: \"PF1.Activation.reaction.Plural\",\n  action: \"PF1.Activation.action.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n  special: \"PF1.Activation.special.Plural\",\n});\n\n/**\n * Activation types that have no meaningful cost\n */\nexport const costlessActivation = /** @type {const} */ (\n  new Set([\n    \"special\",\n    \"free\",\n    \"aoo\",\n    \"attack\",\n    \"move\",\n    \"nonaction\",\n    \"passive\",\n    \"standard\",\n    \"swift\",\n    \"reaction\",\n    \"immediate\",\n  ])\n);\n\n/**\n * The possible conditions when using Wound Threshold rules\n */\nexport const woundThresholdConditions = /** @type {const} */ ({\n  0: \"PF1.WoundLevel.healthy\",\n  1: \"PF1.WoundLevel.grazed\",\n  2: \"PF1.WoundLevel.wounded\",\n  3: \"PF1.WoundLevel.critical\",\n});\n\n/**\n * Change targets affected by Wound Thresholds.\n */\nexport const woundThresholdChangeTargets = /** @type {const} */ ([\n  \"~attackCore\",\n  \"cl\",\n  \"allSavingThrows\",\n  \"ac\",\n  //\"cmd\", // valid target but is inherited from \"ac\"\n  \"skills\",\n  \"allChecks\",\n  //\"init\", // inherited from allChecks\n  //\"abilityChecks\", // inherited from allChecks\n]);\n\nexport const divineFocus = /** @type {const} */ ({\n  0: \"\",\n  1: \"PF1.SpellComponents.DFVariants.DF\",\n  2: \"PF1.SpellComponents.DFVariants.MDF\",\n  3: \"PF1.SpellComponents.DFVariants.FDF\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The possible creature sizes\n */\nexport const actorSizes = /** @type {const} */ ({\n  fine: \"PF1.ActorSize.fine\",\n  dim: \"PF1.ActorSize.dim\",\n  tiny: \"PF1.ActorSize.tiny\",\n  sm: \"PF1.ActorSize.sm\",\n  med: \"PF1.ActorSize.med\",\n  lg: \"PF1.ActorSize.lg\",\n  huge: \"PF1.ActorSize.huge\",\n  grg: \"PF1.ActorSize.grg\",\n  col: \"PF1.ActorSize.col\",\n});\n\n/**\n * Possible creature age categories\n */\nexport const ageCategories = /** @type {const} */ ({\n  young: {\n    label: \"PF1.AgeCategories.young\",\n    modifiers: { str: -2, dex: 2, con: -2, int: 0, wis: -2, cha: 0 },\n  },\n  adult: {\n    label: \"PF1.AgeCategories.adult\",\n    modifiers: { str: 0, dex: 0, con: 0, int: 0, wis: 0, cha: 0 },\n  },\n  middleAge: {\n    label: \"PF1.AgeCategories.middleAge\",\n    modifiers: { str: -1, dex: -1, con: -1, int: 1, wis: 1, cha: 1 },\n  },\n  old: {\n    label: \"PF1.AgeCategories.old\",\n    modifiers: { str: -3, dex: -3, con: -3, int: 2, wis: 2, cha: 2 },\n  },\n  venerable: {\n    label: \"PF1.AgeCategories.venerable\",\n    modifiers: { str: -6, dex: -6, con: -6, int: 3, wis: 3, cha: 3 },\n  },\n});\n\n/**\n * Armor & shield cost multipliers for different creature sizes.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorCost = /** @type {const} */ ({\n  humanoid: {\n    fine: 0.5,\n    dim: 0.5,\n    tiny: 0.5,\n    sm: 1,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  nonhumanoid: {\n    fine: 1,\n    dim: 1,\n    tiny: 1,\n    sm: 2,\n    med: 2,\n    lg: 4,\n    huge: 8,\n    grg: 16,\n    col: 32,\n  },\n});\n\n/**\n * Armor weight multipliers for different creature sizes.\n *\n * The values are same for both humanoid and non-humanoid.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorWeight = /** @type {const} */ ({\n  fine: 0.1,\n  dim: 0.1,\n  tiny: 0.1,\n  sm: 0.5,\n  med: 1,\n  lg: 2,\n  huge: 5,\n  grg: 8,\n  col: 12,\n});\n\n/**\n * The possible creature sizes in their one-letter form\n */\nexport const sizeChart = /** @type {const} */ ({\n  fine: \"F\",\n  dim: \"D\",\n  tiny: \"T\",\n  sm: \"S\",\n  med: \"M\",\n  lg: \"L\",\n  huge: \"H\",\n  grg: \"G\",\n  col: \"C\",\n});\n\n/**\n * @typedef {object} TokenSize\n * @property {number} w - Width, in cells\n * @property {number} h - Height, in cells\n * @property {number} scale - Scale ratio\n */\n\n/**\n * The size values for Tokens according to the creature's size\n *\n * @type {Record<string,TokenSize>}\n */\nexport const tokenSizes = /** @type {const} */ ({\n  fine: { w: 1, h: 1, scale: 0.25 },\n  dim: { w: 1, h: 1, scale: 0.4 },\n  tiny: { w: 1, h: 1, scale: 0.55 },\n  sm: { w: 1, h: 1, scale: 0.75 },\n  med: { w: 1, h: 1, scale: 1 },\n  lg: { w: 2, h: 2, scale: 1 },\n  huge: { w: 3, h: 3, scale: 1 },\n  grg: { w: 4, h: 4, scale: 1 },\n  col: { w: 6, h: 6, scale: 1 },\n});\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeMods = /** @type {const} */ ({\n  fine: 8,\n  dim: 4,\n  tiny: 2,\n  sm: 1,\n  med: 0,\n  lg: -1,\n  huge: -2,\n  grg: -4,\n  col: -8,\n});\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeSpecialMods = /** @type {const} */ ({\n  fine: -8,\n  dim: -4,\n  tiny: -2,\n  sm: -1,\n  med: 0,\n  lg: 1,\n  huge: 2,\n  grg: 4,\n  col: 8,\n});\n\n/**\n * The size modifier applied to fly checks of creatures not of medium size\n */\nexport const sizeFlyMods = /** @type {const} */ ({\n  fine: 8,\n  dim: 6,\n  tiny: 4,\n  sm: 2,\n  med: 0,\n  lg: -2,\n  huge: -4,\n  grg: -6,\n  col: -8,\n});\n\n/**\n * The size modifier applied to stealth checks of creatures not of medium size\n */\nexport const sizeStealthMods = /** @type {const} */ ({\n  fine: 16,\n  dim: 12,\n  tiny: 8,\n  sm: 4,\n  med: 0,\n  lg: -4,\n  huge: -8,\n  grg: -12,\n  col: -16,\n});\n\n/**\n * Vehicle properties based on size and type\n */\nexport const vehicles = /** @type {const} */ ({\n  size: {\n    lg: {\n      label: \"PF1.ActorSize.lg\",\n      space: \"PF1.Vehicles.Space.Large\",\n    },\n    huge: {\n      label: \"PF1.ActorSize.huge\",\n      space: \"PF1.Vehicles.Space.Huge\",\n    },\n    grg: {\n      label: \"PF1.ActorSize.grg\",\n      space: \"PF1.Vehicles.Space.Gargantuan\",\n    },\n    col: {\n      label: \"PF1.ActorSize.col\",\n      space: \"PF1.Vehicles.Space.Colossal\",\n    },\n  },\n  type: {\n    land: \"PF1.Vehicles.Types.Land\",\n    sea: \"PF1.Vehicles.Types.Sea\",\n    air: \"PF1.Vehicles.Types.Air\",\n  },\n});\n\nexport const vehicleMaterials = /** @type {const} */ ({\n  leather: {\n    label: \"PF1.Materials.Types.leather\",\n    hp: 10,\n    hardness: 0,\n  },\n  wood: {\n    label: \"PF1.Materials.Types.wood\",\n    hp: 15,\n    hardness: 5,\n  },\n  stone: {\n    label: \"PF1.Materials.Types.stone\",\n    hp: 20,\n    hardness: 8,\n  },\n  metal: {\n    label: \"PF1.Vehicles.Metal\",\n    hp: 20,\n    hardness: 10,\n  },\n});\n\n/**\n * Haunt templates with CR and journal link\n */\nexport const hauntTemplates = /** @type {const} */ ({\n  belligerent: {\n    cr: 3,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.ViD7x7D2AEIUp2dQ\",\n  },\n  itemBound: {\n    cr: -1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.GgK76mqrJm8iPitI\",\n  },\n  chained: {\n    cr: -1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.xRk4w3d0k9a3XfoR\",\n  },\n  elusive: {\n    cr: 1,\n    crBonus: 1,\n    crBonusTag: \"persistent\",\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.FeZDtjPSyxxqtvSP\",\n  },\n  fast: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.gOUBR4eNOqKZrQbe\",\n  },\n  freeRoaming: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.70TeCwEEWNTqet9j\",\n  },\n  increasedArea: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.7bujYFyTIngbWcC7\",\n  },\n  latent: {\n    cr: 0,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.LBvgVviZKigP49TT\",\n  },\n  persistent: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.UJplPnsAXORwc0wG\",\n  },\n  possessing: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.POoYy22lWnkNtlrG\",\n  },\n  spiteful: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.bt61t3hOagcnoXzF\",\n  },\n  tenacious: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.NQsW2HGccyOeVFt0\",\n  },\n  unyielding: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.F9mLugVUBaIUtU0g\",\n  },\n  vaporous: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.eEur8JYjiDBCcpv6\",\n  },\n  variant: {\n    cr: 0,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.wo4WlQIj0hd4zYgn\",\n  },\n});\n\n/**\n * Haunt template labels\n */\nexport const hauntTemplateLabels = /** @type {const} */ ({\n  belligerent: \"PF1.Haunt.Template.belligerent\",\n  itemBound: \"PF1.Haunt.Template.itemBound\",\n  chained: \"PF1.Haunt.Template.chained\",\n  elusive: \"PF1.Haunt.Template.elusive\",\n  fast: \"PF1.Haunt.Template.fast\",\n  freeRoaming: \"PF1.Haunt.Template.freeRoaming\",\n  increasedArea: \"PF1.Haunt.Template.increasedArea\",\n  latent: \"PF1.Haunt.Template.latent\",\n  persistent: \"PF1.Haunt.Template.persistent\",\n  possessing: \"PF1.Haunt.Template.possessing\",\n  spiteful: \"PF1.Haunt.Template.spiteful\",\n  tenacious: \"PF1.Haunt.Template.tenacious\",\n  unyielding: \"PF1.Haunt.Template.unyielding\",\n  vaporous: \"PF1.Haunt.Template.vaporous\",\n  variant: \"PF1.Haunt.Template.variant\",\n});\n\n/**\n * Trap properties with labels\n */\nexport const traps = /** @type {const} */ ({\n  bypass: {\n    lock: \"PF1.Trap.Bypass.Lock\",\n    hiddenSwitch: \"PF1.Trap.Bypass.HiddenSwitch\",\n    hiddenLock: \"PF1.Trap.Bypass.HiddenLock\",\n  },\n  reset: {\n    automatic: \"PF1.Trap.Reset.Automatic\",\n    manual: \"PF1.Trap.Reset.Manual\",\n    repair: \"PF1.Trap.Reset.Repair\",\n  },\n  trigger: {\n    electricEyes: \"PF1.Trap.Triggers.ElectricEyes\",\n    genetic: \"PF1.Trap.Triggers.Genetic\",\n    location: \"PF1.Trap.Triggers.Location\",\n    proximity: \"PF1.Trap.Triggers.Proximity\",\n    sound: \"PF1.Trap.Triggers.Sound\",\n    spell: \"PF1.Trap.Triggers.Spell\",\n    timed: \"PF1.Trap.Triggers.Timed\",\n    touch: \"PF1.Trap.Triggers.Touch\",\n    visual: \"PF1.Trap.Triggers.Visual\",\n  },\n  types: {\n    magic: \"PF1.Trap.Types.Magic\",\n    mechanical: \"PF1.Trap.Types.Mechanical\",\n  },\n  vision: {\n    arcaneEye: \"PF1.Trap.Vision.ArcaneEye\",\n    clairvoyance: \"PF1.Trap.Vision.Clairvoyance\",\n    darkvision: \"PF1.Sense.darkvision\",\n    seeInDarkness: \"PF1.Sense.seeInDark\",\n    trueSeeing: \"PF1.Trap.Vision.TrueSeeing\",\n  },\n});\n\n/**\n * Perception Modifiers for Trap's trigger detections\n */\nexport const trapPerceptionModifiers = /** @type {const} */ ({\n  electricEyes: 15,\n  sound: 15,\n  vision: {\n    arcaneEye: 20,\n    clairvoyance: 15,\n    trueSeeing: 30,\n  },\n});\n\n/**\n * The possible options for a creature's flight maneuverability\n */\nexport const flyManeuverabilities = /** @type {const} */ ({\n  clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n  poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n  average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n  good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n  perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n});\n\n/**\n * The bonus values for a creature's maneuverability\n */\nexport const flyManeuverabilityValues = /** @type {const} */ ({\n  clumsy: -8,\n  poor: -4,\n  average: 0,\n  good: 4,\n  perfect: 8,\n});\n\n/**\n * Overland speeds\n */\nexport const overlandSpeed = /** @type {const} */ ({\n  imperial: {\n    // Default\n    // 1 mi per 10 ft\n    default: {\n      per: 10,\n      out: 1,\n      unit: \"mi\",\n    },\n  },\n  metric: {\n    // Metric system, used by German translation\n    // 1.5 km per 3 m\n    rounded: {\n      per: 3,\n      out: 1.5,\n      unit: \"km\",\n    },\n    // Exact metric system, used by Spanish translation\n    // 1.6 km per 3 m\n    exact: {\n      per: 3,\n      out: 1.6,\n      unit: \"km\",\n    },\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * An array of maximum carry capacities, where the index is the ability/strength score.\n */\n// prettier-ignore\nexport const encumbranceLoads = /** @type {const} */ ([\n  0,\n  10,\n  20,\n  30,\n  40,\n  50,\n  60,\n  70,\n  80,\n  90,\n  100,\n  115,\n  130,\n  150,\n  175,\n  200,\n  230,\n  260,\n  300,\n  350,\n  400,\n  460,\n  520,\n  600,\n  700,\n  800,\n  920,\n  1040,\n  1200,\n  1400,\n  1600,\n]);\n\n/**\n * Encumbrance levels for light, medium, and heavy loads.\n *\n * @see {@link ActorPF._computeEncumbrance ActorPF.system.encumbrance.level}\n * @readonly\n * @enum {number}\n */\nexport const encumbranceLevels = /** @type {const} */ ({\n  light: 0,\n  medium: 1,\n  heavy: 2,\n});\n\n/**\n * Encumbrance multipliers applied due to a creature's size for bi- and\n * quadrupedal creatures.\n */\nexport const encumbranceMultipliers = /** @type {const} */ ({\n  normal: {\n    fine: 0.125,\n    dim: 0.25,\n    tiny: 0.5,\n    sm: 0.75,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  quadruped: {\n    fine: 0.25,\n    dim: 0.5,\n    tiny: 0.75,\n    sm: 1,\n    med: 1.5,\n    lg: 3,\n    huge: 6,\n    grg: 12,\n    col: 24,\n  },\n});\n\n/**\n * Item Modifiers based on their enhancement bonus\n */\nexport const itemEnhancementMods = /** @type {const} */ ({\n  hp: 10,\n  hardness: 2,\n});\n\n/**\n * Group Resting information\n *\n * Hours declares how many hours total rest are needed with single person watching.\n *\n * Double is for same as hours, but with two people watching at the same time.\n */\nexport const partyRest = /** @type {const} */ ({\n  1: {\n    hours: 8, // No watches\n    double: null,\n  },\n  2: {\n    hours: 16,\n    double: null,\n  },\n  3: {\n    hours: 12,\n    double: null,\n  },\n  4: {\n    hours: 10.667,\n    double: 16,\n  },\n  5: {\n    hours: 10,\n    double: 16,\n  },\n  6: {\n    hours: 9.6,\n    double: 12,\n  },\n  7: {\n    hours: 9.332,\n    double: 12,\n  },\n  8: {\n    hours: 9,\n    double: 10.667,\n  },\n  // Higher party numbers do not reduce total rest time but can reduce watch time or allow more people to watch\n});\n\n/**\n * Damage multipliers from ability score.\n */\nexport const abilityDamageMultipliers = /** @type {const} */ ([\n  { value: 0.5, label: \"×0.5\" },\n  { value: 1, label: \"×1\" },\n  { value: 1.5, label: \"×1.5\" },\n  { value: 2, label: \"×2\" },\n  { value: 2.5, label: \"×2.5\" },\n]);\n\n/**\n * Ability damage multipliers inherited from held options\n */\nexport const abilityDamageHeldMultipliers = /** @type {const} */ ({\n  oh: 0.5,\n  \"1h\": 1,\n  \"2h\": 1.5,\n});\n\n/**\n * Weapon hold types\n */\nexport const weaponHoldTypes = /** @type {const} */ ({\n  \"1h\": \"PF1.WeaponHoldTypeOneHanded\",\n  \"2h\": \"PF1.WeaponHoldTypeTwoHanded\",\n  oh: \"PF1.WeaponHoldTypeOffhand\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Classification types for item action types\n */\nexport const itemActionTypes = /** @type {const} */ ({\n  mwak: \"PF1.ActionTypes.mwak\",\n  rwak: \"PF1.ActionTypes.rwak\",\n  twak: \"PF1.ActionTypes.twak\",\n  msak: \"PF1.ActionTypes.msak\",\n  rsak: \"PF1.ActionTypes.rsak\",\n  mcman: \"PF1.ActionTypes.mcman\",\n  rcman: \"PF1.ActionTypes.rcman\",\n  spellsave: \"PF1.ActionTypes.spellSave\",\n  save: \"PF1.ActionTypes.save\",\n  heal: \"PF1.ActionTypes.heal\",\n  other: \"PF1.ActionTypes.other\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the lengths of time over which an item can have limited use ability\n */\nexport const limitedUsePeriods = /** @type {const} */ ({\n  single: \"PF1.LimitedUses.Periods.single\",\n  round: \"PF1.LimitedUses.Periods.round\",\n  minute: \"PF1.LimitedUses.Periods.minute\",\n  hour: \"PF1.LimitedUses.Periods.hour\",\n  day: \"PF1.LimitedUses.Periods.day\",\n  week: \"PF1.LimitedUses.Periods.week\",\n  charges: \"PF1.LimitedUses.Periods.charges\",\n});\n\n/**\n * Order of limited use periods from smallest to biggest, omitting periods with no relation to time.\n */\nexport const limitedUsePeriodOrder = /** @type {const} */ ([\"round\", \"minute\", \"hour\", \"day\", \"week\"]);\n\n/* -------------------------------------------- */\n\n/**\n * The various equipment types and their subtypes\n */\nexport const equipmentTypes = /** @type {const} */ ({\n  armor: {\n    _label: \"PF1.Subtypes.Item.equipment.armor.Single\",\n    lightArmor: \"PF1.Subtypes.Item.equipment.armor.Types.light\",\n    mediumArmor: \"PF1.Subtypes.Item.equipment.armor.Types.medium\",\n    heavyArmor: \"PF1.Subtypes.Item.equipment.armor.Types.heavy\",\n  },\n  shield: {\n    _label: \"PF1.Subtypes.Item.equipment.shield.Single\",\n    lightShield: \"PF1.Subtypes.Item.equipment.shield.Types.light\",\n    heavyShield: \"PF1.Subtypes.Item.equipment.shield.Types.heavy\",\n    towerShield: \"PF1.Subtypes.Item.equipment.shield.Types.tower\",\n    other: \"PF1.Subtypes.Item.equipment.shield.Types.misc\",\n  },\n  wondrous: {\n    _label: \"PF1.Subtypes.Item.equipment.wondrous.Single\",\n  },\n  clothing: {\n    _label: \"PF1.Subtypes.Item.equipment.clothing.Single\",\n  },\n  other: {\n    _label: \"PF1.Other\",\n  },\n});\n\n/**\n * The slots equipment can occupy, sorted by category\n */\nexport const equipmentSlots = /** @type {const} */ ({\n  armor: {\n    armor: \"PF1.EquipSlots.armor\",\n  },\n  shield: {\n    shield: \"PF1.EquipSlots.shield\",\n  },\n  wondrous: {\n    slotless: \"PF1.EquipSlots.none\",\n    head: \"PF1.EquipSlots.head\",\n    headband: \"PF1.EquipSlots.headband\",\n    eyes: \"PF1.EquipSlots.eyes\",\n    shoulders: \"PF1.EquipSlots.shoulders\",\n    neck: \"PF1.EquipSlots.neck\",\n    chest: \"PF1.EquipSlots.chest\",\n    body: \"PF1.EquipSlots.body\",\n    belt: \"PF1.EquipSlots.belt\",\n    wrists: \"PF1.EquipSlots.wrists\",\n    hands: \"PF1.EquipSlots.hands\",\n    ring: \"PF1.EquipSlots.ring\",\n    feet: \"PF1.EquipSlots.feet\",\n  },\n  clothing: {\n    clothing: \"PF1.EquipSlots.clothing\",\n  },\n  other: {\n    other: \"PF1.Other\",\n  },\n});\n\nexport const implantTypes = /** @type {const} */ ({\n  cybertech: \"PF1.Subtypes.Item.implant.cybertech.Single\",\n});\n\n/**\n * The slots implants can occupy.\n */\nexport const implantSlots = /** @type {const} */ ({\n  cybertech: {\n    none: \"PF1.Cybertech.Slots.none\",\n    arm: \"PF1.Cybertech.Slots.arm\",\n    body: \"PF1.Cybertech.Slots.body\",\n    brain: \"PF1.Cybertech.Slots.brain\",\n    ears: \"PF1.Cybertech.Slots.ears\",\n    eyes: \"PF1.Cybertech.Slots.eyes\",\n    head: \"PF1.Cybertech.Slots.head\",\n    legs: \"PF1.Cybertech.Slots.legs\",\n  },\n});\n\n/**\n * The subtypes for loot items\n */\nexport const lootTypes = /** @type {const} */ ({\n  gear: \"PF1.Subtypes.Item.loot.gear.Plural\",\n  tool: \"PF1.Subtypes.Item.loot.tool.Plural\",\n  ammo: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n  food: \"PF1.Subtypes.Item.loot.food.Plural\",\n  herb: \"PF1.Subtypes.Item.loot.herb.Plural\",\n  adventuring: \"PF1.Subtypes.Item.loot.adventuring.Plural\",\n  animal: \"PF1.Subtypes.Item.loot.animal.Plural\",\n  animalGear: \"PF1.Subtypes.Item.loot.animalGear.Plural\",\n  reagent: \"PF1.Subtypes.Item.loot.reagent.Plural\",\n  remedy: \"PF1.Subtypes.Item.loot.remedy.Plural\",\n  treasure: \"PF1.Subtypes.Item.loot.treasure.Plural\",\n  tradeGoods: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n  vehicle: \"PF1.Subtypes.Item.loot.vehicle.Plural\",\n  entertainment: \"PF1.Subtypes.Item.loot.entertainment.Plural\",\n  misc: \"PF1.Subtypes.Item.loot.misc.Plural\",\n});\n\n/**\n * Loot subtypes that should not be equippable.\n */\nexport const unequippableLoot = /** @type {const} */ ([\n  \"food\",\n  \"herb\",\n  \"reagent\",\n  \"treasure\",\n  \"tradeGoods\",\n  \"vehicle\",\n  \"entertainment\",\n  \"ammo\",\n]);\n\n/**\n * The subtypes for ammo type loot items\n */\nexport const ammoTypes = /** @type {const} */ ({\n  arrow: \"PF1.AmmoType.arrow\",\n  bolt: \"PF1.AmmoType.bolt\",\n  repeatingBolt: \"PF1.AmmoType.repeatingBolt\",\n  slingBullet: \"PF1.AmmoType.slingBullet\",\n  gunBullet: \"PF1.AmmoType.gunBullet\",\n  dragoonBullet: \"PF1.AmmoType.dragoonBullet\",\n  dart: \"PF1.AmmoType.dart\",\n  siege: \"PF1.AmmoType.siege\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the valid consumable types which are recognized by the system\n */\nexport const consumableTypes = /** @type {const} */ ({\n  potion: \"PF1.Subtypes.Item.consumable.potion.Single\",\n  poison: \"PF1.Subtypes.Item.consumable.poison.Single\",\n  drug: \"PF1.Subtypes.Item.consumable.drug.Single\",\n  scroll: \"PF1.Subtypes.Item.consumable.scroll.Single\",\n  wand: \"PF1.Subtypes.Item.consumable.wand.Single\",\n  rod: \"PF1.Subtypes.Item.consumable.rod.Single\",\n  staff: \"PF1.Subtypes.Item.consumable.staff.Single\",\n  pharmaceutical: \"PF1.Subtypes.Item.consumable.pharmaceutical.Single\",\n  misc: \"PF1.Misc\",\n});\n\nexport const attackTypes = /** @type {const} */ ({\n  weapon: \"PF1.Subtypes.Item.attack.weapon.Single\",\n  natural: \"PF1.Subtypes.Item.attack.natural.Single\",\n  ability: \"PF1.Subtypes.Item.attack.ability.Single\",\n  racialAbility: \"PF1.Subtypes.Item.attack.racialAbility.Single\",\n  item: \"PF1.Item\",\n  misc: \"PF1.Misc\",\n});\n\nexport const featTypes = /** @type {const} */ ({\n  feat: \"PF1.Subtypes.Item.feat.feat.Single\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Single\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Single\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Single\",\n  misc: \"PF1.Misc\",\n  template: \"PF1.Subtypes.Item.feat.template.Single\",\n});\n\nexport const featTypesPlurals = /** @type {const} */ ({\n  feat: \"PF1.Subtypes.Item.feat.feat.Plural\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Plural\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Plural\",\n  template: \"PF1.Subtypes.Item.feat.template.Plural\",\n});\n\nexport const traitTypes = /** @type {const} */ ({\n  combat: \"PF1.Trait.combat\",\n  magic: \"PF1.Trait.magic\",\n  faith: \"PF1.Trait.faith\",\n  social: \"PF1.Trait.social\",\n  campaign: \"PF1.Trait.campaign\",\n  cosmic: \"PF1.Trait.cosmic\",\n  equipment: \"PF1.Trait.equipment\",\n  exemplar: \"PF1.Trait.exemplar\",\n  faction: \"PF1.Trait.faction\",\n  family: \"PF1.Trait.family\",\n  mount: \"PF1.Trait.mount\",\n  race: \"PF1.Trait.race\",\n  region: \"PF1.Trait.region\",\n  religion: \"PF1.Trait.religion\",\n  drawback: \"PF1.Trait.drawback\",\n});\n\nexport const racialTraitCategories = /** @type {const} */ ({\n  defense: \"PF1.RacialTraitCategories.defense\",\n  featSkills: \"PF1.RacialTraitCategories.featSkills\",\n  magical: \"PF1.RacialTraitCategories.magical\",\n  movement: \"PF1.RacialTraitCategories.movement\",\n  senses: \"PF1.RacialTraitCategories.senses\",\n  offense: \"PF1.RacialTraitCategories.offense\",\n  other: \"PF1.RacialTraitCategories.other\",\n  weakness: \"PF1.RacialTraitCategories.weakness\",\n});\n\nexport const raceTypes = /** @type {const} */ ({\n  standard: \"PF1.RaceTypes.standard\",\n  advanced: \"PF1.RaceTypes.advanced\",\n  monstrous: \"PF1.RaceTypes.monstrous\",\n});\n\n/**\n * Ability types, each with their short and their long form\n */\nexport const abilityTypes = /** @type {const} */ ({\n  na: {\n    long: \"PF1.AbilityTypes.na.Label\",\n    short: \"PF1.AbilityTypes.na.Short\",\n  },\n  ex: {\n    long: \"PF1.AbilityTypes.ex.Label\",\n    short: \"PF1.AbilityTypes.ex.Short\",\n  },\n  su: {\n    long: \"PF1.AbilityTypes.su.Label\",\n    short: \"PF1.AbilityTypes.su.Short\",\n  },\n  sp: {\n    long: \"PF1.AbilityTypes.sp.Label\",\n    short: \"PF1.AbilityTypes.sp.Short\",\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * The valid currency denominations supported by the game system\n */\nexport const currencies = /** @type {const} */ ({\n  pp: \"PF1.Currency.Abbr.pp\",\n  gp: \"PF1.Currency.Abbr.gp\",\n  sp: \"PF1.Currency.Abbr.sp\",\n  cp: \"PF1.Currency.Abbr.cp\",\n});\n\n/**\n * Currency\n */\nexport const currency = /** @type {const} */ ({\n  /**\n   * Conversion rates in relation to {@link currency.base base currency}.\n   */\n  rate: {\n    pp: 1_000,\n    gp: 100,\n    sp: 10,\n  },\n\n  /**\n   * Standard currency.\n   *\n   * Most things are valued in this unit.\n   */\n  standard: \"gp\",\n\n  /**\n   * Baseline currency.\n   *\n   * This should always be the lowest valued and most compatible currency, as otherwise rounding errors are likely to occur.\n   */\n  base: \"cp\",\n\n  /**\n   * Standard rate.\n   *\n   * @remarks\n   * - Equivalent of `rate[standard] || 1`\n   *\n   * @type {number}\n   */\n  get standardRate() {\n    return this.rate[this.standard] || 1;\n  },\n});\n\n/**\n * Resultant armor types for an actor's worn armor as per their roll data\n *\n * @see {@link ActorPF.getRollData ActorRollData.armor.type}\n * @readonly\n * @enum {number}\n */\nexport const armorTypes = /** @type {const} */ ({\n  none: 0,\n  light: 1,\n  medium: 2,\n  heavy: 3,\n});\n\n/**\n * Resultant shield types for an actor's worn shield\n *\n * @see {@link ActorPF.getRollData ActorRollData.shield.type}\n * @readonly\n * @enum {number}\n */\nexport const shieldTypes = /** @type {const} */ ({\n  none: 0,\n  other: 1, // buckler\n  light: 2,\n  heavy: 3,\n  tower: 4,\n});\n\n/**\n * The types of bonus modifiers\n */\nexport const bonusTypes = /** @type {const} */ ({\n  untyped: \"PF1.ModifierType.untyped\",\n  untypedPerm: \"PF1.ModifierType.untypedPerm\",\n  base: \"PF1.ModifierType.base\",\n  enh: \"PF1.ModifierType.enhancement\",\n  dodge: \"PF1.ModifierType.dodge\",\n  haste: \"PF1.ModifierType.haste\",\n  inherent: \"PF1.ModifierType.inherent\",\n  deflection: \"PF1.ModifierType.deflection\",\n  morale: \"PF1.ModifierType.morale\",\n  luck: \"PF1.ModifierType.luck\",\n  sacred: \"PF1.ModifierType.sacred\",\n  insight: \"PF1.ModifierType.insight\",\n  resist: \"PF1.ModifierType.resistance\",\n  profane: \"PF1.ModifierType.profane\",\n  trait: \"PF1.ModifierType.trait\",\n  racial: \"PF1.ModifierType.racial\",\n  size: \"PF1.ModifierType.size\",\n  competence: \"PF1.ModifierType.competence\",\n  circumstance: \"PF1.ModifierType.circumstance\",\n  alchemical: \"PF1.ModifierType.alchemical\",\n});\n\n/**\n * An array of stacking bonus types by their keys for {@link bonusTypes}\n */\nexport const stackingBonusTypes = /** @type {const} */ ([\"untyped\", \"untypedPerm\", \"dodge\", \"racial\", \"circumstance\"]);\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n/**\n * Valid options for the range of abilities and spells\n */\nexport const distanceUnits = /** @type {const} */ ({\n  none: \"PF1.None\",\n  personal: \"PF1.Distance.personal\",\n  touch: \"PF1.Distance.touch\",\n  melee: \"PF1.Distance.melee\",\n  reach: \"PF1.Distance.reach\",\n  close: \"PF1.Distance.close\",\n  medium: \"PF1.Distance.medium\",\n  long: \"PF1.Distance.long\",\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  spec: \"PF1.Special\",\n  seeText: \"PF1.SeeText\",\n  unlimited: \"PF1.Unlimited\",\n});\n\nexport const measureUnits = /** @type {const} */ ({\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  m: \"PF1.Distance.m\",\n  km: \"PF1.Distance.km\",\n});\n\nexport const measureUnitsShort = /** @type {const} */ ({\n  ft: \"PF1.Distance.ftShort\",\n  mi: \"PF1.Distance.miShort\",\n  m: \"PF1.Distance.mShort\",\n  km: \"PF1.Distance.kmShort\",\n});\n\n/**\n * Weight units\n */\nexport const weightUnitsShort = {\n  kg: \"PF1.Kgs\",\n  lbs: \"PF1.Lbs\",\n};\n\nexport const actorStatures = /** @type {const} */ ({\n  tall: \"PF1.StatureTall\",\n  long: \"PF1.StatureLong\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * This Object defines the various lengths of time which can occur in PF1\n */\nexport const timePeriods = /** @type {const} */ ({\n  inst: \"PF1.Time.Period.inst.Label\",\n  turn: \"PF1.Time.Period.turn.Label\",\n  round: \"PF1.Time.Period.round.Label\",\n  minute: \"PF1.Time.Period.minute.Label\",\n  hour: \"PF1.Time.Period.hour.Label\",\n  day: \"PF1.Time.Period.day.Label\",\n  month: \"PF1.Time.Period.month.Label\",\n  year: \"PF1.Time.Period.year.Label\",\n  perm: \"PF1.Time.Period.perm.Label\",\n  seeText: \"PF1.SeeText\",\n  spec: \"PF1.Special\",\n});\n\n/**\n * Short form labels for time periods, and valid options for buff durations.\n */\nexport const timePeriodsShort = /** @type {const} */ ({\n  turn: \"PF1.Time.Period.turn.Short\",\n  round: \"PF1.Time.Period.round.Short\",\n  minute: \"PF1.Time.Period.minute.Short\",\n  hour: \"PF1.Time.Period.hour.Short\",\n});\n\n/**\n * Duration end events\n *\n * Used by buffs to decide when exactly their duration ends.\n */\nexport const durationEndEvents = /** @type {const} */ ({\n  turnStart: \"PF1.Time.Turn.Start\",\n  initiative: \"PF1.Initiative\",\n  turnEnd: \"PF1.Time.Turn.End\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Caster types.\n *\n * Keys match options in {@link casterProgression}\n */\nexport const caster = /** @type {const} */ ({\n  /**\n   * Preparation types.\n   */\n  type: {\n    prepared: {\n      label: \"PF1.SpellPrepPrepared\",\n      spontaneous: false,\n      prepared: true,\n    },\n    spontaneous: {\n      label: \"PF1.SpellPrepSpontaneous\",\n      spontaneous: true,\n      prepared: false,\n    },\n    hybrid: {\n      label: \"PF1.Arcanist\",\n      spontaneous: true,\n      prepared: true,\n    },\n    prestige: {\n      label: \"PF1.RedMantisAssassin\",\n      spontaneous: true,\n      prepared: false,\n    },\n  },\n  /**\n   * Progression choices.\n   */\n  progression: {\n    high: {\n      label: \"PF1.High\",\n    },\n    med: {\n      label: \"PF1.Medium\",\n    },\n    low: {\n      label: \"PF1.Low\",\n    },\n  },\n});\n\n/**\n * This Object determines spells gained and cast per level\n */\nexport const casterProgression = /** @type {const} */ ({\n  castsPerDay: {\n    prepared: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 0],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 0],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2],\n        [Number.POSITIVE_INFINITY, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 5],\n        [Number.POSITIVE_INFINITY, 6, 3],\n        [Number.POSITIVE_INFINITY, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n      ],\n    },\n    hybrid: {\n      high: [\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    prestige: {\n      low: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n      ],\n    },\n  },\n  spellsPreparedPerDay: {\n    prepared: {\n      low: [\n        [null],\n        [null],\n        [null],\n        [null, 0],\n        [null, 1],\n        [null, 1],\n        [null, 1, 0],\n        [null, 1, 1],\n        [null, 2, 1],\n        [null, 2, 1, 0],\n        [null, 2, 1, 1],\n        [null, 2, 2, 1],\n        [null, 3, 2, 1, 0],\n        [null, 3, 2, 1, 1],\n        [null, 3, 2, 2, 1],\n        [null, 3, 3, 2, 1],\n        [null, 4, 3, 2, 1],\n        [null, 4, 3, 2, 2],\n        [null, 4, 3, 3, 2],\n        [null, 4, 4, 3, 3],\n      ],\n      med: [\n        [3, 1],\n        [4, 2],\n        [4, 3],\n        [4, 3, 1],\n        [4, 4, 2],\n        [5, 4, 3],\n        [5, 4, 3, 1],\n        [5, 4, 4, 2],\n        [5, 5, 4, 3],\n        [5, 5, 4, 3, 1],\n        [5, 5, 4, 4, 2],\n        [5, 5, 5, 4, 3],\n        [5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 5, 5, 4],\n        [5, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [3, 1],\n        [4, 2],\n        [4, 2, 1],\n        [4, 3, 2],\n        [4, 3, 2, 1],\n        [4, 3, 3, 2],\n        [4, 4, 3, 2, 1],\n        [4, 4, 3, 3, 2],\n        [4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [2],\n        [3],\n        [4],\n        [4, 2],\n        [5, 3],\n        [5, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 5, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 6, 5, 4],\n        [6, 6, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n      ],\n      med: [\n        [4, 2],\n        [5, 3],\n        [6, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 4, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 5, 4, 4],\n        [6, 5, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 5, 4, 4],\n        [6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 6, 5, 5, 4],\n        [6, 6, 6, 6, 6, 5, 5],\n      ],\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    hybrid: {\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    prestige: {\n      low: [\n        [null, 2],\n        [null, 3],\n        [null, 4],\n        [null, 4, 2],\n        [null, 4, 3],\n        [null, 4, 4],\n        [null, 5, 4, 2],\n        [null, 5, 4, 3],\n        [null, 5, 4, 4],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n      ],\n    },\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * Character senses options\n */\nexport const senses = /** @type {const} */ ({\n  bs: \"PF1.Sense.blindsight\",\n  bse: \"PF1.Sense.blindsense\",\n  dv: \"PF1.Sense.darkvision\",\n  ts: \"PF1.Sense.tremorsense\",\n  tr: \"PF1.Sense.trueseeing\",\n  ll: \"PF1.Sense.lowlight\",\n  ls: \"PF1.Sense.lifesense\",\n  si: \"PF1.Sense.seeInvis\",\n  sid: \"PF1.Sense.seeInDark\",\n  sc: \"PF1.Sense.scent\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The set of skill which can be trained in PF1\n */\nexport const skills = /** @type {const} */ ({\n  acr: \"PF1.SkillAcr\",\n  apr: \"PF1.SkillApr\",\n  art: \"PF1.SkillArt\",\n  blf: \"PF1.SkillBlf\",\n  clm: \"PF1.SkillClm\",\n  crf: \"PF1.SkillCrf\",\n  dip: \"PF1.SkillDip\",\n  dev: \"PF1.SkillDev\",\n  dis: \"PF1.SkillDis\",\n  esc: \"PF1.SkillEsc\",\n  fly: \"PF1.SkillFly\",\n  han: \"PF1.SkillHan\",\n  hea: \"PF1.SkillHea\",\n  int: \"PF1.SkillInt\",\n  kar: \"PF1.SkillKAr\",\n  kdu: \"PF1.SkillKDu\",\n  ken: \"PF1.SkillKEn\",\n  kge: \"PF1.SkillKGe\",\n  khi: \"PF1.SkillKHi\",\n  klo: \"PF1.SkillKLo\",\n  kna: \"PF1.SkillKNa\",\n  kno: \"PF1.SkillKNo\",\n  kpl: \"PF1.SkillKPl\",\n  kre: \"PF1.SkillKRe\",\n  lin: \"PF1.SkillLin\",\n  lor: \"PF1.SkillLor\",\n  per: \"PF1.SkillPer\",\n  prf: \"PF1.SkillPrf\",\n  pro: \"PF1.SkillPro\",\n  rid: \"PF1.SkillRid\",\n  sen: \"PF1.SkillSen\",\n  slt: \"PF1.SkillSlt\",\n  spl: \"PF1.SkillSpl\",\n  ste: \"PF1.SkillSte\",\n  sur: \"PF1.SkillSur\",\n  swm: \"PF1.SkillSwm\",\n  umd: \"PF1.SkillUMD\",\n});\n\n/**\n * Compendium journal entries containing details about {@link skills}\n */\nexport const skillCompendiumEntries = /** @type {const} */ ({\n  acr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.gGfJO90ZuRT4sZ9X\",\n  apr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.QGxoGsSIAOoe5dTW\",\n  art: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.vH2PLto0QPzkG4io\",\n  blf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.kRK5XwVBvcMi35w2\",\n  clm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ZAwjVOTwsBpZRgw4\",\n  crf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.3E8pxbjI8MD3JbfQ\",\n  dip: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.uB9Fy36RUjibxqvt\",\n  dev: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.cSdUATLHBFfw3v4s\",\n  dis: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xg25z3GIpS590NDW\",\n  esc: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DTNlXXg77s3178WJ\",\n  fly: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.iH69GIwm8BjecrPN\",\n  han: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.IrVgSeMcAM8rAh2B\",\n  hea: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.nHbYSOoe1SzqEO9w\",\n  int: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.KNn8uxHu23phKC0y\",\n  kar: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kdu: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  ken: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kge: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  khi: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  klo: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kna: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kno: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kpl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kre: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  lin: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.SqLm3Deag2FpP8ty\",\n  lor: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.rExcBHs5GTiWLlo8\",\n  per: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.2h6hz5AkTDxKPFxr\",\n  prf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.emzBKDFNkNnC7N8u\",\n  pro: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.224EaK0K72NhCeRi\",\n  rid: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xQbTtefpEfEaOYo7\",\n  sen: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ka0VQGItdrWw3paO\",\n  slt: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.joza8kAIiImrPft7\",\n  spl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.VRD7jxiIAxKPt6EF\",\n  ste: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.wRWHk7tCUHR99PzD\",\n  sur: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.pLdYavy4nssLEoGV\",\n  swm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xhmDhOXuBbfVcD0Q\",\n  umd: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.A8j7nF6qHwuGEC2E\",\n});\n\n/**\n * An array of {@link skills} that can have arbitrary subskills\n */\nexport const arbitrarySkills = /** @type {const} */ ([\"art\", \"crf\", \"lor\", \"prf\", \"pro\"]);\n\n/**\n * An array of {@link skills} that are considered background skills.\n */\nexport const backgroundSkills = /** @type {const} */ ([\n  \"apr\",\n  \"art\",\n  \"crf\",\n  \"han\",\n  \"ken\",\n  \"kge\",\n  \"khi\",\n  \"kno\",\n  \"lin\",\n  \"lor\",\n  \"prf\",\n  \"pro\",\n  \"slt\",\n]);\n\n/**\n * Array of skills that are only shown with background skills optional rule enabled.\n */\nexport const backgroundOnlySkills = /** @type {const} */ ([\"lor\", \"art\"]);\n\n/**\n * Number of background skills per level gained from valid classes.\n *\n * @type {number}\n */\nexport const backgroundSkillsPerLevel = 2;\n\n/**\n * Valid class types to grant background skills.\n */\nexport const backgroundSkillClasses = /** @type {const} */ ([\"base\", \"prestige\"]);\n\n/**\n * Valid class types to grant favored class bonuses.\n *\n * @remarks\n * - Prestige is included due to Favored Prestige Class feat.\n * - NPC is also valid as it is not omitted by any rules about favored class.\n * - Only mythic paths and racial HD are omitted.\n * @see https://www.aonprd.com/Rules.aspx?ID=344\n */\nexport const favoredClassTypes = /** @type {const} */ ([\"base\", \"prestige\", \"npc\"]);\n\n/**\n * Bonus modifier granted to class skills.\n *\n * @type {number}\n */\nexport const classSkillBonus = 3;\n\n/* -------------------------------------------- */\n\nexport const classCasterType = /** @type {const} */ ({\n  sorcerer: \"high\",\n  wizard: \"high\",\n  cleric: \"high\",\n  oracle: \"high\",\n  druid: \"high\",\n  psychic: \"high\",\n  shaman: \"high\",\n  witch: \"high\",\n  alchemist: \"med\",\n  bard: \"med\",\n  hunter: \"med\",\n  inquisitor: \"med\",\n  investigator: \"med\",\n  magus: \"med\",\n  mesmerist: \"med\",\n  occultist: \"med\",\n  skald: \"med\",\n  spiritualist: \"med\",\n  summoner: \"med\",\n  summonerUnchained: \"med\",\n  antipaladin: \"low\",\n  bloodrager: \"low\",\n  medium: \"low\",\n  paladin: \"low\",\n  ranger: \"low\",\n});\n\nexport const spellcasting = /** @type {const} */ ({\n  type: {\n    spontaneous: \"PF1.SpellPrepSpontaneous\",\n    prepared: \"PF1.SpellPrepPrepared\",\n    hybrid: \"PF1.Arcanist\",\n  },\n  spells: {\n    arcane: \"PF1.Spellcasting.Type.Arcane\",\n    divine: \"PF1.Spellcasting.Type.Divine\",\n    psychic: \"PF1.Spellcasting.Type.Psychic\",\n    alchemy: \"PF1.Spellcasting.Type.Alchemy\",\n  },\n});\n\nexport const spellDescriptors = /** @type {const} */ ({\n  acid: \"PF1.SpellDescriptors.acid\",\n  air: \"PF1.SpellDescriptors.air\",\n  chaotic: \"PF1.SpellDescriptors.chaotic\",\n  cold: \"PF1.SpellDescriptors.cold\",\n  curse: \"PF1.SpellDescriptors.curse\",\n  darkness: \"PF1.SpellDescriptors.darkness\",\n  death: \"PF1.SpellDescriptors.death\",\n  disease: \"PF1.SpellDescriptors.disease\",\n  draconic: \"PF1.SpellDescriptors.draconic\",\n  earth: \"PF1.SpellDescriptors.earth\",\n  electricity: \"PF1.SpellDescriptors.electricity\",\n  emotion: \"PF1.SpellDescriptors.emotion\",\n  evil: \"PF1.SpellDescriptors.evil\",\n  fear: \"PF1.SpellDescriptors.fear\",\n  fire: \"PF1.SpellDescriptors.fire\",\n  force: \"PF1.SpellDescriptors.force\",\n  good: \"PF1.SpellDescriptors.good\",\n  languageDependent: \"PF1.SpellDescriptors.languageDependent\",\n  lawful: \"PF1.SpellDescriptors.lawful\",\n  light: \"PF1.SpellDescriptors.light\",\n  meditative: \"PF1.SpellDescriptors.meditative\",\n  mindAffecting: \"PF1.SpellDescriptors.mindAffecting\",\n  pain: \"PF1.SpellDescriptors.pain\",\n  poison: \"PF1.SpellDescriptors.poison\",\n  ruse: \"PF1.SpellDescriptors.ruse\",\n  shadow: \"PF1.SpellDescriptors.shadow\",\n  sonic: \"PF1.SpellDescriptors.sonic\",\n  water: \"PF1.SpellDescriptors.water\",\n});\n\nexport const magicAuraByLevel = /** @type {const} */ ({\n  spell: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 4 },\n    { power: \"strong\", level: 7 },\n    { power: \"overwhelming\", level: 10 },\n  ],\n  item: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 6 },\n    { power: \"strong\", level: 12 },\n    { power: \"overwhelming\", level: 21 },\n  ],\n});\n\nexport const auraStrengths = /** @type {const} */ ({\n  1: \"PF1.Aura.Strength.faint\",\n  2: \"PF1.Aura.Strength.moderate\",\n  3: \"PF1.Aura.Strength.strong\",\n  4: \"PF1.Aura.Strength.overwhelming\",\n});\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n// Weapon Types\nexport const weaponTypes = /** @type {const} */ ({\n  simple: {\n    _label: \"PF1.Subtypes.Item.weapon.simple.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  martial: {\n    _label: \"PF1.Subtypes.Item.weapon.martial.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  exotic: {\n    _label: \"PF1.Subtypes.Item.weapon.exotic.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  firearm: {\n    _label: \"PF1.Subtypes.Item.weapon.firearm.Single\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  siege: {\n    _label: \"PF1.Subtypes.Item.weapon.siege.Single\",\n    assault: \"PF1.WeaponSubtypeAssault\",\n    indirect: \"PF1.WeaponSubtypeIndirect\",\n    direct: \"PF1.WeaponSubtypeDirect\",\n  },\n  heavy: {\n    _label: \"PF1.Subtypes.Item.weapon.heavy.Single\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  misc: {\n    _label: \"PF1.Subtypes.Item.weapon.misc.Single\",\n    splash: \"PF1.WeaponTypeSplash\",\n    other: \"PF1.Other\",\n  },\n});\n\n/**\n * Weapon groups that a weapon can belong to\n */\nexport const weaponGroups = /** @type {const} */ ({\n  axes: \"PF1.WeaponGroup.axes\",\n  bladesHeavy: \"PF1.WeaponGroup.bladesHeavy\",\n  bladesLight: \"PF1.WeaponGroup.bladesLight\",\n  bows: \"PF1.WeaponGroup.bows\",\n  close: \"PF1.WeaponGroup.close\",\n  crossbows: \"PF1.WeaponGroup.crossbows\",\n  double: \"PF1.WeaponGroup.double\",\n  firearms: \"PF1.WeaponGroup.firearms\",\n  flails: \"PF1.WeaponGroup.flails\",\n  hammers: \"PF1.WeaponGroup.hammers\",\n  monk: \"PF1.WeaponGroup.monk\",\n  natural: \"PF1.WeaponGroup.natural\",\n  polearms: \"PF1.WeaponGroup.polearms\",\n  siegeEngines: \"PF1.WeaponGroup.siegeEngines\",\n  spears: \"PF1.WeaponGroup.spears\",\n  thrown: \"PF1.WeaponGroup.thrown\",\n  tribal: \"PF1.WeaponGroup.tribal\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Define the set of weapon property flags which can exist on a weapon\n */\nexport const weaponProperties = /** @type {const} */ ({\n  ato: \"PF1.WeaponProperty.Automatic\",\n  blc: \"PF1.WeaponProperty.Blocking\",\n  brc: \"PF1.WeaponProperty.Brace\",\n  dea: \"PF1.WeaponProperty.Deadly\",\n  dst: \"PF1.WeaponProperty.Distracting\",\n  dbl: \"PF1.WeaponProperty.Double\",\n  dis: \"PF1.WeaponProperty.Disarm\",\n  fin: \"PF1.WeaponProperty.Finesse\",\n  frg: \"PF1.WeaponProperty.Fragile\",\n  grp: \"PF1.WeaponProperty.Grapple\",\n  imp: \"PF1.WeaponProperty.Improvised\",\n  mnk: \"PF1.WeaponProperty.Monk\",\n  nnl: \"PF1.WeaponProperty.NonLethal\",\n  prf: \"PF1.WeaponProperty.Performance\",\n  rch: \"PF1.WeaponProperty.Reach\",\n  sct: \"PF1.WeaponProperty.Scatter\",\n  sma: \"PF1.WeaponProperty.SemiAutomatic\",\n  slf: \"PF1.WeaponProperty.SlowFiring\",\n  snd: \"PF1.WeaponProperty.Sunder\",\n  spc: \"PF1.WeaponProperty.Special\",\n  thr: \"PF1.WeaponProperty.Thrown\",\n  trp: \"PF1.WeaponProperty.Trip\",\n});\n\n/**\n * The components required for casting a spell\n */\nexport const spellComponents = /** @type {const} */ ({\n  verbal: \"PF1.SpellComponents.Type.verbal.Abbr\",\n  somatic: \"PF1.SpellComponents.Type.somatic.Abbr\",\n  thought: \"PF1.SpellComponents.Type.thought.Abbr\",\n  emotion: \"PF1.SpellComponents.Type.emotion.Abbr\",\n  material: \"PF1.SpellComponents.Type.material.Abbr\",\n  focus: \"PF1.SpellComponents.Type.focus.Abbr\",\n  divineFocus: \"PF1.SpellComponents.Type.divineFocus.Abbr\",\n});\n\n/**\n * Spell schools\n */\nexport const spellSchools = /** @type {const} */ ({\n  abj: \"PF1.SpellSchools.abj\",\n  con: \"PF1.SpellSchools.con\",\n  div: \"PF1.SpellSchools.div\",\n  enc: \"PF1.SpellSchools.enc\",\n  evo: \"PF1.SpellSchools.evo\",\n  ill: \"PF1.SpellSchools.ill\",\n  nec: \"PF1.SpellSchools.nec\",\n  trs: \"PF1.SpellSchools.tra\",\n  uni: \"PF1.SpellSchools.uni\",\n  misc: \"PF1.Misc\",\n});\n\n/**\n * Spell subschools\n */\nexport const spellSubschools = /** @type {const} */ ({\n  calling: \"PF1.SpellSubschools.calling\",\n  charm: \"PF1.SpellSubschools.charm\",\n  compulsion: \"PF1.SpellSubschools.compulsion\",\n  creation: \"PF1.SpellSubschools.creation\",\n  figment: \"PF1.SpellSubschools.figment\",\n  glamer: \"PF1.SpellSubschools.glamer\",\n  haunted: \"PF1.SpellSubschools.haunted\",\n  healing: \"PF1.SpellSubschools.healing\",\n  pattern: \"PF1.SpellSubschools.pattern\",\n  phantasm: \"PF1.SpellSubschools.phantasm\",\n  polymorph: \"PF1.SpellSubschools.polymorph\",\n  scrying: \"PF1.SpellSubschools.scrying\",\n  shadow: \"PF1.SpellSubschools.shadow\",\n  summoning: \"PF1.SpellSubschools.summoning\",\n  teleportation: \"PF1.SpellSubschools.teleportation\",\n});\n\n/**\n * Dictionary of subschools per shool\n *\n * @satisfies {Record<keyof typeof spellSchools, Array<keyof typeof spellSubschools>>}\n */\nexport const spellSubschoolsMap = /** @type {const} */ ({\n  abj: [],\n  con: [\"calling\", \"creation\", \"healing\", \"summoning\", \"teleportation\"],\n  div: [\"scrying\"],\n  enc: [\"charm\", \"compulsion\"],\n  evo: [],\n  ill: [\"figment\", \"glamer\", \"pattern\", \"phantasm\", \"shadow\"],\n  nec: [\"haunted\"],\n  trs: [\"polymorph\"],\n  uni: [],\n  misc: Object.keys(spellSubschools),\n});\n\n/**\n * Spell levels\n */\nexport const spellLevels = /** @type {const} */ ({\n  0: \"PF1.SpellLevels.0\",\n  1: \"PF1.SpellLevels.1\",\n  2: \"PF1.SpellLevels.2\",\n  3: \"PF1.SpellLevels.3\",\n  4: \"PF1.SpellLevels.4\",\n  5: \"PF1.SpellLevels.5\",\n  6: \"PF1.SpellLevels.6\",\n  7: \"PF1.SpellLevels.7\",\n  8: \"PF1.SpellLevels.8\",\n  9: \"PF1.SpellLevels.9\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Condition types for condition immunities and resistances selection\n */\nexport const conditionTypes = /** @type {const} */ ({\n  bleed: \"PF1.Condition.bleed\",\n  blind: \"PF1.Condition.blind\",\n  confuse: \"PF1.Condition.confused\",\n  daze: \"PF1.Condition.dazed\",\n  dazzle: \"PF1.Condition.dazzled\",\n  deaf: \"PF1.Condition.deaf\",\n  deathEffects: \"PF1.Condition.deathEffects\",\n  disease: \"PF1.Condition.disease\",\n  energyDrain: \"PF1.Condition.energyDrain\",\n  exhausted: \"PF1.Condition.exhausted\",\n  fatigue: \"PF1.Condition.fatigued\",\n  fear: \"PF1.Condition.fear\",\n  moraleEffects: \"PF1.Condition.moraleEffects\",\n  mindAffecting: \"PF1.Condition.mindAffecting\",\n  poison: \"PF1.Condition.poison\",\n  sicken: \"PF1.Condition.sickened\",\n  paralyze: \"PF1.Condition.paralyzed\",\n  petrify: \"PF1.Condition.petrified\",\n  polymorph: \"PF1.Condition.polymorph\",\n  stun: \"PF1.Condition.stunned\",\n  sleep: \"PF1.Condition.sleep\",\n});\n\nexport const buffTypes = /** @type {const} */ ({\n  temp: \"PF1.Subtypes.Item.buff.temp.Single\",\n  spell: \"PF1.Subtypes.Item.buff.spell.Single\",\n  feat: \"PF1.Subtypes.Item.buff.feat.Single\",\n  perm: \"PF1.Subtypes.Item.buff.perm.Single\",\n  item: \"PF1.Subtypes.Item.buff.item.Single\",\n  misc: \"PF1.Subtypes.Item.buff.misc.Single\",\n});\n\n/**\n * Formula for determining extra attacks for BAB iteratives\n *\n * @type {string}\n */\nexport const iterativeExtraAttacks = \"min(3, ceil(@bab / 5) - 1)\";\n\n/**\n * Formula for determining attack modifier for BAB iteratives\n *\n * @type {string}\n */\nexport const iterativeAttackModifier = \"@attackCount * -5\";\n\n/**\n * Natural attack configuration.\n *\n * @todo Move more hardcoded definitions here.\n */\nexport const naturalAttacks = /** @type {const} */ ({\n  secondary: {\n    penalty: \"-5\",\n  },\n});\n\n/**\n * Extra Attacks configurations\n *\n * @example\n * Custom additional option\n * ```js\n * pf1.config.extraAttacks.turboMonk = {\n *   label: \"Turbo Monk\",\n *   iteratives: true,\n *   count: \"floor(@bab / 3)\",\n *   bonus: \"@attackCount * -2\",\n *   manual: true,\n * };\n * ```\n */\nexport const extraAttacks = /** @type {const} */ ({\n  // Standard: BAB iteratives\n  standard: {\n    label: \"PF1.ExtraAttacks.Standard\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Advanced: BAB iteratives + manual extra attacks and custom formula\n  advanced: {\n    label: \"PF1.ExtraAttacks.Advanced\",\n    iteratives: true,\n    manual: true,\n    formula: true,\n  },\n  // Chained Monk's Flurry of Blows\n  // Requires BAB override and class association\n  flurry: {\n    label: \"PF1.ExtraAttacks.Flurry\",\n    count: \"ceil(@class.level / 7)\",\n    bonus: \"-(@attackSetCount * 5)\",\n    attackName: \"PF1.ExtraAttacks.FlurryAttack\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    modToAll: \"-(@fullAttack * 2)\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Unchained Monk's Flurry of Blows\n  // Requires class association\n  unflurry: {\n    label: \"PF1.ExtraAttacks.UnFlurry\",\n    count: \"floor((@class.level + 9) / 10)\",\n    //bonus: \"0\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    attackName: \"PF1.ExtraAttacks.FlurryAttack\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Custom: No BAB iteratives but with manual extra attacks and custom formula\n  custom: {\n    label: \"PF1.ExtraAttacks.Custom\",\n    iteratives: false,\n    manual: true,\n    formula: true,\n  },\n});\n\n/**\n * Conditional modifier targets\n *\n * Dictionaries of conditional modifier targets, each with a label and sub-categories\n */\nexport const conditionalTargets = /** @type {const} */ ({\n  attack: {\n    _label: \"PF1.AttackRollPlural\",\n    allAttack: \"PF1.All\",\n    hasteAttack: \"PF1.Haste\",\n    rapidShotAttack: \"PF1.RapidShot\",\n  },\n  damage: {\n    _label: \"PF1.Damage\",\n    allDamage: \"PF1.All\",\n    hasteDamage: \"PF1.Haste\",\n    rapidShotDamage: \"PF1.RapidShot\",\n  },\n  size: {\n    _label: \"PF1.Size\",\n  },\n  critMult: {\n    _label: \"PF1.CriticalMultiplier\",\n  },\n  effect: {\n    _label: \"PF1.Effects\",\n  },\n  misc: {\n    _label: \"PF1.MiscShort\",\n  },\n});\n\n// Default filters to exclude secondary actors\nconst baseActorFilters = () => ({ actor: { exclude: [\"haunt\", \"vehicle\", \"trap\"] } });\n\n/**\n * Change targets\n *\n * Dictionaries of change/buff targets, each with a label and a category it belongs to,\n * as well as a sort value that determines this buffTarget's priority when Changes are applied.\n */\nexport const buffTargets = /** @type {const} */ ({\n  acpA: { label: \"PF1.ACPArmor\", category: \"misc\", sort: 10000, filters: { ...baseActorFilters() } },\n  acpS: { label: \"PF1.ACPShield\", category: \"misc\", sort: 11000, filters: { ...baseActorFilters() } },\n  mDexA: { label: \"PF1.MaxDexArmor\", category: \"misc\", sort: 20000 },\n  mDexS: { label: \"PF1.MaxDexShield\", category: \"misc\", sort: 21000 },\n  // Ability scores\n  str: { label: \"PF1.AbilityStr\", category: \"ability\", sort: 30000 },\n  dex: { label: \"PF1.AbilityDex\", category: \"ability\", sort: 31000 },\n  con: { label: \"PF1.AbilityCon\", category: \"ability\", sort: 32000 },\n  int: { label: \"PF1.AbilityInt\", category: \"ability\", sort: 33000 },\n  wis: { label: \"PF1.AbilityWis\", category: \"ability\", sort: 34000 },\n  cha: { label: \"PF1.AbilityCha\", category: \"ability\", sort: 35000 },\n  strMod: { label: \"PF1.AbilityStrMod\", category: \"ability\", sort: 40000 },\n  dexMod: { label: \"PF1.AbilityDexMod\", category: \"ability\", sort: 41000 },\n  conMod: { label: \"PF1.AbilityConMod\", category: \"ability\", sort: 42000 },\n  intMod: { label: \"PF1.AbilityIntMod\", category: \"ability\", sort: 43000 },\n  wisMod: { label: \"PF1.AbilityWisMod\", category: \"ability\", sort: 44000 },\n  chaMod: { label: \"PF1.AbilityChaMod\", category: \"ability\", sort: 45000 },\n  strPen: { label: \"PF1.AbilityStrPen\", category: \"ability\", sort: 50000 },\n  dexPen: { label: \"PF1.AbilityDexPen\", category: \"ability\", sort: 51000 },\n  conPen: { label: \"PF1.AbilityConPen\", category: \"ability\", sort: 52000 },\n  intPen: { label: \"PF1.AbilityIntPen\", category: \"ability\", sort: 53000 },\n  wisPen: { label: \"PF1.AbilityWisPen\", category: \"ability\", sort: 54000 },\n  chaPen: { label: \"PF1.AbilityChaPen\", category: \"ability\", sort: 55000 },\n  // Carrying\n  carryStr: { label: \"PF1.CarryStrength\", category: \"misc\", sort: 60000, filters: { ...baseActorFilters() } },\n  carryMult: { label: \"PF1.CarryMultiplier\", category: \"misc\", sort: 61000, filters: { ...baseActorFilters() } },\n  // Size\n  size: { label: \"PF1.Size\", category: \"misc\", sort: 63000, filters: { ...baseActorFilters() }, simple: true },\n  reach: { label: \"PF1.BuffTarReach\", category: \"misc\", sort: 65000 },\n  // Age\n  ageCategory: { label: \"PF1.AgeCategory.Base\", category: \"misc\", sort: 62000, filters: { ...baseActorFilters() } },\n  ageCategoryPhysical: {\n    label: \"PF1.AgeCategory.Physical\",\n    category: \"misc\",\n    sort: 62250,\n    filters: { ...baseActorFilters() },\n  },\n  ageCategoryMental: {\n    label: \"PF1.AgeCategory.Mental\",\n    category: \"misc\",\n    sort: 62500,\n    filters: { ...baseActorFilters() },\n  },\n  // Skills\n  skills: {\n    label: \"PF1.BuffTarAllSkills\",\n    category: \"skills\",\n    sort: 75_000, // Specific skills inherit this number and go up from there\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  unskills: {\n    label: \"PF1.BuffTarUntrainedSkills\",\n    category: \"skills\",\n    sort: 75_010,\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  // Ability skills\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\", sort: 80_100, deferred: true },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\", sort: 80_200, deferred: true },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\", sort: 80_300, deferred: true },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\", sort: 80_400, deferred: true },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\", sort: 80_500, deferred: true },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\", sort: 80_600, deferred: true },\n  // Ability checks\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\", sort: 81_000, deferred: true },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\", sort: 81_100, deferred: true },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\", sort: 81_200, deferred: true },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\", sort: 81_300, deferred: true },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\", sort: 81_400, deferred: true },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\", sort: 81_500, deferred: true },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\", sort: 81_600, deferred: true },\n  // Movement\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\", sort: 90000 },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\", sort: 91000 },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\", sort: 92000 },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\", sort: 93000 },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\", sort: 94000 },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\", sort: 95000 },\n  // Defenses\n  ac: { label: \"PF1.BuffTarACGeneric\", category: \"defense\", sort: 100000 },\n  aac: { label: \"PF1.BuffTarACArmor\", category: \"defense\", sort: 101000 },\n  sac: { label: \"PF1.BuffTarACShield\", category: \"defense\", sort: 102000 },\n  nac: { label: \"PF1.BuffTarACNatural\", category: \"defense\", sort: 103000 },\n  tac: { label: \"PF1.BuffTarACTouch\", category: \"defense\", sort: 104000 },\n  ffac: { label: \"PF1.BuffTarACFlatFooted\", category: \"defense\", sort: 105000 },\n  // Offense\n  bab: { label: \"PF1.BAB\", category: \"attack\", sort: 111000 },\n  \"~attackCore\": { label: \"\", category: \"attack\", sort: 112000 },\n  attack: { label: \"PF1.BuffTarAllAttackRolls\", category: \"attack\", sort: 110000, deferred: true },\n  wattack: { label: \"PF1.BuffTarWeaponAttack\", category: \"attack\", sort: 111000, deferred: true },\n  sattack: { label: \"PF1.BuffTarSpellAttack\", category: \"attack\", sort: 112000, deferred: true },\n  mattack: { label: \"PF1.BuffTarMeleeAttack\", category: \"attack\", sort: 113000, deferred: true },\n  nattack: { label: \"PF1.BuffTarNaturalAttack\", category: \"attack\", sort: 114000, deferred: true },\n  rattack: { label: \"PF1.BuffTarRangedAttack\", category: \"attack\", sort: 115000, deferred: true },\n  tattack: { label: \"PF1.BuffTarThrownAttack\", category: \"attack\", sort: 116000, deferred: true },\n  // Damage\n  damage: { label: \"PF1.BuffTarAllDamageRolls\", category: \"damage\", sort: 120000, deferred: true },\n  wdamage: { label: \"PF1.WeaponDamage\", category: \"damage\", sort: 121000, deferred: true },\n  mwdamage: { label: \"PF1.MeleeWeaponDamage\", category: \"damage\", sort: 121100, deferred: true },\n  rwdamage: { label: \"PF1.RangedWeaponDamage\", category: \"damage\", sort: 121200, deferred: true },\n  twdamage: { label: \"PF1.ThrownWeaponDamage\", category: \"damage\", sort: 121300, deferred: true },\n  rdamage: { label: \"PF1.AllRangedDamage\", category: \"damage\", sort: 122100, deferred: true },\n  mdamage: { label: \"PF1.AllMeleeDamage\", category: \"damage\", sort: 122200, deferred: true },\n  ndamage: { label: \"PF1.NaturalAttackDamage\", category: \"damage\", sort: 123000, deferred: true },\n  sdamage: { label: \"PF1.SpellDamage\", category: \"damage\", sort: 124000, deferred: true },\n  critConfirm: { label: \"PF1.CriticalConfirmation\", category: \"attack\", sort: 130000, deferred: true },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\", sort: 140000, deferred: true },\n  // Saves\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\", sort: 141000, deferred: true },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\", sort: 142000, deferred: true },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\", sort: 143000, deferred: true },\n  // Misc\n  cmb: { label: \"PF1.CMB\", category: \"attack\", sort: 150000 },\n  cmd: { label: \"PF1.CMD\", category: \"defense\", sort: 151000 },\n  ffcmd: { label: \"PF1.CMDFlatFooted\", category: \"defense\", sort: 152000 },\n  init: { label: \"PF1.Initiative\", category: \"misc\", sort: 160000 }, // TODO: Should be deferred\n  mhp: { label: \"PF1.HitPoints\", category: \"health\", sort: 170000 },\n  wounds: { label: \"PF1.Wounds\", category: \"health\", sort: 180000, filters: { ...baseActorFilters() } },\n  vigor: { label: \"PF1.Vigor\", category: \"health\", sort: 181000, filters: { ...baseActorFilters() } },\n  spellResist: { label: \"PF1.SpellResistance\", category: \"defense\", sort: 190000 },\n  bonusFeats: { label: \"PF1.BuffTarBonusFeats\", category: \"misc\", sort: 200000, filters: { ...baseActorFilters() } },\n  bonusSkillRanks: {\n    label: \"PF1.BuffTarBonusSkillRanks\",\n    category: \"skills\",\n    sort: 210000,\n    filters: { ...baseActorFilters() },\n  },\n  concentration: {\n    label: \"PF1.Concentration\",\n    category: \"spell\",\n    sort: 220000,\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\", sort: 230000 },\n  dc: { label: \"PF1.SpellDC\", category: \"spell\", sort: 240000 },\n  // Senses\n  sensedv: { label: \"PF1.Sense.darkvision\", category: \"senses\", sort: 250000 },\n  sensets: { label: \"PF1.Sense.tremorsense\", category: \"senses\", sort: 250100 },\n  sensebse: { label: \"PF1.Sense.blindsense\", category: \"senses\", sort: 250200 },\n  sensebs: { label: \"PF1.Sense.blindsight\", category: \"senses\", sort: 250300 },\n  sensels: { label: \"PF1.Sense.lifesense\", category: \"senses\", sort: 250400 },\n  sensesc: { label: \"PF1.Sense.scent\", category: \"senses\", sort: 250500 },\n  sensetr: { label: \"PF1.Sense.trueseeing\", category: \"senses\", sort: 250600 },\n});\n\n/**\n * Change target categories\n *\n * Categories grouping related {@link BuffTarget change targets} in the selector UI.\n */\nexport const buffTargetCategories = /** @type {const} */ ({\n  defense: { label: \"PF1.Defense\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  attack: { label: \"PF1.Attack\" },\n  damage: { label: \"PF1.Damage\" },\n  ability: { label: \"PF1.AbilityScore\", filters: { ...baseActorFilters() } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\", filters: { ...baseActorFilters() } },\n  health: { label: \"PF1.Health\", filters: { ...baseActorFilters() } },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters() } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters() } },\n  speed: { label: \"PF1.Movement.Speed\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters() } },\n  misc: { label: \"PF1.Misc\" },\n  senses: { label: \"PF1.Senses\" },\n});\n\n/**\n * Context Note targets\n */\nexport const contextNoteTargets = /** @type {const} */ ({\n  attack: { label: \"PF1.AttackRollPlural\", category: \"attacks\" },\n  critical: { label: \"PF1.CriticalHitPlural\", category: \"attacks\" },\n  effect: { label: \"PF1.Effects\", category: \"attacks\" },\n  melee: { label: \"PF1.Melee\", category: \"attacks\" },\n  meleeWeapon: { label: \"PF1.MeleeWeapon\", category: \"attacks\" },\n  meleeSpell: { label: \"PF1.MeleeSpell\", category: \"attacks\" },\n  ranged: { label: \"PF1.Ranged\", category: \"attacks\" },\n  rangedWeapon: { label: \"PF1.RangedWeapon\", category: \"attacks\" },\n  rangedSpell: { label: \"PF1.RangedSpell\", category: \"attacks\" },\n  cmb: { label: \"PF1.CMB\", category: \"attacks\" },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\" },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\" },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\" },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\" },\n  skills: { label: \"PF1.BuffTarAllSkills\", category: \"skills\" },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\" },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\" },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\" },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\" },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\" },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\" },\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\" },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\" },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\" },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\" },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\" },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\" },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\" },\n  spellEffect: { label: \"PF1.BuffTarSpellEffect\", category: \"spell\" },\n  concentration: { label: \"PF1.Concentration\", category: \"spell\" },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\" },\n  ac: { label: \"PF1.ACNormal\", category: \"defense\" },\n  cmd: { label: \"PF1.CMD\", category: \"defense\" },\n  sr: { label: \"PF1.SpellResistance\", category: \"defense\" },\n  init: { label: \"PF1.Initiative\", category: \"misc\" },\n  // Speeds\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\" },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\" },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\" },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\" },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\" },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\" },\n});\n\n/**\n * Context Note categories\n */\nexport const contextNoteCategories = /** @type {const} */ ({\n  attacks: { label: \"PF1.Attacks\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters() } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters() } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters() } },\n  defense: { label: \"PF1.Defense\" },\n  speed: { label: \"PF1.Movement.Speed\" },\n  misc: { label: \"PF1.Misc\" },\n});\n\n/**\n * Change Flag labels\n */\nexport const changeFlags = /** @type {const} */ ({\n  lowLightVision: \"PF1.ChangeFlags.LowLightVision\",\n  seeInDarkness: \"PF1.ChangeFlags.SeeInDarkness\",\n  seeInvisibility: \"PF1.ChangeFlags.SeeInvisibility\",\n  immuneToMorale: \"PF1.ChangeFlags.ImmuneToMoraleEffects\",\n  loseDexToAC: \"PF1.ChangeFlags.LoseDexToAC\",\n  noMediumEncumbrance: \"PF1.ChangeFlags.NoMediumEncumbrance\",\n  noHeavyEncumbrance: \"PF1.ChangeFlags.NoHeavyEncumbrance\",\n  mediumArmorFullSpeed: \"PF1.ChangeFlags.MediumArmorFullSpeed\",\n  heavyArmorFullSpeed: \"PF1.ChangeFlags.HeavyArmorFullSpeed\",\n});\n\n/**\n * A list of Golarion's languages\n */\nexport const languages = /** @type {const} */ ({\n  aboleth: \"PF1.Language.aboleth\",\n  abyssal: \"PF1.Language.abyssal\",\n  aklo: \"PF1.Language.aklo\",\n  ancientosiriani: \"PF1.Language.ancientosiriani\",\n  androffan: \"PF1.Language.androffan\",\n  aquan: \"PF1.Language.aquan\",\n  auran: \"PF1.Language.auran\",\n  azlanti: \"PF1.Language.azlanti\",\n  boggard: \"PF1.Language.boggard\",\n  catfolk: \"PF1.Language.catfolk\",\n  celestial: \"PF1.Language.celestial\",\n  common: \"PF1.Language.common\",\n  cyclops: \"PF1.Language.cyclops\",\n  dark: \"PF1.Language.dark\",\n  draconic: \"PF1.Language.draconic\",\n  drowsign: \"PF1.Language.drowsign\",\n  druidic: \"PF1.Language.druidic\",\n  dwarven: \"PF1.Language.dwarven\",\n  dziriak: \"PF1.Language.dziriak\",\n  elven: \"PF1.Language.elven\",\n  giant: \"PF1.Language.giant\",\n  gnoll: \"PF1.Language.gnoll\",\n  gnome: \"PF1.Language.gnome\",\n  goblin: \"PF1.Language.goblin\",\n  grippli: \"PF1.Language.grippli\",\n  halfling: \"PF1.Language.halfling\",\n  hallit: \"PF1.Language.hallit\",\n  ib: \"PF1.Language.ib\",\n  ignan: \"PF1.Language.ignan\",\n  infernal: \"PF1.Language.infernal\",\n  jistka: \"PF1.Language.jistka\",\n  kasatha: \"PF1.Language.kasatha\",\n  kelish: \"PF1.Language.kelish\",\n  kuru: \"PF1.Language.kuru\",\n  lashunta: \"PF1.Language.lashunta\",\n  munavri: \"PF1.Language.munavri\",\n  necril: \"PF1.Language.necril\",\n  orc: \"PF1.Language.orc\",\n  orvian: \"PF1.Language.orvian\",\n  osiriani: \"PF1.Language.osiriani\",\n  polyglot: \"PF1.Language.polyglot\",\n  protean: \"PF1.Language.protean\",\n  reptoid: \"PF1.Language.reptoid\",\n  rougarou: \"PF1.Language.rougarou\",\n  samsaran: \"PF1.Language.samsaran\",\n  sasquatch: \"PF1.Language.sasquatch\",\n  shadowtongue: \"PF1.Language.shadowtongue\",\n  shoanti: \"PF1.Language.shoanti\",\n  skald: \"PF1.Language.skald\",\n  sphinx: \"PF1.Language.sphinx\",\n  strix: \"PF1.Language.strix\",\n  sylvan: \"PF1.Language.sylvan\",\n  syrinx: \"PF1.Language.syrinx\",\n  taldane: \"PF1.Language.taldane\",\n  tekritanin: \"PF1.Language.tekritanin\",\n  tengu: \"PF1.Language.tengu\",\n  terran: \"PF1.Language.terran\",\n  thassilonian: \"PF1.Language.thassilonian\",\n  tien: \"PF1.Language.tien\",\n  treant: \"PF1.Language.treant\",\n  triaxian: \"PF1.Language.triaxian\",\n  undercommon: \"PF1.Language.undercommon\",\n  vanaran: \"PF1.Language.vanaran\",\n  varisian: \"PF1.Language.varisian\",\n  vegepygmy: \"PF1.Language.vegepygmy\",\n  vishkanya: \"PF1.Language.vishkanya\",\n  vudrani: \"PF1.Language.vudrani\",\n  yaddithian: \"PF1.Language.yaddithian\",\n});\n\n/**\n * Creature types\n *\n * @type {Record<type, string>}\n */\nexport const creatureTypes = /** @type {const} */ ({\n  aberration: \"PF1.CreatureTypes.aberration\",\n  animal: \"PF1.CreatureTypes.animal\",\n  construct: \"PF1.CreatureTypes.construct\",\n  dragon: \"PF1.CreatureTypes.dragon\",\n  fey: \"PF1.CreatureTypes.fey\",\n  humanoid: \"PF1.CreatureTypes.humanoid\",\n  magicalBeast: \"PF1.CreatureTypes.magicalBeast\",\n  monstrousHumanoid: \"PF1.CreatureTypes.monstrousHumanoid\",\n  ooze: \"PF1.CreatureTypes.ooze\",\n  outsider: \"PF1.CreatureTypes.outsider\",\n  plant: \"PF1.CreatureTypes.plant\",\n  undead: \"PF1.CreatureTypes.undead\",\n  vermin: \"PF1.CreatureTypes.vermin\",\n});\n\n/**\n * Creature subtypes\n *\n * @type {Record<subtype, string>}\n */\nexport const creatureSubtypes = /** @type {const} */ ({\n  adlet: \"PF1.CreatureSubTypes.adlet\",\n  aeon: \"PF1.CreatureSubTypes.aeon\",\n  aether: \"PF1.CreatureSubTypes.aether\",\n  agathion: \"PF1.CreatureSubTypes.agathion\",\n  air: \"PF1.CreatureSubTypes.air\",\n  android: \"PF1.CreatureSubTypes.android\",\n  angel: \"PF1.CreatureSubTypes.angel\",\n  aquatic: \"PF1.CreatureSubTypes.aquatic\",\n  archon: \"PF1.CreatureSubTypes.archon\",\n  astomoi: \"PF1.CreatureSubTypes.astomoi\",\n  asura: \"PF1.CreatureSubTypes.asura\",\n  augmented: \"PF1.CreatureSubTypes.augmented\",\n  azata: \"PF1.CreatureSubTypes.azata\",\n  behemoth: \"PF1.CreatureSubTypes.behemoth\",\n  blight: \"PF1.CreatureSubTypes.blight\",\n  catfolk: \"PF1.CreatureSubTypes.catfolk\",\n  changeling: \"PF1.CreatureSubTypes.changeling\",\n  chaotic: \"PF1.CreatureSubTypes.chaotic\",\n  clockwork: \"PF1.CreatureSubTypes.clockwork\",\n  cold: \"PF1.CreatureSubTypes.cold\",\n  colossus: \"PF1.CreatureSubTypes.colossus\",\n  daemon: \"PF1.CreatureSubTypes.daemon\",\n  darkFolk: \"PF1.CreatureSubTypes.darkFolk\",\n  deepOne: \"PF1.CreatureSubTypes.deepOne\",\n  demodand: \"PF1.CreatureSubTypes.demodand\",\n  demon: \"PF1.CreatureSubTypes.demon\",\n  derro: \"PF1.CreatureSubTypes.derro\",\n  devil: \"PF1.CreatureSubTypes.devil\",\n  div: \"PF1.CreatureSubTypes.div\",\n  dwarf: \"PF1.CreatureSubTypes.dwarf\",\n  earth: \"PF1.CreatureSubTypes.earth\",\n  elemental: \"PF1.CreatureSubTypes.elemental\",\n  elf: \"PF1.CreatureSubTypes.elf\",\n  evil: \"PF1.CreatureSubTypes.evil\",\n  extraplanar: \"PF1.CreatureSubTypes.extraplanar\",\n  fire: \"PF1.CreatureSubTypes.fire\",\n  giant: \"PF1.CreatureSubTypes.giant\",\n  gnome: \"PF1.CreatureSubTypes.gnome\",\n  goblinoid: \"PF1.CreatureSubTypes.goblinoid\",\n  good: \"PF1.CreatureSubTypes.good\",\n  gray: \"PF1.CreatureSubTypes.gray\",\n  greatOldOne: \"PF1.CreatureSubTypes.greatOldOne\",\n  grippli: \"PF1.CreatureSubTypes.grippli\",\n  halfling: \"PF1.CreatureSubTypes.halfling\",\n  hive: \"PF1.CreatureSubTypes.hive\",\n  herald: \"PF1.CreatureSubTypes.herald\",\n  human: \"PF1.CreatureSubTypes.human\",\n  incorporeal: \"PF1.CreatureSubTypes.incorporeal\",\n  inevitable: \"PF1.CreatureSubTypes.inevitable\",\n  kaiju: \"PF1.CreatureSubTypes.kaiju\",\n  kami: \"PF1.CreatureSubTypes.kami\",\n  kasatha: \"PF1.CreatureSubTypes.kasatha\",\n  kitsune: \"PF1.CreatureSubTypes.kitsune\",\n  kyton: \"PF1.CreatureSubTypes.kyton\",\n  lawful: \"PF1.CreatureSubTypes.lawful\",\n  leshy: \"PF1.CreatureSubTypes.leshy\",\n  manasaputra: \"PF1.CreatureSubTypes.manasaputra\",\n  mortic: \"PF1.CreatureSubTypes.mortic\",\n  munavri: \"PF1.CreatureSubTypes.munavri\",\n  mythic: \"PF1.CreatureSubTypes.mythic\",\n  native: \"PF1.CreatureSubTypes.native\",\n  nightshade: \"PF1.CreatureSubTypes.nightshade\",\n  oni: \"PF1.CreatureSubTypes.oni\",\n  orc: \"PF1.CreatureSubTypes.orc\",\n  phantom: \"PF1.CreatureSubTypes.phantom\",\n  protean: \"PF1.CreatureSubTypes.protean\",\n  psychopomp: \"PF1.CreatureSubTypes.psychopomp\",\n  qlippoth: \"PF1.CreatureSubTypes.qlippoth\",\n  rakshasa: \"PF1.CreatureSubTypes.rakshasa\",\n  ratfolk: \"PF1.CreatureSubTypes.ratfolk\",\n  reptilian: \"PF1.CreatureSubTypes.reptilian\",\n  robot: \"PF1.CreatureSubTypes.robot\",\n  sahkil: \"PF1.CreatureSubTypes.sahkil\",\n  samsaran: \"PF1.CreatureSubTypes.samsaran\",\n  sasquatch: \"PF1.CreatureSubTypes.sasquatch\",\n  shapechanger: \"PF1.CreatureSubTypes.shapechanger\",\n  skinwalker: \"PF1.CreatureSubTypes.skinwalker\",\n  spawnOfRovagug: \"PF1.CreatureSubTypes.spawnOfRovagug\",\n  swarm: \"PF1.CreatureSubTypes.swarm\",\n  troop: \"PF1.CreatureSubTypes.troop\",\n  vanara: \"PF1.CreatureSubTypes.vanara\",\n  vishkanya: \"PF1.CreatureSubTypes.vishkanya\",\n  water: \"PF1.CreatureSubTypes.water\",\n  wayang: \"PF1.CreatureSubTypes.wayang\",\n  wildHunt: \"PF1.CreatureSubTypes.wildHunt\",\n});\n\nexport const spellRangeFormulas = /** @type {const} */ ({\n  close: \"25 + floor(@cl / 2) * 5\",\n  medium: \"100 + @cl * 10\",\n  long: \"400 + @cl * 40\",\n});\n\n/**\n * An array containing the damage dice progression for size adjustments\n *\n * @see {@link pf1.utils.roll.sizeRoll sizeRoll} function.\n */\nexport const sizeDie = /** @type {const} */ ([\n  \"1\",\n  \"1d2\",\n  \"1d3\",\n  \"1d4\",\n  \"1d6\",\n  \"1d8\",\n  \"1d10\",\n  \"2d6\",\n  \"2d8\",\n  \"3d6\",\n  \"3d8\",\n  \"4d6\",\n  \"4d8\",\n  \"6d6\",\n  \"6d8\",\n  \"8d6\",\n  \"8d8\",\n  \"12d6\",\n  \"12d8\",\n  \"16d6\",\n  \"16d8\",\n]);\n\n/**\n * Arrays of Character Level XP Requirements by XP track\n */\n// prettier-ignore\nexport const CHARACTER_EXP_LEVELS = /** @type {const} */ ({\n  slow: [\n    0,\n    3000,\n    7500,\n    14000,\n    23000,\n    35000,\n    53000,\n    77000,\n    115000,\n    160000,\n    235000,\n    330000,\n    475000,\n    665000,\n    955000,\n    1350000,\n    1900000,\n    2700000,\n    3850000,\n    5350000,\n  ],\n  medium: [\n    0,\n    2000,\n    5000,\n    9000,\n    15000,\n    23000,\n    35000,\n    51000,\n    75000,\n    105000,\n    155000,\n    220000,\n    315000,\n    445000,\n    635000,\n    890000,\n    1300000,\n    1800000,\n    2550000,\n    3600000,\n  ],\n  fast: [\n    0,\n    1300,\n    3300,\n    6000,\n    10000,\n    15000,\n    23000,\n    34000,\n    50000,\n    71000,\n    105000,\n    145000,\n    210000,\n    295000,\n    425000,\n    600000,\n    850000,\n    1200000,\n    1700000,\n    2400000,\n  ],\n});\n\n/**\n * An array of Challenge Rating XP Levels\n */\n// prettier-ignore\nexport const CR_EXP_LEVELS = /** @type {const} */ ([\n  200,\n  400,\n  600,\n  800,\n  1200,\n  1600,\n  2400,\n  3200,\n  4800,\n  6400,\n  9600,\n  12800,\n  19200,\n  25600,\n  38400,\n  51200,\n  76800,\n  102400,\n  153600,\n  204800,\n  307200,\n  409600,\n  614400,\n  819200,\n  1228800,\n  1638400,\n  2457600,\n  3276800,\n  4915200,\n  6553600,\n  9830400,\n]);\n\nexport const temporaryRollDataFields = /** @type {const} */ ({\n  actor: [\n    \"d20\",\n    \"attackBonus\",\n    \"attackCount\",\n    \"formulaicAttack\",\n    \"damageBonus\",\n    \"pointBlankBonus\",\n    \"rapidShotPenalty\",\n    \"powerAttackBonus\",\n    \"powerAttackPenalty\",\n    \"conditionals\",\n    \"concentrationBonus\",\n    \"formulaBonus\",\n    \"dcBonus\",\n    \"chargeCostBonus\",\n    \"chargeCost\",\n    \"sizeBonus\",\n    \"bonus\",\n    \"critMult\",\n    \"ablMult\",\n    \"ablDamage\",\n    \"cl\",\n    \"sl\",\n    \"class\",\n    \"ablMod\",\n    \"item\",\n    \"action\",\n    \"level\",\n    \"mod\",\n  ],\n});\n\nexport const traitSelector = /** @type {const} */ ({\n  minChoicesForSearch: 6,\n});\n\n/**\n * Default Item and Actor icons\n *\n * These are returned by `Document.getDefaultArtwork()`\n */\nexport const defaultIcons = /** @type {const} */ ({\n  items: {\n    attack: \"icons/svg/explosion.svg\",\n    buff: \"icons/svg/ice-aura.svg\",\n    class: \"icons/svg/paralysis.svg\",\n    consumable: \"icons/svg/tankard.svg\",\n    container: \"icons/svg/barrel.svg\",\n    equipment: \"icons/svg/combat.svg\",\n    feat: \"icons/svg/book.svg\",\n    loot: \"icons/svg/item-bag.svg\",\n    race: \"icons/svg/wing.svg\",\n    spell: \"icons/svg/daze.svg\",\n    weapon: \"icons/svg/sword.svg\",\n  },\n  actors: {\n    character: \"icons/svg/mystery-man.svg\",\n    npc: \"icons/svg/terror.svg\",\n    haunt: \"icons/svg/stoned.svg\",\n    basic: \"icons/svg/castle.svg\",\n    trap: \"icons/svg/net.svg\",\n    vehicle: \"icons/svg/stone-path.svg\",\n  },\n});\n\n/**\n * Feedback configuration\n *\n * @todo Move this into an actual setting.\n */\nexport const feedback = {\n  /**\n   * Deltas\n   */\n  deltas: {\n    // Hit Points\n    hp: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Temporary HP and Temp. Vigor\n    temp: {\n      positive: \"#55FF00\",\n      negative: \"#FF3300\",\n    },\n    // Nonlethal\n    nonlethal: {\n      positive: \"#AA0077\",\n      negative: \"#00AA33\",\n    },\n    // Vigor\n    vigor: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Wounds\n    wounds: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Negative Levels\n    energyDrain: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // All ability score changes\n    abilityScore: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n  },\n};\n\n/**\n * Sheet item section configuration.\n */\nexport const sheetSections = /** @type {const} */ ({\n  classes: {\n    class: {\n      label: \"PF1.ClassPlural\",\n      filters: [{ type: \"class\" }],\n      interface: {\n        types: true,\n        level: true,\n        create: true,\n      },\n      browse: { category: \"classes\", classType: \"base\" },\n      create: { type: \"class\", system: { subType: \"base\" } },\n      sort: 1_000,\n    },\n  },\n  combat: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      hideEmpty: true,\n      sort: 1_000,\n    },\n    weaponLike: {\n      label: \"PF1.Subtypes.Item.attack.weapon.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"weapon\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n      sort: 1_100,\n    },\n    natural: {\n      label: \"PF1.Subtypes.Item.attack.natural.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"natural\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"natural\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      hideEmpty: true,\n      sort: 3_000,\n    },\n    ability: {\n      label: \"PF1.Subtypes.Item.attack.ability.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"ability\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"ability\" } },\n      sort: 3_100,\n    },\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      hideEmpty: true,\n      sort: 3_200,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      hideEmpty: true,\n      sort: 4_000,\n    },\n    racialAbility: {\n      label: \"PF1.Subtypes.Item.attack.racialAbility.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"racialAbility\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"racialAbility\" } },\n      sort: 4_100,\n    },\n    spell: {\n      label: \"PF1.Spells\",\n      hideEmpty: true,\n      sort: 8_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.attack.item.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"item\" } },\n      sort: 10_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      hideEmpty: true,\n      sort: 10_500,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      hideEmpty: true,\n      sort: 10_700,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.attack.misc.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"misc\" } },\n      sort: 16_000,\n    },\n  },\n  inventory: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      filters: [{ type: \"weapon\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n      },\n      browse: { category: \"items\", type: \"weapon\" },\n      create: { type: \"weapon\", system: { subType: \"simple\" } },\n      sort: 1_000,\n    },\n    armor: {\n      label: \"PF1.ArmorOrShield\",\n      filters: [{ type: \"equipment\", subTypes: [\"armor\", \"shield\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      browse: { category: \"items\", type: \"equipment\", equipmentType: [\"armor\", \"shield\"] },\n      create: { type: \"equipment\", system: { subType: \"armor\", equipmentSubtype: \"lightArmor\", slot: \"\" } },\n      sort: 2_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      filters: [{ type: \"equipment\", subTypes: [\"wondrous\", \"other\", \"clothing\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      browse: { category: \"items\", type: \"equipment\", equipmentType: [\"wondrous\"] },\n      create: { type: \"equipment\", system: { subType: \"wondrous\", slot: \"slotless\" } },\n      sort: 3_000,\n    },\n    implants: {\n      label: \"PF1.InventoryImplants\",\n      filters: [{ type: \"implant\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      labels: {\n        equip: \"PF1.Implanted\",\n      },\n      browse: { category: \"items\", type: \"implant\" },\n      create: { type: \"implant\", system: { subType: \"cybertech\" } },\n      sort: 4_000,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      filters: [{ type: \"consumable\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: false,\n      },\n      browse: { category: \"items\", type: \"consumable\" },\n      create: { type: \"consumable\" },\n      sort: 5_000,\n    },\n    gear: {\n      label: \"PF1.Subtypes.Item.loot.gear.Plural\",\n      filters: [\n        {\n          type: \"loot\",\n          subTypes: [\"gear\", \"adventuring\", \"tool\", \"reagent\", \"remedy\", \"herb\", \"animal\", \"animalGear\"],\n        },\n      ],\n      interface: {\n        create: true,\n        actions: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"gear\"),\n      },\n      browse: { category: \"items\", type: \"loot\" },\n      create: { type: \"loot\", system: { subType: \"gear\" } },\n      sort: 6_000,\n    },\n    ammo: {\n      label: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"ammo\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"ammo\"),\n      },\n      browse: { category: \"items\", type: \"loot\", lootType: [\"ammo\"] },\n      create: { type: \"loot\", system: { subType: \"ammo\" } },\n      sort: 8_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.loot.misc.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"misc\", \"food\", \"entertainment\", \"vehicle\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true, // Misc covers more than just misc loot\n      },\n      browse: { category: \"items\", type: \"loot\" },\n      create: { type: \"loot\", system: { subType: \"misc\" } },\n      sort: 9_000,\n    },\n    tradeGoods: {\n      label: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"tradeGoods\", \"treasure\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        value: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"tradeGoods\"),\n      },\n      browse: { category: \"items\", type: \"loot\", lootType: [\"tradeGoods\"] },\n      create: { type: \"loot\", system: { subType: \"tradeGoods\" } },\n      sort: 15_000,\n    },\n    container: {\n      label: \"PF1.InventoryContainers\",\n      filters: [{ type: \"container\" }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true,\n      },\n      browse: { category: \"items\", type: \"container\" },\n      create: { type: \"container\" },\n      sort: 20_000,\n    },\n  },\n  features: {\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"feat\"] },\n      create: { type: \"feat\", system: { subType: \"feat\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"classFeat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"classFeat\"] },\n      create: { type: \"feat\", system: { subType: \"classFeat\" } },\n      sort: 1_000,\n    },\n    trait: {\n      label: \"PF1.Subtypes.Item.feat.trait.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"trait\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"trait\"] },\n      create: { type: \"feat\", system: { subType: \"trait\" } },\n      sort: 3_000,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"racial\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"racial\"] },\n      create: { type: \"feat\", system: { subType: \"racial\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.feat.misc.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"misc\"] },\n      create: { type: \"feat\", system: { subType: \"misc\" } },\n      sort: 15_000,\n    },\n    template: {\n      label: \"PF1.Subtypes.Item.feat.template.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"template\"] }],\n      interface: {\n        create: true,\n        actions: false,\n      },\n      browse: { category: \"feats\", featType: [\"template\"] },\n      create: { type: \"feat\", system: { subType: \"template\" } },\n      sort: 6_000,\n    },\n  },\n  buffs: {\n    feat: {\n      label: \"PF1.Subtypes.Item.buff.feat.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"feat\"] },\n      create: { type: \"buff\", system: { subType: \"feat\" } },\n      sort: 5_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.buff.item.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"item\"] },\n      create: { type: \"buff\", system: { subType: \"item\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.buff.misc.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", subTypes: [\"misc\"] },\n      create: { type: \"buff\", system: { subType: \"misc\" } },\n      sort: 10_000,\n    },\n    perm: {\n      label: \"PF1.Subtypes.Item.buff.perm.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"perm\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"perm\"] },\n      create: { type: \"buff\", system: { subType: \"perm\" } },\n      sort: 6_000,\n    },\n    spell: {\n      label: \"PF1.Subtypes.Item.buff.spell.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"spell\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"spell\"] },\n      create: { type: \"buff\", system: { subType: \"spell\" } },\n      sort: 2_000,\n    },\n    temp: {\n      label: \"PF1.Subtypes.Item.buff.temp.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"temp\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"temp\"] },\n      create: { type: \"buff\", system: { subType: \"temp\" } },\n      sort: 1_000,\n    },\n  },\n  // Spells section is not used quite like the others\n  spells: {\n    spell: {\n      interface: {\n        create: true,\n      },\n      browse: { category: \"spells\", level: true },\n      create: { type: \"spell\", system: { school: \"abj\" } },\n    },\n  },\n  // Lite sheet and secondary sheet items\n  combatlite: {\n    attacks: {\n      label: \"PF1.AbilityPlural\",\n      filters: [{ type: \"attack\" }],\n      interface: {\n        create: true,\n        types: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n    },\n  },\n  // Misc section is only informal for sheet handling of special cases\n  misc: {\n    race: {\n      create: { type: \"race\" },\n    },\n  },\n});\n\n/**\n * Strict feat counting. If disabled, issues will be ignored.\n *\n * @experimental\n */\nexport const featCount = true;\n\n/**\n * Token ruler configuration.\n *\n * @experimental\n */\nexport const tokenRuler = /** @type {const} */ ({\n  grid: {\n    immobile: { color: 0xff0000 }, // Immobile\n    start: { color: 0x00ff00, alpha: 0.2 }, // Start square\n    step: { color: 0x00aa00 }, // 5-foot step\n    move: { color: 0x009900 }, // Single move\n    move2: { color: 0x559900 }, // Double move\n    move3: { color: 0x777700 }, // Triple move (run in heavy load/armor)\n    run: { color: 0xaaaa00 }, // Normal run\n    run2: { color: 0xbb5500 }, // Run feat\n    exceed: { color: 0x990000 }, // Exceeding move limits\n  },\n  movement: {\n    default: {\n      max: 5,\n      run: true,\n      step: true,\n    },\n    // Special configuration for using swim skill instead of natural swim speed\n    swimSkill: {\n      factors: { 2: 4, 3: 5, 4: 5 },\n      max: 2,\n      run: false,\n      step: false,\n    },\n    // Special configuration for using climb skill instead of natural climb speed\n    climbSkill: {\n      factors: { 2: 4, 3: 5, 4: 5 },\n      max: 2,\n      run: false,\n      step: false,\n    },\n    crawl: {\n      max: 1,\n      run: false,\n      step: false,\n    },\n  },\n});\n\n// Prepare sheet sections with data available later\n// ... allowing module modification also.\nHooks.once(\"setup\", () => {\n  for (const [catKey, category] of Object.entries(sheetSections)) {\n    for (const [sectKey, section] of Object.entries(category)) {\n      section.category = catKey;\n      section.id = sectKey;\n      section.path = `${catKey}.${sectKey}`;\n\n      section.label = game.i18n.localize(section.label);\n\n      const iface = section.interface;\n      if (typeof iface?.equip === \"function\") {\n        iface.equip = iface.equip();\n      }\n    }\n  }\n});\n","/**\n * Action type to change context mapping.\n *\n * @see {@link pf1.documents.item.ItemPF.prototype.getContextChanges}\n */\nexport const actionTypeToContext = /** @type {const} */ ({\n  mwak: \"mwdamage\",\n  twak: \"twdamage\",\n  rwak: \"rwdamage\",\n  msak: \"sdamage\",\n  rsak: \"sdamage\",\n  spellsave: \"sdamage\",\n});\n\n/**\n * Message visibility\n *\n * Message visibility mode (roll mode) to non-roll message mapping.\n *\n * This will be obsoleted by Foundry ~v13\n */\nexport const messageVisibility = /** @type {const} */ ({\n  publicroll: \"PF1.Chat.Visibility.Public\",\n  gmroll: \"PF1.Chat.Visibility.Private\",\n  blindroll: \"PF1.Chat.Visibility.Blind\",\n  selfroll: \"PF1.Chat.Visibility.Self\",\n});\n\n/**\n * Movement speed keys\n */\nexport const movementKeys = /** @type {const} */ ([\"land\", \"swim\", \"fly\", \"climb\", \"burrow\"]);\n\n/**\n * Step distance in internal units (ft).\n */\nexport const step = 5;\n","/**\n * @typedef {object} FilterChoice\n * @property {string} label - The label for this choice visible to the user; will be localized\n * @property {string} key - The key for this choice used to identify it\n * @property {boolean} [active] - Whether this choice is currently active\n */\n\n/**\n * A basic filter class containing common functionality for all filters.\n *\n * Inheriting classes should define the following static properties: {@link label}, {@link indexField}.\n * Inheriting classes may define the following static properties: {@link type}.\n *\n * @abstract\n */\nexport class BaseFilter {\n  /**\n   * Auto-localize choices.\n   *\n   * Defaults to false due to pre-translation.\n   *\n   * @type {boolean}\n   */\n  static localizeChoices = false;\n\n  /**\n   * Auto-localize filter label\n   *\n   * @type {boolean}\n   */\n  static localizeLabel = true;\n\n  /**\n   * Prefix to add to choices before localization.\n   *\n   * @type {string}\n   */\n  static localizePrefix = \"\";\n\n  /**\n   * The label for this filter visible to the user.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static label = \"\";\n\n  /**\n   * The field this filter checks against its choices.\n   * Will also be added to the `compendiumIndexFields` of the document's `CONFIG` object.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static indexField = \"\";\n\n  /**\n   * A convenience property to define a single `type` this filter applies to.\n   *\n   * @see {@link types}\n   * @see {@link handledTypes}\n   */\n  static type = \"\";\n\n  /**\n   * The `type`s of document this filter applies to.\n   *\n   * @see {Actor#type}\n   * @see {Item#type}\n   * @see {@link handledTypes}\n   * @type {string[]}\n   */\n  static types = [];\n\n  /**\n   * The handlebars template used to render this filter.\n   *\n   * @type {string}\n   */\n  static TEMPLATE = \"\";\n\n  /**\n   * The ID of this filter used to identify it in its browser's filters.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * A {@link Collection} of {@link FilterChoice}s for this filter.\n   *\n   * @type {Collection<FilterChoice> | null}\n   */\n  choices = null;\n\n  /**\n   * A reference to the {@link CompendiumBrowser} this filter is used in.\n   *\n   * @type {pf1.applications.compendiumBrowser.CompendiumBrowser | null}\n   */\n  compendiumBrowser = null;\n\n  /**\n   * @param {pf1.applications.compendiumBrowser.CompendiumBrowser} compendiumBrowser - The compendium browser this filter is used in.\n   */\n  constructor(compendiumBrowser) {\n    this.compendiumBrowser = compendiumBrowser;\n    Object.defineProperty(this, \"id\", { value: foundry.utils.randomID(), writable: false, configurable: false });\n    this.registerIndexFields();\n  }\n\n  /**\n   * The authoritative `Set` of `type`s this filter applies to.\n   *\n   * @type {Set<string>}\n   */\n  static get handledTypes() {\n    return new Set([this.type, ...this.types].filter((type) => type));\n  }\n\n  /**\n   * Whether this filter has any active choices.\n   *\n   * @type {boolean}\n   */\n  get active() {\n    return this.choices?.some((choice) => choice.active) ?? false;\n  }\n\n  /**\n   * The number of active choices.\n   *\n   * @type {number}\n   */\n  get activeChoiceCount() {\n    return this.choices?.filter((choice) => choice.active).length ?? 0;\n  }\n\n  /**\n   * Adds the index fields checked by this filter to the document's `CONFIG` object,\n   * so that {@link CompendiumCollection#getIndex} will include them.\n   */\n  registerIndexFields() {\n    if (!this.compendiumBrowser) return;\n    const documentName = this.compendiumBrowser.constructor.documentName;\n\n    // Fields with double underscore are added in the mapping process and not part of Foundry's index\n    if (this.constructor.indexField.startsWith(\"__\")) return;\n\n    const compendiumIndexFields = CONFIG[documentName]?.compendiumIndexFields;\n    if (\n      compendiumIndexFields &&\n      this.constructor.indexField &&\n      !compendiumIndexFields.includes(this.constructor.indexField)\n    ) {\n      compendiumIndexFields?.push(this.constructor.indexField);\n    }\n  }\n\n  /**\n   * Prepare the filter for use.\n   * This step expects the compendium browser to have gathered its entries.\n   */\n  async setup() {\n    await this.prepareChoices();\n  }\n\n  /**\n   * Prepare the choices for this filter. This is called after the compendium browser has gathered its entries.\n   * By default, this will generate a list of choices from the index field of all entries in the compendium.\n   */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection();\n  }\n\n  /**\n   * Returns whether this filter has _more than_ the given number of choices.\n   * Defaults to 1, as a single choice allows for no real filtering.\n   *\n   * @param {number} [number=1] - The number of choices to check for\n   * @returns {boolean} - Whether this filter has more than the given number of choices\n   */\n  hasChoices(number = 1) {\n    return this.choices?.size > number;\n  }\n\n  /**\n   * Reset all choices and controls to their default state (inactive)\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Check whether an entry matches this filter.\n   * If the filter is not active, this will always return true.\n   *\n   * @abstract\n   * @param {object} entry - The entry to check against this filter\n   * @returns {boolean} - Whether the entry matches this filter\n   */\n  applyFilter(entry) {}\n\n  /**\n   * Provide data necessary to render this filter.\n   * The data object generated by {@link BaseFilter#getData} contains the minimum data not only required\n   * by the filter itself, but also by the rendering {@link CompendiumBrowser}.\n   *\n   * @returns {object}} The data object for this filter\n   */\n  getData() {\n    return {\n      id: this.id,\n      template: this.constructor.TEMPLATE,\n      label: this.constructor.localizeLabel ? game.i18n.localize(this.constructor.label) : this.constructor.label,\n      active: this.active,\n      activeCount: this.activeChoiceCount,\n      choices: this.choices?.contents ?? [],\n      field: this.constructor.indexField,\n    };\n  }\n\n  /**\n   * Activate event listeners for this filter.\n   *\n   * @abstract\n   * @param {HTMLElement} html - The rendered HTML element for this filter only\n   */\n  activateListeners(html) {}\n}\n","// https://github.com/farzher/fuzzysort v3.0.2\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;((root, UMD) => {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root['fuzzysort'] = UMD()\r\n})(this, _ => {\r\n  'use strict'\r\n\r\n  var single = (search, target) => {\r\n    if(!search || !target) return NULL\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n    var searchBitflags = preparedSearch.bitflags\r\n    if((searchBitflags & target._bitflags) !== searchBitflags) return NULL\r\n\r\n    return algorithm(preparedSearch, target)\r\n  }\r\n\r\n  var go = (search, targets, options) => {\r\n    if(!search) return options?.all ? all(targets, options) : noResults\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    var searchBitflags = preparedSearch.bitflags\r\n    var containsSpace  = preparedSearch.containsSpace\r\n\r\n    var threshold = denormalizeScore( options?.threshold || 0 )\r\n    var limit     = options?.limit || INFINITY\r\n\r\n    var resultsLen = 0; var limitedCount = 0\r\n    var targetsLen = targets.length\r\n\r\n    function push_result(result) {\r\n      if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n      else {\r\n        ++limitedCount\r\n        if(result._score > q.peek()._score) q.replaceTop(result)\r\n      }\r\n    }\r\n\r\n    // This code is copy/pasted 3 times for performance reasons [options.key, options.keys, no keys]\r\n\r\n    // options.key\r\n    if(options?.key) {\r\n      var key = options.key\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var target = getValue(obj, key)\r\n        if(!target) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result._score < threshold) continue\r\n\r\n        result.obj = obj\r\n        push_result(result)\r\n      }\r\n\r\n    // options.keys\r\n    } else if(options?.keys) {\r\n      var keys = options.keys\r\n      var keysLen = keys.length\r\n\r\n      outer: for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n\r\n        { // early out based on bitflags\r\n          var keysBitflags = 0\r\n          for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n            var key = keys[keyI]\r\n            var target = getValue(obj, key)\r\n            if(!target) { tmpTargets[keyI] = noTarget; continue }\r\n            if(!isPrepared(target)) target = getPrepared(target)\r\n            tmpTargets[keyI] = target\r\n\r\n            keysBitflags |= target._bitflags\r\n          }\r\n\r\n          if((searchBitflags & keysBitflags) !== searchBitflags) continue\r\n        }\r\n\r\n        if(containsSpace) for(let i=0; i<preparedSearch.spaceSearches.length; i++) keysSpacesBestScores[i] = NEGATIVE_INFINITY\r\n\r\n        for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n          target = tmpTargets[keyI]\r\n          if(target === noTarget) { tmpResults[keyI] = noTarget; continue }\r\n\r\n          tmpResults[keyI] = algorithm(preparedSearch, target, /*allowSpaces=*/false, /*allowPartialMatch=*/containsSpace)\r\n          if(tmpResults[keyI] === NULL) { tmpResults[keyI] = noTarget; continue }\r\n\r\n          // todo: this seems weird and wrong. like what if our first match wasn't good. this should just replace it instead of averaging with it\r\n          // if our second match isn't good we ignore it instead of averaging with it\r\n          if(containsSpace) for(let i=0; i<preparedSearch.spaceSearches.length; i++) {\r\n            if(allowPartialMatchScores[i] > -1000) {\r\n              if(keysSpacesBestScores[i] > NEGATIVE_INFINITY) {\r\n                var tmp = (keysSpacesBestScores[i] + allowPartialMatchScores[i]) / 4/*bonus score for having multiple matches*/\r\n                if(tmp > keysSpacesBestScores[i]) keysSpacesBestScores[i] = tmp\r\n              }\r\n            }\r\n            if(allowPartialMatchScores[i] > keysSpacesBestScores[i]) keysSpacesBestScores[i] = allowPartialMatchScores[i]\r\n          }\r\n        }\r\n\r\n        if(containsSpace) {\r\n          for(let i=0; i<preparedSearch.spaceSearches.length; i++) { if(keysSpacesBestScores[i] === NEGATIVE_INFINITY) continue outer }\r\n        } else {\r\n          var hasAtLeast1Match = false\r\n          for(let i=0; i < keysLen; i++) { if(tmpResults[i]._score !== NEGATIVE_INFINITY) { hasAtLeast1Match = true; break } }\r\n          if(!hasAtLeast1Match) continue\r\n        }\r\n\r\n        var objResults = new KeysResult(keysLen)\r\n        for(let i=0; i < keysLen; i++) { objResults[i] = tmpResults[i] }\r\n\r\n        if(containsSpace) {\r\n          var score = 0\r\n          for(let i=0; i<preparedSearch.spaceSearches.length; i++) score += keysSpacesBestScores[i]\r\n        } else {\r\n          // todo could rewrite this scoring to be more similar to when there's spaces\r\n          // if we match multiple keys give us bonus points\r\n          var score = NEGATIVE_INFINITY\r\n          for(let i=0; i<keysLen; i++) {\r\n            var result = objResults[i]\r\n            if(result._score > -1000) {\r\n              if(score > NEGATIVE_INFINITY) {\r\n                var tmp = (score + result._score) / 4/*bonus score for having multiple matches*/\r\n                if(tmp > score) score = tmp\r\n              }\r\n            }\r\n            if(result._score > score) score = result._score\r\n          }\r\n        }\r\n\r\n        objResults.obj = obj\r\n        objResults._score = score\r\n        if(options?.scoreFn) {\r\n          score = options.scoreFn(objResults)\r\n          if(!score) continue\r\n          score = denormalizeScore(score)\r\n          objResults._score = score\r\n        }\r\n\r\n        if(score < threshold) continue\r\n        push_result(objResults)\r\n      }\r\n\r\n    // no keys\r\n    } else {\r\n      for(var i = 0; i < targetsLen; ++i) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result._score < threshold) continue\r\n\r\n        push_result(result)\r\n      }\r\n    }\r\n\r\n    if(resultsLen === 0) return noResults\r\n    var results = new Array(resultsLen)\r\n    for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n    results.total = resultsLen + limitedCount\r\n    return results\r\n  }\r\n\r\n\r\n  // this is written as 1 function instead of 2 for minification. perf seems fine ...\r\n  // except when minified. the perf is very slow\r\n  var highlight = (result, open='<b>', close='</b>') => {\r\n    var callback = typeof open === 'function' ? open : undefined\r\n\r\n    var target      = result.target\r\n    var targetLen   = target.length\r\n    var indexes     = result.indexes\r\n    var highlighted = ''\r\n    var matchI      = 0\r\n    var indexesI    = 0\r\n    var opened      = false\r\n    var parts       = []\r\n\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[indexesI] === i) {\r\n        ++indexesI\r\n        if(!opened) { opened = true\r\n          if(callback) {\r\n            parts.push(highlighted); highlighted = ''\r\n          } else {\r\n            highlighted += open\r\n          }\r\n        }\r\n\r\n        if(indexesI === indexes.length) {\r\n          if(callback) {\r\n            highlighted += char\r\n            parts.push(callback(highlighted, matchI++)); highlighted = ''\r\n            parts.push(target.substr(i+1))\r\n          } else {\r\n            highlighted += char + close + target.substr(i+1)\r\n          }\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          if(callback) {\r\n            parts.push(callback(highlighted, matchI++)); highlighted = ''\r\n          } else {\r\n            highlighted += close\r\n          }\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n\r\n    return callback ? parts : highlighted\r\n  }\r\n\r\n\r\n  var prepare = (target) => {\r\n    if(typeof target === 'number') target = ''+target\r\n    else if(typeof target !== 'string') target = ''\r\n    var info = prepareLowerInfo(target)\r\n    return new_result(target, {_targetLower:info._lower, _targetLowerCodes:info.lowerCodes, _bitflags:info.bitflags})\r\n  }\r\n\r\n  var cleanup = () => { preparedCache.clear(); preparedSearchCache.clear() }\r\n\r\n\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n\r\n\r\n  class Result {\r\n    get ['indexes']() { return this._indexes.slice(0, this._indexes.len).sort((a,b)=>a-b) }\r\n    set ['indexes'](indexes) { return this._indexes = indexes }\r\n    ['highlight'](open, close) { return highlight(this, open, close) }\r\n    get ['score']() { return normalizeScore(this._score) }\r\n    set ['score'](score) { this._score = denormalizeScore(score) }\r\n  }\r\n\r\n  class KeysResult extends Array {\r\n    get ['score']() { return normalizeScore(this._score) }\r\n    set ['score'](score) { this._score = denormalizeScore(score) }\r\n  }\r\n\r\n  var new_result = (target, options) => {\r\n    const result = new Result()\r\n    result['target']             = target\r\n    result['obj']                = options.obj                   ?? NULL\r\n    result._score                = options._score                ?? NEGATIVE_INFINITY\r\n    result._indexes              = options._indexes              ?? []\r\n    result._targetLower          = options._targetLower          ?? ''\r\n    result._targetLowerCodes     = options._targetLowerCodes     ?? NULL\r\n    result._nextBeginningIndexes = options._nextBeginningIndexes ?? NULL\r\n    result._bitflags             = options._bitflags             ?? 0\r\n    return result\r\n  }\r\n\r\n\r\n  var normalizeScore = score => {\r\n    if(score === NEGATIVE_INFINITY) return 0\r\n    if(score > 1) return score\r\n    return Math.E ** ( ((-score + 1)**.04307 - 1) * -2)\r\n  }\r\n  var denormalizeScore = normalizedScore => {\r\n    if(normalizedScore === 0) return NEGATIVE_INFINITY\r\n    if(normalizedScore > 1) return normalizedScore\r\n    return 1 - Math.pow((Math.log(normalizedScore) / -2 + 1), 1 / 0.04307)\r\n  }\r\n\r\n\r\n  var prepareSearch = (search) => {\r\n    if(typeof search === 'number') search = ''+search\r\n    else if(typeof search !== 'string') search = ''\r\n    search = search.trim()\r\n    var info = prepareLowerInfo(search)\r\n\r\n    var spaceSearches = []\r\n    if(info.containsSpace) {\r\n      var searches = search.split(/\\s+/)\r\n      searches = [...new Set(searches)] // distinct\r\n      for(var i=0; i<searches.length; i++) {\r\n        if(searches[i] === '') continue\r\n        var _info = prepareLowerInfo(searches[i])\r\n        spaceSearches.push({lowerCodes:_info.lowerCodes, _lower:searches[i].toLowerCase(), containsSpace:false})\r\n      }\r\n    }\r\n\r\n    return {lowerCodes: info.lowerCodes, _lower: info._lower, containsSpace: info.containsSpace, bitflags: info.bitflags, spaceSearches: spaceSearches}\r\n  }\r\n\r\n\r\n\r\n  var getPrepared = (target) => {\r\n    if(target.length > 999) return prepare(target) // don't cache huge targets\r\n    var targetPrepared = preparedCache.get(target)\r\n    if(targetPrepared !== undefined) return targetPrepared\r\n    targetPrepared = prepare(target)\r\n    preparedCache.set(target, targetPrepared)\r\n    return targetPrepared\r\n  }\r\n  var getPreparedSearch = (search) => {\r\n    if(search.length > 999) return prepareSearch(search) // don't cache huge searches\r\n    var searchPrepared = preparedSearchCache.get(search)\r\n    if(searchPrepared !== undefined) return searchPrepared\r\n    searchPrepared = prepareSearch(search)\r\n    preparedSearchCache.set(search, searchPrepared)\r\n    return searchPrepared\r\n  }\r\n\r\n\r\n  var all = (targets, options) => {\r\n    var results = []; results.total = targets.length // this total can be wrong if some targets are skipped\r\n\r\n    var limit = options?.limit || INFINITY\r\n\r\n    if(options?.key) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var target = getValue(obj, options.key)\r\n        if(target == NULL) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n        var result = new_result(target.target, {_score: target._score, obj: obj})\r\n        results.push(result); if(results.length >= limit) return results\r\n      }\r\n    } else if(options?.keys) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var objResults = new KeysResult(options.keys.length)\r\n        for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n          var target = getValue(obj, options.keys[keyI])\r\n          if(!target) { objResults[keyI] = noTarget; continue }\r\n          if(!isPrepared(target)) target = getPrepared(target)\r\n          target._score = NEGATIVE_INFINITY\r\n          target._indexes.len = 0\r\n          objResults[keyI] = target\r\n        }\r\n        objResults.obj = obj\r\n        objResults._score = NEGATIVE_INFINITY\r\n        results.push(objResults); if(results.length >= limit) return results\r\n      }\r\n    } else {\r\n      for(var i=0;i<targets.length;i++) { var target = targets[i]\r\n        if(target == NULL) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n        target._score = NEGATIVE_INFINITY\r\n        target._indexes.len = 0\r\n        results.push(target); if(results.length >= limit) return results\r\n      }\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  var algorithm = (preparedSearch, prepared, allowSpaces=false, allowPartialMatch=false) => {\r\n    if(allowSpaces===false && preparedSearch.containsSpace) return algorithmSpaces(preparedSearch, prepared, allowPartialMatch)\r\n\r\n    var searchLower      = preparedSearch._lower\r\n    var searchLowerCodes = preparedSearch.lowerCodes\r\n    var searchLowerCode  = searchLowerCodes[0]\r\n    var targetLowerCodes = prepared._targetLowerCodes\r\n    var searchLen        = searchLowerCodes.length\r\n    var targetLen        = targetLowerCodes.length\r\n    var searchI          = 0 // where we at\r\n    var targetI          = 0 // where you at\r\n    var matchesSimpleLen = 0\r\n\r\n    // very basic fuzzy match; to remove non-matching targets ASAP!\r\n    // walk through target. find sequential matches.\r\n    // if all chars aren't found then exit\r\n    for(;;) {\r\n      var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n      if(isMatch) {\r\n        matchesSimple[matchesSimpleLen++] = targetI\r\n        ++searchI; if(searchI === searchLen) break\r\n        searchLowerCode = searchLowerCodes[searchI]\r\n      }\r\n      ++targetI; if(targetI >= targetLen) return NULL // Failed to find searchI\r\n    }\r\n\r\n    var searchI = 0\r\n    var successStrict = false\r\n    var matchesStrictLen = 0\r\n\r\n    var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n    if(nextBeginningIndexes === NULL) nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target)\r\n    targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n    // Our target string successfully matched all characters in sequence!\r\n    // Let's try a more advanced and strict test to improve the score\r\n    // only count it as a match if it's consecutive or a beginning character!\r\n    var backtrackCount = 0\r\n    if(targetI !== targetLen) for(;;) {\r\n      if(targetI >= targetLen) {\r\n        // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n        if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n        ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n        --searchI\r\n        var lastMatch = matchesStrict[--matchesStrictLen]\r\n        targetI = nextBeginningIndexes[lastMatch]\r\n\r\n      } else {\r\n        var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesStrict[matchesStrictLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n          ++targetI\r\n        } else {\r\n          targetI = nextBeginningIndexes[targetI]\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if it's a substring match\r\n    var substringIndex = searchLen <= 1 ? -1 : prepared._targetLower.indexOf(searchLower, matchesSimple[0]) // perf: this is slow\r\n    var isSubstring = !!~substringIndex\r\n    var isSubstringBeginning = !isSubstring ? false : substringIndex===0 || prepared._nextBeginningIndexes[substringIndex-1] === substringIndex\r\n\r\n    // if it's a substring match but not at a beginning index, let's try to find a substring starting at a beginning index for a better score\r\n    if(isSubstring && !isSubstringBeginning) {\r\n      for(var i=0; i<nextBeginningIndexes.length; i=nextBeginningIndexes[i]) {\r\n        if(i <= substringIndex) continue\r\n\r\n        for(var s=0; s<searchLen; s++) if(searchLowerCodes[s] !== prepared._targetLowerCodes[i+s]) break\r\n        if(s === searchLen) { substringIndex = i; isSubstringBeginning = true; break }\r\n      }\r\n    }\r\n\r\n    // tally up the score & keep track of matches for highlighting later\r\n    // if it's a simple match, we'll switch to a substring match if a substring exists\r\n    // if it's a strict match, we'll switch to a substring match only if that's a better score\r\n\r\n    var calculateScore = matches => {\r\n      var score = 0\r\n\r\n      var extraMatchGroupCount = 0\r\n      for(var i = 1; i < searchLen; ++i) {\r\n        if(matches[i] - matches[i-1] !== 1) {score -= matches[i]; ++extraMatchGroupCount}\r\n      }\r\n      var unmatchedDistance = matches[searchLen-1] - matches[0] - (searchLen-1)\r\n\r\n      score -= (12+unmatchedDistance) * extraMatchGroupCount // penality for more groups\r\n\r\n      if(matches[0] !== 0) score -= matches[0]*matches[0]*.2 // penality for not starting near the beginning\r\n\r\n      if(!successStrict) {\r\n        score *= 1000\r\n      } else {\r\n        // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n        var uniqueBeginningIndexes = 1\r\n        for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes\r\n\r\n        if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10 // quite arbitrary numbers here ...\r\n      }\r\n\r\n      score -= (targetLen - searchLen)/2 // penality for longer targets\r\n\r\n      if(isSubstring)          score /= 1+searchLen*searchLen*1 // bonus for being a full substring\r\n      if(isSubstringBeginning) score /= 1+searchLen*searchLen*1 // bonus for substring starting on a beginningIndex\r\n\r\n      score -= (targetLen - searchLen)/2 // penality for longer targets\r\n\r\n      return score\r\n    }\r\n\r\n    if(!successStrict) {\r\n      if(isSubstring) for(var i=0; i<searchLen; ++i) matchesSimple[i] = substringIndex+i // at this point it's safe to overwrite matchehsSimple with substr matches\r\n      var matchesBest = matchesSimple\r\n      var score = calculateScore(matchesBest)\r\n    } else {\r\n      if(isSubstringBeginning) {\r\n        for(var i=0; i<searchLen; ++i) matchesSimple[i] = substringIndex+i // at this point it's safe to overwrite matchehsSimple with substr matches\r\n        var matchesBest = matchesSimple\r\n        var score = calculateScore(matchesSimple)\r\n      } else {\r\n        var matchesBest = matchesStrict\r\n        var score = calculateScore(matchesStrict)\r\n      }\r\n    }\r\n\r\n    prepared._score = score\r\n\r\n    for(var i = 0; i < searchLen; ++i) prepared._indexes[i] = matchesBest[i]\r\n    prepared._indexes.len = searchLen\r\n\r\n    const result    = new Result()\r\n    result.target   = prepared.target\r\n    result._score   = prepared._score\r\n    result._indexes = prepared._indexes\r\n    return result\r\n  }\r\n  var algorithmSpaces = (preparedSearch, target, allowPartialMatch) => {\r\n    var seen_indexes = new Set()\r\n    var score = 0\r\n    var result = NULL\r\n\r\n    var first_seen_index_last_search = 0\r\n    var searches = preparedSearch.spaceSearches\r\n    var searchesLen = searches.length\r\n    var changeslen = 0\r\n\r\n    // Return _nextBeginningIndexes back to its normal state\r\n    var resetNextBeginningIndexes = () => {\r\n      for(let i=changeslen-1; i>=0; i--) target._nextBeginningIndexes[nextBeginningIndexesChanges[i*2 + 0]] = nextBeginningIndexesChanges[i*2 + 1]\r\n    }\r\n\r\n    var hasAtLeast1Match = false\r\n    for(var i=0; i<searchesLen; ++i) {\r\n      allowPartialMatchScores[i] = NEGATIVE_INFINITY\r\n      var search = searches[i]\r\n\r\n      result = algorithm(search, target)\r\n      if(allowPartialMatch) {\r\n        if(result === NULL) continue\r\n        hasAtLeast1Match = true\r\n      } else {\r\n        if(result === NULL) {resetNextBeginningIndexes(); return NULL}\r\n      }\r\n\r\n      // if not the last search, we need to mutate _nextBeginningIndexes for the next search\r\n      var isTheLastSearch = i === searchesLen - 1\r\n      if(!isTheLastSearch) {\r\n        var indexes = result._indexes\r\n\r\n        var indexesIsConsecutiveSubstring = true\r\n        for(let i=0; i<indexes.len-1; i++) {\r\n          if(indexes[i+1] - indexes[i] !== 1) {\r\n            indexesIsConsecutiveSubstring = false; break;\r\n          }\r\n        }\r\n\r\n        if(indexesIsConsecutiveSubstring) {\r\n          var newBeginningIndex = indexes[indexes.len-1] + 1\r\n          var toReplace = target._nextBeginningIndexes[newBeginningIndex-1]\r\n          for(let i=newBeginningIndex-1; i>=0; i--) {\r\n            if(toReplace !== target._nextBeginningIndexes[i]) break\r\n            target._nextBeginningIndexes[i] = newBeginningIndex\r\n            nextBeginningIndexesChanges[changeslen*2 + 0] = i\r\n            nextBeginningIndexesChanges[changeslen*2 + 1] = toReplace\r\n            changeslen++\r\n          }\r\n        }\r\n      }\r\n\r\n      score += result._score / searchesLen\r\n      allowPartialMatchScores[i] = result._score / searchesLen\r\n\r\n      // dock points based on order otherwise \"c man\" returns Manifest.cpp instead of CheatManager.h\r\n      if(result._indexes[0] < first_seen_index_last_search) {\r\n        score -= (first_seen_index_last_search - result._indexes[0]) * 2\r\n      }\r\n      first_seen_index_last_search = result._indexes[0]\r\n\r\n      for(var j=0; j<result._indexes.len; ++j) seen_indexes.add(result._indexes[j])\r\n    }\r\n\r\n    if(allowPartialMatch && !hasAtLeast1Match) return NULL\r\n\r\n    resetNextBeginningIndexes()\r\n\r\n    // allows a search with spaces that's an exact substring to score well\r\n    var allowSpacesResult = algorithm(preparedSearch, target, /*allowSpaces=*/true)\r\n    if(allowSpacesResult !== NULL && allowSpacesResult._score > score) {\r\n      if(allowPartialMatch) {\r\n        for(var i=0; i<searchesLen; ++i) {\r\n          allowPartialMatchScores[i] = allowSpacesResult._score / searchesLen\r\n        }\r\n      }\r\n      return allowSpacesResult\r\n    }\r\n\r\n    if(allowPartialMatch) result = target\r\n    result._score = score\r\n\r\n    var i = 0\r\n    for (let index of seen_indexes) result._indexes[i++] = index\r\n    result._indexes.len = i\r\n\r\n    return result\r\n  }\r\n\r\n  // we use this instead of just .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') because that screws with japanese characters\r\n  var remove_accents = (str) => str.replace(/\\p{Script=Latin}+/gu, match => match.normalize('NFD')).replace(/[\\u0300-\\u036f]/g, '')\r\n\r\n  var prepareLowerInfo = (str) => {\r\n    str = remove_accents(str)\r\n    var strLen = str.length\r\n    var lower = str.toLowerCase()\r\n    var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n    var bitflags = 0\r\n    var containsSpace = false // space isn't stored in bitflags because of how searching with a space works\r\n\r\n    for(var i = 0; i < strLen; ++i) {\r\n      var lowerCode = lowerCodes[i] = lower.charCodeAt(i)\r\n\r\n      if(lowerCode === 32) {\r\n        containsSpace = true\r\n        continue // it's important that we don't set any bitflags for space\r\n      }\r\n\r\n      var bit = lowerCode>=97&&lowerCode<=122 ? lowerCode-97 // alphabet\r\n              : lowerCode>=48&&lowerCode<=57  ? 26           // numbers\r\n                                                             // 3 bits available\r\n              : lowerCode<=127                ? 30           // other ascii\r\n              :                                 31           // other utf8\r\n      bitflags |= 1<<bit\r\n    }\r\n\r\n    return {lowerCodes:lowerCodes, bitflags:bitflags, containsSpace:containsSpace, _lower:lower}\r\n  }\r\n  var prepareBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = []; var beginningIndexesLen = 0\r\n    var wasUpper = false\r\n    var wasAlphanum = false\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      var targetCode = target.charCodeAt(i)\r\n      var isUpper = targetCode>=65&&targetCode<=90\r\n      var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n      var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n      wasUpper = isUpper\r\n      wasAlphanum = isAlphanum\r\n      if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n    }\r\n    return beginningIndexes\r\n  }\r\n  var prepareNextBeginningIndexes = (target) => {\r\n    target = remove_accents(target)\r\n    var targetLen = target.length\r\n    var beginningIndexes = prepareBeginningIndexes(target)\r\n    var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n    var lastIsBeginning = beginningIndexes[0]\r\n    var lastIsBeginningI = 0\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      if(lastIsBeginning > i) {\r\n        nextBeginningIndexes[i] = lastIsBeginning\r\n      } else {\r\n        lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n        nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n      }\r\n    }\r\n    return nextBeginningIndexes\r\n  }\r\n\r\n  var preparedCache       = new Map()\r\n  var preparedSearchCache = new Map()\r\n\r\n  // the theory behind these being globals is to reduce garbage collection by not making new arrays\r\n  var matchesSimple = []; var matchesStrict = []\r\n  var nextBeginningIndexesChanges = [] // allows straw berry to match strawberry well, by modifying the end of a substring to be considered a beginning index for the rest of the search\r\n  var keysSpacesBestScores = []; var allowPartialMatchScores = []\r\n  var tmpTargets = []; var tmpResults = []\r\n\r\n  // prop = 'key'                  2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'            10ms\r\n  // prop = ['key1', 'key2']       27ms\r\n  // prop = obj => obj.tags.join() ??ms\r\n  var getValue = (obj, prop) => {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    if(typeof prop === 'function') return prop(obj) // this should run first. but that makes string props slower\r\n    var segs = prop\r\n    if(!Array.isArray(prop)) segs = prop.split('.')\r\n    var len = segs.length\r\n    var i = -1\r\n    while (obj && (++i < len)) obj = obj[segs[i]]\r\n    return obj\r\n  }\r\n\r\n  var isPrepared = (x) => { return typeof x === 'object' && typeof x._bitflags === 'number' }\r\n  var INFINITY = Infinity; var NEGATIVE_INFINITY = -INFINITY\r\n  var noResults = []; noResults.total = 0\r\n  var NULL = null\r\n\r\n  var noTarget = prepare('')\r\n\r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=r=>{var e=[],o=0,a={},v=r=>{for(var a=0,v=e[a],c=1;c<o;){var s=c+1;a=c,s<o&&e[s]._score<e[c]._score&&(a=s),e[a-1>>1]=e[a],c=1+(a<<1)}for(var f=a-1>>1;a>0&&v._score<e[f]._score;f=(a=f)-1>>1)e[a]=e[f];e[a]=v};return a.add=(r=>{var a=o;e[o++]=r;for(var v=a-1>>1;a>0&&r._score<e[v]._score;v=(a=v)-1>>1)e[a]=e[v];e[a]=r}),a.poll=(r=>{if(0!==o){var a=e[0];return e[0]=e[--o],v(),a}}),a.peek=(r=>{if(0!==o)return e[0]}),a.replaceTop=(r=>{e[0]=r,v()}),a}\r\n  var q = fastpriorityqueue() // reuse this\r\n\r\n  // fuzzysort is written this way for minification. all names are mangeled unless quoted\r\n  return {'single':single, 'go':go, 'prepare':prepare, 'cleanup':cleanup}\r\n}) // UMD\r\n","import { BaseFilter } from \"./filters/base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/**\n * The basic compendium browser class allowing the browsing of compendiums by utilising their indexes.\n *\n * Extending classes must define the following static properties if the browser is not meant to browse Item documents: {@link documentName}.\n * Extending classes should define the following static properties: {@link typeName}, {@link filterClasses}.\n *\n * @abstract\n */\nexport class CompendiumBrowser extends Application {\n  /**\n   * The document name of entries this browser displays.\n   *\n   * @abstract\n   * @type {\"Actor\" | \"Item\"}\n   */\n  static documentName = \"Item\";\n\n  /**\n   * A localisation string used in the browser's title.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static typeName;\n\n  /**\n   * An array of classes extending {@link BaseFilter} that should be used for this browser.\n   *\n   * @type {Array<typeof BaseFilter>}\n   */\n  static filterClasses = [];\n\n  /**\n   * The template used to render individual entries in the browser.\n   *\n   * @type {string}\n   */\n  static ENTRY_TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/entries.hbs\";\n\n  /**\n   * A `Promise` that resolves once all pack indexes have been loaded.\n   *\n   * @internal\n   * @type {Map<string, Promise<void>>}\n   */\n  static #indexingPromises = new Map();\n\n  /**\n   * The set of filters to apply to the compendium index.\n   *\n   * @type {Collection<BaseFilter>}\n   */\n  filters = new foundry.utils.Collection();\n\n  /**\n   * The types of entries this browser handles, as per a document's `type` property.\n   *\n   * @type {Set<string>}\n   */\n  handledTypes = new Set();\n\n  /**\n   * Compendium packs this browser gets entries from.\n   *\n   * @type {CompendiumCollection[]}\n   */\n  packs = [];\n\n  /**\n   * A set of filters that were expanded by the user, and should stay expanded upon re-render.\n   *\n   * @type {Set<string>}\n   */\n  expandedFilters = new Set();\n\n  /**\n   * The {@link Collection} of index entries this browser is aware of.\n   *\n   * @readonly\n   * @type {Collection<IndexEntry>}\n   */\n  entries;\n\n  /**\n   * The current search query entered by the user.\n   *\n   * @private\n   * @type {string}\n   */\n  _query = \"\";\n\n  /**\n   * An object containing data used to render the loading spinner and related text.\n   *\n   * @private\n   * @type {object | null}\n   */\n  _loadingInfo = null;\n\n  /**\n   * Whether the browser and its data have been set up using {@link CompendiumBrowser.setup}.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  #setup = false;\n\n  constructor(options = {}) {\n    super(options);\n    /**\n     * All index entries this compendium browser is aware of.\n     *\n     * @type {Collection<object>}\n     */\n    Object.defineProperty(this, \"entries\", { value: new Collection() });\n    this.initialize();\n    this._debouncedRender = foundry.utils.debounce(this.render, 300);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: \"systems/pf1/templates/apps/compendium-browser/compendium-browser.hbs\",\n      classes: [\"pf1\", \"app\", \"compendium-browser\"],\n      id: `pf1-compendium-browser-${this.name}`,\n      width: 800,\n      height: window.innerHeight - 60,\n      top: 30,\n      left: 40,\n      resizable: true,\n      scrollY: [\".filter-container\"],\n      dragDrop: [{ dragSelector: \".directory-item\", dropSelector: null }],\n    });\n  }\n\n  /**\n   * Known browsers.\n   *\n   * Initialized in {@link initializeBrowsers}\n   *\n   * @internal\n   */\n  static BROWSERS = {};\n\n  /**\n   * Fill {@link BROWSERS}\n   *\n   * Called in `init` hook.\n   *\n   * @internal\n   */\n  static registerDefault() {\n    this.BROWSERS.items = pf1.applications.compendiumBrowser.ItemBrowser;\n    this.BROWSERS.feats = pf1.applications.compendiumBrowser.FeatBrowser;\n    this.BROWSERS.spells = pf1.applications.compendiumBrowser.SpellBrowser;\n    this.BROWSERS.classes = pf1.applications.compendiumBrowser.ClassBrowser;\n    this.BROWSERS.races = pf1.applications.compendiumBrowser.RaceBrowser;\n    this.BROWSERS.bestiary = pf1.applications.compendiumBrowser.CreatureBrowser;\n    this.BROWSERS.buffs = pf1.applications.compendiumBrowser.BuffBrowser;\n  }\n\n  /**\n   * Initialize all {@link CompendiumBrowser}s found in {@link pf1.applications.compendiumBrowser}\n   * and register them in {@link pf1.applications.compendiums}.\n   */\n  static initializeBrowsers() {\n    const compendiums = pf1.applications.compendiums;\n    for (const [id, cls] of Object.entries(this.BROWSERS)) {\n      compendiums[id] = new cls();\n    }\n  }\n\n  /**\n   * Request indexes of all packs of a document type to be loaded.\n   * This method should only ever be called as {@link CompendiumBrowser.getIndexes} to ensure Promises are properly bundled.\n   *\n   * @param {string[]} packNames - The names of the packs to load indexes for\n   * @see {@link CompendiumBrowser.#indexingPromise}\n   * @returns {Promise<void>} A `Promise` that resolves once all indexes have been loaded\n   */\n  static getIndexes(packNames = []) {\n    const packs = packNames.map((name) => game.packs.get(name));\n    const resultPromise = [];\n    for (const pack of packs) {\n      if (!this.#indexingPromises.has(pack.collection)) {\n        this.#indexingPromises.set(pack.collection, pack.getIndex());\n      }\n      resultPromise.push(this.#indexingPromises.get(pack.collection));\n    }\n    return Promise.all(resultPromise).finally(() => {\n      for (const pack of packs) {\n        this.#indexingPromises.delete(pack.collection);\n      }\n    });\n  }\n\n  /**\n   * Map an entry from a compendium to the format used by the browser.\n   *\n   * @param {object} entry - The entry to map\n   * @param {CompendiumCollection} pack - The compendium the entry is from\n   * @returns {IndexEntry} The mapped entry\n   */\n  static _mapEntry(entry, pack) {\n    // NOTE: This decouples the entry from the compendium; it will no longer be refreshed automatically, but changes will stick\n    const result = foundry.utils.deepClone(entry);\n    // Add default `system` data for the entry's type, as pruned compendium data omits default values\n    result.system = foundry.utils.mergeObject(game.model[this.documentName][entry.type], result.system, {\n      inplace: false,\n    });\n    // Add `pack` related fields to allow filtering by pack and label display\n    result.__pack = pack.collection;\n    result.__packLabel = pack.metadata.label;\n\n    result.__uuid = pack.getUuid(entry._id);\n    // Prepare `__name` field for fuzzy search optimisation\n    result.__name = fuzzysort.prepare(entry.name.normalize(\"NFKD\"));\n\n    return result;\n  }\n\n  /**\n   * Renders an array of {@link IndexEntry} objects into HTML.\n   *\n   * @private\n   * @param {IndexEntry[]} entries - The entries to render\n   * @returns {Promise<string>} The rendered HTML\n   */\n  static async _renderEntries(entries) {\n    return renderTemplate(this.ENTRY_TEMPLATE, { entries });\n  }\n\n  /** @inheritDoc */\n  get title() {\n    return game.i18n.format(\"PF1.CompendiumBrowserTitle\", { type: game.i18n.localize(this.constructor.typeName) });\n  }\n\n  /**\n   * Perform minimal preparation steps to initialize the compendium browser.\n   * Add filters and determine which compendiums include data relevant to this browser.\n   *\n   * @protected\n   */\n  initialize() {\n    this.filters?.clear();\n    for (const cls of this.constructor.filterClasses) {\n      if (!(cls.prototype instanceof BaseFilter)) {\n        throw new Error(`Filter class ${cls.name} does not extend BaseFilter`);\n      }\n      const filter = new cls(this);\n      this.filters.set(filter.id, filter);\n      // Add all types handled by that filter to the browser's list of handled types\n      cls.handledTypes.forEach((type) => this.handledTypes.add(type));\n    }\n    this.packs = game.packs.filter((pack) => this.isPackIncluded(pack));\n    this._loadingInfo = {\n      indexCount: this.packs.length,\n      entryCount: this.packs.reduce(\n        (acc, pack) => acc + pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length,\n        0\n      ),\n    };\n  }\n\n  /**\n   * Enable queued filters\n   *\n   * @internal\n   * @experimental\n   */\n  _activateFilterQueue() {\n    if (!this.#setup) return;\n\n    if (!this.#filterQueue) return;\n\n    // Disable existing filters\n    for (const filter of this.filters) {\n      for (const choice of filter.choices) choice.active = false;\n    }\n\n    const idToFilter = {\n      type: \"ItemTypeFilter\",\n      level: \"SpellLevelFilter\",\n      class: \"SpellLearnedByClassFilter\",\n      classType: \"ClassTypeFilter\",\n      buffType: \"BuffTypeFilter\",\n      featType: \"FeatTypeFilter\",\n      lootType: \"MiscItemTypeFilter\",\n      equipmentType: \"EquipmentTypeFilter\",\n      tags: \"TagFilter\",\n    };\n\n    for (const [filterId, choices] of Object.entries(this.#filterQueue)) {\n      const filterName = idToFilter[filterId];\n      const filter = this.filters.find((f) => f.constructor.name === filterName);\n      if (!filter) {\n        console.warn(`Filter \"${filterId}\" not found.`);\n        continue;\n      }\n\n      for (const [key, choice] of filter.choices.entries()) {\n        choice.active = choices.includes(key);\n        if (choice.active) this.expandedFilters.add(filter.id);\n      }\n    }\n\n    this.#filterQueue = null;\n  }\n\n  #filterQueue;\n  /**\n   * Queue filters to be processed by {@link _activateFilterQueue}\n   *\n   * Only one filter bundle is ever queued.\n   *\n   * @internal\n   * @param {object} filters\n   * @experimental\n   */\n  _queueFilters(filters) {\n    this.#filterQueue = filters;\n  }\n\n  /**\n   * Check whether a compendium should be included in the browser.\n   *\n   * @param {CompendiumCollection} pack - The compendium to test\n   * @returns {boolean} Whether the compendium should be included\n   */\n  isPackIncluded(pack) {\n    // Only include enabled packs with the right document type made for PF1\n    if (pack.config.pf1?.disabled) return false;\n    if (pack.documentName !== this.constructor.documentName) return false;\n    if (pack.metadata.system !== game.system.id) return false;\n\n    // Skip if pack is not visible to current user\n    if (!pack.visible) return false;\n\n    // Avoid unnecessarily adding packs that don't contain any relevant entries\n    if (pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length === 0) return false;\n\n    // Don't skip the compendium\n    return true;\n  }\n\n  /**\n   * Perform the initial setup of the compendium browser.\n   * This includes requesting the index of all relevant compendiums if necessary and preparing the filters.\n   *\n   * @returns {Promise<void>}\n   */\n  async setup() {\n    this.#setup = false;\n    this.entries?.clear();\n    await CompendiumBrowser.getIndexes(this.packs.map((pack) => pack.collection));\n    const unorderedEntries = await Promise.all(this.packs.map((pack) => this.loadPackIndex(pack)));\n    pf1.utils\n      .naturalSort(unorderedEntries.flat(), \"name\")\n      .forEach((entry) => this.entries.set(`${entry.__uuid}`, entry));\n    await Promise.all(this.filters.map((filter) => filter.setup()));\n    this.#setup = true;\n  }\n\n  /**\n   * Load a compendium's index to prepare it for browsing.\n   *\n   * @param {CompendiumCollection} pack - The compendium to load\n   * @returns {Promise<IndexEntry[]>} The loaded index entries\n   */\n  async loadPackIndex(pack) {\n    if (pack.indexed === false) await CompendiumBrowser.getIndexes(pack.collection);\n    const index = pack.index;\n    return index\n      .filter((entry) => this.handledTypes.has(entry.type))\n      .map((entry) => {\n        try {\n          return this.constructor._mapEntry(entry, pack);\n        } catch (err) {\n          Hooks.onError(`CompendiumBrowser#_mapEntry`, err, {\n            msg: `${this.constructor.name} failed to map entry ${entry.name} [${entry._id}] from pack ${pack.collection}`,\n            log: \"error\",\n            entry,\n            pack,\n          });\n          return null;\n        }\n      })\n      .filter((entry) => entry !== null);\n  }\n\n  /**\n   * Get the current set of entries allowed by the filters.\n   *\n   * @returns {IndexEntry[]} The filtered entries\n   */\n  getFilteredEntries() {\n    let entries = this.entries.contents;\n\n    const activeFilters = this.filters.filter((filter) => filter.active);\n    if (activeFilters.length)\n      entries = entries.filter((entry) => activeFilters.every((filter) => filter.applyFilter(entry)));\n\n    if (this._query) {\n      const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), {\n        numeric: true,\n        ignorePunctuation: true,\n      });\n      entries = fuzzysort\n        .go(this._query.normalize(\"NFKD\"), entries, { key: \"__name\", threshold: -10000 })\n        .sort((a, b) => {\n          // Sort by score first, then alphabetically by name\n          if (a.score !== b.score) return b.score - a.score;\n          else return collator.compare(a.obj.name, b.obj.name);\n        })\n        .map((match) => match.obj);\n    }\n\n    return entries;\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    // Identify the focused element\n    const focus = this.element?.[0]?.querySelector(\":focus\");\n    const selectionStart = focus?.selectionStart;\n\n    // Render the application and restore focus\n    await super._render(force, options);\n    if (focus && focus.name) {\n      const input = this._element[0].querySelector(`[name=\"${focus.name}\"]`);\n      if (input && input.focus instanceof Function) {\n        input.focus();\n        if (selectionStart) input.selectionStart = input.selectionEnd = selectionStart;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  async getData() {\n    const context = await super.getData();\n\n    this._activateFilterQueue();\n\n    context.id = this.options.id;\n    context.query = this._query ?? \"\";\n    context.filters = this.filters\n      .filter((filter) => filter.hasChoices())\n      .map((filter) => ({\n        ...filter.getData(),\n        collapsed: this.expandedFilters.has(filter.id) ? \"\" : \"collapsed\",\n      }));\n\n    if (this.#setup) {\n      // Browser is set up, so we can render the entries\n      this._entries = this.getFilteredEntries();\n      context.entries = this._entries.slice(0, 100);\n      context.itemCount = this.entries.size;\n      context.filteredItemCount = this._entries.length;\n    } else {\n      // Browser is not set up, display a loading spinner\n      context.loading = true;\n      context.loadingInfo = this._loadingInfo;\n    }\n    return context;\n  }\n\n  _refocus = true;\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    /** @type {HTMLElement} */\n    const el = html[0];\n\n    if (this._priorState <= this.constructor.RENDER_STATES.NONE) this._refocus = true;\n\n    // If the browser is not set up yet, start the process and render again once it is done\n    if (!this.#setup) {\n      this.setup().then(() => this.render());\n      // No listeners have to be activated yet, so we can return here\n      return;\n    }\n\n    // Fix autofocus (the above re-render breaks it)\n    if (this._refocus) {\n      el.querySelector(\"[autofocus]\")?.focus();\n      this._refocus = false;\n    }\n\n    this._initLazyScrolling(el);\n\n    // Activate listeners for filters, allowing them to define their own\n    el.querySelectorAll(\".filter-content\").forEach((filterContent) => {\n      const filter = this.filters.get(filterContent.closest(\".filter\").dataset.filterId);\n      filter.activateListeners(filterContent);\n    });\n\n    el.querySelector(\".directory-list\").addEventListener(\"click\", (event) => {\n      this._onClickEntry(event);\n    });\n\n    el.querySelector(\"button.reload\").addEventListener(\"click\", (event) => {\n      this._onReload(event);\n    });\n\n    el.querySelector(\"button.clear-filters\").addEventListener(\"click\", (event) => {\n      this._onClearFilters(event);\n    });\n\n    el.querySelectorAll(\".filter>h3\").forEach((header) => {\n      header.addEventListener(\"click\", (event) => {\n        this._onFilterHeaderClick(event);\n      });\n    });\n\n    el.querySelector(\"input[name=filter]\")?.addEventListener(\"input\", (event) => {\n      this._onCustomSearchFilter(event);\n    });\n\n    for (const a of el.querySelectorAll(\"a[data-action]\")) {\n      a.addEventListener(\"click\", this._onAction.bind(this));\n    }\n\n    ContextMenu.create(this, html, \".directory-item\", this._getEntryContextOptions());\n  }\n\n  /**\n   * @protected\n   * @param {PointerEvent} event\n   */\n  _onAction(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const elem = event.target;\n    const action = elem.dataset.action;\n\n    switch (action) {\n      case \"clear-filter\": {\n        const filterId = elem.closest(\"[data-filter-id]\").dataset.filterId;\n        this.filters.get(filterId).reset();\n        //this.expandedFilters.delete(filterId); // Collapsing the category feels weird\n        this.render();\n        break;\n      }\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n  }\n\n  /**\n   * Store the current search filter query and re-render the application.\n   *\n   * @private\n   * @param {Event} event - The originating change event\n   */\n  _onCustomSearchFilter(event) {\n    event.preventDefault();\n    this._query = event.target.value;\n    this._debouncedRender();\n  }\n\n  /**\n   * Handle a click on an entry in the compendium browser.\n   *\n   * @private\n   * @param {Event} event - The originating click Event\n   */\n  async _onClickEntry(event) {\n    const li = event.target.closest(\".directory-item\");\n    if (!li) return;\n    const { uuid } = li.dataset;\n    const document = await fromUuid(uuid);\n    const collection = game.packs.get(document.pack);\n    return document.sheet.render(true, { editable: game.user.isGM && !collection.locked, focus: true });\n  }\n\n  /**\n   * Get the set of ContextMenu options which should be used for the compendium browser's entries.\n   *\n   * @protected\n   * @returns {object[]} - The Array of ContextMenu options\n   */\n  _getEntryContextOptions() {\n    return [\n      {\n        name: \"COMPENDIUM.ImportEntry\",\n        icon: '<i class=\"fa-solid fa-download\"></i>',\n        condition: () => getDocumentClass(this.constructor.documentName).canUserCreate(game.user),\n        callback: async (li) => {\n          const collection = game.collections.get(this.constructor.documentName);\n          const uuid = li.data(\"uuid\");\n          const entry = this.entries.get(uuid);\n          return collection.importFromCompendium(game.packs.get(entry.__pack), entry._id, {}, { renderSheet: true });\n        },\n      },\n      {\n        name: \"PF1.CopyUuidToClipboard\",\n        icon: '<i class=\"fa-solid fa-id-badge\"></i>',\n        callback: (li) => {\n          const uuid = li.data(\"uuid\");\n          game.clipboard.copyPlainText(uuid);\n          const label = game.i18n.localize(getDocumentClass(this.constructor.documentName).metadata.label);\n          ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: uuid }));\n        },\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _onDragStart(event) {\n    const { uuid } = event.currentTarget.dataset;\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        type: this.constructor.documentName,\n        uuid,\n      })\n    );\n\n    const html = this.element[0];\n    // Without the delay the following blocks the drag start\n    setTimeout(() => html.classList.add(\"active-drag\"), 0);\n    document.body.addEventListener(\"dragend\", () => html.classList.remove(\"active-drag\"), {\n      once: true,\n      passive: true,\n    });\n  }\n\n  /**\n   * Handle a click on the reset filters button, resetting all filters to their default state.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  _onClearFilters(_event) {\n    for (const filter of this.filters) {\n      filter.reset();\n    }\n    this._query = \"\";\n    this.expandedFilters.clear();\n    this.render();\n  }\n\n  /**\n   * Handle a click on the refresh button, re-running the setup process,\n   * and re-rendering the compendium browser afterwards.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  async _onReload(_event) {\n    this.#setup = false;\n    this.initialize();\n    this.render();\n  }\n\n  /**\n   * Handle a click on a filter's title to collapse or expand it.\n   *\n   * @private\n   * @param {Event} event - The originating click event\n   */\n  _onFilterHeaderClick(event) {\n    const { filterId } = event.target.closest(\".filter\").dataset;\n    const filterContents = event.target.closest(\".filter\").querySelector(\".filter-content\");\n    if (this.expandedFilters.has(filterId)) {\n      this.expandedFilters.delete(filterId);\n      filterContents.classList.add(\"collapsed\");\n    } else {\n      this.expandedFilters.add(filterId);\n      filterContents.classList.remove(\"collapsed\");\n    }\n  }\n\n  /**\n   * Initializes lazy loading of entries so that they are only rendered when close-ish to being visible.\n   *\n   * @private\n   * @param {HTMLElement} html - The HTML element to initialize lazy loading for\n   */\n  _initLazyScrolling(html) {\n    const listEnd = html.querySelector(\".directory-bottom\");\n    if (listEnd) {\n      new IntersectionObserver(\n        async ([entry], observer) => {\n          if (entry.isIntersecting) {\n            // Append more entries to the list\n            const currentCount = html.querySelectorAll(\".directory-item\").length;\n            const newEntries = this._entries.slice(currentCount, currentCount + 50);\n            if (newEntries.length === 0) {\n              // No more entries to load with current filters\n              observer.unobserve(listEnd);\n            } else {\n              const newHtml = await this.constructor._renderEntries(newEntries);\n              listEnd.insertAdjacentHTML(\"beforebegin\", newHtml);\n              this._dragDrop[0].bind(html);\n            }\n          }\n        },\n        { root: html.querySelector(\".directory-list\"), rootMargin: \"300px\" }\n      ).observe(listEnd);\n    }\n  }\n}\n\n/**\n * @typedef {object} IndexEntry\n * @property {string} _id - The entry's ID\n * @property {string} name - The entry's name\n * @property {string} type - The entry's type\n * @property {string} img - The entry's image\n * @property {string} __pack - The {@link CompendiumCollection} this entry is from\n * @property {string} __packLabel - The label of the {@link CompendiumCollection} this entry is from\n * @property {string} __uuid - The UUID of this entry\n */\n","/**\n * No Autocomplete mixin\n *\n * Ref: https://github.com/foundryvtt/foundryvtt/issues/12008\n *\n * @todo\n * - Review continued need for this with Foundry v13\n *\n * @param {*} Base\n */\nexport const NoAutocomplete = (Base) =>\n  class extends Base {\n    /** @override */\n    async _renderFrame(options) {\n      const frame = await super._renderFrame(options);\n      frame.autocomplete = \"off\";\n      return frame;\n    }\n  };\n","import fuzzysort from \"fuzzysort\";\nimport { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * A specialized form used to select types.\n *\n * @property {object} attributes - The currently stored values for this trait selector\n * @property {string[]} attributes.standard - Standard choices\n * @property {string[]} attributes.custom - Custom choices\n */\nexport class ActorTraitSelector extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ActorTraitSelector._updateDocument,\n      submitOnClose: false,\n      submitOnChange: false,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"trait-selector\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-list-check\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 320,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/trait-selector.hbs\",\n      scrollable: [\".trait-list\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * Current search filter\n   *\n   * @internal\n   */\n  _searchFilter = \"\";\n\n  /**\n   * Include language agnostic ID in search.\n   *\n   * @type {boolean}\n   */\n  static SEARCH_INCLUDE_ID = true;\n\n  /**\n   * Collator for sorting\n   *\n   * @internal\n   */\n  _collator = new Intl.Collator(game.i18n.lang, {\n    numeric: true,\n    ignorePunctuation: true,\n  });\n\n  constructor(options) {\n    // Ensure uniqueness to target for trait selector\n    options.id ??= `trait-selector-${options.document.uuid.replaceAll(\".\", \"-\")}-${options.subject}`;\n\n    super(options);\n\n    // Enrich dialog identity\n    this.options.classes.push(options.subject);\n\n    // Get current values\n    const keys = foundry.utils.getProperty(options.document.toObject(), this.attribute) ?? [];\n\n    this.attributes = {\n      standard: new Set(),\n      custom: new Set(),\n    };\n\n    if (Array.isArray(keys)) {\n      for (const key of keys) {\n        if (this.options.choices[key]) this.attributes.standard.add(key);\n        else this.attributes.custom.add(key);\n      }\n    }\n\n    const searchIndex = [];\n    for (const [id, label] of Object.entries(this.options.choices)) {\n      searchIndex.push({\n        id,\n        _id: fuzzysort.prepare(id.normalize(\"NFKD\")),\n        _name: fuzzysort.prepare(label.normalize(\"NFKD\")),\n      });\n    }\n    this._searchIndex = searchIndex;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        const { standard, custom } = this.attributes;\n\n        // Populate choices\n        const choices = foundry.utils.deepClone(this.options.choices);\n        for (const [k, v] of Object.entries(choices)) {\n          choices[k] = {\n            label: v,\n            chosen: standard.has(k),\n          };\n        }\n\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          choices,\n          hideSearch: Object.keys(choices).length < pf1.config.traitSelector.minChoicesForSearch,\n          custom: Array.from(new Set(custom)),\n          search: this._searchFilter,\n          hasCustom: this.options.hasCustom,\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {}; // No update button if not editable\n\n        return {\n          buttons: [\n            {\n              type: \"submit\",\n              label: this.document instanceof Actor ? \"PF1.UpdateActor\" : \"PF1.UpdateItem\",\n              icon: \"fa-regular fa-floppy-disk\",\n            },\n          ],\n        };\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the trait selector window\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${this.options.title}: ${this.document.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a reference to the target attribute\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split a given value based on the configured separator\n   *\n   * @param {string} value      The value to split\n   * @returns {string[]}         The split values, with empty values filtered out\n   */\n  splitCustom(value) {\n    return value\n      .split(pf1.config.re.traitSeparator)\n      .map((c) => c.trim())\n      .filter((c) => !!c);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const html = this.element.querySelector(\".window-content\");\n\n    // Search handling\n    const search = html.querySelector(\"input[type='search']\");\n    if (search) {\n      search.addEventListener(\"input\", (ev) => this._onSearch(ev.currentTarget.value), { passive: true });\n      search.addEventListener(\"change\", (ev) => this._onSearch(ev.currentTarget.value), { passive: true });\n      this._onSearch(this._searchFilter);\n    }\n\n    const editable = this.isEditable;\n\n    // Disable form if not editable\n    if (!editable) {\n      for (const el of html.querySelectorAll(\":is(input,button)\")) {\n        el.disabled = true;\n      }\n    }\n\n    // Custom tag handling\n    const customInput = html.querySelector(\"input[name='custom']\");\n    if (customInput && editable) {\n      customInput.addEventListener(\"input\", this._onCustomInput.bind(this), { passive: true });\n      customInput.addEventListener(\"keydown\", this._onActiveCustomInput.bind(this));\n      this.element.querySelectorAll(\".custom-tags .custom-tag > a[data-action='delete']\").forEach((el) => {\n        el.addEventListener(\"click\", this._deleteCustomTag.bind(this), { passive: true });\n      });\n    }\n\n    // Mark choices gained form other sources as indeterminate\n    const attrib = foundry.utils.getProperty(this.options.document, this.attribute);\n    if (attrib?.total) {\n      const keys = new Set(attrib.base ?? []);\n      for (const key of attrib.total) {\n        if (!keys.has(key)) {\n          /** @type {HTMLInputElement} */\n          const el = html.querySelector(`input[name=\"choices.${key}\"]`);\n          if (!el) continue; // Probably custom choice\n          if (!el.checked) el.indeterminate = true;\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for custom field input.\n   *\n   * @internal\n   * @param {Event} event         The originating input event\n   * @returns {void}\n   */\n  _onCustomInput(event) {\n    // Consume input if semicolon is inserted\n    if (/;/.test(event.currentTarget.value)) {\n      this._onChangeForm();\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for active keystrokes on the input field.\n   *\n   * @internal\n   * @param {Event} event         The originating keydown event\n   * @returns {void}\n   */\n  _onActiveCustomInput(event) {\n    if (event.isComposing) return;\n\n    switch (event.key) {\n      case \"Enter\": {\n        event.preventDefault();\n        this._onChangeForm();\n        break;\n      }\n\n      case \"Backspace\": {\n        if (event.currentTarget.value !== \"\") return;\n        if (event.repeat) return; // Ignore when backspace is held down\n\n        const last = this.element.querySelector(\".custom-tags .custom-tag:last-of-type\");\n        if (!last) return;\n\n        if (last.classList.contains(\"pre-delete\")) {\n          const tag = last.dataset.customTag;\n          this.attributes.custom = new Set(this.attributes.custom.filter((t) => t !== tag));\n          this.render();\n        } else {\n          last.classList.add(\"pre-delete\");\n        }\n        break;\n      }\n\n      default:\n        this.element.querySelector(\".custom-tags .custom-tag:last-of-type\")?.classList.remove(\"pre-delete\");\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for deleting a custom tag.\n   *\n   * @internal\n   * @param {Event} event         The originating click event\n   * @returns {void}\n   */\n  _deleteCustomTag(event) {\n    const elem = event.currentTarget;\n    const tag = elem.dataset.customTag;\n    this.attributes.custom.delete(tag);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Run a search on the provided list of options.\n   *\n   * @internal\n   * @param {string} query        The search string\n   * @returns {void}\n   */\n  _onSearch(query) {\n    query = query?.normalize(\"NFKD\");\n    this._searchFilter = query;\n\n    const keys = [\"_name\"];\n    if (this.constructor.SEARCH_INCLUDE_ID) keys.push(\"_id\");\n\n    const matches = query\n      ? fuzzysort\n          .go(query, this._searchIndex, { keys, threshold: -10000 })\n          .sort((a, b) => {\n            // Sort by score first, then alphabetically by name\n            if (a.score !== b.score) return b.score - a.score;\n            else return this._collator.compare(a.obj.name, b.obj.name);\n          })\n          .map((r) => r.obj.id)\n      : null;\n\n    const els = this.element.querySelectorAll(\".trait-list li\");\n    for (const el of els) {\n      el.classList.toggle(\"search-mismatch\", query && !matches.includes(el.dataset.choice));\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const formData = {};\n    new FormData(this.element).forEach((value, key) => (formData[key] = value));\n\n    let { choices, custom, search } = foundry.utils.expandObject(formData);\n    choices ??= {};\n\n    this._searchFilter = search;\n\n    choices = Object.entries(choices)\n      .filter(([_, v]) => v)\n      .map(([k]) => k);\n\n    if (custom?.length) this.attributes.custom.add(...this.splitCustom(custom));\n\n    this.attributes.standard = new Set(choices);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @private\n   * @this {ActorTraitSelector}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   */\n  static async _updateDocument(event, form, formData) {\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n    const { standard, custom } = this.attributes;\n    const updateData = {\n      [this.attribute]: [...standard.union(custom)],\n    };\n    this.document.update(updateData);\n    this.close({ force: true });\n  }\n}\n","export function DragDropApplicationMixin(BaseApplication) {\n  return class DragDropApplication extends BaseApplication {\n    static DEFAULT_OPTIONS = {\n      dragDrop: [],\n    };\n\n    constructor(options = {}) {\n      super(options);\n      this.#dragDrop = this.#createDragDropHandlers();\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Create drag-and-drop workflow handlers for this Application\n     *\n     * @returns {DragDrop[]}     An array of DragDrop handlers\n     * @private\n     */\n    #createDragDropHandlers() {\n      return this.options.dragDrop.map((d) => {\n        d.permissions = {\n          dragstart: this._canDragStart.bind(this),\n          drop: this._canDragDrop.bind(this),\n        };\n        d.callbacks = {\n          dragstart: this._onDragStart.bind(this),\n          dragover: this._onDragOver.bind(this),\n          drop: this._onDrop.bind(this),\n        };\n        return new DragDrop(d);\n      });\n    }\n\n    #dragDrop;\n\n    /* -------------------------------------------- */\n\n    /**\n     * Actions performed after any render of the Application.\n     * Post-render steps are not awaited by the render process.\n     *\n     * @param {ApplicationRenderContext} context      Prepared context data\n     * @param {RenderOptions} options                 Provided render options\n     * @protected\n     */\n    _onRender(context, options) {\n      super._onRender(context, options);\n\n      this.#dragDrop.forEach((d) => d.bind(this.element));\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Define whether a user is able to begin a dragstart workflow for a given drag selector\n     *\n     * @param {string} selector       The candidate HTML selector for dragging\n     * @returns {boolean}             Can the current user drag this selector?\n     * @protected\n     */\n    _canDragStart(selector) {\n      return true;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Define whether a user is able to conclude a drag-and-drop workflow for a given drop selector\n     *\n     * @param {string} selector       The candidate HTML selector for the drop target\n     * @returns {boolean}             Can the current user drop on this selector?\n     * @protected\n     */\n    _canDragDrop(selector) {\n      return true;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur at the beginning of a drag start workflow.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    _onDragStart(event) {}\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur when a dragged element is over a drop target.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    _onDragOver(event) {}\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur when a dragged element is dropped on a target.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    async _onDrop(event) {}\n  };\n}\n","import { DragDropApplicationMixin } from \"@app/mixins/drag-drop.mjs\";\nimport { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Offers a dynamic list selector that allows the user to add new entries and delete existing entries\n *\n * @abstract\n */\nexport class AbstractListSelector extends DragDropApplicationMixin(\n  HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2))\n) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: AbstractListSelector._save,\n      closeOnSubmit: true,\n      submitOnClose: false,\n    },\n    classes: [\"pf1-v2\", \"list-selector\", \"no-padding\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    actions: {\n      addEntry: AbstractListSelector._onAddEntry,\n      deleteEntry: AbstractListSelector._onDeleteEntry,\n    },\n    position: {\n      width: 600,\n    },\n    sheetConfig: false,\n    dragDrop: [{ dragSelector: \"[data-drag]\", dropSelector: \"[data-drop]\" }],\n  };\n\n  constructor(options = {}) {\n    super(options);\n    this.dragDropHighlightTimeout = null;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return the dragdrop element type for this application\n   *\n   * @returns {string}\n   */\n  get dragDropType() {\n    return \"pf1Entry-\" + this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare drag-drop data and highlight dragged element\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n    if (\"link\" in event.target.dataset) return;\n\n    const row = el.closest(\"[data-index]\");\n    const index = row?.dataset?.index;\n    if (index === undefined) return;\n\n    // Extract the data you need\n    const dragData = {\n      type: this.dragDropType,\n      index: Number(index),\n      appId: this.id,\n      entry: this.entries[parseInt(row.dataset.index)],\n    };\n\n    row.classList.add(\"is-dragged\");\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    event.dataTransfer.setDragImage(row, 0, 0);\n\n    pf1._temp.dragDropData = dragData;\n    event.target.addEventListener(\"dragend\", () => delete pf1._temp.dragDropData);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Highlight position that the element will be inserted to on drop\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  _onDragOver(event) {\n    this.clearDragHighlights();\n\n    if (pf1._temp?.dragDropData?.type !== this.dragDropType) return;\n    event.target.closest(\"[data-drop]\").classList.add(\"drag-over\");\n\n    clearTimeout(this.dragDropHighlightTimeout);\n    this.dragDropHighlightTimeout = setTimeout(() => this.clearDragHighlights(), 150);\n  }\n\n  /* -------------------------------------------- */\n\n  clearDragHighlights() {\n    this.element.querySelectorAll(\"[data-drop]\").forEach((el) => el.classList.remove(\"drag-over\", \"is-dragged\"));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject dragged element into its new position\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  async _onDrop(event) {\n    const dragEventData = TextEditor.getDragEventData(event);\n    const moveToBeforeId = event.target.closest(\"[data-index]\").dataset.index;\n\n    this.clearDragHighlights();\n    if (dragEventData?.type !== this.dragDropType) return;\n\n    const movedId = dragEventData?.index;\n    if (!movedId) return;\n\n    let entry = dragEventData?.entry;\n    if (dragEventData?.appId === this.id) {\n      entry = this.entries.splice(dragEventData.index, 1)[0];\n    }\n\n    this.entries.splice(moveToBeforeId, 0, entry);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          document: this.document,\n          id: this.name,\n          entries: this.entries,\n          fields: this.fields,\n          dtypes: this.dtypes,\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {};\n        return {\n          buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n        };\n      }\n    }\n\n    return {};\n  }\n\n  /**\n   * @override\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,button,select)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the name property\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of fields\n   *\n   * @type {string[]}\n   */\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of data types\n   *\n   * @type {string[]}\n   */\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the data entry length\n   *\n   * @type {number}\n   */\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @abstract\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add a new entry to the list\n   *\n   * @internal\n   * @param event\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  static async _onAddEntry(event) {\n    event.preventDefault();\n    this.entries.push(this._getNewEntry(event));\n    return this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Delete an existing entry from the list\n   *\n   * @internal\n   * @param event\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  static async _onDeleteEntry(event) {\n    event.preventDefault();\n    const a = event.target;\n\n    const tr = a.closest(\"tr\");\n    const index = parseInt(tr.dataset.index);\n    this.entries.splice(index, 1);\n    return this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @abstract\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the new data back to the document.\n   *\n   * @internal\n   * @this {AbstractListSelector}\n   * @param {SubmitEvent} event               The originating form submission event\n   * @param {HTMLFormElement} form            The form element that was submitted\n   * @param {FormDataExtended} formData       Processed data for the submitted form\n   * @param {object} formData.object          The object of the form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    this.document.update(this._getUpdateData());\n  }\n}\n","import { AbstractListSelector } from \"@app/abstract-list-selector.mjs\";\n\n/**\n * Extend the FormApplication to handle creating, removing, and editing\n * and Actor's Damage Reduction and Energy Resistances.\n */\nexport class DamageResistanceSelector extends AbstractListSelector {\n  static DEFAULT_OPTIONS = {\n    classes: [\"damage-resistance-selector\"],\n    window: {\n      icon: \"fa-solid fa-shield-halved\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/damage-resistance-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /** @override */\n  constructor(options) {\n    super(options);\n\n    /** Basic properties for handling operations */\n    // Prepare data and convert it into format compatible with the editor\n    this.isDR = options.isDR === true;\n\n    /** Working copy of our trait's data */\n    const resistances = foundry.utils.deepClone(foundry.utils.getProperty(this.document, this.attribute) ?? {});\n\n    /**\n     * Custom user input for damage sources\n     *\n     * @property\n     * @type {string}\n     */\n    this.custom = resistances.custom;\n\n    /**\n     * Original copy of the trait's entries\n     *\n     * @property\n     * @type {Object<string, any>}\n     */\n    this.originalEntries = resistances.value;\n    this.entries = resistances.value;\n\n    /** Processing Damage sources */\n    const damageOBJ = pf1.utils.naturalSort([...pf1.registry.damageTypes], \"name\").filter((dType) => !dType.isModifier);\n    const damages = {};\n\n    // Loop through the registry to filter not-applicable damage sources\n    Object.values(damageOBJ)\n      .sort()\n      .forEach((dType) => {\n        // If we are looking for DR, we want to exclude types that are energy or not untyped\n        if ((dType.category === \"energy\" || dType.category === \"misc\") && this.isDR) {\n          return;\n        }\n\n        // If we are looking for ERES, we want to exclude types that are physical or untyped\n        if ((dType.category === \"physical\" || (dType.category === \"misc\" && dType.id === \"untyped\")) && !this.isDR) {\n          return;\n        }\n\n        damages[dType.id] = dType.name;\n      });\n\n    if (this.isDR) {\n      Object.keys(pf1.config.damageResistances).forEach((dType) => {\n        damages[dType] = pf1.config.damageResistances[dType];\n      });\n\n      pf1.utils.naturalSort([...pf1.registry.materials], \"name\").forEach((material) => {\n        if (\n          material.dr &&\n          !material.treatedAs &&\n          (material.allowed.lightBlade ||\n            material.allowed.oneHandBlade ||\n            material.allowed.twoHandBlade ||\n            material.allowed.rangedWeapon)\n        ) {\n          damages[material.id] = material.shortName || material.name;\n        }\n      });\n    }\n\n    /**\n     * A list of key-value pairs for dropdown damage types\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this.damages = damages;\n\n    /**\n     * A dropdown list of combination types for multiple damage types\n     *\n     * @property\n     * @type {Object<boolean, string>}\n     */\n    this.operators = {\n      true: \"PF1.Application.DamageResistanceSelector.CombinationOr\",\n      false: \"PF1.Application.DamageResistanceSelector.CombinationAnd\",\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    const type = options.isDR ? \"DR\" : \"ER\";\n    options.id = `DamageResistanceSelector-${type}-${options.document.uuid.replaceAll(\".\", \"-\")}`;\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId, context, options) {\n    const rv = await super._preparePartContext(partId, context, options);\n    if (partId === \"form\") {\n      rv.custom = this.custom;\n      rv.damages = this.damages;\n      rv.operators = this.operators;\n      rv.isDR = this.isDR;\n    }\n\n    return rv;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the window to include the Actor name\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.DamageResistanceSelector.\" + (this.isDR ? \"DR\" : \"ER\") + \"Title\")}: ${\n      this.actor.name\n    }`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @override\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    return {\n      amount: 0,\n      types: [this.isDR ? \"\" : \"fire\", \"\"],\n      operator: true,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {EntrySelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    const target = event.target;\n\n    if (target.matches(\"[name=custom]\")) {\n      this._onResistanceCustomChange(event);\n    } else {\n      this._onResistanceChange(event);\n    }\n\n    super._onChangeForm(formConfig, event);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * A triggered operation when any inputs or dropdowns are interacted\n   * with to save the data from UI\n   *\n   * @param {Event} event\n   */\n  async _onResistanceChange(event) {\n    const target = event.target;\n\n    const tr = target.closest(\"tr.resistance\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = target.dataset.index;\n    const value = target.value;\n    let updateValue = null;\n\n    // Sanity-check our updated value\n    if (target.dataset.dtype === \"Number\") {\n      let val = parseFloat(value);\n      if (isNaN(val)) val = 0;\n      updateValue = Math.floor(val * 100) / 100;\n    } else if (target.dataset.dtype === \"Boolean\") updateValue = value === \"true\";\n    else updateValue = value;\n\n    // Process the value into the types array or assign to an entry property\n    switch (index2) {\n      case \"types0\":\n        this.entries[index].types[0] = updateValue;\n        break;\n      case \"types1\":\n        this.entries[index].types[1] = updateValue;\n        break;\n      default:\n        this.entries[index][index2] = updateValue;\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * A triggered operation when the user modifies the custom input section\n   *\n   * @param {Event} event\n   */\n  async _onResistanceCustomChange(event) {\n    const target = event.target;\n    this.custom = target.value;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @override\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    const updateData = {};\n\n    updateData[this.attribute + \".value\"] = this.entries.map((value) => {\n      // Ensure no matter what, we have values\n      value.types[0] ??= \"\";\n      value.types[1] ??= \"\";\n\n      if (value.types[0] === \"\" && value.types[1] !== \"\") {\n        value.types[0] = value.types[1];\n        value.types[1] = \"\";\n      }\n      if (value.types[0] === value.types[1]) {\n        value.types[1] = \"\";\n      }\n\n      // Clear out empty choices\n      value.types = value.types.filter((v) => v);\n\n      // Convert from string key to boolean value\n      value.operator = String(value.operator).toLowerCase() === \"true\";\n      return value;\n    });\n    updateData[this.attribute + \".custom\"] = this.custom;\n\n    return updateData;\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that renders a form to configure the resting behavior of an Actor\n *\n * @param {ActorPF} actor     The Actor instance for which to configure resting\n */\nexport class ActorRestDialog extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ActorRestDialog._rest,\n      submitOnChange: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"actor-rest\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-bed\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 500,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/actor-rest.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      buttons: [{ type: \"submit\", label: \"PF1.Rest\", icon: \"fa-solid fa-bed\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the actor rest window to include the Actor name\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Rest\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Trigger the actor rest with the provided form input as options.\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The resting configuration\n   * @returns {Promise<void>}\n   */\n  static async _rest(event, form, formData) {\n    await this.actor.performRest(formData.object);\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application offering the user an interface to use the point-buy rules\n * described in the Pathfinder CRB to determine their characters ability\n * scores.\n */\nexport class PointBuyCalculator extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  /**\n   * Minimum possible ability score value.\n   */\n  min;\n  /**\n   * Maximum possible ability score value.\n   */\n  max;\n  /**\n   * The actors current ability scores.\n   *\n   * @type {{key: string, name: string, value: number}[]}\n   */\n  abilities;\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: PointBuyCalculator._save,\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"pointbuy-calculator\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-seedling\",\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      control: PointBuyCalculator._onAbilityControl,\n    },\n    position: {\n      width: 320,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/point-buy-calculator.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    super(options);\n\n    const ablValues = Object.keys(pf1.config.abilityCost).map((i) => Number(i));\n\n    this.abilities = Object.entries(pf1.config.abilities).map(([k, name]) => ({\n      key: k,\n      name,\n      value: this.actor.system.abilities[k]?.value ?? 10,\n    }));\n    this.min = Math.min(...ablValues);\n    this.max = Math.max(...ablValues);\n  }\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const usedPoints = this.spentPoints;\n\n    const pointBuy = pf1.config.pointBuy;\n    const limitsArr = Object.entries(pointBuy).map(([key, ldata]) => ({ ...ldata, key }));\n    limitsArr.sort((a, b) => a.points - b.points);\n\n    // Find most relevant category\n    let closest = limitsArr[0].key;\n    for (const l of limitsArr) {\n      const prev = pointBuy[closest].points;\n      if (prev < usedPoints) closest = l.key;\n    }\n\n    return {\n      min: this.min,\n      max: this.max,\n      abilities: this.abilities,\n      points: usedPoints,\n      limits: limitsArr,\n      closest,\n      invalidPoints: pointBuy[closest].points !== usedPoints,\n      buttons: [{ type: \"submit\", label: \"PF1.Confirm\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the point buy calculator window to include the actors name.\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.PointBuy.Title\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the number of points spent on ability scores.\n   *\n   * @type {number}\n   */\n  get spentPoints() {\n    let result = 0;\n\n    for (const a of this.abilities) {\n      result += pf1.config.abilityCost[a.value];\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update ability score value display and remaining points on\n   * subtract/add operations.\n   *\n   * @internal\n   * @param event\n   * @param target\n   * @this {PointBuyCalculator}\n   * @returns {Promise<void>}\n   */\n  static async _onAbilityControl(event, target) {\n    event.preventDefault();\n    const ablKey = target.closest(\".ability\").dataset.ability;\n    const abl = this.abilities.find((o) => o.key === ablKey);\n\n    if (target.classList.contains(\"add\")) {\n      abl.value = Math.min(this.max, abl.value + 1);\n    } else if (target.classList.contains(\"subtract\")) {\n      abl.value = Math.max(this.min, abl.value - 1);\n    }\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the actors ability scores based on the current input values.\n   *\n   * @internal\n   * @this {PointBuyCalculator}\n   * @returns {Promise<void>}\n   */\n  static async _save() {\n    const updateData = {};\n    for (const a of this.abilities) {\n      updateData[`system.abilities.${a.key}.value`] = a.value;\n    }\n    await this.actor.update(updateData);\n  }\n}\n","export class Widget_ItemPicker {\n  constructor(callback, { items, columns = 3 } = {}) {\n    /**\n     * @property\n     * The HTML element that represents this widget.\n     */\n    this.element = null;\n\n    /**\n     * @property\n     * The callback to fire if an item is clicked.\n     */\n    this.callback = callback;\n\n    /**\n     * @typedef Widget_ItemPicker_Item\n     * @type {object}\n     * @property {string} value\n     * @property {string} label\n     */\n    /**\n     * @property\n     * @type Widget_ItemPicker_Item[]\n     * The items in this widget.\n     */\n    this._items = items;\n\n    /**\n     * @property\n     * @type {number}\n     * The maximum amount of columns shown.\n     */\n    this.columns = columns;\n  }\n\n  render(parentElem) {\n    // Generate widget\n    const rootElem = $($.parseHTML('<div class=\"widget item-picker\"></div>'));\n    // Add rows\n    let rowElem;\n    for (let a = 0; a < this._items.length; a++) {\n      const item = this._items[a];\n      if (a % this.columns === 0) {\n        rowElem = $($.parseHTML('<div class=\"row\"></div>'));\n        rootElem.append(rowElem);\n      }\n\n      const itemElem = $($.parseHTML(`<div class=\"item\" value=\"${item.value}\">${item.label}</div>`));\n      const widthRate = Math.floor(10000 / this.columns) / 100;\n      itemElem.css(\"flex\", `0 0 calc(${widthRate}% - 4px)`);\n      rowElem.append(itemElem);\n    }\n\n    // Replace parent element\n    if (!(parentElem instanceof jQuery)) parentElem = $(parentElem);\n    rootElem.css(\"position\", \"absolute\");\n    rootElem.css(\"left\", `${parentElem[0].offsetLeft}px`);\n    rootElem.css(\"position\", `${parentElem[0].offsetBottom}px`);\n    parentElem.parent().append(rootElem);\n\n    this.element = rootElem;\n\n    window.setTimeout(() => {\n      this.activateListeners(rootElem);\n    }, 10);\n  }\n\n  activateListeners(html) {\n    // Click item callback\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Cancel widget\n    this._cancelCallback = this._onCancel.bind(this);\n    document.addEventListener(\"click\", this._cancelCallback);\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    const target = event.target;\n    let node = target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.cancel();\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    this.callback($(a).attr(\"value\"));\n  }\n\n  cancel() {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    this.element.remove();\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * A generic application to render a settings modal.\n *\n * @abstract\n */\nexport class AbstractSettingsApplication extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._save,\n      submitOnChange: false,\n      closeOnSubmit: true,\n      submitOnClose: false,\n    },\n    classes: [\"pf1-v2\", \"settings\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      resetForm: this._onFormReset,\n    },\n    position: {\n      width: 520,\n    },\n    sheetConfig: false,\n  };\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(this.options.phraseKey + \".Title\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * settings app instance and tack on extra class.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    options.id = options.configKey.replace(\"Config\", \"\").toLowerCase() + \"-config\";\n    options.classes = options.classes || [];\n    options.classes.push(options.id);\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _prepareContext() {\n    if (!this.settings) {\n      const settings = game.settings.get(\"pf1\", this.options.configKey);\n      this.settings = new this.options.model(settings.toObject());\n      this.fields = this.settings.fields;\n    }\n\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId - Part ID\n   * @param {ApplicationRenderContext} context - Context\n   */\n  async _preparePartContext(partId, context) {\n    switch (partId) {\n      case \"form\":\n        {\n          Object.assign(context, {\n            activeTab: this.tabGroups.primary,\n            settings: this.settings,\n            fields: this.settings.schema.fields,\n            model: this.options.model,\n            config: pf1.config,\n            const: pf1.const,\n          });\n        }\n        break;\n\n      case \"footer\":\n        {\n          context.buttons = [\n            { type: \"button\", label: \"SETTINGS.Reset\", icon: \"fa-solid fa-arrows-rotate\", action: \"resetForm\" },\n            { type: \"submit\", label: \"SETTINGS.Save\", icon: \"fa-solid fa-floppy-disk\" },\n          ];\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if ([\"form\", \"tabs\"].includes(partId)) {\n      context.tabs = this.tabs?.primary || {};\n      for (const [id, tab] of Object.entries(context.tabs)) {\n        const active = this.tabGroups.primary === id;\n        Object.assign(tab, {\n          id,\n          group: \"primary\",\n          active,\n          cssClass: active ? \"active\" : \"\",\n        });\n      }\n    }\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const input = event.target.closest(\"[name]\");\n    this.settings.updateSource({ [input.name]: input.type === \"checkbox\" ? input.checked : input.value });\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler that is fired when the form is reset to its original values\n   *\n   * @internal\n   * @param {Event} event - The triggering event\n   * @returns {Promise<void>}\n   */\n  static async _onFormReset(event) {\n    this.settings = new this.options.model();\n    ui.notifications.info(game.i18n.localize(this.options.phraseKey + \".Reset\"));\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the game settings with the new configuration\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The form data in object form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n    await game.settings.set(\"pf1\", this.options.configKey, formData);\n  }\n}\n\n/**\n * A generic application to render a settings modal with a \"Player\" and a \"World\" tab.\n *\n * @abstract\n */\nexport class AbstractSplitSettingsApplication extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    form: {\n      handler: this._save,\n    },\n    actions: {\n      resetForm: this._onFormReset,\n    },\n  };\n\n  tabGroups = { primary: \"player\" };\n\n  tabs = {\n    primary: {\n      player: {\n        icon: \"fa-solid fa-user\",\n        label: \"PF1.Application.Settings.Player\",\n      },\n      world: {\n        icon: \"fa-solid fa-globe\",\n        label: \"PF1.Application.Settings.World\",\n      },\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  _configureRenderOptions(options) {\n    super._configureRenderOptions(options);\n    if (!game.user.isGM) {\n      // If we're not a GM, remove the tabs part\n      options.parts.shift();\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    delete context.settings;\n    delete context.model;\n    delete context.fields;\n\n    Object.assign(context, {\n      player: this.playerSettings,\n      playerModel: this.options.playerModel,\n      playerSchema: this.options.playerModel.defineSchema(),\n      world: this.worldSettings,\n      worldModel: this.options.worldModel,\n      worldSchema: this.options.worldModel.defineSchema(),\n      isGM: game.user.isGM,\n    });\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   */\n  async _prepareContext(options) {\n    if (!this.settings) {\n      const playerSettings = game.settings.get(\"pf1\", this.options.configKey);\n      this.playerSettings = new this.options.playerModel(playerSettings.toObject());\n      if (game.user.isGM) {\n        const worldSettings = game.settings.get(\"pf1\", this.options.worldConfigKey);\n        this.worldSettings = new this.options.worldModel(worldSettings.toObject());\n      }\n      this.settings = true;\n    }\n\n    return super._prepareContext(options);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler that is fired when the form is reset to its original values\n   *\n   * @internal\n   * @param {Event} event - The triggering event\n   * @returns {Promise<void>}\n   */\n  async _onFormReset(event) {\n    this.playerSettings = new this.options.playerModel();\n    if (game.user.isGM) {\n      this.worldSettings = new this.options.worldModel();\n    }\n    ui.notifications.info(game.i18n.localize(this.options.phraseKey + \".Reset\"));\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the game settings with the new configuration\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The form data in object form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n\n    await game.settings.set(\"pf1\", this.options.configKey, formData.player);\n    if (game.user.isGM) {\n      await game.settings.set(\"pf1\", this.options.worldConfigKey, formData.world);\n    }\n  }\n}\n","export class RollPF extends Roll {\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll.hbs\";\n\n  get totalHalved() {\n    foundry.utils.logCompatibilityWarning(\"RollPF.totalHalved is deprecated with no replacement\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return Math.floor(this.total / 2);\n  }\n\n  /**\n   * Synchronous and thrown error consuming roll evaluation.\n   *\n   * @remarks\n   * - Returned roll has `.err` set if an error occurred during evaluation.\n   * - If error occurs, the returned roll will have its formula replaced.\n   * @param {string} formula - Roll formula\n   * @param {object} rollData - Data supplied to roll\n   * @param {object} context - If error occurs, this will be included in the error message.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError=false] - If true, no error will be printed even if one occurs.\n   * @param {object} [evalOpts] - Additional options to pass to Roll.evaluate()\n   * @returns {Promise<RollPF>} - Evaluated roll, or placeholder if error occurred.\n   */\n  static async safeRoll(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    let roll;\n    try {\n      roll = await this.create(formula, rollData).evaluate({ ...evalOpts });\n    } catch (err) {\n      roll = this.create(\"0\", rollData).evaluateSync({ ...evalOpts });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  /**\n   * Synchronous version of {@link safeRoll safeRoll()}\n   *\n   * {@inheritDoc safeRoll}\n   *\n   * @param {string} formula - Formula to evaluate\n   * @param {object} [rollData] - Roll data\n   * @param {*} [context] - Context data to log if error occurs\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError] - If true, no error will be printed\n   * @param {object} [evalOpts] - Options to pass to Roll.evaluate()\n   * @returns {pf1.dice.RollPF} - Evaluated roll\n   */\n  static safeRollSync(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    let roll;\n    try {\n      roll = new this(formula, rollData).evaluateSync({ ...evalOpts });\n    } catch (err) {\n      roll = new this(\"0\", rollData).evaluateSync({ ...evalOpts });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  static cleanFlavor(flavor) {\n    return flavor.replace(/\\[\\];/g, \"\");\n  }\n\n  static getTermTooltipData(term) {\n    if (typeof term.total !== \"number\") return null; // Ignore terms that don't result in numbers\n\n    const ttdata = term.getTooltipData?.() ?? {\n      formula: term.expression,\n      total: term.total,\n      flavor: term.flavor,\n      css: term.flavor ? \"\" : \"placeholder\",\n    };\n\n    return ttdata;\n  }\n\n  /**\n   * Render the tooltip HTML for a RollPF instance\n   *\n   * @returns {Promise<string>} The rendered HTML tooltip as a string\n   */\n  async getTooltip() {\n    const parts = this.dice.filter((d) => d.results.some((r) => r.active)).map(this.constructor.getTermTooltipData);\n    const numericParts = this.terms.reduce((cur, t, idx, arr) => {\n      if (t instanceof foundry.dice.terms.DiceTerm) return cur; // Ignore dice already handled above\n      if (t instanceof foundry.dice.terms.FunctionTerm && t.dice.length) return cur; // Ignore function terms with dice\n\n      const ttdata = this.constructor.getTermTooltipData(t);\n      if (!ttdata) return cur;\n\n      const prior = arr[idx - 1];\n      if (\n        t instanceof foundry.dice.terms.NumericTerm &&\n        prior &&\n        prior instanceof foundry.dice.terms.OperatorTerm &&\n        prior.operator === \"-\"\n      ) {\n        ttdata.total = -ttdata.total;\n      }\n\n      cur.push(ttdata);\n\n      return cur;\n    }, []);\n\n    return renderTemplate(\"systems/pf1/templates/dice/tooltip.hbs\", { parts, numericParts });\n  }\n\n  /**\n   * @override\n   *\n   * Synced with Foundry v12.331\n   */\n  async render({ flavor, template = this.constructor.CHAT_TEMPLATE, isPrivate = false } = {}) {\n    if (!this._evaluated) await this.evaluate({ allowInteractive: !isPrivate });\n\n    const templateData = {\n      formula: isPrivate ? \"???\" : this.formula,\n      flavor: isPrivate ? null : (flavor ?? this.options.flavor),\n      user: game.user.id,\n      details: isPrivate ? \"\" : await this.getTooltip(),\n      get tooltip() {\n        return this.details;\n      },\n      total: isPrivate ? \"?\" : pf1.utils.limitPrecision(this.total, 2),\n      hasDetails: isPrivate ? false : true,\n    };\n\n    return renderTemplate(template, templateData);\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Formula Field\n */\nexport class FormulaField extends foundry.data.fields.StringField {\n  constructor(options = {}, context) {\n    if (options.choices) throw new Error(\"choices is not valid option for FormulaField\");\n    super(options, context);\n  }\n\n  /**\n   * @override\n   * @param {object} config\n   * @returns {HTMLInputElement}\n   */\n  _toInput(config) {\n    /** @type {HTMLInputElement} */\n    const input = super._toInput(config);\n\n    input.classList.add(\"formula\");\n\n    const formula = config?.value;\n    if (formula) {\n      try {\n        RollPF.parse(formula);\n      } catch (err) {\n        console.warn(err.message, { path: config.name, formula });\n        input.classList.add(\"error\");\n      }\n    }\n\n    return input;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\nexport class ExperienceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      track: new fields.StringField({ initial: \"medium\", choices: [\"fast\", \"medium\", \"slow\", \"custom\"] }),\n      custom: new fields.SchemaField({\n        formula: new FormulaField(),\n      }),\n      openDistributor: new fields.BooleanField({ initial: true }),\n    };\n  }\n\n  static migrateData(source) {\n    source.disable ??= source.disableExperienceTracking;\n    if (source.track === \"customFormula\") source.track = \"custom\";\n    source.openDistributor ??= source.openXpDistributor;\n\n    return super.migrateData(source);\n  }\n\n  static get progressionOptions() {\n    return {\n      slow: \"PF1.Application.Settings.Experience.Track.Options.Slow\",\n      medium: \"PF1.Application.Settings.Experience.Track.Options.Medium\",\n      fast: \"PF1.Application.Settings.Experience.Track.Options.Fast\",\n      custom: \"PF1.Application.Settings.Experience.Track.Options.Custom\",\n    };\n  }\n}\n\n/**\n * An application that lets the user configure experience related settings.\n */\nexport class ExperienceConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"experienceConfig\",\n    phraseKey: \"PF1.Application.Settings.Experience\",\n    model: ExperienceConfigModel,\n    window: {\n      icon: \"fa-solid fa-book\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/experience.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      enabled: this.settings.disable !== true,\n      hasCustomFormula: this.settings.track === \"custom\",\n    });\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class HealthConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const classType = (max = false) =>\n      new fields.SchemaField({\n        auto: new fields.BooleanField({ initial: false }),\n        rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1, step: 0.01, min: 0.01 }),\n        maximized: new fields.BooleanField({ initial: max }),\n      });\n\n    const variantRules = () =>\n      new fields.SchemaField({\n        useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n        useWoundThresholds: new fields.NumberField({ initial: 0, choices: () => this.woundThresholdOptions }),\n      });\n\n    return {\n      pc: new fields.SchemaField({\n        classes: new fields.SchemaField({\n          base: classType(true),\n          racial: classType(),\n          npc: classType(),\n        }),\n        rules: variantRules(),\n      }),\n      npc: new fields.SchemaField({\n        classes: new fields.SchemaField({\n          base: classType(true),\n          racial: classType(),\n          npc: classType(),\n        }),\n        rules: variantRules(),\n      }),\n      maximized: new fields.NumberField({ integer: true, min: 0, initial: 1, step: 1 }),\n      rounding: new fields.StringField({\n        blank: false,\n        nullable: false,\n        initial: \"up\",\n        choices: () => this.healthRoundingOptions,\n      }),\n      continuous: new fields.BooleanField({ initial: false }),\n    };\n  }\n\n  /**\n   * Retrieve hit die configuration relevant to given class.\n   *\n   * @param {ItemClassPF} item\n   * @param {string} [actorType] - Actor type. If not provided, will be retrieved from the item parent or fall back to `character`.\n   * @returns {object} -\n   */\n  getClassHD(item, actorType) {\n    actorType ||= item.actor?.type || \"character\";\n\n    const config = this.getActorConfig(actorType);\n\n    switch (item.system.subType) {\n      case \"npc\":\n        return config.classes.npc;\n      case \"racial\":\n        return config.classes.racial;\n      default:\n        return config.classes.base;\n    }\n  }\n\n  /**\n   * Get actor type specific config\n   *\n   * @param {Actor|string} actor - Actor document or type string\n   * @returns {object}\n   */\n  getActorConfig(actor) {\n    const type = actor?.type || actor;\n\n    switch (type) {\n      case \"character\":\n        return this.pc;\n      case \"npc\":\n        return this.npc;\n      default:\n        return {\n          rules: { useWoundThresholds: 0, useWoundsAndVigor: false },\n          get useWoundThresholds() {\n            foundry.utils.logCompatibilityWarning(\"useWoundThresholds is in rules.useWoundThresholds\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return 0;\n          },\n          get useWoundsAndVigor() {\n            foundry.utils.logCompatibilityWarning(\"useWoundsAndVigor is in rules.useWoundsAndVigor\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return false;\n          },\n        };\n    }\n  }\n\n  static migrateData(source) {\n    if (!source) return;\n\n    if (source.continuity) {\n      source.continuous ??= source.continuity === \"continuous\";\n      delete source.continuity;\n    }\n\n    if (source.hitdice) {\n      // PCs\n      source.pc ??= {};\n      source.pc.classes ??= {};\n      source.pc.classes.base ??= source.hitdice.PC;\n      source.pc.classes.npc ??= source.hitdice.NPC;\n      source.pc.classes.racial ??= source.hitdice.Racial;\n\n      // NPCs\n      source.npc ??= {};\n      source.npc.classes ??= {};\n      source.npc.classes.base ??= source.hitdice.PC;\n      source.npc.classes.npc ??= source.hitdice.NPC;\n      source.npc.classes.racial ??= source.hitdice.Racial;\n\n      delete source.hitdice;\n    }\n\n    if (source.variants) {\n      source.pc ??= {};\n      source.pc.rules ??= {};\n      source.pc.rules.useWoundsAndVigor ??= source.variants.pc?.useWoundsAndVigor;\n      source.pc.rules.useWoundThresholds ??= source.variants.pc?.useWoundThresholds;\n\n      source.npc ??= {};\n      source.npc.rules ??= {};\n      source.npc.rules.useWoundsAndVigor ??= source.variants.npc?.useWoundsAndVigor;\n      source.npc.rules.useWoundThresholds ??= source.variants.npc?.useWoundThresholds;\n\n      delete source.variants;\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  get hitdice() {\n    foundry.utils.logCompatibilityWarning(\"HealthConfigModel.hitdice is deprecated with no direct replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    // Hand over PC settings\n    return {\n      PC: this.pc.classes.base,\n      Racial: this.pc.classes.racial,\n      NPC: this.pc.classes.npc,\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get variants() {\n    foundry.utils.logCompatibilityWarning(\"HealthConfigModel.variants is deprecated with no direct replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    // Collect variant rules\n    return {\n      pc: {\n        useWoundsAndVigor: this.pc.rules.useWoundsAndVigor,\n        useWoundThresholds: this.pc.rules.useWoundThresholds,\n      },\n      npc: {\n        useWoundsAndVigor: this.npc.rules.useWoundsAndVigor,\n        useWoundThresholds: this.npc.rules.useWoundThresholds,\n      },\n    };\n  }\n\n  static get woundThresholdOptions() {\n    return {\n      0: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Disabled\"),\n      1: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Normal\"),\n      2: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Gritty\"),\n    };\n  }\n\n  static get healthRoundingOptions() {\n    return {\n      up: \"PF1.Application.Settings.Health.RoundingUp\",\n      nearest: \"PF1.Application.Settings.Health.RoundingNearest\",\n      down: \"PF1.Application.Settings.Health.RoundingDown\",\n    };\n  }\n\n  static get healthContinuityOptions() {\n    return {\n      true: \"PF1.Application.Settings.Health.Continuous\",\n      false: \"PF1.Application.Settings.Health.Discrete\",\n    };\n  }\n\n  prepareDerivedData() {\n    for (const config of [this.pc, this.npc]) {\n      Object.defineProperties(config, {\n        useWoundsAndVigor: {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"useWoundsAndVigor is in rules.useWoundsAndVigor\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return this.rules.useWoundsAndVigor;\n          },\n        },\n        useWoundThresholds: {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"useWoundThresholds is in rules.useWoundThresholds\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return this.rules.useWoundThresholds;\n          },\n        },\n      });\n    }\n  }\n}\n\nexport class HealthConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"healthConfig\",\n    phraseKey: \"PF1.Application.Settings.Health\",\n    model: HealthConfigModel,\n    window: {\n      icon: \"fa-solid fa-heartbeat\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/health.hbs\",\n      templates: [\"systems/pf1/templates/settings/health.hbs\", \"templates/generic/tab-navigation.hbs\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  tabGroups = { actor: \"pc\" };\n\n  tabs = {\n    actor: {\n      pc: {\n        icon: \"fa-solid fa-heartbeat\",\n        label: \"PF1.PCs\",\n      },\n      npc: {\n        icon: \"fa-solid fa-prescription-bottle-alt\",\n        label: \"PF1.NPCs\",\n      },\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      showWoundsVigorWarning: {\n        pc: this.settings.pc.rules.useWoundsAndVigor && this.settings.pc.rules.useWoundThresholds !== 0,\n        npc: this.settings.npc.rules.useWoundsAndVigor && this.settings.npc.rules.useWoundThresholds !== 0,\n      },\n    });\n\n    for (const actorType of [\"pc\", \"npc\"]) {\n      for (const [hdId, hdData] of Object.entries(context.settings[actorType].classes)) {\n        hdData.label = `PF1.Application.Settings.Health.Class.${hdId}`;\n        hdData.fields = context.fields[actorType].fields.classes.fields[hdId].fields;\n      }\n    }\n\n    context.settings.pc.label = \"PC\";\n    context.settings.npc.label = \"NPC\";\n\n    // Prepare tabs\n    context.activeTab = this.tabGroups.actor;\n    context.tabs = this.tabs?.actor || {};\n    for (const [id, tab] of Object.entries(context.tabs)) {\n      const active = this.tabGroups.actor === id;\n      Object.assign(tab, {\n        id,\n        group: \"actor\",\n        active,\n        cssClass: active ? \"active\" : \"\",\n      });\n    }\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class IntegrationConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      diceSoNice: new fields.BooleanField({ initial: true }),\n      dragRuler: new fields.BooleanField({ initial: true }),\n      babele: new fields.BooleanField({ initial: true }),\n    };\n  }\n}\n\n/**\n * An application that lets the user configure module integration related settings.\n */\nexport class IntegrationConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"integration\",\n    phraseKey: \"PF1.Application.Settings.Integration\",\n    model: IntegrationConfigModel,\n    window: {\n      icon: \"fa-solid fa-check-to-slot\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/integration.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      dsnFound: game.modules.get(\"dice-so-nice\")?.active,\n      drFound: game.modules.get(\"drag-ruler\")?.active,\n      bFound: game.modules.get(\"babele\")?.active,\n    });\n\n    context.appId = this.id;\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class PerformanceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      reachLimit: new fields.NumberField({ integer: true, min: 0, initial: 60, max: 300, step: 1 }),\n    };\n  }\n}\n\n/**\n * An application that lets the user configure performance-related settings.\n */\nexport class PerformanceConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"performance\",\n    phraseKey: \"PF1.Application.Settings.Performance\",\n    model: PerformanceConfigModel,\n    window: {\n      icon: \"fa-solid fa-gauge\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/performance.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n}\n","import {\n  ExperienceConfig,\n  ExperienceConfigModel,\n  HealthConfig,\n  HealthConfigModel,\n  IntegrationConfig,\n  IntegrationConfigModel,\n  PerformanceConfig,\n  PerformanceConfigModel,\n} from \"@app/settings/_module.mjs\";\n\n/**\n * Register System Settings\n */\nexport function registerSystemSettings() {\n  /**\n   * Track the system version upon which point a migration was last applied\n   */\n  game.settings.register(\"pf1\", \"systemMigrationVersion\", {\n    scope: \"world\",\n    config: false,\n    type: String,\n    default: \"0.0.0\",\n  });\n\n  // Migration is in progress\n  game.settings.register(\"pf1\", \"migrating\", {\n    scope: \"world\",\n    config: false,\n    type: Boolean,\n    default: false,\n    onChange: (value) => (pf1.migrations.isMigrating = value),\n  });\n\n  /**\n   * Track when the last changelog was shown\n   */\n  game.settings.register(\"pf1\", \"changelogVersion\", {\n    scope: \"client\",\n    config: false,\n    type: String,\n    default: \"0.74.9\",\n  });\n  /**\n   * Don't automatically show changelog\n   */\n  game.settings.register(\"pf1\", \"dontShowChangelog\", {\n    scope: \"client\",\n    config: false,\n    type: Boolean,\n    default: false,\n  });\n\n  // Health configuration\n  game.settings.registerMenu(\"pf1\", \"healthConfig\", {\n    name: \"PF1.Application.Settings.Health.Title\",\n    label: \"PF1.Application.Settings.Health.Label\",\n    hint: \"PF1.Application.Settings.Health.Hint\",\n    icon: \"fa-solid fa-heartbeat\",\n    type: HealthConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"healthConfig\", {\n    scope: \"world\",\n    default: new HealthConfigModel(),\n    type: HealthConfigModel,\n    config: false,\n    requiresReload: true,\n    //onChange: () => pf1.utils.refreshActors(), // Excessive if reloading instantly\n  });\n\n  // Experience configuration\n  game.settings.registerMenu(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.Application.Settings.Experience.Title\",\n    label: \"PF1.Application.Settings.Experience.Label\",\n    hint: \"PF1.Application.Settings.Experience.Hint\",\n    icon: \"fa-solid fa-book\",\n    type: ExperienceConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"experienceConfig\", {\n    scope: \"world\",\n    default: new ExperienceConfigModel(),\n    type: ExperienceConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  game.settings.register(\"pf1\", \"integration\", {\n    type: IntegrationConfigModel,\n    default: new IntegrationConfigModel(),\n    scope: \"world\",\n    config: false,\n    requiresReload: true,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"integration\", {\n    name: \"PF1.Application.Settings.Integration.Title\",\n    label: \"PF1.Application.Settings.Integration.Label\",\n    hint: \"PF1.Application.Settings.Integration.Hint\",\n    restricted: true,\n    icon: \"fa-solid fa-check-to-slot\",\n    type: IntegrationConfig,\n  });\n\n  game.settings.register(\"pf1\", \"performance\", {\n    scope: \"client\",\n    default: new PerformanceConfigModel(),\n    type: PerformanceConfigModel,\n    config: false,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"performance\", {\n    name: \"PF1.Application.Settings.Performance.Title\",\n    label: \"PF1.Application.Settings.Performance.Button\",\n    hint: \"PF1.Application.Settings.Performance.Hint\",\n    restricted: false,\n    icon: \"fa-solid fa-gauge\",\n    type: PerformanceConfig,\n  });\n\n  // MEASURING\n\n  /**\n   * Option to change measure style\n   */\n  game.settings.register(\"pf1\", \"measureStyle\", {\n    name: \"PF1.SETTINGS.Canvas.MeasureStyle\",\n    hint: \"PF1.SETTINGS.Canvas.MeasureStyleHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * System of Units\n   */\n  game.settings.register(\"pf1\", \"units\", {\n    name: \"PF1.SETTINGS.Units.System\",\n    hint: \"PF1.SETTINGS.Units.SystemHint\",\n    scope: \"world\",\n    config: true,\n    default: \"imperial\",\n    type: String,\n    choices: {\n      imperial: \"PF1.SETTINGS.Units.Imperial\",\n      metric: \"PF1.SETTINGS.Units.Metric\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for distances.\n   */\n  game.settings.register(\"pf1\", \"distanceUnits\", {\n    name: \"PF1.SETTINGS.Units.Distance\",\n    hint: \"PF1.SETTINGS.Units.DistanceHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialDistance\",\n      metric: \"PF1.SETTINGS.Units.MetricDistance\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for weights.\n   */\n  game.settings.register(\"pf1\", \"weightUnits\", {\n    name: \"PF1.SETTINGS.Units.Weight\",\n    hint: \"PF1.SETTINGS.Units.WeightHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialWeight\",\n      metric: \"PF1.SETTINGS.Units.MetricWeight\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * Overland speed variant for metric.\n   */\n  game.settings.register(\"pf1\", \"overlandMetricVariant\", {\n    name: \"PF1.SETTINGS.OverlandVariantN\",\n    hint: \"PF1.SETTINGS.OverlandVariantL\",\n    scope: \"world\",\n    config: true,\n    default: \"rounded\",\n    choices: {\n      rounded: \"PF1.SETTINGS.OverlandMetricRounded\",\n      exact: \"PF1.SETTINGS.OverlandMetricExact\",\n    },\n  });\n\n  // OPTIONAL RULES\n\n  /**\n   * Option to allow the background skills optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"allowBackgroundSkills\", {\n    name: \"PF1.SETTINGS.VariantRules.BackgroundSkills\",\n    hint: \"PF1.SETTINGS.VariantRules.BackgroundSkillsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Option to use the Fractional Base Bonuses optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"useFractionalBaseBonuses\", {\n    name: \"PF1.SETTINGS.VariantRules.FractionalBaseBonuses\",\n    hint: \"PF1.SETTINGS.VariantRules.FractionalBaseBonusesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Unchained action economy\n   */\n  game.settings.register(\"pf1\", \"unchainedActionEconomy\", {\n    name: \"PF1.SETTINGS.UnchainedActionEconomyN\",\n    hint: \"PF1.SETTINGS.UnchainedActionEconomyH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Cybertech\n   */\n  game.settings.register(\"pf1\", \"cybertech\", {\n    name: \"PF1.SETTINGS.Cybertech\",\n    hint: \"PF1.SETTINGS.CybertechHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Armor as DR\n\n  /**\n   * Critical confirmation rolls\n   */\n  game.settings.register(\"pf1\", \"critConfirm\", {\n    name: \"PF1.SETTINGS.CriticalConfirm\",\n    hint: \"PF1.SETTINGS.CriticalConfirmHint\",\n    scope: \"world\",\n    type: Boolean,\n    default: true,\n    config: true,\n  });\n\n  /**\n   * Scrolling health required permission\n   */\n  game.settings.register(\"pf1\", \"healthPermission\", {\n    name: \"PF1.SETTINGS.HealthDisplay.Label\",\n    hint: \"PF1.SETTINGS.HealthDisplay.Hint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      NONE: \"PF1.SETTINGS.HealthDisplay.AnyPermission\",\n      LIMITED: \"OWNERSHIP.LIMITED\",\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n  });\n\n  // VISION\n\n  /**\n   * Special Vision Needs Selection\n   *\n   * Formerly: \"Low-light Vision Mode\"\n   */\n  game.settings.register(\"pf1\", \"lowLightVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.RequiresSelection\",\n    hint: \"PF1.SETTINGS.Vision.RequiresSelectionHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      // Refresh canvas sight\n      canvas.perception.update(\n        { initializeLighting: true, initializeVision: true, refreshLighting: true, refreshVision: true },\n        true\n      );\n    },\n  });\n\n  /**\n   * Shared Vision sharing style.\n   */\n  game.settings.register(\"pf1\", \"sharedVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.Sharing\",\n    hint: \"PF1.SETTINGS.Vision.SharingHint\",\n    scope: \"world\",\n    config: false, // Hidden as it is unused; TODO: Re-implement #187's setting usage or remove setting/feature completely\n    default: 0,\n    type: Number,\n    choices: {\n      0: \"PF1.SETTINGS.Vision.SharingWithoutSelection\",\n      1: \"PF1.SETTINGS.Vision.SharingWithSelection\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  game.settings.register(\"pf1\", \"guaranteedVision\", {\n    name: \"PF1.SETTINGS.Vision.Guaranteed\",\n    hint: \"PF1.SETTINGS.Vision.GuaranteedHint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  /**\n   * Enable vision for player characters by default.\n   */\n  game.settings.register(\"pf1\", \"characterVision\", {\n    name: \"PF1.SETTINGS.Vision.PCDefault\",\n    hint: \"PF1.SETTINGS.Vision.PCDefaultHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  game.settings.register(\"pf1\", \"pcDisposition\", {\n    name: \"PF1.SETTINGS.Token.PCDisposition\",\n    hint: \"PF1.SETTINGS.Token.PCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      FRIENDLY: \"TOKEN.DISPOSITION.FRIENDLY\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n    },\n    default: \"FRIENDLY\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"npcDisposition\", {\n    name: \"PF1.SETTINGS.Token.NPCDisposition\",\n    hint: \"PF1.SETTINGS.Token.NPCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n      HOSTILE: \"TOKEN.DISPOSITION.HOSTILE\",\n    },\n    default: \"NONE\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"systemVision\", {\n    name: \"PF1.SETTINGS.Vision.SystemControl\",\n    hint: \"PF1.SETTINGS.Vision.SystemControlHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      Object.values(ui.windows)\n        .filter((app) => app instanceof TokenConfig)\n        .forEach((app) => app.render());\n\n      // Initialize lighting is required for LLV to take effect\n      canvas.perception.update({ initializeLighting: true, refreshLighting: true, refreshVision: true }, true);\n    },\n  });\n\n  // CHAT CARDS\n\n  /**\n   * Option to automatically collapse Item Card descriptions\n   */\n  game.settings.register(\"pf1\", \"autoCollapseItemCards\", {\n    name: \"PF1.SETTINGS.Chat.AutoCollapse\",\n    hint: \"PF1.SETTINGS.Chat.AutoCollapseHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  /**\n   * Option to hide chat buttons\n   */\n  game.settings.register(\"pf1\", \"hideChatButtons\", {\n    name: \"PF1.SETTINGS.Chat.HideButtons\",\n    hint: \"PF1.SETTINGS.Chat.HideButtonsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  // HOMEBREW\n\n  /**\n   * Set coin weight\n   */\n  game.settings.register(\"pf1\", \"coinWeight\", {\n    name: \"PF1.SETTINGS.Houserules.CoinDivisor\",\n    hint: \"PF1.SETTINGS.Houserules.CoinDivisorHint\",\n    scope: \"world\",\n    config: true,\n    default: 50,\n    type: Number,\n    requiresReload: true,\n  });\n\n  /**\n   * Default spellpoint cost\n   */\n  game.settings.register(\"pf1\", \"spellPointCost\", {\n    name: \"PF1.SETTINGS.Houserules.SpellPointCost\",\n    hint: \"PF1.SETTINGS.Houserules.SpellPointCostHint\",\n    scope: \"world\",\n    config: true,\n    default: \"1 + @sl\",\n    type: String,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n  });\n\n  /**\n   * Use Dual Heal by default\n   */\n  game.settings.register(\"pf1\", \"dualHeal\", {\n    name: \"PF1.SETTINGS.DualHealDefault\",\n    hint: \"PF1.SETTINGS.DualHealDefaultHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Alternative reach corner rule\n   */\n  game.settings.register(\"pf1\", \"alternativeReachCornerRule\", {\n    name: \"PF1.SETTINGS.Houserules.AltReach\",\n    hint: \"PF1.SETTINGS.Houserules.AltReachHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Allow proficiencies on NPCs.\n   */\n  game.settings.register(\"pf1\", \"npcProficiencies\", {\n    name: \"PF1.SETTINGS.Houserules.NPCProficiencies\",\n    hint: \"PF1.SETTINGS.Houserules.NPCProficienciesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n    type: Boolean,\n  });\n\n  // TOKENS / CONDITIONS\n\n  /**\n   * Display default token conditions alongside system ones\n   */\n  game.settings.register(\"pf1\", \"coreEffects\", {\n    name: \"PF1.SETTINGS.CoreEffectsN\",\n    hint: \"PF1.SETTINGS.CoreEffectsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide token conditions\n   */\n  game.settings.register(\"pf1\", \"hideTokenConditions\", {\n    name: \"PF1.SETTINGS.HideTokenConditionsN\",\n    hint: \"PF1.SETTINGS.HideTokenConditionsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => canvas.tokens?.placeables?.forEach((t) => t._applyRenderFlags({ redrawEffects: true })),\n  });\n\n  // TRANSPARENCY\n\n  /**\n   * Obfuscate roll details from non-observers.\n   */\n  game.settings.register(\"pf1\", \"obscureInlineRolls\", {\n    name: \"PF1.SETTINGS.Chat.ObscureInlineRolls\",\n    hint: \"PF1.SETTINGS.Chat.ObscureInlineRollsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide DCs.\n   */\n  game.settings.register(\"pf1\", \"obscureSaveDCs\", {\n    name: \"PF1.SETTINGS.Chat.ObscureSaveDCs\",\n    hint: \"PF1.SETTINGS.Chat.ObscureSaveDCsHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // COMBAT\n\n  game.settings.register(\"pf1\", \"initiativeTiebreaker\", {\n    name: \"PF1.SETTINGS.InitTiebreaker.Label\",\n    hint: \"PF1.SETTINGS.InitTiebreaker.Hint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // USER INTERFACE\n\n  /**\n   * Skip action dialog prompts\n   */\n  game.settings.register(\"pf1\", \"skipActionDialogs\", {\n    name: \"PF1.SETTINGS.SkipActionDialogsN\",\n    hint: \"PF1.SETTINGS.SkipActionDialogsH\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /*\n   * When skipping an action dialog prompt still place the template if one is configured\n   */\n  game.settings.register(\"pf1\", \"placeMeasureTemplateOnQuickRolls\", {\n    name: \"PF1.SETTINGS.MeasureOnQuickUse\",\n    hint: \"PF1.SETTINGS.MeasureOnQuickUseHint\",\n    scope: \"client\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Invert filter Shift-clicking\n   */\n  game.settings.register(\"pf1\", \"invertSectionFilterShiftBehaviour\", {\n    name: \"PF1.SETTINGS.Sheet.InvertFilters\",\n    hint: \"PF1.SETTINGS.Sheet.InvertFiltersHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  // TARGETING\n\n  /**\n   * Disable targets for attack cards\n   */\n  game.settings.register(\"pf1\", \"disableAttackCardTargets\", {\n    name: \"PF1.SETTINGS.Chat.NoTargets\",\n    hint: \"PF1.SETTINGS.Chat.NoTargetsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Clear targets after attack\n   */\n  game.settings.register(\"pf1\", \"clearTargetsAfterAttack\", {\n    name: \"PF1.SETTINGS.Chat.ClearTargets\",\n    hint: \"PF1.SETTINGS.Chat.ClearTargetsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\n/**\n * Migrate system settings.\n */\nexport function migrateSystemSettings() {\n  // Delete now unused compendium browser cache\n  game.settings.storage.get(\"client\").removeItem(\"pf1.compendiumItems\");\n\n  if (!game.user.isGM) return;\n\n  // Currently empty, since the last option was removed (2022-06-06)\n}\n\n/**\n * Returns whether the user's settings and key presses signal that dialogs should be skipped.\n *\n * @returns {boolean} - True if prompt should be skipped\n */\nexport const getSkipActionPrompt = () => {\n  return (\n    (game.settings.get(\"pf1\", \"skipActionDialogs\") && !pf1.skipConfirmPrompt) ||\n    (!game.settings.get(\"pf1\", \"skipActionDialogs\") && pf1.skipConfirmPrompt)\n  );\n};\n","/**\n * Level-up and class addition handler.\n */\nexport class LevelUpForm extends FormApplication {\n  /**\n   * @internal\n   * @type {ActorPF}\n   */\n  actor;\n\n  /**\n   * Relevant token if any.\n   *\n   * @internal\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * Temporary clone of the actor for seeing the results of various modifications with.\n   *\n   * @internal\n   * @type {ActorPF}\n   */\n  simulacra;\n\n  /**\n   * Temporary clone of the class to simulate changes.\n   *\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  mold;\n\n  config = {\n    health: { manual: null, type: null, value: 0 },\n    fcb: { choice: \"none\", unavailable: false, available: true },\n    visibility: null,\n    feats: 0,\n    abilityScore: {\n      new: 0,\n      used: 0,\n      get available() {\n        return this.new - this.used;\n      },\n    },\n  };\n\n  static ICONS = {\n    fcb: {\n      none: \"\",\n      hp: \"systems/pf1/icons/skills/green_19.jpg\",\n      skill: \"systems/pf1/icons/items/inventory/dice.jpg\",\n      alt: \"systems/pf1/icons/skills/affliction_22.jpg\",\n    },\n    health: {\n      auto: \"\",\n      manual: \"systems/pf1/icons/skills/green_19.jpg\",\n      roll: \"systems/pf1/icons/items/inventory/dice.jpg\",\n    },\n  };\n\n  useBackgroundSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n  /**\n   * @internal\n   * @param {Actor} actor\n   * @param {Item} item\n   * @param {object} options\n   */\n  constructor(actor, item = null, options = {}) {\n    super(item, options);\n\n    if (item?.type !== \"class\") throw new Error(\"Can not level-up non-class items.\");\n\n    this.actor = actor ?? item?.actor ?? options.actor;\n\n    if (!this.actor) throw new Error(\"LevelUpForm needs an actor\");\n\n    this.token = this.actor?.token ?? options.token;\n\n    delete this.options.actor;\n    delete this.options.token;\n\n    this.config.isMythic = item.subType === \"mythic\";\n\n    this.config.level = {\n      old: item.system.level,\n      new: item.system.level + 1,\n      levelUp: item.system.level > 0,\n      hd: {\n        old: this.actor.system.attributes.hd.total,\n        new: null,\n      },\n    };\n\n    const config = this.config;\n    this.config.abilityScore.upgrades = Object.fromEntries(\n      Object.entries(pf1.config.abilities).map(([key, label]) => [\n        key,\n        {\n          ...this.actor.system.abilities[key],\n          key,\n          label,\n          added: 0,\n          bonus: 0,\n          get isEnhanced() {\n            return this.total !== this.base;\n          },\n          get isNull() {\n            return this.base === null;\n          },\n          get isValid() {\n            return !this.isNull;\n          },\n          get isAvailable() {\n            return this.isValid && config.abilityScore.available > 0;\n          },\n          get isModified() {\n            return this.added != 0;\n          },\n        },\n      ])\n    );\n\n    // By default hide NPCs for GMs\n    if (!this.actor.hasPlayerOwner) this.config.visibility = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    this._initData();\n    this._initChoices();\n  }\n\n  /**\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  get item() {\n    return this.object;\n  }\n\n  set item(cls) {\n    this.object = cls;\n  }\n\n  get id() {\n    const parent = this.actor.uuid.replaceAll(\".\", \"-\");\n    const tag = this.item.system.tag || pf1.utils.createTag(this.item.name);\n    return `level-up-${parent}-class-${tag}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"level-up\"],\n      template: \"systems/pf1/templates/apps/level-up.hbs\",\n      scrollY: [\"section\"],\n      width: 820,\n      height: \"auto\",\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      resizable: true,\n    });\n  }\n\n  get title() {\n    if (this.isLevelUp)\n      return game.i18n.format(\"PF1.LevelUp.Increase\", { class: this.item.name }) + ` – ${this.actor.name}`;\n    else return game.i18n.format(\"PF1.LevelUp.Add\", { class: this.item.name }) + ` – ${this.actor.name}`;\n  }\n\n  get isLevelUp() {\n    return this.item.system.level > 0;\n  }\n\n  get isNewClass() {\n    return !this.isLevelUp;\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {Item} item - Class item\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null|undefined>} - Updated class item if updated or null if process was cancelled. Undefined if this re-opened existing dialog.\n   */\n  static async increaseLevel(actor, item, { token } = {}) {\n    const app = Object.values(actor.apps).find((o) => o instanceof LevelUpForm && o._element && o.item === item);\n\n    if (app) app.render(true, { focus: true });\n    else return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {object} itemData - Class item data\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item | null>}\n   */\n  static async addClassWizard(actor, itemData, { token } = {}) {\n    // Add class item\n    const item = new Item.implementation(itemData, { parent: actor });\n    // Alter initial data\n    item.updateSource({ system: { hp: 0, level: 0 } });\n    item.reset();\n\n    // Add level up form for new class\n    return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  _prepareAssociations() {\n    if (this.config.associations) return;\n\n    const newLevel = this.config.level.new;\n\n    const assocs =\n      this.item.system.links?.classAssociations\n        ?.filter((a) => a.level === newLevel)\n        ?.map((a) => ({ ...fromUuidSync(a.uuid || \"\"), uuid: a.uuid })) ?? [];\n\n    this.config.associations = assocs;\n  }\n\n  async getData() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpOptions = hpConfig.getClassHD(this.item);\n\n    const itemData = this.item.toObject();\n\n    const fcb = this.config.fcb;\n    fcb.hp = itemData.system.fc?.hp?.value || 0;\n    fcb.skill = itemData.system.fc?.skill?.value || 0;\n    fcb.alt = itemData.system.fc?.alt?.value || 0;\n\n    const result = {\n      ...this.config,\n      item: itemData,\n      document: this.item,\n      actor: this.actor,\n      config: pf1.config,\n      labels: {\n        fcb: {\n          skill: \"PF1.LevelUp.FC.Skill.Label\",\n          hp: \"PF1.LevelUp.FC.HP.Label\",\n          none: \"PF1.LevelUp.FC.None.Label\",\n          alt: \"PF1.LevelUp.FC.Alt.Label\",\n        },\n      },\n      fcb,\n      abilityScore: this.config.abilityScore,\n      icons: this.constructor.ICONS,\n      visibilityOptions: pf1.const.messageVisibility,\n      useBackgroundSkills: this.useBackgroundSkills,\n    };\n\n    // Disallow self roll for non-GMs.\n    if (!game.user.isGM) delete result.visibilityOptions.selfroll;\n\n    result.health.rate = Math.round(hpOptions.rate * 100);\n\n    const hd = this.config.level.hd.total;\n    const tier = this.config.level.tier.total;\n\n    result.abilityScore.new = 0;\n    if (this.config.isMythic) {\n      result.abilityScore.new = pf1.config.tierAbilityScores[tier] ?? 0;\n    } else {\n      result.abilityScore.new = pf1.config.levelAbilityScores[hd] ?? 0;\n    }\n\n    result.health.value = result.health.delta;\n    switch (result.health.type) {\n      case \"manual\":\n        result.health.value += result.health.raw;\n        break;\n      case \"auto\":\n        result.health.value = result.health.raw;\n        break;\n      case \"roll\":\n        result.health.value = result.health.raw;\n        break;\n    }\n\n    result.skills.delta.ranks = result.skills.delta.adv;\n\n    // Apply FCB\n    result.health.bonus = 0;\n    switch (result.fcb.choice) {\n      case \"hp\":\n        result.health.value += 1;\n        result.health.bonus += 1;\n        break;\n      case \"skill\":\n        result.skills.delta.ranks += 1;\n        break;\n    }\n\n    // Apply abl mod\n    //result.health.value += result.health.ability.mod;\n\n    // Next ability score\n    result.abilityScore.next = this._getNextAbilityScoreLandmark();\n\n    result.ready = this.isReady();\n\n    return result;\n  }\n\n  /**\n   * Determine if this level-up is finalized.\n   *\n   * @returns {boolean}\n   */\n  isReady() {\n    if (!this.config.health.type) return false;\n    return this.config.abilityScore.available == 0;\n  }\n\n  /**\n   * Get level at which next ability score is gained.\n   *\n   * @internal\n   * @returns {number|null}\n   */\n  _getNextAbilityScoreLandmark() {\n    // Progression table\n    const table = this.config.isMythic ? pf1.config.tierAbilityScores : pf1.config.levelAbilityScores;\n\n    // HD or tier\n    const hdt = this.config.isMythic ? this.config.level.tier.total : this.config.level.hd.total;\n\n    const current = table[hdt] ?? 0;\n    if (current > 0) return null;\n\n    // Next ability score\n    const gains = Object.entries(table)\n      .map(([level, gained]) => Number(level))\n      .filter((level) => level > hdt);\n\n    return gains[0] ?? null;\n  }\n\n  /**\n   * Default health selection if auto health is not used.\n   *\n   * @internal\n   * @returns {string}\n   */\n  _getDefaultHealthOption() {\n    if (this.item.subType === \"mythic\") return \"static\";\n    if (this.config.health.auto) return \"auto\";\n    if (this.config.health.maximized) return \"max\";\n    return \"roll\";\n  }\n\n  /**\n   * Default hit points.\n   *\n   * @internal\n   * @returns {number}\n   */\n  _getDefaultHitPoints() {\n    return Math.ceil(1 + (this.item.system.hd - 1) / 2);\n  }\n\n  _prepareHealthData() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConfig.getClassHD(this.item);\n    const { auto, rate } = clsConf;\n\n    this.config.health.auto = auto;\n    this.config.health.manual ??= this._getDefaultHitPoints();\n    this.config.health.hitDie = this.item.system.hd || 8;\n\n    let delta = 0;\n    if (this.config.isMythic) {\n      delta = this.item.system.hd;\n    }\n    // Calculate auto health\n    else if (auto) {\n      const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[hpConfig.rounding];\n      const dieHealth = 1 + (this.item.system.hd - 1) * rate;\n      // Continuous\n      if (hpConfig.continuous) {\n        const { new: newHD, old: oldHD } = this.config.level.hd;\n        const newHP = newHD + round(newHD * dieHealth);\n        const oldHP = oldHD + round(oldHD * dieHealth);\n        delta = newHP - oldHP;\n      }\n      // Discrete\n      else {\n        delta = round(dieHealth);\n      }\n    }\n    // Manual health\n    else {\n      delta += this.config.health.manual;\n    }\n\n    this.config.health.delta = delta;\n\n    // Con mod\n    const hpAbl = this.simulacra.system.attributes?.hpAbility;\n    const hpMod = this.simulacra.system.abilities[hpAbl]?.mod ?? 0;\n    this.config.health.ability = { key: hpAbl, mod: hpMod };\n  }\n\n  _initData() {\n    this._prepareAssociations();\n\n    const cfg = this.config;\n\n    cfg.fcb.available = this.isFavouredClass();\n    cfg.fcb.unavailable = !cfg.fcb.available;\n\n    // Create temporary actor to get correct values for the new level\n    if (!this.simulacra) {\n      const actorData = this.actor.toObject();\n      const id = this.item.id ?? \"MOLD000000000000\";\n      // New items don't yet exist on actor, so we add simulation of one to the simulacra\n      if (!this.item.id) {\n        const itemData = this.item.toObject();\n        itemData._id = id;\n        actorData.items.push(itemData);\n      }\n      this.simulacra = new Actor.implementation(actorData);\n      this.mold = this.simulacra.items.get(id);\n    }\n\n    // Determine differences between current and new level\n    this.oldLevel ??= this.getLevelData(cfg.level.old);\n    const newLevel = this.getLevelData(cfg.level.new);\n    this.newLevel = newLevel;\n    cfg.level.hd = {\n      new: newLevel.hd,\n      old: this.oldLevel.hd,\n      total: newLevel.totalHD,\n    };\n    cfg.level.tier = {\n      new: newLevel.mythicTier,\n      old: this.oldLevel.mythicTier,\n      total: newLevel.totalMythicTier,\n    };\n    cfg.level.feats = newLevel.feats - this.oldLevel.feats;\n    // Saves\n    const oldSaves = this.actor.system.attributes?.savingThrows;\n    if (oldSaves) {\n      const newSaves = this.simulacra.system.attributes?.savingThrows;\n      cfg.level.fort = newSaves.fort.total - oldSaves.fort.total;\n      cfg.level.ref = newSaves.ref.total - oldSaves.ref.total;\n      cfg.level.will = newSaves.will.total - oldSaves.will.total;\n    }\n    cfg.level.bab = this.simulacra.system.attributes?.bab?.total - this.actor.system.attributes?.bab?.total;\n\n    cfg.health.raw = newLevel.hp - this.oldLevel.hp;\n\n    cfg.skills = {\n      new: newLevel.skills,\n      old: this.oldLevel.skills,\n    };\n\n    cfg.skills.delta = {\n      adv: cfg.skills.new.value - cfg.skills.old.value,\n      bg: cfg.skills.new.bg - cfg.skills.old.bg,\n    };\n    cfg.level.skills = cfg.skills.delta.adv + cfg.skills.delta.bg;\n\n    this._prepareHealthData();\n  }\n\n  getLevelData(level) {\n    const tempActor = this.simulacra;\n    const cls = this.mold;\n    cls.updateSource({ \"system.level\": level });\n    tempActor.reset();\n\n    let rollData = {};\n\n    const isMindless = tempActor.system.abilities?.int?.value === null;\n\n    // Rank counting\n    let advSkillRanks = 0;\n    let bgSkillRanks = 0;\n\n    const intMod = !isMindless ? (tempActor.system.abilities?.int?.mod ?? 0) : 0;\n\n    tempActor.itemTypes.class\n      .filter((cls) => cls.subType !== \"mythic\")\n      .forEach((cls) => {\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        if (perLevel > 0) advSkillRanks += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (this.useBackgroundSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) bgSkillRanks += bgranks;\n        }\n      });\n\n    if (tempActor.system.details?.bonusSkillRankFormula) {\n      rollData = tempActor.getRollData();\n      const roll = Roll.defaultImplementation.safeRollSync(tempActor.system.details.bonusSkillRankFormula, rollData);\n      if (roll.err) console.error(`An error occurred in the Bonus Skill Rank formula of actor ${tempActor.name}.`);\n      advSkillRanks += roll.total || 0;\n    }\n\n    advSkillRanks += tempActor.system.details?.skills?.bonus || 0;\n\n    const feats = tempActor.getFeatCount().max;\n\n    return {\n      skills: { value: advSkillRanks, bg: bgSkillRanks },\n      feats,\n      hd: cls.hitDice,\n      totalHD: tempActor.system.attributes.hd.total,\n      mythicTier: cls.mythicTier,\n      totalMythicTier: tempActor.system.details.mythicTier,\n      hp: tempActor.system.attributes.hp.max,\n      bab: cls.system.babBase,\n      fort: cls.system.savingThrows?.fort?.base || 0,\n      ref: cls.system.savingThrows?.ref?.base || 0,\n      will: cls.system.savingThrows?.will?.base || 0,\n    };\n  }\n\n  /**\n   * @returns {boolean} Whether this form's associated class is a favoured class.\n   * @todo Add better logic for determining this <26-01-22, Furyspark>\n   */\n  isFavouredClass() {\n    return pf1.config.favoredClassTypes.includes(this.item.subType);\n  }\n\n  async _updateObject(event, formData) {\n    const mhp = this.config.health.manual;\n\n    foundry.utils.mergeObject(this.config, foundry.utils.expandObject(formData));\n\n    if (mhp !== this.config.health.manual) {\n      this._prepareHealthData();\n      // Assume adjusting manual health means user wants to use it\n      this.config.health.type = \"manual\";\n    }\n\n    return this.render();\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-scores .ability-score .operator\").on(\"click\", this._onClickAbilityScoreOperator.bind(this));\n\n    // Allow opening class association items for inspection\n    html.find(\".item-list .item\").on(\"click\", this._openItemSheet.bind(this));\n\n    // Save button\n    html.find('button[data-action=\"commit\"]').on(\"click\", this._onCommit.bind(this));\n\n    // Manual/raw button\n    html.find('button[data-action=\"skip\"]').on(\"click\", this._onSkip.bind(this));\n  }\n\n  async _openItemSheet(event) {\n    const el = event.currentTarget;\n    const uuid = el.dataset.itemUuid;\n    const item = await fromUuid(uuid);\n    item.sheet.render(true, { focus: true });\n  }\n\n  _onClickAbilityScoreOperator(event) {\n    event.preventDefault();\n\n    const a = event.currentTarget;\n    const operator = a.dataset.operator;\n    const ablKey = a.closest(\".ability-score\").dataset.key;\n\n    // Determine how to adjust ability score\n    const add = this._adjustAbilityScore(ablKey, operator);\n    // Determine by how much\n    const value = this._adjustAbilityScoreValue(ablKey, add);\n\n    const abls = this.config.abilityScore;\n    const upgrades = abls.upgrades[ablKey];\n\n    const cost = this._adjustAbilityScoreCost(ablKey, value);\n\n    upgrades.value += value;\n    upgrades.added += cost;\n    abls.used += cost;\n\n    this.simulacra.updateSource({ system: { abilities: { [ablKey]: { value: upgrades.value } } } });\n\n    // Cross-pollinate new data\n    foundry.utils.mergeObject(upgrades, this.simulacra.system.abilities[ablKey]);\n    this._initData();\n\n    this.render();\n  }\n\n  /**\n   * @internal\n   * @param {string} key - Ability score key\n   * @param {string} op - Operator clicked\n   * @returns {-1|0|1} - Direction of adjustment\n   */\n  _adjustAbilityScore(key, op = null) {\n    switch (op) {\n      case \"add\":\n        return 1;\n      default:\n        return 0;\n      case \"subtract\":\n        return -1;\n    }\n  }\n\n  /**\n   * Determine actual ability score adjustment value.\n   *\n   * By default 1 for normal level-ups, 2 for mythic tiers.\n   *\n   * Uses {@link pf1.config.levelAbilityScoreMult} and {@link pf1.config.tierAbilityScoreMult} as multipliers.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreValue(key, value) {\n    return value * (this.config.isMythic ? pf1.config.tierAbilityScoreMult : pf1.config.levelAbilityScoreMult);\n  }\n\n  /**\n   * Return cost of the adjustment.\n   *\n   * For homebrew support.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreCost(key, value) {\n    return value;\n  }\n\n  _initChoices() {\n    this._initFCBChoices();\n    this._initHPChoices();\n  }\n\n  _initFCBChoices() {\n    if (!this.config.fcb.available) return;\n\n    // Pre-select highest FCB\n    const { hp, skill, alt } = this.item.system.fc;\n    const fcb = [\n      { id: \"hp\", value: hp?.value || 0 },\n      { id: \"skill\", value: skill?.value || 0 },\n      { id: \"alt\", value: alt?.value || 0 },\n    ].sort((a, b) => b.value - a.value);\n\n    const highest = fcb[0];\n    if (highest.value > 0) this.config.fcb.choice = highest.id;\n  }\n\n  _initHPChoices() {\n    this.config.health.type = this._getDefaultHealthOption();\n\n    if (this.config.isMythic) return;\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConfig.getClassHD(this.item);\n\n    if (clsConf.maximized) {\n      const maxHDlimit = hpConfig.maximized;\n\n      const maximized = this.actor.itemTypes.class.reduce((maximized, cls) => {\n        if (!hpConfig.getClassHD(this.item).maximized) return maximized;\n        return maximized + cls.hitDice;\n      }, 0);\n\n      const maxLeft = hpConfig.maximized - maximized;\n      this.config.health.maximized = Math.max(0, maxLeft);\n\n      // Maximize auto health, too.\n      if (maxLeft > 0) {\n        this.config.health.delta = this.config.health.hitDie;\n        this.config.health.type = \"max\";\n      }\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async close(options) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Get effective health roll formula.\n   *\n   * @internal\n   * @param {string} type\n   * @returns {string}\n   */\n  _getHealthFormula(type) {\n    const dieSize = this.item.system.hd;\n    switch (type) {\n      case \"static\":\n        return `${dieSize}`;\n      default:\n        return `1d${dieSize}`;\n    }\n  }\n\n  /**\n   * Spoof roll, for maximized, auto and manual health.\n   *\n   * @internal\n   * @param {Roll} roll\n   * @param {number} value\n   * @returns {Roll}\n   */\n  _spoofHealthRoll(roll, value) {\n    const data = roll.toJSON();\n    data.total = value;\n    data.terms[0].results[0].result = value;\n    return Roll.defaultImplementation.fromData(data);\n  }\n\n  /**\n   * Generate roll instance for the health gain.\n   *\n   * @internal\n   * @param {string} type\n   * @param {string} formula\n   * @returns {Promise<pf1.dice.RollPF>}\n   */\n  async _getHealthRoll(type, formula) {\n    const roll = await Roll.defaultImplementation.safeRoll(formula);\n    switch (type) {\n      case \"auto\":\n      case \"max\":\n        return this._spoofHealthRoll(roll, this.config.health.delta);\n      case \"manual\":\n        return this._spoofHealthRoll(roll, this.config.health.manual);\n      default:\n        return roll;\n    }\n  }\n\n  /**\n   * Commit level-up\n   *\n   * @internal\n   * @param {Event} event\n   */\n  async _onCommit(event) {\n    this._disableSheet();\n\n    const cfg = this.config;\n    const itemData = this.item.toObject().system;\n    const updateData = {};\n\n    const newLevel = itemData.level + 1;\n    const cardData = {\n      isMythic: this.config.isMythic,\n      level: {\n        previous: itemData.level,\n        new: newLevel,\n      },\n      newFeatures: this.config.associations,\n      hp: {},\n    };\n\n    const formula = this._getHealthFormula(cfg.health.type);\n    const roll = await this._getHealthRoll(cfg.health.type, formula);\n\n    const labels = {\n      manual: \"PF1.LevelUp.Chat.Health.Manual\",\n      roll: \"PF1.LevelUp.Chat.Health.Roll\",\n      max: \"PF1.LevelUp.Chat.Health.Auto\",\n      auto: \"PF1.LevelUp.Chat.Health.Auto\",\n      static: \"PF1.LevelUp.Chat.Health.Static\",\n    };\n\n    cardData.hp = {\n      label: labels[cfg.health.type],\n      roll,\n      add: roll.toAnchor({ classes: [\"inline-dsn-hidden\"] }).outerHTML,\n    };\n\n    const hpValue = roll.total || 0;\n    updateData.hp = (itemData.hp || 0) + hpValue;\n\n    // Apply FCB\n    if (cfg.fcb.choice in itemData.fc) {\n      const key = cfg.fcb.choice;\n      const value = itemData.fc?.[key]?.value ?? 0;\n      foundry.utils.setProperty(updateData, `fc.${key}.value`, value + 1);\n\n      const fcKey = { hp: \"HP\", skill: \"Skill\", alt: \"Alt\" }[key];\n      cardData.fc = { type: key, label: `PF1.FavouredClassBonus.${fcKey}` };\n    }\n\n    // Gather information\n    const oldFeatCount = this.actor.getFeatCount();\n\n    const itemUpdates = [],\n      newItems = [];\n\n    // Apply ability score changes\n    const ablUpdate = this._updateAbilityScore();\n    if (ablUpdate) {\n      if (ablUpdate.update) itemUpdates.push(ablUpdate.itemData);\n      else newItems.push(ablUpdate.itemData);\n\n      cardData.ability = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n        if (added == 0) return rv;\n        rv[key] = added;\n        return rv;\n      }, {});\n    }\n\n    updateData.level = newLevel;\n    let cls = this.item;\n    // Update existing class item\n    if (cls.actor && cls.id) {\n      itemUpdates.unshift({ system: updateData, _id: cls.id });\n    }\n    // Create new class item\n    else {\n      cls.updateSource({ system: updateData });\n      newItems.unshift(cls.toObject());\n    }\n\n    // Add items\n    if (newItems.length) {\n      await this.actor.createEmbeddedDocuments(\"Item\", newItems, { render: itemUpdates.length == 0 });\n    }\n\n    if (itemUpdates.length) {\n      const newItems = await this.actor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n      cls = newItems.find((i) => i.type === \"class\");\n      if (cls) this.item = cls;\n    }\n\n    // Prepare remaining chat card info\n\n    // Add extra info (new feats, skill ranks, etc.)\n    const ex = {};\n    cardData.extra = ex;\n\n    // Show new feat count\n    const featCount = this.actor.getFeatCount();\n    featCount.new = Math.max(0, featCount.max - oldFeatCount.max);\n    ex.feats = featCount;\n    ex.enabled = featCount.new > 0;\n\n    // Create chat message\n    await this.createChatMessage(cardData);\n\n    // Resolve promise and close interface\n    this.resolve?.(cls);\n    this.close();\n  }\n\n  async _onSkip(event) {\n    event.preventDefault();\n\n    this._disableSheet();\n\n    const updateData = { system: { level: this.config.level.new } };\n\n    let cls = this.item;\n\n    // Old class\n    if (cls.id && cls.actor === this.actor) {\n      await cls.update(updateData);\n    }\n    // New class item\n    else {\n      cls.updateSource(updateData);\n      cls = await Item.implementation.create(cls.toObject(), { parent: this.actor });\n    }\n\n    // Open class sheet for manual adjustment\n    cls.sheet.render(true, { focus: true });\n\n    this.resolve?.(null);\n    this.close();\n  }\n\n  // Disable all buttons and inputs and set progress indicator\n  _disableSheet() {\n    const html = this.element[0];\n    const form = html.querySelector(\"form\");\n    form.style.cursor = \"progress\";\n    form.querySelectorAll(\"button,input,select\").forEach((button) => {\n      button.disabled = true;\n      button.style.cursor = \"progress\";\n    });\n  }\n\n  _updateAbilityScore() {\n    // No ability score upgrades this level\n    if (!this.config.abilityScore.upgrades) return;\n\n    const choices = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n      if (added == 0) return rv;\n      rv[key] = added;\n      return rv;\n    }, {});\n\n    if (Object.keys(choices).length === 0) return;\n\n    const result = { choices };\n\n    const item = this.actor.itemTypes.feat.find((o) => o.getFlag(\"pf1\", \"levelUp\") === true);\n\n    // Add level up ability score feature if it doesn't exist yet\n    if (!item) {\n      let itemData = pf1.config.levelAbilityScoreFeature;\n      itemData = foundry.utils.mergeObject(\n        itemData,\n        {\n          system: {\n            changes: Object.entries(choices).reduce((cur, [target, formula]) => {\n              const change = new pf1.components.ItemChange({\n                target,\n                formula: `${formula}`,\n                type: \"untypedPerm\",\n              }).toObject();\n\n              cur.push(change);\n              return cur;\n            }, []),\n          },\n          flags: {\n            pf1: {\n              levelUp: true,\n            },\n          },\n        },\n        { inplace: false }\n      );\n\n      return { itemData, update: false };\n    }\n    // If a level up ability score feature already exists, update it\n    else {\n      const changes = item.toObject().system.changes ?? [];\n      for (const [target, formula] of Object.entries(choices)) {\n        const change = changes.find((o) => o.target === target);\n\n        // Update previous change\n        if (change) {\n          const prevValue = parseInt(change.formula);\n          if (!Number.isNaN(prevValue)) {\n            const newValue = prevValue + formula;\n            change.formula = `${newValue}`;\n            continue;\n          }\n        }\n\n        // Add new change\n        changes.push(\n          new pf1.components.ItemChange({\n            target,\n            formula: `${formula}`,\n            type: \"untypedPerm\",\n          }).toObject()\n        );\n      }\n\n      return { itemData: { \"system.changes\": changes, _id: item.id }, update: true };\n    }\n  }\n\n  async createChatMessage(cardData) {\n    const templateData = {\n      ...cardData,\n      config: pf1.config,\n      item: this.item,\n      actor: this.actor,\n    };\n\n    const rolls = cardData.hp?.roll ? [cardData.hp.roll] : [];\n\n    const messageData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/level-up.hbs\", templateData),\n      style: CONST.CHAT_MESSAGE_STYLES.OOC,\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this.actor, token: this.token }),\n      rolls,\n      system: {\n        subject: { class: \"levelUp\" },\n      },\n    };\n\n    let rollMode = this.config.visibility || game.settings.get(\"core\", \"rollMode\");\n    // Prevent self message from non-GMs.\n    if (!game.user.isGM && rollMode === CONST.DICE_ROLL_MODES.SELF) rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    ChatMessage.implementation.applyRollMode(messageData, rollMode); // rollMode here sometimes has no effect?\n    return ChatMessage.create(messageData, { rollMode }); // rollMode here has no effect?\n  }\n}\n","export class CurrencyTransfer extends FormApplication {\n  constructor(\n    source = { actor: null, container: null, amount: {}, alt: false },\n    dest = { actor: null, container: null, amount: {}, alt: false },\n    options = {}\n  ) {\n    super(options);\n\n    if (source.actor) {\n      if (typeof source.actor === \"string\") source.actor = game.actors.get(source.actor);\n      if (source.actor.type == \"npc\") source.alt = false;\n    }\n    if (source.container) {\n      source.alt = false;\n      if (typeof source.container === \"string\")\n        source.container = source.actor ? source.actor.items.get(source.container) : game.items.get(source.container);\n    }\n    if (dest.actor) {\n      if (typeof dest.actor === \"string\") dest.actor = game.actors.get(dest.actor);\n      if (dest.actor.type == \"npc\") dest.alt = false;\n      else if (dest.actor === source.actor && !source.container && !dest.container) dest.alt = !source.alt;\n    }\n    if (dest.container) {\n      if (typeof dest.container === \"string\")\n        dest.container = dest.actor ? dest.actor.items.get(dest.container) : game.items.get(dest.container);\n    }\n\n    // Currency checks\n    if (source.container) {\n      source.amount = foundry.utils.mergeObject(source.container.system.currency, source.amount ?? {});\n    } else if (source.actor) {\n      source.amount = foundry.utils.mergeObject(\n        source.alt ? source.actor.system.altCurrency : source.actor.system.currency,\n        source.amount ?? {}\n      );\n    } else if (game.user.isGM) {\n      source.amount = foundry.utils.mergeObject({ pp: \"∞\", gp: \"∞\", sp: \"∞\", cp: \"∞\" }, source.amount ?? {});\n    } else {\n      ui.notification.warning(\"Cannot use Infinite currency transfer as non-gm.\");\n      return undefined;\n    }\n\n    if (!dest.actor && !dest.container) return undefined;\n\n    this.source = source;\n    this.dest = dest;\n  }\n\n  get title() {\n    let title;\n    if (!this.source.actor) {\n      if (this.source.container) title = this.source.container.name + \" \";\n      else title = \"∞ \";\n    } else {\n      title = this.source.actor.name + \" \";\n      if (this.source.container) title += `(${this.source.container.name}) `;\n    }\n    title += \"➤ \";\n    if (this.source.actor == this.dest.actor && (this.source.alt || this.dest.alt))\n      title += this.dest.alt ? game.i18n.localize(\"PF1.Currency.Weightless\") : game.i18n.localize(\"PF1.Currency.Label\");\n    else {\n      if (!this.dest.actor) title += this.dest.container.name;\n      else {\n        title += this.dest.actor.name;\n        if (this.dest.container) title += ` (${this.dest.container.name})`;\n      }\n    }\n    return title;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"currency-transfer\"],\n      template: \"systems/pf1/templates/apps/currency-transfer.hbs\",\n      width: 380,\n      height: 235,\n    });\n  }\n\n  /**\n   * Order of coin types, descending in value\n   *\n   * @type {CoinType[]}\n   */\n  static get order() {\n    return [\"pp\", \"gp\", \"sp\", \"cp\"]; // Object conversion ordering cannot be trusted in js\n  }\n\n  activateListeners(html) {\n    html.find(\"button.cur-range\").click(this._curRange.bind(this));\n\n    html.find(\"input\").on(\"input\", this._calcTotal.bind(this));\n    $(html.find(\"input\")[0]).trigger(\"input\");\n  }\n\n  _updateObject(event, formData) {\n    this.dest.amount = {\n      pp: formData.pp ?? 0,\n      gp: formData.gp ?? 0,\n      sp: formData.sp ?? 0,\n      cp: formData.cp ?? 0,\n    };\n    this.constructor.transfer(\n      this.source.container ? this.source.container : this.source.actor,\n      this.dest.container ? this.dest.container : this.dest.actor,\n      this.dest.amount,\n      this.source.alt,\n      this.dest.alt,\n      2\n    );\n  }\n\n  getData(_options = {}) {\n    return {\n      source: this.source,\n      dest: this.dest,\n      options: this.options,\n      title: this.title,\n      total:\n        this.source.amount.gp === \"∞\"\n          ? \"∞\"\n          : this.constructor.order.reduce((acc, c, idx) => acc + this.source.amount[c] * 10 ** (1 - idx), 0),\n    };\n  }\n\n  _curRange(ev) {\n    ev.preventDefault();\n    const button = ev.target.closest(\"button\");\n    const formField = button.closest(\".form-fields\");\n    const min = button.classList.contains(\"down\");\n    const input = formField.querySelector(\"input\");\n\n    if (min) input.value = \"\";\n    else input.value = formField.querySelector(\"span\").textContent;\n    $(input).trigger(\"input\");\n  }\n\n  _calcTotal(ev) {\n    const form = ev.target.closest(\".currency-transfer\");\n    const amounts = Object.fromEntries(\n      [...form.querySelectorAll(\"input\")].map((o) => [o.name, parseInt(o.value || 0)])\n    );\n    const value = this.constructor.order.reduce((acc, c, idx) => acc + amounts[c] * 10 ** (1 - idx), 0);\n\n    form.querySelector(\".currency-total .form-fields label\").textContent = Math.round(value * 100) / 100 + \" gp\";\n  }\n\n  static _failed(i18nKey) {\n    return void ui.notifications.error(\n      game.i18n.localize(\"PF1.Application.CurrencyTransfer.Failed\") + game.i18n.localize(i18nKey)\n    );\n  }\n\n  static async _directoryDrop(docDestId, event) {\n    event.preventDefault();\n\n    // try to extract the data\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"Currency\") return;\n\n    const elem = event.currentTarget;\n    const tab = elem.closest(\"[data-tab]\").dataset.tab;\n\n    let destDoc;\n    if (tab === \"items\") destDoc = game.items.get(docDestId);\n    else if (tab === \"actors\") destDoc = game.actors.get(docDestId);\n    if (!destDoc) throw new Error(\"Could not find target actor or item!\");\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    if (data.currency && sourceActor) {\n      return new CurrencyTransfer(\n        { actor: sourceActor, container: data.containerId, alt: data.alt },\n        {\n          actor: destDoc?.actor ?? destDoc,\n          container: destDoc.system.type === \"container\" ? destDoc.id : null,\n          amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n        }\n      ).render(true);\n    }\n  }\n\n  /**\n   * Transfer an amount of currency to a valid document\n   *\n   * @param {Document} sourceDoc ActorPF or ItemPF with currency\n   * @param {Document} destDoc ActorPF or ItemPF with currency\n   * @param {object|number} amount currency object containing transferred amount. Undefined keys will be assumed to be zero. Providing just a number will assume just gold\n   * @param {boolean} sourceAlt Use alt currency on source\n   * @param {boolean} destAlt Use alt currency on destination\n   * @param {number} [allowConversion=false] Attempts to make change with sourceDoc's currency limit\n   * @returns {Promise<boolean|object>} false if failed, object containing amount transferred on success\n   */\n  static async transfer(sourceDoc, destDoc, amount, sourceAlt = false, destAlt = false, allowConversion = false) {\n    if ((!sourceDoc && !game.user.isGM) || !destDoc || !amount) return false;\n\n    if (typeof amount !== \"object\") amount = { gp: parseInt(amount) };\n\n    this.order.forEach((c) => (amount[c] = amount[c] ?? 0));\n    if (!Object.values(amount).find((a) => a > 0))\n      return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    let sourceCurrency = foundry.utils.deepClone(\n      sourceAlt ? sourceDoc?.system.altCurrency : sourceDoc?.system.currency\n    );\n    const destCurrency = foundry.utils.deepClone(destAlt ? destDoc.system.altCurrency : destDoc.system.currency);\n    if ((!sourceCurrency && !game.user.isGM) || !destCurrency) return false;\n    const originalSource = Object.assign(Object.fromEntries(this.order.map((o) => [o, Infinity])), sourceCurrency);\n\n    const totalAmount = this.order.reduce((acc, c, idx) => acc + amount[c] * 10 ** (1 - idx), 0);\n    const totalSource = this.order.reduce((acc, c, idx) => acc + sourceCurrency[c] * 10 ** (1 - idx), 0);\n\n    if (totalAmount > totalSource) return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    if (sourceCurrency) {\n      this.order.some((a) => {\n        const newSource = sourceCurrency[a] - amount[a];\n\n        if (newSource < 0 && allowConversion) {\n          amount = this.convert(originalSource, totalAmount, allowConversion);\n          sourceCurrency = Object.fromEntries(this.order.map((o) => [o, originalSource[o] - amount[o]]));\n          return true;\n        } else sourceCurrency[a] = newSource;\n      });\n    }\n\n    if (!amount || Object.values(sourceCurrency).find((c) => c < 0)) return false;\n\n    if (!sourceDoc.isOwner || !destDoc.isOwner) {\n      if (!game.users.find((o) => o.active && o.isGM))\n        return this._failed(\"PF1.Application.CurrencyTransfer.GMRequired\"), false;\n\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"currencyTransfer\",\n        data: {\n          sourceActor: sourceDoc.actor?.uuid ?? sourceDoc.uuid,\n          destActor: destDoc.actor?.uuid ?? destDoc.uuid,\n          sourceContainer: sourceDoc.type === \"container\" ? sourceDoc.id : \"\",\n          destContainer: destDoc.type === \"container\" ? destDoc.id : \"\",\n          sourceAlt,\n          destAlt,\n          amount,\n        },\n      });\n      return amount;\n    }\n\n    this.order.forEach((c) => (destCurrency[c] += amount[c]));\n    if (sourceDoc === destDoc)\n      return sourceDoc.update({\n        \"system.altCurrency\": sourceAlt ? sourceCurrency : destCurrency,\n        \"system.currency\": destAlt ? sourceCurrency : destCurrency,\n      });\n    if (sourceAlt) sourceDoc.update({ \"system.altCurrency\": sourceCurrency });\n    else sourceDoc.update({ \"system.currency\": sourceCurrency });\n    if (destAlt) destDoc.update({ \"system.altCurrency\": destCurrency });\n    else destDoc.update({ \"system.currency\": destCurrency });\n    return amount;\n  }\n\n  /**\n   * Convert totalAmount to a currency object containing\n   *\n   * @param {object} limit currency object containing max number of coins. Falsey values will assume infinity\n   * @param {number|object} totalAmount currency as gold pieces. If provided as a currency object, will convert to gold\n   * @returns {boolean|object} false if failed, currency object containing new amounts on conversion success\n   */\n  static convert(limit, totalAmount) {\n    if (!limit) limit = Object.fromEntries(this.order.map((o) => [o, Infinity]));\n    else limit = Object.assign({}, limit);\n    if (typeof totalAmount !== \"number\")\n      totalAmount = this.order.reduce((acc, cur, idx) => acc + totalAmount?.[cur] * 10 ** (1 - idx));\n    if (!totalAmount) return false;\n    const amount = {};\n    totalAmount =\n      this.order.reduce((acc, cur, idx) => {\n        const minRequired = Math.min(limit[cur], Math.floor((acc % 10000) / 10 ** (3 - idx))), //Start from left to allow clumping\n          inCopper = minRequired * 10 ** (3 - idx);\n        amount[cur] = minRequired;\n        limit[cur] -= minRequired;\n        return acc - inCopper;\n      }, totalAmount * 100) / 100; //Operate in copper pieces to avoid floating point errors\n    if (totalAmount < 0) return false;\n    return amount;\n  }\n}\n","/**\n * @typedef {typeof templatePaths[number]} CachedTemplatePath\n * A path to a template that has been cached as part of the partial preloading process.\n */\n\n/**\n * A list of template paths to pre-load\n *\n * @private\n */\nconst templatePaths = /** @type {const} */ ([\n  // Actor Sheet Partials\n  \"systems/pf1/templates/actors/parts/actor-summary.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-level.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-traits.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-inventory.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-nav-filters.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-features.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-combat.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-defenses_tables.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-buffs.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-attributes.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings-ability-scores.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-summary.hbs\",\n\n  \"systems/pf1/templates/internal/item-search.hbs\",\n\n  \"systems/pf1/templates/internal/table_magic-items.hbs\",\n\n  // Item Sheet Partials\n  \"systems/pf1/templates/items/parts/item-actions.hbs\",\n  \"systems/pf1/templates/items/parts/item-advanced.hbs\",\n  \"systems/pf1/templates/items/parts/item-alignments.hbs\",\n  \"systems/pf1/templates/items/parts/item-ammo.hbs\",\n  \"systems/pf1/templates/items/parts/item-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-base-types.hbs\",\n  \"systems/pf1/templates/items/parts/item-changes.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-link.hbs\",\n  \"systems/pf1/templates/items/parts/item-contents.hbs\",\n  \"systems/pf1/templates/items/parts/item-description.hbs\",\n  \"systems/pf1/templates/items/parts/item-instructions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-inputs.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-links.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials-addon.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials.hbs\",\n  \"systems/pf1/templates/items/parts/item-name.hbs\",\n  \"systems/pf1/templates/items/parts/item-notes.hbs\",\n  \"systems/pf1/templates/items/parts/item-proficiencies.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-skills.hbs\",\n  \"systems/pf1/templates/items/parts/item-creature-type.hbs\",\n  \"systems/pf1/templates/items/parts/item-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-size.hbs\",\n  \"systems/pf1/templates/items/parts/item-tag.hbs\",\n  \"systems/pf1/templates/items/parts/item-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-weapon-groups.hbs\",\n  \"systems/pf1/templates/items/parts/spell-descriptors.hbs\",\n  \"systems/pf1/templates/items/parts/spell-subschool.hbs\",\n  \"systems/pf1/templates/items/parts/item-action-summary.hbs\",\n\n  \"systems/pf1/templates/internal/content-source-view.hbs\",\n\n  // Apps\n  \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n  \"systems/pf1/templates/apps/vision-sharing.hbs\",\n  \"systems/pf1/templates/apps/help-browser.hbs\",\n  \"systems/pf1/templates/apps/action-select.hbs\",\n\n  // Item Action Partials\n  \"systems/pf1/templates/apps/item-action/action.hbs\",\n  \"systems/pf1/templates/apps/item-action/activation.hbs\",\n  \"systems/pf1/templates/apps/item-action/template.hbs\",\n  \"systems/pf1/templates/apps/item-action/conditionals.hbs\",\n\n  // Compendium browser partials\n  \"systems/pf1/templates/apps/compendium-browser/entries.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/text-filter.hbs\",\n\n  // Chat\n  \"systems/pf1/templates/chat/roll-ext.hbs\",\n  \"systems/pf1/templates/chat/defenses.hbs\",\n  \"systems/pf1/templates/chat/defenses-vehicle.hbs\",\n  \"systems/pf1/templates/chat/parts/gm-description.hbs\",\n\n  // Chat card partials\n  \"systems/pf1/templates/chat/parts/attack-roll-header.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-footer.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-targets.hbs\",\n\n  \"systems/pf1/templates/chat/parts/item-notes.hbs\",\n\n  // Item description headers\n  \"systems/pf1/templates/items/headers/spell-header.hbs\",\n\n  // Internal Rendering Partials\n  \"systems/pf1/templates/internal/token-config_vision.hbs\",\n  \"systems/pf1/templates/internal/damage-type-visual.hbs\",\n\n  \"systems/pf1/templates/hud/quick-actions.hbs\",\n\n  // Level Up sections\n  \"systems/pf1/templates/apps/level-up/health.hbs\",\n  \"systems/pf1/templates/apps/level-up/ability-score.hbs\",\n  \"systems/pf1/templates/apps/level-up/fcb.hbs\",\n  \"systems/pf1/templates/apps/level-up/summary.hbs\",\n\n  // Dynamic tooltips\n  \"systems/pf1/templates/extended-tooltip.hbs\",\n]);\n\n/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n *\n * @internal\n * @private\n * @returns {Promise<void>} - A Promise resolving once the templates are loaded.\n */\nexport const preload = async () => void loadTemplates(templatePaths);\n\n/**\n * Synchronously render a cached Handlebars template using provided data.\n *\n * @internal\n * @private\n * @see {renderTemplate}\n * @param {CachedTemplatePath} path - The template identifier\n * @param {object} [data={}] - The data provided to the template\n * @returns {string} The rendered HTML\n * @throws {Error} If the requested template could not be found in the cache\n */\nexport const renderCachedTemplate = (path, data = {}) => {\n  /** @type {Handlebars.TemplateDelegate|undefined} */\n  const template = Handlebars.partials[path];\n  if (!template) throw new Error(`Template ${path} not found in cache`);\n\n  return template(data, {\n    allowProtoMethodsByDefault: true,\n    allowProtoPropertiesByDefault: true,\n    preventIndent: true,\n  });\n};\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { DamageResistanceSelector } from \"@app/damage-resistance-selector.mjs\";\nimport { ActorRestDialog } from \"./actor-rest.mjs\";\nimport { PointBuyCalculator } from \"@app/point-buy-calculator.mjs\";\nimport { Widget_ItemPicker } from \"@app/item-picker.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { LevelUpForm } from \"@app/level-up.mjs\";\nimport { CurrencyTransfer } from \"@app/currency-transfer.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/** @import {AbilityScoreData} from \"@documents/actor/actor.d.ts\" */\n\n/**\n * Extend the basic ActorSheet class to do all the PF things!\n * This sheet is an Abstract layer which is not used.\n */\nexport class ActorSheetPF extends ActorSheet {\n  /**\n   * Track the set of item filters which are applied\n   *\n   * @protected\n   * @internal\n   * @type {Record<string, Record<string, Set<string>>>}\n   */\n  _filters = {\n    sections: {},\n    search: {},\n  };\n\n  /** Item search */\n  searchCompositioning = false; // for IME\n  searchRefresh = true; // Lock out same term search unless sheet also refreshes\n  searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n  searchDelayEvent = null; // setTimeout id\n  effectiveSearch = {}; // prevent searching the same thing\n\n  /**\n   * Track item updates from the actor sheet.\n   *\n   * @internal\n   * @private\n   * @type {object[]}\n   */\n  _itemUpdates = [];\n\n  /**\n   * Track hidden elements of the sheet.\n   *\n   * @internal\n   * @private\n   * @type {Record<string, boolean>}\n   */\n  _hiddenElems = {};\n\n  /**\n   * Whether the skills are currently locked.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  _skillsLocked = true;\n\n  /**\n   * IDs of expanded items.\n   *\n   * @internal\n   * @private\n   * @type {Set<string>}\n   */\n  _expandedItems = new Set();\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"system.details.biography.value\", \"system.details.notes.value\"];\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor\"],\n      scrollY: [\n        \".combat-attacks\",\n        \".item-groups-list\",\n        \".skills-list\",\n        \".traits\",\n        \".actor-notes\",\n        \".editor-content[data-edit='system.details.biography.value']\",\n      ],\n      dragDrop: [\n        { dragSelector: \".item[data-item-id]\" },\n        { dragSelector: \".currency .denomination\" },\n        { dragSelector: \"li.skill[data-skill]\" },\n        { dragSelector: \".saving-throw[data-savingthrow]\" },\n        { dragSelector: \".attribute[data-attribute]\" },\n        { dragSelector: \".attribute[data-attack]\" },\n        { dragSelector: \"li.generic-defenses[data-drag]\" },\n        { dragSelector: \".ability-scores .ability[data-ability]\" },\n        { dragSelector: \".spellcasting-concentration[data-drag]\" },\n        { dragSelector: \".spellcasting-cl\" },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"summary\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='skillset']\",\n          contentSelector: \"section.skillset-body\",\n          initial: \"adventure\",\n          group: \"skills\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='spellbooks']\",\n          contentSelector: \"section.spellbooks-body\",\n          initial: \"primary\",\n          group: \"spellbooks\",\n        },\n      ],\n    };\n  }\n\n  get currentPrimaryTab() {\n    return this._tabs.find((t) => t.group === \"primary\")?.active || null;\n  }\n\n  get currentSpellbookKey() {\n    return this._tabs.find((t) => t.group === \"spellbooks\")?.active || \"primary\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.actor.isOwner;\n\n    const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n\n    const context = {\n      actor: this.actor,\n      document: this.actor,\n      effects: this.actor.effects,\n      options: this.options,\n      owner: isOwner,\n      itemTypes: this.actor.itemTypes,\n      limited: this.actor.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      isCharacter: this.actor.type === \"character\",\n      hasHD: true,\n      config: pf1.config,\n      isGM: game.user.isGM,\n      race: this.actor.race != null ? this.actor.race.toObject() : null,\n      usesAnySpellbook: Object.values(this.actor.system.attributes.spells.spellbooks).some((book) => book.inUse),\n      sourceData: {},\n      skillsLocked: this._skillsLocked,\n      units: {\n        weight:\n          pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n        distance: {\n          tactical: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n          overland: isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi,\n        },\n      },\n      unchainedActions: game.settings.get(\"pf1\", \"unchainedActionEconomy\"),\n      choices: {},\n    };\n\n    if (context.usesAnySpellbook) {\n      context.choices.casterProgression = Object.fromEntries(\n        Object.entries(pf1.config.caster.progression).map(([key, data]) => [key, data.label])\n      );\n      context.choices.casterPreparation = Object.fromEntries(\n        Object.entries(pf1.config.caster.type).map(([key, data]) => [key, data.label])\n      );\n    }\n\n    Object.values(context.itemTypes).forEach((items) => items.sort((a, b) => (a.sort ?? 0) - (b.sort ?? 0)));\n\n    const rollData = this.actor.getRollData();\n    context.rollData = rollData;\n    context.system = foundry.utils.deepClone(this.actor.system);\n\n    context.inCharacterGeneration = this.inCharacterGeneration;\n\n    context.hasProficiencies = context.isCharacter || game.settings.get(\"pf1\", \"npcProficiencies\");\n\n    // BAB iteratives\n    if (!context.unchainedActions) {\n      const bab = context.rollData.attributes?.bab?.total;\n      if (bab > 0) {\n        const numAttacks = 1 + RollPF.safeRollSync(pf1.config.iterativeExtraAttacks, { bab }).total || 0;\n        const iters = Array.fromRange(numAttacks).map(\n          (attackCount) => bab + RollPF.safeRollSync(pf1.config.iterativeAttackModifier, { attackCount }).total\n        );\n        context.iteratives = `+${iters.join(\" / +\")}`;\n      }\n    }\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.actor.system.currency).some((o) => o > 0);\n    context.hasAltCurrency = Object.values(this.actor.system.altCurrency).some((o) => o > 0);\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n    const bio = context.system.details?.biography?.value;\n    const pBio = bio ? pf1.utils.enrichHTMLUnrolled(bio, enrichHTMLOptions) : Promise.resolve();\n    pBio.then((html) => (context.biographyHTML = html));\n    const notes = context.system.details?.notes?.value;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pBio, pNotes]);\n\n    // The Actor and its Items\n    context.token = this.token;\n\n    context.items = this.actor.items.map((item) => this._prepareItem(item));\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    context.labels = this.actor.getLabels();\n    context.filters = this._filters;\n\n    context.labels.currency = `PF1.Currency.Inline.${pf1.config.currency.standard}`;\n\n    // Generic melee and ranged attack bonuses, only present for sheet.\n    {\n      const attributes = context.system.attributes,\n        /** @type {Record<string, AbilityScoreData>} */\n        abilities = context.system.abilities,\n        sizeModifier = Object.values(pf1.config.sizeMods)[context.system.traits.size.value],\n        baseBonus = attributes.attack.shared + attributes.attack.general + sizeModifier,\n        meleeAbility = abilities[attributes.attack.meleeAbility]?.mod ?? 0,\n        rangedAbility = abilities[attributes.attack.rangedAbility]?.mod ?? 0;\n\n      context.genericAttacks = {\n        melee: {\n          ability: attributes.attack.meleeAbility,\n          abilityMod: meleeAbility,\n          modifier: baseBonus + attributes.attack.melee + meleeAbility,\n        },\n        ranged: {\n          ability: attributes.attack.rangedAbility,\n          abilityMod: rangedAbility,\n          modifier: baseBonus + attributes.attack.ranged + rangedAbility,\n        },\n      };\n    }\n\n    // Add inventory value\n    {\n      const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true });\n      const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n      context.labels.totalValue = game.i18n.format(\"PF1.TotalItemValue\", totalValue);\n    }\n\n    // Ability Scores\n    for (const [a, abl] of Object.entries(context.system.abilities)) {\n      abl.label = pf1.config.abilities[a];\n      abl.enabled = abl.value !== null;\n      abl.totalLabel = abl.enabled ? abl.total : \"—\";\n    }\n\n    // Armor Class\n    for (const [a, ac] of Object.entries(context.system.attributes.ac)) {\n      ac.label = pf1.config.ac[a];\n    }\n\n    // Saving Throws\n    for (const [a, savingThrow] of Object.entries(context.system.attributes.savingThrows)) {\n      savingThrow.label = pf1.config.savingThrows[a];\n    }\n\n    // Update skill labels\n    for (const [skillId, skill] of Object.entries(context.system.skills ?? {})) {\n      skill.key = skillId;\n      skill.path = skillId;\n      skill.skillId = skillId;\n      skill.label = pf1.config.skills[skillId] || skill.name;\n      skill.arbitrary = pf1.config.arbitrarySkills.includes(skillId);\n      skill.compendiumEntry = pf1.config.skillCompendiumEntries[skillId] || skill.journal || null;\n      skill.untrained = skill.rt === true && !(skill.rank > 0);\n\n      if (skill.subSkills != null) {\n        for (const [subSkillId, subSkill] of Object.entries(skill.subSkills)) {\n          subSkill.key = `${skillId}.${subSkillId}`;\n          subSkill.path = `${skillId}.subSkills.${subSkillId}`;\n          subSkill.skillId = skillId;\n          subSkill.subSkillId = subSkillId;\n          subSkill.label ||= subSkill.name;\n          subSkill.compendiumEntry = subSkill.journal || null;\n          subSkill.untrained = subSkill.rt === true && !(subSkill.rank > 0);\n          subSkill.custom = true; // All subskills are custom\n        }\n      }\n    }\n\n    // Feat count\n    {\n      // Feat count\n      const feats = this.actor.getFeatCount();\n      // Additional values\n      feats.bonus = feats.formula + feats.changes;\n      feats.issues = 0;\n      if (feats.missing > 0 || feats.excess) feats.issues += 1;\n      if (feats.disabled > 0) feats.issues += 1;\n      context.featCount = feats;\n    }\n\n    // Update traits\n    this._prepareTraits(context.system.traits);\n    context.labels.senses = this._prepareSenseLabels();\n    context.dr = this.actor.parseResistances(\"dr\");\n    context.eres = this.actor.parseResistances(\"eres\");\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Prepare skillsets\n    this._prepareSkillsets(context);\n\n    this._prepareSkills(context);\n\n    // Fetch the game settings relevant to sheet rendering.\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    context.healthConfig = hpConfig.getActorConfig(this.actor);\n    context.useWoundsAndVigor = context.healthConfig.rules.useWoundsAndVigor;\n\n    // Determine hidden elements\n    this._prepareHiddenElements();\n    context.hiddenElems = this._hiddenElems;\n\n    // Create a table of magic items, only for GM\n    if (game.user.isGM) {\n      context.magicItems = {\n        identified: [],\n        unidentified: [],\n      };\n      this.actor.items\n        .filter((o) => {\n          if (!o.isPhysical) return false;\n          if (!o.system.carried) return false;\n          if (o.system.quantity === 0) return false;\n\n          const school = o.system.aura?.school;\n          const cl = o.system.cl;\n          return school?.length > 0 && cl > 0;\n        })\n        .forEach((item) => {\n          const itemData = {\n            name: item.name,\n            unidentifiedName: item.system.unidentified?.name,\n            img: item.img,\n            id: item.id,\n            cl: item.system.cl,\n            aura: {\n              strength: pf1.config.auraStrengths[item.auraStrength],\n              school: pf1.config.spellSchools[item.system.aura?.school] || item.system.aura?.school,\n            },\n            identifyDC: 15 + item.system.cl,\n            identified: item.system.identified === true,\n            quantity: item.system.quantity || 0,\n          };\n\n          if (itemData.identified) context.magicItems.identified.push(itemData);\n          else context.magicItems.unidentified.push(itemData);\n        });\n    }\n\n    // Prepare (interactive) labels\n    if (this.actor.itemTypes.class.length === 0) {\n      const dataFilters = `classType=base${this.actor.type === \"npc\" ? \",npc,racial\" : \"\"}`;\n      context.labels.firstClass = game.i18n.format(\"PF1.Info_FirstClass\", {\n        browser: `<a data-action=\"browse\" data-category=\"classes\" data-filters=\"${dataFilters}\" data-tooltip=\"PF1.BrowseClasses\"><i class=\"fa-solid fa-folder-plus\"></i> ${game.i18n.localize(\n          \"PF1.Info_FirstClass_Compendium\"\n        )}</a>`,\n        create: `<i class=\"fa-solid fa-plus\"></i>`,\n      });\n    }\n\n    // Conditions\n    const conditions = this.actor.system.conditions;\n    // Get conditions that are inherited from items\n    const inheritedEffects = this.actor.appliedEffects.filter((ae) => ae.parent instanceof Item && ae.statuses.size);\n    const condImmunities = this.actor.getConditionImmunities();\n\n    const racial = {};\n    if (this.actor.statuses.has(\"incorporeal\")) {\n      if (this.actor.system.traits.creatureSubtypes.standard.has(\"incorporeal\"))\n        racial[\"incorporeal\"] = game.i18n.localize(\"PF1.Race\");\n    }\n\n    context.conditions = pf1.utils.naturalSort(\n      pf1.registry.conditions\n        .filter((cond) => cond.showInBuffsTab)\n        .map((cond) => ({\n          id: cond.id,\n          img: cond.texture,\n          immune: condImmunities.has(cond.id),\n          active: conditions[cond.id] ?? false,\n          items: new Set(inheritedEffects.filter((ae) => ae.statuses.has(cond.id)).map((ae) => ae.parent)),\n          get inherited() {\n            return this.items.size > 0;\n          },\n          racial: racial[cond.id],\n          label: cond.name,\n          compendium: cond.journal,\n        })),\n      \"label\"\n    );\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    // Return data to the sheet\n    return context;\n  }\n\n  /**\n   * Prepare item data for display.\n   *\n   * @protected\n   * @param {pf1.documents.item.ItemPF} item - Original document\n   * @returns {object} - Data fed to the sheet\n   */\n  _prepareItem(item) {\n    const type = item.type;\n    const subType = item.subType;\n\n    const result = foundry.utils.deepClone(item.system);\n    result.document = item;\n    result.type = type;\n    result.id = item.id;\n    result.img = item.img;\n    result.isActive = item.isActive;\n    result.isPhysical = item.isPhysical ?? false;\n    result.isPhysicalLike = item.isQuasiPhysical ?? false;\n    result.isSingleUse = item.isSingleUse;\n    result.isCharged = item.isCharged;\n    if (result.isCharged) {\n      result.hasResource = result.isCharged && !result.isSingleUse;\n      result.charges = item.charges;\n      result.maxCharges = item.maxCharges;\n      result.noMaxCharges = !Number.isFinite(result.maxCharges);\n      result.hasUses = result.maxCharges > 0;\n    }\n\n    const defaultAction = item.defaultAction;\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    result.labels = item.getLabels({ actionId: defaultAction?.id, rollData });\n    result.hasAction =\n      item.hasAction || item.getScriptCalls(\"use\").length > 0 || item.getScriptCalls(\"postUse\").length > 0;\n    if (defaultAction) {\n      result.hasAttack = defaultAction.hasAttack;\n      result.hasMultiAttack = defaultAction.hasMultiAttack;\n      result.hasDamage = defaultAction.hasDamage;\n      result.hasRange = defaultAction.hasRange;\n      result.hasEffect = defaultAction.hasEffect;\n      if (this._canShowRange(item)) {\n        result.range = foundry.utils.mergeObject(\n          defaultAction?.range ?? {},\n          {\n            min: defaultAction?.getRange({ type: \"min\", rollData }),\n            max: defaultAction?.getRange({ type: \"max\", rollData }),\n          },\n          { inplace: false }\n        );\n      }\n\n      if (result.hasAttack) {\n        const attacks = defaultAction.getAttacks({\n          full: true,\n          resolve: true,\n          conditionals: true,\n          bonuses: true,\n          rollData,\n        });\n        const attackBonuses = attacks.map((atk) => atk.bonus);\n        result.attackArray = attackBonuses;\n        const highest = Math.max(...attackBonuses); // Highest bonus, with assumption the first might not be that.\n        result.attackSummary = `${attackBonuses.length} (${highest < 0 ? highest : `+${highest}`}${\n          attacks.length > 1 ? \"/…\" : \"\"\n        })`;\n      }\n\n      result.usesAmmo = !!defaultAction.ammo?.type;\n      if (result.usesAmmo && defaultAction.ammo?.cost > 0) {\n        result.ammoRemaining = this.actor.items.get(defaultAction.item.system.ammo?.default)?.system.quantity ?? 0;\n      }\n    }\n\n    result.sort = item.sort;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n    result.name = item.name; // Copy name over from item to handle identified state correctly\n\n    result.isEmpty = false;\n    if (result.isPhysical) {\n      result.quantity ||= 0;\n      result.isStack = result.quantity > 1;\n      result.destroyed = result.hp?.value <= 0;\n      result.isEmpty = result.quantity == 0;\n      result.disabled ||= result.destroyed;\n    }\n\n    // Some non-physical items simulate broken state\n    result.isBroken = item.isBroken ?? false;\n\n    result.uncharged = false;\n    if (result.isActive && result.isCharged && !result.isSingleUse) {\n      // TODO: Do charge test in action selection instead of here\n      //const smallestUsage = Math.min(...item.actions.map((a) => a.getChargeCost()));\n      //const itemCharges = result.uses?.value != null ? result.uses.value : 1;\n      //if (itemCharges < smallestUsage) result.empty = true;\n    }\n\n    result.disabled = result.destroyed || result.uncharged || (!result.isActive && !result.isEmpty);\n\n    if (result.isPhysical) {\n      // Do not count unequipped physical items as disabled\n      if (item.system.equipped === false) result.disabled = false;\n      // Do not count unimplanted implants as disabled\n      else if (item.system.implanted === false) result.disabled = false;\n    }\n\n    result.typeLabel = subType ? game.i18n.localize(`PF1.Subtypes.Item.${type}.${subType}.Single`) : undefined;\n\n    if (item.type === \"class\") {\n      if ([\"mythic\", \"racial\"].includes(item.subType)) {\n        result.xpUnbound = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} item - Item render data\n   * @param {object} section - Item section\n   * @param {object} context - Render context\n   */\n  _prepareItemForSection(item, section, context) {\n    if (section.interface.value) {\n      item.price = {\n        value: item.document.getValue({ single: true, recursive: false, sellValue: 1 }),\n        stack: item.document.getValue({ single: false, recursive: true, sellValue: 1 }),\n      };\n    }\n  }\n\n  /**\n   * Determine if the item can have its range shown on this sheet.\n   *\n   * @protected\n   * @param {Item} item\n   * @returns {boolean}\n   */\n  _canShowRange(item) {\n    return item.type === \"attack\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Determine if this actor is in character generation state.\n   *\n   * @private\n   * @returns {boolean} True if character generation guides are desirable.\n   */\n  get inCharacterGeneration() {\n    return (\n      this.actor.system.attributes.hd.total <= 1 ||\n      Object.values(this.actor.system.abilities).every((abl) => abl.value === 10)\n    );\n  }\n\n  _prepareHiddenElements() {\n    // Hide spellbook info\n    const spellbooks = this.actor.system.attributes?.spells?.spellbooks ?? {};\n    for (const k of Object.keys(spellbooks)) {\n      const key = `spellbook-info_${k}`;\n      if (this._hiddenElems[key] == null) this._hiddenElems[key] = true;\n    }\n  }\n\n  _prepareTraits(traits) {\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n    const map = {\n      // \"dr\": PF1.damageTypes,\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, choices] of Object.entries(map)) {\n      const trait = traits[key];\n      if (!trait) continue;\n      const values = trait.total;\n\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = choices[t] || t;\n        return obj;\n      }, {});\n\n      trait.cssClass = !foundry.utils.isEmpty(trait.selected) ? \"\" : \"inactive\";\n    }\n  }\n\n  _prepareSenseLabels() {\n    const result = {};\n\n    const senses = this.actor.system.traits.senses ?? {};\n\n    for (const [key, value] of Object.entries(senses)) {\n      switch (key) {\n        case \"ll\":\n          if (senses[key].enabled) {\n            result[key] = pf1.config.senses[key];\n          }\n          break;\n\n        case \"si\":\n        case \"sid\":\n          if (senses[key]) {\n            result[key] = pf1.config.senses[key];\n          }\n          break;\n\n        case \"custom\":\n          if (value.length) {\n            value\n              .split(pf1.config.re.traitSeparator)\n              .map((c) => c.trim())\n              .filter((c) => c)\n              .forEach((svalue, idx) => (result[`custom${idx + 1}`] = svalue));\n          }\n          break;\n\n        default:\n          if (value.total > 0) {\n            const converted = pf1.utils.convertDistance(value.total);\n            result[key] = `${pf1.config.senses[key]} ${converted[0]} ${converted[1]}`;\n          }\n          break;\n      }\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Insert a spell into the spellbook object when rendering the character sheet\n   *\n   * @internal\n   * @param {object} data - The Actor data being prepared\n   * @param {Array} spells - The spell data being prepared\n   * @param {string} bookKey - The key of the spellbook being prepared\n   * @returns {object} - Spellbook data\n   */\n  _prepareSpellbook(data, spells, bookKey) {\n    const book = this.actor.system.attributes?.spells?.spellbooks?.[bookKey];\n    if (!book) return;\n\n    const min = book.hasCantrips ? 0 : 1;\n    let max = 9;\n    if (book.autoSpellLevelCalculation) {\n      const cl = book.cl.autoSpellLevelTotal;\n\n      const castsPerDay =\n        pf1.config.casterProgression.castsPerDay[book.spellPreparationMode]?.[book.casterType]?.[cl - 1];\n      // Check against undefined protects against bad CL modifications.\n      max = castsPerDay !== undefined ? castsPerDay.length - 1 : 0;\n    } else {\n      if (book.casterType === \"low\") max = 4;\n      else if (book.casterType === \"med\") max = 6;\n    }\n\n    // Reduce spells to the nested spellbook structure\n    const spellbook = [];\n    for (let level = 0; level < 10; level++) {\n      const spellLevel = book.spells?.[`spell${level}`];\n      if (!spellLevel) {\n        console.error(`Bad data for spell level ${level} in spellbook \"${bookKey}\" for actor \"${this.actor.name}\"`);\n        continue;\n      }\n\n      const valid = !isNaN(spellLevel.max);\n\n      spellbook[level] = {\n        ...pf1.config.sheetSections.spells.spell,\n        id: `level-${level}`,\n        level,\n        valid,\n        usesSlots: true,\n        spontaneous: book.spontaneous,\n        prepared: book.prepared,\n        canPrepare: data.actor.type === \"character\",\n        label: pf1.config.spellLevels[level],\n        items: [],\n        uses: spellLevel.value || 0,\n        slots: spellLevel.slots,\n        hasIssues: valid && spellLevel.hasIssues,\n        lowAbilityScore: spellLevel.lowAbilityScore,\n        lowLevel: spellLevel.lowLevel,\n        known: spellLevel.known,\n        preparation: spellLevel.preparation,\n        invalidSlots: spellLevel.invalidSlots,\n        mismatchSlots: spellLevel.mismatchSlots,\n        invalidKnown: spellLevel.invalidKnown,\n        mismatchKnown: spellLevel.mismatchKnown,\n        domain: spellLevel.domain,\n        data: spellLevel,\n        isSchool: book.isSchool,\n      };\n    }\n\n    // Add arbitrary level for collecting invalid spells\n    const invalidLevelData = {\n      id: `level-invalid`,\n      level: 99,\n      label: game.i18n.localize(\"PF1.Unknown\"),\n      valid: false,\n      items: [],\n    };\n\n    // Sort spells into their respective levels\n    for (const spell of spells) {\n      const lvl = spell.level ?? min;\n      const levelData = spellbook[lvl] ?? invalidLevelData;\n\n      levelData.items.push(spell);\n    }\n\n    // Mark cantrips as invalid if it shouldn't exist\n    if (!book.hasCantrips) spellbook[0].valid = false;\n\n    // Append invalid level if it has anything\n    if (invalidLevelData.items.length) spellbook.push(invalidLevelData);\n\n    // Return only levels with something\n    return spellbook.filter((levelData) => {\n      if (!levelData) return false;\n      if (levelData.items.length > 0) return true;\n      const { level } = levelData;\n      return level <= max && level >= min;\n    });\n  }\n\n  /**\n   * Prepare adventure/background skill distinction if needed.\n   *\n   * @internal\n   * @param {object} context\n   */\n  _prepareSkillsets(context) {\n    const skills = context.system.skills;\n\n    const sets = {\n      all: { skills: {} },\n      adventure: { skills: {} },\n      background: { skills: {} },\n    };\n\n    // sort skills by label\n    const keys = Object.keys(skills).sort(function (a, b) {\n      if (skills[a].custom && !skills[b].custom) return 1;\n      if (!skills[a].custom && skills[b].custom) return -1;\n      return (\"\" + skills[a].label).localeCompare(skills[b].label);\n    });\n\n    keys.forEach((a) => {\n      const skl = skills[a];\n      // Include all but Lore and Artistry in all\n      if (!pf1.config.backgroundOnlySkills.includes(a)) sets.all.skills[a] = skl;\n      if (skl.background) sets.background.skills[a] = skl;\n      else sets.adventure.skills[a] = skl;\n    });\n\n    context.skillsets = sets;\n  }\n\n  /**\n   * Calculate used and available skill ranks.\n   *\n   * @internal\n   * @param {object} context - HBS context\n   */\n  _prepareSkills(context) {\n    context.useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n    const abilities = context.system.abilities;\n\n    const isMindless = abilities?.int?.value === null;\n    const intMod = isMindless ? 0 : (abilities?.int?.mod ?? 0);\n\n    // Rank counting\n    const skillRanks = { allowed: 0, used: 0, bgAllowed: 0, bgUsed: 0, sentToBG: 0 };\n\n    // Count used skill ranks\n    for (const skl of Object.values(context.rollData.skills)) {\n      if (skl.subSkills != null) {\n        for (const subSkl of Object.values(skl.subSkills)) {\n          if (context.useBGSkills && skl.background) {\n            skillRanks.bgUsed += subSkl.rank;\n          } else {\n            skillRanks.used += subSkl.rank;\n          }\n        }\n      } else if (context.useBGSkills && skl.background) {\n        skillRanks.bgUsed += skl.rank;\n      } else {\n        skillRanks.used += skl.rank;\n      }\n    }\n\n    // Allowed skill ranks from HD, classes, intelligence, FCB, etc.\n    this.actor.itemTypes.class\n      .filter((cls) => cls.system.subType !== \"mythic\")\n      .forEach((cls) => {\n        // Favoured Class Bonus\n        if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n          skillRanks.allowed += cls.system.fc?.skill?.value || 0;\n        }\n\n        // Mindless get nothing else\n        if (isMindless) return;\n\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        // Int from HD still applies even if skills per level is zero.\n        skillRanks.allowed += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (context.useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) skillRanks.bgAllowed += bgranks;\n        }\n      });\n\n    // Calculate from changes\n    skillRanks.allowed += this.actor.system.details?.skills?.bonus || 0;\n\n    // Adventure skills transferred to background skills\n    if (context.useBGSkills && skillRanks.bgUsed > skillRanks.bgAllowed) {\n      skillRanks.sentToBG = skillRanks.bgUsed - skillRanks.bgAllowed;\n      skillRanks.allowed -= skillRanks.sentToBG;\n      skillRanks.bgAllowed += skillRanks.sentToBG;\n    }\n\n    context.skillRanks = skillRanks;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Compute the level and percentage of encumbrance for an Actor.\n   *\n   * @returns {object}               An object describing the character's encumbrance level\n   * @private\n   */\n  _computeEncumbrance() {\n    const system = this.actor.system;\n    const carriedWeight = system.attributes.encumbrance.carriedWeight;\n    const load = {\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n    };\n    const usystem = pf1.utils.getWeightSystem();\n    const carryLabel =\n      usystem === \"metric\"\n        ? game.i18n.format(\"PF1.CarryLabelKg\", { kg: carriedWeight })\n        : game.i18n.format(\"PF1.CarryLabel\", { lbs: carriedWeight });\n\n    const enc = {\n      pct: {\n        light: Math.clamp((carriedWeight * 100) / load.light, 0, 99.5),\n        medium: Math.clamp(((carriedWeight - load.light) * 100) / (load.medium - load.light), 0, 99.5),\n        heavy: Math.clamp(((carriedWeight - load.medium) * 100) / (load.heavy - load.medium), 0, 99.5),\n      },\n      encumbered: {\n        light: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.medium,\n        medium: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy,\n        heavy: system.attributes.encumbrance.carriedWeight >= system.attributes.encumbrance.levels.heavy,\n      },\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n      aboveHead: system.attributes.encumbrance.levels.overhead,\n      offGround: system.attributes.encumbrance.levels.carry,\n      dragPush: system.attributes.encumbrance.levels.drag,\n      value: system.attributes.encumbrance.carriedWeight,\n      carryLabel,\n    };\n\n    return enc;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} html The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Activate Item Filters\n    const filterLists = html.find(\".filter-list\");\n    filterLists.each(this._initializeFilterItemList.bind(this));\n    filterLists.on(\"click\", \".filter-rule\", this._onToggleFilter.bind(this));\n\n    // Search boxes\n    {\n      const sb = html.find(\".search-input\");\n      sb.on(\"change input\", this._searchFilterChange.bind(this));\n      sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n      this.searchRefresh = true;\n      // Filter tabs on followup refreshes\n      sb.each(function () {\n        if (this.value.length > 0) $(this).change();\n      });\n    }\n\n    // Item summaries\n    html.find(\".item .item-name\").click((event) => this._onItemSummary(event));\n\n    // Allow opening items even if the sheet isn't editable.\n\n    // General items\n    html.find(\".item-edit\").on(\"click\", this._onItemEdit.bind(this));\n    // General items (right click)\n    html.find(\".item .item-name\").contextmenu(this._onItemEdit.bind(this));\n    // Quick items (right click)\n    html.find(\".quick-actions li\").contextmenu(this._onItemEdit.bind(this));\n    // Race item special right-click handler\n    html.find(\".race.item\").contextmenu(this._onItemEdit.bind(this));\n\n    // Spellbook config toggle\n    html.find(\"a.hide-show\").click(this._hideShowElement.bind(this));\n\n    // Open skill compendium entry\n    html.find(\"a.compendium-entry\").click(this._onOpenCompendiumEntry.bind(this));\n\n    // Open compendium browser\n    html.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    html\n      // \"pointerenter\" would be better, but Foundry tooltip behaves unpredictably with it.\n      .on(\"pointerover\", \"[data-tooltip-extended]\", this._activateExtendedTooltip.bind(this))\n      .on(\"pointerleave\", \"[data-tooltip-extended]\", () => game.tooltip.deactivate());\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add general text box (span) handler\n    html.find(\"span.text-box.direct\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n    html\n      .find('*[data-action=\"input-text\"].wheel-change')\n      .on(\"wheel\", (event) => this._onInputText(event.originalEvent));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Abilities, Skills, Defenses and Traits\n    /* -------------------------------------------- */\n\n    // Ability Checks\n    html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\n\n    // BAB Check\n    html.find(\".attribute.bab .rollable\").click(this._onRollBAB.bind(this));\n\n    // Generic attack weapon and CMB checks\n    html.find(\".attribute.attack .rollable\").click(this._onRollAttack.bind(this));\n\n    // Initiative Check\n    html.find(\".attribute.initiative .rollable\").click(this._onRollInitiative.bind(this));\n\n    // Saving Throw\n    html.find(\".saving-throw .rollable\").click(this._onRollSavingThrow.bind(this));\n\n    // Adjust skill rank\n    html.find(\"span.text-box.skill-rank\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Add arbitrary skill\n    html.find(\".skills .skill.arbitrary .skill-create\").click((ev) => this._onArbitrarySkillCreate(ev));\n\n    // Add custom skill\n    html.find(\".skills .controls > .skill-create\").click((ev) => this._onSkillCreate(ev));\n\n    // Edit skill\n    html.find(\".skills .skill > .controls > .skill-edit\").on(\"click\", (ev) => this._onSkillEdit(ev));\n    // Delete custom skill\n    html.find(\".skills .skill > .controls > .skill-delete\").click((ev) => this._onSkillDelete(ev));\n\n    // Item Action control\n    html.find(\".item-actions a.item-action\").click(this._itemActivationControl.bind(this));\n\n    // Roll Skill Checks\n    html.find(\".tab.skills .skill > .action.roll\").click(this._onRollSkillCheck.bind(this));\n\n    // Trait Selector\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Resistance Selector\n    html.find(\".resistance-selector\").click(this._onResistanceSelector.bind(this));\n\n    // Display defenses\n    html.find(\".generic-defenses .rollable\").click((ev) => {\n      ev.preventDefault();\n      this.actor.displayDefenseCard({ token: this.token });\n    });\n\n    // Rest\n    html.find(\".rest\").click(this._onRest.bind(this));\n\n    // Point Buy Calculator\n    html.find(\"button.pointbuy-calculator\").click(this._onPointBuyCalculator.bind(this));\n\n    // Alignment\n    html.find(\".control.alignment\").click(this._onControlAlignment.bind(this));\n\n    // Edit senses\n    html.find(\".senses-selector\").on(\"click\", this._onSensesSelector.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(\".item-create\").on(\"click\", (ev) => this._onItemCreate(ev));\n    html.find(\".item-delete\").on(\"click\", this._onItemDelete.bind(this));\n    html.find(\".item-give\").on(\"click\", this._onItemGive.bind(this));\n    html.find(\".item-split:not(.disabled)\").on(\"click\", this._onItemSplit.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").on(\"click\", (event) => this._onItemCard(event));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick (un)equip item\n    html.find(\"a.item-control.item-equip\").click((ev) => {\n      this._quickEquipItem(ev);\n    });\n\n    // Quick carry item\n    html.find(\"a.item-control.item-carry\").click((ev) => {\n      this._quickCarryItem(ev);\n    });\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Quick toggle item property\n    html.find(\"a.item-control.item-toggle-prepared\").click(this._itemPreparedToggle.bind(this));\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick Action\n    html.find(\".quick-actions li\").click(this._quickAction.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Set item charges\n    html\n      .find(\".item-detail.item-uses span.text-box.value\")\n      .on(\"wheel\", this._setItemUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setItemUses.bind(this));\n      });\n\n    // Dynamic tooltips\n\n    // Weight details tooltip\n    // TODO: Move to extended tooltip handling?\n    html[0].querySelectorAll(\".item-list .item[data-item-id] .item-detail.item-weight\").forEach((el) => {\n      el.addEventListener(\n        \"pointerenter\",\n        (ev) => {\n          const el0 = ev.currentTarget;\n          const item = this.actor.items.get(el0.closest(\"[data-item-id]\").dataset.itemId);\n          const weight = item?.system.weight?.converted;\n\n          if (weight && weight.total > 0) {\n            const contents = [];\n            const quantity = item.system.quantity || 0;\n            contents.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: weight.value }));\n            if (quantity > 1)\n              contents.push(\n                game.i18n.format(\"PF1.StackDetails.Stack\", { value: Math.floor(weight.value * 100 * quantity) / 100 })\n              );\n            if (weight.contents > 0) {\n              contents.push(game.i18n.format(\"PF1.StackDetails.Contents\", { value: weight.contents }));\n              contents.push(game.i18n.format(\"PF1.StackDetails.Total\", { value: weight.total }));\n            }\n\n            const template = document.createElement(\"template\");\n            template.innerHTML = contents.join(\"<br>\");\n\n            game.tooltip.activate(el0, {\n              content: template.content,\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n              cssClass: \"pf1\",\n            });\n          }\n        },\n        { passive: true }\n      );\n      el.addEventListener(\"pointerleave\", () => game.tooltip.deactivate(), { passive: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Classes\n    /* -------------------------------------------- */\n\n    // Level Up\n    html.find(\".level-up\").click(this._onLevelUp.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Spells\n    /* -------------------------------------------- */\n\n    // Set specific spell's (max) uses\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='amount']\")\n      .on(\"wheel\", this._setSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setSpellUses.bind(this));\n      });\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='max']\")\n      .on(\"wheel\", this._setMaxSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setMaxSpellUses.bind(this));\n      });\n\n    // Set spell level uses for spontaneous spellbooks\n    html\n      .find(\".spell-uses .spell-slots.spontaneous span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n    // Set base amount of spell uses for a given spell level\n    html.find(\".spell-uses .spell-max span.text-box\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Set spell point amount\n    html\n      .find(\".spell-points-current .value span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n\n    html.find(\".spellcasting-concentration.rollable\").click(this._onRollConcentration.bind(this));\n\n    html.find(\".spellcasting-cl.rollable\").click(this._onRollCL.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Buffs\n    /* -------------------------------------------- */\n\n    html\n      .find(\".item-detail.item-active input[type='checkbox']\")\n      .off(\"change\")\n      .on(\"change\", this._setItemActive.bind(this));\n\n    html\n      .find(\".item-detail.item-level span.text-box\")\n      .on(\"wheel\", this._setBuffLevel.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setBuffLevel.bind(this));\n      });\n\n    // Toggle condition\n    html.find(\".condition .checkbox\").click(this._onToggleCondition.bind(this));\n    html.find(\".condition .checkbox\").on(\"contextmenu\", this._onEditCondition.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Skills\n    /* -------------------------------------------- */\n\n    html.find(\".skill-lock-button\").on(\"click\", this._onToggleSkillLock.bind(this));\n  }\n\n  /**\n   * Handle extended tooltip on hover activation.\n   *\n   * Async to reduce UX impact.\n   *\n   * @private\n   * @param {Event} event\n   */\n  async _activateExtendedTooltip(event) {\n    const el = event.currentTarget;\n    const id = el.dataset.tooltipExtended;\n    if (!id) return;\n\n    const context = { actor: this.actor, bonusTypes: pf1.config.bonusTypes, config: pf1.config };\n    await this._getTooltipContext(id, context);\n\n    context.sources = context.sources?.filter((list) => list.sources?.length > 0);\n\n    if (\n      !(\n        context.header ||\n        context?.paths?.length > 0 ||\n        context?.sources?.length > 0 ||\n        context?.details?.length > 0 ||\n        context?.notes?.length > 0\n      )\n    )\n      return;\n\n    for (const src of context.sources) {\n      src.sources = src.sources.map((s) => ({\n        ...s,\n        type: s.type || pf1.config.bonusTypes[s.modifier || \"untyped\"] || s.modifier,\n      }));\n    }\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/extended-tooltip.hbs\", context);\n\n    Hooks.callAll(\"renderPF1ExtendedTooltip\", this, id, template);\n\n    game.tooltip.activate(el, {\n      content: template.content,\n      cssClass: \"pf1 extended\",\n      direction: el.dataset.tooltipDirection || undefined,\n    });\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {ActorPF} */\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    const getNotes = async (context, all = true) =>\n      (await actor.getContextNotesParsed(context, { all, rollData: lazy.rollData, roll: false })).map((n) => n.text);\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"level\": {\n        const hd = lazy.rollData.attributes?.hd?.total ?? NaN;\n        if (hd > 0) {\n          paths.push({ path: \"@attributes.hd.total\", value: hd });\n          const mythic = lazy.rollData.details?.mythicTier ?? NaN;\n          if (mythic > 0) {\n            paths.push({ path: \"@details.mythicTier\", value: mythic });\n          }\n        }\n        const level = lazy.rollData.details?.level?.value ?? NaN;\n        if (level) {\n          paths.push({ path: \"@details.level.value\", value: lazy.rollData.details?.level?.value ?? NaN });\n        }\n        const cr = lazy.rollData.details?.cr?.total ?? NaN;\n        if (cr > 0) paths.push({ path: \"@details.cr.total\", value: pf1.utils.CR.fromNumber(cr) });\n        break;\n      }\n      case \"hit-points\": {\n        const hp = system.attributes.hp;\n        paths.push(\n          { path: \"@attributes.hp.value\", value: hp.value },\n          { path: \"@attributes.hp.offset\", value: hp.offset },\n          { path: \"@attributes.hp.max\", value: hp.max },\n          { path: \"@attributes.hp.temp\", value: hp.temp },\n          { path: \"@attributes.hp.nonlethal\", value: hp.nonlethal }\n        );\n        if (hp.base > 0) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.hp.base\", value: hp.base });\n        }\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hp.max\"), untyped: true });\n        break;\n      }\n      case \"vigor\": {\n        // Wounds & Vigor\n        const vigor = system.attributes.vigor;\n        paths.push(\n          { path: \"@attributes.vigor.value\", value: vigor.value },\n          { path: \"@attributes.vigor.offset\", value: vigor.offset },\n          { path: \"@attributes.vigor.temp\", value: vigor.temp },\n          { path: \"@attributes.vigor.max\", value: vigor.max }\n        );\n        if (vigor.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.vigor.base\", value: vigor.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.vigor.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"wounds\": {\n        // Wounds & Vigor\n        const wounds = system.attributes.wounds;\n        paths.push(\n          { path: \"@attributes.wounds.value\", value: wounds.value },\n          { path: \"@attributes.wounds.offset\", value: wounds.offset },\n          { path: \"@attributes.wounds.max\", value: wounds.max },\n          { path: \"@attributes.wounds.threshold\", value: wounds.threshold }\n        );\n        if (wounds.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.wounds.base\", value: wounds.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.wounds.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"speed\": {\n        const mode = detail;\n\n        sources.push(\n          { sources: actor.getSourceDetails(`system.attributes.speed.${mode}.base`) },\n          { sources: actor.getSourceDetails(`system.attributes.speed.${mode}.total`) }\n        );\n\n        // Add base speed\n        const speed = system.attributes.speed[mode];\n        const [tD] = pf1.utils.convertDistance(speed.total);\n        const [tB] = pf1.utils.convertDistance(speed.base);\n        const [tR] = pf1.utils.convertDistance(speed.unhindered);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push(\n          { path: `@attributes.speed.${mode}.total`, value: tD, unit: tU },\n          { path: `@attributes.speed.${mode}.base`, value: tB, unit: tU },\n          { path: `@attributes.speed.${mode}.unhindered`, value: tR, unit: tU }\n        );\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speed.overland);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@attributes.speed.${mode}.overland`, value: oD, unit: oU });\n\n        notes = [...(await getNotes(`${mode}Speed`)), ...(await getNotes(\"allSpeeds\"))];\n        break;\n      }\n      case \"flyManeuverability\":\n        paths.push({\n          path: \"@attributes.speed.fly.maneuverability\",\n          value: system.attributes.speed.fly.maneuverability,\n        });\n        break;\n      case \"ac\": {\n        const ac = system.attributes.ac[detail];\n        if (!ac) return;\n        paths.push({ path: `@attributes.ac.${detail}.total`, value: ac.total });\n        if (ac.value) {\n          // lite sheet forced value\n          paths.push({ path: `@attributes.ac.${detail}.value`, value: ac.value });\n        }\n        paths.push(\n          { path: \"@armor.type\", value: lazy.rollData.armor?.type },\n          { path: \"@shield.type\", value: lazy.rollData.shield?.type }\n        );\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.ac.${detail}.total`),\n        });\n\n        notes = await getNotes(\"ac\");\n        break;\n      }\n      case \"cmd\":\n        paths.push({\n          path: `@attributes.cmd.${detail}`,\n          value: system.attributes.cmd[detail],\n        });\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.cmd.${detail}`),\n        });\n\n        notes = await getNotes(\"cmd\");\n        break;\n      case \"save\": {\n        const save = system.attributes.savingThrows[detail];\n        if (!save) return;\n        paths.push({\n          path: `@attributes.savingThrows.${detail}.total`,\n          value: save.total,\n        });\n        if (save.base) {\n          // npc lite sheet forced value\n          paths.push({ path: `@attributes.savingThrows.${detail}.base`, value: save.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.savingThrows.${detail}.total`),\n        });\n\n        notes = await getNotes(`savingThrow.${detail}`);\n        break;\n      }\n      case \"sr\":\n        paths.push({\n          path: \"@attributes.sr.total\",\n          value: system.attributes.sr.total,\n        });\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.sr.total\"),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"sr\");\n        break;\n      case \"bab\": {\n        const bab = system.attributes.bab;\n        paths.push({\n          path: \"@attributes.bab.total\",\n          value: bab.total,\n        });\n\n        // lite sheet forced value\n        if (bab.value) {\n          paths.push({ path: \"@attributes.bab.value\", value: bab.value });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.bab.total\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"cmb\":\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n          // omit: + @attributes.attack.shared\n          // omit: + @attributes.attack.general\n        });\n\n        sources.push({\n          sources: [\n            {\n              name: game.i18n.localize(\"PF1.Size\"),\n              value: Object.values(pf1.config.sizeSpecialMods)[system.traits.size.value],\n            },\n          ],\n        });\n\n        if (system.attributes.cmbAbility) {\n          sources.push({\n            sources: [\n              {\n                name: pf1.config.abilities[system.attributes.cmbAbility],\n                value: system.abilities?.[system.attributes.cmbAbility]?.mod,\n              },\n            ],\n          });\n        }\n\n        sources.push(\n          { sources: actor.getSourceDetails(\"system.attributes.attack.general\") },\n          { sources: actor.getSourceDetails(\"system.attributes.cmb.bonus\") },\n          { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") }\n        );\n\n        notes = [...(await getNotes(\"attack\")), ...(await getNotes(\"melee\")), ...(await getNotes(\"cmb\"))];\n        break;\n      case \"init\": {\n        const init = system.attributes.init;\n        paths.push({ path: \"@attributes.init.total\", value: init.total });\n        if (init.value) {\n          // npc lite sheet forced value\n          paths.push({ path: \"@attributes.init.value\", value: init.value });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.init.total\"),\n        });\n\n        notes = await getNotes(\"init\");\n        break;\n      }\n      case \"abilityScore\": {\n        const abl = detail;\n        const ability = system.abilities[detail] ?? {};\n\n        const hasAbility = ability.base !== null;\n\n        paths.push(\n          { path: `@abilities.${abl}.total`, value: ability.total, sign: false },\n          { path: `@abilities.${abl}.value`, value: ability.value, sign: false },\n          { path: `@abilities.${abl}.mod`, value: ability.mod, sign: true }\n        );\n\n        if (hasAbility) {\n          paths.push(\n            { path: `@abilities.${abl}.damage`, value: ability.damage, sign: false },\n            { path: `@abilities.${abl}.drain`, value: ability.drain, sign: false },\n            { path: `@abilities.${abl}.undrained`, value: ability.undrained, sign: false },\n            { path: `@abilities.${abl}.penalty`, value: ability.penalty, sign: false },\n            { path: `@abilities.${abl}.base`, value: ability.base, sign: false },\n            { path: `@abilities.${abl}.baseMod`, value: ability.baseMod, sign: true },\n            { path: `@abilities.${abl}.unmod`, value: ability.unmod, sign: true }\n          );\n        }\n\n        if (hasAbility) {\n          sources.push(\n            { sources: actor.getSourceDetails(`system.abilities.${abl}.total`) },\n            { sources: actor.getSourceDetails(`system.abilities.${abl}.penalty`) },\n            {\n              label: game.i18n.localize(\"PF1.ModifierOnly\"),\n              sources: actor.getSourceDetails(`system.abilities.${abl}.mod`),\n            },\n            {\n              label: game.i18n.localize(\"PF1.CheckOnly\"),\n              sources: actor.getSourceDetails(`system.abilities.${abl}.checkMod`),\n            }\n          );\n        }\n\n        notes = await getNotes(`abilityChecks.${abl}`);\n        break;\n      }\n      case \"acp\":\n        paths.push(\n          {\n            path: \"@attributes.acp.total\",\n            value: system.attributes.acp.total,\n          },\n          {\n            path: \"@attributes.acp.skill\",\n            value: system.attributes.acp.skill,\n          },\n          {\n            path: \"@attributes.acp.encumbrance\",\n            value: system.attributes.acp.encumbrance,\n          },\n          {\n            path: \"@attributes.acp.gear\",\n            value: system.attributes.acp.gear,\n          }\n        );\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.attributes.acp.total\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: actor.getSourceDetails(\"system.attributes.acp.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: actor.getSourceDetails(\"system.attributes.acp.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      case \"max-dex\": {\n        const mdex = system.attributes.maxDexBonus;\n        paths.push({\n          path: \"@attributes.maxDexBonus\",\n          value: Number.isFinite(mdex) ? mdex : \"null\",\n        });\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.attributes.maxDexBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: actor.getSourceDetails(\"system.attributes.mDex.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: actor.getSourceDetails(\"system.attributes.mDex.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"asf\": {\n        // TODO: Make ASF proper change target\n        const asfSources = [];\n        this.actor.itemTypes.equipment\n          .filter((item) => item.isActive)\n          .reduce((cur, item) => {\n            const itemASF = item.system.spellFailure || 0;\n            if (itemASF > 0) asfSources.push({ name: item.name, value: `${itemASF}%` });\n            return cur + itemASF;\n          }, 0);\n\n        if (asfSources.length) {\n          sources.push({ sources: asfSources, untyped: true });\n        }\n        break;\n      }\n      case \"implants\": {\n        const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n        paths.push(\n          { path: \"@abilities.int.total\", value: lazy.rollData.abilities.int.total },\n          { path: \"@abilities.con.total\", value: lazy.rollData.abilities.con.total }\n        );\n        sources.push({\n          untyped: true,\n          sources: cybertech.map((item) => ({\n            name: item.name,\n            value: item.system.implant,\n          })),\n        });\n        break;\n      }\n      case \"size\":\n        paths.push(\n          { path: \"@traits.size.base\", value: system.traits.size.base },\n          { path: \"@size\", value: lazy.rollData.size }\n        );\n        sources.push({\n          sources: actor.getSourceDetails(\"system.traits.size.value\"),\n        });\n        break;\n      case \"age-category\":\n        paths.push(\n          { path: \"@traits.ageCategory.base\", value: system.traits.ageCategory.base },\n          { path: \"@ageCategory.value\", value: lazy.rollData.ageCategory.value },\n          { path: \"@ageCategory.physical\", value: lazy.rollData.ageCategory.physical },\n          { path: \"@ageCategory.mental\", value: lazy.rollData.ageCategory.mental }\n        );\n        break;\n      case \"stature\":\n        paths.push({ path: \"@traits.stature\", value: lazy.rollData.traits.stature });\n        break;\n      case \"reach\":\n        paths.push(\n          { path: \"@traits.reach.total.melee\", value: lazy.rollData.traits.reach.total.melee },\n          { path: \"@traits.reach.total.reach\", value: lazy.rollData.traits.reach.total.reach },\n          { path: \"@traits.reach.natural.melee\", value: lazy.rollData.traits.reach.natural.melee },\n          { path: \"@traits.reach.natural.reach\", value: lazy.rollData.traits.reach.natural.reach }\n        );\n        sources.push({ sources: actor.getSourceDetails(\"system.traits.reach.total.melee\") });\n        break;\n      case \"senses\":\n        for (const i of [\"dv\", \"ts\", \"ls\", \"bse\", \"bs\", \"sc\", \"tr\"]) {\n          const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n          paths.push({\n            path: `@traits.senses.${i}.total`,\n            value: pf1.utils.convertDistance(system.traits.senses[i]?.total)[0],\n            unit: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n            signed: false,\n          });\n          sources.push({\n            label: pf1.config.senses[i],\n            sources: actor.getSourceDetails(`system.traits.senses.${i}.total`),\n            left: true,\n            untyped: true,\n          });\n        }\n        break;\n      case \"aura\":\n        paths.push({ path: \"@traits.aura.custom\", empty: true });\n        break;\n      case \"fastHeal\":\n        paths.push({ path: \"@traits.fastHealing\", empty: true });\n        break;\n      case \"regen\":\n        paths.push({ path: \"@traits.regen\", empty: true });\n        break;\n      case \"conditionResistance\":\n        paths.push({ path: \"@traits.cres\", empty: true });\n        break;\n      case \"conditionImmunity\":\n        paths.push({ path: \"@traits.ci.total\", empty: true });\n        break;\n      case \"energyResistance\":\n        paths.push({ path: \"@traits.eres.total\", empty: true });\n        break;\n      case \"hardness\":\n        paths.push({ path: \"@traits.hardness\", empty: true });\n        break;\n      case \"damageReduction\":\n        paths.push({ path: \"@traits.dr.total\", empty: true });\n        break;\n      case \"damageImmunity\":\n        paths.push({ path: \"@traits.di.total\", empty: true });\n        break;\n      case \"damageVulnerability\":\n        paths.push({ path: \"@traits.dv.total\", empty: true });\n        break;\n      case \"proficiency\":\n        switch (detail) {\n          case \"language\":\n            paths.push({ path: \"@traits.languages.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.languages\"), left: true, untyped: true });\n            break;\n          case \"weapon\":\n            paths.push({ path: \"@traits.weaponProf.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.weaponProf\"), left: true, untyped: true });\n            break;\n          case \"armor\":\n            paths.push({ path: \"@traits.armorProf.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.armorProf\"), left: true, untyped: true });\n            break;\n        }\n        break;\n      case \"quadruped\": {\n        paths.push({ path: \"@attributes.quadruped\", value: String(system.attributes.quadruped) });\n        const race = this.actor.race;\n        if (race) {\n          sources.push({\n            untyped: true,\n            sources: [{ name: race.name, value: race.system.quadruped ?? false, isBoolean: true }],\n          });\n        }\n        break;\n      }\n      case \"negativeLevels\":\n        paths.push({ path: \"@attributes.energyDrain\", value: system.attributes.energyDrain, signed: false });\n        break;\n      case \"item\": {\n        const [itemId, target] = detail.split(\".\");\n        /** @type {ItemPF} */\n        const item = this.actor.items.get(itemId);\n        if (!item) return;\n        switch (target) {\n          case \"level\":\n            paths.push({\n              path: `@classes.${item.system.tag}.level`,\n              value: lazy.rollData.classes[item.system.tag].level,\n            });\n            if (item.subType === \"mythic\") {\n              paths.push({\n                path: `@classes.${item.system.tag}.mythicTier`,\n                value: lazy.rollData.classes[item.system.tag].mythicTier,\n              });\n            } else {\n              paths.push({\n                path: `@classes.${item.system.tag}.unlevel`,\n                value: lazy.rollData.classes[item.system.tag].unlevel,\n              });\n            }\n            break;\n          case \"resources\": {\n            if (!item.isCharged || item.isSingleUse) return;\n\n            paths.push({ path: `@resources.${item.system.tag}.value`, value: item.system.uses?.value });\n            if (item.system.uses?.max > 0) {\n              paths.push({ path: `@resources.${item.system.tag}.max`, value: item.system.uses?.max });\n            }\n            break;\n          }\n          case \"attacks\": {\n            const action = item.defaultAction;\n            if (!action?.hasAttack) return;\n            const attacks =\n              action\n                ?.getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true })\n                ?.map((atk) => atk.bonus)\n                .sort((a, b) => b - a) ?? [];\n\n            if (attacks.length == 0) return;\n\n            const formatter = new Intl.NumberFormat(undefined, { signDisplay: \"always\" });\n            header = attacks.map((n) => formatter.format(n)).join(\"/\");\n\n            sources.push({\n              sources: item.attackSources,\n            });\n            break;\n          }\n          case \"damage\": {\n            const action = item.defaultAction;\n            if (!action?.hasDamage) return;\n\n            const rollData = action.getRollData();\n\n            //header = dmgformula; // No different than on sheet\n\n            const dmgSources = [];\n\n            subHeader = game.i18n.localize(\"PF1.Details\");\n\n            const damage = action.damage;\n            for (const dmg of damage.parts ?? []) {\n              dmgSources.push({\n                name: dmg.formula,\n                value: pf1.utils.formula.simplify(dmg.formula || \"0\", rollData, { strict: false }),\n                type: pf1.utils.i18n.join(dmg.names),\n                //unvalued: true,\n              });\n            }\n            for (const dmg of damage.nonCritParts ?? []) {\n              dmgSources.push({\n                name: dmg.formula,\n                value: pf1.utils.formula.simplify(dmg.formula || \"0\", rollData, { strict: false }),\n                type: pf1.utils.i18n.join(dmg.names),\n                //unvalued: true,\n              });\n            }\n\n            const ablKey = action.ability?.damage;\n            if (ablKey) {\n              const isNatural = action.item.subType === \"natural\";\n              const abl = rollData.abilities?.[ablKey];\n\n              const ablMax = action.ability?.max ?? Infinity;\n              const dmgAblBaseMod = Math.min(abl?.mod ?? 0, ablMax);\n              const held = action.held || item?.system.held || \"1h\";\n              let ablDmgMult =\n                action.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n              if (isNatural && !(action.naturalAttack?.primary ?? true)) {\n                ablDmgMult = action.naturalAttack?.secondary?.damageMult ?? 0.5;\n              }\n\n              const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n\n              dmgSources.push({\n                value: dmgAblMod,\n                type: pf1.config.abilities[ablKey],\n              });\n            }\n\n            sources.push({ sources: dmgSources });\n\n            sources.push({\n              sources: action.allDamageSources.map((s) => ({\n                name: s.flavor,\n                ...s,\n                type: pf1.config.bonusTypes[s.type] || s.type,\n              })),\n            });\n\n            /*\n            const hasOptionalConditionals = action?.conditionals.find((c) => !c.default);\n            if (hasOptionalConditionals) {\n              // <span class=\"span3\">+ {{localize \"PF1.Conditionals\"}}</span>\n            }\n            */\n\n            /*\n            if (damage.critParts?.length) {\n              // <span class=\"span3\">+ {{localize \"PF1.OnCritBonusFormula\"}}</span>\n            }\n            */\n            break;\n          }\n          case \"range\": {\n            const action = item.defaultAction;\n            if (!action?.hasRange) return;\n\n            const maxIncr = action.range?.maxIncrements ?? 1;\n            if (maxIncr <= 1) return;\n\n            details.push({\n              key: game.i18n.localize(\"PF1.MaximumRangeIncrements\"),\n              value: action.range.maxIncrements,\n              left: true,\n            });\n\n            const rollData = action.getRollData();\n            const range = {\n              ...(action.range ?? {}),\n              min: action.getRange({ type: \"min\", rollData }),\n              max: action.getRange({ type: \"max\", rollData }),\n            };\n\n            const u = pf1.utils.convertDistance(0, \"ft\")[1];\n            const mu = pf1.utils.convertDistance(0, range.units)[1];\n\n            details.push({\n              key: game.i18n.localize(\"PF1.Range\"),\n              value: `${range.min} ${u} – ${range.max} ${mu}`,\n              left: true,\n            });\n            break;\n          }\n          default:\n            throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n        }\n        break;\n      }\n      case \"carryCapacity\": {\n        paths.push(\n          { path: \"@attributes.encumbrance.level\", value: system.attributes.encumbrance.level },\n          { path: \"@details.carryCapacity.bonus.total\", value: system.details.carryCapacity.bonus.total },\n          {\n            path: \"@details.carryCapacity.multiplier.total\",\n            value: pf1.utils.limitPrecision(system.details.carryCapacity.multiplier.total, 2),\n          }\n        );\n\n        const bonusMults = [];\n        const size = this.actor.system.traits?.size?.base || \"med\";\n        if (size) {\n          const isQuadruped = this.actor.system.attributes?.quadruped || false;\n          const mults = isQuadruped\n            ? pf1.config.encumbranceMultipliers.quadruped\n            : pf1.config.encumbranceMultipliers.normal;\n          const smult = mults[size];\n          bonusMults.push({\n            name: game.i18n.localize(\"PF1.Size\") + (isQuadruped ? ` (${game.i18n.localize(\"PF1.Quadruped\")})` : \"\"),\n            value: `×${smult}`,\n          });\n        }\n\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryStrength\"),\n          sources: actor.getSourceDetails(\"system.details.carryCapacity.bonus.total\"),\n          untyped: true,\n        });\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryMultiplier\"),\n          sources: [...actor.getSourceDetails(\"system.details.carryCapacity.multiplier.total\"), ...bonusMults],\n          decimals: 1,\n          untyped: true,\n        });\n        break;\n      }\n      case \"feats\": {\n        const feats = this.actor.getFeatCount();\n\n        if (feats.levels > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromLevels\"), value: feats.levels }],\n            untyped: true,\n          });\n        }\n        if (feats.mythic > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromMythic\"), value: feats.mythic }],\n            untyped: true,\n          });\n        }\n\n        // Generate fake sources\n        const featSources = [];\n        // TODO: Move this to the real source info generation\n        this.actor.changes\n          .filter((c) => c.target === \"bonusFeats\")\n          .forEach((c) => {\n            if (c.parent || c.flavor) {\n              featSources.push({\n                name: c.parent?.name ?? c.flavor,\n                value: c.value,\n              });\n            }\n          });\n\n        if (feats.formula !== 0) {\n          featSources.push({\n            name: game.i18n.localize(\"PF1.BonusFeatFormula\"),\n            value: feats.formula,\n          });\n        }\n        sources.push({ sources: featSources, untyped: true });\n        break;\n      }\n      case \"skills\": {\n        const useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n        const isMindless = system.abilities?.int?.value === null;\n\n        const skillSources = [];\n        const isBG = detail === \"background\";\n\n        let bgAllowed = 0;\n\n        this.actor.itemTypes.class\n          .filter((cls) => cls.system.subType !== \"mythic\")\n          .forEach((cls) => {\n            // Favoured Class Bonus\n            // Apply FCB regardless if mindless if user applied such\n            if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n              const fcSkills = cls.system.fc?.skill?.value || 0;\n              if (fcSkills > 0 && !isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: cls.name }),\n                  value: fcSkills,\n                  untyped: true,\n                });\n              }\n            }\n\n            // Mindless get nothing else\n            if (isMindless) return;\n\n            const hd = cls.hitDice;\n            if (hd === 0) return;\n\n            // Background skills\n            if (useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n              const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n              bgAllowed += bgranks;\n              if (bgranks > 0 && isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                  value: bgranks,\n                  untyped: true,\n                });\n              }\n            }\n\n            if (!isBG) {\n              const perLevel = cls.system.skillsPerLevel || 0;\n              skillSources.push({\n                name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                value: perLevel * hd,\n                untyped: true,\n              });\n            }\n          });\n\n        // Ability ability score\n        if (!isBG && !isMindless) {\n          const intMod = system.abilities?.int?.mod;\n          if (intMod !== 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.AbilityInt\"),\n              value: intMod * system.attributes?.hd?.total,\n            });\n          }\n        }\n\n        // Count transfers for background skills\n        if (useBGSkills) {\n          let bgUsed = 0;\n\n          // Count used skill ranks\n          for (const skl of Object.values(lazy.rollData.skills)) {\n            if (skl.subSkills) {\n              for (const subSkl of Object.values(skl.subSkills)) {\n                if (skl.background) {\n                  bgUsed += subSkl.rank;\n                }\n              }\n            } else if (skl.background) {\n              bgUsed += skl.rank;\n            }\n          }\n\n          // Adventure skills transferred to background skills\n          const sentToBG = bgUsed - bgAllowed;\n          if (sentToBG > 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.Transferred\"),\n              value: isBG ? sentToBG : -sentToBG,\n            });\n          }\n        }\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.details.skills.bonus\"),\n            untyped: true,\n          },\n          {\n            sources: skillSources,\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"skill\": {\n        const fullSkillId = detail,\n          skillIdParts = fullSkillId.split(\".\"),\n          mainId = skillIdParts.shift(),\n          subSkillId = skillIdParts.pop(),\n          skill = this.actor.getSkillInfo(fullSkillId, { rollData: lazy.rollData });\n\n        header = `<code>${skill.id}</code>`;\n\n        const path = subSkillId ? `${mainId}.subSkills.${subSkillId}` : mainId;\n\n        paths.push(\n          { path: `@skills.${path}.mod`, value: skill.mod },\n          { path: `@skills.${path}.rank`, value: skill.rank }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(`system.skills.${path}.mod`) });\n\n        notes = await getNotes(`skill.${fullSkillId}`);\n        if (subSkillId) notes.push(...(await getNotes(`skill.${mainId}`, false)));\n        break;\n      }\n      case \"spellbook\": {\n        const [bookId, target, subTarget] = detail.split(\".\");\n        const spellbook = system.attributes?.spells?.spellbooks?.[bookId];\n        switch (target) {\n          case \"class\": {\n            paths.push(\n              { path: \"@cl\", value: spellbook.cl.total },\n              { path: `@spells.${bookId}.cl.total`, value: spellbook.cl.total }\n            );\n\n            let cls;\n            // TODO: get proper spellbook roll data\n            if (spellbook.class === \"_hd\") cls = { level: lazy.rollData.attributes?.hd?.total };\n            cls = lazy.rollData.classes?.[spellbook.class];\n            if (cls) paths.push({ path: \"@class.level\", value: cls.level });\n\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n            });\n            break;\n          }\n          case \"ability\": {\n            const ablMod = lazy.rollData.abilities[spellbook.ability]?.mod;\n            paths.push(\n              {\n                path: `@spells.${bookId}.abilityMod`,\n                value: ablMod,\n              },\n              {\n                path: \"@ablMod\",\n                value: ablMod,\n              }\n            );\n            break;\n          }\n          case \"level\":\n            paths.push({\n              path: `@spells.${bookId}.cl.total`,\n              value: spellbook.cl?.total,\n            });\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n              untyped: true,\n            });\n            break;\n          case \"concentration\": {\n            paths.push({\n              path: `@spells.${bookId}.concentration.total`,\n              value: spellbook.concentration?.total,\n            });\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.concentration.total`),\n              untyped: true,\n            });\n            break;\n          }\n          case \"range\": {\n            const unit = subTarget;\n            paths.push({\n              path: `@spells.${bookId}.range.${unit}`,\n              value: spellbook.range?.[unit],\n              unit:\n                pf1.utils.getDistanceSystem() === \"metric\"\n                  ? pf1.config.measureUnitsShort.m\n                  : pf1.config.measureUnitsShort.ft,\n            });\n            break;\n          }\n          case \"spellPoints\":\n            paths.push(\n              { path: `@spells.${bookId}.spellPoints.value`, value: spellbook.spellPoints.value },\n              { path: `@spells.${bookId}.spellPoints.max`, value: spellbook.spellPoints.max }\n            );\n\n            break;\n        }\n        break;\n      }\n      case \"spell\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        switch (target) {\n          case \"material\": {\n            const materials = item.system.materials ?? {};\n            if (materials.focus) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.focus.Label\"),\n                value: materials.focus,\n              });\n            }\n            if (materials.value) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.material.Label\"),\n                value: materials.value,\n              });\n            }\n            break;\n          }\n          case \"school\": {\n            if (item.system.subschool) {\n              details.push({\n                key: game.i18n.localize(\"PF1.Subschool\"),\n                value: pf1.utils.i18n.join([...(item.system.subschool.names ?? [])]),\n              });\n            }\n\n            if (item.system.descriptors?.total?.size) {\n              details.push({\n                key: game.i18n.localize(\"PF1.DescriptorPlural\"),\n                value: pf1.utils.i18n.join([...(item.system.descriptors.names ?? [])], \"conjunction\", false),\n              });\n            }\n\n            const action = item.defaultAction;\n\n            if (action?.hasDamage) {\n              const types = action.damage?.parts?.map((d) => d.names).flat() ?? [];\n\n              if (types.length) {\n                details.push({\n                  key: game.i18n.localize(\"PF1.Damage\"),\n                  value: pf1.utils.i18n.join(types),\n                });\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n      // Generics\n      case \"generic\": {\n        const [target, subTarget] = detail.split(\".\");\n        switch (target) {\n          case \"attack\": {\n            paths.push(\n              { path: \"@attributes.attack.shared\", value: system.attributes.attack.shared },\n              { path: \"@attributes.attack.general\", value: system.attributes.attack.general },\n              { path: `@attributes.attack.${subTarget}`, value: system.attributes.attack[subTarget] }\n            );\n\n            const abl = system.attributes.attack[`${subTarget}Ability`];\n\n            sources.push(\n              { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") },\n              {\n                sources: [\n                  {\n                    name: pf1.config.abilities[abl] || abl,\n                    value: lazy.rollData.abilities?.[abl]?.mod ?? 0,\n                  },\n                ],\n              }\n            );\n\n            sources.push({\n              sources: [\n                {\n                  name: game.i18n.localize(\"PF1.Size\"),\n                  value: Object.values(pf1.config.sizeMods)[system.traits.size.value],\n                },\n              ],\n            });\n\n            sources.push({ sources: actor.getSourceDetails(\"system.attributes.attack.general\") });\n            sources.push({ sources: actor.getSourceDetails(`system.attributes.attack.${subTarget}`) });\n\n            notes = [...(await getNotes(\"attack\")), ...(await getNotes(subTarget))];\n\n            break;\n          }\n        }\n        break;\n      }\n      default:\n        throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Event} event - Triggering event\n   * @param {Function} callback - Submission handler\n   */\n  _onSpanTextInput(event, callback) {\n    const el = event.target;\n    const parent = el.parentElement;\n\n    const isNumber = el.dataset.dtype === \"Number\" || el.type === \"number\";\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(\"INPUT\");\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) {\n      newEl.dataset.dtype = el.dataset.dtype;\n      if (isNumber) newEl.size = 12; // HTML defaults to 20\n    }\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n    const name = el.getAttribute(\"name\"); // span has no .name attribute even if name=\"\" is used\n\n    let prevValue = 0,\n      maxValue;\n\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.actor, name) || 0;\n      if (name.endsWith(\".value\") && !noCap && isNumber) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.actor, maxName);\n      }\n    } else {\n      if (!el.classList.contains(\"placeholder\")) {\n        prevValue = isNumber ? parseFloat(el.innerText || \"0\") : el.innerText || \"\";\n      }\n    }\n\n    // Add constraints if they exist\n    if (el.dataset.min) newEl.min = el.dataset.min;\n    if (el.dataset.step) newEl.step = el.dataset.step;\n    if (el.dataset.max) newEl.max = el.dataset.max;\n\n    // Set value of new input element\n    newEl.value = `${prevValue || 0}`;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = isNumber ? parseFloat(el.dataset.clearValue || \"0\") : \"\";\n\n    // Replace span with input element\n    parent.replaceChild(newEl, el);\n\n    let changed;\n    newEl.addEventListener(\n      \"change\",\n      (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // Prevent Foundry acting on this\n        changed = true;\n\n        let newValue;\n        if (allowRelative) {\n          newValue = pf1.utils.internal.adjustNumberByStringCommand(prevValue, newEl.value, maxValue, clearValue);\n          newEl.value = newValue;\n        } else {\n          newValue = parseFloat(newEl.value || \"0\");\n        }\n\n        // Reset if nothing changed\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n        // Pass it to callback\n        else {\n          newEl.readOnly = true;\n          callback(event, el);\n        }\n      },\n      { once: true }\n    );\n\n    newEl.addEventListener(\n      \"focusout\",\n      (event) => {\n        if (changed) return;\n\n        const newValue = parseFloat(newEl.value || \"0\");\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n      },\n      { passive: true, once: true }\n    );\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  /**\n   * @internal\n   * @param {DragEvent} event - Drag start event\n   */\n  _onDragSkillStart(event) {\n    const elem = event.currentTarget;\n    const skillElem = elem.closest(\".skill\");\n    const mainSkill = skillElem.dataset.skill;\n    const subSkill = skillElem.dataset.subSkill;\n\n    const result = {\n      type: \"skill\",\n      uuid: this.actor.uuid,\n      skill: subSkill ? `${mainSkill}.${subSkill}` : mainSkill,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * @param {DragEvent} event - Drag start event\n   * @param {\"bab\"|\"cmb\"|\"defenses\"|\"concentration\"|\"cl\"|\"initiative\"|\"abilityScore\"|\"attack\"} type\n   * @param {string} [subType] Type specific subtype\n   */\n  _onDragMiscStart(event, type, subType) {\n    const result = {\n      type,\n      uuid: this.actor.uuid,\n    };\n\n    switch (type) {\n      case \"bab\":\n      case \"cmb\":\n      case \"initiative\":\n      case \"defenses\":\n        // No special handling\n        break;\n      case \"concentration\":\n      case \"cl\": {\n        const elem = event.currentTarget.closest(\".tab.spellbook-group\");\n        result.bookId = elem.dataset.tab;\n        break;\n      }\n      case \"abilityScore\":\n        result.ability = subType;\n        break;\n      case \"attack\":\n        result.attack = subType;\n        break;\n      default:\n        throw new Error(`Unrecognized drag source: ${type}`);\n    }\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  _onDragSaveStart(event, type) {\n    const result = {\n      type: \"save\",\n      save: type,\n      uuid: this.actor.uuid,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * Initialize Item list filters by activating the set of filters which are currently applied\n   *\n   * @private\n   * @param _i\n   * @param {Element} ul\n   */\n  _initializeFilterItemList(_i, ul) {\n    const filters = ul.querySelectorAll(\".filter-rule\");\n    for (const li of filters) {\n      const set = (this._filters.sections[li.dataset.category] ??= new Set());\n      if (set.has(li.dataset.filter)) li.classList.add(\"active\");\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  async _onRest(event) {\n    event.preventDefault();\n\n    const skipDialog = pf1.documents.settings.getSkipActionPrompt();\n    if (skipDialog) {\n      const button = event.currentTarget;\n      button.disabled = true;\n      try {\n        await this.actor.performRest({ verbose: true });\n      } finally {\n        button.disabled = false;\n      }\n    } else {\n      const app = Object.values(this.actor.apps).find((app) => app instanceof ActorRestDialog);\n      if (app) {\n        app.render(true);\n        app.bringToFront();\n      } else new ActorRestDialog({ document: this.actor }).render({ force: true });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemCard(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard(undefined, { token: this.token });\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setItemUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n\n    this._mouseWheelAdd(event, el);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", this._commitItemUsesBound, { passive: true, once: true });\n    } else {\n      this._commitItemUses(event);\n    }\n  }\n\n  /**\n   * Commit changes from {@link _setItemUses}\n   *\n   * @internal\n   * @param {Event} event\n   * @returns {Promise}\n   */\n  async _commitItemUses(event) {\n    const el = event.currentTarget;\n    /** @type {string} */\n    const itemId = el.closest(\".item\").dataset.itemId;\n    /** @type {ItemPF} */\n    const item = this.actor.items.get(itemId);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    return item.addCharges(value - item.charges);\n  }\n  _commitItemUsesBound = this._commitItemUses.bind(this); // To avoid multiple anonymous function registrations\n\n  _setSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.value ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.preparation.value\", value);\n    if (prevValue < value) {\n      const maxValue = item.system.preparation.max ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(maxValue, value));\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _setMaxSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.max ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(0, value));\n    if (prevValue > value) {\n      const curValue = item.system.preparation.value ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.value\", Math.min(curValue, value));\n    }\n    if (value < 0) {\n      el.tagName === \"INPUT\" ? (el.value = 0) : (el.innerText = 0);\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _adjustActorPropertyBySpan(event, oldEl) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    this._mouseWheelAdd(event, el);\n\n    // Get base value\n    const rawValue = el.tagName === \"INPUT\" ? el.value : el.innerText;\n    let value = el.dataset.dtype === \"String\" ? rawValue : Number(rawValue);\n\n    // Adjust value if needed\n    const name = el.getAttribute(\"name\"); // .name is not available on non-inputs\n    if (name.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.value$/)) {\n      if (Number.isNaN(parseInt(value))) value = null;\n      else value = parseInt(value);\n    }\n\n    // Add constraints if any\n    if (el.min) value = Math.max(Number(el.min), value);\n    if (el.max) value = Math.min(Number(el.max), value);\n    if (el.step) value = value.toNearest(Number(el.step));\n\n    let updateData;\n    if (name) {\n      if (value === foundry.utils.getProperty(this.actor, name)) {\n        // Restore input\n        if (oldEl) el.parentElement.replaceChild(oldEl, el);\n        return;\n      }\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (event) => this._updateObject(event, this._getSubmitData(updateData)), {\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _setBuffLevel(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.level\", value);\n\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _hideShowElement(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = this.element.find(`.${a.dataset.for}`);\n\n    if (target.hasClass(\"hidden\")) {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-down\").addClass(\"fa-arrow-circle-up\");\n      target.removeClass(\"hidden\");\n      target.hide();\n      target.slideDown(200);\n\n      this._hiddenElems[a.dataset.for] = false;\n    } else {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-up\").addClass(\"fa-arrow-circle-down\");\n      target.slideUp(200, () => target.addClass(\"hidden\"));\n\n      this._hiddenElems[a.dataset.for] = true;\n    }\n  }\n\n  _onToggleCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.statuses.has(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    this.actor.toggleCondition(conditionId);\n  }\n\n  async _onEditCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n    const cond = pf1.registry.conditions.get(conditionId);\n    if (!cond) throw new Error(`Invalid condition ID: ${conditionId}`);\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.statuses.has(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    let ae;\n\n    if (this.actor.statuses.has(conditionId)) {\n      const relevantAEs = [];\n      for (const ae of this.actor.allApplicableEffects()) {\n        if (!ae.active) continue;\n        if (ae.statuses.has(conditionId)) relevantAEs.push(ae);\n      }\n\n      // TODO: Add selector and remove this error message\n      if (relevantAEs.length > 1) {\n        return void ui.notifications.warn(\"PF1.Error.TooManyConditionSources\", { localize: true });\n      }\n\n      ae = relevantAEs[0];\n    }\n\n    const { bottom, left } = a.getBoundingClientRect();\n\n    const rounds = await pf1.utils.dialog.getNumber({\n      title: cond.name + \" – \" + game.i18n.localize(\"PF1.Duration\"),\n      initial: Math.floor((ae?.duration?.seconds ?? 0) / CONFIG.time.roundTime),\n      hint: game.i18n.localize(\"PF1.Time.Period.round.Label\"),\n      min: 0,\n      step: 1,\n      dialog: {\n        position: {\n          top: bottom + 20,\n          left: left - 20,\n        },\n      },\n    });\n\n    if (!Number.isFinite(rounds)) return;\n\n    const updateData = { \"duration.seconds\": rounds * CONFIG.time.roundTime };\n    if (ae) ae.update(updateData);\n    else this.actor.setCondition(conditionId, updateData);\n  }\n\n  /**\n   * Toggle skill lock.\n   *\n   * @param {MouseEvent} event\n   */\n  _onToggleSkillLock(event) {\n    event.preventDefault();\n    this._skillsLocked = !this._skillsLocked;\n\n    const target = event.currentTarget;\n    target.classList.toggle(\"unlocked\", !this._skillsLocked);\n\n    const tab = target.closest(\".tab\");\n    tab.classList.toggle(\"locked\", this._skillsLocked);\n\n    tab.querySelectorAll(\".lockable\").forEach((el) => {\n      if ([\"INPUT\", \"SELECT\"].includes(el.tagName)) {\n        el.disabled = this._skillsLocked;\n      } else {\n        el.classList.toggle(\"hide-contents\", this._skillsLocked);\n      }\n    });\n  }\n\n  /**\n   * Handle opening a compendium browser\n   *\n   * @private\n   * @param {Event} event   The originating click event\n   */\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const [cat0, cat1] = a.dataset.source?.split(\".\") ?? [];\n\n    const cfg = pf1.config.sheetSections[cat0]?.[cat1]?.browse ?? {\n      category: a.dataset.category || cat0,\n      type: a.dataset.type,\n    };\n\n    const browser = pf1.applications.compendiums[cfg.category];\n    if (!browser) throw new Error(`Could not find \"${cfg.category}\" browser`);\n\n    const filters = {};\n\n    // Basic filters\n    for (const [key, value] of Object.entries(cfg)) {\n      if ([\"level\", \"category\"].includes(key)) continue;\n      filters[key] = (Array.isArray(value) ? value : [value]).filter((i) => i);\n      if (key === \"classType\" && this.actor.type === \"npc\") {\n        filters[key] = [...filters[key], \"npc\", \"racial\"];\n      }\n    }\n\n    // Inline filter customization\n    const custom = a.dataset.filters;\n    if (custom) {\n      const parts = custom.split(\";\");\n      for (const part of parts) {\n        const [key, value] = part.split(\"=\");\n        filters[key] = value.split(\",\");\n      }\n    }\n\n    // Special handling for level\n    if (cfg.level && a.dataset.level) {\n      filters.level = a.dataset.level;\n      const bookId = a.closest(\"[data-group][data-tab]\")?.dataset.tab;\n      if (bookId) {\n        const clsId = this.actor.system.attributes?.spells?.spellbooks?.[bookId]?.class;\n        if (clsId && clsId !== \"_hd\") {\n          filters.class = clsId;\n        }\n      }\n    }\n\n    browser._queueFilters(filters);\n    browser._render(true, { focus: true });\n  }\n\n  /**\n   * Handle opening a skill's compendium entry\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onOpenCompendiumEntry(event) {\n    const uuid = event.currentTarget.dataset.compendiumEntry;\n\n    pf1.utils.openJournal(uuid);\n  }\n\n  _onRollConcentration(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollConcentration(spellbookKey, { token: this.token });\n  }\n\n  _onRollCL(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollCL(spellbookKey, { token: this.token });\n  }\n\n  _setItemActive(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const state = el.checked;\n    const itemId = el.closest(\".item\").dataset.itemId;\n\n    this.actor.items.get(itemId).setActive(state);\n  }\n\n  _onLevelUp(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    return LevelUpForm.increaseLevel(this.actor, item, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this.openItemSummary(li);\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @protected\n   * @param {JQuery<HTMLElement>} elem - The element to open. Likely will have the `item` class in CSS.\n   * @param {boolean} [instant=false] - Whether to instantly show the expansion (true), or animate it (false)\n   */\n  async openItemSummary(elem, { instant = false, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const listEl = elem.closest(\".item-list[data-list]\");\n    const list = listEl?.dataset.list;\n    const tab = listEl?.closest(\".tab[data-tab]\").dataset.tab;\n    const expandedId = `${tab}.${list}.${itemId}`;\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    // Toggle summary\n    if (elem.classList.contains(\"expanded\")) {\n      this._expandedItems.delete(expandedId);\n      const summary = elem.querySelector(\".item-summary\");\n      summary.inert = true;\n      if (instant) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const chatData = await item.getChatData({ chatcard: false, rollData });\n      const templateData = chatData;\n\n      const content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      let div = document.createElement(\"div\");\n      div.innerHTML = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.actor.isOwner });\n      div = div.firstElementChild; // The template has only one root element\n\n      if (!instant) $(div).hide();\n      elem.append(div);\n      if (!instant) $(div).slideDown(200);\n\n      this._expandedItems.add(expandedId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onInputText(event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    if (!elem || elem?.disabled) return;\n\n    elem.readOnly = false;\n    const value = foundry.utils.getProperty(this.actor, elem.name);\n\n    const origValue = elem.value;\n    elem.value = value;\n\n    let changed = false;\n\n    const wheelEvent = event instanceof WheelEvent;\n    if (wheelEvent) {\n      this._mouseWheelAdd(event, elem);\n    } else {\n      elem.select();\n    }\n\n    const handler = (event) => {\n      // Clear selection if any\n      const s = document.getSelection();\n      if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n\n      if (wheelEvent) elem.removeEventListener(\"pointerout\", handler);\n      else {\n        elem.removeEventListener(\"focusout\", handler);\n        elem.removeEventListener(\"keydown\", keyHandler);\n      }\n      elem.removeEventListener(\"click\", handler);\n\n      changed ||= `${value}` !== elem.value;\n\n      if (changed) {\n        this._onSubmit(event);\n      } else {\n        elem.readOnly = true;\n        elem.value = origValue;\n      }\n    };\n    const keyHandler = (event) => {\n      if (event.key === \"Enter\") {\n        changed = true;\n        handler(event);\n      }\n    };\n\n    if (wheelEvent) {\n      elem.addEventListener(\"pointerout\", handler, { passive: true });\n      changed = true;\n    } else {\n      elem.addEventListener(\"focusout\", handler, { passive: true });\n      elem.addEventListener(\"keydown\", keyHandler, { passive: true });\n    }\n    elem.addEventListener(\"click\", handler, { passive: true });\n  }\n\n  /* -------------------------------------------- */\n\n  async _onArbitrarySkillCreate(event) {\n    event.preventDefault();\n    const skillId = $(event.currentTarget).parents(\".skill\").attr(\"data-skill\");\n    const mainSkillData = this.actor.system.skills[skillId];\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: mainSkillData.ability,\n      rank: 0,\n      rt: mainSkillData.rt,\n      cs: mainSkillData.cs,\n      acp: mainSkillData.acp,\n    };\n\n    // Get tag\n    let count = 1;\n    let tag = `${skillId}${count}`;\n    while (mainSkillData.subSkills[tag] != null) {\n      count++;\n      tag = `${skillId}${count}`;\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${skillId}.subSkills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(skillId, tag);\n  }\n\n  async _onSkillCreate(event) {\n    event.preventDefault();\n    const isBackground = $(event.currentTarget).parents(\".skills-list\").attr(\"data-background\") === \"true\";\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: \"int\",\n      rank: 0,\n      mod: 0,\n      rt: false,\n      cs: false,\n      acp: false,\n      background: isBackground,\n      custom: true,\n    };\n\n    const baseName = skillData.name || \"skill\";\n    const baseTag = pf1.utils.createTag(baseName, { allowUnderScore: false });\n    let tag = baseTag;\n    let count = 1;\n    while (this.actor.system.skills[tag] != null) {\n      count++;\n      tag = baseTag + count.toString();\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(tag);\n  }\n\n  /**\n   * Opens a dialog to edit a skill.\n   *\n   * @param {string} skillId - The id of the skill in question.\n   * @param {string} [subSkillId] - The id of the subskill, if appropriate.\n   * @returns {Promise.<void>}\n   */\n  _editSkill(skillId, subSkillId) {\n    return new Promise((resolve) => {\n      const app = new pf1.applications.SkillEditor(this.actor, skillId, subSkillId);\n      app.addCallback(resolve);\n      app.render(true);\n    });\n  }\n\n  _onSkillEdit(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n\n    return this._editSkill(mainSkillId, subSkillId);\n  }\n\n  async _onSkillDelete(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n    const skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const info = this.actor.getSkillInfo(skillId);\n\n    const deleteSkill = () => {\n      const updateData = {};\n      // Delete subskill\n      if (subSkillId) updateData[`system.skills.${mainSkillId}.subSkills.-=${subSkillId}`] = null;\n      // Delete main skill\n      else updateData[`system.skills.-=${mainSkillId}`] = null;\n      this.actor.update(updateData);\n    };\n\n    let confirm = true;\n    if (!getSkipActionPrompt()) {\n      confirm = await foundry.applications.api.DialogV2.confirm({\n        window: { title: game.i18n.format(\"PF1.DeleteSkillTitle\", { name: info.fullName }), icon: \"fa-solid fa-trash\" },\n        content: `<p>${game.i18n.localize(\"PF1.DeleteSkillConfirmation\")}</p>`,\n        rejectClose: false,\n        modal: true, // Prevent other interactions until this dialog is resolved,\n      });\n    }\n    if (confirm) deleteSkill();\n  }\n\n  async _onPointBuyCalculator(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((app) => app instanceof PointBuyCalculator);\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new PointBuyCalculator({ document: this.actor }).render({ force: true });\n  }\n\n  async _onSensesSelector(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((app) => app instanceof pf1.applications.SensesSelector);\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new pf1.applications.SensesSelector({ document: this.actor }).render({ force: true });\n    }\n  }\n\n  async _onControlAlignment(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const items = Object.entries(pf1.config.alignmentsShort).map(([value, label]) => ({ value, label }));\n    const w = new Widget_ItemPicker(\n      (alignment) => {\n        this.actor.update({ \"system.details.alignment\": alignment });\n      },\n      { items, columns: 3 }\n    );\n    w.render($(a));\n  }\n\n  /**\n   * Activate an item from item control button.\n   *\n   * @param {MouseEvent} event Click event\n   */\n  _itemActivationControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.use({ ev: event, token: this.token });\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n\n    if (item.type === \"container\") newQuantity = Math.min(newQuantity, 1);\n\n    item.update({ \"system.quantity\": newQuantity });\n  }\n\n  async _quickEquipItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.setActive(!item.activeState);\n  }\n\n  async _quickCarryItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.carried\": !item.system.carried });\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.identified\": !item.system.identified });\n    }\n  }\n\n  async _itemPreparedToggle(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const property = el.dataset.name;\n\n    const updateData = { system: {} };\n    foundry.utils.setProperty(updateData.system, property, foundry.utils.getProperty(item.system, property) ? 0 : 1);\n    item.update(updateData);\n  }\n\n  /**\n   * Prepare duplicate item data\n   *\n   * @param {object} itemData\n   * @param {object} options\n   * @param {boolean} [options.rename]\n   * @param {ItemPF} [options.original]\n   */\n  _prepareDuplicateItem(itemData, { rename = true, original } = {}) {\n    delete itemData._id;\n\n    delete itemData.system.links?.children;\n    delete itemData.system.links?.charges;\n\n    itemData.sort = itemData.sort + 1_000;\n\n    if (original) {\n      itemData._stats ??= {};\n      itemData._stats.duplicateSource ||= original.uuid;\n    }\n\n    if (rename) {\n      // Build list of visible names in same general category.\n      const subType = itemData.system?.subType;\n      const relatedItems = this.actor.items.filter(\n        (i) =>\n          i.type === itemData.type &&\n          (subType ? subType === i.system?.subType : true) &&\n          (itemData.type === \"spell\" ? itemData.system.level === i.system.level : true)\n      );\n\n      const searchUnusedName = (name, existingNames) => {\n        name = name.replace(/\\s+\\(\\d+\\)$/, \"\");\n        let iter = 1;\n        let newName;\n        do {\n          iter += 1;\n          newName = `${name} (${iter})`;\n        } while (existingNames.has(newName));\n        return newName;\n      };\n\n      // Alter identified name\n      const identNames = new Set(relatedItems.map((i) => i.name)); // Explicit real name\n      itemData.name = searchUnusedName(itemData.name, identNames);\n\n      // Alter unidentified name if it exists\n      const unidentified = itemData.system.unidentified;\n      if (unidentified?.name && CONFIG.Item.documentClasses[itemData.type]?.isPhysical) {\n        const unidentNames = new Set(relatedItems.map((i) => i.getName(true))); // Player visible names instead of unidentified names\n        unidentified.name = searchUnusedName(unidentified.name, unidentNames);\n      }\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const itemData = item.toObject();\n\n    this._prepareDuplicateItem(itemData, { original: item });\n\n    await Item.implementation.create(itemData, { parent: this.actor, renderSheet: true });\n  }\n\n  _quickAction(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    if (!item) return;\n\n    return item.use({ token: this.token });\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n    const category = a.dataset.category;\n\n    this.actor.convertCurrency(category, currencyType);\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n\n    createData.name = Item.implementation.defaultName({ type, subType, parent: this.actor });\n    const newItem = new Item.implementation(createData);\n\n    // Add type specific data\n    switch (type) {\n      case \"spell\": {\n        newItem.updateSource({\n          system: {\n            level: parseInt(el.dataset.level),\n            spellbook: el.dataset.book,\n          },\n        });\n        break;\n      }\n      case \"feat\":\n        // Add class association to class features\n        if (newItem.subType === \"classFeat\" && !newItem.system.class) {\n          const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n          if (classes.length > 0) {\n            newItem.updateSource({ system: { class: classes[0].system.tag } });\n          }\n        }\n        break;\n    }\n\n    this._sortNewItem(newItem);\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) {\n        newName = `${baseName} (${i++})`;\n      }\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    return Item.implementation.create(newItem.toObject(), { parent: this.actor, renderSheet: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle editing an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true });\n  }\n\n  /**\n   * Handle deleting an existing Owned Item for the Actor\n   *\n   * @private\n   * @param {Event} event   The originating click event\n   * @returns {Promise<*>} - Promise for when the interaction completes\n   */\n  async _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    button.disabled = true;\n\n    if (getSkipActionPrompt()) return item.delete();\n\n    // Find linked items that would be deleted with this\n    const linked = new Set();\n    /**\n     * @param {ItemPF} item\n     */\n    const findAllLinks = (item) => {\n      linked.add(item);\n      const links = item.getLinkedItemsSync(\"children\");\n      for (const i of links) {\n        if (linked.has(i)) continue;\n        findAllLinks(i);\n      }\n    };\n    findAllLinks(item);\n    // Find class associations\n    if (item.type === \"class\") {\n      const associations = item.getFlag(\"pf1\", \"links.classAssociations\") ?? {};\n      for (const itemId of Object.keys(associations)) {\n        const item = this.actor.items.get(itemId);\n        if (item) linked.add(item);\n      }\n    }\n    linked.delete(item); // Don't notify about self\n\n    const templateData = {\n      linked: [...linked].map((i) => ({\n        name: i.name,\n        uuid: i.uuid,\n        type: game.i18n.localize(CONFIG.Item.typeLabels[i.type]),\n      })),\n    };\n\n    const msg = await renderTemplate(\"systems/pf1/templates/internal/delete-item.hbs\", templateData);\n\n    const confirm = await foundry.applications.api.DialogV2.confirm({\n      window: { title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }), icon: \"fa-solid fa-trash\" },\n      classes: [\"pf1-v2\", \"delete-item\"],\n      content: msg,\n      rejectClose: false,\n      modal: true, // Require dialog to be resolved\n    });\n\n    if (confirm) item.delete();\n\n    button.disabled = false;\n  }\n\n  async _onItemGive(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const targets = game.actors.filter(\n      (a) => a !== this.actor && a.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)\n    );\n    if (targets.length === 0) ui.notifications.warn(\"PF1.Error.NoGiftTargets\", { localize: true });\n\n    const targetActorId = await pf1.utils.dialog.getActor({\n      window: {\n        title: game.i18n.localize(\"PF1.GiveItemToActor\"),\n      },\n      actors: targets,\n    });\n\n    const target = game.actors.get(targetActorId);\n    if (!target) throw new Error(`Invalid actor ID as gift target: \"${targetActorId}\"`);\n\n    if (target.isOwner) {\n      const itemData = item.toObject();\n      delete itemData.system?.links?.children;\n      const newItem = await Item.implementation.create(itemData, { parent: target });\n      // Delete only if item was successfully created\n      if (newItem) await item.delete();\n    } else {\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"giveItem\",\n        targetActor: target.uuid,\n        item: item.uuid,\n      });\n      // Deleting will be performed on the gm side as well to prevent race conditions\n    }\n  }\n\n  async _onItemSplit(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const quantity = item.system.quantity;\n    if (quantity < 2) throw new Error(\"Can't split stack with less than 2 items\");\n\n    const options = {\n      total: quantity,\n      title: game.i18n.format(\"PF1.Dialog.SplitItem.Title\", { name: item.name }),\n    };\n\n    // Position the dialog near click location\n    const clickEl = event.target.getBoundingClientRect();\n    const renderOpts = {\n      position: {\n        width: 320,\n        left: clickEl.left - 350,\n        top: clickEl.top - 80,\n      },\n    };\n\n    const result = await pf1.applications.SplitStack.wait(options, renderOpts);\n    if (!result) return;\n\n    const [keep, split] = result;\n\n    const itemData = item.toObject();\n    itemData.system.quantity = split;\n\n    this._prepareDuplicateItem(itemData, { rename: false, original: item });\n\n    await Item.implementation.createDocuments([itemData], { parent: this.actor });\n    await item.update({ \"system.quantity\": keep });\n  }\n\n  /**\n   * Handle rolling an Ability check, either a test or a saving throw\n   *\n   * @protected\n   * @param {Event} event   The originating click event\n   */\n  _onRollAbilityTest(event) {\n    event.preventDefault();\n\n    /** @type {AbilityId} */\n    const ability = event.currentTarget.closest(\".ability\").dataset.ability;\n    this.actor.rollAbilityTest(ability, { token: this.token });\n  }\n\n  /**\n   * Roll basic BAB check\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollBAB(event) {\n    event.preventDefault();\n\n    this.actor.rollBAB({ token: this.token });\n  }\n\n  /**\n   * Roll generic attack\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollAttack(event) {\n    event.preventDefault();\n    /** @type {HTMLElement} */\n    let el = event.target;\n    if (!el.classList.contains(\"rollable\")) el = el.closest(\".rollable\");\n\n    const maneuver = el.dataset.type !== \"weapon\";\n    const ranged = el.dataset.ranged === \"true\";\n\n    this.actor.rollAttack({ maneuver, ranged, token: this.token });\n  }\n\n  /**\n   * Roll initiative\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollInitiative(event) {\n    event.preventDefault();\n\n    this.actor.rollInitiative({\n      createCombatants: true,\n      rerollInitiative: game.user.isGM,\n      token: this.token,\n    });\n  }\n\n  /**\n   * Roll saving throw\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollSavingThrow(event) {\n    event.preventDefault();\n\n    /** @type {SaveId} */\n    const saveId = event.currentTarget.closest(\".saving-throw\").dataset.savingthrow;\n    this.actor.rollSavingThrow(saveId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) return false;\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items\n   *\n   * @protected\n   * @param {object} context - Render context\n   */\n  _prepareItems(context) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Partition items by category\n    const [items, spells, other] = context.items.reduce(\n      (arr, item) => {\n        if (item.type === \"spell\") arr[1].push(item);\n        else if (item.isPhysical) arr[0].push(item);\n        else arr[2].push(item);\n        return arr;\n      },\n      [[], [], []]\n    );\n\n    // Organize Spellbook\n    let hasASF = false;\n    let hasSpellbooks = false;\n    const spellbookSections = {};\n    const spellbooks = context.system.attributes.spells.spellbooks;\n    for (const [bookId, spellbook] of Object.entries(spellbooks)) {\n      // Required for spellbook selection in settings\n      spellbookSections[bookId] = { ...spellbook };\n      // The rest are unnecessary processing if spellbook is not enabled\n      if (!spellbook.inUse) continue;\n      hasSpellbooks = true;\n      const book = spellbookSections[bookId];\n      const spellbookSpells = spells.filter((obj) => obj.spellbook === bookId);\n      book.sections = this._prepareSpellbook(context, spellbookSpells, bookId);\n      book.prepared = spellbookSpells.filter(\n        (obj) => obj.preparation.mode === \"prepared\" && obj.preparation.prepared\n      ).length;\n      book.rollData = context.rollData.spells[bookId];\n      book.classId = spellbook.class;\n      book.class = context.rollData.classes[spellbook.class];\n      if (spellbook.arcaneSpellFailure) hasASF = true;\n    }\n\n    if (hasASF) {\n      // TODO: Make ASF proper change target\n      const asf = this.actor.itemTypes.equipment\n        .filter((item) => item.isActive)\n        .reduce((cur, item) => {\n          const itemASF = item.system.spellFailure || 0;\n          return cur + itemASF;\n        }, 0);\n\n      context.asf = {\n        total: asf,\n      };\n    }\n\n    // Class selection list, only used by spellbooks\n    if (hasSpellbooks) {\n      const lang = game.settings.get(\"core\", \"language\");\n      const allClasses = this.actor.itemTypes.class\n        .map((cls) => [cls.system.tag, cls.name])\n        .sort(([_0, a], [_1, b]) => a.localeCompare(b, lang));\n      allClasses.unshift([\"_hd\", game.i18n.localize(\"PF1.HitDie\")]);\n      context.classList = Object.fromEntries(allClasses);\n    }\n\n    // Implant capacity\n    const ct = game.settings.get(\"pf1\", \"cybertech\");\n    // All implanted cybertech applies, even disabled as long as they're implanted\n    const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n    if (ct || cybertech.length) {\n      const load = cybertech.reduce((total, item) => total + (item.system.implant || 0), 0);\n      const abilities = this.actor.system.abilities ?? {};\n      context.implants = {\n        load,\n        max: Math.min(abilities.int?.total, abilities.con?.total),\n      };\n    }\n\n    // Organize Inventory\n    for (const item of items) {\n      const section = inventory.find((section) => this._applySectionFilter(item, section));\n      if (section) {\n        this._prepareItemForSection(item, section, context);\n        section.items ??= [];\n        section.items.push(item);\n      }\n    }\n\n    // Remove implant section if cybertech is disabled and no implants are present\n    if (!ct && this.actor.itemTypes.implant.length === 0) {\n      inventory.findSplice((cat) => cat.id === \"implants\");\n    }\n\n    // Organize Features\n    const featureSections = Object.values(pf1.config.sheetSections.features)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const ablType = i.abilityType;\n      i.typelabel = pf1.config.abilityTypes[ablType]?.short || pf1.config.abilityTypes.na.short;\n\n      const section = featureSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    if (this.actor.itemTypes.feat.length) {\n      const section = featureSections.find((f) => f.path === \"features.feat\");\n      section.issues = {\n        found: context.featCount?.issues > 0,\n        missing: context.featCount?.missing || 0,\n        excess: context.featCount?.excess || 0,\n        get discrepancy() {\n          if (!pf1.config.featCount) return 0;\n          return Math.abs(this.missing - this.excess);\n        },\n      };\n    }\n\n    // Buffs\n    const buffSections = Object.values(pf1.config.sheetSections.buffs)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of other) {\n      const section = buffSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Attacks\n    let attackSections = Object.values(pf1.config.sheetSections.combat)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // TODO: Support weapons in combat tab\n    for (const i of other) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Add secondary references to items in certain sections\n    // Unlike others, these are in addition to the normal locations instead of exclusive\n    // TODO: Refactor this to be controlled by the sections config\n    const cweapons = attackSections.find((c) => c.id === \"weapon\");\n    if (cweapons) cweapons.items = items.filter((i) => i.type === \"weapon\" && i.document.system.showInCombat);\n    const cspells = attackSections.find((c) => c.id === \"spell\");\n    if (cspells) cspells.items = spells.filter((i) => i.document.system.showInCombat);\n    const feats = other.filter((i) => i.type === \"feat\" && i.document.system.showInCombat);\n    const cfeat = attackSections.find((c) => c.id === \"feat\");\n    if (cfeat) cfeat.items = feats.filter((i) => i.subType === \"feat\");\n    const classfeat = attackSections.find((c) => c.id === \"classFeat\");\n    if (classfeat) classfeat.items = feats.filter((i) => i.subType === \"classFeat\");\n    const racefeat = attackSections.find((c) => c.id === \"racial\");\n    if (racefeat) racefeat.items = feats.filter((i) => i.subType === \"racial\");\n    const cequipment = attackSections.find((c) => c.id === \"equipment\");\n    if (cequipment) cequipment.items = items.filter((i) => i.type === \"equipment\" && i.document.system.showInCombat);\n    const cconsumables = attackSections.find((c) => c.id === \"consumable\");\n    if (cconsumables)\n      cconsumables.items = items.filter((i) => i.type === \"consumable\" && i.document.system.showInCombat);\n\n    // Hide empty sections if they're marked to be hidden\n    attackSections = attackSections.filter((i) => !(i.hideEmpty && !(i.items?.length > 0)));\n\n    // Classes\n    const classSections = Object.values(pf1.config.sheetSections.classes)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const section = classSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    const categories = [\n      { key: \"inventory\", sections: inventory },\n      { key: \"features\", sections: featureSections },\n      { key: \"buffs\", sections: buffSections },\n      { key: \"attacks\", sections: attackSections },\n    ];\n\n    for (const [bookId, sb] of Object.entries(spellbookSections)) {\n      if (!sb.inUse) continue;\n      if (!sb.sections) console.warn(bookId, sb);\n      categories.push({ key: `spellbook-${bookId}`, sections: sb.sections });\n    }\n\n    // Apply section filters\n    for (const cat of categories) {\n      const set = this._filters.sections[cat.key];\n      if (!set) continue;\n\n      for (const section of cat.sections) {\n        if (!section) continue;\n\n        this._filterSection(cat, section, set);\n      }\n    }\n\n    // Assign and return\n    context.inventory = inventory;\n    context.spellbookData = spellbookSections;\n    context.features = featureSections;\n    context.buffs = buffSections;\n    context.attacks = attackSections;\n    context.classes = classSections;\n    context.quickActions = this.actor.getQuickActions();\n  }\n\n  /**\n   * Filter inventory section\n   *\n   * Called in {@link _prepareItems()}\n   *\n   * @internal\n   * @param {object} category - Category data\n   * @param {object} section - Section data\n   * @param {Set<string>} filters - Active filters\n   */\n  _filterSection(category, section, filters) {\n    // Prepare special filters\n    let min = 0;\n    section._preparedOnly = filters.has(\"prepared\");\n    section._hideEmpty = filters.has(\"empty\");\n    if (section._preparedOnly) min += 1;\n    if (section._hideEmpty) min += 1;\n\n    const inFilters = filters.has(section.id);\n\n    section._hidden = filters.size > min && !inFilters;\n\n    // Special handling for prepared filter\n    if (section._preparedOnly) {\n      section.items = section.items.filter((i) => i.maxCharges > 0);\n    }\n    // Hide empty section if filtered for it\n    if (section._hideEmpty && !inFilters && !(section.items?.length > 0)) {\n      section._hidden = true;\n    }\n  }\n\n  /**\n   * Handle rolling a Skill check\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollSkillCheck(event) {\n    event.preventDefault();\n    const el = event.target;\n    const skill = el.dataset.skill;\n    const subSkill = el.dataset.subSkill;\n    const skillId = subSkill ? `${skill}.${subSkill}` : skill;\n\n    this.actor.rollSkill(skillId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling of filters to display a different set of owned items\n   *\n   * @param {Event} event     The click event which triggered the toggle\n   * @private\n   */\n  _onToggleFilter(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget;\n    const { category, filter } = li.dataset;\n    const set = (this._filters.sections[category] ??= new Set());\n\n    const tabLikeFilters = game.settings.get(\"pf1\", \"invertSectionFilterShiftBehaviour\")\n      ? !event.shiftKey\n      : event.shiftKey;\n\n    if (tabLikeFilters) {\n      for (const f of Array.from(set)) {\n        if (f !== filter) {\n          set.delete(f);\n        }\n      }\n    }\n\n    if (set.has(filter)) set.delete(filter);\n    else set.add(filter);\n    this.render();\n  }\n\n  _searchFilterCommit(event) {\n    const actor = this.actor;\n    const search = this._filters.search[event.target.dataset.category].toLowerCase();\n    const category = event.target.dataset.category;\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch[category] === search && !this.searchRefresh) return;\n    this.effectiveSearch[category] = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = actor.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const category = event.target.dataset.category;\n    const changed = this._filters.search[category] !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this._filters.search[category] = search;\n\n    if (event.type === \"input\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const label = a.parentElement.querySelector(\"label\");\n    let choices;\n    if (a.dataset.options in pf1.registry) {\n      let entries = pf1.registry[a.dataset.options];\n      if (a.dataset.resist) entries = entries.filter((e) => e.resist);\n      choices = Object.fromEntries(entries.map((e) => [e.id, e.name]));\n    } else {\n      choices = pf1.config[a.dataset.options];\n    }\n\n    const path = a.dataset.for;\n\n    const options = {\n      name: path,\n      title: label.innerText,\n      subject: a.dataset.options,\n      hasCustom: a.dataset.hasCustom !== \"false\",\n      choices,\n    };\n\n    const app = Object.values(this.actor.apps).find(\n      (app) => app instanceof ActorTraitSelector && app.options.name === options.name\n    );\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new ActorTraitSelector({ ...options, document: this.actor }).render({ force: true });\n  }\n\n  /**\n   * Handle spawning the ActorResistanceSelector application which allows a number entry of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onResistanceSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const options = {\n      name: a.dataset.for,\n      title: a.innerText,\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n      width: a.dataset.options === \"dr\" ? 575 : 450,\n      isDR: a.dataset.options === \"dr\",\n    };\n\n    const app = Object.values(this.actor.apps).find(\n      (app) => app instanceof DamageResistanceSelector && app.options.name === options.name\n    );\n\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new DamageResistanceSelector({ document: this.actor, ...options }).render(true);\n    }\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  /** @override */\n  _render(force, options = {}) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n\n  /** @override */\n  async _renderInner(...args) {\n    const jq = await super._renderInner(...args);\n\n    const html = jq[0];\n\n    // Re-open item summaries\n    for (const expandedId of this._expandedItems) {\n      const [tab, listId, itemId] = expandedId.split(\".\");\n      // Only display summaries of items that are still present\n      let elem;\n      if (this.actor.items.has(itemId)) {\n        let parent = html.querySelector(`.tab[data-tab='${tab}']`);\n        if (listId) parent = parent.querySelector(`.item-list[data-list='${listId}']`);\n        elem = parent?.querySelector(`.item[data-item-id=\"${itemId}\"]`);\n      }\n\n      if (elem) this.openItemSummary(elem, { instant: true });\n      // Delete IDs belonging to items no longer found in the actor\n      else this._expandedItems.delete(expandedId);\n    }\n\n    return jq;\n  }\n\n  async _onSubmit(event, { updateData = null, preventClose = false, preventRender = false } = {}) {\n    event.preventDefault();\n\n    if (this._itemUpdates?.length) preventRender = true;\n\n    await super._onSubmit(event, { updateData, preventClose, preventRender });\n\n    // Update items\n    await this._updateItems();\n  }\n\n  async _updateItems() {\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const item = this.actor.items.get(d._id);\n      if (!item) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      delete d._id;\n      await item.update(d);\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    const { currency, amount, containerId, alt } = data;\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: containerId, alt },\n      { actor: this.actor, amount: Object.fromEntries([[currency, parseInt(amount)]]) }\n    ).render(true);\n  }\n\n  /**\n   * @override\n   */\n  async _onDropItem(event, data) {\n    if (!this.actor.isOwner) return void ui.notifications.warn(\"PF1.Error.NoActorPermission\", { localize: true });\n\n    const sourceItem = await Item.implementation.fromDropData(data);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n    const sameActor = sourceItem.actor === this.actor && !data.containerId;\n\n    const itemData = game.items.fromCompendium(sourceItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Handle item sorting within the same actor\n    if (sameActor) return this._onSortItem(event, itemData);\n\n    // Make item unidentified if ALT is held\n    // Alt is used for this as it also hides tokens when placed on scene\n    if (sourceItem.isPhysical && game.user.isGM && event.altKey) {\n      if (itemData.system.identified !== false) {\n        console.debug(\"PF1 | User Input: Alt | Force unidentifying added item:\", itemData.name);\n        itemData.system.identified = false;\n      }\n    }\n\n    // Create the owned item\n    this._alterDropItemData(itemData, sourceItem);\n    const rv = await this._onDropItemCreate(itemData);\n\n    // Remove from container if item was successfully created\n    if (data.containerId && rv?.length && sourceActor === this.actor) {\n      const container = this.actor.allItems.find((o) => o.id === data.containerId);\n      if (container) container.deleteContainerContent(data.itemId);\n    }\n\n    return rv;\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Item data\n   * @param {pf1.documents.item.ItemPF} source - Source item\n   */\n  _alterDropItemData(data, source) {\n    // Identify source location\n    const fromCompendium = !!source.pack;\n    const fromActor = !!source.parent;\n    const fromItemsDir = !fromCompendium && !fromActor && !!source.id;\n\n    // Certain items for NPC should be unidentified by default\n    if (\n      game.user.isGM && // Only do this as GM\n      !this.actor.hasPlayerOwner && // Only if the target sheet is not owned by player\n      this.actor.type !== \"character\" && // It's an NPC actor\n      source.isPhysical && // Physical item\n      fromCompendium && // From compendium, dragging between actors should be ignored\n      data.system.identified !== false && // Is not already unidentifed\n      // We need to check if the item either have Caster Level beyond 0 or it's a drug or poison\n      (source.system?.cl > 0 || [\"drug\", \"poison\"].includes(source.system.subType))\n    ) {\n      console.debug(\"PF1 | Force unidentifying magical/drug/poison item:\", data.name);\n      data.system.identified = false;\n    }\n\n    // Set spellbook to currently viewed one\n    if (data.type === \"spell\") {\n      data.system.spellbook = this.currentSpellbookKey;\n    }\n\n    // Apply actor size to physical items, assuming they're appropriately sized for them\n    // But do so only when the drop originates from compendium or items directory\n    if (source.isPhysical) {\n      if (fromCompendium || fromItemsDir) {\n        data.system.size = this.actor.system.traits?.size?.base || \"med\";\n      }\n    }\n  }\n\n  /**\n   * Sort item at the bottom of the list instead of seemingly random position\n   *\n   * @private\n   * @param {ItemPF} item - Temporary item to do sorting on.\n   */\n  _sortNewItem(item) {\n    const type = item.type;\n\n    const isClass = type === \"class\";\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => (isClass ? true : pf1.utils.isItemSameSubGroup(item, oldItem)))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      item._source.sort = oldItems[0].sort + CONST.SORT_INTEGER_DENSITY;\n    }\n  }\n\n  /**\n   * Adjust item before addition, overriding data\n   *\n   * @internal\n   * @param data\n   * @param {ItemPF} item - Temporary item document before creation\n   */\n  _adjustNewItem(item, data) {\n    item.constructor._adjustNewItem?.(item, data, true);\n  }\n\n  async _onDropItemCreate(itemData) {\n    const itemDatas = itemData instanceof Array ? itemData : [itemData];\n\n    const creationData = [];\n    for (const itemData of itemDatas) {\n      delete itemData._id;\n\n      // Assign associated class if actor has only one class\n      if (itemData.type === \"feat\" && itemData.system?.subType === \"classFeat\") {\n        // Available classes ordered by level\n        const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n        if (classes.length === 0) {\n          // Nothing to do\n        }\n        // Only one choice\n        else if (classes.length === 1) {\n          itemData.system.class = classes[0].system.tag;\n        }\n        // Query which class to associate with\n        else {\n          const options = {\n            window: {\n              title: `${game.i18n.format(\"PF1.SelectSpecific\", {\n                specifier: game.i18n.localize(\"TYPES.Item.class\"),\n              })} - ${itemData.name} - ${this.actor.name}`,\n            },\n            actor: this.actor,\n            empty: true,\n            items: classes,\n            selected: classes[0]?.id, // Default to highest level class\n          };\n\n          // Test if there's more appropriate default class\n          if (classes.length > 1) {\n            const cls = classes.find((cls) => itemData.system?.associations?.classes?.includes(cls.name));\n            if (cls) options.selected = cls.id;\n          }\n\n          const cls = await pf1.utils.dialog.getItem(options);\n          if (cls) itemData.system.class = cls.system.tag;\n          // TODO: Cancel if dialog was closed or no class was selected?\n        }\n      }\n\n      // Import spell as consumable\n      if (itemData.type === \"spell\" && this.currentPrimaryTab !== \"spellbook\") {\n        const spells = this.actor.system.attributes?.spells?.spellbooks ?? {};\n        const spellType = spells[this.currentSpellbookKey]?.kind || \"arcane\";\n\n        const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n          spellType,\n          actor: this.actor,\n          allowSpell: Object.values(spells).some((s) => s.inUse),\n        });\n\n        if (resultData) {\n          creationData.push(resultData);\n          continue;\n        } else if (resultData === null) continue;\n        // else continue with regular spell creation\n      }\n\n      const newItem = new Item.implementation(itemData, { parent: this.actor });\n      this._sortNewItem(newItem);\n      this._adjustNewItem(newItem, itemData);\n\n      // Choose how to import class\n      if (itemData.type === \"class\") {\n        if (!(event && event.shiftKey)) {\n          // Set new class to be always level 1\n          newItem.updateSource({ system: { level: 1 } });\n\n          const cls = await LevelUpForm.addClassWizard(this.actor, newItem.toObject(), { token: this.token });\n          if (cls && itemDatas.length === 1) this._focusTabByItem(cls);\n          continue;\n        }\n      }\n\n      creationData.push(newItem.toObject());\n    }\n\n    if (creationData.length === 1) this._focusTabByItem(creationData[0]);\n\n    return this.actor.createEmbeddedDocuments(\"Item\", creationData);\n  }\n\n  /**\n   * Focuses certain tab based on provided item.\n   *\n   * @internal\n   * @param {*} item\n   */\n  _focusTabByItem(item) {\n    let tabId;\n    switch (item.type) {\n      case \"race\":\n      case \"class\":\n        tabId = \"summary\";\n        break;\n      case \"spell\":\n        // Focus also the subtab\n        this.activateTab(item.system.spellbook || \"primary\", { group: \"spellbooks\" });\n        tabId = \"spellbook\";\n        break;\n      case \"buff\":\n        tabId = \"buffs\";\n        break;\n      case \"feat\":\n        tabId = \"feats\";\n        break;\n      case \"weapon\":\n      case \"equipment\":\n      case \"consumable\":\n      case \"loot\":\n      case \"container\":\n        tabId = \"inventory\";\n        break;\n      case \"attack\":\n        tabId = \"combat\";\n        break;\n    }\n\n    if (tabId) this.activateTab(tabId, { group: \"primary\" });\n  }\n\n  /**\n   * Allow drag start always.\n   * Foundry blocks this if sheet is not editable, which blocks copying items.\n   *\n   * @override\n   * @param {string} selector Selector string\n   */\n  _canDragStart(selector) {\n    // Conditionally block currency transfer\n    if (selector.includes(\".denomination\")) return this.isEditable;\n    return true;\n  }\n\n  _onDragStart(event) {\n    const elem = event.target;\n    if (elem.classList.contains(\"denomination\")) {\n      const isAlt = elem.classList.contains(\"alt-currency\");\n      const denomination = elem.dataset.denomination;\n      const currency = isAlt ? this.actor.system.altCurrency : this.actor.system.currency;\n      const dragData = {\n        actorUuid: this.actor.uuid,\n        type: \"Currency\",\n        alt: isAlt,\n        currency: denomination,\n        amount: currency[denomination],\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } else if (elem.dataset?.skill) {\n      this._onDragSkillStart(event);\n    } else if (elem.dataset?.attribute) {\n      this._onDragMiscStart(event, elem.dataset.attribute);\n    } else if (elem.dataset?.drag) {\n      this._onDragMiscStart(event, elem.dataset.drag);\n    } else if (elem.dataset?.savingthrow) {\n      this._onDragSaveStart(event, elem.dataset.savingthrow);\n    } else if (elem.dataset?.ability) {\n      this._onDragMiscStart(event, \"abilityScore\", elem.dataset.ability);\n    } else if (elem.dataset?.attack) {\n      this._onDragMiscStart(event, \"attack\", elem.dataset.attack);\n    } else {\n      super._onDragStart(event);\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n\n  _updateObject(event, formData) {\n    this.searchRefresh = true;\n\n    return super._updateObject(event, formData);\n  }\n\n  calculateTotalItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((item) => item.isPhysical && item.system.price != null);\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: 1, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  calculateSellItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((o) => o.system.price != null);\n    const sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\") || 0.5;\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: sellMultiplier, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * @override\n   * @param {HTMLElement} form\n   */\n  _disableFields(form) {\n    super._disableFields(form);\n\n    // Ensure search inputs are always functional\n    for (const el of form.getElementsByTagName(\"INPUT\")) {\n      if (el.type === \"search\") el.disabled = false;\n    }\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for player character type actors in the PF system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFCharacter extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"character\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/character-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const context = await super.getData();\n    const xpSettings = game.settings.get(\"pf1\", \"experienceConfig\");\n\n    // Experience Tracking\n    context.disableExperience = xpSettings.disable;\n    context.showXpBar = !xpSettings.disable;\n    if (!xpSettings.disable) {\n      context.minimumExperience = this.actor.getLevelExp(\n        Math.max(0, (this.actor.system.details.level.value ?? 0) - 1),\n        {\n          rollData: context.rollData,\n        }\n      );\n    }\n\n    context.hasClasses = this.actor.itemTypes.class.length > 0;\n\n    // Add level up buttons to classes\n    if (xpSettings.disable !== true && context.hasClasses) {\n      const xp = this.actor.system.details?.xp;\n      if (xp && xp.value >= xp.max) {\n        context.levelUp = true;\n\n        // Max level check\n        const xpTrack = xpSettings.track;\n        if ([\"fast\", \"medium\", \"slow\"].includes(xpTrack)) {\n          const level = this.actor.system.details.level.value;\n          const levels = pf1.config.CHARACTER_EXP_LEVELS[xpTrack];\n          if (level >= levels.length) {\n            context.levelUp = false;\n          }\n        }\n      }\n    } else {\n      context.levelUp = true;\n    }\n\n    // Return data for rendering\n    return context;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for NPC type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFNPC extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"npc\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n\n    // Challenge Rating\n    data.labels.cr = pf1.utils.CR.fromNumber(this.actor.system.details?.cr?.total ?? 0);\n\n    data.levelUp = true;\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Object Updates                              */\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Adjust CR\n    html.find(\"span.text-box.cr-input\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = pf1.utils.CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLite extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"lite\"],\n      width: 440,\n      height: 640,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n    };\n  }\n\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet-lite.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n    context.hasHD = false;\n    return context;\n  }\n\n  _prepareItems(data) {\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of data.items) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLoot extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"loot\"],\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"inventory\", group: \"primary\" },\n      ],\n      width: 620,\n      height: 420,\n    };\n  }\n\n  get template() {\n    return \"systems/pf1/templates/actors/npc-sheet-loot.hbs\";\n  }\n\n  get currentPrimaryTab() {\n    return \"inventory\";\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    data.isLootSheet = true;\n    data.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    data.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    data.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n\n    // Set labels\n    if (!data.labels) data.labels = {};\n    data.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", data.totalValue);\n    data.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", data.sellValue);\n\n    // Alter inventory columns\n    for (const section of data.inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    data.labels.currency = `PF1.Currency.Inline.${this.itemValueDenomination}`;\n\n    return data;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareItem(item) {\n    const result = super._prepareItem(item);\n\n    if (item.isPhysical) {\n      result.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n    }\n\n    return result;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFHaunt extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"haunt\"],\n      width: 880,\n      height: 700,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/haunt-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.details.notes\", \"system.details.effect\", \"system.details.destruction\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @returns {Promise<object>} The data object to render the sheet\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.actor.system,\n      measureTemplateTypes: pf1.utils.internal.getTemplateTypes(),\n      hasHD: false,\n      fields: this.actor.system.schema.fields,\n      units: game.i18n.localize(\n        pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n      ),\n    };\n\n    const rollData = this.actor.getRollData();\n    context.rollData = rollData;\n\n    // Labels\n    context.labels = {\n      cr: pf1.utils.CR.fromNumber(context.system.details.cr.total),\n      alignment: context.config.alignments[context.system.details.alignment],\n    };\n\n    const auraStrength = context.rollData.auraStrength;\n    if (auraStrength) {\n      context.labels.auraStrength = pf1.config.auraStrengths[auraStrength];\n    }\n\n    // Enrich description and notes\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const destruction = context.system.details?.destruction;\n    const pDestruction = destruction ? pf1.utils.enrichHTMLUnrolled(destruction, enrichHTMLOptions) : Promise.resolve();\n    pDestruction.then((html) => (context.destructionHTML = html || noDesc));\n    const effect = context.system.details?.effect;\n    const pEffect = effect ? pf1.utils.enrichHTMLUnrolled(effect, enrichHTMLOptions) : Promise.resolve();\n    pEffect.then((html) => (context.effectHTML = html || noDesc));\n    const notes = context.system.details?.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pDestruction, pEffect, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Prepare Templates\n    const trait = context.system.templates;\n    const values = trait.total;\n\n    const pTemplates = values.reduce((arr, t) => {\n      arr.push(\n        context.config.hauntTemplates[t]\n          ? TextEditor.enrichHTML(`@UUID[${context.config.hauntTemplates[t].uuid}]`)\n          : TextEditor.enrichHTML(`@UUID[${t}]{${t}}`)\n      );\n      return arr;\n    }, []);\n    const templateLinks = await Promise.all(pTemplates);\n    trait.selected = await values.reduce((obj, t, index) => {\n      const link = templateLinks[index];\n      obj[t] = {\n        name: context.config.hauntTemplateLabels[t] || t,\n        link,\n        broken: link === t,\n      };\n\n      return obj;\n    }, {});\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    const actor = this.actor;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id } = re?.groups ?? {};\n\n    switch (id) {\n      case \"cl\":\n        paths.push({ path: \"@details.cl\", value: lazy.rollData.details.cl }, { path: \"@cl\", value: lazy.rollData.cl });\n        break;\n      case \"health\":\n        paths.push(\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max }\n        );\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context - The data object to render the sheet\n   * @private\n   * @override\n   * @returns {void}\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const value = formData.system.details.area?.size;\n    if (Number.isFinite(value)) {\n      formData.system.details.area.size = pf1.utils.convertDistanceBack(value)[0];\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFTrap extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"trap\"],\n      width: 600,\n      height: 700,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/trap-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.notes\", \"system.effect\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @override\n   * @returns {Promise<object>} The data object to render the sheet with\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      hasHD: false,\n      fields: this.actor.system.schema.fields,\n      rollData: this.actor.getRollData(),\n      perception: this.actor.getPerceptionModifier(),\n    };\n\n    // Trigger Types\n    if (!(context.system.type in pf1.config.traps.types)) {\n      context.trapTypes = foundry.utils.mergeObject(\n        { [`${context.system.type}`]: context.system.type },\n        pf1.config.traps.types\n      );\n    } else {\n      context.trapTypes = pf1.config.traps.types;\n    }\n\n    // Challenge Rating\n    context.labels = {\n      cr: pf1.utils.CR.fromNumber(context.system.cr.total),\n    };\n\n    // Trigger info\n    if ([\"proximity\", \"visual\", \"timed\"].includes(context.system.trigger.type)) {\n      context.hasTriggerRange = true;\n\n      if (context.system.trigger.type === \"timed\") context.hasTriggerTime = true;\n    }\n    context.hasPerceptionTrigger = [\"electricEyes\", \"genetic\", \"sound\", \"visual\"].includes(context.system.trigger.type);\n\n    // Enrich effects and notes\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const effect = context.system.effect;\n    const pEffect = effect ? pf1.utils.enrichHTMLUnrolled(effect, enrichHTMLOptions) : Promise.resolve();\n    pEffect.then((html) => (context.effectHTML = html || noDesc));\n    const notes = context.system.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pEffect, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {pf1.documents.actor.ActorTrapPF} */\n    const actor = this.actor;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id } = re?.groups ?? {};\n\n    switch (id) {\n      case \"detect\":\n        paths.push({ path: \"@perception\", value: lazy.rollData.perception });\n        break;\n      case \"disarm\":\n        paths.push({ path: \"@disarm\", value: lazy.rollData.disarm });\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery<HTMLElement>} jq   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    /** @type {Document} */\n    const html = jq[0];\n\n    // Adjust CR\n    html.querySelector(\"span.cr-input\")?.addEventListener(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n\n    html.querySelector(\".trigger .rollable[data-dtype='per']\")?.addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n\n      this.actor.rollPerception({ token: this.token });\n    });\n\n    html.querySelectorAll(\"input[name='system.trigger.value'], input[name='system.reset.value']\").forEach((el) => {\n      el.addEventListener(\"click\", (ev) => {\n        ev.target.select();\n      });\n    });\n  }\n\n  /**\n   * Adjust the CR of the trap\n   *\n   * @param {Event} event   The originating click event\n   */\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = pf1.utils.CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context The rendering context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    if (formData.system.trigger.value && [\"proximity\", \"visual\"].includes(this.actor.system.trigger.type)) {\n      const value = formData.system.trigger.value;\n      if (Number.isFinite(value)) {\n        formData.system.trigger.value = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFVehicle extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vehicle\"],\n      width: 800,\n      height: 680,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/vehicle-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.details.description\", \"system.details.notes\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @override\n   * @returns {Promise<object>} The data object to render the sheet with\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      appId: this.appId,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      labels: {\n        currency: game.i18n.localize(`PF1.Currency.Abbr.${this.itemValueDenomination}`),\n      },\n      isLootSheet: true, // inventory include unwanted data otherwise,\n      fields: this.actor.system.schema.fields,\n    };\n\n    context.vehicleSizes = Object.fromEntries(\n      Object.entries(pf1.config.vehicles.size).map(([key, data]) => [key, data.label])\n    );\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const desc = context.system.details?.description;\n    const pDesc = desc ? pf1.utils.enrichHTMLUnrolled(desc, enrichHTMLOptions) : Promise.resolve();\n    pDesc.then((html) => (context.descriptionHTML = html || noDesc));\n    const notes = context.system.details?.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pDesc, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    //context.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n    context.hasCurrency = true; // Never fade currency field for this\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", context.sellValue);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Compute Driver data\n    context.driver = this._computeDriverData(context.system.driver.uuid, context.system.driver.skill);\n    context.driver.driverSkill = context.system.driver.skill;\n    if (!context.driver.uuid) {\n      context.driver.skills = pf1.utils.deepClone(context.config.skills);\n      if (context.driver.driverSkill && !context.driver.skills[context.driver.driverSkill]) {\n        context.driver.skills[context.driver.driverSkill] = context.driver.driverSkill;\n      }\n      context.driver.skillBonus = 0;\n    }\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {ActorPF} */\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    const getNotes = async (context, all = true) =>\n      (await actor.getContextNotesParsed(context, { all, rollData: lazy.rollData, roll: false })).map((n) => n.text);\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"hp\": {\n        paths.push(\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max },\n          { path: \"@attributes.hp.base\", value: lazy.rollData.attributes.hp.base || 0 },\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.bonus\", value: lazy.rollData.attributes.hp.bonus }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hp.max\"), untyped: true });\n        break;\n      }\n      case \"ac\": {\n        if (!system.attributes.ac[detail]) return;\n\n        paths.push(\n          { path: \"@attributes.ac.normal.total\", value: lazy.rollData.attributes.ac.normal.total },\n          { path: \"@attributes.ac.touch.total\", value: lazy.rollData.attributes.ac.touch.total }\n        );\n        if (lazy.rollData.traits.type === \"sea\") {\n          paths.push({ path: \"@attributes.ac.stopped.total\", value: lazy.rollData.attributes.ac.stopped.total });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.ac.${detail}.total`),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"ac\");\n        break;\n      }\n      case \"cmb\": {\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n        });\n\n        sources.push({\n          sources: [\n            {\n              name: game.i18n.localize(\"PF1.Size\"),\n              value: Object.values(pf1.config.sizeSpecialMods)[system.traits.size.value],\n            },\n          ],\n        });\n\n        sources.push(\n          { sources: actor.getSourceDetails(\"system.attributes.attack.general\") },\n          { sources: actor.getSourceDetails(\"system.attributes.cmb.bonus\") },\n          { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") }\n        );\n\n        notes = [...(await getNotes(\"attack\")), ...(await getNotes(\"melee\")), ...(await getNotes(\"cmb\"))];\n        break;\n      }\n      case \"material\": {\n        paths.push({ path: \"@material.base\", value: system.material.base });\n        break;\n      }\n      case \"hardness\": {\n        paths.push(\n          { path: \"@attributes.hardness.total\", value: lazy.rollData.attributes.hardness.total },\n          { path: \"@attributes.hardness.base\", value: system.attributes.hardness.base },\n          { path: \"@attributes.hardness.bonus\", value: lazy.rollData.attributes.hardness.bonus }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hardness.total\"), untyped: true });\n        break;\n      }\n      case \"save\": {\n        if (!system.attributes.savingThrows.save) return;\n\n        paths.push(\n          {\n            path: `@attributes.savingThrows.save.total`,\n            value: lazy.rollData.attributes.savingThrows.save.total,\n          },\n          {\n            path: `@attributes.savingThrows.save.base`,\n            value: lazy.rollData.attributes.savingThrows.save.base,\n          }\n        );\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.savingThrows.save.total`),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"savingThrows\");\n        break;\n      }\n      case \"acceleration\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.acceleration`) });\n\n        // Add base speed\n        const speed = system.details.acceleration;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.acceleration`, value: tD, unit: tU });\n\n        break;\n      }\n      case \"currentSpeed\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.currentSpeed`) });\n\n        // Add current speed\n        const speed = system.details.currentSpeed;\n        const speedOverland = system.details.currentSpeedOverland;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.currentSpeed`, value: tD, unit: tU });\n\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speedOverland.speed);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@details.currentSpeedOverland`, value: oD, unit: oU });\n\n        break;\n      }\n      case \"maxSpeed\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.maxSpeed`) });\n\n        // Add base speed\n        const speed = system.details.maxSpeed;\n        const speedOverland = system.details.maxSpeedOverland;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.maxSpeed`, value: tD, unit: tU });\n\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speedOverland.speed);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@details.maxSpeedOverland`, value: oD, unit: oU });\n\n        break;\n      }\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} jq The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const html = jq[0];\n\n    // Saving Throw\n    html\n      .querySelector(\".defenses .rollable[data-dtype='saving-throws']\")\n      .addEventListener(\"click\", this._onRollSavingThrow.bind(this));\n\n    // Display defenses\n    html.querySelector(\".defenses .rollable[data-dtype='defenses']\").addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      this.actor.displayDefenseCard({ token: this.token });\n    });\n\n    // Roll Driver skill\n    html.querySelector(\".driver-skill .rollable[data-dtype='driverSkill']\").addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      const driver = fromUuidSync(this.actor.system.driver.uuid);\n      const skill = this.actor.system.driver.skill;\n      if (skill) {\n        driver.rollSkill(skill, { token: this.token });\n      } else {\n        driver.rollAbilityTest(\"wis\", { token: this.token });\n      }\n    });\n\n    // Hook onto the Driver Select to assign a driver.\n    html.querySelector(\".select-driver\")?.addEventListener(\"click\", async (_ev) => {\n      const targetActorId = await pf1.utils.dialog.getActor({\n        actors: game.actors.filter(\n          (a) =>\n            [\"character\", \"npc\"].includes(a.type) &&\n            a.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)\n        ),\n      });\n\n      const targetActor = game.actors.get(targetActorId);\n      if (!targetActor) return;\n\n      await this.actor.update({ \"system.driver.uuid\": targetActor.uuid });\n    });\n\n    // Driver controls\n    html.querySelector(\".driver-info .edit\")?.addEventListener(\"click\", async (_ev) => {\n      fromUuidSync(this.actor.system.driver.uuid).sheet.render(true);\n    });\n\n    html.querySelector(\".driver-info .delete\")?.addEventListener(\"click\", async (_ev) => {\n      await this.actor.update({ \"system.driver.uuid\": \"\" });\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context The rendering context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Alter inventory columns\n    for (const section of inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    const items = context.items.filter((i) => i.isPhysical);\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Apply user filters\n    const invCat = { key: \"inventory\", sections: inventory };\n    const set = this._filters.sections.inventory ?? new Set();\n    for (const section of inventory) {\n      this._filterSection(invCat, section, set);\n    }\n\n    context.inventory = inventory;\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return pf1.config.currency.standard;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const convertibleKeys = [\"currentSpeed\", \"maxSpeed\", \"acceleration\"];\n    for (const key of convertibleKeys) {\n      const value = formData.system.details[key];\n      if (Number.isFinite(value)) {\n        formData.system.details[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n\n  _computeDriverData(driverId, skillId) {\n    if (!driverId || this.actor.pack) return {};\n\n    /** @type {ActorPF} */\n    const driver = fromUuidSync(driverId);\n    if (!driver) return {};\n\n    const rollData = driver.getRollData();\n    let mod = rollData.abilities.wis.mod;\n    try {\n      mod = driver.getSkillInfo(skillId).mod;\n    } catch {\n      // error silently, as we default to Wisdom Modifier\n    }\n\n    const skills = {};\n    for (const skillId of driver.allSkills) {\n      const skill = driver.getSkillInfo(skillId);\n      skills[skillId] = skill.fullName;\n    }\n\n    return {\n      name: driver.name,\n      img: driver.img,\n      uuid: driver.uuid,\n      skills: skills,\n      skillBonus: mod,\n    };\n  }\n\n  /**\n   * Roll saving throw\n   *\n   * @protected\n   * @param {Event} event - The originating click event\n   */\n  async _onRollSavingThrow(event) {\n    event.preventDefault();\n\n    /** @type {SaveId} */\n    const saveId = await foundry.applications.api.DialogV2.wait({\n      window: { title: game.i18n.localize(\"PF1.Dialog.VehicleSave.Title\") },\n      content: `<p>${game.i18n.localize(\"PF1.Dialog.VehicleSave.Message\")}</p>`,\n      buttons: [\n        {\n          label: game.i18n.localize(\"PF1.SavingThrowFort\"),\n          action: \"fort\",\n        },\n        {\n          label: game.i18n.localize(\"PF1.SavingThrowRef\"),\n          action: \"ref\",\n        },\n      ],\n    });\n\n    this.actor.rollSavingThrow(saveId, { token: this.token });\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that renders the movement speed configuration of an item\n *\n * @param {ActorPF} actor     The Actor instance for which to configure resting\n */\nexport class SpeedEditor extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: SpeedEditor._save,\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"speed-editor\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-person-walking\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 400,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/speed-editor.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const itemData = this.document.system;\n    const speeds = {};\n\n    for (const key of pf1.const.movementKeys) {\n      let value = itemData.speeds?.[key];\n      if (value > 0) value = pf1.utils.convertDistance(value)[0];\n      speeds[key] = value;\n    }\n\n    speeds.flyManeuverability = itemData.speeds.flyManeuverability || \"average\";\n\n    const isMetric = pf1.utils.getDistanceSystem() === \"metric\";\n\n    return {\n      speeds,\n      item: this.document,\n      system: itemData,\n      units: game.i18n.localize(isMetric ? \"PF1.Distance.mShort\" : \"PF1.Distance.ftShort\"),\n      step: isMetric ? 1.5 : 5,\n      flyManeuverability: {\n        clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n        poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n        average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n        good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n        perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n      },\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-solid fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the speed editor window to include document name, and optionally the actors name, if present\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    const actor = this.document.actor;\n    let title = `${game.i18n.localize(\"PF1.Movement.Label\")}: ${this.document.name}`;\n    if (actor) title += ` — ${actor.name}`;\n    return title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the movement speed data back to the item\n   *\n   * @internal\n   * @this {SpeedEditor}\n   * @param {SubmitEvent} event - The originating form submission event\n   * @param {HTMLFormElement} form - The form element that was submitted\n   * @param {FormDataExtended} formData - Processed data for the submitted form\n   * @param {Record<string, number|string>} formData.object - The movement speed configuration\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = formData.object;\n\n    // Convert data back\n    for (const [key, value] of Object.entries(formData)) {\n      if (Number.isNumeric(value)) {\n        formData[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    this.document.update(formData);\n  }\n}\n","/**\n * @typedef {object} Widget_CategorizedItemPicker~Item\n * @property {string} key - The key of the item.\n * @property {string} [label] - The label of the item.\n * @property {string} [icon] - The icon of the item.\n */\n\n/**\n * @typedef {object} Widget_CategorizedItemPicker~Category\n * @property {string} key - The key of the category.\n * @property {string} label - The label of the category.\n * @property {Widget_CategorizedItemPicker~Item[]} items - All the items associated with this category.\n */\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Item picker widget.\n */\nexport class Widget_CategorizedItemPicker extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"widget\", \"categorized-item-picker\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 480,\n      height: 480,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/widgets/categorized-item-picker.hbs\",\n    },\n  };\n\n  constructor(options, categories, callback, selected) {\n    super(options);\n\n    /**\n     * Objects containing category and item data.\n     *\n     * @type {Widget_CategorizedItemPicker~Category[]}\n     */\n    this.categories = categories;\n\n    /**\n     * Previously selected category and item\n     *\n     * @type {object}\n     * @property {string} category Selected category.\n     * @property {string} item Selected item in that category.\n     */\n    this.selected = selected;\n\n    /**\n     * Callback fired when an item has been selected.\n     *\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this._hiddenElems = {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const categories = [];\n\n    for (const cat of this.categories) {\n      cat.hidden = cat.validity.item === false;\n      if (cat.hidden) continue;\n      cat.active = cat.key === this.selected?.category;\n\n      const categoryItems = [];\n      for (const item of cat.items) {\n        if (item.validity.item === false) continue;\n\n        // Mark items as invalid if the category is invalid\n        if (!cat.validity.valid) {\n          item.validity.category = false;\n          item.validity.valid = false;\n        }\n\n        categoryItems.push({\n          category: cat.key,\n          active: this.selected?.item === item.key,\n          ...item,\n        });\n      }\n\n      // Has any valid choices\n      cat.hasChoices = categoryItems.some((i) => i.validity.valid);\n      cat.hasVisibleChoices = categoryItems.some((i) => i.validity.item !== false);\n\n      if (!cat.hasVisibleChoices || !cat.hasChoices) continue;\n\n      cat.items = categoryItems;\n      categories.push(cat);\n    }\n\n    return {\n      categories,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Click an item\n    this.element.querySelectorAll(\".item\").forEach((el) => el.addEventListener(\"click\", this._onClickItem.bind(this)));\n\n    // Cancel widget\n    window.setTimeout(() => {\n      if (this._cancelCallback) document.removeEventListener(\"click\", this._cancelCallback);\n      this._cancelCallback = this._onCancel.bind(this);\n      document.addEventListener(\"click\", this._cancelCallback);\n    }, 10);\n  }\n\n  /**\n   * @override\n   * @this {Widget_CategorizedItemPicker}\n   */\n  async _onFirstRender(context, options) {\n    super._onFirstRender(context, options);\n\n    // HACK: Yield so browser can render the element. Required for scrollIntoView() to function\n    // This for once is not Foundry's fault\n    await new Promise((resolve) => setTimeout(resolve, 0));\n\n    // Scroll previously  selected option into view\n    this.element\n      .querySelector(\".window-content .pre-selected\")\n      ?.scrollIntoView({ block: \"center\", behaviour: \"instant\" });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle click on an item.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const result = a.dataset.value;\n    this.callback(result);\n    this.close();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle click outside the widget.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    let node = event.target;\n    if (node === this.element) return;\n    while (node.parentNode) {\n      if (node === this.element) return;\n      node = node.parentNode;\n    }\n\n    this.close();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Close the widget\n   *\n   * @param args\n   * @returns {Promise<void>}\n   */\n  async close(...args) {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    return super.close(...args);\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\n\n/**\n * A trait selector variant that reads and stores information into an object with boolean values.\n *\n * @property {string} _searchFilter           Current search filter\n * @property {string} _collator               Collator for sorting\n * @property {object} attributes              The currently stored values for this trait selector\n * @property {string[]} attributes.value      Elements from the provided set of choices that have been checked\n */\nexport class FlagSelector extends ActorTraitSelector {\n  static DEFAULT_OPTIONS = {\n    form: {\n      handler: FlagSelector._updateDocument,\n    },\n  };\n\n  constructor(options) {\n    options.hasCustom = false;\n    super(options);\n\n    const valueObject = foundry.utils.getProperty(options.document.toObject(), this.attribute) ?? {};\n\n    Object.entries(valueObject).forEach(([k, v]) => {\n      if (v) this.attributes.standard.add(k);\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @this {FlagSelector}\n   * @private\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   */\n  static async _updateDocument(event, form, formData) {\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n\n    const options = Object.keys(this.options.choices);\n    const newValue = {};\n    options.forEach((o) => {\n      newValue[o] = this.attributes.standard.has(o);\n    });\n\n    const updateData = {\n      [this.attribute]: newValue,\n    };\n\n    this.document.update(updateData);\n    this.close({ force: true });\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { SpeedEditor } from \"@app/speed-editor.mjs\";\nimport { Widget_CategorizedItemPicker } from \"@app/categorized-item-picker.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\nimport { FlagSelector } from \"@app/flag-selector.mjs\";\n\n// Calculate decimal places for correct treatment of custom currencies\nconst decimalPlaces = (n) => {\n  let d = 0;\n  while ((n /= 10) >= 1) d++;\n  return d;\n};\n\n/**\n * Override and extend the core ItemSheet implementation to handle game system specific item types\n *\n * @type {ItemSheet}\n */\nexport class ItemSheetPF extends ItemSheet {\n  constructor(...args) {\n    super(...args);\n\n    // Add item type to selectors\n    this.options.classes.push(`type-${this.item.type}`);\n\n    /**\n     * Track action updates from the item sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._actionUpdates = [];\n\n    // Activate more reasonable default links sub-tab per item type.\n    // Related core issue: https://github.com/foundryvtt/foundryvtt/issues/9748\n    const links = this._tabs.find((t) => t.group === \"links\");\n    if (this.item.type === \"class\") {\n      links.active = \"classAssociations\";\n    } else if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      links.active = \"charges\";\n    }\n  }\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"system.description.value\", \"system.description.unidentified\"];\n\n  /* -------------------------------------------- */\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".tab\", \".buff-flags\", \".editor-content\"],\n      dragDrop: [\n        {\n          dragSelector: \"li.action-part\",\n          dropSelector: \".tab.details\",\n        },\n        {\n          dragSelector: \".tab.changes li.change\",\n          dropSelector: null,\n        },\n        {\n          dragSelector: \".tab.links .item-name\",\n          dropSelector: \".tab.links .tab[data-group='links']\",\n        },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='links']\",\n          contentSelector: \"section.links-body\",\n          initial: \"children\",\n          group: \"links\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='description']\",\n          contentSelector: \"section.description-body\",\n          initial: \"identified\",\n          group: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string} - Template path\n   */\n  get template() {\n    const path = \"systems/pf1/templates/items\";\n    return `${path}/${this.item.type}.hbs`;\n  }\n\n  get title() {\n    const actor = this.actor;\n    if (actor) return `${super.title} – ${actor.name}`;\n    return super.title;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _render(force, options) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    /** @type {ItemPF} */\n    const item = this.item,\n      system = item.system;\n\n    const actor = item.actor,\n      actorData = actor?.system;\n\n    const isolated = !actor;\n\n    const defaultAction = item.defaultAction;\n\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    const context = {\n      cssClass: this.isEditable ? \"editable\" : \"locked\",\n      item,\n      document: item, // Reference used by unknown data\n      name: item.name,\n      system,\n      itemType: game.i18n.localize(CONFIG.Item.typeLabels[item.type]),\n      rollData,\n      config: pf1.config,\n      owned: !!actor,\n      owner: item.isOwner,\n      editable: this.isEditable,\n      isGM: game.user.isGM,\n      labels: item.getLabels({ rollData, isolated }),\n      canClassLink: pf1.config.classAssociations.includes(item.type) && !!rollData.classes,\n      inContainer: item.inContainer ?? false,\n      // Include raw tag data (from source to not get autofilled tag)\n      tag: this.item._source.system.tag,\n    };\n\n    // Item type identifiers\n    const isPhysical = item.isPhysical;\n    const isWeapon = item.type === \"weapon\";\n    const isAttack = item.type === \"attack\";\n    const isWeaponLike = isAttack && item.subType === \"weapon\";\n    const isNaturalAttack = isAttack && system.subType === \"natural\";\n    const isClass = item.type === \"class\";\n    const isSpell = item.type === \"spell\";\n    const isImplant = item.type === \"implant\";\n    const isEquipment = item.type === \"equipment\";\n\n    context.isPhysical = isPhysical;\n    context.isWeapon = isWeapon;\n    context.isAttack = isAttack;\n    context.isWeaponLike = isWeaponLike;\n    context.isNaturalAttack = isNaturalAttack;\n    context.isClass = isClass;\n    context.isSpell = isSpell;\n    context.isImplant = isImplant;\n    context.isEquipment = isEquipment;\n\n    if (context.canClassLink) {\n      context.hasClassLink = !!item.system.class;\n      context.classes = {};\n      for (const [classTag, classData] of Object.entries(rollData.classes)) {\n        context.classes[classTag] = classData.name;\n      }\n    }\n\n    // Include sub-items\n    context.items = item.items?.map((i) => i.toObject()) ?? [];\n\n    // Add hit die size options for classes\n    if (isClass) {\n      context.hitDieSizes = context.config.hitDieSizes.reduce((all, size) => {\n        all[size] = game.i18n.format(\"PF1.DieSize\", { size });\n        return all;\n      }, {});\n\n      context.isMythic = this.item.subType === \"mythic\";\n\n      if (item.system.wealth) {\n        const context = { formula: item.system.wealth, item: this.item };\n        const max = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          maximize: true,\n        })?.total;\n        const min = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          minimize: true,\n        })?.total;\n        if (max > 0) {\n          context.wealth ??= {};\n          context.wealth.average = (max + min) / 2;\n        }\n      }\n    }\n\n    if (item.links.charges) context.inheritCharges = item.links.charges;\n    context.isCharged = ![\"single\", \"\", undefined].includes(system.uses?.per);\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.isRechargeable = pf1.config.limitedUsePeriodOrder.includes(system.uses?.per);\n\n    context.isActivatable = ![\"race\", \"class\", \"container\", \"loot\"].includes(item.type);\n    context.hasAction = item.hasAction;\n    context.hasAttack = item.hasAttack;\n    context.hasDamage = item.hasDamage;\n    context.showBothDescriptions = context.isGM && context.isPhysical;\n    context.showUnidentifiedData = item.showUnidentifiedData;\n    context.showIdentified = !item.showUnidentifiedData;\n    context.isIdentified = item.system.identified !== false;\n    context.showIdentifiedData = context.showIdentified;\n    if (context.showIdentified && context.isPhysical) context.showBothDescriptions = true;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    context.showInCombat = [\"weapon\", \"spell\", \"equipment\", \"consumable\"].includes(item.type);\n    if (item.type === \"feat\" && [\"feat\", \"classFeat\", \"racial\"].includes(item.subType)) context.showInCombat = true;\n\n    // Identification information\n    context.identify ??= {};\n    context.identify.dc = 0;\n    const auraStrength = rollData.item.auraStrength;\n    if (auraStrength) {\n      context.aura = {\n        strength: auraStrength,\n        strengthLabel: pf1.config.auraStrengths[auraStrength],\n        school: pf1.config.spellSchools[system.aura.school] || system.aura.school || game.i18n.localize(\"PF1.Unknown\"),\n      };\n\n      context.identify.dc = 15 + rollData.item.cl;\n      context.identify.curse = context.identify.dc + 10;\n    }\n\n    // Add spellcasting configuration\n    if (isClass) {\n      context.casting = {\n        types: pf1.config.spellcasting.type,\n        spells: pf1.config.spellcasting.spells,\n        progression: {\n          high: \"PF1.High\",\n          med: \"PF1.Medium\",\n          low: \"PF1.Low\",\n        },\n      };\n\n      if (!item.actor)\n        context.hasSpellbook = true; // Not true, but avoids unwanted behaviour.\n      else {\n        context.hasSpellbook = Object.values(rollData.spells ?? {}).find(\n          (book) => !!book.class && book.class === system.tag && book.inUse\n        );\n      }\n    }\n\n    /** @type {DescriptionAttribute[]} */\n    context.descriptionAttributes = [];\n\n    // Override description attributes\n    if (context.isPhysical) {\n      // Add quantity\n      context.descriptionAttributes.push({\n        isNumber: true,\n        isRelative: true,\n        name: \"system.quantity\",\n        label: game.i18n.localize(\"PF1.Quantity\"),\n        value: system.quantity || 0,\n        decimals: 0,\n        id: \"data-quantity\",\n        constraints: {\n          min: 0,\n          step: 1,\n        },\n      });\n\n      // Add weight\n      context.descriptionAttributes.push({\n        isNumber: true,\n        isRelative: true,\n        name: \"system.weight.value\",\n        label: game.i18n.localize(\"PF1.Weight\"),\n        value: system.weight.converted.total,\n        fakeValue: true,\n        inputValue: system.weight.converted.value,\n        decimals: 2,\n        tooltip: \"weight\",\n        id: \"data-weight-value\",\n        constraints: {\n          min: 0,\n          step: 0.01,\n        },\n      });\n\n      const priceDecimals = decimalPlaces(pf1.config.currency.standardRate);\n\n      // Add price\n      if (context.isGM) {\n        context.descriptionAttributes.push(\n          {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.price\",\n            label: game.i18n.localize(\"PF1.Price\"),\n            value: item.getValue({ sellValue: 1 }),\n            decimals: priceDecimals,\n            tooltip: \"price\",\n            id: \"data-price\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.unidentified.price\",\n            label: game.i18n.localize(\"PF1.UnidentifiedPriceShort\"),\n            value: item.getValue({ sellValue: 1, forceUnidentified: true }),\n            decimals: priceDecimals,\n            tooltip: \"unidprice\",\n            id: \"data-unidentifiedPrice\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          }\n        );\n      } else if (context.showUnidentifiedData) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          name: \"system.unidentified.price\",\n          fakeName: true,\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: priceDecimals,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      } else {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          name: \"system.price\",\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: priceDecimals,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      }\n\n      // Add hit points\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isRange: true,\n          label: game.i18n.localize(\"PF1.HPShort\"),\n          current: {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.hp.value\",\n            value: system.hp?.value || 0,\n            constraints: {\n              step: 1,\n              max: system.hp?.max || 0,\n            },\n          },\n          max: {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.hp.base\",\n            fakeValue: true,\n            inputValue: system.hp.base,\n            value: system.hp?.max || 0,\n            constraints: {\n              min: 0,\n              step: 1,\n            },\n          },\n        });\n\n        // Add hardness\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          label: game.i18n.localize(\"PF1.Hardness\"),\n          name: \"system.hardness\",\n          decimals: 0,\n          value: system.hardness.total || 0,\n          fakeValue: true,\n          inputValue: this.item._source.system.hardness || 0,\n          constraints: {\n            min: 0,\n            step: 1,\n          },\n        });\n      }\n\n      let disableEquipping = false;\n      if (item.inContainer) {\n        if (item.canEquip === false) disableEquipping = true;\n        else if (context.isImplant) disableEquipping = true;\n      }\n\n      // Add equipped/implanted flag\n      if (context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.implanted\",\n          label: game.i18n.localize(\"PF1.Implanted\"),\n          value: system.implanted,\n          disabled: disableEquipping,\n        });\n      } else {\n        // Certain loot types don't have equipped\n        if (item.type === \"loot\" && pf1.config.unequippableLoot.includes(this.item.subType)) disableEquipping = true;\n\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.equipped\",\n          label: game.i18n.localize(\"PF1.Equipped\"),\n          value: system.equipped,\n          disabled: disableEquipping,\n        });\n      }\n\n      // Add carried flag\n      context.descriptionAttributes.push({\n        isBoolean: true,\n        name: \"system.carried\",\n        label: game.i18n.localize(\"PF1.Carried\"),\n        value: system.carried || item.system.implanted || false,\n        disabled: item.inContainer || item.system.implanted || false,\n      });\n    }\n\n    if (context.isPhysical || item.isQuasiPhysical) {\n      // Add broken flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.broken\",\n          label: game.i18n.localize(\"PF1.Broken\"),\n          value: system.broken,\n          disabled: context.isNaturalAttack,\n        });\n      }\n\n      // Add masterwork flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.masterwork\",\n          label: game.i18n.localize(\"PF1.Masterwork\"),\n          value: system.masterwork,\n          disabled: context.isNaturalAttack,\n        });\n      }\n    }\n\n    if (context.isPhysical) {\n      // Add identified flag for GM\n      if (game.user.isGM) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.identified\",\n          label: game.i18n.localize(\"PF1.Identified\"),\n          value: system.identified ?? true,\n          disabled: !game.user.isGM,\n        });\n      }\n    }\n\n    // Prepare feat specific stuff\n    if (item.type === \"feat\") {\n      context.isClassFeature = system.subType === \"classFeat\";\n      context.isTemplate = system.subType === \"template\";\n\n      context.abilityTypes = Object.fromEntries(\n        Object.entries(pf1.config.abilityTypes).map(([key, { short, long }]) => [key, `${long} (${short})`])\n      );\n    }\n\n    // Add skill list to items that support them\n    // TODO: Make this ask the item itself if they have class skills\n    if (system.classSkills || [\"class\", \"feat\", \"race\"].includes(item.type)) {\n      const classSkills = system.classSkills ?? {};\n      // Get all skills\n      const skills = foundry.utils.mergeObject(pf1.config.skills, actorData?.skills ?? {}, { inplace: false });\n      // Build skill context\n      context.skills = Object.entries(skills)\n        .map(([skillId, skilldata]) => ({\n          ...skilldata,\n          key: skillId,\n          name: pf1.config.skills[skillId] || skilldata.name,\n          isCS: classSkills[skillId] === true,\n        }))\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    // Prepare attack-specific stuff\n    if (isAttack) {\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    const material = isEquipment ? this.item.system.armor?.material : this.item.system.material;\n    if (material?.addon?.length) {\n      context.materialAddons =\n        material.addon.reduce((obj, v) => {\n          obj[v] = true;\n          return obj;\n        }, {}) ?? {};\n    }\n\n    // Prepare categories for weapons\n    if (isWeaponLike) {\n      system.weapon ??= {};\n      system.weapon.category ||= \"simple\";\n      system.weapon.type ||= \"1h\";\n    }\n\n    // Prepare weapon specific stuff\n    if (isWeapon || isWeaponLike) {\n      const category = isWeapon ? system.subType : system.weapon.category;\n      const wsubtype = isWeapon ? system.weaponSubtype : system.weapon.type;\n\n      switch (category) {\n        case \"siege\":\n          context.isRanged = [\"direct\", \"indirect\"].includes(wsubtype);\n          break;\n        case \"heavy\":\n        case \"firearm\":\n          context.isRanged = true;\n          break;\n        default:\n          context.isRanged = wsubtype === \"ranged\" || system.properties?.[\"thr\"] === true;\n          break;\n      }\n    }\n\n    if (isWeapon || isWeaponLike) {\n      context.weaponCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.weaponTypes)) {\n        context.weaponCategories.types[k] = v._label;\n      }\n      let type;\n      if (isWeapon) type = system.subType;\n      else if (isWeaponLike) type = system.weapon?.category;\n\n      if (type in pf1.config.weaponTypes) {\n        for (const [k, v] of Object.entries(pf1.config.weaponTypes[type])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.weaponCategories.subTypes[k] = v;\n        }\n      }\n    }\n\n    if (isWeapon) {\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    // Prepare equipment specific stuff\n    if (isEquipment) {\n      // Prepare categories for equipment\n      context.equipmentCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.equipmentTypes)) {\n        context.equipmentCategories.types[k] = v._label;\n      }\n      const subType = system.subType;\n      if (subType in pf1.config.equipmentTypes) {\n        for (const [k, v] of Object.entries(pf1.config.equipmentTypes[subType])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.equipmentCategories.subTypes[k] = v;\n        }\n      }\n\n      // Prepare slots for equipment\n      context.equipmentSlots = pf1.config.equipmentSlots.wondrous;\n\n      // Whether the current equipment type has multiple slots\n      context.hasMultipleSlots = item.hasSlots;\n\n      context.hasSubCategory = [\"armor\", \"shield\"].includes(subType);\n\n      // Prepare materials where they're needed.\n      if ([\"armor\", \"shield\"].includes(item.subType)) {\n        context.materialCategories = this._prepareMaterialsAndAddons(item);\n      }\n\n      // Can be held in different ways\n      context.variableHands = [\"wondrous\", \"other\"].includes(item.subType);\n    }\n\n    if (isImplant) {\n      context.subTypes = pf1.config.implantTypes;\n\n      context.isCybertech = item.subType === \"cybertech\";\n      if (context.isCybertech) context.slots = pf1.config.implantSlots.cybertech;\n    }\n\n    let topDescription;\n\n    // Prepare spell specific stuff\n    if (context.isSpell) {\n      let spellbook = null;\n      if (actor) {\n        const bookId = system.spellbook;\n        spellbook = actorData?.attributes.spells?.spellbooks[bookId];\n      }\n\n      context.isSpontaneousLike = spellbook?.spontaneous || spellbook?.spellPoints?.useSystem || false;\n      context.isPreparedSpell = !context.isSpontaneousLike;\n      context.usesSpellpoints = spellbook != null ? (spellbook.spellPoints?.useSystem ?? false) : false;\n      context.isAtWill = system.atWill;\n      context.spellbooks = actorData?.attributes.spells.spellbooks ?? {};\n      context.spellbookChoices = Object.fromEntries(\n        Object.entries(context.spellbooks)\n          .filter(([_, { inUse }]) => inUse)\n          .map(([key, { label }]) => [key, label])\n          .sort(([_0, n0], [_1, n1]) => n0.localeCompare(n1, lang))\n      );\n\n      topDescription = renderCachedTemplate(\n        \"systems/pf1/templates/items/headers/spell-header.hbs\",\n        await item.getDescriptionData({ rollData, isolated })\n      );\n\n      // Reverse mapping of pf1.config.divineFocus for readability\n      const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n      system.components ??= {};\n      const df = system.components.divineFocus;\n      // Force intrinsic DF components\n      if (df === dfVariants.MDF) system.components.material = true;\n      if (df === dfVariants.FDF) system.components.focus = true;\n\n      // Generate component list according to spellbook\n      const c = { ...system.components };\n      context.components = c;\n      if (spellbook) {\n        const isDivine = spellbook.kind === \"divine\";\n        if (isDivine) {\n          if (df === dfVariants.FDF) c.focus = false;\n          if (df === dfVariants.MDF) c.material = false;\n        } else {\n          c.divineFocus = false;\n        }\n      }\n\n      // Material for spells to emulate\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    if (this.item.type === \"buff\") {\n      context.noDurationTiming = !system.duration.units || system.duration.units === \"turn\";\n    }\n\n    // Prepare class specific stuff\n    if (isClass) {\n      context.isMythicPath = system.subType === \"mythic\";\n\n      for (const [a, s] of Object.entries(system.savingThrows)) {\n        s.label = pf1.config.savingThrows[a];\n      }\n      for (const [a, s] of Object.entries(system.fc)) {\n        s.label = pf1.config.favouredClassBonuses[a];\n      }\n\n      context.isBaselikeClass = pf1.config.favoredClassTypes.includes(system.subType);\n      context.isRacialHD = system.subType === \"racial\";\n      context.isNPCClass = system.subType === \"npc\";\n      context.isPCClass = !context.isNPCClass && !context.isRacialHD;\n\n      /** @type {pf1.applications.settings.HealthConfigModel} */\n      const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.healthConfig = actor ? healthConfig.getClassHD(this.item, actor.type) : null;\n    }\n\n    if (item.type === \"consumable\") {\n      context.hasSpellType = [\"potion\", \"scroll\", \"wand\", \"staff\"].includes(item.subType);\n    }\n\n    // Prepare ammunition\n    context.canUseAmmo = !context.isNaturalAttack && item.type !== \"spell\";\n    if (context.canUseAmmo && item.system.ammo?.type) {\n      context.defaultAmmo = item.defaultAmmo;\n      if (context.defaultAmmo) {\n        context.invalidDefaultAmmo = context.defaultAmmo.system.extraType !== item.system.ammo.type;\n      }\n    }\n\n    // Prepare {value: [], custom: []} objects\n    const traitsMap = {\n      armorProf: pf1.config.armorProficiencies,\n      descriptors: pf1.config.spellDescriptors,\n      languages: pf1.config.languages,\n      subschool: pf1.config.spellSubschools,\n      weaponGroups: pf1.config.weaponGroups,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [traitKey, labels] of Object.entries(traitsMap)) {\n      if (!system[traitKey]) continue;\n\n      const trait = foundry.utils.deepClone(system[traitKey]);\n      context[traitKey] = trait;\n\n      trait.selected = {};\n      for (const id of trait.standard) {\n        trait.selected[id] = labels[id] || id;\n      }\n\n      // Add custom entry\n      let i = 1;\n      for (const id of trait.custom) {\n        trait.selected[`custom${i++}`] = id;\n      }\n\n      trait.active = !foundry.utils.isEmpty(trait.selected);\n    }\n\n    // Prepare stuff for changes\n    if (item.changes?.size) {\n      const buffTargets = pf1.utils.internal.getBuffTargets(\"buffs\", { actor, item });\n      let showPriority = false;\n      context.changes =\n        item.changes?.map((/** @type {ItemChange} */ ch) => {\n          const target = buffTargets[ch.target];\n          const typeLabel = pf1.config.bonusTypes[ch.type];\n          const chData = {\n            change: ch,\n            isValid: !!target,\n            label: target?.label ?? ch.target,\n            isDeferred: ch.isDeferred,\n            isCustom: [\"skill\", \"cl\", \"sl\", \"concn\"].includes(ch.target?.split(\".\")?.[0]),\n            isSimple: ch.isSimple,\n            cssClass: ch.cssClass,\n            isAdd: ch.operator === \"add\",\n            isSet: ch.operator === \"set\",\n            ...ch,\n            isValidType: !!typeLabel,\n            typeLabel: typeLabel || ch.type,\n            id: ch.id,\n          };\n          chData.priority ||= 0;\n          if (chData.priority != 0) showPriority = true;\n          return chData;\n        }) ?? [];\n\n      context.changePriority = showPriority;\n    }\n\n    // Prepare stuff for items with context notes\n    if (system.contextNotes) {\n      context.contextNotes = system.contextNotes;\n      const noteTargets = pf1.utils.internal.getBuffTargets(\"contextNotes\", { actor, item });\n      for (const n of context.contextNotes) {\n        const target = noteTargets[n.target];\n        n.isValid = !!target;\n        n.label = target?.label ?? n.target;\n      }\n    }\n\n    // Prepare condition display\n    context.conditions = item.effects\n      .filter((e) => !e.disabled && e.statuses.size)\n      .map((e) => Array.from(e.statuses))\n      .flat()\n      .map((s) => pf1.registry.conditions.get(s)?.name || s);\n\n    if (item.system.conditions?.length) {\n      context.causedConditions = item.system.conditions.map((c) => pf1.registry.conditions.get(c)?.name || c);\n\n      context.conditions.push(...context.causedConditions);\n    }\n\n    context.conditions = new Set(context.conditions.sort((a, b) => a.localeCompare(b)));\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n\n    // Parse notes\n    if (system.attackNotes) {\n      const value = system.attackNotes;\n      foundry.utils.setProperty(context, \"notes.attack\", value);\n    }\n\n    // Add item flags\n    this._prepareItemFlags(context);\n\n    // Add actions\n    context.actions = this.item.actions;\n\n    context.distanceUnit = game.i18n.localize(\n      pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n    );\n\n    // Prepare speeds\n    if (item.type === \"race\") {\n      // Creature types\n      context.raceCreatureTypes = pf1.utils.naturalSort(system.creatureTypes?.names ?? []);\n      context.raceCreatureSubtypes = pf1.utils.naturalSort(system.creatureSubtypes?.names ?? []);\n\n      // Speeds\n      context.speeds = [];\n      for (const key of [\"land\", \"fly\", \"swim\", \"climb\", \"burrow\"]) {\n        const value = item.system.speeds?.[key] ?? 0;\n        if (value == 0) continue;\n        let descriptor;\n        if (key === \"fly\") {\n          const fm = item.system.speeds.flyManeuverability || \"average\";\n          descriptor = `PF1.Movement.FlyManeuverability.Quality.${fm}`;\n        }\n        context.speeds.push({\n          value: pf1.utils.convertDistance(value)[0],\n          mode: key,\n          label: `PF1.Movement.Mode.${key}`,\n          descriptor,\n        });\n      }\n    }\n\n    // Content source, fill in from registry\n    if (context.showIdentifiedData) {\n      this._prepareContentSource(context);\n    }\n\n    // Trailing async awaits to ensure they're all awaited in one go instead of sequentially\n\n    // Add descriptions\n    const description = context.showIdentified\n      ? await this.item.getDescription({ rollData, header: false, isolated })\n      : null;\n\n    context.descriptionHTML = {\n      identified: null,\n      unidentified: null,\n    };\n    const enrichOptions = {\n      secrets: context.owner,\n      rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const pIdentDesc = description ? pf1.utils.enrichHTMLUnrolled(description, enrichOptions) : Promise.resolve();\n    pIdentDesc.then((html) => (context.descriptionHTML.identified = html || noDesc));\n    const unidentDesc = system.description?.unidentified;\n    const pUnidentDesc = unidentDesc ? pf1.utils.enrichHTMLUnrolled(unidentDesc, enrichOptions) : Promise.resolve();\n    pUnidentDesc.then((html) => (context.descriptionHTML.unidentified = html || noDesc));\n    const pTopDesc = topDescription ? TextEditor.enrichHTML(topDescription, enrichOptions) : Promise.resolve();\n    pTopDesc.then((html) => (context.topDescription = html));\n    const instrDesc = system.description?.instructions;\n    const pInstrDesc = instrDesc ? pf1.utils.enrichHTMLUnrolled(instrDesc, enrichOptions) : Promise.resolve();\n    pInstrDesc.then((html) => (context.descriptionHTML.instructions = html));\n\n    // Add script calls\n    const pScripts = this._prepareScriptCalls(context);\n\n    // Add links\n    const pLinks = await this._prepareLinks(context);\n\n    await Promise.all([pIdentDesc, pUnidentDesc, pTopDesc, pInstrDesc, pScripts, pLinks]);\n\n    if (this.constructor.EDIT_TRACKING?.length)\n      context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  _prepareContentSource(context) {\n    const sources = this._getContentSources();\n    if (sources.length == 0) return;\n\n    const main = this._selectContentSource(sources);\n\n    context.bookSources = {\n      all: sources,\n      main,\n    };\n\n    if (sources.length > 1) {\n      context.bookSources.extras = sources.filter((s) => s !== main);\n    }\n  }\n\n  _selectContentSource(sources) {\n    if (sources?.length === 0) return null;\n\n    sources.sort((a, b) => b.datestamp - a.datestamp);\n\n    return sources[0];\n  }\n\n  _getContentSources() {\n    const sources = this.item.system.sources ?? [];\n\n    return sources.map((source) => {\n      const registry = pf1.registry.sources.get(source?.id) ?? {};\n      const { publisher, date, abbr, name, edition } = registry;\n\n      return {\n        publisher,\n        date,\n        abbr,\n        name,\n        edition,\n        ...source,\n        title: source.title || registry.name,\n        registry,\n        datestamp: Date.parse(source.date || registry.date),\n      };\n    });\n  }\n\n  _prepareMaterialsAndAddons(item) {\n    const materialList = {};\n    const addonList = [];\n    const basicList = {};\n\n    for (const material of pf1.utils.naturalSort([...pf1.registry.materials], \"name\")) {\n      if (material.basic) {\n        // Filter basic materials\n        basicList[material.id] = material.name;\n      } else {\n        const isAllowed = material.isAllowed(item);\n        if (!isAllowed) continue;\n\n        if (!material.addon) {\n          materialList[material.id] = material.name;\n        } else {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    }\n\n    return {\n      materials: materialList,\n      addons: addonList,\n      basics: basicList,\n    };\n  }\n\n  _prepareAlignments(alignments) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: foundry.utils.deepClone(alignments),\n    };\n  }\n\n  async _prepareLinks(context) {\n    context.links = {\n      list: [],\n    };\n\n    // Add charges link type\n    if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      context.links.list.push({\n        id: \"charges\",\n        label: game.i18n.localize(\"PF1.LinkTypeCharges\"),\n        help: game.i18n.localize(\"PF1.LinkHelpCharges\"),\n        items: [],\n      });\n    }\n\n    // Add class associations\n    if (context.isClass) {\n      context.links.list.push({\n        id: \"classAssociations\",\n        label: game.i18n.localize(\"PF1.LinkTypeClassAssociations\"),\n        help: game.i18n.localize(\"PF1.LinkHelpClassAssociations\"),\n        fields: {\n          level: {\n            type: \"Number\",\n            label: game.i18n.localize(\"PF1.Level\"),\n          },\n        },\n        items: [],\n      });\n    }\n\n    // Add children link type\n    context.links.list.push({\n      id: \"children\",\n      label: game.i18n.localize(\"PF1.LinkTypeChildren\"),\n      help: game.i18n.localize(\"PF1.LinkHelpChildren\"),\n      items: [],\n    });\n\n    context.links.list.push({\n      id: \"supplements\",\n      label: game.i18n.localize(\"PF1.LinkTypeSupplements\"),\n      help: game.i18n.localize(\"PF1.LinkHelpSupplements\"),\n      fields: {\n        /*\n        // TODO: Add child link creation toggle\n        asChild: {\n          type: \"Boolean\",\n          label: game.i18n.localize(\"PF1.AsChild\"),\n        },\n        */\n      },\n      items: [],\n    });\n\n    // Post process data\n    const item = this.item,\n      actor = item.actor;\n    for (const links of context.links.list) {\n      const items = item.system.links?.[links.id] || [];\n      for (let index = 0; index < items.length; index++) {\n        const linkData = foundry.utils.deepClone(items[index]);\n        linkData.index = index; // Record index so sorted lists maintain data cohesion\n\n        const linkedItem = pf1.utils.internal.fromUuid(linkData.uuid, actor);\n        if (!linkedItem) linkData.broken = true;\n        linkData.img = linkedItem?.img || Item.implementation.getDefaultArtwork(linkedItem);\n\n        // Fill in name if it's not in the local data\n        linkData.name ||= linkedItem?.name;\n\n        // Add item to stack\n        links.items.push(linkData);\n      }\n    }\n  }\n\n  _prepareItemFlags(context) {\n    const flags = context.system.flags ?? {};\n    context.flags ??= {};\n    context.flags.boolean = flags.boolean ?? {};\n    context.flags.dictionary = flags.dictionary ?? {};\n  }\n\n  async _prepareScriptCalls(context) {\n    context.scriptCalls = null;\n\n    const categories = pf1.registry.scriptCalls.filter((category) => {\n      if (!category.itemTypes.includes(this.item.type)) return false;\n      return !(category.hidden === true && !game.user.isGM);\n    });\n    // Don't show the Script Calls section if there are no categories for this item type\n    if (!categories.length) return;\n\n    context.scriptCalls = {};\n\n    // Iterate over all script calls, and adjust data\n    const scriptCalls = this.item.scriptCalls ?? [];\n\n    // Create categories, and assign items to them\n    for (const { id, name, info } of categories) {\n      context.scriptCalls[id] = {\n        name,\n        tooltip: info,\n        items: scriptCalls.filter((sc) => sc.category === id && !sc.hide),\n        dataset: {\n          category: id,\n        },\n      };\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Form Submission                             */\n  /* -------------------------------------------- */\n\n  /**\n   * Extend the parent class _updateObject method to ensure that damage ends up in an Array\n   *\n   * @protected\n   * @param event\n   * @param formData\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    const oldData = this.item.toObject();\n    const system = formData.system;\n    const links = system.links;\n\n    if (links) {\n      const oldLinks = oldData.system?.links ?? {};\n      // Handle links arrays\n      for (const [linkType, typedLinks] of Object.entries(links)) {\n        if (Array.isArray(typedLinks)) continue; // Already handled by something else\n\n        // Maintain array and merge new data in\n        links[linkType] = foundry.utils.deepClone(oldLinks[linkType] ?? []);\n        for (const [index, linkData] of Object.entries(typedLinks)) {\n          links[linkType][index] = foundry.utils.mergeObject(links[linkType][index] ?? {}, linkData);\n        }\n      }\n    }\n\n    // Target for relative input handling\n    const targetName = event.target?.name;\n\n    // Handle relative input\n    function relativeInput(key, { min = -Infinity, max = Infinity, current, quantity = false, decimals = 0 } = {}) {\n      let value = foundry.utils.getProperty(system, key);\n      if (value === undefined) return null;\n\n      value = value.normalize(\"NFKD\");\n\n      // Not editing, unset value to prevent absurd changes\n      if (targetName !== `system.${key}`) {\n        foundry.utils.setProperty(system, key, undefined);\n        return null;\n      }\n\n      // Add or subtract values\n      let newValue;\n\n      // Relative input\n      if (value.match(/^(\\+|-)([.\\d]+)/)) {\n        const operator = RegExp.$1;\n        let value = parseFloat(RegExp.$2);\n        if (operator === \"-\") value = -value;\n        current ??= foundry.utils.getProperty(oldData.system, key);\n        newValue = current + value;\n      }\n      // Exact value\n      else if (value.match(/^=?-?\\d*(\\.\\d+)?$/)) {\n        newValue = parseFloat(value.replace(/^=/, \"\"));\n      }\n      // Cleared\n      else if (value === \"\") {\n        newValue = 0;\n      }\n      // Reset on invalid value\n      else {\n        newValue = 0;\n        // Trigger warning for bad value\n        event.target.setCustomValidity(game.i18n.localize(\"PF1.Warning.InvalidInput\"));\n      }\n\n      foundry.utils.setProperty(system, key, pf1.utils.limitPrecision(Math.clamp(newValue, min, max), decimals));\n      return newValue;\n    }\n\n    if (this.item.isPhysical) {\n      // Ensure values are stored as lbs\n      if (system.weight) {\n        if (system.weight?.value !== undefined) {\n          const current = pf1.utils.convertWeight(oldData.system.weight?.value ?? 0);\n          const value = relativeInput(\"weight.value\", { current, decimals: 2, quantity: true });\n          if (value === null) {\n            system.weight.value = undefined;\n          } else {\n            system.weight.value = pf1.utils.convertWeightBack(system.weight.value / this.item.getWeightMultiplier());\n          }\n        }\n\n        if (system.weight?.reduction?.value !== undefined) {\n          const current = pf1.utils.convertWeight(oldData.system.weight?.reduction?.value ?? 0);\n          const value = relativeInput(\"weight.reduction.value\", { min: 0, decimals: 2, current });\n          if (value === null) {\n            system.weight.reduction.value = undefined;\n          } else {\n            system.weight.reduction.value = pf1.utils.convertWeightBack(system.weight.reduction.value);\n          }\n        }\n      }\n\n      // Relative input handling, which also cancels updates if no relative input happened.\n      // Avoids value drift caused by displayed value not agreeing with base value\n\n      // Change currencies with relative values\n      const relativeKeys = [\"currency.pp\", \"currency.gp\", \"currency.sp\", \"currency.cp\", \"quantity\"];\n      for (const key of relativeKeys) {\n        relativeInput(key, { min: 0 });\n      }\n\n      const priceDecimals = decimalPlaces(pf1.config.currency.standardRate);\n\n      // Adjust with quantity\n      relativeInput(\"price\", { min: 0, quantity: true, decimals: priceDecimals });\n      relativeInput(\"unidentified.price\", { min: 0, quantity: true, decimals: priceDecimals });\n\n      // Adjust current and max HP relatively\n      relativeInput(\"hp.value\", { min: 0, current: this.item.system.hp?.value });\n      relativeInput(\"hp.base\", { min: 1 });\n      relativeInput(\"hardness\", { min: 0 });\n\n      relativeInput(\"weight.reduction.percent\", { min: 0, max: 100, decimals: 0 });\n\n      // Adjust current or max HP if adjusting the other would break logical constraints\n      const nHpVal = system.hp?.value;\n      const hpVal = nHpVal ?? oldData.system.hp?.value ?? 0;\n      const nHpBase = system.hp?.base;\n      const hpBase = Math.max(1, nHpBase ?? oldData.system.hp?.base ?? 1);\n\n      // Adjust only if the relevant field was edited\n      if (targetName === \"system.hp.value\") {\n        const realMax = this.item.system.hp?.max || 0;\n        if (Number.isFinite(nHpVal) && hpVal > realMax) {\n          foundry.utils.setProperty(system, \"hp.base\", hpBase + (hpVal - realMax));\n        }\n      }\n    }\n\n    // Adjust Material Addons\n    // The available addons can change depending in the chosen material,\n    // so we need to get the values to build the addons on the item.\n    const material = this.item.type === \"equipment\" ? system.armor?.material : system.material;\n    if (material?.addon) {\n      // Convert to array\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    // Validate max uses formula and set current uses to maximum if null\n    if (\n      formData.system.uses?.maxFormula &&\n      formData.system.uses?.maxFormula !== (this.item.system.uses?.maxFormula || \"\")\n    ) {\n      try {\n        const roll = new pf1.dice.RollPF(formData.system.uses.maxFormula, this.item.getRollData()).evaluateSync();\n        formData.system.uses.value ??= roll.total;\n      } catch (err) {\n        console.error(\"Max charges formula is invalid:\", formData.system.uses?.maxFormula, \"\\n\", err);\n      }\n    }\n\n    // Update the Item\n    return super._updateObject(event, formData);\n  }\n\n  /* -------------------------------------------- */\n\n  _onHoverTooltip(event) {\n    const type = event.target.dataset.tooltipType;\n    const content = [];\n    switch (type) {\n      case \"weight\":\n        this._onHoverWeightTooltip(event, content);\n        break;\n      case \"price\":\n        this._onHoverPriceTooltip(event, content);\n        break;\n      case \"unidprice\":\n        this._onHoverPriceTooltip(event, content, false);\n        break;\n    }\n    return content.join(\"<br>\");\n  }\n\n  _onHoverWeightTooltip(event, content) {\n    const unit =\n      pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs;\n    const value = pf1.utils.limitPrecision(this.item.system.weight.converted.value, 3);\n    // TODO: better i18n support\n    const mValue = `${value} ${unit}`;\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: mValue }));\n  }\n\n  _onHoverPriceTooltip(event, content, identified = true) {\n    let cp = this.item.getValue({\n      sellValue: 1,\n      single: true,\n      inLowestDenomination: true,\n      forceUnidentified: !identified,\n    });\n\n    cp = Math.floor(cp); // getValue() can return decimals\n\n    const c = pf1.utils.currency.split(cp);\n    const inline = [];\n    for (const [key, rawValue] of Object.entries(c)) {\n      if (rawValue > 0) {\n        const value = pf1.utils.limitPrecision(rawValue, 2);\n        inline.push(game.i18n.format(`PF1.Currency.Inline.${key}`, { value }));\n      }\n    }\n\n    // Add base zero if no value\n    if (inline.length == 0) {\n      inline.push(game.i18n.format(`PF1.Currency.Inline.${pf1.config.currency.standard}`, { value: 0 }));\n    }\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: pf1.utils.i18n.join(inline) }));\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula || \"0\");\n      await roll.evaluate({ allowInteractive: false });\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.classList.add(\"invalid\");\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Formulas not meant for checks or other rolls must be deterministic\n    if (el.classList.contains(\"simple\")) {\n      if (!roll.isDeterministic || formula.includes(\"@\")) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeSimple\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeSimple\"));\n      }\n    }\n    // TODO: Make this selection better\n    else if (!el.classList.contains(\"roll\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /**\n   * Activate listeners for interactive item sheet events\n   *\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const hasActor = !!this.actor;\n\n    const html = jq[0];\n\n    if (this.item.isPhysical) {\n      for (const el of html.querySelectorAll(\".details-tooltip\")) {\n        el.addEventListener(\n          \"pointermove\",\n          (ev) => {\n            const content = this._onHoverTooltip(ev);\n            if (!content) return;\n\n            const template = document.createElement(\"template\");\n            template.innerHTML = content;\n\n            game.tooltip.activate(el, {\n              content: template.content,\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.RIGHT,\n              cssClass: \"pf1\",\n            });\n          },\n          { passive: true }\n        );\n        el.addEventListener(\"pointerleave\", (ev) => game.tooltip.deactivate(), { passive: true });\n      }\n    }\n\n    // Action interactions\n    jq.find(\".actions .item-list .item .item-name\")\n      // Edit action\n      .on(\"contextmenu\", this._onActionEdit.bind(this))\n      // Action summaries\n      .on(\"click\", this._onActionSummary.bind(this));\n\n    // Action control\n    jq.find(\".actions .action-controls a\").on(\"click\", this._onActionControl.bind(this));\n\n    // Instructions control\n    jq.find(\".tab.description .instructions .controls a.html-editor\").on(\"click\", this._onOpenTextEditor.bind(this));\n\n    // Open help browser\n    jq.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Open entry/trait editor/viewer\n    jq.find(\".entry-selector\").on(\"click\", this._onEntrySelector.bind(this));\n    jq.find(\".trait-selector\").on(\"click\", this._onTraitSelector.bind(this));\n    jq.find(\".flag-selector\").on(\"click\", this._onFlagSelector.bind(this));\n\n    // Content source editor\n    jq.find(\".content-source .control a.edit\").click(() =>\n      pf1.applications.ContentSourceEditor.open(this.item, { editable: this.isEditable })\n    );\n\n    // Mark proficiency in indeterminate state if not forced but actor has it.\n    if (\n      hasActor &&\n      this.item.system.proficient !== true &&\n      [\"weapon\", \"equipment\", \"attack\"].includes(this.item.type)\n    ) {\n      if (this.item.isProficient) {\n        const proficiency = jq.find(\"input[name='system.proficient']\")[0];\n        if (proficiency) proficiency.indeterminate = true;\n      }\n    }\n\n    // Mark broken in indeterminate state if it's automatically designated broken but not explicitly\n    if (this.item.isPhysical) {\n      if (this.item.isBroken && this.item.system.broken !== true) {\n        const broken = jq.find(\"input[name='system.broken']\")[0];\n        if (broken) {\n          broken.indeterminate = true;\n          broken.dataset.tooltip = \"PF1.AutoBroken\";\n        }\n      }\n    }\n\n    // Allow editing and viewing visible scripts\n    jq.find(\".script-calls .item-list .item\").contextmenu(this._onScriptCallEdit.bind(this));\n    jq.find(\".script-calls .item-control\").click(this._onScriptCallControl.bind(this));\n\n    // Add warning about formulas\n    jq.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    // Linked item clicks\n    jq.find(\".tab[data-tab='links'] .links-item .item-name .source-item\").on(\"click\", this._openLinkedItem.bind(this));\n\n    jq.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    // Modify note changes\n    jq.find(\".context-note-control\").click(this._onNoteControl.bind(this));\n    jq.find(\".context-note .context-note-target\").click(this._onNoteTargetControl.bind(this));\n\n    // Create new change\n    jq.find(\".tab.changes .controls a.add-change\").click(this._onCreateChange.bind(this));\n\n    // Effect notes and footnotes\n    jq.find(\".card-notes .controls a\").click(this._onCardNoteControl.bind(this));\n\n    // Link control\n    jq.find(\".link-control\").click(this._onLinkControl.bind(this));\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      jq.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add drop handler to textareas and text inputs\n    jq.find(\"textarea, input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Changes\n    html.querySelectorAll(\".tab.changes .changes .change[data-change-id]\").forEach((el) => {\n      // Sticky tooltip controls\n      el.querySelector(\".controls a.menu\").addEventListener(\"pointerenter\", this._onOpenChangeMenu.bind(this), {\n        passive: true,\n      });\n      // Right click open change editor\n      el.addEventListener(\"contextmenu\", this._onEditChange.bind(this));\n    });\n\n    // Create attack\n    if ([\"weapon\"].includes(this.item.type)) {\n      jq.find(\"button[name='create-attack']\").click(this._createAttack.bind(this));\n    }\n\n    // Create spellbook\n    if (this.item.type === \"class\") {\n      jq.find(\"button[name='create-spellbook']\").click(this._createSpellbook.bind(this));\n    }\n\n    // Listen to field entries\n    jq.find(\".item-selector\").click(this._onItemSelector.bind(this));\n\n    // Click to change text input\n    jq.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n\n    // Select the whole text on click\n    jq.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    jq.find(\".speed-editor\").click(this._onSpeedEdit.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Actions\n    /* -------------------------------------------- */\n\n    // Modify action charges\n    jq.find(\".action-parts .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setActionUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setActionUses.bind(this));\n      });\n\n    // Open charge source with right click\n    jq.find(\".item-link[data-item-id]\").on(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.currentTarget.dataset.itemId;\n      const item = this.actor.items.get(itemId);\n      item?.sheet.render(true, { focus: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Script Calls\n    /* -------------------------------------------- */\n\n    jq.find(\".script-calls .item-list[data-category]\").on(\"drop\", this._onScriptCallDrop.bind(this));\n  }\n\n  _onSpanTextInput(event, callback = null) {\n    const el = event.currentTarget;\n    const parent = el.parentElement;\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(`INPUT`);\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) newEl.dataset.dtype = el.dataset.dtype;\n\n    // Set value of new input element\n    let prevValue = el.innerText;\n    if (el.classList.contains(\"placeholder\")) prevValue = \"\";\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n\n    const name = el.getAttribute(\"name\");\n    let maxValue;\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.item, name) ?? \"\";\n      if (typeof prevValue !== \"string\") prevValue = prevValue.toString();\n\n      if (name.endsWith(\".value\") && !noCap) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.item, maxName);\n      }\n    }\n    newEl.value = prevValue;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    // Replace span with input element\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = parseFloat(el.dataset.clearValue || \"0\");\n    parent.replaceChild(newEl, el);\n    let changed = false;\n    newEl.addEventListener(\"keypress\", (event) => {\n      if (event.key !== \"Enter\") return;\n      changed = true;\n      if (allowRelative) {\n        const number = pf1.utils.internal.adjustNumberByStringCommand(\n          parseFloat(prevValue),\n          newEl.value,\n          maxValue,\n          clearValue\n        );\n        newEl.value = number;\n      }\n\n      if (newEl.value.toString() === prevValue.toString()) {\n        this.render();\n      } else if (typeof callback === \"function\") {\n        callback(event);\n      }\n    });\n    newEl.addEventListener(\"focusout\", (event) => {\n      if (!changed) {\n        changed = true;\n        if (allowRelative && parseFloat(prevValue) !== parseFloat(newEl.value)) {\n          const number = pf1.utils.internal.adjustNumberByStringCommand(\n            parseFloat(prevValue),\n            newEl.value,\n            maxValue,\n            clearValue\n          );\n          newEl.value = number;\n        }\n\n        if (newEl.value.toString() === prevValue.toString()) {\n          this.render();\n        } else if (typeof callback === \"function\") {\n          callback(event);\n        }\n      }\n    });\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setActionUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const actionId = el.closest(\".item[data-action-id]\").dataset.actionId;\n    const action = this.item.actions.get(actionId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setActionUpdate(action.id, \"uses.self.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateActions(), { passive: true, once: true });\n    } else this._updateActions();\n  }\n\n  setActionUpdate(id, key, value) {\n    let obj = this._actionUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._actionUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _updateActions() {\n    const updates = this._actionUpdates;\n    this._actionUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const action = this.item.actions.get(d._id);\n      if (!action) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      await action.update(d);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const category = a.dataset.category;\n\n    pf1.applications.compendiums[category].render(true, { focus: true });\n  }\n\n  async _onScriptCallControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const script = this.item.scriptCalls ? this.item.scriptCalls.get(a.closest(\".item\")?.dataset.itemId) : null;\n    const group = a.closest(\".item-list\");\n    const category = group.dataset.category;\n\n    // Create item\n    if (a.classList.contains(\"item-create\")) {\n      await this._onSubmit(event, { preventRender: true });\n      const newScripts = await pf1.components.ItemScriptCall.create([{ category, type: \"script\" }], {\n        parent: this.item,\n      });\n      newScripts?.forEach((script) => script.edit());\n      return;\n    }\n    // Delete item\n    else if (script && a.classList.contains(\"item-delete\")) {\n      const list = (this.item.system.scriptCalls || []).filter((o) => o._id !== script.id);\n      const updateData = { \"system.scriptCalls\": list };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Edit item\n    else if (script && a.classList.contains(\"item-edit\")) {\n      script.edit();\n    }\n    // Toggle hidden\n    else if (script && a.classList.contains(\"item-hide\")) {\n      await this._onSubmit(event, { preventRender: true });\n      script.update({ hidden: !script.hidden });\n    }\n  }\n\n  _onScriptCallEdit(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    /** @type {pf1.components.ItemScriptCall} */\n    const script = this.item.scriptCalls?.get(el.dataset.itemId);\n    script?.edit({ editable: this.isEditable });\n  }\n\n  /**\n   * Handle dropping content-linkable data to `<textarea>` or text `<input>`\n   *\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onTextAreaDrop(event) {\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    if (elem.disabled || elem.readOnly) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n    if (!link) return void ui.notifications.warn(\"PF1.Error.InvalidContentLinkDrop\", { localize: true });\n\n    // Insert link\n    // TODO: Replace painted text if any\n    elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n    return this._onSubmit(event); // Save\n  }\n\n  async _onScriptCallDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const { uuid, type } = eventData;\n    if (type !== \"Macro\") return;\n\n    // Submit data\n    if (uuid) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const elem = event.currentTarget;\n      const category = elem.dataset.category;\n\n      return pf1.components.ItemScriptCall.create([{ type: \"macro\", value: uuid, category, name: \"\", img: \"\" }], {\n        parent: this.item,\n      });\n    }\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * By default, returns true only for GM\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const elem = event.target;\n\n    // Drag action\n    const actionId = elem.dataset.actionId;\n    if (actionId) {\n      /** @type {pf1.components.ItemAction} */\n      const action = this.item.actions.get(actionId);\n      const obj = { type: \"pf1Action\", uuid: action.uuid, actionId: action.id, data: action.toObject() };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag Change\n    const changeId = elem.dataset.changeId;\n    if (changeId) {\n      /** @type {pf1.components.ItemChange} */\n      const ch = this.item.changes.get(changeId);\n      const obj = { type: \"pf1Change\", data: ch.toObject(), changeId, uuid: ch.uuid };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag link\n    if (elem.matches(\".links-item .item-name\")) {\n      const el = elem.closest(\"[data-uuid]\");\n      const type = el.closest(\"[data-tab]\")?.dataset.tab;\n      const uuid = pf1.utils.internal.uniformUuid(el.dataset.uuid, this.actor);\n      const index = Number(el.dataset.index);\n      const link = this.item.system.links?.[type]?.[index];\n      const obj = { type: \"Item\", uuid, pf1Link: {} };\n      if (link) obj.pf1Link.level = link.level;\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n  }\n\n  /**\n   * Allow non-GM to drag&drop actions and items (for containers) to this sheet.\n   *\n   * @override\n   * @protected\n   */\n  _canDragDrop() {\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    if (!this.isEditable) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dropData = TextEditor.getDragEventData(event);\n    const { type, uuid } = dropData;\n    if (!type) return; // Weird drop, just bail out on it\n\n    /** @type {ItemPF} */\n    const item = this.item;\n\n    const srcDoc = uuid ? await fromUuid(uuid) : null;\n\n    switch (type) {\n      // Handle actions\n      case \"pf1Action\": {\n        let actionData;\n\n        /** @type {pf1.components.ItemAction} */\n        let parentItem;\n        // @deprecated\n        if (srcDoc instanceof Item) {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemSheetPF drop handler accepting Actions with UUID pointing to the Item is deprecated, please provide UUID to the Action itself\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n          actionData = dropData.data;\n          parentItem = srcDoc;\n        }\n        // New functionality\n        else {\n          actionData = srcDoc.toObject();\n          parentItem = srcDoc.item;\n        }\n\n        const actionId = actionData._id || dropData.actionId;\n\n        this.activateTab(\"details\", { group: \"primary\" });\n\n        // Re-order\n        if (parentItem === item) {\n          const targetActionId = event.target.closest(\".item[data-action-id]\")?.dataset.actionId;\n          if (!targetActionId) return void console.debug(\"Action dropped at an indeterminate location; ignoring\");\n\n          // Dropped onto self, ignore.\n          if (targetActionId === actionId) return void console.debug(`Action [${uuid}] dropped onto itself; ignoring`);\n\n          /** @type {object[]} */\n          const prevActions = item.toObject().system.actions ?? [];\n\n          let targetIdx;\n          if (!targetActionId) targetIdx = prevActions.length - 1;\n          else targetIdx = prevActions.indexOf(prevActions.find((o) => o._id === targetActionId));\n          const srcIdx = prevActions.indexOf(prevActions.find((o) => o._id === actionId));\n\n          const [actionData] = prevActions.splice(srcIdx, 1);\n          prevActions.splice(targetIdx, 0, actionData);\n\n          await this.item.update({ \"system.actions\": prevActions });\n        }\n        // Add to another item\n        else {\n          delete actionData._id;\n          return pf1.components.ItemAction.create([actionData], { parent: this.item });\n        }\n        break;\n      }\n\n      case \"pf1Change\": {\n        return this._onChangeDrop(event, dropData);\n      }\n\n      case \"Item\": {\n        // Add drop handler to link tabs\n        const linksTab = event.target.closest(\".tab.links .tab[data-group='links']\");\n        if (linksTab) this._onLinksDrop(event, dropData);\n        break;\n      }\n      case \"pf1ContentSourceEntry\": {\n        const src = dropData.data;\n        const origin = await fromUuid(dropData.uuid);\n        if (!origin) return;\n        if (origin === this.item) return; // From same item\n\n        const sources = this.item.toObject().system.sources ?? [];\n\n        // Disallow same ID source copy\n        if (src.id && sources.some((osrc) => (src.id ? osrc.id === src.id : osrc.title === src.title))) {\n          ui.notifications.warn(\"PF1.ContentSource.Errors.DuplicateID\", { localize: true });\n          return;\n        }\n\n        sources.push(src);\n        await this.item.update({ \"system.sources\": sources });\n        if (!event.shiftKey) {\n          pf1.applications.ContentSourceEditor.open(this.item);\n          // TODO: Activate desired tab.\n        }\n        break;\n      }\n      default:\n        ui.notifications.warn(game.i18n.format(\"PF1.Warning.InvalidItemSheetDrop\", { type }));\n        break;\n    }\n  }\n\n  async _onLinksDrop(event, data) {\n    const elem = event.target;\n    const category = elem.closest(\"[data-tab]\").dataset.tab;\n\n    // Try to extract the data\n    if (!data.type) throw new Error(\"Invalid drop data received\");\n\n    const targetItem = await fromUuid(data.uuid);\n    if (!targetItem || !(targetItem instanceof Item))\n      throw new Error(`UUID did not resolve to valid item: ${data.uuid}`);\n\n    // Add extra data\n    const extraData = {};\n    switch (category) {\n      case \"classAssociations\": {\n        const level = data.pf1Link?.level;\n        if (Number.isNumeric(level)) extraData.level = level;\n        break;\n      }\n    }\n\n    await this.item.createItemLink(category, targetItem, extraData);\n  }\n\n  /**\n   * Handle {@link pf1.components.ItemChange} drop events.\n   *\n   * @internal\n   * @param {DragEvent} event - The originating drop event\n   * @param {object} data - The data extracted from the drop event\n   * @returns {Promise<void>}\n   */\n  async _onChangeDrop(event, data) {\n    const item = this.item;\n    const srcDoc = data.uuid ? await fromUuid(data.uuid) : null;\n    let chData;\n\n    /** @type {ItemPF} */\n    let parentItem;\n    // @deprecated\n    if (srcDoc instanceof Item) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemSheetPF drop handler accepting Changes with UUID pointing to the Item is deprecated, please provide UUID to the Change itself\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      chData = data.data;\n      parentItem = srcDoc;\n    }\n    // New functionality\n    else {\n      chData = srcDoc.toObject();\n      parentItem = srcDoc.parent;\n    }\n\n    const changeId = chData._id || data.changeId;\n\n    this.activateTab(\"changes\", { group: \"primary\" });\n\n    // Sort in same item\n    if (parentItem === item) {\n      const targetChangeId = event.target.closest(\".change[data-change-id]\")?.dataset.changeId;\n      if (!targetChangeId) return void console.debug(\"Change dropped at an indeterminate location; ignoring\");\n\n      // Dropped onto self, ignore.\n      if (changeId === targetChangeId) return void console.debug(`Change [${data.uuid}] dropped onto itself; ignoring`);\n\n      // Re-arrange\n      /** @type {Array<object>} */\n      const changes = item.toObject().system.changes ?? [];\n      const removed = changes.findSplice((c) => c._id === changeId);\n      if (!removed) return;\n      const idx = changes.findIndex((c) => c._id === targetChangeId);\n      if (idx >= 0) {\n        changes.splice(idx, 0, removed);\n        return item.update({ \"system.changes\": changes });\n      }\n    }\n    // Duplicate\n    else {\n      delete chData._id;\n      return pf1.components.ItemChange.create([chData], { parent: item });\n    }\n  }\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n      hasCustom: a.dataset.hasCustom !== \"false\",\n    };\n\n    switch (a.dataset.options) {\n      case \"conditions\": {\n        options.choices = pf1.registry.conditions.getLabels();\n        break;\n      }\n      case \"subschool\": {\n        const school = a.dataset.school;\n        const subs = new Set([...pf1.config.spellSubschoolsMap[school], ...this.item.system.subschool.base]);\n        const choices = subs.reduce((acc, curr) => ({ ...acc, [curr]: pf1.config.spellSubschools[curr] }), {});\n        options.choices = choices;\n        break;\n      }\n    }\n\n    new ActorTraitSelector({\n      ...options,\n      document: this.item,\n    }).render(true);\n  }\n\n  /**\n   * Handle spawning the FlagSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onFlagSelector(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n    };\n\n    new FlagSelector({\n      ...options,\n      document: this.item,\n    }).render(true);\n  }\n\n  _onSpeedEdit(event) {\n    event.preventDefault();\n\n    const app = Object.values(ui.windows).find((o) => {\n      return o instanceof SpeedEditor && o.document === this.item;\n    });\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new SpeedEditor({ document: this.item }).render({ force: true });\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @protected\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   */\n  async _onActionSummary(event) {\n    event.preventDefault();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    // Check whether pseudo-item belongs to another collection\n    const action = this.item.actions.get(li.dataset.actionId);\n\n    const rollData = action.getRollData();\n\n    // For actions (embedded into a parent item), show only the action's summary instead of a complete one\n    const { actionDescription, properties } = await action.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    if (li.classList.contains(\"expanded\")) {\n      const summary = li.querySelector(\".action-summary\");\n      $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: actionDescription,\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/items/parts/item-action-summary.hbs\", templateData);\n      content = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.item.isOwner });\n\n      const div = $(content);\n      div.hide();\n      li.append(...div);\n      div.slideDown(200);\n    }\n    li.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Open linked item sheet.\n   *\n   * @param {Event} event\n   */\n  async _openLinkedItem(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".links-item[data-uuid],.links-item[data-item-id]\");\n    const { uuid } = el.dataset;\n\n    const item = await fromUuid(uuid, { relative: this.actor });\n    item.sheet.render(true, { focus: true });\n  }\n\n  async _onActionControl(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const a = event.currentTarget;\n\n    const getUniqueActionName = (baseName) => {\n      baseName = baseName.replace(/\\s*\\(\\d+\\)$/, \"\"); // Strip existing number\n      let name = baseName;\n      const names = new Set(this.item.actions?.map((act) => act.name) ?? []);\n      let iter = 1;\n      // Find unique name\n      while (names.has(name)) name = `${baseName} (${iter++})`;\n      return name;\n    };\n\n    // Edit action\n    if (a.classList.contains(\"edit-action\")) {\n      return this._onActionEdit(event);\n    }\n    // Add action\n    else if (a.classList.contains(\"add-action\")) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const baseName = [\"weapon\", \"attack\"].includes(this.item.type)\n        ? game.i18n.localize(\"PF1.Attack\")\n        : game.i18n.localize(\"PF1.Use\");\n\n      const newActionData = {\n        name: getUniqueActionName(baseName),\n      };\n\n      const newActions = await pf1.components.ItemAction.create([newActionData], { parent: this.item });\n      newActions.forEach((action) => action.sheet.render(true));\n      return;\n    }\n    // Remove action\n    else if (a.classList.contains(\"delete-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const action = this.item.actions.get(li.dataset.actionId);\n\n      const confirmed = getSkipActionPrompt()\n        ? true\n        : await foundry.applications.api.DialogV2.confirm({\n            window: { title: game.i18n.format(\"PF1.DeleteActionTitle\", { name: action.name }) },\n            classes: [\"pf1-v2\", \"delete-action\"],\n            content: `<p>${game.i18n.format(\"PF1.DeleteActionConfirmation\", { name: this.item.name })}</p>`,\n            rejectClose: false,\n            modal: true, // Require dialog to be resolved\n          });\n\n      if (confirmed === true) {\n        await this._onSubmit(event, { preventRender: true });\n        action.delete();\n      }\n    }\n    // Duplicate action\n    else if (a.classList.contains(\"duplicate-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const actions = this.item.toObject().system.actions ?? [];\n      const action = foundry.utils.deepClone(actions.find((act) => act._id === li.dataset.actionId) ?? {});\n      action.name = getUniqueActionName(action.name);\n      action._id = foundry.utils.randomID(16);\n      actions.push(action);\n      const updateData = { \"system.actions\": actions };\n      await this._updateObject(event, this._getSubmitData(updateData));\n      this.item.actions.get(action._id)?.sheet.render(true);\n    }\n  }\n\n  async _onActionEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    this.item.actions.get(li.dataset.actionId).sheet.render(true);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onOpenTextEditor(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) throw new Error(\"Document is not editable!\");\n\n    const app = new pf1.applications.HTMLEditor({\n      document: this.item,\n      path: event.target.dataset.path,\n      window: { title: `${game.i18n.localize(\"PF1.Instructions\")} – ${this.item.name}` },\n    });\n\n    app.render(true);\n  }\n\n  async _onOpenChangeMenu(event) {\n    const el = event.target;\n\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n\n    const content = document.createElement(\"div\");\n    content.innerHTML = await renderTemplate(\"systems/pf1/templates/items/parts/item-change-tooltip.hbs\", { changeId });\n\n    content.querySelector(\".duplicate\").addEventListener(\"click\", (ev) => this._onDuplicateChange(ev, el));\n    content.querySelector(\".delete\").addEventListener(\"click\", (ev) => this._onDeleteChange(ev, el));\n    content.querySelector(\".edit\").addEventListener(\"click\", (ev) => this._onEditChange(ev, el, true));\n\n    if (!document.querySelector(`.locked-tooltip.pf1.change-${changeId}`)) {\n      await game.tooltip.activate(el, {\n        content,\n        locked: true,\n        direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n        cssClass: \"pf1 change-menu change-\" + changeId,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   * @param {boolean} [tooltip] - Is this event from locked tooltip?\n   */\n  _onEditChange(event, tooltip = false) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.closest(\"[data-change-id]\").dataset.changeId;\n    const change = this.item.changes.get(changeId);\n    if (change) {\n      if (tooltip) game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      return void pf1.applications.ChangeEditor.wait({ change, document: this.item });\n    }\n  }\n\n  _onDuplicateChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n    const changes = this.item.toObject().system.changes ?? [];\n    const old = changes.find((c) => c._id === changeId);\n    if (old) {\n      game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      delete old._id;\n      return pf1.components.ItemChange.create([old], { parent: this.item });\n    }\n  }\n\n  _onDeleteChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n    this.item.changes.get(changeId)?.delete();\n  }\n\n  async _onCreateChange(event) {\n    event.preventDefault();\n\n    const [change] = await pf1.components.ItemChange.create([{ modifier: \"untyped\" }], { parent: this.item });\n    if (change) pf1.applications.ChangeEditor.wait({ change, document: this.item });\n  }\n\n  async _onNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Add new note\n    if (a.classList.contains(\"add-note\")) {\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.push(new pf1.components.ContextNote().toObject());\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a note\n    if (a.classList.contains(\"delete-note\")) {\n      const li = a.closest(\".context-note\");\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.splice(Number(li.dataset.note), 1);\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _onNoteTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const li = a.closest(\".context-note\");\n    const noteIndex = Number(li.dataset.note);\n    const note = this.item.system.contextNotes[noteIndex];\n    const categories = pf1.utils.internal.getBuffTargetDictionary(\"contextNotes\", {\n      actor: this.item.actor,\n      item: this.item,\n    });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = note?.target?.split(\".\")[0];\n    const category = pf1.config.contextNoteTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { window: { title: \"PF1.Application.ContextNoteTargetSelector.Title\" } },\n      categories,\n      (key) => {\n        if (key) {\n          const updateData = {};\n          updateData[`system.contextNotes.${noteIndex}.target`] = key;\n          this.item.update(updateData);\n        }\n      },\n      { category, item: note?.target }\n    );\n    w.render(true);\n  }\n\n  async _onLinkControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Delete link\n    if (a.classList.contains(\"delete-link\")) {\n      const { type, uuid, index } = a.dataset;\n      const links = this.item.toObject().system.links?.[type] ?? [];\n\n      const deleted = links.splice(Number(index), 1);\n\n      // Sanity check: Should happen only if update sneaks in between render and click\n      if (deleted.uuid && deleted.uuid !== uuid) throw new Error(\"Link deletion UUID mismatch\");\n\n      // Call hook for deleting a link\n      Hooks.callAll(\"pf1DeleteItemLink\", this.item, deleted, type);\n\n      const updateData = { \"system.links\": { [type]: links } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onInputText(event) {\n    event.preventDefault();\n\n    /** @type {HTMLElement} */\n    const elem = event.target;\n\n    elem.readOnly = false;\n\n    // Get and set real value\n    const { inputValue } = elem.dataset;\n    let origValue = inputValue ?? foundry.utils.getProperty(this.item, elem.name);\n    const displayValue = elem.value;\n    elem.value = origValue;\n    elem.select();\n\n    // Restore old display on unfocus if nothing was changed\n    elem.addEventListener(\n      \"blur\",\n      () => {\n        if (typeof origValue === \"number\") origValue = origValue.toString();\n        if (origValue === elem.value) {\n          elem.readOnly = true;\n          elem.value = displayValue;\n        }\n\n        // Clear selection\n        const s = document.getSelection();\n        if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n      },\n      { once: true, passive: true }\n    );\n  }\n\n  async _createAttack(event) {\n    if (!this.actor) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n\n    await this._onSubmit(event, { preventRender: true });\n\n    const item = this.item;\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(item);\n\n    // Show in quickbar only if if the original item is there\n    attackItem.system.showInQuickbar = item.system.showInQuickbar;\n\n    // Create attack\n    const newAttack = await Item.implementation.create(attackItem, { parent: this.actor });\n    if (!newAttack) throw new Error(\"Failed to create attack from weapon\");\n\n    // Disable quick use of weapon\n    await item.update({ \"system.showInQuickbar\": false });\n\n    // Create link\n    await item.createItemLink(\"children\", newAttack);\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: item.name }));\n  }\n\n  async _createSpellbook(event) {\n    event.preventDefault();\n    if (this.item.actor == null) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n    await this._onSubmit(event, { preventRender: true });\n\n    await this.item.actor.createSpellbook({ ...this.item.system.casting, class: this.item.system.tag });\n\n    // HACK: The above does not re-render the item sheet for some reason\n    this.render();\n  }\n\n  _onEntrySelector(event) {\n    event.preventDefault();\n\n    //if (!this.isEditable) return; // Learned at data can't be seen otherwise\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: a.dataset.title,\n      flag: a.dataset.flag === \"true\",\n      boolean: a.dataset.boolean === \"true\",\n      flat: a.dataset.flat === \"true\",\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n    };\n\n    const app = Object.values(foundry.applications.instances).find((o) => {\n      return o instanceof pf1.applications.EntrySelector && o.name === options.name && o.document.id === this.id;\n    });\n\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new pf1.applications.EntrySelector({\n        ...options,\n        document: this.item,\n      }).render({ force: true });\n    }\n  }\n\n  async _onItemSelector(event) {\n    event.preventDefault();\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n    // This function should never be called without an actor\n    if (!this.actor) throw new Error(\"No actor to find items from.\");\n\n    const { type, subType, kind, empty, selected, label, name } = event.currentTarget.dataset;\n\n    const filter = (item) => {\n      if (type && item.type !== type) return false;\n      if (subType && item.subType !== subType) return false;\n      if (subType === \"ammo\" && kind) {\n        if (item.system.extraType !== kind) return false;\n      }\n      return true;\n    };\n\n    const options = {\n      window: {\n        title: `${game.i18n.format(\"PF1.SelectSpecific\", { specifier: game.i18n.localize(label) })} - ${\n          this.actor.name\n        }`,\n      },\n      id: `${this.item.uuid}-item-selector`,\n      actor: this.actor,\n      empty: empty === \"true\" || empty !== \"false\",\n      filterFunc: filter,\n      selected,\n    };\n\n    const item = await pf1.utils.dialog.getItem(options);\n    if (!item) return;\n\n    this.item.update({ [name]: item.id });\n  }\n\n  /**\n   * Control effect notes and footnotes\n   *\n   * @internal\n   * @param {Event} event\n   * @returns {Promise<void>}\n   */\n  async _onCardNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const name = a.dataset.name;\n    const action = a.dataset.action;\n\n    const notes = foundry.utils.getProperty(this.item.toObject(), name) ?? [];\n\n    switch (action) {\n      case \"add\": {\n        notes.push(\"\");\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      case \"delete\": {\n        notes.splice(Number(a.dataset.index), 1);\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n}\n\n/**\n * @typedef {object} DescriptionAttribute\n * @property {string} name - Data path to which the input will be written\n * @property {boolean} [fakeName] - Is player lied to about what they're editing. Unused.\n * @property {string} id\n * @property {boolean} [isNumber] - Whether the input is a number (text input)\n * @property {boolean} [isBoolean] - Whether the input is a boolean (checkbox)\n * @property {boolean} [isRange] - Whether this is a dual input for a value and a maximum value\n * @property {string} label - The label for the input\n * @property {string | boolean | number | {value: string | number, name: string}} value - The value that is show in the sidebar.\n *   Ranges require an object with `value` and `name` properties.\n * @property {{value: string | number, name: string}} [max] - Maximum value for a range input\n * @property {number} [decimals] - Number of decimals to display for `number`s\n * @property {boolean} [fakeValue] - Is {@link DescriptionAttribute#inputValue} actually used.\n * @property {string} [inputValue] - Value that will appear in the input field when it is edited,\n *                                   overriding the default value retrieved from the item data\n *                                   using {@link DescriptionAttribute#name}\n */\n","import { ItemSheetPF } from \"./item-sheet.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { CurrencyTransfer } from \"../currency-transfer.mjs\";\n\nexport class ItemSheetPF_Container extends ItemSheetPF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * IDs of expanded items.\n     *\n     * @private\n     * @type {string[]}\n     */\n    this._expandedItems = [];\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      search: { container: \"\" },\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = \"\"; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Override item sheet initial tab.\n     * Assumes first tab definition is the main tab.\n     */\n    this.options.tabs[0].initial = \"contents\"; // Doesn't actually do anything\n    this._tabs[0].active = \"contents\"; // Actual override\n  }\n\n  static get defaultOptions() {\n    const defaultOptions = super.defaultOptions;\n    return foundry.utils.mergeObject(defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [...defaultOptions.scrollY, \".inventory-body\"],\n      dragDrop: [\n        { dragSelector: \"li.item[data-item-id]\", dropSelector: '.tab[data-tab=\"contents\"]' },\n        { dragSelector: \".tab.changes li.change\" },\n        { dragSelector: \"label.denomination\" },\n      ],\n    });\n  }\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    return \"systems/pf1/templates/items/container.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const context = await super.getData();\n\n    context.units = {\n      weight:\n        pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n    };\n\n    // Add filters\n    context.filters = this._filters;\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.item.system.currency).some((o) => o > 0);\n\n    // Prepare inventory\n    this._prepareContents(context);\n\n    // Get contents weight\n    const usystem = pf1.utils.getWeightSystem();\n    context.weight = {\n      contents: this.item.system.weight.converted.contents,\n      units: usystem === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n    };\n\n    // Get contents value\n    const coinage = pf1.utils.currency.merge(this.item.system.currency);\n\n    const cpValue =\n      this.item.getValue({ recursive: true, sellValue: 1, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) -\n      coinage;\n    const cpSellValue =\n      this.item.getValue({ recursive: true, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, inLowestDenomination: true }) -\n      coinage;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.currency = pf1.utils.currency.split(coinage, { pad: true });\n\n    // Set value labels\n    context.labels ??= {};\n    context.labels.totalValue = game.i18n.format(\"PF1.SplitValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.SplitValue\", context.sellValue);\n    context.labels.currency = game.i18n.format(\"PF1.SplitValue\", context.currency);\n\n    context.labels.itemValue = `PF1.Currency.Inline.${pf1.config.currency.standard}`;\n\n    return context;\n  }\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @internal\n   * @param {object} item - Item render data\n   * @param {object} section - Section configuration\n   * @param {object} context - Render context\n   */\n  _prepareItemForSection(item, section, context) {\n    if (section.interface.value) {\n      item.price = {\n        value: item.document.getValue({ single: true, recursive: false, sellValue: 1 }),\n        stack: item.document.getValue({ single: false, recursive: true, sellValue: 1 }),\n      };\n    }\n  }\n\n  /**\n   * @protected\n   * @param {pf1.documents.item.ItemPhysicalPF} item - Item document\n   * @param {object} context - Render context\n   * @returns {object} - Item render data\n   */\n  _prepareItem(item, context) {\n    const itemData = item.system;\n    const result = { ...item };\n    result.id = item.id; // Alias\n    result.name = item.name;\n    result.img ||= item.getDefaultArtwork();\n    result.subType = item.subType;\n    result.document = item;\n    result.labels = item.getLabels();\n    result.isCharged = !item.isSingleUse && item.isCharged;\n    result.charges = result.isCharged ? item.charges : Infinity;\n    result.hasAttack = item.hasAttack;\n    result.hasDamage = item.hasDamage;\n    result.hasAction = item.hasAction || item.isCharged;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n\n    result.hasUses = item.system.uses?.max > 0;\n    //i.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n\n    result.quantity = itemData.quantity || 0;\n    result.isStack = result.quantity > 1;\n    result.destroyed = itemData.hp?.value <= 0;\n    result.isEmpty = result.quantity <= 0;\n    result.isBroken = item.isBroken;\n\n    result.price = null;\n\n    if (!result.isEmpty && result.isCharged) {\n      if (result.charges <= 0) result.isEmpty = true;\n    }\n\n    if (result.isCharged) {\n      result.maxCharges = item.maxCharges;\n      result.noMaxCharges = !Number.isFinite(result.maxCharges);\n    }\n\n    result.disabled = result.isEmpty || result.destroyed || false;\n\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} context - Render context\n   */\n  _prepareContents(context) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // The item's items\n    context.items = this.item.items.map((item) => this._prepareItem(item));\n\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Organize Inventory\n    for (const itemData of context.items) {\n      const section = inventory.find((section) => this._applySectionFilter(itemData, section));\n      if (section) {\n        this._prepareItemForSection(itemData, section);\n        section.items ??= [];\n        section.items.push(itemData);\n      } else {\n        console.warn(`Could not find section for item \"${itemData.name}\"`, itemData);\n      }\n    }\n\n    context.inventory = inventory;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.document.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this._openItemSummary(elem, { animation: false });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(`.tab[data-tab=\"contents\"] .item-create`).click((ev) => this._onItemCreate(ev));\n    html.find(`.tab[data-tab=\"contents\"] .item-edit`).click(this._onItemEdit.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-delete`).click(this._onItemDelete.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-take`).click(this._onItemTake.bind(this));\n\n    html\n      .find(\".item .item-name\")\n      // Quick edit item\n      .contextmenu(this._onItemEdit.bind(this))\n      // Open item summary\n      .click(this._onItemSummary.bind(this));\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick Item Action control\n    html.find(\".item-actions a\").click((ev) => this._quickItemActionControl(ev));\n\n    // Set item uses\n    html\n      .find(\".item-detail.item-uses input[type='text']:not(:disabled)\")\n      .off(\"change\")\n      .change(this._setItemUses.bind(this))\n      .on(\"wheel\", this._setItemUses.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").on(\"click\", (event) => this._onItemCard(event));\n\n    // Search box\n    const sb = html.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n    this.searchRefresh = true;\n    // Filter following refresh\n    sb.each(function () {\n      if (this.value.length > 0) $(this).change();\n    });\n  }\n\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n\n    createData.name = Item.implementation.defaultName({ type, subType });\n    const newItem = new Item.implementation(createData);\n\n    // Get old items of same general category\n    const oldItems = this.item.items\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => (b.sort || 0) - (a.sort || 0));\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) newName = `${baseName} (${i++})`;\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    // Add to the end of the list of old items\n    const sort = oldItems.reduce((max, i) => Math.max(max, i.sort || 0), 0) + CONST.SORT_INTEGER_DENSITY;\n    newItem.updateSource({ sort });\n\n    return this.item.createContainerContent(newItem.toObject(), { renderSheet: true });\n  }\n\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true, editable: this.isEditable });\n  }\n\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this._openItemSummary(li);\n  }\n\n  /**\n   * @internal\n   * @param {Element} elem\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.animation=true]\n   * @param {object} [options.rollData]\n   */\n  async _openItemSummary(elem, { animation = true, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (!animation) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = await item.getChatData({ chatcard: false, rollData });\n      const content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n\n      let div = document.createElement(\"div\");\n      div.innerHTML = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.actor.isOwner });\n      div = div.firstElementChild; // The template has only one root element\n\n      if (animation) $(div).hide();\n      elem.append(div);\n      if (animation) $(div).slideDown(200);\n\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  async _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    if (getSkipActionPrompt()) {\n      this.item.deleteContainerContent(li.dataset.itemId);\n    } else {\n      button.disabled = true;\n\n      const item = this.document.items.get(li.dataset.itemId);\n\n      const confirm = await foundry.applications.api.DialogV2.confirm({\n        window: { title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }) },\n        classes: [\"pf1-v2\", \"delete-item\"],\n        content: `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`,\n        rejectClose: false,\n        modal: true, // Require dialog to be resolved\n      });\n\n      if (confirm) this.item.deleteContainerContent(li.dataset.itemId);\n\n      button.disabled = false;\n    }\n  }\n\n  async _onItemTake(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    if (this.actor) {\n      const newItem = await Item.implementation.create(item.toObject(), { parent: this.actor });\n      if (newItem) {\n        await this.item.deleteContainerContent(item._id);\n      }\n    }\n  }\n\n  _onDragStart(event) {\n    // Create drag data for an owned item\n    const elem = event.currentTarget;\n    let dragData;\n    if (elem.classList.contains(\"denomination\")) {\n      if (!this.item.testUserPermission(game.user, 3)) return;\n      dragData = {\n        type: \"Currency\",\n        alt: elem.classList.contains(\"alt-currency\"),\n        currency: [...elem.classList].find((o) => /[pgsc]p/.test(o)),\n        containerId: this.item.id,\n        amount: parseInt(elem.nextElementSibling.textContent || elem.nextElementSibling.value),\n      };\n    } else if (elem.dataset.itemId) {\n      const item = this.item.items.get(elem.dataset.itemId);\n      dragData = {\n        type: \"Item\",\n        data: item.toObject(),\n        containerId: this.item.id,\n      };\n      dragData.itemId = item.id;\n    } else {\n      return super._onDragStart(event);\n    }\n\n    // Add actor to drag data\n    dragData.actorUuid = this.item.actor?.uuid;\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Try to extract the data\n    const data = TextEditor.getDragEventData(event);\n\n    const item = this.item;\n\n    // Handle the drop with a Hooked function\n    const allowed = Hooks.call(\"pf1DropContainerSheetData\", item, this, data);\n    if (allowed === false) return;\n\n    // Handle different data types\n    switch (data.type) {\n      case \"Item\":\n        return this._onDropItem(event, data);\n      case \"Currency\": {\n        return this._onDropCurrency(event, data);\n      }\n      case \"pf1Change\": {\n        return this._onChangeDrop(event, data);\n      }\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: data.containerId, alt: data.alt },\n      {\n        actor: this.actor,\n        container: this.item.id,\n        amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n      }\n    ).render(true);\n  }\n\n  async _onDropItem(event, data) {\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n\n    const { actorUuid, containerId } = data;\n    const droppedItem = await Item.implementation.fromDropData(data);\n    let sourceActor = actorUuid ? await fromUuid(actorUuid) : null;\n    sourceActor ??= droppedItem.actor;\n\n    if (droppedItem === this.item || droppedItem === this.item.rootItem)\n      throw new Error(\"Can not place item into itself\");\n\n    const sameActor = sourceActor && sourceActor === this.item.actor;\n\n    const itemData = game.items.fromCompendium(droppedItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Sort item\n    if (sameActor && containerId === this.item.id) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create consumable from spell\n    if (itemData.type === \"spell\") {\n      const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n        allowSpell: false,\n        actor: this.item.actor,\n      });\n      if (resultData) return this.item.createContainerContent(resultData);\n      else return false;\n    }\n\n    // Create or transfer item\n    if (droppedItem.isPhysical) {\n      await this.item.createContainerContent(itemData);\n      // TODO: Verify item was created so we don't delete source item without reason\n\n      if (sameActor) {\n        if (containerId) {\n          sourceActor.containerItems\n            .find((i) => i.id === data.itemId && i.parentItem?.id === containerId)\n            ?.parentItem.deleteContainerContent(data.itemId);\n        } else {\n          sourceActor.items.get(droppedItem.id)?.delete();\n        }\n      }\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const isIdentified = item.system.identified;\n    if (isIdentified !== undefined) {\n      return item.update({ \"system.identified\": !isIdentified });\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const itemId = $(a).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    const itemData = item.toObject();\n\n    delete itemData.system?.links?.children;\n    delete itemData.system?.links?.charges;\n\n    itemData._stats ??= {};\n    itemData._stats.duplicateSource ||= item.uuid;\n\n    delete itemData._id;\n    itemData.name = `${itemData.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    if (item.isPhysical && !item.system.identified) {\n      itemData.system.unidentified.name = `${item.system.unidentified.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    }\n    if (itemData.system.links?.children) delete itemData.system.links.children;\n\n    return this.item.createContainerContent(itemData);\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n    if (item.type === \"container\" && newQuantity > 1) newQuantity = 1;\n    return item.update({ \"system.quantity\": newQuantity });\n  }\n\n  /**\n   * Handles click events to trigger the use of an item.\n   *\n   * @protected\n   * @param {MouseEvent} event - The originating click event\n   */\n  _quickItemActionControl(event) {\n    event.preventDefault();\n    const itemId = $(event.currentTarget).closest(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    item.use({ ev: event });\n  }\n\n  async _setItemUses(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    this._mouseWheelAdd(event.originalEvent, el);\n\n    const value = Number(el.value);\n    this.setItemUpdate(item._id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    for (const data of updates) {\n      const item = this.item.items.get(data._id);\n      if (!item) continue;\n\n      delete data._id;\n      if (item.testUserPermission(game.user, \"OWNER\")) promises.push(item.update(data));\n    }\n\n    return Promise.all(promises);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  _mouseWheelAdd(event, el) {\n    if (event && event instanceof WheelEvent) {\n      const value = parseFloat(el.value);\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(event.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n      el.value = value + amount * increase;\n    }\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n\n    this.item.convertCurrency(currencyType);\n  }\n\n  /**\n   * @override\n   */\n  _onSortItem(event, itemData) {\n    const items = this.document.items;\n\n    // Get the drag source and its siblings\n    const source = items.get(itemData._id);\n\n    // Get the drop target\n    const dropTarget = event.target.closest(\".item\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = items.get(targetId);\n\n    // Don't sort on yourself\n    if (targetId === source.id) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        const item = items.get(el.dataset.itemId);\n        // Only take same typed siblings\n        if (item.type !== source.type) continue;\n        siblings.push(item);\n      }\n    }\n\n    // Don't sort if target has no siblings\n    if (siblings.length == 0) return;\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target._id;\n      return update;\n    });\n\n    // Perform the update\n    return this.item.updateContainerContents(updateData);\n  }\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemCard(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard();\n  }\n\n  /** Item Search */\n\n  _searchFilterCommit(event) {\n    const container = this.item;\n    const search = this._filters.search.container.toLowerCase();\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch === search && !this.searchRefresh) return;\n\n    this.effectiveSearch = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = container.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const changed = this._filters.search.container !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    this._filters.search.container = search;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else this._searchFilterCommit(event);\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Derivate of Foundry's Item.createDialog() functionality.\n */\nexport class ItemCreateDialog extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  /** @type {object} - Creation data */\n  object;\n\n  /**\n   * @param {object} [options] - Optional configuration\n   * @param {object} [options.creationData] - Initial item data\n   * @param {object} [options.createOptions] - Context data to create\n   * @param {Function} [options.resolve] - Resolve callback\n   * @param {object} [options.options] - FormApplication options\n   * @param {Array<string>} options.types - Array of types to limit the choices to.\n   */\n  constructor({ creationData = {}, resolve, ...options } = {}) {\n    options.createOptions ??= {};\n\n    const moved = [\"pack\", \"parent\"];\n    for (const key of moved) {\n      if (key in options) {\n        foundry.utils.logCompatibilityWarning(\n          \"ItemCreateDialog parent and pack are now in options.createOptions instead of options directly.\",\n          { since: \"PF1 v11.5\", until: \"PF1 v12\", once: true }\n        );\n        options.createOptions[key] = options[key];\n      }\n    }\n\n    if (options.types) options.types = new Set(options.types);\n\n    super(options);\n\n    this.resolve = resolve;\n    this.object = creationData;\n\n    this._updateCreationData(creationData);\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") });\n  }\n\n  getDefaultName(form = true) {\n    const formData =\n      form && this.form ? foundry.utils.expandObject(new FormDataExtended(this.form).object) : this.createData;\n\n    const type = formData.type;\n    const subType = formData.system?.subType;\n\n    const { parent, pack } = this.options.createOptions;\n\n    return Item.implementation.defaultName({ type, subType, pack, parent });\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n    },\n    position: {\n      height: \"auto\",\n    },\n    classes: [\"pf1-v2\", \"create-document\", \"create-item\", \"standard-form\"],\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/widgets/item-create.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  get initialData() {\n    return this.object;\n  }\n\n  /** @type {object} */\n  createData = {};\n\n  /**\n   *\n   * @param {string} type - Item type\n   * @returns {Record<string,string>|null} - Option mapping\n   */\n  getSubtypes(type) {\n    switch (type) {\n      case \"class\":\n        return pf1.config.classTypes;\n      case \"race\":\n        return null;\n      case \"attack\":\n        return pf1.config.attackTypes;\n      case \"feat\":\n        return pf1.config.featTypes;\n      case \"weapon\":\n        return Object.entries(pf1.config.weaponTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"equipment\":\n        return Object.entries(pf1.config.equipmentTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"consumable\":\n        return pf1.config.consumableTypes;\n      case \"loot\":\n        return pf1.config.lootTypes;\n      case \"spell\":\n        return null;\n      case \"buff\":\n        return pf1.config.buffTypes;\n      case \"implant\":\n        return pf1.config.implantTypes;\n      case \"container\":\n        return null;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Called by {@link _preparePartContext}\n   *\n   * @internal\n   * @param {object} context - Context\n   * @param {object} options - Options\n   * @returns {object} - Same as context param\n   */\n  _prepareFormContext(context, options) {\n    const lang = game.i18n.lang;\n\n    const { parent, pack } = options.createOptions ?? {};\n\n    let collection;\n    if (!parent) {\n      if (pack) collection = game.packs.get(pack);\n      else collection = game.items;\n    }\n\n    // TODO: Visualize folder tree better\n    // TODO: Respect visibility of folders?\n    const folders = Object.fromEntries(\n      (collection?._formatFolderSelectOptions() ?? []).map(({ id, name }) => [id, name])\n    );\n\n    const createData = this.createData;\n\n    let subtypes = this.getSubtypes(createData.type);\n    if (!subtypes && createData.system?.subType !== undefined) delete createData.system.subType;\n    if (subtypes) {\n      subtypes = Object.fromEntries(\n        Object.entries(subtypes).sort(([_key0, label0], [_key1, label1]) => label0.localeCompare(label1, lang))\n      );\n\n      if (!subtypes[this.createData.system.subType]) {\n        this.createData.system.subType = Object.keys(subtypes)[0];\n      }\n    } else {\n      this.createData.system.subType = undefined;\n    }\n\n    const types = Object.fromEntries(\n      Object.entries(CONFIG.Item.typeLabels).sort(([_key0, label0], [_key1, label1]) =>\n        label0.localeCompare(label1, lang)\n      )\n    );\n    delete types.base; // base is Foundry's unusable default\n    if (this.options.types) {\n      for (const type of Object.keys(types)) {\n        if (!this.options.types.has(type)) delete types[type];\n      }\n    }\n\n    context.name = createData.name;\n    context.defaultName = this.getDefaultName(false);\n    context.folder = createData.folder;\n    context.type = createData.type;\n    context.subtype = createData.system?.subType || null;\n    context.choices = {\n      folders,\n      types,\n      subtypes,\n    };\n\n    if (Object.keys(folders).length == 0) delete context.choices.folders;\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {string} partId\n   * @param {object} context\n   * @param {object} options\n   * @returns {object}\n   */\n  _preparePartContext(partId, context, options) {\n    switch (partId) {\n      case \"footer\": {\n        // Footer buttons\n        context.buttons = [\n          {\n            action: \"create\",\n            type: \"submit\",\n            icon: \"fa-solid fa-check\",\n            label: game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") }),\n          },\n        ];\n        break;\n      }\n      case \"form\": {\n        return this._prepareFormContext(context, options);\n      }\n    }\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {object} formConfig\n   * @param {Event} event\n   */\n  _onChangeForm(formConfig, event) {\n    this._updateCreationData(new FormDataExtended(event.currentTarget).object);\n\n    super._onChangeForm(formConfig, event);\n\n    // HACK: Don't re-render on input changes, we have no reactive elements for them.\n    if (event.target.tagName === \"INPUT\") return;\n\n    this.render({ parts: [\"form\"] });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  _updateCreationData(data = {}) {\n    // Fill in default type if missing\n    data.type ||= CONFIG.Item.defaultType || game.documentTypes.Item[1];\n    // If type does not match restrictions, assume first type is correct\n    if (this.options.types && !this.options.types.has(data.type)) data.type = this.options.types.first();\n\n    this.createData = foundry.utils.mergeObject(this.initialData, data, { inplace: false });\n    this.createData.system ??= {};\n\n    // Clean up data\n    if (!data.folder && !this.initialData.folder) delete this.createData.folder;\n\n    const subtypes = this.getSubtypes(this.createData.type);\n    if (!subtypes) delete this.createData.system.subType;\n\n    return this.createData;\n  }\n\n  /**\n   * @override\n   * @param {SubmitEvent} event\n   * @param {HTMLFormElement} form\n   * @param {FormDataExtended} formData\n   */\n  static async _onSubmit(event, form, formData) {\n    const createData = this._updateCreationData(foundry.utils.expandObject(formData.object));\n    createData.name ||= this.getDefaultName(false);\n\n    if (!createData.folder) delete createData.folder;\n    if (!createData.name?.trim()) {\n      const { pack, parent } = this.options.createOptions ?? {};\n      createData.name = this.defaultName({ type: createData.type, parent, pack });\n    }\n\n    const promise = Item.implementation.create(createData, { renderSheet: true, ...this.options.createOptions });\n\n    this.resolve?.(promise);\n\n    this.close();\n  }\n\n  /** @override */\n  _onClose(options) {\n    super._onClose(options);\n    this.resolve?.(null);\n  }\n\n  /**\n   * Wait for dialog to the resolved.\n   *\n   * @todo\n   * - Refactor this to be normal prompt() override\n   * - Handle template and context parameters as dictated by Foundry API\n   *\n   * @param {object} [options] Options to pass to the constructor.\n   * @returns {Promise<Item|null>} Created item or null.\n   */\n  static waitPrompt(options = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      new this(options).render({ force: true });\n    });\n  }\n}\n","export class ItemActionSheet extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      template: \"systems/pf1/templates/apps/item-action.hbs\",\n      classes: [...options.classes, \"pf1\", \"sheet\", \"action\", \"item-action\"],\n      width: 580,\n      height: 720,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n      resizable: true,\n      scrollY: [\".tab\"],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n      ],\n      dragDrop: [\n        {\n          dragSelector: \"li.conditional\",\n          dropSelector: 'div[data-tab=\"conditionals\"]',\n        },\n      ],\n    };\n  }\n\n  get title() {\n    return `${this.item.name}: ${this.action.name}`;\n  }\n\n  get id() {\n    return `action-sheet-${this.action.uuid.replaceAll(\".\", \"-\")}`;\n  }\n\n  /** @type {ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  /** @type {ItemPF} */\n  get item() {\n    return this.action.item;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item.actor;\n  }\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"description\"];\n\n  render(...args) {\n    super.render(...args);\n\n    if (this.appId !== undefined) {\n      this.item.apps[this.appId] = this;\n      this.action.apps[this.appId] = this;\n    }\n\n    return this;\n  }\n\n  async getData() {\n    const action = this.action;\n    const item = this.item;\n    const actor = this.actor;\n\n    const editable = this.isEditable;\n\n    const context = {\n      config: pf1.config,\n      editable,\n      cssClass: editable ? \"editable\" : \"locked\",\n      user: game.user,\n      action, // Derived data\n      data: action.toObject(true, false), // Source data\n      fields: action.schema.fields,\n      item,\n      actor,\n      img: action.img,\n      tag: action._source.tag, // True tag\n      damageTypes: pf1.registry.damageTypes.toObject(),\n      rollData: action.getRollData(),\n      choices: {\n        measureTemplateTypes: pf1.utils.internal.getTemplateTypes(),\n      },\n    };\n\n    // Action Details\n    context.hasAttack = action.hasAttack;\n    context.actionType = action.actionType;\n    context.isHealing = context.actionType === \"heal\";\n    context.hasDamage = action.hasDamage;\n    context.isCombatManeuver = action.isCombatManeuver;\n    context.canCrit = action.hasAttack && action.ability?.critRange > 0 && action.ability?.critMult > 1;\n    // Can have crit and non-crit damage, or simply show them if they've been defined.\n    context.hasCritDamage = context.canCrit || action.damage?.critParts?.length > 0;\n    context.hasNonCritDamage = context.canCrit || action.damage?.nonCritParts?.length > 0;\n\n    context.isCharged = action.isCharged;\n    context.isSelfCharged = action.isSelfCharged;\n    const chargedUsePeriods = new Set([...Object.keys(pf1.config.limitedUsePeriods), \"charges\"]);\n    chargedUsePeriods.delete(\"single\"); // Single is special\n    context.choices.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.choices.limitedUsePeriods.single;\n    context.showMaxChargeFormula = chargedUsePeriods.has(action.uses.self.per);\n    if (action.hasRange) {\n      context.canInputRange = [\"ft\", \"mi\", \"spec\"].includes(action.range.units);\n      context.canInputMinRange = [\"ft\", \"mi\", \"spec\"].includes(action.range.minUnits);\n    }\n\n    context.canInputDuration = ![\"\", \"turn\", \"inst\", \"perm\", \"seeText\"].includes(action.duration?.units || \"\");\n\n    // Action Details\n    context.itemName = item.name;\n    context.itemEnh = item.system.enh || 0;\n    context.isSpell = item.type === \"spell\";\n    context.usesSpellPoints = item.spellbook?.spellPoints.useSystem;\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n    context.owned = actor != null;\n    context.parentOwned = actor != null;\n    context.owner = item.isOwner;\n    context.isGM = game.user.isGM;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n    context.activation = action.activation;\n    context.hasActivationType = context.activation.type;\n    context.choices.abilityActivationTypes = context.unchainedActionEconomy\n      ? pf1.config.abilityActivationTypes_unchained\n      : pf1.config.abilityActivationTypes;\n\n    // Activation types that don't benefit from activation cost field being shown\n    context.costlessActivation = !context.activation.type || pf1.config.costlessActivation.has(context.activation.type);\n\n    const noDesc = \"<p>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    // Add description\n    const description = action.description;\n    context.descriptionHTML = description\n      ? await pf1.utils.enrichHTMLUnrolled(description, {\n          secrets: context.owner,\n          rollData: context.rollData,\n          relativeTo: this.actor,\n        })\n      : noDesc;\n\n    // Show additional ranged properties\n    context.showMaxRangeIncrements = action.range.units === \"ft\";\n\n    // Prepare attack specific stuff\n    if (item.type === \"attack\") {\n      context.isWeaponAttack = item.system.subType === \"weapon\";\n      context.isNaturalAttack = item.system.subType === \"natural\";\n    }\n\n    context.canUseAmmo = context.isNaturalAttack !== true;\n    context.usesAmmo = !!action.ammo.type;\n    context.inheritedAmmoType = item?.system.ammo?.type;\n\n    if (context.usesAmmo) {\n      context.inheritedMisfire = item?.system.ammo?.misfire ?? null;\n    }\n\n    if (context.canUseAmmo) {\n      context.choices.ammoTypes = {\n        none: game.i18n.localize(\"PF1.None\"),\n        \"\": game.i18n.format(\"PF1.InheritAs\", { inherited: pf1.config.ammoTypes[context.inheritedAmmoType] }),\n        ...pf1.config.ammoTypes,\n      };\n      if (!context.inheritedAmmoType) delete context.choices.ammoTypes[\"\"];\n    }\n\n    // Add distance units\n    context.choices.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    delete context.choices.distanceUnits.none; // same as empty selection\n    // Set whether to show minimum range input\n    context.minRangeAvailable = [\"reach\", \"ft\", \"mi\", \"seeText\"].includes(action.range.units);\n\n    // Prepare stuff for actions with conditionals\n    if (context.data.conditionals) {\n      context.conditionals = [...action.conditionals].map((c) => ({ ...c, _id: c.id }));\n      const targets = action.getConditionalTargets();\n      context.conditionalTargets = targets;\n      context.hasConditionalTargets = !foundry.utils.isEmpty(targets);\n      for (const conditional of context.conditionals) {\n        if (!conditional.modifiers?.size) continue;\n        conditional.modifiers = [...conditional.modifiers].map((m) => ({ ...m, _id: m.id }));\n        for (const modifier of conditional.modifiers) {\n          modifier.targets = targets;\n          modifier.targetEntry = targets[modifier.target];\n          modifier.subTargets = modifier.targetEntry?.choices;\n          modifier.conditionalModifierTypes = action.getConditionalModifierTypes(modifier.target);\n          modifier.conditionalCritical = action.getConditionalCritical(modifier.target);\n\n          // Damage type supporting data\n          modifier.damage = new pf1.models.action.DamagePartModel({ types: modifier.damageType });\n        }\n      }\n    }\n\n    // Add materials and addons\n    context.materialCategories = this._prepareMaterialsAndAddons();\n\n    context.materialAddons =\n      this.action.addonMaterial.reduce((obj, v) => {\n        obj[v] = true;\n        return obj;\n      }, {}) ?? {};\n\n    context.isRanged = action.isRanged;\n    context.isPureRanged = context.isRanged && action.actionType !== \"twak\";\n\n    // Can hold (attacks & weapons only and only if they have attack rolls that aren't natural attacks or pure ranged attacks)\n    context.canHold = action.hasAttack && context.isNaturalAttack !== true && !context.isPureRanged;\n\n    if (context.canHold) {\n      // Inherited held option's name if any\n      context.inheritedHeld = [\"attack\", \"weapon\"].includes(item.type)\n        ? pf1.config.weaponHoldTypes[context.item.system.held]\n        : null;\n\n      // Ability damage multiplier from held\n      const held = context.action.held || context.item.system.held || \"1h\";\n      context.heldAbilityMultiplier = pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n    }\n\n    // Add alignments\n    context.alignmentTypes = this._prepareAlignments(this.action.alignments);\n    this.alignments = context.alignmentTypes?.values; // Use a deep clone we've already made to track our progress.\n\n    // Key and Default ability score\n    // TODO: Should be allowed for most things eventually that can be class linked and once class key ability can be configured.\n    context.choices ??= {};\n    context.hasKeyAbility = this.item?.type === \"spell\";\n    const keyAbility = this.item?.spellbook?.ability;\n    const keyAbilityLabel = pf1.config.abilities[keyAbility];\n\n    context.choices.ability = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      ...pf1.config.abilities,\n    };\n\n    context.choices.attackAbility = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      _default: game.i18n.format(\"PF1.DefaultRef\", {\n        value: pf1.config.abilities[action._defaultAttackAbility] || game.i18n.localize(\"PF1.None\"),\n      }),\n      ...pf1.config.abilities,\n    };\n\n    context.choices.damageAbility = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      _default: game.i18n.format(\"PF1.DefaultRef\", {\n        value: pf1.config.abilities[action._defaultDamageAbility] || game.i18n.localize(\"PF1.None\"),\n      }),\n      ...pf1.config.abilities,\n    };\n\n    if (!context.hasKeyAbility) {\n      delete context.choices.ability._key;\n      delete context.choices.attackAbility._key;\n      delete context.choices.damageAbility._key;\n    }\n\n    // Power attack multiplier if inherited\n    context.paMultiplier = action.getPowerAttackMult({ rollData: context.rollData });\n\n    // Prepare attack configuration\n    context.extraAttacksTypes = Object.fromEntries([\n      ...Object.entries(pf1.config.extraAttacks).map(([key, { label }]) => [key, label]),\n    ]);\n\n    context.extraAttacksConfig = { ...pf1.config.extraAttacks[action.extraAttacks?.type] };\n    context.extraAttacksConfig.allowCustom = context.extraAttacksConfig.manual || context.extraAttacksConfig.formula;\n\n    if (this.constructor.EDIT_TRACKING?.length)\n      context._editorState = pf1.applications.utils.restoreEditState(this, context.data);\n\n    return context;\n  }\n\n  _prepareMaterialsAndAddons() {\n    const materialList = {};\n    const addonList = [];\n    pf1.utils.naturalSort([...pf1.registry.materials], \"name\").forEach((material) => {\n      if (\n        material.allowed.lightBlade ||\n        material.allowed.oneHandBlade ||\n        material.allowed.twoHandBlade ||\n        material.allowed.rangedWeapon\n      ) {\n        if (!material.addon && !material.basic) {\n          materialList[material.id] = material.name;\n        } else if (material.addon && material.isValidAddon(this.action.normalMaterial)) {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n    };\n  }\n\n  _prepareAlignments(alignments = {}) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: alignments,\n    };\n  }\n\n  /**\n   * Copy from core DocumentSheet#isEditable\n   */\n  get isEditable() {\n    const parentItem = this.item;\n    let editable = this.options.editable && parentItem.isOwner;\n    if (parentItem.pack) {\n      const pack = game.packs.get(parentItem.pack);\n      if (pack.locked) editable = false;\n    }\n    return editable;\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    if (!this.isEditable) return;\n\n    pf1.applications.utils.trackStaleEditors(this, html[0]);\n\n    // Modify action image\n    html.find(\"img[data-edit]\").click((ev) => this._onEditImage(ev));\n\n    // Add drop handler to textareas\n    html.find(\"textarea, .card-notes input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Modify attack formula\n    html.find(\".attack-control\").click(this._onAttackControl.bind(this));\n\n    // Modify damage formula\n    html.find(\".damage-control\").click(this._onDamageControl.bind(this));\n    html.find(\".damage-type-visual\").on(\"click\", this._onClickDamageType.bind(this));\n\n    // Note control\n    html.find(\".card-notes .controls a\").click(this._onNoteEntryControl.bind(this));\n\n    // Modify conditionals\n    html.find(\".conditional-control\").click(this._onConditionalControl.bind(this));\n\n    // Handle Alignment tristate checkboxes\n    html.find(\".alignmentCheckbox\").on(\"change\", (event) => {\n      this._onAlignmentChecked(event);\n    });\n\n    html.find(\".alignmentCheckbox.actionCheckbox\").each((index, item) => {\n      const type = item.dataset.type;\n      if (!(this.alignments[type] || this.alignments[type] === false)) {\n        item.indeterminate = true;\n      }\n    });\n  }\n\n  _onDragStart(event) {\n    const elem = event.currentTarget;\n\n    // Drag conditional\n    if (elem.dataset?.conditional) {\n      const conditional = this.action.conditionals.get(elem.dataset?.conditional);\n      const dragData = {\n        type: \"pf1Conditional\",\n        data: conditional.toObject(),\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    }\n  }\n\n  /**\n   * Foundry defaults to isGM check.\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return this.isEditable;\n  }\n\n  /**\n   * Foundry defaults to isGM check.\n   *\n   * @override\n   */\n  _canDragDrop(selector) {\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dropData = TextEditor.getDragEventData(event);\n    const { type } = dropData;\n\n    const action = this.action;\n    switch (type) {\n      // Handle conditionals\n      case \"pf1Conditional\": {\n        const conditional = dropData.data;\n        // Check targets and other fields for valid values, reset if necessary\n        for (const modifier of conditional.modifiers) {\n          if (!Object.keys(action.getConditionalTargets()).includes(modifier.target)) {\n            delete modifier.target;\n          }\n          if (modifier.subTarget) {\n            const results = action.getConditionalTargets();\n            const choices = results?.[modifier.target]?.choices;\n            if (!choices) delete modifier.subTarget;\n            else if (!Object.keys(choices).includes(modifier.subTarget)) delete modifier.subTarget;\n          }\n          if (modifier.type) {\n            const keys = Object.keys(action.getConditionalModifierTypes(modifier.target));\n            if (!keys.includes(modifier.type)) delete modifier.type;\n          }\n          if (modifier.critical) {\n            const keys = Object.keys(action.getConditionalCritical(modifier.target));\n            if (!keys.includes(modifier.critical)) delete modifier.critical;\n          }\n        }\n\n        // Renew conditional ID\n        delete conditional._id;\n\n        await pf1.components.ItemConditional.create(conditional, { parent: this.action });\n      }\n    }\n  }\n\n  async _onNoteEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const key = a.dataset.name;\n\n    switch (a.dataset.action) {\n      // Add\n      case \"add\": {\n        const notes = foundry.utils.getProperty(this.action.toObject(), key) ?? [];\n        notes.push(\"\");\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      // Delete\n      case \"delete\": {\n        const index = Number(a.dataset.index);\n        const notes = foundry.utils.getProperty(this.action.toObject(), key) ?? [];\n        notes.splice(index, 1);\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onConditionalControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    await this._onSubmit(event, { preventRender: true }); // Submit any unsaved changes\n\n    // Add new conditional\n    if (a.classList.contains(\"add-conditional\")) {\n      return pf1.components.ItemConditional.create([{}], { parent: this.action });\n    }\n    // Remove a conditional\n    else if (a.classList.contains(\"delete-conditional\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return conditional.delete();\n    }\n    // Add a new conditional modifier\n    else if (a.classList.contains(\"add-conditional-modifier\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return pf1.components.ItemConditionalModifier.create([{}], { parent: conditional });\n    }\n    // Remove a conditional modifier\n    else if (a.classList.contains(\"delete-conditional-modifier\")) {\n      const li = a.closest(\".conditional-modifier\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      const modifier = conditional.modifiers.get(li.dataset.modifier);\n      return modifier.delete();\n    }\n  }\n\n  /**\n   * Add or remove a damage part from the damage formula\n   *\n   * @param {Event} event     The original click event\n   * @returns {Promise}\n   * @private\n   */\n  async _onDamageControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const list = a.closest(\".damage\");\n    const path = list.dataset.key || \"damage.parts\";\n    const k2 = path.split(\".\").slice(0, -1).join(\".\");\n    const k3 = path.split(\".\").slice(-1).join(\".\");\n\n    // Add new damage component\n    if (a.classList.contains(\"add-damage\")) {\n      // Add data\n      const damage = foundry.utils.getProperty(this.action.toObject(), k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      damageParts.push({});\n      const updateData = { [path]: damageParts };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a damage component\n    else if (a.classList.contains(\"delete-damage\")) {\n      const li = a.closest(\".damage-part\");\n      const damage = foundry.utils.getProperty(this.action.toObject(), k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      if (damageParts.length) {\n        damageParts.splice(Number(li.dataset.damagePart), 1);\n        const updateData = { [path]: damageParts };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onClickDamageType(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    // Check for normal damage part\n    const damageIndex = Number(elem.closest(\".damage-part\")?.dataset.damagePart);\n    const damagePart = elem.closest(\".damage\")?.dataset.key;\n\n    if (damageIndex >= 0 && damagePart) {\n      const app = new pf1.applications.DamageTypeSelector(\n        this.action,\n        `${damagePart}.${damageIndex}.types`,\n        foundry.utils.getProperty(this.action, damagePart)[damageIndex].types,\n        {\n          updateCallback: (update) => {\n            const damageArray = foundry.utils.getProperty(this.action.toObject(), damagePart) ?? [];\n            damageArray[damageIndex].types = update;\n            this.action.update({ [damagePart]: damageArray });\n          },\n        }\n      );\n      return app.render(true);\n    }\n\n    // Check for conditional\n    const conditionalEl = elem.closest(\".conditional\");\n    const modifierEl = elem.closest(\".conditional-modifier\");\n\n    /** @type {ItemConditional} */\n    const conditional = this.action.conditionals.get(conditionalEl?.dataset.conditional);\n\n    /** @type {ItemConditionalModifier} */\n    const modifier = conditional?.modifiers.get(modifierEl?.dataset.modifier);\n\n    if (!modifier) return void console.warn(\"Conditional modifier not found!\");\n\n    const app = new pf1.applications.DamageTypeSelector(modifier, \"damageType\", modifier.damageType, {\n      updateCallback: (update) => {\n        modifier.update({ damageType: update });\n      },\n    });\n    return app.render(true);\n  }\n\n  async _onAttackControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const manualExtraAttacks = this.action.toObject().extraAttacks?.manual ?? [];\n\n    // Add new attack component\n    if (a.classList.contains(\"add-attack\")) {\n      manualExtraAttacks.push({ formula: \"\", name: \"\" });\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove an attack component\n    else if (a.classList.contains(\"delete-attack\")) {\n      const li = a.closest(\".attack-part\");\n      manualExtraAttacks.splice(Number(li.dataset.attackPart), 1);\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Clone of item/actor sheet image editor callback.\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onEditImage(event) {\n    const attr = event.currentTarget.dataset.edit;\n    const current = foundry.utils.getProperty(this.action, attr);\n    const fp = new FilePicker({\n      type: \"image\",\n      current,\n      callback: (path) => this.action.update({ img: path }),\n      top: this.position.top + 40,\n      left: this.position.left + 10,\n    });\n    fp.browse();\n  }\n\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n\n    // Insert link\n    if (link) {\n      elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n      return this._onSubmit(event); // Save\n    }\n  }\n\n  async _onAlignmentChecked(event) {\n    const el = event.target;\n    const previousValue = this.alignments[el.dataset.type];\n\n    // Move from one phase to the next in our tristate checkbox\n    el.checked = previousValue === false;\n    el.indeterminate = previousValue === true;\n\n    if (el.checked) {\n      this.alignments[el.dataset.type] = true;\n    } else if (el.indeterminate) {\n      this.alignments[el.dataset.type] = null;\n    } else {\n      this.alignments[el.dataset.type] = false;\n    }\n  }\n\n  async _updateObject(event, formData) {\n    const oldData = this.action.toObject(true, false);\n\n    formData = foundry.utils.expandObject(formData);\n\n    // Handle conditionals array, merging incomplete data with old data\n    if (formData.conditionals) {\n      // Preserve arrays\n      // Convert {0:{}} to [{}] keeping order of keys\n      const preserveArray = (obj) =>\n        Object.entries(obj ?? {})\n          .sort(([k0], [k1]) => k0 - k1)\n          .map(([_, data]) => data);\n\n      // Convert to arrays and merge old data\n      // mergeObject() does not do deep merging into arrays, so this is somewhat manual\n      const oldConds = oldData.conditionals ?? [];\n      const conditionals = preserveArray(formData.conditionals);\n      for (let ci = 0; ci < conditionals.length; ci++) {\n        const c = conditionals[ci];\n        c.modifiers = preserveArray(c.modifiers);\n\n        const oldC = oldConds[ci];\n        for (let mi = 0; mi < c.modifiers.length; mi++) {\n          const m = c.modifiers[mi];\n          const oldM = oldC.modifiers[mi];\n\n          c.modifiers[mi] = foundry.utils.mergeObject(oldM, m);\n        }\n        conditionals[ci] = foundry.utils.mergeObject(oldC, c);\n      }\n\n      formData.conditionals = conditionals;\n    }\n\n    // Merge partial damage data to preserve overall data\n    if (formData.damage) {\n      for (const [key, array] of Object.entries(formData.damage)) {\n        if (Array.isArray(array)) continue;\n        const damage = oldData.damage[key] ?? [];\n        for (const [idx, data] of Object.entries(array)) {\n          damage[idx] = foundry.utils.mergeObject(damage[Number(idx)] ?? {}, data);\n        }\n        formData.damage[key] = damage;\n      }\n    }\n\n    // Adjust Material Addons object to array\n    const material = formData.material;\n    if (material?.addon) {\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    if (formData.alignments) {\n      // Adjust Alignment Types (this is necessary to handle null values for inheritance)\n      for (const [key, value] of Object.entries(this.alignments)) {\n        formData.alignments[key] = value;\n      }\n    }\n\n    // Do not add image if it's same as parent item\n    if (formData.img === this.item?.img) delete formData.img;\n\n    return this.action.update(formData);\n  }\n\n  async close(options = {}) {\n    delete this.item.apps[this.appId];\n    delete this.action.apps[this.appId];\n\n    if (this.action._sheet === this) this.action._sheet = null;\n\n    if (options.force && this._state <= Application.RENDER_STATES.NONE) return; // HACK: already closed, would error without\n\n    return super.close(options);\n  }\n\n  /**\n   * Copy of DocumentSheet._createDocumentIdLink\n   *\n   * @internal\n   * @param {jQuery} html\n   * Synced with Foundry v12.331\n   */\n  _createDocumentIdLink(html) {\n    if (!this.object.id) return;\n    const title = html.find(\".window-title\");\n    const label = game.i18n.localize(this.object.constructor.metadata.label);\n    const idLink = document.createElement(\"a\");\n    idLink.classList.add(\"document-id-link\");\n    idLink.ariaLabel = game.i18n.localize(\"SHEETS.CopyUuid\");\n    idLink.dataset.tooltip = `SHEETS.CopyUuid`;\n    idLink.dataset.tooltipDirection = \"UP\";\n    idLink.innerHTML = '<i class=\"fa-solid fa-passport\"></i>';\n    idLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.object.uuid);\n      ui.notifications.info(\n        game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: this.object.uuid })\n      );\n    });\n    idLink.addEventListener(\"contextmenu\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.object.id);\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"id\", id: this.object.id }));\n    });\n    title.append(idLink);\n  }\n\n  /**\n   * Used to call {@link _createDocumentIdLink}\n   *\n   * @override\n   */\n  async _renderOuter() {\n    const html = await super._renderOuter();\n    this._createDocumentIdLink(html);\n    return html;\n  }\n\n  async _render(force, options = {}) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/** @typedef {keyof typeof BOOLEAN_OPERATOR} BooleanOperator */\n/**\n * States for the boolean operator of a filter.\n */\nexport const BOOLEAN_OPERATOR = /** @type {const} */ ({\n  AND: \"AND\",\n  OR: \"OR\",\n  NONE: false,\n});\n\nexport class CheckboxFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\";\n\n  /**\n   * Should the choices be automatically sorted?\n   *\n   * Affects only choices retrieved from config.\n   *\n   * @type {boolean}\n   */\n  static autoSort = true;\n\n  /**\n   * The minimum number of choices that must be present before the filter will show a search box.\n   * Booleans can be used to override this check.\n   *\n   * @type {number | boolean}\n   */\n  static MIN_SEARCH_CHOICES = 10;\n\n  /**\n   * The boolean operator used to combine choices of this filter.\n   * If \"OR\", an entry will be included if at least one active choice matches.\n   * If \"AND\", an entry will only be included if all active choices match.\n   *\n   * @type {BooleanOperator}\n   */\n  booleanOperator = BOOLEAN_OPERATOR.NONE;\n\n  /**\n   * Default {@link booleanOperator}\n   *\n   * Must be \"AND\" or \"OR\".\n   */\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.AND;\n\n  /**\n   * Is this filter viable for boolean operator?\n   */\n  static booleanOperator = true;\n\n  /**\n   * A string used to determine which choices are shown.\n   *\n   * @type {string}\n   * @private\n   */\n  _choiceQuery = \"\";\n\n  constructor(...args) {\n    super(...args);\n    this._debouncedFilterChoices = foundry.utils.debounce(this._onCustomSearchFilter, 100);\n  }\n\n  /**\n   * Generate a {@link Collection} of {@link FilterChoice}s from a {@link CONFIG} object.\n   *\n   * @param {Record<string, string> | Record<string, Record<string, string>>} configObject - The object to generate choices from; can be a Record<string, string> or\n   * @param {object} [options={}] - Options determining how the choices are generated.\n   * @param {string} [options.labelKey=\"_label\"] - The key to use to determine the label if the configObject is a Record<string, object>; will be ignored if the configObject is a Record<string, string>.\n   * @param {boolean} [options.innerSet=false] - Whether choices should be generated from direct properties of the configObject, or from the properties of the inner objects.\n   * @returns {Collection<FilterChoice>} - A Collection of {@link FilterChoice}s\n   */\n  static getChoicesFromConfig(configObject, { labelKey = \"_label\", innerSet = false } = {}) {\n    /** @type {Collection<FilterChoice>} */\n    const choices = new foundry.utils.Collection();\n    for (const [key, value] of Object.entries(configObject)) {\n      if (innerSet) {\n        for (const [innerKey, innerValue] of Object.entries(value)) {\n          if (innerKey === labelKey) continue;\n          choices.set(innerKey, { key: innerKey, label: innerValue });\n        }\n      } else {\n        if (typeof value === \"object\" && value[labelKey]) {\n          choices.set(key, { key, label: value[labelKey] });\n        } else if (typeof value === \"string\") {\n          choices.set(key, { key, label: value });\n        }\n      }\n    }\n\n    if (this.autoSort) {\n      const collator = new Intl.Collator(game.i18n.lang, { numeric: true, ignorePunctuation: false });\n      const sorted = [...choices.entries()].sort(([_0, a], [_1, b]) => collator.compare(a.label, b.label));\n      return new foundry.utils.Collection(sorted);\n    }\n\n    return choices;\n  }\n\n  /**\n   * Whether this filter provides controls in addition to its choices.\n   *\n   * @type {boolean}\n   */\n  get hasControls() {\n    return this.booleanOperator !== BOOLEAN_OPERATOR.NONE || this.choices.size >= this.constructor.MIN_SEARCH_CHOICES;\n  }\n\n  get hasSearch() {\n    if (this.choices.size >= this.constructor.MIN_SEARCH_CHOICES) return true;\n    return this.constructor.MIN_SEARCH_CHOICES ?? false;\n  }\n\n  /** @inheritDoc */\n  async setup() {\n    await super.setup();\n    this.prepareBooleanOperator();\n  }\n\n  /**\n   * Prepare the boolean operator for this filter.\n   */\n  prepareBooleanOperator() {\n    const entries = this.compendiumBrowser?.entries.contents;\n\n    // Find the first entry that has data in the field and use its data\n    let fieldData;\n    entries.find((entry) => {\n      return (fieldData = foundry.utils.getProperty(entry, this.constructor.indexField));\n    });\n\n    if ([\"Array\", \"Object\"].includes(foundry.utils.getType(fieldData)))\n      this.booleanOperator = this.constructor.defaultBooleanOperator;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const observedValues = new Set(\n      entries.flatMap((entry) => {\n        const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n        if (Array.isArray(data)) {\n          if (data.length === 0) return [];\n          else return data;\n        }\n        if (typeof data === \"object\" && data !== null) {\n          const keys = Object.keys(data);\n          if (keys.length === 0) return [];\n          else return keys;\n        }\n        if (data == null) return [];\n        if (typeof data === \"string\" && data.trim() === \"\") return [];\n        return [data];\n      })\n    );\n\n    const autoLocalize = this.constructor.localizeChoices;\n    const i18nPrefix = this.constructor.localizePrefix || \"\";\n\n    const localize = (key) => {\n      if (autoLocalize) {\n        const path = `${i18nPrefix}${key}`;\n        if (game.i18n.has(path)) return game.i18n.localize(path);\n      }\n      return key;\n    };\n\n    this.choices = new foundry.utils.Collection(\n      pf1.utils\n        .naturalSort(\n          [...observedValues].map((key) => ({ key, label: localize(key) })),\n          \"label\"\n        )\n        .map((choice) => [`${choice.key}`, choice])\n    );\n  }\n\n  /**\n   * Toggle the active state of a choice, or set it to a specific state.\n   *\n   * @param {string} key - The key of the choice to toggle\n   * @param {boolean | null} [state=null] - The state to set the choice to. If null, the choice will be toggled.\n   * @returns {boolean} - The new state of the choice\n   * @throws {Error} - If the choice does not exist in this filter\n   */\n  toggleChoice(key, state = null) {\n    const choice = this.choices?.get(key);\n    if (!choice) throw new Error(`Choice ${key} does not exist in this filter.`);\n    if (state === null) choice.active = !choice.active;\n    else choice.active = state;\n    return choice.active;\n  }\n\n  /** @inheritDoc */\n  reset() {\n    super.reset();\n    this.prepareBooleanOperator();\n    this._choiceQuery = \"\";\n    this.choices?.forEach((choice) => (choice.active = false));\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const activeChoices = this.choices.filter((choice) => choice.active);\n    // If no choices are active, this filter applies no conditions\n    if (activeChoices.length === 0) return true;\n\n    // If the filter is active, but the entry does not match the filter's types, the entry cannot match\n    const types = this.constructor.handledTypes;\n    if (types.size && !types.has(entry.type)) return false;\n\n    /** @type {string | string[] | Record<string, boolean>} */\n    const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    if (Array.isArray(data)) {\n      return activeChoices[testMethod]((choice) => data.includes(choice.key));\n    } else if (typeof data === \"object\" && data !== null) {\n      return activeChoices[testMethod]((choice) => choice.key in data && data[choice.key] !== false);\n    } else {\n      return activeChoices.some((choice) => {\n        return data == choice.key;\n      });\n    }\n  }\n\n  /** @inheritDoc */\n  getData() {\n    return {\n      ...super.getData(),\n      hasControls: this.hasControls,\n      boolean: this.constructor.booleanOperator ? this.booleanOperator : false,\n      hasSearch: this.choices.size > this.constructor.MIN_SEARCH_CHOICES,\n      choiceQuery: this._choiceQuery,\n    };\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    this._onCustomSearchFilter(null, html);\n    html.querySelector(\"button.boolean\")?.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      if (this.booleanOperator === BOOLEAN_OPERATOR.OR) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n      else this.booleanOperator = BOOLEAN_OPERATOR.OR;\n      this.compendiumBrowser.render();\n    });\n    html\n      .querySelector(\"input[name=choice-query]\")\n      ?.addEventListener(\"input\", (event) => this._debouncedFilterChoices(event, html));\n    html.addEventListener(\"change\", (event) => {\n      if (event.target.type === \"checkbox\") {\n        const checkbox = event.target;\n        const choiceKey = /filter.\\w*.choice.(?<choice>.*)/.exec(checkbox.name)?.groups?.choice;\n        if (choiceKey) {\n          this.toggleChoice(choiceKey, checkbox.checked);\n          this.compendiumBrowser.render();\n        }\n      }\n    });\n  }\n\n  /**\n   * Filter this filter's choices based on a string query.\n   *\n   * @protected\n   * @param {Event} event - The originating input event\n   * @param {HTMLElement} html - The rendered HTML of this filter\n   */\n  _onCustomSearchFilter(event, html) {\n    if (event) {\n      event.preventDefault();\n      this._choiceQuery = SearchFilter.cleanQuery(event.target.value);\n    }\n\n    const matchingChoices = fuzzysort\n      .go(this._choiceQuery, this.choices.contents, {\n        key: \"label\",\n        threshold: -10000,\n      })\n      .map((result) => `${result.obj.key}`);\n    const choiceSet = new Set(matchingChoices);\n\n    for (const li of html.querySelectorAll(\"li.filter-choice\")) {\n      const choiceKey = li.dataset.choice;\n      if (choiceKey) {\n        if (choiceSet.has(choiceKey) || !this._choiceQuery) li.classList.remove(\"hidden\");\n        else li.classList.add(\"hidden\");\n      }\n    }\n    if (this._choiceQuery && matchingChoices.length === 0)\n      html.querySelector(\"span.no-choices\")?.classList.remove(\"hidden\");\n    else html.querySelector(\"span.no-choices\")?.classList.add(\"hidden\");\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\n\n/**\n * @typedef {object} InputObject\n * @property {string} key - The key to retrieve choices.\n * @property {string} [label] - The label to display (can be localized).\n * @property {boolean} [active] - Whether this choice is currently active.\n * @property {string} [value] - The value of the choice.\n * @property {string} [placeholder] - The placeholder text for the input.\n * @property {string} [type=\"text\"] - The HTML type property of input.\n */\n\n/**\n * Base class for filters that require text input.\n */\nexport class TextFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/text-filter.hbs\";\n\n  /**\n   * List of inputs for this filter.\n   *\n   * @type {Array<InputObject>}\n   */\n  static inputs = [];\n\n  /** @inheritdoc */\n  hasChoices(number = 1) {\n    // We need to allow at least one choice\n    if (this.choices?.size == 1) return true;\n    return super.hasChoices(number);\n  }\n\n  /** @inheritdoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      this.constructor.inputs.map((input) => [\n        input.key,\n        {\n          ...input,\n          label: input.label ? game.i18n.localize(input.label) : undefined,\n          placeholder: input.placeholder ? game.i18n.localize(input.placeholder) : undefined,\n          type: input.type ?? \"text\",\n        },\n      ])\n    );\n  }\n\n  /** @inheritdoc */\n  reset() {\n    for (const choice of this.choices) {\n      choice.value = null;\n      choice.active = false;\n    }\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    html.addEventListener(\"change\", (event) => {\n      const input = event.target;\n      const value = input.value;\n      const key = input.name.split(\"choice.\").pop();\n      const choice = this.choices.get(key);\n      if (choice) {\n        choice.value = this._parseInput(value, choice);\n        choice.active = Boolean(value);\n      }\n      this.compendiumBrowser.render();\n    });\n  }\n\n  /**\n   * Parse the input before it is stored in the choice value.\n   *\n   * @param {string} textInput - The text input to parse.\n   * @param {import(\"./base.mjs\").FilterChoice} choice - The choice object for custom handle by choice.\n   * @returns {string} - The parsed value if any transformation, otherwise the original string.\n   */\n  _parseInput(textInput, choice) {\n    return textInput;\n  }\n}\n","import { TextFilter } from \"./text.mjs\";\n\n/**\n * A filter that allows the user to input a minimum and maximum value.\n */\nexport class NumberRangeFilter extends TextFilter {\n  /** @inheritdoc */\n  static inputs = [\n    { key: \"min\", label: \"PF1.Minimum\", placeholder: \"0\", type: \"number\" },\n    { key: \"max\", label: \"PF1.Maximum\", placeholder: \"∞\", type: \"number\" },\n  ];\n\n  /** @inheritdoc */\n  _parseInput(textInput, choice) {\n    let parsedInput = super._parseInput(textInput, choice);\n    if (choice.key === \"min\") {\n      parsedInput = Number(parsedInput) || null;\n    } else if (choice.key === \"max\") {\n      parsedInput = Number(parsedInput) || null;\n    } else {\n      throw new Error(\"Invalid choice key for NumberRangeFilter\");\n    }\n    return parsedInput;\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField) ?? 0;\n    const min = this.choices.get(\"min\").value ?? 0;\n    const max = this.choices.get(\"max\").value ?? Number.POSITIVE_INFINITY;\n    if (value < min || value > max) return false;\n    return true;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { NumberRangeFilter } from \"./number-range.mjs\";\n\nexport class ItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static indexField = \"type\";\n  static types = [\"weapon\", \"equipment\", \"consumable\", \"container\", \"loot\", \"implant\"];\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      [\n        { key: \"weapon\", label: game.i18n.localize(\"TYPES.Item.weapon\") },\n        { key: \"equipment\", label: game.i18n.localize(\"TYPES.Item.equipment\") },\n        { key: \"consumable\", label: game.i18n.localize(\"TYPES.Item.consumable\") },\n        { key: \"container\", label: game.i18n.localize(\"TYPES.Item.container\") },\n        { key: \"loot\", label: game.i18n.localize(\"PF1.Misc\") },\n        { key: \"implant\", label: game.i18n.localize(\"TYPES.Item.implant\") },\n      ].map((choice) => [choice.key, choice])\n    );\n  }\n}\n\nexport class WeaponTypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponType\";\n  static indexField = \"system.subType\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes);\n  }\n}\n\nexport class WeaponSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponSubtype\";\n  static indexField = \"system.weaponSubtype\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes, { innerSet: true });\n  }\n}\n\nexport class WeaponPropertyFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponProperties\";\n  static indexField = \"system.properties\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponProperties);\n  }\n}\n\nexport class WeaponGroupFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponGroups\";\n  static indexField = \"system.weaponGroups\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponGroups);\n  }\n}\n\nexport class EquipmentTypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentType\";\n  static indexField = \"system.subType\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes);\n  }\n}\n\nexport class EquipmentSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentSubtype\";\n  static indexField = \"system.equipmentSubtype\";\n  static type = \"equipment\";\n  static autoSort = false; // Causes illogical order (e.g. heavy armor and heavy shield are next to each other, but not heavy armor and medium armor)\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes, { innerSet: true });\n  }\n}\n\nexport class ItemSlotFilter extends CheckboxFilter {\n  static label = \"PF1.Slot\";\n  static indexField = \"system.slot\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentSlots, { innerSet: true });\n  }\n}\n\nexport class ConsumableTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ConsumableType\";\n  static indexField = \"system.subType\";\n  static type = \"consumable\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.consumableTypes);\n  }\n}\n\nexport class MiscItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Misc\";\n  static indexField = \"system.subType\";\n  static type = \"loot\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.lootTypes);\n  }\n}\n\nexport class ItemPriceFilter extends NumberRangeFilter {\n  static label = \"PF1.Price\";\n  static indexField = \"system.price\";\n}\n\nexport class ItemCasterLevelFilter extends NumberRangeFilter {\n  static label = \"PF1.CasterLevel\";\n  static indexField = \"system.cl\";\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class PackFilter extends CheckboxFilter {\n  static label = \"PF1.Compendium\";\n  static indexField = \"__pack\";\n\n  /** @override */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const usedPacks = this.compendiumBrowser?.packs\n      ?.filter((pack) => entries.some((entry) => entry.__pack === pack.collection))\n      .map((pack) => {\n        const label = pack.metadata.label;\n        return { key: pack.collection, label: game.i18n.has(label) ? game.i18n.localize(label) : label };\n      });\n    const orderedPacks = pf1.utils.naturalSort(usedPacks, \"label\").map((pack) => [pack.key, pack]);\n    this.choices = new foundry.utils.Collection(orderedPacks);\n  }\n}\n\nexport class TagFilter extends CheckboxFilter {\n  static label = \"PF1.Tags\";\n  static indexField = \"system.tags\";\n}\n\nexport class SourceFilter extends CheckboxFilter {\n  /** @override */\n  static label = \"PF1.Source\";\n\n  /**\n   * This filter requests `system.sources` from the index, but operates on `__source` in the entry data\n   * to support sources without an `id` (e.g. homebrew sources, or others providing only a title).\n   */\n  static indexField = \"system.sources\";\n\n  /** @override */\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @override */\n  static booleanOperator = false;\n\n  /** @override */\n  prepareChoices() {\n    const registrySources = pf1.registry.sources.map((source) => ({ key: source.id, label: source.name }));\n    const collection = new foundry.utils.Collection(registrySources.map((choice) => [choice.key, choice]));\n\n    for (const entry of this.compendiumBrowser.entries) {\n      const sources = (entry.__source ?? [])\n        .filter((source) => source.id || source.title)\n        .map((source) => ({\n          ...source,\n          id: source.id ?? foundry.utils.randomID(),\n        }));\n      for (const source of sources) {\n        if (!collection.has(source.id)) collection.set(source.id, { key: source.id, label: source.title });\n      }\n    }\n\n    this.choices = collection;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const data = (foundry.utils.getProperty(entry, this.constructor.indexField) ?? []).map((source) => source.id);\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    return this.choices\n      .filter((choice) => choice.active)\n      .map((choice) => choice.key)\n      [testMethod]((key) => data.includes(key));\n  }\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class SpellSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SpellSchool\";\n  static indexField = \"system.school\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.spellSchools);\n  }\n}\n\nexport class SpellSubschoolFilter extends CheckboxFilter {\n  static label = \"PF1.Subschool\";\n  static indexField = \"system.subschool\";\n  static type = \"spell\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices;\n\n    // Merge standard config choices with custom choices\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellSubschools);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n\nexport class SpellDescriptorFilter extends CheckboxFilter {\n  static label = \"PF1.Descriptor\";\n  static indexField = \"system.descriptors\";\n  static type = \"spell\";\n\n  /** @inheritDoc */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    // Merge standard config choices with custom choices\n    const choices = this.choices;\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellDescriptors);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static indexField = \"system.learnedAt.class\";\n  static type = \"spell\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    const choices = this.choices;\n\n    // Display human readable name instead of the class identifier\n    const classNames = await pf1.utils.packs.getClassIDMap();\n    const configChoices = this.constructor.getChoicesFromConfig(classNames);\n    for (const choice of configChoices) {\n      if (choices.has(choice.key)) {\n        choices.set(choice.key, choice);\n      }\n    }\n\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByDomainFilter extends CheckboxFilter {\n  static label = \"PF1.Domain\";\n  static indexField = \"system.learnedAt.domain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedBySubdomainFilter extends CheckboxFilter {\n  static label = \"PF1.SubDomain\";\n  static indexField = \"system.learnedAt.subDomain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedByBloodlineFilter extends CheckboxFilter {\n  static label = \"PF1.Bloodline\";\n  static indexField = \"system.learnedAt.bloodline\";\n  static type = \"spell\";\n}\n\nexport class SpellLevelFilter extends CheckboxFilter {\n  static label = \"PF1.SpellLevel\";\n  static indexField = \"system.level\";\n  static type = \"spell\";\n  static autoSort = false; // Cantrip can appear last if true\n\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n  static booleanOperator = false;\n\n  /** @override */\n  prepareChoices() {\n    const choices = this.constructor.getChoicesFromConfig(pf1.config.spellLevels);\n    for (const choice of choices) {\n      choice.key = Number(choice.key); // Convert string to number\n    }\n    this.choices = choices;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const activeLearnedAtFilters = this.compendiumBrowser.filters.filter(\n      (filter) => filter.active && filter.constructor.indexField.startsWith(\"system.learnedAt.\")\n    );\n\n    // Fall back to checking whether _anything_ can learn the spell at that level\n    if (activeLearnedAtFilters.length === 0) return super.applyFilter(entry);\n\n    // Otherwise, check whether active filters match the spell's learnedAt\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    const activeLevelChoices = this.choices.filter((choice) => choice.active);\n\n    // Require either any of the active filters to match if OR, or all filters to return a match if AND\n    return activeLearnedAtFilters[testMethod]((filter) => {\n      /** @type {Record<string, number>} */\n      const learnedAt = foundry.utils.getProperty(entry, filter.constructor.indexField) ?? {};\n      const activeLearnedAtChoices = filter.choices.filter((choice) => choice.active);\n      // Require either one of the classes etc. to match if OR, or all classes etc. to match if AND\n      return activeLearnedAtChoices[testMethod]((learnedAtChoice) => {\n        const learnedAtLevel = learnedAt[learnedAtChoice.key];\n        return activeLevelChoices[testMethod]((levelChoice) => levelChoice.key === learnedAtLevel);\n      });\n    });\n  }\n}\n","import { CheckboxFilter, BOOLEAN_OPERATOR } from \"./checkbox.mjs\";\n\nexport class FeatTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"feat\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.featTypes);\n  }\n}\n\nexport class FeatClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static type = \"feat\";\n  static indexField = \"system.associations.classes\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class ClassTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ClassType\";\n  static type = \"class\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classTypes);\n  }\n}\n\nexport class ClassHitDieFilter extends CheckboxFilter {\n  static label = \"PF1.HitDie\";\n  static type = \"class\";\n  static indexField = \"system.hd\";\n}\n\nexport class ClassBaseAttackBonusFilter extends CheckboxFilter {\n  static label = \"PF1.BAB\";\n  static type = \"class\";\n  static indexField = \"system.bab\";\n  static autoSort = false; // Causes illogical order (e.g. Custom, Good, Poor, None)\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classBAB);\n  }\n}\n\nexport class ClassSkillPointsFilter extends CheckboxFilter {\n  static label = \"PF1.SkillsPerLevel\";\n  static type = \"class\";\n  static indexField = \"system.skillsPerLevel\";\n}\n\nclass ClassSavingThrowFilter extends CheckboxFilter {\n  static type = \"class\";\n\n  /** @type {SaveId} */\n  static savingThrow = \"\";\n\n  static localizeLabel = false;\n\n  static autoSort = false; // Causes illogical order (e.g. Custom, Good, Poor, None)\n\n  static get label() {\n    return pf1.config.savingThrows[this.savingThrow] ?? \"\";\n  }\n  static get indexField() {\n    return `system.savingThrows.${this.savingThrow}.value`;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classSavingThrows);\n    this.choices.set(\"none\", { label: game.i18n.localize(\"PF1.None\"), key: \"none\" });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const result = super.applyFilter(entry);\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField);\n    const noneFilterResult = this.choices.get(\"none\").active && value === \"\";\n    return result || noneFilterResult;\n  }\n}\n\nexport class ClassFortitudeFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"fort\";\n}\n\nexport class ClassReflexFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"ref\";\n}\n\nexport class ClassWillFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"will\";\n}\n","import { CheckboxFilter, BOOLEAN_OPERATOR } from \"./checkbox.mjs\";\n\nexport class CreatureTypeFilter extends CheckboxFilter {\n  static label = \"PF1.CreatureType\";\n  static type = \"race\";\n  static indexField = \"system.creatureTypes\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.creatureTypes);\n  }\n}\n\nexport class CreatureSubTypeFilter extends CheckboxFilter {\n  static label = \"PF1.RaceSubtypePlural\";\n  static type = \"race\";\n  static indexField = \"system.creatureSubtypes\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n\n    // Merge standard config choices with custom choices\n    const choices = this.choices;\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.creatureSubtypes);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class BuffTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"buff\";\n  static indexField = \"system.subType\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.buffTypes);\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class CreatureCRFilter extends CheckboxFilter {\n  static label = \"PF1.ChallengeRatingShort\";\n  static indexField = \"system.details.cr.base\";\n  static types = [\"character\", \"npc\"];\n\n  /** @override */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    const choices = this.choices.contents\n      .map((choice) => Number(choice.key))\n      .sort((a, b) => a - b)\n      .map((cr) => {\n        const label = pf1.utils.CR.fromNumber(cr);\n        return [cr.toString(), { key: cr, label }];\n      });\n    this.choices = new foundry.utils.Collection(choices);\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as buffFilters from \"./filters/buff.mjs\";\n\nexport class BuffBrowser extends CompendiumBrowser {\n  static documentName = \"Item\";\n  static typeName = \"PF1.Buffs\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    buffFilters.BuffTypeFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as classFilters from \"./filters/class.mjs\";\n\nexport class ClassBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Classes\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    classFilters.ClassTypeFilter,\n    classFilters.ClassHitDieFilter,\n    classFilters.ClassBaseAttackBonusFilter,\n    classFilters.ClassSkillPointsFilter,\n    classFilters.ClassFortitudeFilter,\n    classFilters.ClassReflexFilter,\n    classFilters.ClassWillFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport { PackFilter } from \"./filters/common.mjs\";\nimport * as creatureFilters from \"./filters/creature.mjs\";\n\nexport class CreatureBrowser extends CompendiumBrowser {\n  static documentName = \"Actor\";\n  static typeName = \"PF1.Creatures\";\n  static filterClasses = [PackFilter, creatureFilters.CreatureCRFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as featFilter from \"./filters/feat.mjs\";\n\nexport class FeatBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Feats\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    featFilter.FeatTypeFilter,\n    featFilter.FeatClassFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as itemFilters from \"./filters/item.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\n\nexport class ItemBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Items\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    itemFilters.ItemTypeFilter,\n    itemFilters.WeaponTypeFilter,\n    itemFilters.WeaponSubtypeFilter,\n    itemFilters.WeaponPropertyFilter,\n    itemFilters.WeaponGroupFilter,\n    itemFilters.EquipmentTypeFilter,\n    itemFilters.EquipmentSubtypeFilter,\n    itemFilters.ItemSlotFilter,\n    itemFilters.ConsumableTypeFilter,\n    itemFilters.MiscItemTypeFilter,\n    itemFilters.ItemPriceFilter,\n    itemFilters.ItemCasterLevelFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    // Remove equipmentSubtype if the item subtype should not have one\n    const { subType, equipmentSubtype } = result.system;\n    if (subType) {\n      const equipmentSubtypes = Object.keys(pf1.config.equipmentTypes[subType] ?? {}).filter((o) => !o.startsWith(\"_\"));\n      if (equipmentSubtypes.length === 0) {\n        // Clear equipmentSubtype if subType has no equipmentSubtypes\n        result.system.equipmentSubtype = \"\";\n      } else if (!equipmentSubtypes.includes(equipmentSubtype)) {\n        // Default to first equipmentSubtype if current equipmentSubtype is invalid\n        result.system.equipmentSubtype = equipmentSubtypes.at(0);\n      }\n    }\n\n    return result;\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as raceFilters from \"./filters/race.mjs\";\n\nexport class RaceBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Races\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    raceFilters.CreatureTypeFilter,\n    raceFilters.CreatureSubTypeFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as spellFilter from \"./filters/spell.mjs\";\n\nexport class SpellBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Spells\";\n\n  static types = [\"spell\"];\n\n  static filterClasses = [\n    commonFilters.PackFilter,\n    spellFilter.SpellSchoolFilter,\n    spellFilter.SpellSubschoolFilter,\n    spellFilter.SpellDescriptorFilter,\n    spellFilter.SpellLearnedByClassFilter,\n    spellFilter.SpellLearnedByDomainFilter,\n    spellFilter.SpellLearnedBySubdomainFilter,\n    spellFilter.SpellLearnedByBloodlineFilter,\n    spellFilter.SpellLevelFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    /** @type {number[]} */\n    const learnedAtLevels = Object.values(entry.system.learnedAt ?? {})\n      .map((learnedAtSource) => Object.values(learnedAtSource))\n      .flat();\n    if (typeof entry.system.level === \"number\") learnedAtLevels.push(entry.system.level);\n    // NOTE: This results in `level` being a number[] instead of a number like in the source data.\n    result.system.level = [...new Set(learnedAtLevels)];\n\n    return result;\n  }\n}\n","/**\n * @param {JournalEntryPage} page\n * @param {object} context\n */\nfunction addHeaders(page, context) {\n  // Find parent pages if deeper than level 1 heading\n  let maxLevel = page.title.level - 1;\n  if (maxLevel <= 0) return;\n\n  /** @type {JournalEntry} */\n  const parent = page.parent;\n  if (!(parent instanceof JournalEntry)) return;\n\n  /** @type {JournalEntryPage[]} */\n  const pages = parent.pages.contents.sort((a, b) => a.sort - b.sort);\n\n  const idx = pages.indexOf(page);\n  if (idx <= 0) return;\n\n  const headers = [];\n  // Traverse backwards\n  for (let i = idx - 1; i >= 0; i--) {\n    const npage = pages[i];\n    const nlevel = npage.title.level;\n    if (nlevel <= maxLevel) {\n      maxLevel = nlevel - 1;\n      headers[maxLevel] = npage;\n      if (maxLevel < 1) break;\n    }\n  }\n\n  context.pf1 = { headers };\n}\n\n/**\n * Journal text page sheet that displays parentage with sub-pages\n *\n * @deprecated\n * - Will be replaced with AppV2\n */\nexport class JournalTextPageSheetPF1 extends JournalTextPageSheet {\n  get template() {\n    if (this.document.type !== \"text\" || this.isEditable) return super.template;\n    return \"systems/pf1/templates/journals/text-view.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n\n    addHeaders(this.document, context);\n\n    // V13 compatibility shims\n    context.text ??= {\n      enriched: context.editor?.content,\n    };\n\n    return context;\n  }\n}\n\nfunction unregisterV1Sheet() {\n  // Unregister the old, in separate function to avoid strict JS problems\n  DocumentSheetConfig.unregisterSheet(JournalEntryPage, \"pf1\", JournalTextPageSheetPF1);\n}\n\nfunction registerV2Sheet() {\n  // JournalEntryPageTextSheet is wrong despite looking correct, so we extend prosemirror sheet instead\n  // Identical name to above match sheet registration, masks the above name\n  class JournalTextPageSheetPF1 extends foundry.applications.sheets.journal.JournalEntryPageProseMirrorSheet {\n    /** @override */\n    static VIEW_PARTS = {\n      content: {\n        template: \"systems/pf1/templates/journals/text-view.hbs\",\n      },\n    };\n\n    /** @override */\n    async _prepareContext(options) {\n      const context = await super._prepareContext(options);\n\n      addHeaders(this.document, context);\n\n      // V12 compatibility shims\n      context.data ??= {};\n      context.data.title = context.title;\n\n      return context;\n    }\n  }\n\n  DocumentSheetConfig.registerSheet(JournalEntryPage, \"pf1\", JournalTextPageSheetPF1, {\n    types: [\"text\"],\n    makeDefault: false,\n    label: \"PF1.Sheet.TextPage\",\n  });\n}\n\nexport function registerV13PageSheet() {\n  if (game.release.generation >= 13) {\n    unregisterV1Sheet();\n    registerV2Sheet();\n  }\n}\n","/**\n * Save edit state\n *\n * @remarks\n * - Must be combined with {@link restoreEditState()}\n * - Static `EDIT_TRACKING` array must be defined to declare what fields are being tracked for editing.\n *\n * @example\n * In sheet body define the following\n * ```js\n * // Init data\n * _activeEdits = {};\n *\n * // Define fields to track\n * static EDIT_TRACKING = [\"system.description.value\", \"system.description.unidentified\"];\n *\n * // Override\n * async _render(force, options) {\n *   pf1.applications.utils.saveEditState(this, options);\n *\n *   return super._render(force, options);\n * }\n * ```\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet\n * @param {object} options\n */\nexport function saveEditState(sheet, options = {}) {\n  if (!sheet.form || !sheet.rendered) return;\n\n  const paths = sheet.constructor.EDIT_TRACKING;\n\n  /** @type {HTMLElement} */\n  const isUpdate = options.renderContext === \"updateItem\";\n\n  // Reset old saved data if it persists\n  sheet._activeEdits = {};\n\n  // Save active editor data\n  // Save {{editor}} state\n  for (const [path, editor] of Object.entries(sheet.editors)) {\n    if (!editor.active) {\n      delete sheet._activeEdits[path];\n    } else {\n      sheet._activeEdits[path] = ProseMirror.dom.serializeString(editor.instance.view.state.doc.content);\n    }\n  }\n  // Save <prose-mirror> state, for whenever it works correctly\n  /*\n  const formData = new FormDataExtended(sheet.form).object;\n  for (const path of paths) {\n    if (isUpdate && foundry.utils.hasProperty(options.renderData, path)) continue;\n    const text = formData[path];\n    if (text !== undefined) {\n      sheet._activeEdits[path] = text;\n      sheet.element[0].classList.add(\"stale-data\");\n    }\n  }\n  */\n}\n\n/**\n * Restore edit state\n *\n * @remarks\n * - Must be combined with {@link saveEditState()}\n * - Should use `context.prefix.path.to.data` to set toggled state so the editor is automatically in edit mode.\n * - Prefix defaults to `_editorState` for the above path.\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet - Application to work with\n * @param {object} context - Context from which to fetch current data\n * @returns {object} - Editor toggled state mapping\n */\nexport function restoreEditState(sheet, context) {\n  const editorToggledState = {};\n\n  for (const path of sheet.constructor.EDIT_TRACKING) {\n    foundry.utils.setProperty(editorToggledState, path, true);\n  }\n\n  // Re-instate data from in-progress edits\n  for (const [path, text] of Object.entries(sheet._activeEdits)) {\n    if (!text) continue;\n    if (text !== foundry.utils.getProperty(context, path)) {\n      foundry.utils.setProperty(context, path, text);\n      foundry.utils.setProperty(editorToggledState, path, false);\n      console.debug(\"PF1 | Restored interrupted edit state to\", path);\n\n      // Mark {{editor}} as changed\n      const editor = sheet.editors[path];\n      if (editor) editor.changed = true;\n    }\n    delete sheet._activeEdits[path];\n  }\n\n  sheet._activeEdits = {};\n\n  return editorToggledState;\n}\n\n/**\n * Track stale editors\n *\n * Visually marks editors that need action.\n *\n * Call in `activateListeners()`\n *\n * Must be combined with {@link saveEditState()} and {@link restoreEditState()}\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet\n * @param {HTMLElement} html\n */\nexport function trackStaleEditors(sheet, html) {\n  /** @type {HTMLElement[]} */\n  const editors = html.querySelectorAll(\"prose-mirror.active\");\n  for (const editor of editors) {\n    if (!sheet.constructor.EDIT_TRACKING?.includes(editor.name)) continue;\n\n    editor.classList.add(\"stale-editor\");\n    editor.addEventListener(\"change\", (ev) => editor.classList.remove(\"stale-editor\"), { once: true });\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ActionSelector extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  static DEFAULT_OPTIONS = {\n    classes: [\"pf1-v2\", \"action-selector\"],\n    window: {\n      icon: \"fa-solid fa-screwdriver-wrench\",\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      click: ActionSelector._onClickAction,\n    },\n    position: {\n      width: 390,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/action-select.hbs\",\n    },\n  };\n\n  get item() {\n    return this.document;\n  }\n\n  get title() {\n    return game.i18n.format(\"PF1.Application.ActionSelector.Title\", {\n      actor: this.item.actor.name,\n      item: this.item.name,\n    });\n  }\n\n  async _prepareContext() {\n    return {\n      actions: this.item.actions,\n    };\n  }\n\n  static _onClickAction(event) {\n    event.preventDefault();\n\n    const target = event.target.closest(\"[data-action]\");\n    this.resolve(target.dataset?.id);\n    this.close();\n  }\n\n  close(...args) {\n    this.resolve(null);\n    super.close(...args);\n  }\n\n  /**\n   * @param {object} options - Options\n   * @param {ItemPF} options.document - Item to select action for.\n   * @param {object} renderOptions - Options passed to application rendering\n   * @returns {Promise<ChatMessage|object|undefined>} - Result of ItemPF.use() for selected action\n   */\n  static async open(options) {\n    return new Promise((resolve) => {\n      const selector = new this(options);\n      selector.resolve = resolve;\n      selector.render(true);\n    });\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\nexport class ChatAttack {\n  /** @type {ItemAction} */\n  action;\n\n  /** @type {pf1.actionUse.ActionUse} */\n  actionUse;\n\n  /** @type {D20RollPF | null} */\n  attack = null;\n  hasRange = false;\n  /** @type {D20RollPF | null} */\n  critConfirm = null;\n\n  hasAttack = false;\n  hasCritConfirm = false;\n\n  hasDamage = false;\n  damage = new AttackDamage();\n  damageRows = [];\n  nonlethal = false;\n  critDamage = new AttackDamage();\n\n  ammo = null;\n\n  hasCards = false;\n  cards = {};\n\n  effectNotes = [];\n  effectNotesHTML = \"\";\n  notesOnly = true;\n\n  targets = null;\n\n  constructor(action, { label = \"\", rollData = {}, targets = null, actionUse = null } = {}) {\n    this.actionUse = actionUse;\n    this.rollData = rollData;\n    this.setAction(action);\n    this.label = label;\n    this.hasRange = action.item.hasRange;\n    this.targets = targets;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.action?.actor;\n  }\n\n  setAmmo(ammoId) {\n    const ammoItem = this.actor.items.get(ammoId);\n    if (!ammoItem) {\n      this.ammo = null;\n      return;\n    }\n\n    this.ammo = {\n      id: ammoId,\n      img: ammoItem.img,\n      name: ammoItem.name,\n      misfire: false,\n    };\n  }\n\n  /**\n   * Sets the attack's item reference.\n   *\n   * @param {ItemAction} action - The action to reference.\n   */\n  setAction(action) {\n    if (action == null) {\n      this.rollData = null;\n      this.action = null;\n      return;\n    }\n\n    this.action = action;\n    this.isHealing = action.isHealing;\n\n    this.setRollData();\n  }\n\n  /**\n   * Applies changes to the roll data.\n   */\n  setRollData() {\n    const rollData = this.rollData;\n\n    // Set critical hit multiplier\n    rollData.critMult = 1;\n    rollData.critCount = 0;\n\n    // Determine ability multiplier\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n    rollData.ablMult = rollData.action.ability.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n  }\n\n  async setEffectNotesHTML() {\n    if (this.effectNotes.length === 0) {\n      this.effectNotesHTML = \"\";\n      return;\n    }\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes: this.effectNotes,\n      css: \"effect-notes\",\n      header: game.i18n.localize(\"PF1.EffectNotes\"),\n    });\n\n    const enrichOptions = {\n      rollData: this.rollData,\n      relativeTo: this.action.actor,\n    };\n\n    this.effectNotesHTML = await TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  async addAttack({ noAttack = false, bonus = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    const actor = this.action.actor;\n\n    this.hasAttack = true;\n    this.notesOnly = false;\n\n    const extraChanges = [];\n\n    /** @type {D20RollPF} */\n    if (critical === true) {\n      if (this.action.critConfirmBonus) {\n        const critConfirm = this.action.critConfirmBonus;\n        const parsedConfirmResult = RollPF.parse(critConfirm);\n        if (parsedConfirmResult.length > 1)\n          extraParts.push(`(${critConfirm})[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n        else if (parsedConfirmResult[0].flavor) extraParts.push(critConfirm);\n        else extraParts.push(`${critConfirm}[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n      }\n\n      extraChanges.push(...actor.changes.filter((c) => c.target === \"critConfirm\"));\n\n      // Add conditionals for critical confirmation\n      if (conditionalParts[\"attack.crit\"]?.length) extraParts.push(...conditionalParts[\"attack.crit\"]);\n    } else {\n      // Add conditional attack bonus\n      if (conditionalParts[\"attack.normal\"]?.length) extraParts.push(...conditionalParts[\"attack.normal\"]);\n    }\n\n    // Add broken penalty\n    const broken = this.rollData.item.broken;\n    if (broken && !critical) {\n      const label = game.i18n.localize(\"PF1.Broken\");\n      extraParts.push(`-2[${label}]`);\n    }\n\n    // Armor as DR\n    if (!noAttack) {\n      if (critical && !game.settings.get(\"pf1\", \"critConfirm\")) {\n        // Defense DC\n        this.critConfirm = this.actionUse?.getDefenseDC(this.attack) ?? RollPF.safeRollSync(\"0\");\n        this.critConfirm.armorAsDR = true;\n        this.critConfirm.options.flavor = game.i18n.localize(\"PF1.Critical\");\n        noAttack = true;\n      }\n    }\n\n    // Remove empty parts (e.g. zero iterative penalty)\n    extraParts = extraParts.filter((p) => p && p != 0);\n\n    // Roll attack\n    if (!noAttack) {\n      const roll = await this.action.rollAttack({\n        data: this.rollData,\n        bonus,\n        extraParts,\n        extraChanges,\n      });\n\n      if (critical === true) this.critConfirm = roll;\n      else {\n        this.attack = roll;\n        this.method = CONFIG.Dice.fulfillment.methods[roll.d20.method];\n      }\n\n      // Add crit confirm\n      const baseCritMult = this.rollData.action.ability.critMult ?? 1;\n      if (!critical && !this.action.isCombatManeuver && roll.isCrit && baseCritMult > 1) {\n        this.hasCritConfirm = true;\n        this.rollData.critMult = Math.max(1, baseCritMult + (this.rollData.critMultBonus ?? 0));\n        if (broken) this.rollData.critMult = 1;\n\n        await this.addAttack({ bonus, extraParts, critical: true, conditionalParts });\n      }\n\n      // Add tooltip\n      roll.options.flavor = critical ? game.i18n.localize(\"PF1.CriticalConfirmation\") : this.label;\n    }\n  }\n\n  async addDamage({ flavor = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    this.hasDamage = true;\n    this.notesOnly = false;\n    let data = this.damage;\n    if (critical === true) data = this.critDamage;\n\n    const rollData = foundry.utils.deepClone(this.rollData);\n    // Enforce critical multiplier\n    rollData.critCount = 0;\n\n    // Roll damage\n    const repeatCount = critical ? Math.max(1, rollData.critMult - 1) : 1;\n    for (let repeat = 0; repeat < repeatCount; ++repeat) {\n      if (critical) rollData.critCount++;\n      data.rolls.push(\n        ...(await this.action.rollDamage({\n          data: rollData,\n          extraParts,\n          critical,\n          conditionalParts,\n        }))\n      );\n    }\n\n    // Add normal data\n    if (!flavor) {\n      if (!critical) flavor = this.isHealing ? game.i18n.localize(\"PF1.Healing\") : game.i18n.localize(\"PF1.Damage\");\n      else flavor = game.i18n.localize(\"PF1.DamageCritical\");\n    }\n\n    // Determine total damage\n    let totalDamage = data.rolls.reduce((cur, p) => {\n      return cur + p.total;\n    }, 0);\n    if (critical) {\n      totalDamage = this.damage.rolls.reduce((cur, p) => {\n        return cur + p.total;\n      }, totalDamage);\n    }\n\n    // Handle minimum damage rule\n    if (totalDamage < 1) {\n      totalDamage = 1;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n      this.nonlethal = true;\n    }\n\n    // Handle nonlethal attacks\n    if (this.rollData.action.nonlethal || this.action.item.system.properties?.nnl) {\n      this.nonlethal = true;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n    }\n\n    // Finalize data\n    data.flavor = flavor;\n    data.total = totalDamage;\n  }\n\n  async addEffectNotes({ rollData } = {}) {\n    this.effectNotes = [];\n\n    const item = this.action.item;\n    if (!item) return;\n\n    const actor = item.actor;\n\n    if (actor) {\n      const noteSources = [\"attacks.effect\"];\n      if (item.type === \"spell\") noteSources.push(\"spellEffect\"); // Spell specific notes\n\n      for (const source of noteSources) {\n        this.effectNotes.push(...(await actor.getContextNotesParsed(source, { rollData })));\n      }\n    }\n\n    // Add item notes\n    if (item.system.effectNotes?.length) {\n      this.effectNotes.push(...item.system.effectNotes.map((text) => ({ text })));\n    }\n    // Add action notes\n    if (this.action.notes.effect.length) {\n      this.effectNotes.push(...this.action.notes.effect.map((text) => ({ text })));\n    }\n\n    // Misfire\n    if (this.ammo?.misfire) {\n      let label = game.i18n.localize(\"PF1.Misfire\");\n      const explosionRadius = this.action.item?.system.ammo?.explode ?? 0;\n      if (explosionRadius) {\n        const radius = pf1.utils.convertDistance(explosionRadius, \"ft\")[0];\n        const unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        label += ` (${radius} ${unit})`;\n      }\n      this.effectNotes.push({ text: label });\n    }\n\n    await this.setEffectNotesHTML();\n  }\n\n  _createInlineRoll(roll, d20 = false, critical = false) {\n    const classes = [\"inline-dsn-hidden\"];\n    if (d20) {\n      if (critical && roll.armorAsDR) classes.push(\"defense-dc\");\n      if (roll.isNat20) classes.push(\"natural-20\", \"success\");\n      if (roll.isNat1) classes.push(\"natural-1\", \"failure\");\n      if (!critical && roll.isCrit) classes.push(\"critical-threat\");\n    }\n    return roll.toAnchor({ classes });\n  }\n\n  /**\n   * Generate inline rolls\n   */\n  _createInlineRolls() {\n    if (this.attack) this.attack.inlineRoll = this._createInlineRoll(this.attack, true);\n    if (this.critConfirm) this.critConfirm.inlineRoll = this._createInlineRoll(this.critConfirm, true, true);\n\n    for (const row of this.damageRows) {\n      if (row.normal) row.normal.inlineRoll = this._createInlineRoll(row.normal);\n      if (row.crit) row.crit.inlineRoll = this._createInlineRoll(row.crit);\n    }\n  }\n\n  finalize() {\n    this.hasCards = Object.keys(this.cards).length > 0;\n\n    // Determine damage rows for chat cards\n    // this.damageRows = [];\n    for (let a = 0; a < Math.max(this.damage.rolls.length, this.critDamage.rolls.length); a++) {\n      this.damageRows.push({ normal: null, crit: null });\n    }\n    for (let a = 0; a < this.damage.rolls.length; a++) {\n      this.damageRows[a].normal = this.damage.rolls[a];\n    }\n    for (let a = 0; a < this.critDamage.rolls.length; a++) {\n      this.damageRows[a].crit = this.critDamage.rolls[a];\n    }\n\n    this._createInlineRolls();\n\n    return this;\n  }\n}\n\nclass AttackDamage {\n  flavor = \"\";\n\n  total = 0;\n\n  /** @type {DamageRoll[]} */\n  rolls = [];\n\n  get isActive() {\n    return this.rolls.length > 0;\n  }\n\n  get half() {\n    return Math.floor(this.total / 2);\n  }\n}\n","import { ChatAttack } from \"./chat-attack.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n// Documentation/type imports\n/** @typedef {import(\"@item/item-pf.mjs\").SharedActionData} SharedActionData */\n/** @typedef {pf1.documents.item.ItemPF} ItemPF */\n/** @typedef {pf1.documents.actor.ActorPF} ActorPF */\n/** @typedef {pf1.components.ItemAction} ItemAction */\n\n/**\n * Error states for when an item does not meet the requirements for an attack.\n *\n * @enum {number}\n * @readonly\n */\nexport const ERR_REQUIREMENT = Object.freeze({\n  NO_ACTOR_PERM: 1,\n  DISABLED: 2,\n  INSUFFICIENT_QUANTITY: 3,\n  INSUFFICIENT_CHARGES: 4,\n  MISSING_AMMO: 5,\n  INSUFFICIENT_AMMO: 6,\n  DISALLOWED_ACTION_TYPE: 7,\n});\n\nexport class ActionUse {\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {ActorPF}\n   */\n  actor;\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * The item this action use is based on.\n   *\n   * @type {ItemPF}\n   */\n  item;\n  /**\n   * The action this action use is based on.\n   *\n   * @type {ItemAction}\n   */\n  action;\n  /**\n   * The shared data object holding all relevant data for this action use.\n   *\n   * @type {SharedActionData}\n   */\n  shared;\n\n  /**\n   * @param {Partial<SharedActionData>} [shared={}] - The shared context for this action use\n   */\n  constructor(shared = {}) {\n    Object.defineProperties(this, {\n      shared: { value: shared },\n      item: { value: shared.item },\n      action: { value: shared.action },\n      actor: { value: shared.item.actor },\n      token: { value: shared.token },\n    });\n\n    // Init some shared data\n    this.shared.templateData = {\n      action: this.shared.action,\n      item: this.shared.item,\n    };\n  }\n\n  /**\n   * @returns {Promise<number>} - 0 when successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkRequirements() {\n    if (this.action.isCombatManeuver && this.actor.system.config?.noManeuvers) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.DisallowedActionType\", { name: actor.name }));\n      return ERR_REQUIREMENT.DISALLOWED_ACTION_TYPE;\n    }\n\n    const actor = this.item.actor;\n    if (actor && !actor.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n      return ERR_REQUIREMENT.NO_ACTOR_PERM;\n    }\n\n    if (this.item.type === \"feat\" && this.item.system.disabled) {\n      ui.notifications.warn(game.i18n.localize(\"PF1.Error.FeatDisabled\"));\n      return ERR_REQUIREMENT.DISABLED;\n    }\n\n    // Cost override set to 0 or to increase charges/quantity\n    if (this.shared.cost !== null && this.shared.cost <= 0) return 0;\n\n    if (this.item.isPhysical) {\n      const itemQuantity = this.item.system.quantity || 0;\n      if (itemQuantity <= 0) {\n        ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n        return ERR_REQUIREMENT.INSUFFICIENT_QUANTITY;\n      }\n    }\n\n    if (this.action.isSelfCharged && this.action.uses.self?.value < 1) {\n      ui.notifications.warn(\n        game.i18n.format(\"PF1.Error.InsufficientCharges\", {\n          name: `${this.item.name}: ${this.action.name}`,\n        })\n      );\n      return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @returns {Promise<object>} The roll data object for this attack.\n   */\n  getRollData() {\n    const rollData = this.shared.action.getRollData({ cache: false });\n\n    const d20 = this.shared.dice;\n    // TODO: Move this standard roll obfuscation to dialog handling\n    rollData.d20 = d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20;\n\n    // Init values\n    rollData.dcBonus ||= 0;\n    rollData.chargeCost ||= 0;\n    rollData.chargeCostBonus ||= 0;\n\n    rollData.critMultBonus ||= 0;\n\n    this.shared.rollData = rollData;\n  }\n\n  /**\n   * Creates and renders an attack roll dialog, and returns a result.\n   *\n   * @returns {Promise<ItemAttack_Dialog_Result|null>} - Attack dialog result or null if cancelled.\n   */\n  createAttackDialog() {\n    const dialog = new pf1.applications.AttackDialog(this);\n    return dialog.show();\n  }\n\n  /**\n   * Alters roll (and shared) data based on user input during the attack's dialog.\n   *\n   * @param {object} formData - The attack dialog's form data\n   */\n  alterRollData(formData = {}) {\n    // TODO: use this.shared.formData instead of the function param\n\n    const rollData = this.shared.rollData;\n\n    const useOptions = this.shared.useOptions;\n    formData[\"power-attack\"] ??= useOptions.powerAttack;\n    formData[\"primary-attack\"] ??= useOptions.primaryAttack;\n    formData[\"cl-check\"] ??= useOptions.clCheck ?? this.item?.system.clCheck === true;\n    formData[\"measure-template\"] ??= useOptions.measureTemplate;\n    formData[\"haste-attack\"] ??= useOptions.haste;\n    formData[\"manyshot\"] ??= useOptions.manyshot;\n    formData[\"rapid-shot\"] ??= useOptions.rapidShot;\n    formData[\"point-blank-shot\"] ??= useOptions.pointBlankShot;\n    formData[\"damage-ability-multiplier\"] ??= useOptions.abilityMult;\n    formData[\"flanking\"] ??= useOptions.flanking;\n    formData[\"highGround\"] ??= useOptions.highGround;\n    formData[\"charge\"] ??= useOptions.charge;\n\n    formData.fullAttack ??= true;\n\n    if (formData[\"d20\"]) rollData.d20 = formData[\"d20\"];\n    const atkBonus = formData[\"attack-bonus\"];\n    if (atkBonus) {\n      this.shared.attackBonus.push(atkBonus);\n    }\n    const dmgBonus = formData[\"damage-bonus\"];\n    if (dmgBonus) {\n      this.shared.damageBonus.push(dmgBonus);\n    }\n\n    if (formData.rollMode) this.shared.rollMode = formData.rollMode;\n\n    // Point-Blank Shot\n    if (formData[\"point-blank-shot\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.damageBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.pointBlankShot = true;\n    }\n\n    if (formData[\"flanking\"]) {\n      this.shared.attackBonus.push(`2[${game.i18n.localize(\"PF1.Flanking\")}]`);\n      this.shared.flanking = true;\n    }\n\n    if (formData[\"highGround\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.HighGround\")}]`);\n      this.shared.highGround = true;\n    }\n\n    if (formData[\"charge\"]) {\n      this.shared.attackBonus.push(`2[${game.i18n.localize(\"PF1.Charge\")}]`);\n      this.shared.charge = true;\n    }\n\n    this.shared.fullAttack = formData.fullAttack;\n    rollData.fullAttack = this.shared.fullAttack ? 1 : 0;\n\n    // Many-shot\n    if (this.shared.fullAttack && formData[\"manyshot\"]) {\n      this.shared.manyShot = true;\n    }\n\n    // Rapid Shot\n    if (this.shared.fullAttack && formData[\"rapid-shot\"]) {\n      this.shared.attackBonus.push(`-2[${game.i18n.localize(\"PF1.RapidShot\")}]`);\n    }\n\n    // Primary attack\n    if (formData[\"primary-attack\"] != null)\n      foundry.utils.setProperty(rollData, \"action.naturalAttack.primary\", formData[\"primary-attack\"]);\n\n    // Use measure template\n    if (formData[\"measure-template\"] != null) this.shared.useMeasureTemplate = formData[\"measure-template\"];\n\n    // Set held type\n    const held = formData[\"held\"] || rollData.action.held || rollData.item.held || \"1h\";\n    rollData.action.held = held;\n\n    // Damage multiplier\n    const abilityDamageMultOverride = formData[\"damage-ability-multiplier\"];\n    if (abilityDamageMultOverride != null) {\n      rollData.action.ability.damageMult = abilityDamageMultOverride;\n    }\n\n    // Power Attack\n    if (formData[\"power-attack\"]) {\n      const basePowerAttackBonus = rollData.action?.powerAttack?.damageBonus ?? 2;\n      let powerAttackBonus = (1 + Math.floor(rollData.attributes.bab.total / 4)) * basePowerAttackBonus;\n\n      // Get multiplier\n      const paMult = this.shared.action.getPowerAttackMult({ rollData });\n\n      // Apply multiplier\n      powerAttackBonus = Math.floor(powerAttackBonus * paMult);\n\n      // Get label\n      const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.action.actionType)\n        ? game.i18n.localize(\"PF1.DeadlyAim\")\n        : game.i18n.localize(\"PF1.PowerAttack\");\n\n      // Get penalty\n      const powerAttackPenalty = -(1 + Math.floor(rollData.bab / 4));\n\n      // Add bonuses\n      rollData.powerAttackPenalty = powerAttackPenalty;\n      this.shared.attackBonus.push(`${powerAttackPenalty}[${label}]`);\n      this.shared.powerAttack = true;\n      rollData.powerAttackBonus = powerAttackBonus;\n      rollData.powerAttackPenalty = powerAttackPenalty;\n    } else {\n      rollData.powerAttackBonus = 0;\n      rollData.powerAttackPenalty = 0;\n    }\n\n    // Conditionals\n    const { conditionals } = foundry.utils.expandObject(formData);\n\n    if (conditionals) {\n      this.shared.conditionals = [];\n      Object.entries(conditionals).forEach(([condId, enabled]) => {\n        if (enabled) this.shared.conditionals.push(condId);\n      });\n    }\n    // Conditional defaults for fast-forwarding\n    if (!this.shared.conditionals) {\n      this.shared.conditionals = this.shared.action.conditionals?.reduce((arr, con) => {\n        if (con.default) arr.push(con.id);\n        return arr;\n      }, []);\n    }\n\n    // Apply secondary attack penalties\n    if (rollData.item.subType === \"natural\" && rollData.action?.naturalAttack.primary === false) {\n      const attackBonus =\n        rollData.action.naturalAttack?.secondary?.attackBonus || pf1.config.naturalAttacks.secondary.penalty;\n      let damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      // Allow dialog override to work\n      if (abilityDamageMultOverride) damageMult = abilityDamageMultOverride;\n      this.shared.attackBonus.push(`(${attackBonus})[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n      rollData.action.ability.damageMult = damageMult;\n    }\n\n    // CL check enabled\n    this.shared.casterLevelCheck = formData[\"cl-check\"];\n\n    // Concentration enabled\n    this.shared.concentrationCheck = formData[\"concentration\"];\n  }\n\n  /**\n   * @typedef {object} ItemAttack_AttackData\n   * @property {string} label - The attack's name\n   * @property {number|string|undefined} [attackBonus] - An attack bonus specific to this attack\n   * @property {number|string|undefined} [damageBonus] - A damage bonus specific to this attack\n   * @property {string|null} [ammo] - The ID of the ammo item used\n   */\n  /**\n   * Generates attacks for an item's action.\n   *\n   * @param {boolean} [forceFullAttack=false] - Generate full attack data, e.g. as base data for an {@link AttackDialog}\n   * @returns {Promise<ItemAttack_AttackData[]> | ItemAttack_AttackData[]} The generated default attacks.\n   */\n  generateAttacks(forceFullAttack = false) {\n    const rollData = this.shared.rollData;\n    const action = this.action;\n\n    // Use either natural fullAttack state, or force generation of all attacks via override\n    const full = forceFullAttack || this.shared.fullAttack;\n\n    /** @type {Array<ActionUseAttack>} */\n    const allAttacks = this.action\n      .getAttacks({ full, rollData, conditionals: false, bonuses: false, resolve: false })\n      .map((atk) => new ActionUseAttack(atk.label, atk.bonus));\n\n    // Set default ammo usage\n    const ammoType = this.action.ammo.type;\n    if (ammoType) {\n      const ammoId = this.item.system.ammo?.default;\n      const ammos = this.getAmmo();\n      if (ammoId && ammos.length) {\n        const ammo = ammos.find((a) => a.id === ammoId);\n        const quantity = ammo?.quantity || 0;\n        const ammoCost = action.ammo.cost;\n        const abundant = ammo?.abundant || false;\n        for (let a = 0; a < allAttacks.length; a++) {\n          const atk = allAttacks[a];\n          if (abundant || quantity >= (a + 1) * ammoCost) atk.ammo = ammo;\n          else atk.ammo = null;\n        }\n      }\n    }\n\n    this.shared.attacks = allAttacks;\n\n    return allAttacks;\n  }\n\n  async autoSelectAmmo() {\n    const ammoType = this.shared.action.ammo.type;\n    if (!ammoType) return;\n\n    const ammoCost = this.action.ammo.cost;\n\n    const item = this.item.defaultAmmo;\n    if (item && (item.system.quantity || 0) >= ammoCost) return;\n\n    const ammo = this.actor.itemTypes.loot\n      .filter(\n        (i) =>\n          i.subType === \"ammo\" &&\n          i.system.extraType === ammoType &&\n          i.system.quantity >= ammoCost &&\n          i.system.identified !== false\n      )\n      .sort((a, b) => a.system.price - b.system.price);\n\n    if (ammo.length == 0) return;\n\n    await this.item.update({ \"system.ammo.default\": ammo[0].id });\n  }\n\n  /**\n   * Fetch valid ammo items from actor.\n   *\n   * @returns {AttackAmmo[]} - Available ammo options\n   */\n  getAmmo() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammo.cost;\n    const availableAmmo = actor.itemTypes.loot.filter((item) => this._filterAmmo(item, ammoCost));\n\n    const defaultAmmo = this.action.item.defaultAmmo;\n\n    return availableAmmo.map((ammo) => ({\n      id: ammo.id,\n      quantity: ammo.system.quantity || 0,\n      abundant: ammo.system.abundant || false,\n      data: ammo.toObject(),\n      document: ammo,\n      isDefault: defaultAmmo === ammo,\n    }));\n  }\n\n  /**\n   * Determine if item is valid for use as ammo.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {number} ammoCost - Ammo usage per attack\n   * @returns {boolean} - Whether the provide ammo is valid.\n   */\n  _filterAmmo(item, ammoCost = 1) {\n    if (!(item.type === \"loot\" && item.subType === \"ammo\")) return false;\n    if (item.system.quantity < ammoCost) return false;\n\n    const ammoType = item.system.extraType;\n    if (!ammoType) return true;\n\n    return this.action.ammo.type === ammoType;\n  }\n\n  /**\n   * Subtracts ammo for this attack, updating relevant items with new quantities.\n   *\n   * @param {number} [value=1] - How much ammo to subtract.\n   * @returns {Promise} - Promise that resolves once ammo update is complete.\n   */\n  async subtractAmmo(value = 1) {\n    if (!this.shared.action.ammo.type) return;\n\n    const actor = this.item.actor;\n\n    const ammoUsage = {};\n    for (const atk of this.shared.attacks) {\n      if (atk.ammo) {\n        const item = actor.items.get(atk.ammo.id);\n        if (!item) continue;\n        // Don't remove abundant ammunition\n        if (item.system.abundant) continue;\n\n        ammoUsage[atk.ammo.id] ??= 0;\n        ammoUsage[atk.ammo.id] += value;\n      }\n    }\n\n    this.shared.ammoUsage = ammoUsage;\n\n    if (!foundry.utils.isEmpty(ammoUsage)) {\n      const updateData = Object.entries(ammoUsage).reduce((cur, [ammoId, usage]) => {\n        const quantity = this.item.actor.items.get(ammoId)?.system.quantity;\n        const obj = {\n          _id: ammoId,\n          \"system.quantity\": quantity - usage,\n        };\n\n        cur.push(obj);\n        return cur;\n      }, []);\n\n      return this.item.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n  }\n\n  /**\n   * Update remaining ammo in {@link ChatAttack}s\n   */\n  updateAmmoUsage() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammo.cost;\n    if (ammoCost <= 0) return;\n    for (const atk of this.shared.attacks) {\n      const ammoId = atk.ammo?.id;\n      if (!ammoId) continue;\n      const chatAtk = atk.chatAttack;\n      const ammo = actor.items.get(ammoId)?.system.quantity || 0;\n      chatAtk.ammo.remaining = ammo;\n      chatAtk.ammo.quantity = ammoCost;\n    }\n  }\n\n  async handleConditionals() {\n    if (!this.shared.conditionals?.length) return;\n\n    const rollDataConds = {};\n\n    for (const condId of this.shared.conditionals) {\n      const conditional = this.shared.action.conditionals.get(condId);\n\n      const tag = pf1.utils.createTag(conditional.name);\n      for (const [modKey, modifier] of conditional.modifiers.entries()) {\n        // Ignore modifiers with nonexisting formula or formulas that equal to zero\n        if (modifier.formula == 0) {\n          console.warn(\"Ignored ineffective conditional modifier\", { modifier, actionUse: this });\n          continue;\n        }\n\n        // Adds a formula's result to rollData to allow referencing it.\n        // Due to being its own roll, this will only correctly work for static formulae.\n        const conditionalRoll = await RollPF.safeRoll(modifier.formula, this.shared.rollData, undefined, undefined, {\n          allowInteractive: false,\n        });\n        if (conditionalRoll.err) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.ConditionalRoll\", { number: modKey + 1, name: conditional.name })\n          );\n          // Skip modifier to avoid multiple errors from one non-evaluating entry\n          continue;\n        }\n\n        rollDataConds[tag] ??= {};\n        rollDataConds[tag][modKey] = conditionalRoll.total;\n\n        // Create a key string for the formula array\n        const partString = modifier.partID;\n\n        // Add formula in simple format\n        switch (modifier.target) {\n          case \"attack\":\n          case \"effect\":\n          case \"charges\":\n          case \"misc\":\n          case \"dc\":\n          case \"cl\": {\n            const hasFlavor = /\\[.*\\]/.test(modifier.formula);\n            const flavoredFormula = hasFlavor ? modifier.formula : `(${modifier.formula})[${conditional.name}]`;\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              flavoredFormula,\n            ];\n            break;\n          }\n          // Add formula as array for damage\n          case \"damage\":\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              [modifier.formula, modifier.damageType, false],\n            ];\n            break;\n          // Add formula to the size property\n          case \"size\":\n            this.shared.rollData.size += conditionalRoll.total;\n            if (this.shared.rollData.item) {\n              this.shared.rollData.item.size += conditionalRoll.total;\n            }\n            break;\n          case \"critMult\":\n            this.shared.rollData.critMultBonus += conditionalRoll.total;\n            break;\n          default:\n            console.warn(\"Invalid conditional target:\", modifier.target);\n            break;\n        }\n      }\n    }\n\n    // Expand data into rollData to enable referencing in formulae\n    this.shared.rollData.conditionals = rollDataConds;\n\n    // Add specific pre-rolled rollData entries\n    for (const target of [\"cl\", \"dc\", \"charges\"]) {\n      const cond = this.shared.conditionalPartsCommon[target];\n      if (!cond) continue;\n      const formula = cond.join(\" + \");\n      const roll = await RollPF.safeRoll(formula, this.shared.rollData, [target, formula]);\n      switch (target) {\n        case \"cl\":\n          this.shared.rollData.cl += roll.total;\n          break;\n        case \"dc\":\n          this.shared.rollData.dcBonus += roll.total;\n          break;\n        case \"charges\":\n          this.shared.rollData.chargeCostBonus += roll.total;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Checks all requirements to make the attack. This is after the attack dialog's data has been parsed.\n   *\n   * @returns {Promise<number> | number} 0 if successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkAttackRequirements() {\n    let cost = this.shared.rollData.chargeCost;\n\n    const isSpell = this.item.type === \"spell\";\n\n    if (cost > 0) {\n      const uses = this.item.charges;\n      if (isSpell) {\n        if (this.item.spellbook?.spontaneous && !this.item.system.preparation?.value) {\n          cost = Infinity;\n        }\n      }\n\n      // Cancel usage on insufficient charges\n      if (cost > uses) {\n        // Only spells have variable max uses\n        if (isSpell && this.item.maxCharges <= 0) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientPreparation\", { name: this.item.name }));\n        } else {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.item.name }));\n        }\n        return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Generates ChatAttack entries based off the attack type.\n   */\n  async generateChatAttacks() {\n    // Normal attack(s)\n    if (this.shared.action.hasAttack) await this.addAttacks();\n    // Damage only\n    else if (this.shared.action.hasDamage) await this.addDamage();\n    // for effect notes only\n    else await this.addEmptyAttack();\n\n    const misfire = this.action.misfire ?? 0;\n\n    // Fill in ammo use details\n    this.shared.attacks.forEach((/** @type {ChatAttack}*/ attack) => {\n      if (!attack.hasAmmo) return;\n      /** @type {ChatAttack} */\n      const atk = attack.chatAttack;\n      if (atk) atk.setAmmo(attack.ammo.id);\n      // Mark misfire\n      if (atk.ammo) {\n        const d20 = atk.attack?.d20?.total;\n        atk.ammo.misfire = d20 <= misfire;\n      }\n    });\n\n    // Add save info\n    this.shared.save = this.shared.action.save.type;\n    this.shared.saveDC = this.shared.action.getDC(this.shared.rollData);\n  }\n\n  /**\n   * Determines conditional parts used in a specific attack.\n   *\n   * @param {object} atk - The attack used.\n   * @param {number} [index=0] - The index of the attack, in order of enabled attacks.\n   * @returns {object} The conditional parts used.\n   */\n  _getConditionalParts(atk, { index = 0 }) {\n    const result = {};\n\n    const conditionalTemplates = {\n      \"attack.normal\": \"attack.;id;.normal\",\n      \"attack.crit\": \"attack.;id;.crit\",\n      \"damage.normal\": \"damage.;id;.normal\",\n      \"damage.crit\": \"damage.;id;.crit\",\n      \"damage.nonCrit\": \"damage.;id;.nonCrit\",\n    };\n    const addPart = (id) => {\n      for (const [templateKey, templateStr] of Object.entries(conditionalTemplates)) {\n        if (!result[templateKey]) result[templateKey] = [];\n\n        const parsedStr = templateStr.replace(\";id;\", id);\n        result[templateKey].push(...(this.shared.conditionalPartsCommon[parsedStr] ?? []));\n      }\n    };\n\n    addPart(`attack_${index}`);\n    addPart(\"allAttack\");\n    addPart(\"allDamage\");\n\n    if (atk.type === \"rapid-shot\") {\n      addPart(\"rapidShotAttack\");\n      addPart(\"rapidShotDamage\");\n    } else if (atk.type === \"haste-attack\") {\n      addPart(\"hasteAttack\");\n      addPart(\"hasteDamage\");\n    }\n\n    return result;\n  }\n\n  /**\n   * Adds ChatAttack entries to an attack's shared context.\n   */\n  async addAttacks() {\n    const rollData = this.shared.rollData;\n\n    for (let a = 0; a < this.shared.attacks.length; a++) {\n      const atk = this.shared.attacks[a];\n\n      // Combine conditional modifiers for attack and damage\n      const conditionalParts = this._getConditionalParts(atk, { index: a });\n\n      rollData.attackCount = a;\n\n      // Create attack object\n      const attack = new ChatAttack(this.shared.action, {\n        label: atk.label,\n        rollData,\n        targets: game.user.targets,\n        actionUse: this,\n      });\n\n      if (atk.type !== \"manyshot\") {\n        // Add attack roll\n        await attack.addAttack({\n          extraParts: [...this.shared.attackBonus, atk.attackBonus],\n          conditionalParts,\n        });\n      }\n\n      // Add damage\n      if (this.shared.action.hasDamage) {\n        const extraParts = foundry.utils.deepClone(this.shared.damageBonus);\n        const nonCritParts = [];\n        const critParts = [];\n\n        // Add power attack bonus\n        if (rollData.powerAttackBonus > 0) {\n          // Get label\n          const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.shared.action.actionType)\n            ? game.i18n.localize(\"PF1.DeadlyAim\")\n            : game.i18n.localize(\"PF1.PowerAttack\");\n\n          const powerAttackBonus = rollData.powerAttackBonus;\n          const powerAttackCritBonus = powerAttackBonus * (rollData.action?.powerAttack?.critMultiplier ?? 1);\n          nonCritParts.push(`${powerAttackBonus}[${label}]`);\n          critParts.push(`${powerAttackCritBonus}[${label}]`);\n        }\n\n        // Add damage\n        let flavor = null;\n        if (atk.type === \"manyshot\") flavor = game.i18n.localize(\"PF1.Manyshot\");\n        await attack.addDamage({\n          flavor,\n          extraParts: [...extraParts, ...nonCritParts],\n          critical: false,\n          conditionalParts,\n        });\n\n        // Add critical hit damage\n        if (attack.hasCritConfirm) {\n          await attack.addDamage({ extraParts: [...extraParts, ...critParts], critical: true, conditionalParts });\n        }\n      }\n\n      // Add to list\n      this.shared.chatAttacks.push(attack);\n\n      // Add a reference to the attack that created this chat attack\n      atk.chatAttack = attack;\n    }\n\n    // Cleanup rollData\n    delete rollData.attackCount;\n  }\n\n  /**\n   * Adds a ChatAttack entry for damage to an attack's shared context.\n   */\n  async addDamage() {\n    // Set conditional modifiers\n    this.shared.conditionalParts = {\n      \"damage.normal\": this.shared.conditionalPartsCommon[\"damage.allDamage.normal\"] ?? [],\n    };\n\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n    // Add damage\n    await attack.addDamage({\n      extraParts: foundry.utils.deepClone(this.shared.damageBonus),\n      critical: false,\n      conditionalParts: this.shared.conditionalParts,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  async addFootnotes() {\n    if (!this.item) return;\n\n    const actor = this.actor;\n    const rollData = this.shared.rollData;\n\n    const type = this.action.actionType;\n    const typeMap = {\n      rsak: [\"ranged\", \"rangedSpell\"],\n      rwak: [\"ranged\", \"rangedWeapon\"],\n      twak: [\"ranged\", \"thrownWeapon\", \"rangedWeapon\"],\n      rcman: [\"ranged\"],\n      mwak: [\"melee\", \"meleeWeapon\"],\n      msak: [\"melee\", \"meleeSpell\"],\n      mcman: [\"melee\"],\n    };\n\n    const isAttack = this.action.hasAttack ?? false;\n\n    const notes = [];\n    // Add actor notes for attacks\n    if (this.actor && isAttack) {\n      notes.push(...(await actor.getContextNotesParsed(\"attack\", { rollData })));\n      for (const subTarget of typeMap[type]) {\n        notes.push(...(await actor.getContextNotesParsed(subTarget, { rollData })));\n      }\n    }\n    // Add item notes\n    if (this.item?.system.attackNotes) {\n      notes.push(...this.item.system.attackNotes.map((text) => ({ text })));\n    }\n    // Add action notes\n    if (this.action.notes.footer) {\n      notes.push(...this.action.notes.footer.map((text) => ({ text })));\n    }\n\n    // Add CMB notes\n    if (this.action.isCombatManeuver) {\n      notes.push(...((await actor?.getContextNotesParsed(\"cmb\", { rollData })) ?? []));\n    }\n\n    if (isAttack) {\n      const hasCritConfirm = this.shared.attacks.some((atk) => !!atk.chatAttack?.hasCritConfirm);\n      if (hasCritConfirm) notes.push(...((await actor?.getContextNotesParsed(\"critical\", { rollData })) ?? []));\n    }\n\n    this.shared.templateData.footnotes = notes;\n  }\n\n  async addEmptyAttack() {\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  /**\n   * Add effect notes for each individual attack.\n   */\n  async addEffectNotes() {\n    const promises = this.shared.chatAttacks\n      .filter((attack) => attack.type !== \"manyshot\")\n      .map((attack) => attack.addEffectNotes({ rollData: this.shared.rollData }));\n    await Promise.all(promises);\n  }\n\n  /**\n   * @typedef {object} Attack_MeasureTemplateResult\n   * @property {boolean} result - Whether an area was selected.\n   * @property {Function} [place] - Function to place the template, if an area was selected.\n   * @property {Function} [delete] - Function to delete the template, if it has been placed.\n   */\n  /**\n   * Prompts the user for an area, based on the attack's measure template.\n   *\n   * @returns {Promise.<Attack_MeasureTemplateResult|false|null>} Whether an area was selected, false if template placement is skipped, null if cancelled.\n   */\n  async promptMeasureTemplate() {\n    const mt = this.shared.action.measureTemplate;\n\n    // Determine size\n    let dist = RollPF.safeRollSync(mt.size, this.shared.rollData).total;\n    // Apply system of units conversion\n    dist = pf1.utils.convertDistance(dist)[0];\n\n    // Abort template placement when it exceeds scene size\n    const { distancePixels, width, height } = canvas.scene.dimensions;\n    const maxDist = Math.max(width / distancePixels, height / distancePixels);\n    if (dist > maxDist) {\n      // TODO: Print notification about template placement skipping due to excessive size\n      console.debug(\"PF1 | Action-Use | Template size exceeds maximum size\", { distance: dist, maximum: maxDist });\n      return false;\n    }\n\n    // Create data object\n    const templateData = {\n      type: mt.type,\n      color: mt.color,\n      texture: mt.texture,\n      distance: dist,\n      flags: {\n        pf1: {\n          origin: {\n            uuid: this.shared.action.uuid,\n          },\n        },\n      },\n    };\n\n    // Create template\n    this.shared.template = null;\n    const template = pf1.canvas.AbilityTemplate.fromData(templateData, { action: this.shared.action });\n    let result;\n    if (template) {\n      const actorSheet = this.item.actor?.sheet;\n      const sheetRendered = actorSheet?._element != null;\n      if (sheetRendered) actorSheet.minimize();\n      result = await template.drawPreview(this.shared.event).catch((e) => null);\n      if (sheetRendered) actorSheet.maximize();\n    }\n\n    if (result) this.shared.template = await result.place();\n\n    return result;\n  }\n\n  /**\n   * Handles Dice So Nice integration.\n   */\n  async handleDiceSoNice() {\n    if (!game.settings.get(\"pf1\", \"integration\").diceSoNice) return;\n    if (!game.dice3d?.isEnabled()) return;\n\n    // Use try to make sure a chat card is rendered even if DsN fails\n    try {\n      // Define common visibility options for whole attack\n      const chatData = {};\n      ChatMessage.implementation.applyRollMode(chatData, this.shared.rollMode);\n\n      const mergeRolls = game.settings.get(\"dice-so-nice\", \"enabledSimultaneousRolls\");\n      const skipRolls = game.settings.get(\"dice-so-nice\", \"immediatelyDisplayChatMessages\");\n\n      /**\n       * Visually roll dice\n       *\n       * @param {PoolTerm[]} pools - An array of PoolTerms to be rolled together\n       * @returns {Promise} A Promise that is resolved when all rolls have been displayed\n       */\n      const showRoll = async (pools) => {\n        const whisper = chatData.whisper?.length ? chatData.whisper : undefined; // DSN does not like empty array for whisper\n\n        if (mergeRolls) {\n          // All at once\n          return Promise.all(\n            pools.map((pool) => game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind))\n          );\n        } else {\n          // Sequential\n          for (const pool of pools) {\n            await game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind);\n          }\n        }\n      };\n\n      /** @type {PoolTerm[]} */\n      const pools = [];\n\n      for (const atk of this.shared.chatAttacks) {\n        // Create PoolTerm for attack and damage rolls\n        const attackPool = new foundry.dice.terms.PoolTerm();\n        if (atk.attack) attackPool.rolls.push(atk.attack);\n        attackPool.rolls.push(...(atk.damage?.rolls ?? []));\n\n        // Create PoolTerm for crit confirmation and crit damage rolls\n        const critPool = new foundry.dice.terms.PoolTerm();\n        if (atk.hasCritConfirm) critPool.rolls.push(atk.critConfirm);\n        critPool.rolls.push(...(atk.critDamage?.rolls ?? []));\n\n        // Add non-empty pools to the array of rolls to be displayed\n        if (attackPool.rolls.length) pools.push(attackPool);\n        if (critPool.rolls.length) pools.push(critPool);\n      }\n\n      if (pools.length) {\n        // Chat card is to be shown immediately\n        if (skipRolls) showRoll(pools);\n        // Wait for rolls to finish before showing the chat card\n        else await showRoll(pools);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Adds an attack's chat card data to the shared object.\n   */\n  async getMessageData() {\n    if (this.shared.chatAttacks.length === 0) return;\n\n    const rollData = this.shared.rollData;\n\n    // Create chat template data\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      name: this.item.name,\n      header: {\n        image: this.action.img || this.item.img,\n      },\n      style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n      rollMode: this.shared.rollMode,\n      attacks: this.shared.chatAttacks.map((o) => o.finalize()),\n    };\n\n    const actor = this.item.actor,\n      token = this.token ?? actor?.token;\n\n    // Set chat data\n    this.shared.chatData = {\n      type: \"action\",\n      speaker: ChatMessage.implementation.getSpeaker({ actor, token }),\n      rollMode: this.shared.rollMode,\n    };\n\n    // Set attack sound\n    if (this.shared.action.soundEffect) this.shared.chatData.sound = this.shared.action.soundEffect;\n    // Set dice sound if neither attack sound nor Dice so Nice are available\n    else if (!game.settings.get(\"pf1\", \"integration\").diceSoNice || !game.dice3d?.isEnabled())\n      this.shared.chatData.sound = CONFIG.sounds.dice;\n\n    // Get extra text\n    const properties = [];\n    const extraText = await this.enrichNotes(this.shared.templateData.footnotes, \"PF1.Footnotes\", \"footnotes\");\n\n    const itemChatData = await this.item.getChatData({\n      actionId: this.shared.action.id,\n      chatcard: true,\n      rollData: this.shared.rollData,\n    });\n\n    const formatTextNotes = (notes) => notes?.map((text) => ({ text })) ?? [];\n\n    // Get properties\n    // TODO: Object format\n    const commonProperties = [...itemChatData.properties, ...this.addGenericPropertyLabels()];\n    if (commonProperties.length) {\n      properties.push({\n        header: game.i18n.localize(\"PF1.InfoShort\"),\n        css: \"common-notes\",\n        value: formatTextNotes(commonProperties),\n      });\n    }\n\n    // Get combat properties\n    if (game.combat) {\n      // TODO: Object format\n      const combatProps = this.addCombatPropertyLabels();\n\n      if (combatProps.length) {\n        properties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: formatTextNotes(combatProps),\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Add CL notes\n    if (this.item.type === \"spell\" && actor) {\n      const clNotes = await actor.getContextNotesParsed(`spell.cl.${this.item.system.spellbook}`, { rollData });\n\n      if (clNotes.length) {\n        properties.push({\n          header: game.i18n.localize(\"PF1.CLNotes\"),\n          css: \"cl-notes\",\n          value: clNotes,\n        });\n      }\n\n      const school = this.item.system.school;\n      if (school) {\n        // Add DC School notes\n        const dcSchoolNotes = await actor.getContextNotesParsed(`dc.school.${school}`, { rollData });\n        if (dcSchoolNotes.length) {\n          properties.push({\n            header: game.i18n.format(\"PF1.DCSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            css: \"dc-notes\",\n            value: dcSchoolNotes,\n          });\n        }\n        // Add CL School notes\n        const clSchoolNotes = await actor.getContextNotesParsed(`cl.school.${school}`, { rollData });\n        if (clSchoolNotes.length) {\n          properties.push({\n            header: game.i18n.format(\"PF1.CLSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            css: \"cl-notes\",\n            value: clSchoolNotes,\n          });\n        }\n      }\n    }\n\n    // Parse template data\n    const identified = Boolean(this.shared.rollData.item?.identified ?? true);\n    const name = identified ? `${this.item.name} (${this.shared.action.name})` : this.item.getName(true);\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      tokenUuid: token?.uuid,\n      actionId: this.shared.action?.id,\n      extraText,\n      identified,\n      name,\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      actionDescription: itemChatData.actionDescription,\n      properties,\n      item: this.item.toObject(),\n      actor,\n      token,\n      scene: canvas.scene?.id,\n      hasSave: this.shared.action.hasSave,\n      rollData: this.shared.rollData,\n      save: {\n        dc: this.shared.saveDC,\n        type: this.shared.save,\n        label: game.i18n.format(\"PF1.SavingThrowButtonLabel\", {\n          type: pf1.config.savingThrows[this.shared.save],\n          dc: this.shared.saveDC.toString(),\n        }),\n        gmSensitiveLabel: game.i18n.format(\"PF1.SavingThrowButtonLabelGMSensitive\", {\n          save: pf1.config.savingThrows[this.shared.save],\n        }),\n      },\n    };\n\n    // Add range info\n    {\n      const range = this.shared.action.getRange({ type: \"max\", rollData: this.shared.rollData });\n      if (range != null) {\n        this.shared.templateData.range = range;\n        const usystem = pf1.utils.getDistanceSystem();\n        const isMetric = usystem === \"metric\";\n        const units = isMetric ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n\n        const rangeUnits = this.shared.action.range.units;\n        if ([\"melee\", \"touch\", \"reach\", \"close\", \"medium\", \"long\"].includes(rangeUnits)) {\n          this.shared.templateData.rangeLabel = pf1.config.distanceUnits[rangeUnits];\n          this.shared.templateData.rangeLabel += ` (${game.i18n.format(\"PF1.RangeFormat\", { distance: range, units })})`;\n          this.shared.templateData.rangeLabel = game.i18n.format(\"PF1.RangeNote\", {\n            distance: this.shared.templateData.rangeLabel,\n            units: \"\", // HACK\n          });\n        } else {\n          this.shared.templateData.rangeLabel = game.i18n.format(\"PF1.RangeNote\", { distance: range, units });\n        }\n      }\n    }\n\n    // Add spell info\n    if (this.item.type === \"spell\" && actor) {\n      // Spell failure\n      if (actor.spellFailure > 0 && this.item.system.components.somatic) {\n        const spellbook = foundry.utils.getProperty(\n          actor.system,\n          `attributes.spells.spellbooks.${this.item.system.spellbook}`\n        );\n        if (spellbook && spellbook.arcaneSpellFailure) {\n          const roll = await RollPF.safeRoll(\"1d100\");\n          this.shared.templateData.spellFailure = roll.total;\n          this.shared.templateData.spellFailureRoll = roll;\n          this.shared.templateData.spellFailureSuccess = roll.total > actor.spellFailure;\n        }\n      }\n      // Caster Level Check\n      this.shared.templateData.casterLevelCheck = this.shared.casterLevelCheck;\n      // Concentration check\n      this.shared.templateData.concentrationCheck = this.shared.concentrationCheck;\n    }\n\n    // Generate metadata\n    const metadata = this.generateChatMetadata();\n\n    // Get target info\n    if (!game.settings.get(\"pf1\", \"disableAttackCardTargets\")) {\n      this.shared.templateData.targets = this.shared.targets.map((t) => ({\n        img: t.document.texture.src,\n        actor: t.actor,\n        token: t.document,\n        uuid: t.document.uuid,\n      }));\n    }\n\n    if (!identified) {\n      metadata.item.identified = identified;\n      metadata.item.name = this.item._source.name || this.item.name;\n      metadata.item.description = itemChatData.identifiedDescription;\n      metadata.action.name = this.shared.action.name;\n      metadata.action.description = itemChatData.actionDescription;\n    }\n    this.shared.chatData.system = metadata;\n    this.shared.chatData[\"flags.core.canPopout\"] = true;\n  }\n\n  /**\n   * Enrich notes\n   *\n   * @param {Array<string>} notes - Notes\n   * @param {string} title - Notes section title\n   * @param {string} css - CSS selectors\n   * @returns {Promise<string>} - Enriched HTML as text\n   */\n  async enrichNotes(notes, title, css) {\n    if (notes.length === 0) return;\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes,\n      css,\n      header: game.i18n.localize(title),\n    });\n\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      relativeTo: this.actor,\n    };\n\n    return TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  /**\n   * Adds generic property labels to an attack's chat card.\n   *\n   * @todo Object format\n   * @returns {string[]} The resulting property labels.\n   */\n  addGenericPropertyLabels() {\n    const properties = [];\n\n    // Add actual cost\n    const cost = this.shared.totalChargeCost;\n    if (cost && !this.item.system.atWill) {\n      if (this.item.type === \"spell\" && this.item.useSpellPoints()) {\n        properties.push(`${game.i18n.localize(\"PF1.SpellPointsCost\")}: ${cost}`);\n      } else {\n        properties.push(`${game.i18n.localize(\"PF1.ChargeCost\")}: ${cost}`);\n      }\n    }\n\n    // Add conditions\n    const conditions = Object.entries(this.actor.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInAction)\n      .map((c) => c.name);\n\n    // Special case\n    // TODO: Move this configuration to conditions registry\n    if (this.actor.statuses.has(\"deaf\") && this.item.type === \"spell\") {\n      // TODO: Check if someone modified the conditions to show anyway?\n      conditions.push(pf1.registry.conditions.get(\"deaf\").name);\n    }\n\n    if (conditions.length) properties.push(...conditions);\n\n    // Nonlethal\n    if (this.action.nonlethal) properties.push(game.i18n.localize(\"PF1.Nonlethal\"));\n\n    // Splash\n    if (this.action.splash) properties.push(game.i18n.localize(\"PF1.Splash\"));\n\n    if (this.action.touch) properties.push(game.i18n.localize(\"PF1.TouchAttackShort\"));\n\n    // Add info for material\n    let materialKey = null;\n    let materialAddons = null;\n    const normalMaterialAction = this.action.material?.normal.value;\n    const normalMaterialItem = this.item.system.material?.normal.value;\n    const baseMaterialItem = this.item.system.material?.base?.value;\n    const addonMaterialAction = this.action.material?.addon;\n    const addonMaterialItem = this.item.system.material?.addon;\n\n    // Check the action data first, then the normal material, then the base material\n    if (normalMaterialAction && normalMaterialAction.length > 0) materialKey = normalMaterialAction;\n    else if (normalMaterialItem && normalMaterialItem.length > 0) materialKey = normalMaterialItem;\n    else materialKey = baseMaterialItem;\n\n    if (materialKey) {\n      properties.push(pf1.registry.materials.get(materialKey.toLowerCase())?.name ?? materialKey.capitalize());\n    }\n\n    // Check for addon materials; prefer action data, then item data\n    if (addonMaterialAction && addonMaterialAction.length > 0) materialAddons = addonMaterialAction;\n    else if (addonMaterialItem && addonMaterialItem.length > 0) materialAddons = addonMaterialItem;\n\n    if (materialAddons) {\n      const materialAddonNames = materialAddons\n        .map((addon) => {\n          if (!addon) return null;\n          const addonName = pf1.registry.materials.get(addon.toLowerCase())?.name ?? addon.capitalize();\n          return addonName;\n        })\n        .filter((addon) => !!addon);\n\n      if (materialAddonNames.length > 0) properties.push(...materialAddonNames);\n    }\n\n    // Add info for alignments\n    const actionAlignments = this.action.alignments;\n    const itemAlignments = this.item.system.alignments ?? {};\n    if (actionAlignments) {\n      for (const alignment of Object.keys(actionAlignments)) {\n        if (\n          actionAlignments[alignment] || // The action alignment is true OR\n          (actionAlignments[alignment] === null && // (The action alignment is indeterminate AND\n            itemAlignments[alignment])\n        ) {\n          // The item has the alignment)\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    } else {\n      // Honestly, this should never happen. An action should always have an alignment now.\n      for (const alignment of Object.keys(itemAlignments)) {\n        if (itemAlignments[alignment]) {\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    }\n\n    // Add info for Power Attack to melee, Deadly Aim to ranged attacks\n    if (this.shared.powerAttack) {\n      switch (this.action.actionType) {\n        case \"rwak\":\n        case \"twak\":\n          properties.push(game.i18n.localize(\"PF1.DeadlyAim\"));\n          break;\n        case \"mwak\":\n          properties.push(game.i18n.localize(\"PF1.PowerAttack\"));\n          break;\n      }\n    }\n\n    // Add info for Point-Blank shot\n    if (this.shared.pointBlankShot) properties.push(game.i18n.localize(\"PF1.PointBlankShot\"));\n\n    // Add info for Rapid Shot\n    if (this.shared.attacks.find((o) => o.id === \"rapid-shot\")) properties.push(game.i18n.localize(\"PF1.RapidShot\"));\n\n    if (this.shared.manyShot) properties.push(game.i18n.localize(\"PF1.Manyshot\"));\n\n    // Add Armor Check Penalty's application to attack rolls info\n    if (this.item.hasAttack && this.shared.rollData.attributes?.acp?.attackPenalty > 0)\n      properties.push(game.i18n.localize(\"PF1.ArmorCheckPenalty\"));\n\n    // Add conditional names to tags\n    for (const condId of this.shared.conditionals) {\n      const cond = this.shared.action.conditionals.get(condId);\n      properties.push(cond.name || game.i18n.localize(\"PF1.Undefined\"));\n    }\n\n    // Add Wound Thresholds info\n    if (this.shared.rollData.attributes?.woundThresholds?.level > 0)\n      properties.push(pf1.config.woundThresholdConditions[this.shared.rollData.attributes.woundThresholds.level]);\n\n    return properties;\n  }\n\n  /**\n   * Adds combat property labels to an attack's chat card.\n   *\n   * @todo Object format\n   * @returns {string[]} The resulting property labels.\n   */\n  addCombatPropertyLabels() {\n    const properties = [];\n\n    // Add round info\n    properties.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n    return properties;\n  }\n\n  /**\n   * Generates metadata for this attack for the chat card to store.\n   *\n   * @returns {object} The resulting metadata object.\n   */\n  generateChatMetadata() {\n    const metadata = {\n      actor: this.actor.uuid,\n      item: { id: this.item.id },\n      action: { id: this.action.id },\n      combat: undefined,\n      template: this.shared.template?.uuid ?? null,\n      rolls: {\n        attacks: [],\n      },\n      targets: this.shared.targets.map((t) => t.document.uuid),\n      config: {\n        critMult: this.shared.rollData.critMult,\n      },\n    };\n\n    // Mark as nonlethal\n    if (this.action.nonlethal) metadata.config.nonlethal = true;\n\n    // Cache effective CL and SL for this action\n    metadata.config.cl = this.shared.rollData.cl;\n    if (this.item.type === \"spell\") metadata.config.sl = this.shared.rollData.sl;\n\n    if (this.actor && game.combat?.combatants.some((c) => c.actor === this.actor)) {\n      metadata.combat = game.combat.id;\n    }\n\n    // Add attack rolls\n    for (let attackIndex = 0; attackIndex < this.shared.chatAttacks.length; attackIndex++) {\n      const chatAttack = this.shared.chatAttacks[attackIndex];\n      const attackRolls = { attack: null, damage: [], critConfirm: null, critDamage: [] };\n      // Add attack roll\n      if (chatAttack.attack) attackRolls.attack = chatAttack.attack.toJSON();\n      // Add damage rolls\n      if (chatAttack.damage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.damage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.damage.rolls[damageIndex];\n          attackRolls.damage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n      // Add critical confirmation roll\n      if (chatAttack.critConfirm) attackRolls.critConfirm = chatAttack.critConfirm.toJSON();\n      // Add critical damage rolls\n      if (chatAttack.critDamage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.critDamage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.critDamage.rolls[damageIndex];\n          attackRolls.critDamage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n\n      // Record used ammo ID and quantity\n      if (chatAttack.ammo?.id) {\n        attackRolls.ammo = {\n          id: chatAttack.ammo.id,\n          quantity: this.shared.action.ammo.cost,\n          misfire: chatAttack.ammo.misfire ?? false,\n        };\n      }\n\n      metadata.rolls.attacks[attackIndex] = attackRolls;\n    }\n\n    // Add miscellaneous metadata\n    if (this.shared.saveDC) metadata.save = { dc: this.shared.saveDC, type: this.shared.save };\n    if (this.item.type === \"spell\") metadata.spell = { cl: this.shared.rollData.cl, sl: this.shared.rollData.sl };\n\n    return metadata;\n  }\n\n  /**\n   * Executes the item's script calls.\n   *\n   * @param {\"use\"|\"postUse\"} [category=\"use\"] Script call category\n   */\n  async executeScriptCalls(category = \"use\") {\n    const shared = this.shared;\n\n    if (!(\"attackData\" in shared)) {\n      Object.defineProperty(shared, \"attackData\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"shared.attackData is deprecated in favor of directly accessing shared\",\n            {\n              since: \"PF1 v10\",\n              until: \"PF1 v12\",\n            }\n          );\n          return shared;\n        },\n      });\n    }\n\n    const rv = await this.item.executeScriptCalls(category, {}, shared);\n\n    if (category === \"use\") this.shared.scriptData = rv;\n  }\n\n  /**\n   * Posts the attack's chat card.\n   *\n   * @returns {Promise<ChatMessage | SharedActionData>}\n   */\n  async postMessage() {\n    this.shared.chatTemplate ||= \"systems/pf1/templates/chat/attack-roll.hbs\";\n\n    if (Hooks.call(\"pf1PreDisplayActionUse\", this) === false) return this.shared;\n\n    // Return early if no chat message is to be provided\n    if (!this.shared.chatMessage || this.shared.scriptData.hideChat) {\n      return this.shared;\n    }\n\n    // Show chat message\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      secrets: this.isOwner,\n      relativeTo: this.actor,\n    };\n\n    const content = await renderTemplate(this.shared.chatTemplate, this.shared.templateData);\n    this.shared.chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // TODO: Enrich only on render\n    const metadata = this.shared.chatData.system;\n    if (metadata.item?.description) {\n      metadata.item.description = await TextEditor.enrichHTML(metadata.item.description, enrichOptions);\n    }\n    if (metadata.action?.description) {\n      metadata.action.description = await TextEditor.enrichHTML(metadata.action.description, enrichOptions);\n    }\n\n    // Apply roll mode\n    this.shared.chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(this.shared.chatData, this.shared.chatData.rollMode);\n\n    const result = await ChatMessage.implementation.create(this.shared.chatData);\n\n    this.shared.message = result;\n\n    return result;\n  }\n\n  /**\n   * Collect valid targets.\n   */\n  async getTargets() {\n    // Get targets from template, and if no template is present, from explicitly targeted tokens list\n    /** @type {MeasuredTemplatePF|null} */\n    const template = this.shared.template?.object;\n    let targets = template ? await template.getTokensWithin() : null;\n    targets ??= Array.from(game.user.targets);\n    // Ignore defeated and secret tokens\n    this.shared.targets = targets.filter((t) => t.combatant?.isDefeated !== true);\n  }\n\n  /**\n   * Armor as DR defense DC determination.\n   *\n   * @remarks\n   * - Does not account for critical feats.\n   * - Does not account for size difference between target and attacker.\n   *\n   * @param {D20RollPF} attack - Attack roll\n   * @returns {pf1.dice.RollPF} - Defense DC\n   */\n  getDefenseDC(attack) {\n    const parts = this._getDefenseDCParts(attack);\n    return RollPF.safeRollSync(parts.join(\" + \"));\n  }\n\n  /**\n   * @internal\n   * @param {D20RollPF} attack - Attack roll\n   * @returns {Array<string>} - DC parts\n   */\n  _getDefenseDCParts(attack) {\n    const parts = [];\n\n    // Determine check\n    const check = attack.d20.total;\n    parts.push(`${check}[${game.i18n.localize(\"PF1.Rolls.Check.Label\")}]`);\n\n    // Locate used BAB (accounts for overrides)\n    const babIdent = game.i18n.localize(\"PF1.BAB\");\n    const bab = attack.terms.find((t) => t.flavor === babIdent)?.number ?? 0;\n    parts.push(`${Math.floor(bab / 2)}[${game.i18n.localize(\"PF1.HalfBAB\")}]`);\n\n    return parts;\n  }\n\n  async prepareChargeCost() {\n    const rollData = this.shared.rollData;\n\n    // Determine charge cost\n    const baseCostRoll = await this.shared.action.getChargeCost({ rollData });\n    const baseCost = baseCostRoll?.total || 0;\n\n    // Bonus cost, e.g. from a conditional modifier\n    const bonusCost = this.shared.rollData.chargeCostBonus ?? 0;\n\n    let cost = baseCost + bonusCost;\n\n    // Override cost\n    if (this.shared.cost !== null) cost = this.shared.cost;\n\n    // Save chargeCost as rollData entry for anything else\n    this.shared.rollData.chargeCost = cost;\n  }\n\n  /**\n   * Process everything\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.skipDialog=false] - Skip dialog\n   * @returns {Promise<ActionUse | SharedActionData | void>}\n   */\n  async process({ skipDialog = false } = {}) {\n    const shared = this.shared;\n\n    // Check requirements for item\n    let reqErr = await this.checkRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    await this.autoSelectAmmo();\n\n    // Get new roll data\n    this.getRollData();\n\n    // let modules modify the ActionUse before attacks are rolled\n    Hooks.callAll(\"pf1CreateActionUse\", this);\n\n    // Generate default attacks\n    shared.fullAttack = true;\n    await this.generateAttacks(true);\n\n    let form;\n    // Show attack dialog, if appropriate\n    if (!skipDialog) {\n      form = await this.createAttackDialog();\n      // Stop if result is not an object (i.e. when closed is clicked on the dialog)\n      if (!form) return;\n    }\n\n    // Save form data in case modules want to reference it later\n    // TODO: Remove this bad reference in favor of storing it in shared data\n    this.formData = form ?? {};\n    // Add reference to shared data\n    this.shared.formData = this.formData;\n\n    // Alter roll data\n    // TODO: Remove this unnecessary parameter\n    await this.alterRollData(this.formData);\n\n    // Filter out attacks without ammo usage (out of ammo)\n    if (shared.action.ammo.type && shared.action.ammo?.cost > 0) {\n      shared.attacks = shared.attacks.filter((o) => o.hasAmmo);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.AmmoDepleted\"));\n        return { err: pf1.actionUse.ERR_REQUIREMENT, code: pf1.actionUse.ERR_REQUIREMENT.INSUFFICIENT_AMMO };\n      }\n    }\n\n    // Limit attacks to 1 if not full rounding\n    if (!shared.fullAttack) shared.attacks = shared.attacks.slice(0, 1);\n    // Handle conditionals\n    await this.handleConditionals();\n\n    // Prepare charge cost\n    await this.prepareChargeCost();\n\n    // Filter out attacks without charge usage (out of charges)\n    if (shared.rollData.chargeCost != 0 && this.shared.action.uses?.perAttack) {\n      const cost = shared.rollData.chargeCost;\n      const charges = shared.item.charges;\n\n      shared.attacks.forEach((atk, index) => {\n        if (charges >= (index + 1) * cost) atk.chargeCost = cost;\n        else atk.chargeCost = null;\n      });\n\n      shared.attacks = shared.attacks.filter((o) => o.chargeCost !== null);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.ChargesDepleted\"));\n        return { err: pf1.actionUse.ERR_REQUIREMENT, code: pf1.actionUse.ERR_REQUIREMENT.INSUFFICIENT_CHARGES };\n      }\n    }\n\n    // Check attack requirements, post-dialog\n    reqErr = await this.checkAttackRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    // Prompt measure template\n    let measureResult;\n    if (shared.useMeasureTemplate && canvas.scene) {\n      measureResult = await this.promptMeasureTemplate();\n      if (measureResult === null) return; // Cancelled\n    }\n\n    await this.getTargets();\n\n    // Generate chat attacks - leave this just before `pf1PreActionuse` hook call\n    await this.generateChatAttacks();\n\n    // Add notes after all attack info is generated\n    await this.addEffectNotes();\n    await this.addFootnotes();\n\n    // Call itemUse hook and determine whether the item can be used based off that\n    if (Hooks.call(\"pf1PreActionUse\", this) === false) {\n      await measureResult?.delete();\n      return;\n    }\n\n    // Call script calls\n    await this.executeScriptCalls();\n    if (shared.scriptData?.reject) {\n      await measureResult?.delete();\n      return;\n    }\n\n    const premessage_promises = [];\n    // Handle Dice So Nice\n    premessage_promises.push(this.handleDiceSoNice());\n\n    // Subtract uses\n    const ammoCost = this.action.ammo.cost;\n    if (ammoCost != 0) premessage_promises.push(this.subtractAmmo(ammoCost));\n\n    let totalCost = shared.rollData?.chargeCost;\n    if (this.action.uses.perAttack) {\n      totalCost = this.shared.attacks.reduce((total, atk) => total + atk.chargeCost, 0);\n    }\n    if (totalCost != 0) {\n      shared.totalChargeCost = totalCost;\n      premessage_promises.push(this.item.addCharges(-totalCost));\n    }\n\n    if (shared.action.isSelfCharged)\n      premessage_promises.push(shared.action.update({ \"uses.self.value\": shared.action.uses.self.value - 1 }));\n\n    await Promise.all(premessage_promises);\n\n    // Update remaining ammo for chat message display\n    this.updateAmmoUsage();\n\n    // Retrieve message data\n    await this.getMessageData();\n\n    // Post message\n    let result = Promise.resolve(null);\n    if (shared.scriptData?.hideChat !== true) {\n      result = this.postMessage();\n    }\n\n    // Deselect targets\n    if (game.settings.get(\"pf1\", \"clearTargetsAfterAttack\") && game.user.targets.size) {\n      game.user.updateTokenTargets([]);\n      // Above does not communicate targets to other users, so..\n      game.user.broadcastActivity({ targets: [] });\n    }\n\n    // Wait for chat message to be created before continuing\n    await result;\n\n    // Call post-use script calls\n    await this.executeScriptCalls(\"postUse\");\n\n    Hooks.callAll(\"pf1PostActionUse\", this, this.shared.message ?? null);\n\n    return this;\n  }\n}\n\nexport class ActionUseAttack {\n  /** @type {string|null} */\n  type;\n\n  /** @type {string} */\n  label;\n\n  /** @type {string} */\n  attackBonus;\n\n  /** @type {boolean} */\n  abstract;\n\n  /** @type {AttackAmmo|null} */\n  ammo = null;\n\n  /** @type {number} */\n  chargeCost = null;\n\n  /** @type {ChatAttack} */\n  chatAttack = null;\n\n  /** @type {boolean} */\n  get hasAmmo() {\n    return !!this.ammo;\n  }\n\n  constructor(label, bonus = \"\", ammo = null, { abstract = false, type = null } = {}) {\n    this.label = label;\n    this.attackBonus = bonus;\n    this.ammo = ammo;\n    this.abstract = abstract ?? false;\n    this.type = type;\n  }\n}\n\n/**\n * @typedef {object} ItemAttack_Dialog_Result\n * @property {boolean} fullAttack - Whether it's a full attack (true) or a single attack (false)\n * @property {JQuery} html - The html containing user input and selections.\n */\n\n/**\n * @typedef {object} AttackAmmo\n * @property {string} id - Ammo item ID\n * @property {number} quantity - Quantity of ammo\n * @property {boolean} abundant - Is abundant?\n * @property {object} data - Ammo document data\n * @property {Item} document - Ammo document\n * @property {boolean} isDefault - Is this default ammo for the item?\n */\n","import { ActionUse, ActionUseAttack } from \"../action-use/action-use.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class AttackDialog extends Application {\n  /**\n   * @param {pf1.actionUse.ActionUse} actionUse\n   * @param {object} appOptions\n   */\n  constructor(actionUse, appOptions = {}) {\n    super(appOptions);\n\n    this.actionUse = actionUse;\n    this.object = actionUse.action;\n\n    const action = actionUse.action;\n    const item = actionUse.item;\n    const shared = actionUse.shared;\n    this.shared = shared;\n    this.attacks = this.shared.attacks;\n\n    if (item.actor) item.actor.apps[this.appId] = this;\n\n    this.useOptions = shared.useOptions ?? {};\n\n    this.rollData = shared.rollData;\n\n    this.initAmmoUsage();\n    this.initAttacks();\n\n    this.base = {\n      cl: this.rollData.cl ?? 0,\n      sl: this.rollData.sl ?? 0,\n    };\n\n    const isNaturalAttack = action.item.subType === \"natural\",\n      isPrimaryAttack = isNaturalAttack ? action.naturalAttack.primary !== false : true;\n\n    const useOptions = this.useOptions;\n\n    /** @type {Record<string,boolean>} */\n    this.flags = {\n      \"power-attack\": useOptions.powerAttack ?? false,\n      \"primary-attack\": useOptions.primaryAttack ?? isPrimaryAttack,\n      \"cl-check\": useOptions.clCheck ?? item?.system.clCheck === true,\n      \"measure-template\": useOptions.measureTemplate ?? true,\n      \"haste-attack\": useOptions.haste ?? false,\n      manyshot: useOptions.manyshot ?? false,\n      \"rapid-shot\": useOptions.rapidShot ?? false,\n      \"point-blank-shot\": useOptions.pointBlankShot ?? false,\n      flanking: useOptions.flanking ?? false,\n      highGround: useOptions.highGround ?? false,\n      charge: useOptions.charge ?? false,\n    };\n\n    let damageMult = this.damageMult;\n    if (useOptions.abilityMult != null) damageMult = useOptions.abilityMult;\n\n    /** @type {Record<string, string>} */\n    this.attributes = {\n      d20: this.rollData.d20 ?? \"\",\n      \"attack-bonus\": \"\",\n      \"damage-bonus\": \"\",\n      \"cl-offset\": \"0\",\n      \"sl-offset\": \"0\",\n      rollMode: shared.rollMode || game.settings.get(\"core\", \"rollMode\"),\n      \"damage-ability-multiplier\": damageMult,\n      held: useOptions.held || this.rollData.action?.held || this.rollData.item?.held || \"1h\",\n    };\n\n    this.conditionals = {};\n    for (const conditional of action.conditionals) {\n      this.conditionals[`conditionals.${conditional.id}`] = {\n        enabled: conditional.default === true,\n        conditional,\n      };\n    }\n\n    if (useOptions.haste) this._toggleExtraAttack(\"haste-attack\", true);\n    if (useOptions.manyshot) this._toggleExtraAttack(\"manyshot\", true);\n    if (useOptions.rapidShot) this._toggleExtraAttack(\"rapid-shot\", true);\n\n    // Callback for AttackDialog.show()\n    this.resolve = null;\n  }\n\n  /** @type {number|null} */\n  get damageMult() {\n    const rollData = this.rollData;\n\n    let damageMult = rollData.action?.ability?.damageMult;\n\n    const isNatural = this.item?.subType === \"natural\";\n    if (isNatural) {\n      damageMult ??= 1;\n      const isPrimaryAttack = this.flags[\"primary-attack\"];\n      if (!isPrimaryAttack) {\n        damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      }\n    }\n\n    return damageMult;\n  }\n\n  /** @type {pf1.components.ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  /**  @type {ItemPF|undefined} */\n  get item() {\n    return this.action.item;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item?.actor;\n  }\n\n  get title() {\n    const action = this.action,\n      item = action.item,\n      actor = action.actor;\n\n    if (actor) return `${action.name} (${item.name}) – ${actor.name}`;\n    return `${action.name} (${item.name})`;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n      classes: [\"pf1\", \"attack-dialog\"],\n      width: 440,\n      height: \"auto\",\n      closeOnSubmit: true,\n      sheetConfig: false,\n      submitOnChange: false,\n      submitOnClose: false,\n    };\n  }\n\n  getData() {\n    const action = this.action,\n      item = action.item;\n\n    const rollData = this.rollData;\n\n    // Sync available ammo\n    if (this.action.ammo.type) {\n      const allAmmo = this.actionUse.getAmmo();\n      // Add ammo that did not exist\n      for (const ammo of allAmmo) {\n        ammo.used = 0;\n        this.ammoUsage[ammo.id] ??= ammo;\n      }\n      // Remove now no longer existing ammo\n      const validAmmoChoices = new Set(allAmmo.map((ammo) => ammo.id));\n      for (const ammoId of Object.keys(this.ammoUsage)) {\n        if (validAmmoChoices.has(ammoId)) continue;\n\n        for (let i = 0; i < this.attacks.length; i++) {\n          const atk = this.attacks[i];\n          if (atk.ammo?.id === ammoId) this.setAttackAmmo(i);\n        }\n\n        delete this.ammoUsage[ammoId];\n      }\n    }\n\n    const context = {\n      data: rollData,\n      item,\n      action,\n      config: pf1.config,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n      hasAttack: action.hasAttack,\n      hasDamage: action.hasDamage,\n      hasDamageAbility: !!action.ability?.damage,\n      isNaturalAttack: item.system.subType === \"natural\",\n      isWeaponAttack: item.system.subType === \"weapon\",\n      isRanged: action.isRanged,\n      isThrown: this.action.actionType == \"twak\",\n      isMelee: !action.isRanged,\n      isMeleeWeaponAttackAction: action.actionType === \"mwak\",\n      isRangedWeaponAttackAction: action.isRanged && !action.isCombatManeuver,\n      isAttack: item.type === \"attack\",\n      isWeapon: item.type === \"weapon\",\n      isSpell: item.type === \"spell\",\n      isFeat: item.type === \"feat\",\n      isHealing: action.isHealing,\n      hasTemplate: action.hasTemplate,\n      attacks: this.attacks,\n      flags: this.flags,\n      attributes: this.attributes,\n      conditionals: this.conditionals,\n      usesAmmo: !!this.action.ammo.type,\n      ammo: this.ammoUsage,\n    };\n\n    context.isPureRanged = context.isRanged && !context.isThrown;\n\n    // Configure held related data\n    const canHold = !context.isPureRanged && (context.isAttack || context.isWeapon) && !context.isNaturalAttack;\n\n    // Determine if power attack mode should be displayed\n    const canConfigureHeld = context.flags[\"power-attack\"] && canHold;\n\n    const held = this.attributes.held || rollData.action.held || rollData.item.held || \"1h\";\n\n    context.held = {\n      inheritable: canHold,\n      configurable: canConfigureHeld,\n      mult: pf1.config.abilityDamageHeldMultipliers[held] ?? 1,\n    };\n\n    return context;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Form changing\n    html.find(`.flags input[type=\"checkbox\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input.attribute`).on(\"change\", this._onChangeAttribute.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"concentration\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"cl-check\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"measure-template\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`select`).on(\"change\", this._onSelectChange.bind(this));\n    html.find(`.conditionals input[type=\"checkbox\"]`).on(\"change\", this._onToggleConditional.bind(this));\n\n    // Dropdown menu\n    html.find(\".ammo-select\").on(\"click\", this._onAmmoSelectClick.bind(this));\n    html.find(\".ammo-select .ammo-item .controls a\").on(\"click\", this._onAmmoControlClick.bind(this));\n    html.find(\".ammo-select .ammo-item\").on(\"click\", this._onAmmoClick.bind(this));\n    html.on(\"click\", this._unfocusElements.bind(this));\n\n    // Button hover\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerenter\", this._hideExtraAttacks.bind(this));\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerleave\", this._showExtraAttacks.bind(this));\n\n    // Button press\n    html.find(`button[name=\"attack_single\"]`).on(\"click\", (ev) => this.resolveAttack(ev, false));\n    html.find(`button[name=\"attack_full\"]`).on(\"click\", (ev) => this.resolveAttack(ev, true));\n  }\n\n  _onSelectChange(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.options[elem.selectedIndex].value;\n    this.render();\n  }\n\n  _hideExtraAttacks(event) {\n    const elems = this.element.find(\".attacks .attack\").filter((index, elem) => parseInt(elem.dataset.index) > 0);\n    elems.addClass(\"disabled\");\n  }\n\n  _showExtraAttacks(event) {\n    this.element.find(\".attacks .attack\").removeClass(\"disabled\");\n  }\n\n  /**\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.render=true] - Call render\n   * @param {Event} event\n   */\n  _onToggleFlag(event) {\n    if (event?.cancelable) event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.flags[elem.name] = elem.checked === true;\n\n    // Add or remove haste, rapid-shot or manyshot attack\n    switch (elem.name) {\n      case \"haste-attack\":\n      case \"rapid-shot\":\n      case \"manyshot\": {\n        this._toggleExtraAttack(elem.name, elem.checked);\n        break;\n      }\n      case \"primary-attack\":\n        // Update damage mult to match primary/secondary default\n        this.attributes[\"damage-ability-multiplier\"] = this.damageMult;\n        break;\n    }\n\n    this.render();\n  }\n\n  _toggleExtraAttack(type, enabled = true) {\n    if (enabled) {\n      const translationString = {\n        \"haste-attack\": \"PF1.Haste\",\n        \"rapid-shot\": \"PF1.RapidShot\",\n        manyshot: \"PF1.Manyshot\",\n      };\n\n      const types = new Set(Object.keys(translationString));\n\n      // Correlate manyshot with the first attack, add place the others after\n      // Final order should always result in manyshot -> rapishot -> haste with this setup\n      let place = 1;\n      switch (type) {\n        case \"rapid-shot\":\n          types.delete(\"haste-attack\"); // Rapid shot can be in front of haste\n        // eslint-disable-next-line no-fallthrough\n        case \"haste-attack\":\n          // Push place backwards with haste and rapidshot if other choices are present\n          while (types.has(this.attacks[place]?.type)) place++;\n          break;\n      }\n\n      const attack = new ActionUseAttack(game.i18n.localize(translationString[type]), \"\", null, {\n        abstract: true,\n        type,\n      });\n      attack.attackBonusTotal = 0;\n      this.attacks.splice(place, 0, attack);\n      this.setAttackAmmo(place, this.action.item.system.ammo?.default);\n    } else {\n      this.attacks.findSplice((o) => o.type === type);\n    }\n  }\n\n  _onToggleConditional(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.conditionals[elem.name].enabled = elem.checked === true;\n    this.render();\n  }\n\n  _onAmmoSelectClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const listElem = elem.querySelector(\"ul\");\n\n    // Filter to NOT act when clicking on the list child element\n    if (!event.target.closest(\"ul\")) {\n      // Set classes for CSS\n      listElem.classList.toggle(\"open\");\n      const isOpen = listElem.classList.contains(\"open\");\n      if (isOpen) elem.classList.add(\"focus\");\n      else elem.classList.remove(\"focus\");\n    }\n  }\n\n  _onAmmoClick(event) {\n    const elem = event.target;\n    // Don't do anything if this click was actually on its controls\n    if (elem.closest(\".controls\") && !elem.classList.contains(\"controls\")) return;\n\n    event.preventDefault();\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    const attackIndex = parseInt(elem.closest(\".attack\").dataset.index);\n\n    // Set ammo\n    this.setAttackAmmo(attackIndex, ammoId === \"null\" ? null : ammoId);\n    this.render();\n  }\n\n  async _onAmmoControlClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    switch (elem.dataset.type) {\n      case \"set-default\":\n        if (ammoId === \"null\") await this.action.item.update({ \"system.ammo.-=default\": null });\n        else await this.action.item.update({ \"system.ammo.default\": ammoId });\n\n        // Apply CSS class, since we can't do a render in here and keep the dropdown menu open\n        elem\n          .closest(\"ul\")\n          .querySelectorAll(\".ammo-item\")\n          .forEach((o) => o.classList.remove(\"default\"));\n        if (ammoId !== \"null\") elem.closest(\".ammo-item\").classList.add(\"default\");\n        break;\n      case \"set-all\":\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n        this.render();\n    }\n  }\n\n  _unfocusElements(event) {\n    // Close ammo select\n    if (this.element[0].querySelector(\".ammo-select\") != null && !event.target.closest(\".ammo-select\")) {\n      const elem = this.element[0].querySelector(\".ammo-select\");\n      elem.classList.remove(\"focus\");\n      elem.querySelector(\"ul\").classList.remove(\"open\");\n    }\n  }\n\n  _onChangeAttribute(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.value;\n\n    // Also change roll data, if appropriate\n    switch (elem.name) {\n      case \"cl-offset\":\n        this.rollData.cl = this.base.cl + parseInt(elem.value);\n        break;\n      case \"sl-offset\":\n        this.rollData.sl = this.base.sl + parseInt(elem.value);\n        break;\n      case \"damage-ability-multiplier\":\n        foundry.utils.setProperty(this.rollData, \"action.ability.damageMult\", elem.value);\n        break;\n      case \"held\":\n        foundry.utils.setProperty(this.rollData, \"action.held\", elem.value);\n        break;\n    }\n\n    this.render();\n  }\n\n  initAttacks() {\n    for (const atk of this.attacks) {\n      atk.attackBonusTotal =\n        RollPF.safeRollSync(atk.attackBonus, this.rollData, undefined, undefined, { minimize: true }).total ?? 0;\n    }\n\n    // Set ammo usage; this resets the attack ammo association\n    if (this.action.ammo.type) {\n      const defaultAmmoId = this.action.item.system.ammo?.default;\n      for (let a = 0; a < this.attacks.length; a++) {\n        const ammoId = a.ammo?.id ?? defaultAmmoId;\n        this.setAttackAmmo(a, ammoId);\n      }\n    }\n  }\n\n  // Initializes ammo usage, which helps avoid being able to overuse ammo\n  initAmmoUsage() {\n    // Init usage record\n    /** @type {Record<string,AttackAmmoUsage>} */\n    this.ammoUsage = this.actionUse.getAmmo().reduce((cur, ammoData) => {\n      ammoData.used = 0;\n      cur[ammoData.id] = ammoData;\n\n      return cur;\n    }, {});\n\n    const ammoCost = this.action.ammo.cost ?? 1;\n\n    // Init actual usage\n    for (const atk of this.attacks) {\n      if (atk.ammo) {\n        const ammoUsage = this.ammoUsage[atk.ammo.id];\n        if (ammoUsage.abundant) continue;\n        ammoUsage.used += ammoCost;\n      }\n    }\n  }\n\n  setAttackAmmo(attackIndex, ammoId = null) {\n    if (!this.action.ammo.type) return;\n\n    // Check if ammo exists\n    if (!this.ammoUsage[ammoId]) ammoId = null;\n\n    const ammoCost = this.action.ammo.cost ?? 1;\n\n    const atk = this.attacks[attackIndex];\n\n    const oldAbundant = this.action.actor?.items.get(atk.ammo?.id)?.system.abundant ?? false;\n    const abundant = this.action.actor?.items.get(ammoId)?.system.abundant ?? false;\n\n    // Remove old ammo usage\n    if (!oldAbundant && atk.ammo) this.ammoUsage[atk.ammo.id].used -= ammoCost;\n\n    // Don't allow overuse\n    if (ammoId && !abundant) {\n      const newUsage = this.ammoUsage[ammoId].used + ammoCost;\n      // TODO: Print warning about not enough ammo\n      if (newUsage > this.ammoUsage[ammoId].quantity) ammoId = null;\n    }\n\n    /// Set or clear selected ammo\n    atk.ammo = this.actionUse.getAmmo().find((o) => o.id === ammoId) ?? null;\n    if (!atk.ammo) return;\n\n    // Add to ammo usage tracker\n    if (!abundant) this.ammoUsage[ammoId].used += ammoCost;\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   * @param {boolean} fullAttack\n   */\n  resolveAttack(event, fullAttack = true) {\n    event.preventDefault();\n\n    const form = new FormDataExtended(this.element.find(\"form\")[0]).object;\n    form.fullAttack = fullAttack;\n\n    this.resolve(form);\n    this.close();\n  }\n\n  async close(options = {}) {\n    delete this.item?.actor?.apps[this.appId];\n\n    this.resolve(null);\n    return super.close(options);\n  }\n\n  /**\n   * @returns {Promise<object|null>} - Attack configuration object or null if rejected\n   */\n  show() {\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.render(true);\n    });\n  }\n}\n\n/** @typedef {import(\"../action-use/action-use.mjs\").AttackAmmo} AttackAmmo */\n\n/**\n * @typedef {object} AttackAmmoUsageData\n * @property {number} used - How much of this has been used\n */\n\n// Combine the above, can't have it all in single statement\n/**\n * @typedef {AttackAmmo & AttackAmmoUsageData} AttackAmmoUsage\n */\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Changelog Dialog\n */\nexport class ChangeLogWindow extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"changelog\",\n    tag: \"form\",\n    form: {\n      handler: ChangeLogWindow._updateObject,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"changelog\"],\n    window: {\n      icon: \"fa-solid fa-receipt\",\n      minimizable: true,\n      resizable: true,\n    },\n    position: {\n      width: 500,\n      height: 680,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/changelog.hbs\",\n    },\n  };\n\n  _cache;\n\n  /**\n   * @param {boolean} lastVersion - Display only latest version, legacy versions are to be omitted.\n   * @param {boolean} autoDisplay - Is the dialog being shown without prompting?\n   */\n  constructor(lastVersion = false, autoDisplay = false) {\n    super({}, {});\n\n    this.lastVersion = lastVersion;\n    this.autoDisplay = autoDisplay;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @override\n   * @returns {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Title\")} ~ ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _prepareContext() {\n    const context = {};\n\n    context.dontShowAgain = game.settings.get(\"pf1\", \"dontShowChangelog\");\n    context.autoDisplay = this.autoDisplay;\n    context.lastVersion = this.lastVersion;\n\n    if (!this._cache) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"systems/pf1/CHANGELOG.md\");\n\n      const promise = new Promise((resolve) => {\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            this._cache = this._processChangelog(xhr.response);\n          } else {\n            context.error = {\n              number: xhr.status,\n              message: xhr.statusText,\n              url: xhr.responseURL,\n            };\n          }\n          resolve();\n        };\n      });\n      xhr.send(null);\n\n      await promise;\n    }\n\n    context.changelog = this._cache;\n    context.link = game.system.changelog;\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {string} md\n   * @returns {string}\n   */\n  _processChangelog(md) {\n    const converter = new showdown.Converter();\n\n    const latestVersion = pf1.utils.SemanticVersion.fromString(game.system.version);\n    const latestMajor = latestVersion.major;\n    const latest = [];\n    const major = [];\n    const majorPatches = [];\n    const legacy = [];\n\n    let currentVersion = null;\n\n    const lines = md.split(/[\\n\\r]+/);\n\n    for (const line of lines) {\n      if (/^#\\s/.test(line)) continue; // Ignore H1\n\n      if (line.match(/##\\s+([0-9]+\\.[0-9]+(\\.[0-9]+)?)/)) {\n        currentVersion = pf1.utils.SemanticVersion.fromString(RegExp.$1);\n        if (currentVersion.major === latestMajor) {\n          majorPatches.push(currentVersion);\n        }\n      }\n\n      // Skip lines not associated with any version\n      if (!currentVersion) continue;\n      // Split other lines to appropriate pools\n      if (currentVersion.isSame(latestVersion)) latest.push(line);\n      else if (currentVersion.major === latestMajor) major.push(line);\n      else if (!this.lastVersion) legacy.push(line);\n    }\n\n    return {\n      version: latestVersion,\n      latest: {\n        content: converter.makeHtml(latest.join(\"\\n\")),\n      },\n      major: {\n        patches: majorPatches,\n        content: major.length ? converter.makeHtml(major.join(\"\\n\")) : null,\n      },\n      legacy: {\n        content: legacy.length ? converter.makeHtml(legacy.join(\"\\n\")) : null,\n      },\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Cancel distribution and close dialog\n   *\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @internal\n   * @this {ChangeLogWindow}\n   * @returns {Promise<void>}\n   */\n  static async _updateObject(event, form, formData) {\n    formData = formData.object;\n    if (formData.dontShowAgain != null) {\n      await game.settings.set(\"pf1\", \"dontShowChangelog\", formData.dontShowAgain);\n    }\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class DamageTypeSelector extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._updateObject,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"damage-type-selector\", \"standard-form\"],\n    window: {\n      title: \"PF1.DamageType\",\n      minimizable: true,\n      resizable: false,\n    },\n    position: {\n      width: 720,\n    },\n    actions: {\n      toggleDamageType: this._toggleDamageType,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/damage-type-selector.hbs\",\n      scrollable: [\".damage-type-categories\", \".damage-modifiers\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * @param {object} object - Parent object\n   * @param {string} path - Path to damage data in object\n   * @param {Set<string>} data - Damage types\n   * @param {object} options - Options\n   * @param {Function} options.updateCallback - Update callback\n   */\n  constructor(object, path, data = new Set(), options = {}) {\n    options.object = object;\n    options.path = path;\n    super(options);\n\n    // Prepare types\n    const customTypes = new Set();\n    const allTypes = data ? [...data] : [];\n    const standardTypes = new Set();\n\n    for (const type of allTypes) {\n      if (!type) continue;\n\n      const d = pf1.registry.damageTypes.get(type);\n      if (d) standardTypes.add(type);\n      else customTypes.add(type);\n    }\n\n    this.types = standardTypes;\n    this.customTypes = customTypes;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.id = `DamageTypeSelector-${options.object.uuid.replaceAll(\".\", \"-\")}-${options.path.replaceAll(\".\", \"_\")}`;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  get categoryOrder() {\n    return [\"physical\", \"energy\", \"misc\"];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const types = pf1.registry.damageTypes\n      .filter((damageType) => !damageType.isModifier)\n      .map((dt) => ({ ...dt, id: dt.id, enabled: this.types.has(dt.id) }));\n\n    const sortOrder = this.categoryOrder;\n\n    return {\n      types: this.types,\n      customTypes: [...this.customTypes].join(\";\"), // HACK\n      modifiers: pf1.registry.damageTypes\n        .filter((o) => o.isModifier)\n        .map((dm) => ({ ...dm, id: dm.id, enabled: this.types.has(dm.id) })),\n      // Damage type categories\n      categories: types\n        .reduce((cur, o) => {\n          let categoryObj = cur.find((o2) => o2.key === o.category);\n          if (!categoryObj) {\n            categoryObj = { key: o.category, label: `PF1.DamageTypeCategory.${o.category}`, types: [] };\n            cur.push(categoryObj);\n          }\n          categoryObj.types.push(o);\n          return cur;\n        }, [])\n        .sort((a, b) => {\n          const idxA = sortOrder.indexOf(a.key);\n          const idxB = sortOrder.indexOf(b.key);\n          if (idxA === -1 && idxB >= 0) return 1;\n          if (idxB === -1 && idxA >= 0) return -1;\n          if (idxA > idxB) return 1;\n          if (idxA < idxB) return -1;\n          return 0;\n        }),\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {DamageTypeSelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    // Only handle custom types here\n    if (elem.name !== \"custom\") return;\n\n    const types = elem.value\n      .split(\";\")\n      .map((t) => t.trim())\n      .filter((t) => !!t);\n\n    this.customTypes = new Set(types);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  static _toggleDamageType(event) {\n    event.preventDefault();\n    const a = event.target.closest(\"[data-action]\");\n    const dt = a.dataset.id;\n\n    if (this.types.has(dt)) this.types.delete(dt);\n    else this.types.add(dt);\n\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  static async _updateObject(event, formData) {\n    const allTypes = [...this.types.union(this.customTypes)];\n    return this.options.updateCallback(allTypes);\n  }\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An abstract class for a document selector application.\n *\n * @abstract\n */\nexport class AbstractDocumentSelector extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * The currently selected document ID\n   */\n  selected;\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"document-selector\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.DocumentSelector.Title\",\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 350,\n    },\n    sheetConfig: false,\n    search: {\n      delay: 250,\n      value: \"\",\n      event: null,\n      compositioning: false,\n      effectiveSearch: \"\",\n    },\n    empty: \"\",\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/document-selector.hbs\",\n      scrollable: [\".document-section-wrapper\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    if (options?.title) {\n      foundry.utils.logCompatibilityWarning(\"AbstractDocumentSelector options title property is deprecated\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      options.window ??= {};\n      options.window.title = options.title;\n      delete options.title;\n    }\n\n    super(options);\n    this.selected = this.options.selected || \"\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _prepareContext() {\n    const sections = await this._getSections();\n\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n\n      if (!section.documents.length) {\n        sections.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (!this.options.empty) {\n        this.selected ||= section.documents[0]?.id;\n      }\n    }\n\n    return {\n      document: this.document,\n      selected: this.selected,\n      searchTerm: this.options.search.value,\n      showSectionHeaders: sections.length > 1,\n      sections,\n      empty: {\n        include: this.options.empty,\n        document: {\n          id: \"\",\n          name: game.i18n.localize(\"PF1.Application.DocumentSelector.None\"),\n          img: \"icons/svg/cancel.svg\",\n        },\n      },\n      buttons: [{ type: \"submit\", label: \"PF1.Select\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const searchInput = this.element.querySelector(\"input[type='search']\");\n    searchInput.addEventListener(\"input\", this._onSearch.bind(this));\n    searchInput.addEventListener(\"change\", this._onSearch.bind(this));\n    searchInput.addEventListener(\"compositionstart\", this._onSearchComposition.bind(this));\n    searchInput.addEventListener(\"compositionend\", this._onSearchComposition.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const target = event.target;\n    if (target.matches(\"input[type='radio']\")) {\n      this.element.querySelector(\"li.selected\")?.classList.remove(\"selected\");\n      this.selected = target.value;\n      target.closest(\"li\").classList.add(\"selected\");\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle the beginning of a search composition event\n   *\n   * @param event\n   * @private\n   */\n  _onSearchComposition(event) {\n    this.options.search.compositioning = event.type === \"compositionstart\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle search input events\n   *\n   * @param event\n   * @private\n   */\n  _onSearch(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const searchTerm = event.target.value;\n    const changed = this.options.search.value !== searchTerm;\n\n    if (this.options.search.compositioning || changed) clearTimeout(this.options.search.event); // reset\n    if (this.options.search.compositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this.options.search.value = searchTerm;\n\n    if (event.type === \"input\") {\n      // Delay search\n      if (changed)\n        this.options.search.event = setTimeout(() => this._searchFilterCommit(event), this.options.search.delay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Kick off search\n   *\n   * @private\n   */\n  _searchFilterCommit() {\n    const searchTerm = this.options.search.value.toLowerCase();\n\n    // Skip if the search term is the same as the last one\n    if (this.options.search.effectiveSearch === searchTerm) return;\n    this.options.search.effectiveSearch = searchTerm;\n    this.render(true);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of sections to show in the selector. Categories are supposed\n   * to have their permissions correctly applied and display error messages, if they\n   * are not accessible.\n   *\n   * @abstract\n   * @private\n   * @returns {Promise<DocumentSelectorSection[]>}\n   */\n  async _getSections() {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Submit the form selection and resolve the stored promise, if provided\n   *\n   * @private\n   */\n  static _onSubmit() {\n    this._resolveResult();\n\n    this.close();\n  }\n\n  /**\n   * Handle promise resolution.\n   *\n   * @abstract\n   * @protected\n   */\n  _resolveResult() {\n    this.resolve?.(this.selected || null);\n  }\n\n  _onClose(options) {\n    super._onClose(options);\n\n    // Ensure promise is resolved.\n    this.resolve?.(null);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Render selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @returns {Promise<string|null>} - Document ID or null if cancelled.\n   */\n  static wait(options) {\n    return new Promise((resolve) => {\n      const app = new this(options);\n      app.resolve = resolve;\n      app.render({ force: true });\n    });\n  }\n}\n\n/**\n * @typedef {object} DocumentSelectorDocumentExtra\n * @property {string} [label] - The label of the property\n * @property {string} value - The value of the property\n */\n\n/**\n * @typedef {object} DocumentSelectorDocument\n * @property {string} id - The document ID\n * @property {string} name - The document name\n * @property {string} img - The document image\n * @property {boolean} isOwner - Is the current user the owner of the document\n * @property {DocumentSelectorDocumentExtra[]} extras - Additional document properties\n */\n\n/**\n * @typedef {object} DocumentSelectorSection\n * @property {string} id - The section ID\n * @property {string} label - The section label\n * @property {DocumentSelectorDocument[]} documents - The documents in the section\n */\n","import { AbstractDocumentSelector } from \"@app/abstract-document-selector.mjs\";\n\n/**\n * A specialized form application for selecting an Item from a list of available choices\n */\nexport class ItemSelector extends AbstractDocumentSelector {\n  static DEFAULT_OPTIONS = {\n    actor: undefined,\n    items: undefined,\n    filterFunc: undefined,\n    selected: null,\n    window: {\n      title: \"PF1.Application.ItemSelector.Title\",\n    },\n    empty: true,\n  };\n\n  /* -------------------------------------------- */\n\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.items ||= options.actor?.items || [];\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  async _getSections() {\n    let itemList = this.options.filterFunc\n      ? this.options.items.filter(this.options.filterFunc)\n      : [...this.options.items];\n\n    if (this.options.search.value) {\n      itemList = itemList.filter((item) => item.name.toLowerCase().includes(this.options.search.value.toLowerCase()));\n    }\n\n    itemList.sort((a, b) => a.name.localeCompare(b.name));\n\n    itemList = itemList.map((item) => {\n      return {\n        id: item.id,\n        name: item.name,\n        img: item.img,\n        isOwner: item.actor?.isOwner || false,\n        extras: [\n          {\n            label: \"PF1.Application.ItemSelector.Quantity\",\n            value: item.system.quantity,\n          },\n        ],\n      };\n    });\n\n    return [\n      {\n        id: \"items\",\n        label: \"PF1.Application.ItemSelector.Items\",\n        documents: itemList,\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _resolveResult() {\n    let result = this.selected;\n\n    if (this.selected && this.options.document) {\n      result = this.options.items.find((i) => i.id === result);\n    }\n\n    this.resolve?.(result || null);\n  }\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application for displaying system documentation.\n */\nexport class HelpBrowserPF extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"pf1-help-browser\",\n    classes: [\"pf1-v2\", \"help-browser\"],\n    window: {\n      title: \"PF1.Help.Label\",\n      icon: \"fa-solid fa-book\",\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 620,\n      height: 600,\n    },\n    actions: {\n      forward: HelpBrowserPF._forwardInHistory,\n      back: HelpBrowserPF._backInHistory,\n      home: HelpBrowserPF._home,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/help-browser.hbs\",\n    },\n  };\n\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _backwardHistory = [];\n\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _forwardHistory = [];\n\n  /**\n   * The currently shown entry.\n   *\n   * @type {HistoryEntry}\n   * @private\n   */\n  _currentPage = { url: \"Help/Home\" };\n\n  /**\n   * The Markdown converter for this application.\n   *\n   * @type {showdown.Converter}\n   * @private\n   */\n  #converter;\n\n  /** @inheritdoc */\n  constructor(options = {}) {\n    super(options);\n\n    this.#converter = new showdown.Converter({\n      extensions: [HelpBrowserPF.defaultExtensions],\n      noHeaderId: false,\n      ghCompatibleHeaderId: true,\n      prefixHeaderId: \"pf1-help-browser-\",\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The URL of the page currently displayed\n   *\n   * @type {string}\n   */\n  get currentUrl() {\n    return this._currentPage.url;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      hasHistoryBack: this._backwardHistory.length > 0,\n      hasHistoryForward: this._forwardHistory.length > 0,\n      // Get markdown string from localization, and parse it\n      pageContent: this.#converter.makeHtml(game.i18n.localize(`PF1.${this.currentUrl}`)),\n      url: this.currentUrl.slugify({ strict: true }),\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Opens a specific page in the help browser.\n   *\n   * @param {string} url - The help URL to open\n   */\n  openUrl(url) {\n    // Remove leading `/`, which are okay in the wiki, but not present in localization files\n    if (url.startsWith(\"/\")) url = url.slice(1);\n    let header;\n    // Extract header from URL\n    [url, header] = url.split(\"#\");\n    if (this.currentUrl && url !== this.currentUrl) {\n      // Add new page to history\n      this._backwardHistory.push(this.getCurrentHistoryObject());\n      this._forwardHistory.splice(0, this._forwardHistory.length);\n    }\n    this._currentPage = { url };\n    this.render({ header, force: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    await super._render(force, options);\n    const contentElement = this.element.querySelector(\".content\");\n\n    if (this._currentPage.scrollTop) {\n      // Dirty timeout to wait for loading of images with unknown height\n      setTimeout(() => {\n        contentElement.scrollTop = this._currentPage.scrollTop;\n      }, 0);\n    } else if (options.header) {\n      const headerElement = document.getElementById(`pf1-help-browser-${options.header}`);\n      if (headerElement) {\n        setTimeout(() => {\n          headerElement.scrollIntoView({ block: \"start\" });\n        }, 0);\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Returns a {@link HistoryEntry} containing a snapshot of the currently rendered state.\n   *\n   * @returns {HistoryEntry} The current state\n   */\n  getCurrentHistoryObject() {\n    const elem = this.element?.querySelector(\".content\");\n    const scrollTop = elem?.scrollTop ?? 0;\n    return {\n      url: this.currentUrl,\n      scrollTop,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /** Go back one page in history. */\n  static _backInHistory() {\n    if (!this._backwardHistory.length) return;\n    this._forwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._backwardHistory.pop();\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /** Go forward one page in history. */\n  static _forwardInHistory() {\n    if (!this._forwardHistory.length) return;\n    this._backwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._forwardHistory.pop();\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  static _home() {\n    this.openUrl(\"Help/Home\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Remove href attributes to avoid actual browser page changes\n    const links = this.element.querySelectorAll(\"a[href]\");\n    for (const l of links) {\n      const href = l.getAttribute(\"href\");\n      if (!href.startsWith(\"Help\")) {\n        l.addEventListener(\"contextmenu\", (event) => {\n          event.stopImmediatePropagation();\n        });\n        continue;\n      }\n      l.removeAttribute(\"href\");\n      // Store target in dataset\n      l.dataset.url = href;\n\n      l.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        this.openUrl(href);\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Extensions for the Markdown converter used by the help browser.\n   *\n   * @type {showdown.ShowdownExtension[]}\n   */\n  static get defaultExtensions() {\n    return [\n      // Replace image paths from the wiki with localized paths available in the current Foundry context\n      {\n        type: \"output\",\n        regex: /<img.*?src=\"(.+?)\".*?>/g,\n        replace: function (match, src, _offset, _string) {\n          const foundrySrc = game.i18n.localize(`PF1.${src.startsWith(\"/\") ? src.slice(1) : src}`);\n          return match.replace(src, foundry.utils.getRoute(`systems/pf1/${foundrySrc}`));\n        },\n      },\n    ];\n  }\n}\n\n/**\n * The singleton instance of the {@link HelpBrowserPF} available at runtime.\n */\nexport const helpBrowser = new HelpBrowserPF();\n\n/**\n * @typedef {object} HistoryEntry\n * @property {string} url - URL of this history entry\n * @property {number} [scrollTop] - Scroll position of this history entry\n */\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ScriptEditor extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ScriptEditor._updateObject,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"script-editor\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 640,\n      height: 560,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/script-editor.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options = {}) {\n    super(options);\n\n    this.command = options.command || \"\";\n    this.name = options.name || null;\n\n    this.parent = options.parent;\n    this.script = options.script;\n\n    this._promises = {\n      submit: [],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the window title\n   *\n   * @returns {string}\n   */\n  get title() {\n    return this.name\n      ? this.parent\n        ? `${this.parent.name}: ${this.name}`\n        : this.name\n      : (this.parent?.name ?? game.i18n.localize(\"PF1.Unknown\"));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {string}\n   */\n  get id() {\n    return `script-call-${this.parent.uuid.replaceAll(\".\", \"-\")}-id-${this.script}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isEditable() {\n    const item = this.parent;\n    let editable = this.options.editable && item.isOwner;\n    if (item.pack && game.packs.get(item.pack)?.locked) editable = false;\n    return editable;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      command: this.command || \"\",\n      name: this.name,\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {Promise<unknown>}\n   */\n  awaitResult() {\n    let callback;\n    const promise = new Promise((resolve) => {\n      callback = resolve;\n    });\n    this._promises.submit.push({ callback, promise, resolved: false });\n    return promise;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Open help browser\n    this.element.querySelector(\"a.help-browser[data-url]\").addEventListener(\"click\", this._openHelpBrowser.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Open the help browser to the specified URL.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the object with the new change data from the form.\n   *\n   * @this {ScriptEditor}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   * @private\n   */\n  static _updateObject(event, form, formData) {\n    formData = formData.object;\n\n    this.command = formData[\"command\"];\n    this.name = formData[\"name\"] || null;\n\n    const result = {\n      command: this.command,\n      name: this.name,\n    };\n\n    this.resolvePromises(\"submit\", result);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve all promises of the given type with the given result.\n   *\n   * @param type\n   * @param result\n   */\n  resolvePromises(type, result) {\n    for (const p of this._promises[type]) {\n      if (!p.resolved) {\n        p.callback(result);\n        p.resolved = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Close the application and resolve any pending submit promises.\n   *\n   * @param args\n   * @returns {Promise<void>}\n   */\n  async close(...args) {\n    super.close(...args);\n\n    this.resolvePromises(\"submit\", null);\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that allows a user to configure an actors senses.\n *\n * @param {ActorPF} actor     The Actor instance for which to configure senses\n */\nexport class SensesSelector extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSave,\n      submitOnChange: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"senses-selector\", \"standard-form\"],\n    window: {\n      icon: \"fa-icon fa-eye\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 400,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/senses-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * Returns which keys to convert in distance or weight\n   */\n  static get convertKeys() {\n    return {\n      dv: \"distance\",\n      ts: \"distance\",\n      bse: \"distance\",\n      bs: \"distance\",\n      sc: \"distance\",\n      tr: \"distance\",\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        const actor = this.document;\n\n        const senses = actor.toObject().system.traits?.senses ?? {};\n        for (const [key, type] of Object.entries(this.constructor.convertKeys)) {\n          const value = senses[key];\n          if (type === \"distance\" && value.value > 0) {\n            senses[key].value = pf1.utils.convertDistance(value.value)[0];\n          }\n        }\n\n        const isMetric = pf1.utils.getDistanceSystem() !== \"imperial\";\n\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          actor: this.actor,\n          noSystemVision:\n            !game.settings.get(\"pf1\", \"systemVision\") ||\n            (actor.token?.getFlag(\"pf1\", \"customVisionRules\") ??\n              actor.prototypeToken?.getFlag(\"pf1\", \"customVisionRules\")) ||\n            false,\n          senses,\n          isMetric,\n          gridUnits: isMetric ? game.i18n.localize(\"PF1.Distance.mShort\") : game.i18n.localize(\"PF1.Distance.ftShort\"),\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {};\n        return {\n          buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n        };\n      }\n    }\n  }\n\n  /** @override  */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,button)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the vision configuration window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Senses\")}: ${this.document.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the new vision details for the actor.\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                The originating form submission event\n   * @param {HTMLFormElement} form             The form element that was submitted\n   * @param {FormDataExtended} formData        Processed data for the submitted form\n   * @param {object} formData.object           The parsed form data object\n   * @returns {Promise<void>}\n   */\n  static async _onSave(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n    const senses = formData.system.traits.senses;\n\n    // Convert data back\n    Object.entries(this.constructor.convertKeys).forEach(([key, type]) => {\n      const value = senses[key];\n      if (value.value > 0 && type === \"distance\") {\n        senses[key].value = pf1.utils.convertDistanceBack(value.value)[0];\n      }\n    });\n\n    // Delete undefined or disabled senses\n    // But only for linked actor since otherwise you can not override them to be disabled\n    if (!this.document.isToken) {\n      for (const [key, value] of Object.entries(senses)) {\n        if (!value) {\n          delete senses[key];\n          senses[`-=${key}`] = null;\n        }\n      }\n    }\n\n    this.document.update({ \"system.traits.senses\": senses });\n  }\n}\n","export class SkillEditor extends DocumentSheet {\n  constructor(actor, skillId, subSkillId, options = {}) {\n    super(actor, options);\n    this.skillId = skillId;\n    this.subSkillId = subSkillId;\n\n    this._callbacks = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 380,\n      template: \"systems/pf1/templates/apps/skill-editor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"*\" }],\n      classes: [...options.classes, \"pf1\", \"skill-editor\"],\n      sheetConfig: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    };\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.EditSkill\")}: ${this.skillName} – ${this.actor.name}`;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /** @type {boolean} */\n  get isSubSkill() {\n    return !!this.subSkillId;\n  }\n\n  /** @type {boolean} */\n  get isStaticSkill() {\n    return pf1.config.skills[this.skillId] != null && !this.isSubSkill;\n  }\n\n  /** @type {object} */\n  get skill() {\n    if (this.isSubSkill) return this.actor.system.skills[this.skillId]?.subSkills[this.subSkillId];\n    return this.actor.system.skills[this.skillId];\n  }\n\n  /** @type {string} */\n  get skillName() {\n    return this.isStaticSkill ? pf1.config.skills[this.skillId] : this.skill.name;\n  }\n\n  /** @type {string} */\n  get skillTag() {\n    if (this.isStaticSkill) return this.skillId;\n    return this.isSubSkill ? this.subSkillId : this.skillId;\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    // Configuration\n    data.config = pf1.config;\n\n    // Skill data\n    data.skill = foundry.utils.mergeObject(\n      this.skill,\n      {\n        skillId: this.skillId,\n        subSkillId: this.subSkillId,\n        isSubSkill: this.isSubSkill,\n        name: this.skillName,\n        static: this.isStaticSkill,\n        tag: this.skillTag,\n      },\n      { inplace: false }\n    );\n\n    // Actor data\n    data.actorData = this.actor.toObject();\n\n    // Referenced documents\n    try {\n      const document = await fromUuid(data.skill.journal);\n      data.journal = document.toObject();\n      data.journal.uuid = data.skill.journal;\n      data.journal.documentType = document instanceof JournalEntryPage ? \"JournalEntryPage\" : \"JournalEntry\";\n    } catch {\n      data.journal = null;\n    }\n\n    return data;\n  }\n\n  addCallback(fn) {\n    this._callbacks.push(fn);\n  }\n\n  async _updateObject(event, formData) {\n    event.preventDefault();\n\n    // Setup base update data\n    const updateData = { system: { skills: {} } };\n    const skillCoreUpdateData = updateData.system.skills;\n\n    formData = foundry.utils.expandObject(formData);\n    // Forcibly slugify provided tag to ensure it is not invalid (e.g. contain periods)\n    const tag = pf1.utils.createTag(formData.tag, { allowUpperCase: true, camelCase: false });\n    const newData = formData.skill;\n\n    // Track old IDs for rename related data deletion\n    const oldSubSkillId = this.subSkillId,\n      oldSkillId = this.skillId;\n\n    // Preserve some data\n    if (newData.journal === undefined) newData.journal ??= this.skill.journal;\n    if (newData.custom === undefined) newData.custom ??= this.skill.custom;\n\n    if (!this.isStaticSkill) {\n      newData.background ??= this.skill.background;\n    }\n\n    // Basic sanity check\n    if (!this.isStaticSkill && !tag) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.EmptySkillTag\"));\n    }\n\n    const subSkillId = this.isSubSkill ? tag : null;\n    const skillId = !this.isSubSkill ? tag : this.skillId;\n\n    // Detect skill ID conflicts\n    const tagChanged = this.isSubSkill ? tag !== this.subSkillId : tag !== this.skillId;\n    if (tagChanged) {\n      const skillsData = this.isSubSkill ? this.actor.system.skills[skillId].subSkills : this.actor.system.skills;\n      if (tag in skillsData) {\n        const msgOpts = { tag: this.isSubSkill ? `${this.skillId}.${tag}` : tag };\n        return void ui.notifications.error(game.i18n.format(\"PF1.Error.SkillTagAlreadyExists\", msgOpts));\n      }\n    }\n\n    // Change application's id by tag\n    if (tag) {\n      if (this.isSubSkill) this.subSkillId = tag;\n      else this.skillId = tag;\n    }\n\n    if (this.isSubSkill) {\n      skillCoreUpdateData[skillId] = { subSkills: { [subSkillId]: newData } };\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[skillId].subSkills[`-=${oldSubSkillId}`] = null;\n    } else {\n      skillCoreUpdateData[skillId] = newData;\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[`-=${oldSkillId}`] = null;\n    }\n\n    return this.actor.update(updateData);\n  }\n\n  async close(...args) {\n    await super.close(...args);\n\n    this._callbacks.forEach((fn) => fn());\n  }\n\n  /**\n   * @override\n   */\n  _canDragDrop() {\n    // Allow non-GM to drop links as appropriate.\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    // Retrieve the dropped Journal Entry Page\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"JournalEntryPage\" && data.type !== \"JournalEntry\") return;\n    const document = await CONFIG[data.type].documentClass.implementation.fromDropData(data);\n    if (!document) return;\n\n    this._updateObject(event, this._getSubmitData({ \"skill.journal\": document.uuid }));\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Open compendium page\n    html.find(\".compendium-page\").on(\"click\", this._openCompendiumEntry.bind(this));\n    html.find(\".compendium-controls a\").on(\"click\", this._onCompendiumControls.bind(this));\n\n    // Submit\n    html.find(`button[type=\"submit\"]`).on(\"click\", (event) => {\n      event.preventDefault();\n      const valid = this.element[0].querySelector(\"form\").reportValidity();\n      if (valid) this.close({ submit: true });\n    });\n  }\n\n  async _openCompendiumEntry(event) {\n    event.preventDefault();\n    const elem = event.currentTarget.closest(\".compendium-entry\");\n\n    pf1.utils.openJournal(elem.dataset.compendiumEntry);\n  }\n\n  async _onCompendiumControls(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    if (elem.classList.contains(\"delete\")) {\n      return this._updateObject(event, this._getSubmitData({ \"skill.journal\": null }));\n    }\n  }\n}\n","export class ContentSourceEditor extends DocumentSheet {\n  get title() {\n    const label = game.i18n.format(\"PF1.ContentSource.Title\", { name: this.document.name });\n    const actor = this.document.actor;\n    if (actor) return label + ` – ${actor.name}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/content-source-editor.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      tabs: [\n        {\n          contentSelector: \"section.content\",\n          navSelector: \"nav.tabs\",\n          group: \"sources\",\n        },\n      ],\n      dragDrop: [{ dragSelector: \"nav.tabs .source\", dropSelector: null }],\n      width: 540,\n      height: \"auto\",\n      resizable: true,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      classes: [...options.classes, \"pf1\", \"content-source-editor\"],\n    };\n  }\n\n  /**\n   * @internal\n   * @override\n   * @returns {object}\n   */\n  getData() {\n    let canAdd = true;\n\n    let sources = this.document.system.sources ?? [];\n\n    // Prevent adding new sources if there's already an empty source\n    if (sources.some((src) => Object.keys(src).length === 0)) canAdd = false;\n\n    // Shallow clone sources for extra data\n    sources = sources.map((src) => {\n      const registry = pf1.registry.sources.get(src.id);\n      return {\n        ...src,\n        registry,\n      };\n    });\n\n    // Add default entry for editing when no entries exist\n    if (sources.length === 0) {\n      sources.push({ stub: true });\n      canAdd = false;\n    }\n\n    return {\n      editable: this.isEditable,\n      sources,\n      registry: pf1.registry.sources,\n      uuid: this.document.uuid,\n      canAdd,\n    };\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onAction(event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.classList.contains(\"disabled\")) return;\n\n    switch (el.dataset.action) {\n      case \"add\": {\n        this.form.disabled = true;\n        const sources = this.document.system.sources ?? [];\n        await this.document.update({ \"system.sources\": [...sources, {}] });\n        // Activate the newly created source tab\n        this.activateTab(`source-${sources.length}`);\n        break;\n      }\n      case \"delete\": {\n        const idx = Number(el.dataset.index);\n        if (Number.isFinite(idx) && idx >= 0) {\n          const src = this.document.system.sources[idx];\n          if (!src) return void this.render();\n          const name =\n            src.title || pf1.registry.sources.get(src.id)?.name || game.i18n.localize(\"PF1.ContentSource.NewEntry\");\n\n          const confirm = await foundry.applications.api.DialogV2.confirm({\n            window: { title: game.i18n.format(\"PF1.ContentSource.DelTitle\", { entry: name }) },\n            content: game.i18n.format(\"PF1.ContentSource.DelEntryDesc\", { entry: name }),\n            rejectClose: false,\n            modal: true, // Wait for user confirm\n          });\n\n          if (confirm !== true) return;\n\n          this.form.disabled = true;\n          const updated = await this.document.update({\n            \"system.sources\": this.document.system.sources.filter((_, sidx) => sidx !== idx),\n          });\n          if (!updated) this.render();\n        }\n        break;\n      }\n      default:\n        console.warn(\"Unrecognized action:\", el.dataset.action, el);\n        break;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragStart(selector) {\n    if (this.document.inContainer) return false;\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragDrop(selector) {\n    if (this.document.inContainer) return false;\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n\n    const index = Number(el.dataset.index);\n    const src = this.document.system.sources?.[index];\n\n    if (!src) return false;\n\n    // Set drag data\n    const dragData = {\n      type: \"pf1ContentSourceEntry\",\n      uuid: this.document.uuid,\n      index,\n      data: {\n        ...src,\n      },\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    const dropData = TextEditor.getDragEventData(event);\n\n    switch (dropData.type) {\n      case \"pf1ContentSourceEntry\":\n        this._onDropContentSource(event, dropData);\n        break;\n    }\n  }\n\n  /**\n   * Handle content source drop\n   *\n   * @remarks\n   * - Does not work correctly when dealing with\n   * @internal\n   * @param {DragEvent} event\n   * @param {object} dropData\n   */\n  async _onDropContentSource(event, dropData) {\n    let el = event.target;\n    if (el.dataset.index === undefined) el = el.closest(\".source[data-index]\");\n    let dropIndex = Number(el?.dataset.index);\n\n    this.form.disabled = true;\n\n    const src = dropData.data;\n    const origin = fromUuidSync(dropData.uuid);\n    if (!origin) return;\n\n    // Sort\n    if (origin === this.document) {\n      if (!Number.isFinite(dropIndex) || dropIndex < 0) return;\n      if (dropIndex === dropData.index) return;\n      const sources = this.document.toObject().system.sources ?? [];\n      const [moved] = sources.splice(dropData.index, 1);\n      sources.splice(dropIndex, 0, moved);\n      this.document.update({ \"system.sources\": sources });\n    }\n    // Copy\n    else {\n      const sources = this.document.toObject().system.sources ?? [];\n\n      // Disallow same ID source copy\n      if (src.id && sources.some((osrc) => osrc.id === src.id)) return; // TODO: Add error notification?\n\n      // If dropped in odd location, add as last\n      if (!Number.isFinite(dropIndex)) dropIndex = sources.length;\n      sources.splice(dropIndex, 0, src);\n      this.document.update({ \"system.sources\": sources });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form\n      .querySelectorAll(\"header .control\")\n      .forEach((el) => el.addEventListener(\"click\", this._onAction.bind(this)));\n  }\n\n  /**\n   * Open editor application for defined document.\n   *\n   * @param {Actor|Item} document Item or Actor reference\n   * @returns {ContentSourceEditor} Reference to opened application.\n   */\n  static open(document) {\n    const app =\n      Object.values(ui.windows).find((app) => app instanceof this && app.object === document) ?? new this(document);\n    app.render(true, { focus: true });\n    return app;\n  }\n\n  _updateObject(event, updateData) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    updateData.system.sources = Object.values(updateData.system.sources);\n\n    const sources = updateData.system.sources;\n    for (const source of sources) {\n      // Remove empty data\n      let empty = true;\n      for (const [key, value] of Object.entries(source)) {\n        if (value === null || value === \"\") {\n          delete source[key];\n        } else empty = false;\n      }\n\n      const registry = pf1.registry.sources.get(source.id);\n\n      // Empty data that is auto-filled from registry\n      if (registry) {\n        delete source.title;\n        delete source.publisher;\n      }\n\n      // Mark as empty for followup removal\n      if (empty) source.empty = true;\n    }\n\n    updateData.system.sources = updateData.system.sources.filter((s) => s.empty !== true);\n\n    return this.document.update(updateData);\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n// Add Vision Sharing sheet to ActorDirectory context options\nfunction addVisionSharingContextMenu(html, entries) {\n  entries.push({\n    name: \"PF1.Application.VisionSharing.Label\",\n    icon: '<i class=\"fa-solid fa-eye\"></i>',\n    condition: () => game.user.isGM,\n    callback: (li) => {\n      if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n      const actorId = li.dataset.entryId ?? li.dataset.documentId; // documentId is used by v12 and older\n      game.actors.get(actorId).visionSharingSheet.render(true, {\n        position: {\n          // Positioning copied from Foundry's ownership dialog\n          top: Math.min(li.offsetTop, window.innerHeight - 370),\n          left: window.innerWidth - 720,\n        },\n      });\n    },\n  });\n}\n\nHooks.on(\"getActorDirectoryEntryContext\", addVisionSharingContextMenu); // v12\nHooks.on(\"getActorContextOptions\", addVisionSharingContextMenu); // v13\n\nexport class VisionSharingSheet extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"vision-sharing\", \"standard-form\"],\n    window: {\n      minimizable: false,\n    },\n    position: {\n      width: 400,\n      height: \"auto\",\n    },\n    form: {\n      handler: this._onSubmit,\n      closeOnSubmit: true,\n      submitOnChange: false,\n    },\n    actions: {\n      reset: this._onReset,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/vision-sharing.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.VisionSharing.Label\") + `: ${this.actor.name}`;\n    if (this.actor.token) title += \"[\" + game.i18n.localize(\"Token\") + \"]\";\n    return title;\n  }\n\n  /**\n   * @internal\n   * @param {*} v\n   * @returns {boolean|null}\n   */\n  _getUniformValue(v) {\n    if (v === \"true\" || v === \"yes\" || v === true) return true;\n    if (v === \"false\" || v === \"no\" || v === false) return false;\n    return null;\n  }\n\n  async _prepareContext() {\n    const config = this._config ?? this.actor.getFlag(\"pf1\", \"visionSharing\");\n    this._config = null;\n\n    const context = {\n      fields: {\n        default: new foundry.data.fields.StringField({\n          choices: { true: \"PF1.Yes\", false: \"PF1.No\" },\n          label: \"PF1.Default\",\n        }),\n        toggle: new foundry.data.fields.StringField({\n          choices: { true: \"PF1.Yes\", false: \"PF1.No\" },\n        }),\n      },\n      default: this._getUniformValue(config?.default) ?? false,\n      users: game.users.players.reduce((rv, user) => {\n        rv[user.id] = {\n          user,\n          level: String(this._getUniformValue(config?.users?.[user.id]?.level ?? config?.users?.[user.id] ?? null)),\n        };\n        return rv;\n      }, {}),\n    };\n\n    // Footer buttons\n    context.buttons = [\n      { type: \"reset\", label: \"PF1.Reset\", icon: \"fa-solid fa-arrow-rotate-left\", action: \"reset\" },\n      { type: \"submit\", label: \"PF1.Save\", icon: \"fa-solid fa-floppy-disk\" },\n    ];\n\n    return context;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.document;\n  }\n\n  /**\n   * @this {VisionSharingSheet}\n   * @param {Event} event\n   * @param {HTMLFormElement} form\n   * @param {FormDataExtended} formData\n   */\n  static async _onSubmit(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n\n    formData.users ??= {};\n\n    // Clear users that are using default\n    for (const [userId, value] of Object.entries(formData.users)) {\n      const enabled = this._getUniformValue(value);\n      if (enabled) formData.users[userId] = true;\n      else {\n        formData.users[`-=${userId}`] = null;\n        delete formData.users[userId];\n      }\n    }\n\n    formData.default = this._getUniformValue(formData.default);\n\n    // Remove old users that no longer exist\n    const oldUsers = this.actor.getFlag(\"pf1\", \"visionSharing\")?.users;\n    if (oldUsers) {\n      for (const userId of Object.keys(oldUsers)) {\n        if (!game.users.get(userId)) {\n          formData.users[`-=${userId}`] = null;\n        }\n      }\n    }\n\n    // Delete users object entirely if it doesn't exist\n    const userUpdateKeys = Object.keys(formData.users);\n    if (userUpdateKeys.length === 0 || userUpdateKeys.every((k) => k.startsWith(\"-=\"))) {\n      delete formData.users;\n      formData[\"-=users\"] = null;\n    }\n\n    // Save if either default is true or have any user overrides\n    if (formData.default || formData.users) {\n      await this.actor.setFlag(\"pf1\", \"visionSharing\", formData);\n      console.debug(\"PF1 | Vision Sharing saved for\", this.actor.name);\n    }\n    // Otherwise clear the saved data\n    else {\n      await this.actor.unsetFlag(\"pf1\", \"visionSharing\");\n      console.debug(\"PF1 | Vision Sharing reset for\", this.actor.name);\n    }\n  }\n\n  /**\n   * @this {VisionSharingSheet}\n   * @param {PointerEvent} _event - Triggering event\n   * @param {HTMLElement} _html - Button\n   */\n  static async _onReset(_event, _html) {\n    // Record config replacement\n    this._config = {\n      default: false,\n      users: {},\n    };\n\n    this.render();\n  }\n}\n","import { NoAutocomplete } from \"./mixins/no-autocomplete.mjs\";\nimport { DragDropApplicationMixin } from \"@app/mixins/drag-drop.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ExperienceDistributor extends DragDropApplicationMixin(\n  HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2))\n) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"experience-distributor\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.XPDistributor.Title\",\n      minimizable: true,\n      resizable: true,\n    },\n    actions: {\n      split: this._doSplitReward,\n      full: this._doFullReward,\n    },\n    dragDrop: [{ dragSelector: null, dropSelector: \"form\" }],\n    position: {\n      width: 450,\n      height: 690,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/experience-distributor.hbs\",\n      scrollable: [\".selectors\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * Bonus XP granted\n   *\n   * @type {number}\n   */\n  _bonusXP = 0;\n\n  /**\n   * Special actor data array\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  _actors = [];\n\n  constructor(options) {\n    if (Array.isArray(options)) {\n      foundry.utils.logCompatibilityWarning(\n        \"ExperienceDistributor constructor first parameter is no longer directly actor array. Please provide options object with actors property instead.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { actors: options };\n    }\n\n    super(options);\n\n    const actors = options.actors ?? [];\n    this._actors = actors.map((actor) => this.constructor.getActorData(actor)).filter((o) => !!o);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @internal\n   */\n  _preparePartContext(partId, context) {\n    switch (partId) {\n      case \"footer\":\n        context.buttons = [\n          {\n            action: \"split\",\n            label: \"PF1.Application.XPDistributor.SplitEvenly\",\n            type: \"button\", // non-default\n            icon: \"fa-solid fa-people-arrows\",\n          },\n          {\n            action: \"full\",\n            label: \"PF1.Application.XPDistributor.GiveToAll\",\n            type: \"submit\", // default\n            icon: \"fa-solid fa-star\",\n          },\n        ];\n        break;\n      case \"form\":\n        // Add combatants\n        context.actors = {\n          characters: this.characters,\n          npcs: this.npcs,\n        };\n        // Add labels\n        context.xp = {\n          total: this.totalExperience.toLocaleString(),\n          split: this.splitExperience.toLocaleString(),\n        };\n        context.bonusXP = this._bonusXP;\n        break;\n    }\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get PC actors\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  get characters() {\n    return this._actors.filter((o) => !o.isNPC);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get NPC actors\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  get npcs() {\n    return this._actors.filter((o) => o.isNPC);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle Drop Event\n   *\n   * @param {DragEvent} event - The originating DragEvent\n   * @protected\n   * @override\n   */\n  async _onDrop(event) {\n    event.preventDefault();\n    const data = TextEditor.getDragEventData(event);\n\n    if (data.type !== \"Actor\") return;\n\n    // Add actor\n    const actor = await pf1.documents.actor.ActorPF.fromDropData(data);\n\n    // Prevent duplicate characters (not NPCs)\n    if (actor.type !== \"character\" || this._actors.find((o) => o.actor === actor) == null) {\n      // Add actor to list\n      const actorData = this.constructor.getActorData(actor);\n      actorData.selected = true;\n      this._actors.push(actorData);\n\n      this.render({ parts: [\"form\"] });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.matches(\"input[type=checkbox]\")) {\n      const actorID = el.dataset.id;\n      const actor = this._actors.find((o) => o.id === actorID);\n      if (!actor) return;\n      actor.selected = el.checked;\n    }\n\n    if (el.matches(\"input[name=bonusXP]\")) {\n      this._bonusXP = parseInt(el.value);\n      if (isNaN(this._bonusXP)) this._bonusXP = 0;\n    }\n\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split reward for each\n   *\n   * @param {Event} event\n   * @returns\n   */\n  static _doSplitReward(event) {\n    event.preventDefault();\n    return this._giveExperience(true);\n  }\n\n  /**\n   * Full reward for each\n   *\n   * @internal\n   * @param {Event} event\n   * @returns\n   */\n  static _doFullReward(event) {\n    event.preventDefault();\n    return this._giveExperience(false);\n  }\n\n  /**\n   * Distributes experience to all PC actors\n   *\n   * @internal\n   * @this {ExperienceDistributor} - XP distributor instance rather than the class.\n   * @param {boolean} splitEvenly - Should XP be split evenly?\n   * @returns {Promise<void>}\n   */\n  async _giveExperience(splitEvenly = false) {\n    const total = this.totalExperience;\n    const split = this.splitExperience;\n    const value = splitEvenly ? split : total;\n    const characters = this.characters.filter((o) => o.selected);\n\n    if (characters.length == 0) {\n      return void ui.notifications.error(\"PF1.Application.XPDistributor.Warnings.NoRecipients\", { localize: true });\n    }\n\n    if (!(value > 0)) {\n      return void ui.notifications.error(\"PF1.Application.XPDistributor.Warnings.NoReward\", { localize: true });\n    }\n\n    if (splitEvenly)\n      console.debug(\"PF1 | XP Reward |\", total, \"split evenly as\", split, \"to\", characters.length, \"characters\");\n    else console.debug(\"PF1 | XP Reward |\", total, \"to all\");\n\n    for (const actorData of characters) {\n      const result = { value };\n      Hooks.callAll(\"pf1GainXp\", actorData.actor, result);\n      actorData.value = Math.floor(result.value);\n    }\n\n    const updates = characters\n      .filter((o) => o.value > 0 && Number.isSafeInteger(o.value))\n      .map((o) => ({\n        _id: o.actor.id,\n        \"system.details.xp.value\": o.actor.system.details.xp.value + o.value,\n      }));\n\n    this.close();\n\n    await Actor.implementation.updateDocuments(updates);\n\n    ui.notifications.info(game.i18n.format(\"PF1.Application.XPDistributor.Result\", { xp: value }), { console: false });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Total experience the encounter is worth, including regular XP reward and bonus XP.\n   *\n   * @returns {number} - Total value\n   */\n  get totalExperience() {\n    const npcs = this.npcs.filter((o) => o.selected);\n    return npcs.reduce((cur, o) => cur + o.xp, this._bonusXP);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split experience, as split across all characters.\n   *\n   * @returns {number} - Reward value\n   */\n  get splitExperience() {\n    const characters = this.characters.filter((o) => o.selected);\n    if (characters.length === 0) return 0;\n    const xp = this.totalExperience;\n    return Math.floor(xp / characters.length);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Actor} actor\n   * @returns {ExperienceDistributorActor}\n   */\n  static getActorData(actor) {\n    if (!(actor instanceof Actor)) return null;\n\n    const xp = pf1.utils.CR.getXP(actor.getCR?.() ?? 0);\n\n    return {\n      id: foundry.utils.randomID(16),\n      isNPC: actor.type !== \"character\",\n      actor,\n      selected: this._shouldActorBeSelected(actor),\n      xp,\n      xpLabel: xp.toLocaleString(),\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the actor be selected by default.\n   *\n   * @param {Actor} actor\n   * @returns {boolean}\n   */\n  static _shouldActorBeSelected(actor) {\n    const isPC = actor.type === \"character\";\n    if (isPC) return true;\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const healthConfig = hpConfig.getActorConfig(actor);\n    const useWoundsAndVigor = healthConfig.rules.useWoundsAndVigor ?? false;\n\n    return useWoundsAndVigor ? actor.system.attributes?.wounds?.value <= 0 : actor.system.attributes?.hp?.value < 0;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Open XP distributor dialog based on passed combat instance.\n   *\n   * @param {Combat} combat - Combat instance\n   * @returns {ExperienceDistributor} - Application instance\n   */\n  static fromCombat(combat) {\n    const app = new this({ actors: combat.combatants.map((c) => c.actor) });\n\n    if (app.characters.length > 0) {\n      app.render({ force: true });\n    } else {\n      app.close();\n    }\n\n    return app;\n  }\n}\n\n/**\n * @typedef {object} ExperienceDistributorActor\n * @property {string} id - Internal reference ID\n * @property {ActorPF} actor - Actor instance\n * @property {boolean} isNPC - Is this an NPC?\n * @property {boolean} selected - Is the actor selected\n * @property {number} xp\n * @property {string} xpLabel\n */\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\nimport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Change Editor\n *\n * @since PF1 v10\n */\nexport class ChangeEditor extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"change-editor\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 460,\n    },\n    actions: {\n      copyUuid: { handler: this.#onCopyUuid, buttons: [0, 2] },\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/change-editor.hbs\",\n    },\n  };\n\n  /** @type {ItemChange} */\n  change;\n\n  /**\n   * @internal\n   * @param options\n   */\n  constructor(options) {\n    super(options);\n    this.change = options.change;\n  }\n\n  /**\n   * Override to fix DocumentSheet ignoring get id\n   *\n   * @override\n   * @param {object} options - App options\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.uniqueId = this.getID(options); // HACK: Document Sheet ignores the id getter\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.item.actor;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {ItemPF}\n   */\n  get item() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @type {string}\n   */\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.ChangeEditor.Label\");\n    title += \": \" + this.item.name;\n    if (this.actor) title += \" – \" + this.actor.name;\n    return title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @type {string}\n   */\n  get id() {\n    return this.getID();\n  }\n\n  /**\n   * HACK: To deal with AppV2 and DocumentSheetV2 behaviour\n   *\n   * @internal\n   * @param {object} options\n   * @returns {string}\n   */\n  getID(options) {\n    options ??= this.options;\n    return \"change-editor-\" + options.change.uuid.replaceAll(\".\", \"-\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const change = this.change,\n      actor = this.actor,\n      item = this.item;\n\n    const buffTargets = pf1.utils.internal.getBuffTargets(\"buffs\", { actor, item });\n    const target = buffTargets[change.target];\n\n    const editable = this.isEditable;\n\n    const defaultPriority = change.priority == 0,\n      earlyPriority = change.priority > 0,\n      latePriority = change.priority < 0;\n\n    return {\n      editable,\n      cssClass: editable ? \"\" : \"locked\",\n      config: pf1.config,\n      actor,\n      item,\n      change,\n      // Which kind of priority does this have\n      priority: {\n        early: earlyPriority,\n        late: latePriority,\n        normal: defaultPriority,\n      },\n      // Alternative values\n      values: {\n        priority: {\n          early: earlyPriority ? change.priority : defaultPriority ? 1 : -change.priority,\n          late: latePriority ? change.priority : defaultPriority ? -1 : -change.priority,\n        },\n      },\n      isAdd: change.operator === \"add\",\n      isSet: change.operator === \"set\",\n      isValid: !!target,\n      isCustom: [\"skill\", \"cl\", \"sl\", \"concn\"].includes(change.target?.split(\".\")?.[0]),\n      isValidType: !!pf1.config.bonusTypes[change.type],\n      isValidOp: [\"add\", \"set\"].includes(change.operator),\n      isSimple: change.isSimple,\n      isDeferred: change.isDeferred,\n      label: target?.label || change.target,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onChangeTargetControl(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    // Prepare categories and changes to display\n    const categories = pf1.utils.internal.getBuffTargetDictionary(\"buffs\", { actor: this.item.actor, item: this.item });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    let part1 = this.change?.target?.split(\".\")[0];\n    if (part1 === \"concn\") part1 = \"concentration\"; // HACK: Fixes spellbook concentration pointing wrong\n    const category = pf1.config.buffTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { window: { title: \"PF1.Application.ChangeTargetSelector.Title\" }, classes: [\"change-target-selector\"] },\n      categories,\n      (key) => {\n        if (key) {\n          this.change.update({ target: key });\n        }\n      },\n      { category, item: this.change?.target }\n    );\n    w.render(true);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Show the help browser\n   *\n   * @internal\n   * @param {Event} event\n   */\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula);\n      await roll.evaluate({ allowInteractive: false });\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    if (el.classList.contains(\"simple\")) {\n      if (!roll.isDeterministic || formula.includes(\"@\")) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeSimple\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeSimple\"));\n      }\n    }\n    // Deterministic formulas must be deterministic\n    else if (el.classList.contains(\"deterministic\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if this Change is in its declared parent.\n   *\n   * @type {boolean}\n   */\n  get inParent() {\n    return !!this.document.changes.get(this.change.id);\n  }\n\n  /**\n   * HACK: Override to force close the dialog when the Change is deleted\n   *\n   * @override\n   * @param {object} options - Options\n   * @param {object} _options - Legacy options\n   */\n  async render(options, _options) {\n    // Despite _options being deprecated, it is the only place for render context\n    if (_options?.renderContext === \"updateItem\") {\n      // Close instead of rendering if the Change no longer exists, ignoring anything else\n      if (!this.inParent) return this.close();\n    }\n    return super.render(options, _options);\n  }\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Modify changes\n    this.element\n      .querySelector(\".target .change-target\")\n      .addEventListener(\"click\", this._onChangeTargetControl.bind(this));\n\n    // Open help browser\n    this.element.querySelector(\"a.help-browser[data-url]\").addEventListener(\"click\", this._openHelpBrowser.bind(this));\n\n    // Add warning about formulas\n    this.element.querySelectorAll(\"input.formula\").forEach(async (el) => this._validateFormula(el));\n\n    this.element.reportValidity();\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,select)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /**\n   * Override document ID/UUID handling and redirect them to the Change\n   *\n   * @internal\n   * @override\n   * @param {PointerEvent} event - Triggering event\n   * @this {ChangeEditor}\n   */\n  static #onCopyUuid(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.detail > 1) return; // Ignore repeated clicks\n    const id = event.button === 2 ? this.change.id : this.change.uuid;\n    const type = event.button === 2 ? \"id\" : \"uuid\";\n    const label = game.i18n.localize(\"PF1.Change\");\n    game.clipboard.copyPlainText(id);\n    ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type, id }));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {object} options - Application options\n   * @param {ItemChange} options.change - Change to modify\n   * @param {object} oldOptions - Deprecated application options\n   * @returns {Promise<void|ChangeEditor>} - Promise that resolves when the app is closed. Returns application instance if no new instance was created.\n   */\n  static async wait(options, oldOptions = {}) {\n    if (options instanceof pf1.components.ItemChange) {\n      foundry.utils.logCompatibilityWarning(\n        \"ChangeEditor.wait() first parameter as change instance is deprecated. Please include it in app options instead.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      oldOptions.change = options;\n      options = oldOptions;\n    }\n\n    const old = Object.values(foundry.applications.instances).find(\n      (app) => app instanceof this && app.change === options.change\n    );\n\n    if (old) {\n      old.render(true);\n      old.bringToFront();\n      return old;\n    }\n\n    return new Promise((resolve) => {\n      options.document = options.change.parent;\n      const app = new this(options);\n      app.resolve = resolve;\n      app.render(true);\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the object with the new change data from the form.\n   *\n   * @this {ChangeEditor}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   * @private\n   */\n  static _onSubmit(event, form, formData) {\n    formData = formData.object;\n    const updateData = foundry.utils.expandObject(formData).change;\n    this.change.update(updateData);\n  }\n}\n","export class ItemDirectoryPF extends CONFIG.ui.items {\n  /**\n   * v12 and prior\n   *\n   * Enrich default options for detecting identified/unidentified name changes\n   *\n   * @override\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.renderUpdateKeys.push(\"system.unidentified.name\", \"system.identified\");\n    return options;\n  }\n\n  // v13\n  static DEFAULT_OPTIONS = {\n    renderUpdateKeys: [\"system.unidentified.name\", \"system.identified\"],\n  };\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class Troubleshooter extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"pf1-troubleshooter\",\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"troubleshooter\"],\n    window: {\n      title: \"PF1.Troubleshooter.Title\",\n      icon: \"fa-solid fa-screwdriver-wrench\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 460,\n    },\n    actions: {\n      migrate: this._runMigration,\n      help: this._openHelp,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/troubleshooter.hbs\",\n    },\n  };\n\n  // Are packs to be unlocked?\n  unlock = false;\n\n  // Are already migrated documents to be reprocessed?\n  reprocess = false;\n\n  // Migration state\n  migrating = { world: false, modules: false };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      isGM: game.user.isGM,\n      unlockPacks: this.unlock,\n      reprocess: this.reprocess,\n      migrating: this.migrating,\n      links: {\n        help: `<a data-action='help'>${game.i18n.localize(\"PF1.Troubleshooter.Steps.HelpLink\")}</a>`,\n        report: `<a href=\"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues\">${game.i18n.localize(\n          \"PF1.Troubleshooter.Steps.ReportLinkText\"\n        )}</a>`,\n        foundry: {\n          kb: `<a href=\"https://foundryvtt.com/kb/\">${game.i18n.localize(\"PF1.Troubleshooter.Steps.FoundryLink\")}</a>`,\n          discord: `<a href=\"https://discord.gg/foundryvtt\">Foundry VTT</a>`,\n          channel: \"#pf1\",\n        },\n        faq: \"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/wikis/FAQs\",\n        helpmodule: `<a href=\"https://foundryvtt.com/packages/find-the-culprit\">Find the Culprit</a>`,\n      },\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {Event} event - Triggering event\n   * @param {Element} button - Source button\n   */\n  static async _runMigration(event, button) {\n    const unlock = this.unlock ?? false;\n    const fast = !this.reprocess;\n\n    /** @type {Element} */\n    if (button.disabled) return;\n\n    button.classList.remove(\"finished\");\n    button.disabled = true;\n    button.classList.add(\"active\");\n\n    const target = button.dataset.target;\n    const top = button.closest(\".window-content\").getBoundingClientRect().top + 20;\n\n    switch (target) {\n      case \"world\":\n        this.migrating.world = true;\n        await pf1.migrations.migrateWorld({ unlock, fast, dialog: { top } });\n        this.migrating.world = false;\n        break;\n\n      case \"modules\":\n        this.migrating.modules = true;\n        await pf1.migrations.migrateModules({ unlock, fast, dialog: { top } });\n        this.migrating.modules = false;\n        break;\n\n      default:\n        throw new Error(`Unrecognized migration target: \"${target}\"`);\n    }\n\n    this.element?.querySelector(\".form-body\").classList.remove(\"migrating\");\n    button.disabled = false;\n    button.classList.remove(\"active\");\n    button.classList.add(\"finished\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {Event} _event - Triggering event\n   */\n  static _openHelp(_event) {\n    pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n  }\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @override\n   * @param {ApplicationFormConfiguration} formConfig - The configuration of the form being changed\n   * @param {Event} event - The triggering event\n   */\n  _onChangeForm(formConfig, event) {\n    const target = event.target;\n\n    switch (target.name) {\n      case \"unlock\":\n        this.unlock = target.checked;\n        break;\n      case \"reprocess\":\n        this.reprocess = target.checked;\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const migrationButtons = this.element.querySelectorAll(\"button[data-action='migrate']\");\n\n    // React to external migration to minimal degree\n    if (pf1.migrations.isMigrating) {\n      this.migrating.world = true;\n      this.migrating.modules = true;\n      for (const button of migrationButtons) {\n        button.disabled = true;\n        button.classList.add(\"active\");\n      }\n\n      Hooks.once(\"pf1MigrationFinished\", () => {\n        for (const button of migrationButtons) {\n          button.disabled = false;\n          this.migrating.world = false;\n          this.migrating.modules = false;\n        }\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  static open() {\n    new Troubleshooter().render(true);\n  }\n}\n","import { AbstractDocumentSelector } from \"@app/abstract-document-selector.mjs\";\n\n/**\n * A specialized form application for selecting an Actor from a list of available choices\n */\nexport class ActorSelector extends AbstractDocumentSelector {\n  static DEFAULT_OPTIONS = {\n    actors: undefined,\n    ownership: undefined,\n    selected: null,\n    window: {\n      title: \"PF1.Application.ActorSelector.Title\",\n      icon: \"fa-solid fa-people-group\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.ownership ||= CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED;\n    options.actors ||= [...game.actors];\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  async _getSections() {\n    let actorList = this.options.filterFunc ? this.options.actors.filter(this.filterFunc) : [...this.options.actors];\n\n    actorList = actorList.filter((actor) => actor.testUserPermission(game.user, this.options.ownership));\n\n    if (this.options.search.value) {\n      actorList = actorList.filter((actor) =>\n        actor.name.toLowerCase().includes(this.options.search.value.toLowerCase())\n      );\n    }\n\n    actorList.sort((a, b) => a.name.localeCompare(b.name));\n\n    actorList = actorList.map((actor) => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.img,\n        isOwner: actor.isOwner,\n        extras: [\n          {\n            label: \"PF1.Application.ActorSelector.Owner\",\n            value: [...game.users]\n              .filter((user) => actor.testUserPermission(user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER))\n              .map((user) =>\n                user.id === game.user.id ? game.i18n.localize(\"PF1.Application.ActorSelector.You\") : user.name\n              )\n              .join(\", \"),\n          },\n        ],\n      };\n    });\n\n    return [\n      {\n        id: \"owned\",\n        label: \"PF1.Application.ActorSelector.OwnedActors\",\n        documents: actorList.filter((actor) => actor.isOwner),\n      },\n      {\n        id: \"unowned\",\n        label: \"PF1.Application.ActorSelector.UnownedActors\",\n        documents: actorList.filter((actor) => !actor.isOwner),\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _resolveResult() {\n    let result = this.selected;\n\n    if (this.selected && this.options.document) {\n      result = this.options.actors.find((i) => i.id === result);\n    }\n\n    this.resolve?.(result || null);\n  }\n}\n","/**\n * Stack splitting dialog\n *\n * @example\n * ```js\n * const result = await pf1.applications.SplitStack.wait({ title: \"My Stuff\", initial: 50, total: 100 });\n * if (!result) throw new Error(\"Fsck!\");\n * const [keep,split] = result;\n * console.log(`I keep ${keep} and you get ${split}`);\n * ```\n */\nexport class SplitStack extends foundry.applications.api.DialogV2 {\n  /**\n   * Wait for user interaction to finish.\n   *\n   * @param {object} options - Options\n   * @param {string} [options.title] - Dialog title\n   * @param {number} options.initial - Initial value\n   * @param {number} options.total - Total value to split.\n   * @param {number} [options.step] - Value stepping.\n   * @param {string[]} [options.css] - Optional CSS selectors to add to the dialog.\n   * @param {object} dialogOptions - Additional options to pass to DialogV2\n   * @returns {Promise<number[]|null>} - Number tuple, to keep and to split values. Null if cancelled.\n   */\n  static async wait({ title, initial = 1, step = 1, total, css = [] } = {}, dialogOptions = {}) {\n    // Can't split\n    if (total <= 1) return null;\n    // Only one answer\n    if (total == 2) return [1, 1];\n\n    step ||= 1;\n    initial = Math.clamp(initial || 0, 1, total);\n    const max = total - 1;\n\n    const content = await renderTemplate(\"systems/pf1/templates/apps/split-stack.hbs\", {\n      initial,\n      keep: total - initial,\n      max,\n    });\n\n    const options = {\n      window: { title },\n      content,\n      classes: [\"pf1-v2\", \"split-stack\", ...css],\n      buttons: [\n        {\n          icon: \"fa-solid fa-people-arrows\",\n          label: game.i18n.localize(\"PF1.Split\"),\n          action: \"split\",\n          default: true,\n          callback: (event, target, html) => {\n            if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n            const splitValue = Math.clamp(html.querySelector(\"form input.split\").valueAsNumber, 1, max);\n            if (Number.isNumeric(splitValue)) {\n              return [Math.max(1, total - splitValue), splitValue];\n            }\n            return null;\n          },\n        },\n      ],\n      render: (event, html) => {\n        if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n        html = html.querySelector(\".dialog-content\");\n        const slider = html.querySelector(\"input.slider\");\n        const oldStack = html.querySelector(\"input.left\");\n        const newStack = html.querySelector(\"input.split\");\n        slider.addEventListener(\n          \"input\",\n          (ev) => {\n            const newValue = ev.target.valueAsNumber;\n            newStack.value = newValue;\n            oldStack.value = total - newValue;\n          },\n          { passive: true }\n        );\n        newStack.addEventListener(\n          \"input\",\n          (ev) => {\n            let newValue = ev.target.valueAsNumber;\n            if (newValue > max) {\n              newStack.value = max;\n              newValue = max;\n            } else if (newValue < 1) {\n              newStack.value = 1;\n              newValue = 1;\n            }\n            slider.value = newValue;\n            oldStack.value = total - newValue;\n          },\n          { passive: true }\n        );\n        oldStack.addEventListener(\"input\", (ev) => {\n          let newValue = total - ev.target.valueAsNumber;\n          if (newValue > total) {\n            oldStack.value = max;\n            newValue = 1;\n          } else if (newValue < 1) {\n            oldStack.value = 1;\n            newValue = max;\n          }\n          newStack.value = newValue;\n          slider.value = newValue;\n        });\n      },\n      close: () => null,\n      rejectClose: false,\n    };\n\n    return super.wait(foundry.utils.mergeObject(options, dialogOptions));\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * HTML Editor\n *\n * Generic HTML text editor.\n *\n * @group Applications\n */\nexport class HTMLEditor extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  /** @override */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    options.uniqueId += `-${options.path.replaceAll(\".\", \"-\")}`;\n\n    return options;\n  }\n\n  /** @override */\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"html-editor\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      height: 520,\n      width: 580,\n    },\n    sheetConfig: false,\n    form: {\n      closeOnSubmit: true,\n      submitOnChange: true,\n    },\n  };\n\n  /** @override */\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/html-editor.hbs\",\n    },\n  };\n\n  /** @override */\n  get title() {\n    return this.options.window.title || super.title;\n  }\n\n  /** @override */\n  _prepareContext() {\n    return {\n      uuid: this.document.uuid,\n      content: foundry.utils.getProperty(this.document, this.options.path),\n      path: this.options.path,\n      editable: this.isEditable,\n      field: new foundry.data.fields.HTMLField(),\n    };\n  }\n\n  /** @override */\n  _processSubmitData(event, form, submitData) {\n    if (this.options.callback) return this.options.callback(submitData);\n    else this.document.update(submitData);\n  }\n}\n","import { NoAutocomplete } from \"./mixins/no-autocomplete.mjs\";\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Apply Damage Prompt\n *\n * Handles damage application UX when adjustment is desired.\n *\n * Calls {@link ActorPF#applyDamage} when finally committing changes.\n *\n * Called primarily from {@link ActorPF.applyDamage}\n */\nexport class ApplyDamage extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  /** @type {number} */\n  value;\n  /** @type {boolean} */\n  isHealing;\n  /** @type {boolean} */\n  asWounds;\n  /** @type {number} */\n  critMult;\n  /** @type {boolean} */\n  asNonlethal;\n  /** @type {number} */\n  reduction;\n  /** @type {Collection<ApplyDamageTarget>} */\n  targets;\n  /** @type {Array} */\n  instances;\n  /** @type {Function} */\n  resolve;\n\n  constructor(options) {\n    const isHealing = options.value < 0;\n    if (isHealing) options.value = -options.value;\n\n    const { resolve } = options;\n\n    super(options);\n\n    this.damageOptions = {\n      asNonlethal: options.asNonlethal ?? false,\n      asWounds: options.asWounds ?? false,\n      critMult: options.critMult ?? 0,\n      dualHeal: options.dualHeal ?? game.settings.get(\"pf1\", \"dualHeal\"),\n    };\n\n    Object.defineProperties(this, {\n      resolve: {\n        value: resolve,\n        writable: true,\n        enumerable: false,\n      },\n      isHealing: {\n        value: isHealing,\n        writable: false,\n      },\n      asWounds: {\n        value: options.asWounds ?? false,\n      },\n      asNonlethal: {\n        value: options.asNonlethal ?? false,\n      },\n      critMult: {\n        value: options.critMult || 0,\n      },\n      value: {\n        value: options.value,\n        writable: true,\n      },\n      reduction: {\n        value: options.reduction,\n        writable: true,\n      },\n      woundsAndVigor: {\n        value: false,\n        writable: true,\n      },\n    });\n\n    this._prepareInstances();\n    this._prepareTargets();\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"apply-damage\", \"standard-form\"],\n    window: {\n      resizable: true,\n      minimizable: false,\n    },\n    position: {\n      width: 460,\n      height: \"auto\",\n    },\n    actions: {\n      apply: this._onApply,\n    },\n  };\n\n  get title() {\n    return this.isHealing ? game.i18n.localize(\"PF1.ApplyHealing\") : game.i18n.localize(\"PF1.ApplyDamage\");\n  }\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/apply-damage-dialog.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  _preparePartContext(partId, context, options) {\n    switch (partId) {\n      case \"footer\": {\n        context.buttons = [\n          {\n            action: \"apply\",\n            type: \"submit\",\n            label: game.i18n.localize(\"PF1.Apply\"),\n            icon: \"fa-solid fa-heart-pulse\",\n            default: true,\n          },\n        ];\n        break;\n      }\n      case \"form\": {\n        context.value = this.value;\n        context.isHealing = this.isHealing;\n        context.reduction = this.reduction;\n        context.targets = this.targets;\n        context.instances = this.instances;\n        context.hasPhysical = this.hasPhysical;\n        context.hasEnergy = this.hasEnergy;\n        context.options = this.damageOptions;\n        context.useWoundsAndVigor = this.woundsAndVigor;\n        context.multiTarget = context.targets.size > 1;\n        break;\n      }\n    }\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {object} options\n   * @param {Event} event\n   */\n  _onChangeForm(options, event) {\n    const formData = foundry.utils.expandObject(new FormDataExtended(this.element).object);\n\n    const name = event.target.name;\n    const parts = name.split(\".\");\n    if (parts[0] === \"targets\") {\n      const idx = parts[1];\n      const data = formData.targets[idx];\n      this._updateTarget(data.uuid, data);\n    }\n\n    switch (name) {\n      case \"value\":\n        this.value = formData.value;\n        break;\n      case \"reduction\":\n        this.reduction = formData.reduction;\n        break;\n    }\n\n    for (const target of this.targets) this._updateTarget(target.uuid);\n\n    // Merge options\n    foundry.utils.mergeObject(this.damageOptions, formData.options);\n\n    // Re-render if no action was triggered\n    if (!event.target.dataset?.action) this.render({ parts: [\"form\"] });\n  }\n\n  /** @override */\n  _onClose() {\n    super._onClose();\n\n    this.resolve?.(null);\n  }\n\n  /**\n   * Prepare damage/healing instances.\n   *\n   * Merge damage instances of same type.\n   */\n  _prepareInstances() {\n    const instances = this.options.instances;\n\n    for (let i = 1; i < instances.length; i++) {\n      const cur = instances[i];\n      if (cur.value == 0) continue;\n\n      // Merge with previous if one exists\n      for (let y = 0; y < i; y++) {\n        const prev = instances[y];\n        if (prev.value == 0) continue;\n        if (cur.types.equals(prev.types)) {\n          prev.value += cur.value;\n          cur.value = 0;\n          break;\n        }\n      }\n    }\n\n    Object.defineProperty(this, \"instances\", {\n      value: instances.filter((i) => i.value != 0),\n      writable: false,\n      enumerable: false,\n    });\n  }\n\n  _prepareTargets() {\n    const instances = this.instances ?? [];\n    for (const instance of instances) {\n      instance.label = pf1.utils.i18n.join(instance.names, \"u\", true);\n    }\n\n    const unknownTypes =\n      instances.length === 0 ||\n      instances.some((i) => i.standard.some((t) => ![\"physical\", \"energy\"].includes(t.category)));\n\n    Object.defineProperties(this, {\n      hasPhysical: {\n        value: this.isHealing\n          ? false\n          : unknownTypes\n            ? true\n            : instances.some((i) => i.standard.some((t) => t.category === \"physical\")),\n        enumerable: false,\n        writable: false,\n      },\n      hasEnergy: {\n        value: this.isHealing\n          ? false\n          : unknownTypes\n            ? true\n            : instances.some((i) => i.standard.some((t) => t.category === \"energy\")),\n        enumerable: false,\n        writable: false,\n      },\n    });\n\n    Object.defineProperty(this, \"targets\", {\n      value: new Collection(),\n      writable: false,\n      enumerable: false,\n    });\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpconfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    for (const actor of this.options.targets) {\n      const target = {\n        uuid: actor.uuid,\n        actor,\n        name: actor.token?.name || actor.name,\n        value: this.value,\n        isToken: !!actor.token,\n        ratio: 1,\n        dr: this.hasPhysical ? this.getResistances(actor, \"dr\") : [],\n        get visibleDR() {\n          return this.dr.some((r) => r.visible);\n        },\n        eres: this.hasEnergy ? this.getResistances(actor, \"eres\") : [],\n        get visibleER() {\n          return this.eres.some((r) => r.visible);\n        },\n        hardness: this.isHealing ? 0 : (actor.system.traits.hardness ?? 0),\n        reduction: undefined,\n        reductionChoices: 0, // Display choices\n        reductions: { hardness: this.isHealing ? false : actor.system.traits.hardness > 0 },\n        di: this.isHealing ? [] : (actor.system.traits?.di?.names ?? []),\n        dv: this.isHealing ? [] : (actor.system.traits?.dv?.names ?? []),\n        selected: true,\n      };\n\n      target.haveDIV = target.di.length || target.dv.length;\n      target.haveDER = target.dr.length || target.eres.length || target.hardness;\n\n      this.targets.set(target.uuid, target);\n\n      this._updateTarget(target.uuid);\n\n      const cfg = hpconfig.getActorConfig(actor);\n      this.woundsAndVigor ||= cfg.rules.useWoundsAndVigor ?? false;\n    }\n  }\n\n  /**\n   *\n   * @param {ActorPF} actor\n   * @param {\"dr\"|\"eres\"} resistanceType\n   * @returns {object[]} - Array of results from {@link ActorPF._parseResistance()}\n   */\n  getResistances(actor, resistanceType = \"dr\") {\n    const res = actor.system.traits?.[resistanceType];\n    if (!res) return;\n\n    const resistances = [];\n\n    if (res.custom) {\n      for (const entry of res.custom.split(pf1.config.re.traitSeparator)) {\n        const re = actor._parseResistanceEntry(entry, resistanceType);\n        resistances.push(re);\n      }\n    }\n    if (res.value?.length) {\n      for (const entry of res.value) {\n        const re = actor._parseResistanceEntry(entry, resistanceType);\n        resistances.push(re);\n      }\n    }\n\n    const damageTypes = new Set(this.instances.map((i) => [...i.types]).flat());\n\n    // Add in data used by this dialog\n    const enrichResistance = (res) => {\n      res.value = res.amount;\n      res.active = false; // Toggled\n      res.typeIds = [res.type0?.id, res.type1?.id].filter((t) => t);\n      res.visible = true; // Shown\n      res.enabled = true; // Available for toggling\n      res.hasGeneric = res.isDR && (res.typeIds.length === 0 || res.typeIds.includes(\"\"));\n\n      // Set generic resistances to be active by default\n      if (res.hasGeneric) {\n        res.active = true;\n      } else {\n        // Operator: true -> OR; false -> AND\n        if (res.operator) {\n          // OR; if any of the resistance types are in the damage types, the resistance is overcome\n          res.active = !res.typeIds.some((t) => damageTypes.has(t));\n        } else {\n          // AND; if all of the resistance types are in the damage types, the resistance is overcome\n          res.active = !res.typeIds.every((t) => damageTypes.has(t));\n        }\n      }\n\n      // TODO: Disable DR/ER that did not match\n      // TODO: Materials\n      //if (!res.active) res.disabled = true;\n    };\n\n    for (const res of resistances) enrichResistance(res);\n\n    return resistances;\n  }\n\n  /**\n   * Update target data based on form data and recalculate values.\n   *\n   * @internal\n   * @param {string} targetId\n   * @param {object} [data] - Update data\n   */\n  _updateTarget(targetId, data) {\n    const target = this.targets.get(targetId);\n    if (data) {\n      const { dr, eres } = data;\n      delete data.dr;\n      delete data.eres;\n\n      foundry.utils.mergeObject(target, data);\n\n      if (dr) {\n        for (let i = 0; i < target.dr.length; i++) dr[i] ??= { active: false };\n        Object.values(dr).forEach((rdata, idx) => foundry.utils.mergeObject(target.dr[idx], rdata));\n      }\n\n      if (eres) {\n        for (let i = 0; i < target.eres.length; i++) eres[i] ??= { active: false };\n        Object.values(eres).forEach((rdata, idx) => foundry.utils.mergeObject(target.eres[idx], rdata));\n      }\n    }\n\n    // Update value\n    target.value = Math.floor(this.value * (target.ratio ?? 0));\n    // Reduction choices\n    let reductionChoices = 0;\n    reductionChoices += target.dr.filter((r) => r.active).reduce((total, cur) => total + cur.value, 0);\n    reductionChoices += target.eres.filter((r) => r.active).reduce((total, cur) => total + cur.value, 0);\n    // TODO: Handle hardness more like the others\n    if (target.reductions.hardness) reductionChoices += target.hardness || 0;\n\n    target.reductionChoices = reductionChoices;\n\n    // Reduction input\n    const reduceAll = this.reduction || 0;\n    const baseReduction = target.reduction || 0;\n\n    // Reduce and clamp\n    target.value = target.value - reductionChoices - baseReduction;\n    if (target.value < 0) target.value = 0;\n    target.totalValue = target.value - reduceAll;\n    if (target.totalValue < 0) target.totalValue = 0;\n  }\n\n  /**\n   * Apply health change\n   *\n   * @param {Event} event\n   * @param {HTMLElement} target\n   * @this {ApplyDamage}\n   */\n  static async _onApply(event, target) {\n    event.preventDefault();\n\n    const resolve = this.resolve;\n    this.resolve = null; // Prevent _onClose() calling resolve\n    const config = {\n      value: this.options.value,\n      reduction: this.reduction || 0,\n      isHealing: this.isHealing,\n      asWounds: this.asWounds,\n      asNonlethal: this.asNonlethal,\n      instances: this.instances,\n      targets: this.targets,\n    };\n\n    // This causes clicks to go through the dialog\n    this.element.inert = true;\n\n    // Applied value with general damage reduction accounted for\n    let value = Math.max(0, this.value);\n    if (this.isHealing) value = -value; // Flip healing\n\n    const updated = [];\n    try {\n      const promises = [];\n\n      for (const target of this.targets) {\n        const applyDamageOpts = this._getTargetDamageOptions(target);\n        const p = target.actor.applyDamage(value, applyDamageOpts);\n        updated.push(target.actor);\n        promises.push(p);\n      }\n\n      const targetCount = await Promise.all(promises).then((res) => res.filter((r) => !!r).length);\n\n      value = Math.abs(value);\n      if (this.isHealing)\n        ui.notifications.info(game.i18n.format(\"PF1.Application.Damage.ApplyHeal\", { targets: targetCount }));\n      else ui.notifications.info(game.i18n.format(\"PF1.Application.Damage.ApplyDamage\", { targets: targetCount }));\n    } catch (err) {\n      ui.notifications.error(err.message, { console: false });\n      throw err;\n    } finally {\n      this.close();\n\n      config.updated = updated;\n      resolve(config);\n    }\n  }\n\n  _getTargetDamageOptions(target) {\n    const options = pf1.utils.deepClone({\n      ...this.damageOptions, // Spread damage options in, allowing modules to extend the options and slip in extra data\n      reduction: (target.reduction || 0) + (this.reduction || 0) + target.reductionChoices,\n      ratio: target.ratio ?? 1,\n      event: this.options.event,\n      message: this.options.message,\n      element: this.options.element,\n      instances: this.instances,\n    });\n    return options;\n  }\n\n  /**\n   *\n   * @param {object} options - Options passed to apply damage\n   * @param {object} [renderOptions] - Render options passed to the application.\n   * @returns {Promise<null|object>} - Null if cancelled, object describing applied settings.\n   */\n  static async wait(options, renderOptions = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      const app = new this(options);\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * The various {@link Application}s used by the Pathfinder 1e system.\n *\n * @module\n */\n\nimport { CompendiumBrowser } from \"./compendium-browser/compendium-browser.mjs\";\n\nexport * as actor from \"./actor/_module.mjs\";\nexport * as item from \"./item/_module.mjs\";\nexport * as component from \"./component/_module.mjs\";\nexport * as settings from \"./settings/_module.mjs\";\nexport * as compendiumBrowser from \"./compendium-browser/_module.mjs\";\nexport * as journal from \"./journal/_module.mjs\";\nexport * as mixin from \"./mixins/_module.mjs\";\nexport * as utils from \"./utils/_module.mjs\";\n\nexport { ActionSelector } from \"./action-selector.mjs\";\nexport { AttackDialog } from \"./attack-dialog.mjs\";\nexport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\nexport { ChangeLogWindow } from \"./change-log.mjs\";\nexport { CurrencyTransfer } from \"./currency-transfer.mjs\";\nexport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\nexport { EntrySelector } from \"./entry-selector.mjs\";\nexport { ItemSelector } from \"./item-selector.mjs\";\nexport { HelpBrowserPF } from \"./help-browser.mjs\";\nexport { Widget_ItemPicker } from \"./item-picker.mjs\";\nexport { LevelUpForm } from \"./level-up.mjs\";\nexport { PointBuyCalculator } from \"./point-buy-calculator.mjs\";\nexport { ScriptEditor } from \"./script-editor.mjs\";\nexport { SensesSelector } from \"./senses-selector.mjs\";\nexport { SkillEditor } from \"./skill-editor.mjs\";\nexport { ContentSourceEditor } from \"./content-source-editor.mjs\";\nexport { ActorTraitSelector } from \"./trait-selector.mjs\";\nexport { VisionSharingSheet } from \"./vision-sharing.mjs\";\nexport { ExperienceDistributor } from \"./experience-distributor.mjs\";\nexport { ChangeEditor } from \"./change-editor.mjs\";\n\nexport { ItemDirectoryPF } from \"./sidebar/items-directory.mjs\";\nexport { Troubleshooter } from \"./troubleshooter.mjs\";\n\nexport { ActorSelector } from \"./actor-selector.mjs\";\nexport { SplitStack } from \"./split-stack.mjs\";\nexport { HTMLEditor } from \"./html-editor.mjs\";\n\nexport { ApplyDamage } from \"./apply-damage.mjs\";\n\n/**\n * {@link CompendiumBrowser}s for the various compendiums.\n *\n * @type {Record<string, CompendiumBrowser>}\n */\nexport const compendiums = {};\nexport { helpBrowser } from \"./help-browser.mjs\";\n","import { AbstractListSelector } from \"@app/abstract-list-selector.mjs\";\n\n/**\n * An application that allows the user to configure change flags on an item\n */\nexport class EntrySelector extends AbstractListSelector {\n  static DEFAULT_OPTIONS = {\n    classes: [\"entry-selector\"],\n    position: {\n      width: 300,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/entry-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    super(options);\n\n    if (options.title) this.subtitle = game.i18n.localize(options.title);\n\n    // Prepare data and convert it into format compatible with the editor\n    this.isFlag = this.options.flag === true;\n    this.isBoolean = this.options.boolean === true;\n    this.isFlat = this.options.flat === true;\n    const data = foundry.utils.deepClone(\n      foundry.utils.getProperty(this.document, this.attribute) ?? (this.isFlag ? {} : [])\n    );\n\n    this.originalEntries = data;\n    this.entries = this.isFlag ? (this.isBoolean ? Object.keys(data).map((d) => [d]) : Object.entries(data)) : data;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.id = `EntrySelector-${options.name.replaceAll(\".\", \"-\")}-${options.document.uuid.replaceAll(\".\", \"-\")}`;\n\n    const isBoolean = options.boolean === true;\n    // Increase width for non-boolean selector\n    // TODO: Needs better solution\n    if (!isBoolean) {\n      options.position ??= {};\n      options.position.width = Math.max(options.position?.width ?? 0, 360);\n    }\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the dialog window.\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    const item = this.document;\n    const actor = item.actor;\n    const title = this.subtitle ?? game.i18n.localize(\"PF1.Application.EntrySelector.Title\");\n    if (item) {\n      if (actor) {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleOwned\", {\n          item: item.name,\n          actor: actor.name,\n          title,\n        });\n      } else {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleIsolated\", { item: item.name, title });\n      }\n    } else {\n      return title;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId, context, options) {\n    let rv = await super._preparePartContext(partId, context, options);\n\n    if (partId === \"form\") {\n      rv ??= {};\n      const entries = this.entries.map((entry) =>\n        this.isFlat ? [entry, this.dtypes[entry]] : entry.map((o2, a) => [o2, this.dtypes[a]])\n      );\n\n      rv.entries = entries;\n      rv.isFlat = this.isFlat;\n      rv.isBoolean = this.isBoolean;\n    }\n\n    return rv;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @override\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    const a = event.currentTarget;\n\n    if (this.isFlat) {\n      const dataType = this.dtypes[a];\n      if (dataType === \"Number\") return 0;\n      return \"\";\n    } else {\n      const obj = [];\n      for (let a = 0; a < this.dataCount; a++) {\n        const dataType = this.dtypes[a];\n        if (dataType === \"Number\") obj.push(0);\n        else obj.push(\"\");\n      }\n      return obj;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {EntrySelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    const a = event.target;\n\n    const tr = a.closest(\"tr.entry\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = parseInt(a.dataset.index);\n    const value = a.value;\n\n    if (a.dataset.dtype === \"Number\") {\n      let v = parseFloat(value);\n      if (isNaN(v)) v = 0;\n      if (this.isFlat) this.entries[index] = Math.floor(v * 100) / 100;\n      else this.entries[index][index2] = Math.floor(v * 100) / 100;\n    } else {\n      if (this.isFlat) this.entries[index] = value;\n      else this.entries[index][index2] = value;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @override\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    const updateData = {};\n\n    if (this.isFlag) {\n      // Convert editor data for flags\n      const newKeys = new Set(); // Needed for deletion detection\n      this.entries.forEach(([key, value]) => {\n        newKeys.add(key);\n        updateData[`${this.attribute}.${key}`] = this.isBoolean ? true : value;\n      });\n\n      // Handle deletions\n      const oldKeys = Object.keys(this.originalEntries);\n      oldKeys.forEach((key) => {\n        if (!newKeys.has(key)) updateData[`${this.attribute}.-=${key}`] = null;\n      });\n    } else {\n      updateData[this.attribute] = this.entries;\n    }\n\n    return updateData;\n  }\n}\n","/**\n * Active Effect extension for system properties.\n */\nexport class ActiveEffectPF extends ActiveEffect {\n  /**\n   * @protected\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Record current initiative\n    // But only if the current actor is in combat\n    const combat = actor.getCombatants()[0]?.combat;\n    if (combat) {\n      // Set flag only if it doesn't exist in the data already\n      const init = this.system.initiative ?? data.system?.initiative;\n      if (init === undefined) {\n        this.updateSource({ \"system.initiative\": combat.initiative });\n      }\n    }\n  }\n\n  /**\n   * Parent actor\n   *\n   * @remarks\n   * - Null if no parent exists.\n   *\n   * @type {Actor|null}\n   */\n  get actor() {\n    const parent = this.parent;\n    if (parent instanceof Actor) return parent;\n    else return parent?.actor || null;\n  }\n\n  /**\n   * @remarks BUG: Foundry v11 and older controls visibility through this.\n   * @override\n   * @type {boolean}\n   */\n  get isTemporary() {\n    // Allow overlays to always show, no matter what else\n    if (this.statuses.size && this.getFlag(\"core\", \"overlay\")) return true;\n\n    // Hide everything told to hide\n    if (this.getFlag(\"pf1\", \"show\") === false) return false;\n\n    // Hide buffs if buff hiding option is enabled\n    const isTracker = this.isTracker;\n    if (isTracker) {\n      // Hide based on parent item hide toggle\n      if (this.parent?.system?.hideFromToken) return false;\n      // Hide based on global setting\n      if (game.settings.get(\"pf1\", \"hideTokenConditions\")) return false;\n    }\n\n    return isTracker || super.isTemporary;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 to deal with problems of isTemporary.\n   *\n   * @internal\n   * @returns {boolean} - Has duration\n   */\n  get _hasDuration() {\n    const duration = this.duration.seconds ?? (this.duration.rounds || this.duration.turns);\n    // Allow zero for single-turn duration effects to register correctly.\n    return Number.isFinite(duration) && duration >= 0;\n  }\n\n  /**\n   * Initiative counter\n   *\n   * Present only if the AE was started during combat\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.system.initiative;\n  }\n\n  /**\n   * Tracking a buff\n   *\n   * @remarks\n   * - There should be only one tracker per item.\n   *\n   * @type {boolean}\n   */\n  get isTracker() {\n    return this.system.isTracker ?? false;\n  }\n\n  /** @override */\n  get isSuppressed() {\n    if (this.parent instanceof Item) return !this.parent.isActive;\n    return false;\n  }\n}\n","/**\n * Chat Message document extension\n */\nexport class ChatMessagePF extends ChatMessage {\n  /** @override */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const flags = data.flags?.pf1;\n    if (!flags) return;\n\n    // Print warnings, leave changes to migration\n    if (flags.metadata) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.metadata has been deprecated in favor of message.system\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Migration required\n    }\n\n    if (flags.identifiedInfo) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.identifiedInfo has been deprecated in favor of message.system\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Migration required\n    }\n\n    if (flags.subject) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.subject has been deprecated in favor of message.system.subject\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Move data to new location\n      this.updateSource({\n        flags: { pf1: { \"-=subject\": null } },\n        system: { subject: flags.subject },\n      });\n    }\n  }\n\n  /**\n   * Replaces all roll data object in a given object with {@link Roll} instances\n   *\n   * @param {object} maybeRollObject - The object to replace roll data objects with {@link Roll} instances\n   * @returns {object} The object with all roll data objects replaced with {@link Roll} instances\n   * @private\n   */\n  static _initRollObject(maybeRollObject) {\n    // If object is an array, map to roll objects\n    if (Array.isArray(maybeRollObject)) {\n      return maybeRollObject.map((o) => this._initRollObject(o));\n    }\n\n    // If this is a roll object, initialize it\n    if (maybeRollObject != null && typeof maybeRollObject === \"object\" && \"class\" in maybeRollObject) {\n      return Roll.fromData(maybeRollObject);\n    }\n\n    // If object is a regular object, recurse into it to find roll to initialize\n    if (typeof maybeRollObject === \"object\" && maybeRollObject != null) {\n      for (const [k, v] of Object.entries(maybeRollObject)) {\n        maybeRollObject[k] = this._initRollObject(v);\n      }\n    }\n    // Return object in which all roll data has been replaced by Roll instances\n    return maybeRollObject;\n  }\n\n  /**\n   * Linked action.\n   *\n   * @remarks\n   * - Null is returned if no action is linked.\n   * - Undefined is returned if the linked action is not found.\n   *\n   * @type {ItemAction|undefined|null}\n   */\n  get actionSource() {\n    const actionId = this.system.action?.id;\n    return actionId ? this.itemSource?.actions.get(actionId) : null;\n  }\n\n  /**\n   * Linked item.\n   *\n   * @remarks\n   * - Null is returned if no item is linked\n   * - Undefined if item is not found\n   *\n   * @type {ItemPF|undefined|null}\n   */\n  get itemSource() {\n    const itemId = this.system.item?.id;\n    if (itemId) {\n      // fromUuidSync(this.system.actor)\n      const actor = this.constructor.getSpeakerActor(this.speaker);\n      return actor?.items.get(itemId);\n    }\n    return null;\n  }\n\n  /**\n   * Has linked item.\n   *\n   * @deprecated\n   * @type {boolean}\n   */\n  get hasItemSource() {\n    foundry.utils.logCompatibilityWarning(\n      \"ChatMessagePF.hasItemSource has been deprecated in favor of ChatMessagePF.itemSource\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return this.system.item !== undefined;\n  }\n\n  /**\n   * Associated measured template\n   *\n   * @type {MeasuredTemplatePF|null}\n   */\n  get measureTemplate() {\n    const templateId = this.system.template;\n    if (!templateId) return null;\n\n    return fromUuidSync(templateId) ?? canvas.templates.get(templateId) ?? null;\n  }\n\n  /**\n   * Targeted tokens.\n   *\n   * @type {Array<TokenPF>}\n   */\n  get targets() {\n    const targetIds = this.system.targets ?? [];\n    if (targetIds.length === 0) return targetIds;\n\n    // Legacy IDs from old messages\n    if (/^\\w{16}$/.test(targetIds[0])) return canvas.tokens.placeables.filter((o) => targetIds.includes(o.id));\n\n    return targetIds.map((uuid) => fromUuidSync(uuid)?.object).filter((t) => !!t);\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this._setTitle();\n  }\n\n  /**\n   * Soft assign chat card title if not present\n   *\n   * @internal\n   */\n  _setTitle() {\n    if (this.title) return;\n\n    // Speaker alias or speaker actor name\n    const user = this.speaker.alias || ChatMessage.getSpeakerActor(this.speaker)?.name;\n\n    switch (this.type) {\n      case \"item\": {\n        const item = this.itemSource;\n        if (user) this.title = `${item?.name} – ${user}`;\n        else this.title = `${item?.name}`;\n        break;\n      }\n      case \"action\": {\n        const item = this.itemSource;\n        const action = this.actionSource;\n\n        const title = `${item?.name} (${action?.name})`;\n        if (user) this.title = `${title} – ${user}`;\n        else this.title = title;\n        break;\n      }\n      case \"check\":\n        break;\n    }\n  }\n\n  /** @inheritDoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    /**\n     * An object containing Pathfinder specific rolls for this chat message,\n     * with a structure grouping them by their purpose.\n     *\n     * @type {object}\n     */\n    this.systemRolls = this.constructor._initRollObject(this.system.rolls ?? {});\n\n    // Compatibility shims\n    this.flags.pf1 ??= {};\n\n    const msg = this;\n\n    if (!(\"subject\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"subject\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.subject has been deprecated in favor of ChatMessagePF.system.subject\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return msg.system?.subject;\n        },\n      });\n    }\n\n    if (!(\"metadata\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"metadata\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.metadata has been deprecated in favor of ChatMessagePF.system\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return msg.system;\n        },\n      });\n    }\n\n    if (![\"item\", \"action\"].includes(this.type)) return;\n\n    if (!(\"identifiedInfo\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"identifiedInfo\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.identifiedInfo has been deprecated in favor of ChatMessagePF.system\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return {\n            identified: msg.system.item?.identified ?? true,\n            name: msg.system.item?.name,\n            description: msg.system.item?.description,\n            actionName: msg.system.action?.name,\n            actionDescription: msg.system.action?.description,\n          };\n        },\n      });\n    }\n  }\n\n  /**\n   * Chat message frame context data.\n   *\n   * @bug Happens too late for hooks\n   * @override\n   * @param {object} context\n   *\n   * Synced with Foundry v12.331 (replaced by {@link renderHTML} override in v13)\n   */\n  async getHTML(options) {\n    const html = await super.getHTML(options);\n    switch (this.type) {\n      case \"check\":\n        html[0].classList.add(\"basic-check\", \"pf1\");\n        break;\n      case \"item\":\n        html[0].classList.add(\"item-card\", \"pf1\");\n        break;\n      case \"action\":\n        html[0].classList.add(\"action-card\", \"pf1\");\n        break;\n      default:\n        if (this.isRoll) html[0].classList.add(\"basic-roll\", \"pf1\");\n        break;\n    }\n\n    if (Hooks.events.renderChatMessagePF?.length) {\n      Hooks.callAll(\"renderChatMessagePF\", this, html[0]);\n    }\n\n    return html;\n  }\n\n  /**\n   * Render card content\n   *\n   * @bug Happens too late for hooks\n   * @override\n   * @param {object} options - Render options\n   * @returns {HTMLElement}\n   * Synced with v13.339\n   */\n  async renderHTML(options) {\n    const html = await super.renderHTML(options);\n    switch (this.type) {\n      case \"check\":\n        html.classList.add(\"basic-check\", \"pf1\");\n        break;\n      case \"item\":\n        html.classList.add(\"item-card\", \"pf1\");\n        break;\n      case \"action\":\n        html.classList.add(\"action-card\", \"pf1\");\n        break;\n      default:\n        if (this.isRoll) html.classList.add(\"basic-roll\", \"pf1\");\n        break;\n    }\n\n    if (Hooks.events.renderChatMessagePF?.length) {\n      Hooks.callAll(\"renderChatMessagePF\", this, html);\n    }\n\n    return html;\n  }\n\n  /**\n   * @override\n   * @param {boolean} source - Return source data\n   * @param {boolean} clean - Clean the source data of excess data\n   * @returns {object} - Raw data\n   */\n  toObject(source = true, clean = true) {\n    const data = super.toObject(source);\n\n    if (clean && data.system) this.system.constructor.pruneData?.(data.system);\n\n    return data;\n  }\n\n  /** @override */\n  _onCreate(data, options, userId) {\n    super._onCreate(data, options, userId);\n\n    const user = game.users.get(userId);\n\n    switch (this.type) {\n      case \"check\":\n        this._onCreateCheck(user);\n        break;\n    }\n  }\n\n  /**\n   * On Check Message creation\n   *\n   * @protected\n   * @param {User} user - User who created the message\n   */\n  _onCreateCheck(user) {\n    // Only active GM should proceed due to ownership of reference card\n    if (!game.users.activeGM?.isSelf) return;\n\n    const saveId = this.system.subject?.save;\n    if (!saveId) return;\n\n    const { scene: sceneId, token: tokenId } = this.speaker;\n    const token = game.scenes.get(sceneId)?.tokens.get(tokenId);\n    if (!token) return;\n\n    const refMsg = fromUuidSync(this.system.reference);\n    if (!refMsg) return;\n    if (!refMsg.system.targets?.length) return; // No targets\n\n    const check = this.rolls[0]?.total;\n    if (!Number.isFinite(check)) return;\n\n    // Record the rolled save in the card that prompted it\n    //const defenses = refMsg.getFlag(\"pf1\", \"targetDefense\") ?? {};\n    //const oldSave = foundry.utils.getProperty(defenses, uuid)?.save?.[saveId];\n    // This overwrites the save regardless who did it and why\n    // Valid rerolls, GM rolling, etc. make it not viable for enforcement\n    refMsg.setFlag(\"pf1\", \"targetDefense\", { [token.uuid]: { save: { [saveId]: check } } });\n  }\n}\n\n/**\n * Hack for {@link ChatMessagePF#renderHTML} and {@link ChatMessage.getHTML} happening too soon or too late for modules getting the render hook.\n */\nHooks.on(\"renderChatMessage\", function messageHookPriorityHack(msg, html) {\n  if (html instanceof jQuery) html = html[0]; // v12 compatibility\n\n  switch (this.type) {\n    case \"check\":\n      html.classList.add(\"basic-check\", \"pf1\");\n      break;\n    case \"item\":\n      html.classList.add(\"item-card\", \"pf1\");\n      break;\n    case \"action\":\n      html.classList.add(\"action-card\", \"pf1\");\n      break;\n    default:\n      if (this.isRoll) html.classList.add(\"basic-roll\", \"pf1\");\n      break;\n  }\n});\n","import { getSkipActionPrompt } from \"./settings.mjs\";\n\n/* -------------------------------------------- */\n\n/**\n * @internal\n * @param {string} combatantId - Combatant ID\n * @returns {Promise<Combatant>} - Result of {@link CombatantPF.duplicateWithData}\n */\nasync function duplicateCombatantInitiativeDialog(combatantId) {\n  /** @type {CombatantPF} */\n  const combatant = game.combat.combatants.get(combatantId);\n  if (!combatant) return void ui.notifications.warn(game.i18n.localize(\"PF1.Warning.NoCombatantFound\"));\n\n  const offset = await pf1.utils.dialog.getNumber({\n    title: `${game.i18n.localize(\"PF1.DuplicateInitiative\")}: ${combatant.name}`,\n    label: game.i18n.localize(\"PF1.InitiativeOffset\"),\n    initial: 0,\n    classes: [\"duplicate-initiative\"],\n  });\n\n  if (!Number.isFinite(offset)) return; // Cancelled\n\n  return combatant.duplicateWithData({ initiative: (combatant.initiative ?? 0) + offset });\n}\n\nfunction addCombatTrackerContextOptions(html, entries) {\n  entries.push({\n    name: \"PF1.DuplicateInitiative\",\n    icon: '<i class=\"fa-solid fa-dice-d20\"></i>',\n    callback: (li) => {\n      if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n      duplicateCombatantInitiativeDialog(li.dataset.combatantId);\n    },\n  });\n}\n\nHooks.on(\"getCombatTrackerEntryContext\", addCombatTrackerContextOptions); // v12\nHooks.on(\"getCombatTrackerContextOptions\", addCombatTrackerContextOptions); // v13\n\n/**\n * Combat manager extension\n */\nexport class CombatPF extends Combat {\n  /**\n   * @override\n   * @param {string[]} ids Combatant IDs to roll initiative for.\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.formula] - Formula override. Passed to {@link Combatant.getInitiativeRoll}\n   * @param {string} [options.d20] - d20 override. Passed to {@link Combatant.getInitiativeRoll}\n   * @param {string} [options.bonus=null] - Formula for bonus to initiative\n   * @param {string} [options.rollMode] - Roll mode override.\n   * @param {boolean} [options.updateTurn] - Adjust current turn if the new init would shift it\n   * @param {object} [options.messageOptions={}] - Additional data for created chat message\n   * @param {boolean} [options.skipDialog=null] - Skip roll dialog\n   * Synced with Foundry v12.331\n   */\n  async rollInitiative(\n    ids,\n    { formula = null, d20, bonus = null, rollMode, updateTurn = true, messageOptions = {}, skipDialog = null } = {}\n  ) {\n    skipDialog ??= getSkipActionPrompt();\n    // Structure input data\n    ids = Array.isArray(ids) ? ids : [ids];\n\n    const currentId = this.combatant?.id;\n\n    // Shift rollmode to foundry standard parameter\n    if (rollMode) messageOptions.rollMode = rollMode;\n    rollMode = messageOptions.rollMode || game.settings.get(\"core\", \"rollMode\");\n\n    const roller = ids.length == 1 ? this.combatants.get(ids[0]) : null;\n    const rollerName = roller?.name ?? null;\n\n    // Show initiative dialog\n    if (!skipDialog) {\n      let check = true;\n      if (roller) {\n        const opts = roller.actor?.getInitiativeOptions?.();\n        if (opts.check === false) check = false;\n      }\n\n      const dialogData = await this.constructor.showInitiativeDialog({\n        d20,\n        check,\n        bonus,\n        rollMode,\n        name: rollerName,\n      });\n      if (!dialogData) return this;\n\n      rollMode = dialogData.rollMode;\n      messageOptions.rollMode = rollMode;\n      bonus = dialogData.bonus || \"\";\n      d20 = dialogData.d20;\n    }\n\n    // Iterate over Combatants, performing an initiative roll for each\n    const updates = [];\n    const messages = [];\n\n    for (const [i, id] of ids.entries()) {\n      // Get Combatant data (non-strictly)\n      /** @type {CombatantPF} */\n      const combatant = this.combatants.get(id);\n      if (!combatant?.isOwner) continue;\n\n      // Produce an initiative roll for the Combatant\n      const roll = combatant.getInitiativeRoll(formula, d20, bonus);\n      roll.options.flavor = game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.Initiative\") });\n\n      // Produce an initiative roll for the Combatant\n      await roll.evaluate();\n      if (roll.err) ui.notifications.warn(roll.err.message);\n\n      updates.push({ _id: id, initiative: roll.total });\n\n      // Per-combatant roll mode\n      let cRollMode = rollMode;\n\n      // Hide initiative rolls for hidden combatants, unless explicit roll mode was requested\n      const isHidden = combatant.token?.hidden || combatant.hidden;\n      if (isHidden && !messageOptions.rollMode && [\"roll\", CONST.DICE_ROLL_MODES.PUBLIC].includes(cRollMode)) {\n        cRollMode = messageOptions.rollMode || CONST.DICE_ROLL_MODES.PRIVATE;\n      }\n\n      const properties = [];\n      const notes = (await combatant.actor?.getContextNotesParsed?.(\"init\")) ?? [];\n      if (notes.length) {\n        properties.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n      }\n\n      // Create card template data\n      const templateData = {\n        formula: roll.formula,\n        tooltip: await roll.getTooltip(),\n        total: roll.total,\n        properties,\n      };\n\n      // Create base chat card data\n      let chatData = {\n        speaker: ChatMessage.implementation.getSpeakerActor({\n          actor: combatant.actor,\n          token: combatant.token,\n          alias: combatant.name, // Combatant name can differ from token name, so alias is needed here\n        }),\n        ...messageOptions,\n      };\n\n      chatData.rollMode ||= cRollMode;\n\n      // Mimic core Foundry data\n      foundry.utils.setProperty(chatData, \"flags.core.initiativeRoll\", true);\n\n      // Generate message proper via D20RollPF\n      chatData = await roll.toMessage(chatData, {\n        create: false,\n        rollMode: cRollMode,\n        subject: { core: \"init\" },\n        chatTemplateData: templateData,\n      });\n\n      if (i > 0) chatData.sound = null; // Only play 1 sound for the whole set\n      messages.push(chatData);\n    }\n\n    if (!updates.length) return this;\n\n    // Update multiple combatants\n    await this.updateEmbeddedDocuments(\"Combatant\", updates);\n\n    // Ensure the turn order remains with the same combatant\n    if (updateTurn && currentId) {\n      await this.update({ turn: this.turns.findIndex((t) => t.id === currentId) });\n    }\n\n    // Create multiple chat messages\n    await ChatMessage.implementation.create(messages);\n\n    return this;\n  }\n\n  /**\n   * @param {object} [options] - Additional options\n   * @param {string} [options.d20] Formula override\n   * @param {boolean} [options.check=true] - If false, no base d20 check is provided\n   * @param {string} [options.bonus] Bonus formula override\n   * @param {string} options.name Name of the roller\n   * @returns {Promise<object>} - Result\n   */\n  static async showInitiativeDialog({ d20 = null, check = true, bonus = null, name } = {}) {\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n\n    const template = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n    const dialogData = { d20, check, bonus, rollMode, rollModes: CONFIG.Dice.rollModes };\n\n    // Show dialog\n    // TODO: Use D20RollPF's prompt instead\n    return foundry.applications.api.DialogV2.wait({\n      window: {\n        icon: \"fa-solid fa-dice-d20\",\n        title:\n          (name ? name + \" – \" : \"\") + game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.Initiative\") }),\n      },\n      position: { width: 420 },\n      content: await renderTemplate(template, dialogData),\n      buttons: [\n        {\n          action: \"roll\",\n          default: true,\n          icon: \"fa-solid fa-dice-d20\",\n          label: game.i18n.localize(\"PF1.Roll\"),\n          callback: (event, button, html) => {\n            if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n            return new FormDataExtended(html.querySelector(\"form\")).object;\n          },\n        },\n      ],\n      close: () => null,\n      classes: [\"pf1-v2\", \"roll-prompt\", \"roll-initiative\"],\n      subject: { core: \"init\" },\n      rejectClose: false,\n    });\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {options} context - Context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.turn !== undefined || changed.round !== undefined) {\n      // Cache current world time here since actual time update can happen at random time in the future due to async code.\n      context.pf1 ??= {};\n      context.pf1.worldTime = game.time.worldTime;\n      this._onNewTurn(changed, context, userId);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    if (\"turn\" in changed || \"round\" in changed) {\n      // Record origin turn and round\n      context.pf1 ??= {};\n      context.pf1.from = { turn: this.turn, round: this.round };\n    }\n  }\n\n  /**\n   * New turn handling.\n   *\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   * @private\n   */\n  async _onNewTurn(changed, context, userId) {\n    if (!this._isForwardTime(changed, context)) return;\n\n    if (context.pf1?.from) {\n      const skipped = this._detectSkippedTurns(context.pf1.from, context);\n\n      if (game.users.activeGM?.isSelf) {\n        this._handleSkippedTurns(skipped, context);\n      }\n\n      const previous = this.turns.at(this.turn - 1);\n      if (!skipped.has(previous)) this._processEndTurn(context.pf1?.from, context);\n    }\n\n    this._processTurnStart(changed, context, userId);\n\n    this._processInitiative(context);\n  }\n\n  _isForwardTime(changed, context) {\n    // Non-UI turn progression does not have context.direction present to detect this otherwise\n    const t0 = context.pf1.from.turn,\n      r0 = context.pf1.from.round,\n      t1 = changed.turn ?? t0,\n      r1 = changed.round ?? r0,\n      rd = r1 - r0, // round delta\n      td = t1 - t0; // turn delta\n\n    if (rd < 0) return false;\n    else if (rd == 0 && td <= 0) return false;\n    return true;\n  }\n\n  /**\n   * Determine skipped turns\n   *\n   * @internal\n   * @param {object} from - Origin combat time frame\n   * @param {number} from.turn - From turn\n   * @param {number} from.round - From round\n   * @param {object} context - Update context\n   * @returns {Set<Combatant>} - Set of combatant IDs whose turn was skipped\n   */\n  _detectSkippedTurns({ turn, round } = {}, context) {\n    const roundChange = this.round !== round;\n\n    const skipped = new Set();\n\n    // No combatants skipped\n    if (!roundChange && turn + 1 === this.turn) return skipped;\n\n    // Determine skipped combatants\n    for (const [index, combatant] of this.turns.entries()) {\n      // Seeking first, not actually skipped\n      if (!roundChange && index <= turn) continue;\n      // Skipped\n      else if (index < this.turn) skipped.add(combatant);\n      // Skipped (usually via nextRound)\n      else if (roundChange && index > turn) skipped.add(combatant);\n    }\n\n    Hooks.callAll(\"pf1CombatTurnSkip\", this, skipped, context);\n\n    return skipped;\n  }\n\n  /**\n   * Handle effects of skipped turns.\n   *\n   * @internal\n   * @param {Set<Combatant>} skipped - Combatant IDs of those whose turn was skipped.\n   * @param {object} context - Combat update context\n   */\n  _handleSkippedTurns(skipped, context) {\n    const currentTurn = this.turn;\n    const event = \"turnEnd\";\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    // Expire effects for skipped combatants\n    for (const combatant of skipped) {\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      // Adjust expiration time for those who come after in initiative (their expiration was for previous round)\n      const turn = this.turns.findIndex((c) => c === combatant);\n      const turnTimeOffset = timeOffset + (turn > currentTurn) ? -CONFIG.time.roundTime : 0;\n\n      actor.expireActiveEffects?.({ timeOffset: timeOffset + turnTimeOffset, worldTime, combat: this, event });\n    }\n  }\n\n  /**\n   * Handle end of turn\n   *\n   * @internal\n   * @param {object} originTime - Origin time frame\n   * @param {number} originTime.turn - Turn that ended\n   * @param {number} originTime.round - Round on which the turn ended\n   * @param {object} context - Context\n   */\n  async _processEndTurn({ turn, round } = {}, context = {}) {\n    const previous = this.turns.at(turn);\n    const actor = previous.actor;\n    if (!actor) return;\n\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnEnd\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process current combatant: expire active effects & buffs.\n   *\n   * @param {object} changed Update data\n   * @param {options} context Context options\n   */\n  async _processTurnStart(changed, context) {\n    const actor = this.combatant?.actor;\n    if (!actor) return;\n\n    // Attempt to perform expiration on owning active user\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnStart\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n\n    try {\n      await actor.rechargeItems?.({ period: \"round\", exact: true });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process end of durations based on initiative.\n   *\n   * Only active GM processes these to avoid conflicts and logic bloat.\n   *\n   * @internal\n   * @param {object} [context] - Update context\n   */\n  _processInitiative(context = {}) {\n    if (!game.users.activeGM?.isSelf) return;\n\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n    const timeOffset = context.advanceTime ?? 0;\n\n    const initiative = this.initiative;\n    for (const combatant of this.combatants) {\n      if (combatant.isDefeated) continue;\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      actor.expireActiveEffects?.({ combat: this, initiative, timeOffset, worldTime });\n    }\n  }\n\n  _onDelete(options, userId) {\n    super._onDelete(options, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Show experience distributor after combat\n    if (!this.started) return;\n    const xpCfg = game.settings.get(\"pf1\", \"experienceConfig\");\n    if (xpCfg.disable) return;\n\n    const openUI = xpCfg.openDistributor;\n    const skipPrompt = pf1.documents.settings.getSkipActionPrompt();\n    if (openUI ^ skipPrompt) {\n      pf1.applications.ExperienceDistributor.fromCombat(this);\n    }\n  }\n\n  /**\n   * Get current initiative.\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.combatant?.initiative;\n  }\n}\n","/**\n * Combatant extension.\n */\nexport class CombatantPF extends Combatant {\n  /**\n   * Combat tracker resource update.\n   *\n   * Required to deal with 0 values disappearing with core implementation\n   *\n   * @override\n   * @returns {*} Resource value.\n   *\n   * Synchronized with Foundry 12.331\n   */\n  updateResource() {\n    if (!this.actor || !this.combat) return (this.resource = null);\n    return (this.resource = foundry.utils.getProperty(this.actor.system, this.parent.settings.resource) ?? null);\n  }\n\n  /**\n   * Duplicate combatant with added data.\n   *\n   * @param {object} data - Override data\n   * @param {object} context - Creation context\n   * @returns {Promise<Combatant>} - Created combatant\n   */\n  duplicateWithData(data = {}, context = {}) {\n    console.debug(\"Duplicating combatant:\", this);\n    context.parent ??= this.combat;\n    return this.constructor.create(foundry.utils.mergeObject(this.toObject(), data), context);\n  }\n\n  /**\n   * Get unevaluated initiative roll instance.\n   *\n   * @override\n   * @param {string} [formula] Initiative formula override\n   * @param {string} [d20=null] D20 override. Non-standard option.\n   * @param {number} [bonus=null] Bonus to initiative. Non-standard option.\n   * @returns {pf1.dice.D20RollPF} Initiative roll instance\n   *\n   * Synchronized with Foundry VTT 12.331\n   */\n  getInitiativeRoll(formula, d20 = null, bonus = null) {\n    const options = this.actor?.getInitiativeOptions?.() ?? {};\n\n    formula ||= this._getInitiativeFormula(d20);\n    const rollData = this.actor?.getRollData() || {};\n    if (bonus) {\n      rollData.bonus = bonus;\n      formula += \" + @bonus\";\n    }\n\n    return new pf1.dice.D20RollPF(formula, rollData, options);\n  }\n\n  /**\n   * Override the default Initiative formula to customize special behaviors of the game system.\n   *\n   * Apply tiebreaker if desired\n   *\n   * See Combat._getInitiativeFormula for more detail.\n   *\n   * @override\n   * @todo Build proper formula\n   * @param {string} [d20=pf1.dice.D20RollPF.standardRoll] Default check roll\n   * @returns {string} Initiative formula\n   *\n   * Synchronized with Foundry 12.331\n   */\n  _getInitiativeFormula(d20) {\n    const defaultParts = [];\n\n    const options = this.actor?.getInitiativeOptions?.() ?? {};\n    if (options.check !== false) {\n      defaultParts.push(d20 || pf1.dice.D20RollPF.standardRoll);\n    }\n    defaultParts.push(`@attributes.init.total[${game.i18n.localize(\"PF1.Initiative\")}]`);\n\n    const actor = this.actor;\n    if (actor && game.settings.get(\"pf1\", \"initiativeTiebreaker\"))\n      defaultParts.push(`(@attributes.init.total / 100)[${game.i18n.localize(\"PF1.Tiebreaker\")}]`);\n    const parts = CONFIG.Combat.initiative.formula ? CONFIG.Combat.initiative.formula.split(/\\s*\\+\\s*/) : defaultParts;\n    if (!actor) return parts[0] || \"0\";\n    return parts.filter((p) => !!p).join(\" + \");\n  }\n}\n","/**\n * Transforms a key input into an array of objects for the keybinding API\n *\n * @param {string} key - A key string\n * @returns {{\"key\": string}[]} Keybinding objects\n */\nconst getLeftRight = (key) => [`${key}Left`, `${key}Right`].map((k) => ({ key: k }));\n\nconst SHIFT_KEYS = getLeftRight(\"Shift\");\nconst CTRL_KEYS = getLeftRight(\"Control\");\n\n/**\n * Registers the system's keybindings\n *\n * @internal\n */\nexport const registerSystemControls = () => {\n  game.keybindings.register(\"pf1\", \"skipConfirmPrompt\", {\n    name: \"PF1.KEYBINDINGS.SkipConfirmPrompt.Name\",\n    uneditable: SHIFT_KEYS,\n    onDown: () => {\n      pf1.skipConfirmPrompt = true;\n    },\n    onUp: () => {\n      pf1.skipConfirmPrompt = false;\n    },\n  });\n};\n","/**\n * Token Document extension\n */\nexport class TokenDocumentPF extends TokenDocument {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    this._preCreateSetSize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.recursive === false) return;\n\n    const flags = changed.flags?.pf1;\n    if (flags) {\n      // Delete flags instead of turning them false\n      const deleteFlags = [\"staticSize\", \"disableLowLight\", \"customVisionRules\"];\n      for (const flag of deleteFlags) {\n        if (flags[flag] === false) {\n          flags[`-=${flag}`] = null;\n          delete flags[flag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle actor size during token creation.\n   *\n   * TODO: This has overlapping functionality with Actor.getTokenDocument() that needs to be unified\n   */\n  _preCreateSetSize() {\n    if (!this.actor) return;\n\n    // Apply token size\n    if (this.getFlag(\"pf1\", \"staticSize\")) return;\n    const sizeKey = this.actor.system.traits?.size?.base;\n    const sizeConf = pf1.config.tokenSizes[sizeKey];\n    if (!sizeConf) return;\n\n    this.updateSource({\n      width: sizeConf.w,\n      height: sizeConf.h,\n      texture: {\n        scaleX: sizeConf.scale * this.actor.prototypeToken.texture.scaleX,\n        scaleY: sizeConf.scale * this.actor.prototypeToken.texture.scaleY,\n      },\n    });\n  }\n\n  /**\n   * Called by getTrackedAttributes() when not dealing with data models.\n   *\n   * @override\n   */\n  static _getTrackedAttributesFromObject(data, path = []) {\n    if (path[0] === \"conditions\") return { bar: [], value: [] };\n\n    const attr = super._getTrackedAttributesFromObject(data, path);\n\n    if (path[0] === \"attributes\") {\n      if (path.length === 1) {\n        // These are necessary for token config inclusion which does not delve into hp, vigor or wounds for some reason\n        // This has no effect on combat tracker resources for some reason\n        attr.value.push(\n          [\"attributes\", \"hp\", \"value\"],\n          [\"attributes\", \"hp\", \"offset\"],\n          [\"attributes\", \"hp\", \"max\"],\n          [\"attributes\", \"hp\", \"temp\"],\n          [\"attributes\", \"hp\", \"nonlethal\"],\n          [\"attributes\", \"vigor\", \"value\"],\n          [\"attributes\", \"vigor\", \"offset\"],\n          [\"attributes\", \"vigor\", \"max\"],\n          [\"attributes\", \"vigor\", \"temp\"],\n          [\"attributes\", \"wounds\", \"value\"],\n          [\"attributes\", \"wounds\", \"offset\"],\n          [\"attributes\", \"wounds\", \"max\"]\n        );\n      }\n\n      const hpPart = path[1];\n      // Needed by combat tracker and token resources for consistent availability of bars\n      if (path.length === 2 && [\"hp\", \"wounds\", \"vigor\"].includes(hpPart)) {\n        attr.value.push(\n          [\"attributes\", hpPart, \"value\"],\n          [\"attributes\", hpPart, \"max\"],\n          [\"attributes\", hpPart, \"offset\"]\n        );\n        attr.bar.push([\"attributes\", hpPart]);\n      }\n    }\n\n    // If data is missing entirely, AC will not be listed but the others will\n    if (!data) {\n      attr.value.push([\"attributes\", \"ac\", \"normal\", \"total\"]);\n    }\n\n    return attr;\n  }\n\n  /**\n   * Hijack Token health bar rendering to include temporary and temp-max health in the bar display\n   *\n   * @override\n   * @param {string} barName - Bar name\n   * @param {object} [options] - Additional options\n   * @param {string} [options.alternative] - Alt bar path to use\n   * @returns {object|null} - Attribute to be displayed if any\n   * Synced with Foundry v12.331\n   */\n  getBarAttribute(barName, { alternative = null } = {}) {\n    let data;\n    try {\n      data = super.getBarAttribute(barName, { alternative });\n    } catch {\n      data = null;\n    }\n\n    // Make resources editable\n    if (data?.attribute.startsWith(\"resources.\")) data.editable = true;\n\n    const offsetAttributes = [\"attributes.hp\", \"attributes.wounds\", \"attributes.vigor\"];\n    if (offsetAttributes.includes(data?.attribute)) {\n      // Add temp HP on top\n      const temp = foundry.utils.getProperty(this.actor?.system, data.attribute + \".temp\") || 0;\n      data.value += temp;\n      // Allow editing\n      data.editable = true;\n    }\n\n    return data;\n  }\n\n  prepareBaseData() {\n    this._syncSenses();\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Synchronize senses from actor.\n   */\n  _syncSenses() {\n    if (!this.actorId || !this.actor) return;\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return;\n    if (this.getFlag(\"pf1\", \"customVisionRules\")) return;\n\n    this.detectionModes = [];\n\n    // Get base range from source data\n    const baseRange = this._source.sight.range;\n\n    this.sight.visionMode = \"basic\";\n\n    const _detectMode = foundry.canvas?.perception?.DetectionMode ?? DetectionMode; // v12/v13 noise reduction\n\n    // Basic detection\n    const basicMode = { id: _detectMode.BASIC_MODE_ID, enabled: true, range: baseRange };\n    this.detectionModes.push(basicMode);\n    // Light perception\n    const lightPerception = { id: \"lightPerception\", enabled: true, range: null };\n    this.detectionModes.push(lightPerception);\n\n    const senses = this.actor?.system?.traits?.senses ?? {};\n\n    const convertDistance = (d) => pf1.utils.convertDistance(d)[0];\n\n    // Darkvision, also includes blindsight until we have a better representation\n    const darkvision = senses.dv?.total ?? 0;\n    const blindsight = senses.bs?.total ?? 0;\n    const blackAndWhite = Math.max(darkvision, blindsight);\n\n    if (blackAndWhite > 0) {\n      this.sight.visionMode = \"darkvision\";\n      // Upgrade basic mode range if greater\n      basicMode.range = Math.max(baseRange, convertDistance(blackAndWhite));\n    }\n\n    // -----------------------\n\n    // See invisibility\n    if (senses.si) {\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: basicMode.range });\n    }\n\n    // True seeing\n    const trueseeing = senses.tr?.total ?? 0;\n    if (trueseeing > 0) {\n      // Add normal vision within range of true seeing\n      const trr = convertDistance(trueseeing);\n      basicMode.range = Math.max(trr, basicMode.range);\n      if (trueseeing > blackAndWhite) this.sight.visionMode = \"basic\";\n\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: trr, limited: true });\n    }\n\n    this.sight.range = Math.max(baseRange, basicMode.range);\n\n    // Tremor sense\n    if (senses.ts?.total) {\n      this.detectionModes.push({ id: \"feelTremor\", enabled: true, range: convertDistance(senses.ts?.total) });\n    }\n\n    // Lifesense\n    if (senses.ls?.total) {\n      this.detectionModes.push({ id: \"lifesense\", enabled: true, range: convertDistance(senses.ls?.total) });\n    }\n\n    // Blind sense\n    if (senses.bse?.total) {\n      this.detectionModes.push({ id: \"blindSense\", enabled: true, range: convertDistance(senses.bse?.total) });\n    }\n\n    // Blind sight\n    if (senses.bs?.total) {\n      this.detectionModes.push({ id: \"blindSight\", enabled: true, range: convertDistance(senses.bs?.total) });\n    }\n\n    // Sort detection modes\n    this.detectionModes.sort(this.constructor._sortDetectionModes);\n\n    // Update vision advanced fields with current mode's defaults\n    const visionDefaults = CONFIG.Canvas.visionModes[this.sight.visionMode]?.vision?.defaults || {};\n    for (const fieldName of [\"attenuation\", \"brightness\", \"saturation\", \"contrast\"]) {\n      if (fieldName in visionDefaults) {\n        this.sight[fieldName] = visionDefaults[fieldName];\n      }\n    }\n  }\n\n  static _sortDetectionModes(a, b) {\n    const _detectMode = foundry.canvas?.perception?.DetectionMode ?? DetectionMode; // v12/v13 noise reduction\n\n    // Favor basic sight\n    if (a.id === _detectMode.BASIC_MODE_ID) return -1;\n    if (b.id === _detectMode.BASIC_MODE_ID) return 1;\n\n    // Light perception should be next\n    if (a.id === \"lightPerception\") return -1;\n    if (b.id === \"lightPerception\") return 1;\n\n    const src = { a: CONFIG.Canvas.detectionModes[a.id], b: CONFIG.Canvas.detectionModes[b.id] };\n    return (src.a?.constructor.PRIORITY ?? 0) - (src.b?.constructor.PRIORITY ?? 0);\n  }\n\n  /**\n   * Allowed movement modes.\n   *\n   * @todo\n   * - Hook this up in token HUD movement action selection.\n   * @remarks\n   * - Returns null if there's no restrictions (e.g. no actor).\n   *\n   * @experimental\n   * @type {Set<string>|null}\n   */\n  get allowedMovement() {\n    const actor = this.actor;\n    if (!actor) return null;\n\n    const movement = new Set([\"walk\", \"crawl\", \"swim\", \"climb\"]);\n\n    const isProne = actor.statuses.has(\"prone\");\n\n    // Prone modification to movement\n    if (isProne) {\n      movement.delete(\"walk\");\n      movement.delete(\"swim\");\n      movement.delete(\"climb\");\n    }\n    // Movements available if not prone\n    else {\n      const movementModes = [\"fly\", \"burrow\"];\n      for (const movementId of movementModes) {\n        if (actor.system.attributes?.speed?.[movementId]?.total) movement.add(movementId);\n      }\n    }\n\n    return movement;\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * @param {pf1.documents.actor.ActorPF} actor - Actor to apply changes to\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simple] - Process only simple changes\n */\nexport const applyChanges = (actor, { simple = false } = {}) => {\n  actor.changeOverrides = {};\n  /** @type {ItemChange[]} */\n  const changes = Array.from(actor.changes).filter((change) => {\n    const changeTargetData = pf1.config.buffTargets[change.target];\n    return !!changeTargetData?.simple === simple;\n  });\n\n  const { targets, types } = getSortChangePriority(actor);\n  const _sortChanges = (a, b) => {\n    const targetA = targets.indexOf(a.target);\n    const targetB = targets.indexOf(b.target);\n    const typeA = types.indexOf(a.type);\n    const typeB = types.indexOf(b.type);\n    const prioA = a.priority ?? 0;\n    const prioB = b.priority ?? 0;\n\n    // TODO: Improve ordering logic\n    // Currently priority overrides all other considerations, making priority become its own separate processing queue\n    // Any alteration of this can however completely break how users use changes.\n    return prioB - prioA || targetA - targetB || typeA - typeB;\n  };\n\n  // Organize changes by priority\n  changes.sort((a, b) => _sortChanges(a, b));\n\n  actor.changeFlags.immuneToMorale = actor.system.traits?.ci?.total?.has(\"moraleEffects\") || false;\n\n  // Get items with change flags\n  const chflagItems = actor.items.filter((i) => i.isActive && i.hasChanges && i.system.changeFlags);\n\n  // Parse change flags\n  for (const i of chflagItems) {\n    if (!i.system.changeFlags) continue;\n    for (const [k, v] of Object.entries(i.system.changeFlags)) {\n      if (v !== true) continue;\n      actor.changeFlags[k] = true;\n      if (k !== \"loseDexToAC\") continue;\n\n      for (const k2 of [\"normal\", \"touch\"]) {\n        getSourceInfo(actor.sourceInfo, `system.attributes.ac.${k2}.total`).negative.push({\n          value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n          name: i.name,\n          type: i.type,\n        });\n      }\n      getSourceInfo(actor.sourceInfo, \"system.attributes.cmd.total\").negative.push({\n        value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n        name: i.name,\n        type: i.type,\n      });\n    }\n  }\n  if (!simple) actor.refreshDerivedData();\n\n  // Determine continuous changes\n  const continuousChanges = changes.filter((o) => o.continuous === true);\n\n  // Apply all changes\n  for (const change of changes) {\n    if (actor.changeFlags.immuneToMorale && change.type === \"morale\") continue;\n\n    const flats = change.getTargets(actor);\n    for (const f of flats) {\n      actor.changeOverrides[f] ??= createOverride();\n    }\n\n    change._safeApplyChange(actor, flats, { applySourceInfo: false });\n\n    // Apply continuous changes\n    for (const cc of continuousChanges) {\n      if (cc === change) continue;\n      const flats = cc.getTargets(actor);\n      for (const f of flats) {\n        if (!actor.changeOverrides[f]) actor.changeOverrides[f] = createOverride();\n      }\n\n      cc._safeApplyChange(actor, flats, { applySourceInfo: false });\n    }\n\n    if (!simple) actor.refreshDerivedData();\n  }\n\n  // Apply source info for changes\n  for (const change of changes) {\n    change.applySourceInfo(actor);\n  }\n};\n\n/**\n * Create override structure\n *\n * @returns {object} - Override base structure\n */\nfunction createOverride() {\n  const result = {\n    add: {},\n    set: {},\n  };\n\n  for (const k of Object.keys(pf1.config.bonusTypes)) {\n    result.add[k] = null;\n    result.set[k] = null;\n  }\n\n  return result;\n}\n\nconst getSortChangePriority = (actor) => {\n  const skillBasePrio = pf1.config.buffTargets.skills.sort + 100;\n  /** @type {[string, {sort: number}][]} */\n  const skillTargets = actor._skillTargets.map((target, index) => [target, { sort: skillBasePrio + index * 10 }]);\n  const buffTargets = Object.entries(pf1.config.buffTargets);\n  const targets = [...skillTargets, ...buffTargets]\n    .sort(([, { sort: aSort }], [, { sort: bSort }]) => aSort - bSort)\n    .map(([target]) => target);\n\n  return {\n    targets,\n    types: Object.keys(pf1.config.bonusTypes),\n  };\n};\n\n/**\n * @param {Actor} actor - Actor to get data from\n * @param {BuffTarget} target Target (e.g. \"ac\" or \"skills\")\n * @param {ModifierType} modifierType Type (e.g. \"profane\", \"untyped\", or \"dodge\"). If undefined, all valid targets will be returned.\n * @param {number} [value]  Value, if known\n * @returns {Array<string>} Array of target paths to modify\n */\nexport function getChangeFlat(actor, target, modifierType, value) {\n  if (target == null) return [];\n\n  const system = actor.system;\n  /** @type {string[]} */\n  const result = [];\n\n  switch (target) {\n    case \"mhp\":\n      result.push(\"system.attributes.hp.max\");\n      break;\n    case \"wounds\":\n      result.push(\"system.attributes.wounds.max\");\n      break;\n    case \"woundThreshold\":\n      result.push(\"system.attributes.wounds.threshold\");\n      break;\n    case \"vigor\":\n      result.push(\"system.attributes.vigor.max\");\n      break;\n    case \"str\":\n    case \"dex\":\n    case \"con\":\n    case \"int\":\n    case \"wis\":\n    case \"cha\":\n      if ([\"base\", \"untypedPerm\"].includes(modifierType)) {\n        result.push(`system.abilities.${target}.base`);\n      }\n      result.push(`system.abilities.${target}.total`, `system.abilities.${target}.undrained`);\n      break;\n    case \"strPen\":\n    case \"dexPen\":\n    case \"conPen\":\n    case \"intPen\":\n    case \"wisPen\":\n    case \"chaPen\": {\n      const ablKey = target.slice(0, -3);\n      result.push(`system.abilities.${ablKey}.penalty`);\n      break;\n    }\n    case \"strMod\":\n    case \"dexMod\":\n    case \"conMod\":\n    case \"intMod\":\n    case \"wisMod\":\n    case \"chaMod\":\n      result.push(`system.abilities.${target.slice(0, 3)}.mod`);\n      break;\n    case \"carryStr\":\n      result.push(\"system.details.carryCapacity.bonus.total\");\n      break;\n    case \"carryMult\":\n      result.push(\"system.details.carryCapacity.multiplier.total\");\n      break;\n    case \"size\":\n      result.push(\"system.traits.size.value\");\n      break;\n    case \"ageCategory\":\n      result.push(\"system.traits.ageCategory.value\");\n      result.push(\"system.traits.ageCategory.mental\");\n      result.push(\"system.traits.ageCategory.physical\");\n      break;\n    case \"ageCategoryMental\":\n      result.push(\"system.traits.ageCategory.mental\");\n      break;\n    case \"ageCategoryPhysical\":\n      result.push(\"system.traits.ageCategory.physical\");\n      break;\n    case \"ac\":\n      result.push(\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\");\n\n      switch (modifierType) {\n        case \"dodge\":\n        case \"haste\":\n          result.push(\"system.attributes.cmd.total\");\n          break;\n        case \"deflection\":\n        case \"circumstance\":\n        case \"insight\":\n        case \"luck\":\n        case \"morale\":\n        case \"profane\":\n        case \"sacred\":\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        case undefined:\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        default:\n          result.push(\"system.attributes.ac.flatFooted.total\");\n          // Other penalties also apply to CMD, but not bonuses\n          if (value < 0) {\n            result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n          }\n          break;\n      }\n      break;\n    case \"aac\": {\n      const targets = [\"system.ac.normal.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.normal.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.normal.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.normal.base\", \"system.ac.normal.enh\", \"system.ac.normal.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.normal.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"sac\": {\n      const targets = [\"system.ac.shield.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.shield.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.shield.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.shield.base\", \"system.ac.shield.enh\", \"system.ac.shield.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.shield.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"nac\": {\n      const targets = [\"system.ac.natural.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.natural.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.natural.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.natural.base\", \"system.ac.natural.enh\", \"system.ac.natural.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.natural.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"tac\":\n      result.push(\"system.attributes.ac.touch.total\");\n      break;\n    case \"ffac\":\n      result.push(\"system.attributes.ac.flatFooted.total\");\n      break;\n    case \"ffcmd\":\n      result.push(\"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"bab\":\n      result.push(\"system.attributes.bab.total\");\n      break;\n    case \"~attackCore\":\n      result.push(\"system.attributes.attack.shared\");\n      break;\n    case \"attack\":\n      result.push(\"system.attributes.attack.general\");\n      break;\n    case \"wattack\":\n      result.push(\"system.attributes.attack.weapon\");\n      break;\n    case \"sattack\":\n      result.push(\"system.attributes.attack.spell\");\n      break;\n    case \"mattack\":\n      result.push(\"system.attributes.attack.melee\");\n      break;\n    case \"nattack\":\n      result.push(\"system.attributes.attack.natural\");\n      break;\n    case \"rattack\":\n      result.push(\"system.attributes.attack.ranged\");\n      break;\n    case \"tattack\":\n      result.push(\"system.attributes.attack.thrown\");\n      break;\n    case \"critConfirm\":\n      result.push(\"system.attributes.attack.critConfirm\");\n      break;\n    case \"allSavingThrows\":\n      result.push(\n        \"system.attributes.savingThrows.fort.total\",\n        \"system.attributes.savingThrows.ref.total\",\n        \"system.attributes.savingThrows.will.total\"\n      );\n      break;\n    case \"fort\":\n      result.push(\"system.attributes.savingThrows.fort.total\");\n      break;\n    case \"ref\":\n      result.push(\"system.attributes.savingThrows.ref.total\");\n      break;\n    case \"will\":\n      result.push(\"system.attributes.savingThrows.will.total\");\n      break;\n    case \"vehicleSave\":\n      result.push(\"system.attributes.savingThrows.save.total\");\n      break;\n    case \"skills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const b of Object.keys(skl.subSkills)) {\n            result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"unskills\":\n      // Untrained skills\n      for (const [skillId, skill] of Object.entries(system.skills)) {\n        if (skill == null) continue;\n        for (const [subSkillId, subskill] of Object.entries(skill.subSkills ?? {})) {\n          if (subskill.rank > 0) continue;\n          result.push(`system.skills.${skillId}.subSkills.${subSkillId}.mod`);\n        }\n        if (skill.rank > 0) continue;\n        result.push(`system.skills.${skillId}.mod`);\n      }\n      break;\n    case \"reach\":\n      // Natural reach\n      result.push(\"system.traits.reach.total.melee\");\n      result.push(\"system.traits.reach.total.reach\");\n      break;\n    case \"strSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"str\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"str\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"dexSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"dex\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"dex\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"conSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"con\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"con\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"intSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"int\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"int\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"wisSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"wis\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"wis\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"chaSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"cha\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"cha\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"allChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        \"system.abilities.dex.checkMod\",\n        \"system.abilities.con.checkMod\",\n        \"system.abilities.int.checkMod\",\n        \"system.abilities.wis.checkMod\",\n        \"system.abilities.cha.checkMod\",\n        ...(system.attributes?.init?.ability ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"strChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        ...(system.attributes?.init?.ability === \"str\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"dexChecks\":\n      result.push(\n        \"system.abilities.dex.checkMod\",\n        ...(system.attributes?.init?.ability === \"dex\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"conChecks\":\n      result.push(\n        \"system.abilities.con.checkMod\",\n        ...(system.attributes?.init?.ability === \"con\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"intChecks\":\n      result.push(\n        \"system.abilities.int.checkMod\",\n        ...(system.attributes?.init?.ability === \"int\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"wisChecks\":\n      result.push(\n        \"system.abilities.wis.checkMod\",\n        ...(system.attributes?.init?.ability === \"wis\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"chaChecks\":\n      result.push(\n        \"system.abilities.cha.checkMod\",\n        ...(system.attributes?.init?.ability === \"cha\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"allSpeeds\":\n      for (const speedKey of Object.keys(system.attributes?.speed ?? {})) {\n        result.push(`system.attributes.speed.${speedKey}.total`);\n      }\n      // TODO: Support vehicle speeds somewhere\n      break;\n    case \"landSpeed\":\n      result.push(\"system.attributes.speed.land.total\");\n      break;\n    case \"climbSpeed\":\n      result.push(\"system.attributes.speed.climb.total\");\n      break;\n    case \"swimSpeed\":\n      result.push(\"system.attributes.speed.swim.total\");\n      break;\n    case \"burrowSpeed\":\n      result.push(\"system.attributes.speed.burrow.total\");\n      break;\n    case \"flySpeed\":\n      result.push(\"system.attributes.speed.fly.total\");\n      break;\n    case \"cmb\":\n      result.push(\"system.attributes.cmb.bonus\");\n      break;\n    case \"cmd\":\n      if ([\"dodge\", \"haste\"].includes(modifierType)) {\n        result.push(\"system.attributes.cmd.total\");\n        break;\n      }\n      result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"init\":\n      result.push(\"system.attributes.init.total\");\n      break;\n    case \"acpA\":\n      result.push(\"system.attributes.acp.armorBonus\");\n      break;\n    case \"acpS\":\n      result.push(\"system.attributes.acp.shieldBonus\");\n      break;\n    case \"mDexA\":\n      result.push(\"system.attributes.mDex.armorBonus\");\n      break;\n    case \"mDexS\":\n      result.push(\"system.attributes.mDex.shieldBonus\");\n      break;\n    case \"spellResist\":\n      result.push(\"system.attributes.sr.total\");\n      break;\n    case \"damage\":\n      result.push(\"system.attributes.damage.general\");\n      break;\n    case \"mdamage\":\n      result.push(\"system.attributes.damage.meleeAll\");\n      break;\n    case \"rdamage\":\n      result.push(\"system.attributes.damage.rangedAll\");\n      break;\n    case \"wdamage\":\n      result.push(\"system.attributes.damage.weapon\");\n      break;\n    case \"rwdamage\":\n      result.push(\"system.attributes.damage.ranged\");\n      break;\n    case \"twdamage\":\n      result.push(\"system.attributes.damage.thrown\");\n      break;\n    case \"mwdamage\":\n      result.push(\"system.attributes.damage.melee\");\n      break;\n    case \"ndamage\":\n      result.push(\"system.attributes.damage.natural\");\n      break;\n    case \"sdamage\":\n      result.push(\"system.attributes.damage.spell\");\n      break;\n    case \"bonusFeats\":\n      result.push(\"system.details.feats.bonus\");\n      break;\n    case \"bonusSkillRanks\":\n      result.push(\"system.details.skills.bonus\");\n      break;\n    case \"concentration\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.concentration.total\",\n        \"system.attributes.spells.spellbooks.secondary.concentration.total\",\n        \"system.attributes.spells.spellbooks.tertiary.concentration.total\",\n        \"system.attributes.spells.spellbooks.spelllike.concentration.total\"\n      );\n      break;\n    case \"cl\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.cl.total\",\n        \"system.attributes.spells.spellbooks.secondary.cl.total\",\n        \"system.attributes.spells.spellbooks.tertiary.cl.total\",\n        \"system.attributes.spells.spellbooks.spelllike.cl.total\"\n      );\n      break;\n    case \"dc\":\n      result.push(`system.attributes.spells.school.all.dc`);\n      break;\n    case \"sensedv\":\n      result.push(\"system.traits.senses.dv.total\");\n      break;\n    case \"sensets\":\n      result.push(\"system.traits.senses.ts.total\");\n      break;\n    case \"sensebse\":\n      result.push(\"system.traits.senses.bse.total\");\n      break;\n    case \"sensebs\":\n      result.push(\"system.traits.senses.bs.total\");\n      break;\n    case \"sensels\":\n      result.push(\"system.traits.senses.ls.total\");\n      break;\n    case \"sensetr\":\n      result.push(\"system.traits.senses.tr.total\");\n      break;\n    case \"sensesc\":\n      result.push(\"system.traits.senses.sc.total\");\n      break;\n  }\n\n  // Per school DC target\n  const schoolDC = /^dc\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolDC) {\n    const schoolId = schoolDC.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.dc`);\n  }\n\n  // Per school CL target\n  const schoolCL = /^cl\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolCL) {\n    const schoolId = schoolCL.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.cl`);\n  }\n\n  // Per book concentration target\n  const concnMatch = /^concn\\.(?<bookId>\\w+)/.exec(target);\n  if (concnMatch) {\n    const bookId = concnMatch.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.concentration.total`);\n  }\n\n  // Per book caster level target\n  const bookCL = /^cl\\.book\\.(?<bookId>\\w+)/.exec(target);\n  if (bookCL) {\n    const bookId = bookCL.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.cl.bonus`);\n  }\n\n  if (/^skill\\./.test(target)) {\n    const parts = target.split(\".\").slice(1);\n    let sklKey = parts.shift();\n\n    let spread = true;\n    if (sklKey[0] === \"~\") {\n      spread = false;\n      sklKey = sklKey.slice(1);\n    }\n\n    const skillData = system.skills[sklKey];\n    if (skillData) {\n      const subSklKey = parts.pop();\n\n      if (subSklKey) {\n        // Apply to all skills in this tree, including parent\n        if (skillData.subSkills?.[subSklKey]) {\n          result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n        }\n      } else {\n        result.push(`system.skills.${sklKey}.mod`);\n        if (spread) {\n          for (const subSklKey of Object.keys(skillData.subSkills ?? {})) {\n            result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n          }\n        }\n      }\n    }\n  }\n\n  // Call hooks to enable modules to add or adjust the result array\n  if (Hooks.events.pf1GetChangeFlat?.length) {\n    Hooks.callAll(\"pf1GetChangeFlat\", result, target, modifierType, value, actor);\n  }\n\n  // Return results directly when deprecation is removed\n  return result;\n}\n\n/**\n * @deprecated - Implementation moved to {@link pf1.documents.actor.abstract.BaseCharacterPF#_prepareTypeChanges}\n * @param {*} actor\n * @param {*} changes\n */\nexport function addDefaultChanges(actor, changes) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.documents.actor.changes.addDefaultChanges() is deprecated in favor of pf1.documents.actor.abstract.BaseCharacterPF#_prepareTypeChanges()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n}\n\n/**\n * Initialize source info structure and retrieve it\n *\n * @param {object} obj  - Source info base structure\n * @param {string} key - Data path\n * @returns {object} - Target source info structure\n */\nexport function getSourceInfo(obj, key) {\n  obj[key] ??= { negative: [], positive: [] };\n  return obj[key];\n}\n\n/**\n * @param {object} obj - Source info base\n * @param {string} key - Data path\n * @param {string} name - Name to find\n * @param {*} value - Value to set\n * @param {boolean} [positive=true] - Is this positive or negative source\n * @param {string} [id] - Special ID\n */\nexport function setSourceInfoByName(obj, key, name, value, positive = true, id) {\n  const target = positive ? \"positive\" : \"negative\";\n  const sourceInfo = getSourceInfo(obj, key)[target];\n  const data = sourceInfo.find((o) => o.name === name);\n  if (data) data.value = value;\n  else {\n    const srcInfo = {\n      name,\n      value,\n    };\n    if (id) srcInfo.id = id;\n    sourceInfo.push(srcInfo);\n  }\n}\n\n/**\n * @param {ItemChange[]} changes - An array containing all changes to check. Must be called after they received a value (by ItemChange.applyChange)\n * @param {object} [options] - Additional options\n * @param {boolean} [options.ignoreTarget] - Whether to only check for modifiers such as enhancement, insight (true) or whether the target (AC, weapon damage) is also important (false)\n * @returns {ItemChange[]} - A list of processed changes, excluding the lower-valued ones inserted (if they don't stack)\n */\nexport function getHighestChanges(changes, options = { ignoreTarget: false }) {\n  const highestTemplate = {\n    value: 0,\n    ids: [],\n    highestID: null,\n  };\n  const highest = Object.keys(pf1.config.bonusTypes).reduce((cur, k) => {\n    if (options.ignoreTarget) cur[k] = foundry.utils.deepClone(highestTemplate);\n    else cur[k] = {};\n    return cur;\n  }, {});\n\n  for (const c of changes) {\n    let h;\n    if (options.ignoreTarget) h = highest[c.type];\n    else h = highest[c.type]?.[c.target];\n\n    if (!h) continue; // Ignore bad changes\n    h.ids.push(c._id);\n    if (h.value < c.value || !h.highestID) {\n      h.value = c.value;\n      h.highestID = c._id;\n    }\n  }\n\n  let type, h;\n  const filterFunc = (c) => {\n    if (h.highestID === c._id) return true;\n    if (pf1.config.stackingBonusTypes.indexOf(type) === -1 && h.ids.includes(c._id)) return false;\n    return true;\n  };\n\n  for (type of Object.keys(highest)) {\n    if (options.ignoreTarget) {\n      h = highest[type];\n      changes = changes.filter(filterFunc);\n    } else {\n      for (const subTarget of Object.keys(highest[type])) {\n        h = highest[type][subTarget];\n        changes = changes.filter(filterFunc);\n      }\n    }\n  }\n\n  return changes;\n}\n","/**\n * Spellbook details.\n */\nexport class Spellbook {\n  /**\n   * Book key.\n   */\n  key;\n\n  /**\n   * Owning actor.\n   */\n  actor;\n\n  /**\n   * Raw spellbook data.\n   */\n  data;\n\n  /**\n   * All spells.\n   */\n  spells = [];\n\n  level = {};\n\n  /**\n   * @param {string} bookKey Book key.\n   * @param {ActorPF} actor Owning actor.\n   */\n  constructor(bookKey, actor) {\n    this.key = bookKey;\n    this.actor = actor;\n    this.data = actor.system.attributes.spells.spellbooks[bookKey];\n  }\n\n  /**\n   * Add spell to the spellbook and to its appropriate level.\n   *\n   * @param {ItemSpellPF} spell\n   */\n  addSpell(spell) {\n    this.spells.push(spell);\n\n    // Basic sanity check\n    const level = spell.system.level;\n    if (Math.clamp(level, 0, 9) !== level) {\n      console.error(\"Spell with impossible spell level:\", spell);\n      return;\n    }\n\n    // Ensure appropriate spell level exists\n    this.level[level] ??= new SpellbookLevel(this);\n\n    // Add spell to the spell level also\n    this.level[level].spells.push(spell);\n  }\n}\n\n/**\n * Spellbook leveled details.\n */\nexport class SpellbookLevel {\n  /**\n   * Owning book.\n   */\n\n  book;\n  /**\n   * Spells for level.\n   */\n  spells = [];\n\n  constructor(book) {\n    this.book = book;\n  }\n}\n\nexport class SpellbookSlots {\n  level = 0;\n  max = 0;\n  value = 0;\n  domain = 0;\n  domainMax = 0;\n  domainUnused = 0;\n  used = 0;\n  total = 0;\n\n  /**\n   * @param {object} options - Options\n   * @param {number} options.max - Maximum normal spells\n   * @param {number} options.domain - Maximum domain spells\n   * @param {number} options.level - Spell level\n   */\n  constructor({ max = 0, domain = 0, level = 0 } = {}) {\n    this.level = level;\n\n    // Enforce lack of domain slots for level 0\n    if (level === 0) domain = 0;\n\n    this.value = max + domain;\n    this.max = max;\n\n    this.domain = domain;\n    this.domainMax = domain;\n    this.domainUnused = domain;\n\n    this.total = max + domain;\n  }\n}\n\nexport class SpellRanges {\n  close;\n  medium;\n  long;\n\n  cl;\n\n  constructor(cl) {\n    this.cl = cl;\n    this.close = pf1.utils.calculateRange(null, \"close\", { cl })[0];\n    this.medium = pf1.utils.calculateRange(null, \"medium\", { cl })[0];\n    this.long = pf1.utils.calculateRange(null, \"long\", { cl })[0];\n  }\n}\n\nexport class SpellbookMode {\n  raw;\n\n  #spontaneous = false;\n  #prepared = false;\n\n  get isSpontaneous() {\n    return this.#spontaneous || false;\n  }\n\n  get isPrepared() {\n    return this.#prepared || false;\n  }\n\n  get usesSpellpoints() {\n    return this.book.spellPoints?.useSystem === true;\n  }\n\n  get isSemiSpontaneous() {\n    return this.isSpontaneous || this.usesSpellpoints || false;\n  }\n\n  constructor(book) {\n    this.book = book;\n\n    let mode = book.spellPreparationMode;\n    // Shunt invalid mode\n    mode ||= book.spellPreparationMode = \"spontaneous\";\n\n    this.raw = mode;\n\n    const preparation = pf1.config.caster.type[this.raw];\n    this.#spontaneous = preparation.spontaneous;\n    this.#prepared = preparation.prepared;\n  }\n}\n","/**\n * Resource interface.\n */\nexport class Resource {\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {ItemPF} */\n  #item;\n  get item() {\n    return this.#item;\n  }\n\n  /**\n   * @param {number} value Value to add to the charges.\n   * @returns {Promise<Item>} Update promise\n   */\n  async add(value) {\n    return this.item.addCharges(value);\n  }\n\n  constructor(item) {\n    this.#item = item;\n    const tag = item.system.tag;\n\n    Object.defineProperties(this, {\n      value: {\n        get() {\n          return this.item.charges;\n        },\n        enumerable: true,\n      },\n      max: {\n        get() {\n          return this.item.maxCharges;\n        },\n        enumerable: true,\n      },\n      _id: {\n        value: item.id,\n        enumerable: true,\n      },\n      tag: {\n        value: tag,\n        enumerable: true,\n      },\n    });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\nimport {\n  applyChanges,\n  getChangeFlat,\n  getSourceInfo,\n  setSourceInfoByName,\n  getHighestChanges,\n} from \"./utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { Spellbook, SpellRanges, SpellbookMode, SpellbookSlots } from \"./utils/spellbook.mjs\";\nimport { VisionSharingSheet } from \"module/applications/vision-sharing.mjs\";\nimport { Resource } from \"./components/resource.mjs\";\n\n/**\n * Extend the base Actor class to implement additional game system logic.\n */\nexport class ActorPF extends ActorBasePF {\n  /**\n   * Configure actor before data preparation.\n   *\n   * @override\n   * @param {object} options - Document options\n   */\n  _configure(options = {}) {\n    super._configure(options);\n\n    /**\n     * Stores all ItemChanges from carried items.\n     *\n     * @public\n     * @type {Collection<ItemChange>}\n     */\n    this.changes ??= new Collection();\n\n    /**\n     * Cached roll data for this item.\n     *\n     * @internal\n     * @type {object}\n     */\n    Object.defineProperties(this, {\n      itemFlags: {\n        value: { boolean: {}, dictionary: {} },\n        writable: false,\n      },\n      _rollData: {\n        value: null,\n        enumerable: false,\n        writable: true,\n      },\n      _visionSharingSheet: {\n        value: null,\n        enumerable: false,\n        writable: true,\n      },\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Spell Failure Percentage as number from 0 to 100.\n   *\n   * @type {number}\n   */\n  get spellFailure() {\n    return this.itemTypes.equipment\n      .filter((o) => o.system.equipped === true)\n      .reduce((cur, o) => cur + (o.system.spellFailure || 0), 0);\n  }\n\n  /**\n   * Actor's current race item.\n   *\n   * @type {pf1.documents.item.ItemRacePF|null}\n   */\n  get race() {\n    return this.itemTypes.race[0] ?? null;\n  }\n\n  /**\n   * @internal\n   * @param {SourceInfo} src - Source info\n   * @returns {string} - Label for source\n   */\n  static _getSourceLabel(src) {\n    /** @type {ItemPF} */\n    const item = src.change?.parent;\n    if (item) {\n      const subtype = item.subType;\n      let typeLabel;\n\n      if (subtype && ((item.system.identified ?? true) || game.user.isGM) && ![\"weapon\"].includes(item.type))\n        typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${item.type}.${subtype}.Single`);\n      else typeLabel = game.i18n.localize(`TYPES.Item.${item.type}`);\n\n      return `${src.name} (${typeLabel})`;\n    }\n\n    return src.name;\n  }\n\n  /**\n   * Retrieve valid skill change targets for this actor.\n   *\n   * @internal\n   * @returns {Array<string>} - Skill target array\n   */\n  get _skillTargets() {\n    const skills = [];\n    for (const [sklKey, skl] of Object.entries(this.system.skills)) {\n      if (skl == null) continue;\n      // Add main skill\n      skills.push(`skill.${sklKey}`); // Affects this and sub-skills\n      skills.push(`skill.~${sklKey}`); // Special extra target that does not affect sub-skills\n      // Add subskills if present\n      for (const subSklKey of Object.keys(skl.subSkills ?? [])) {\n        skills.push(`skill.${sklKey}.${subSklKey}`);\n      }\n    }\n    return skills;\n  }\n\n  /**\n   * Change target paths for spellbooks on the actor.\n   *\n   * @internal\n   * @type {Array<string>}\n   */\n  get _spellbookTargets() {\n    const spellTargets = [];\n    // Add caster level and concentration to targets\n    for (const [bookId, bookData] of Object.entries(this._source.system.attributes?.spells?.spellbooks ?? {})) {\n      if (bookData.inUse) {\n        spellTargets.push(`cl.book.${bookId}`, `concn.${bookId}`);\n      }\n    }\n    return spellTargets;\n  }\n\n  /**\n   * Prepare boolean and dictionary flags.\n   *\n   * @internal\n   */\n  _prepareItemFlags() {\n    const items = this.allItems;\n    const bFlags = {};\n    const dFlags = {};\n\n    for (const item of items) {\n      // Process boolean flags\n      if (item.isActive) {\n        const flags = item.system.flags?.boolean || {};\n        for (const flag of Object.keys(flags)) {\n          bFlags[flag] ??= { sources: [] };\n          bFlags[flag].sources.push(item);\n        }\n      }\n\n      // Process dictionary flags\n      const tag = item.system.tag;\n      if (tag) {\n        const dEntries = Object.entries(item.system.flags?.dictionary || {});\n        if (dEntries.length) {\n          dFlags[tag] ||= {};\n\n          for (const [key, value] of dEntries) {\n            if (dFlags[tag][key] !== undefined && this.isOwner) {\n              const msg = game.i18n.format(\"PF1.Warning.DuplicateDFlag\", {\n                actor: this.uuid,\n                item: item.name,\n                key,\n                tag,\n              });\n              console.warn(msg, item);\n              ui.notifications?.warn(msg, { console: false });\n            }\n\n            dFlags[tag][key] = item.isActive ? value : 0;\n          }\n        }\n      }\n    }\n\n    this.itemFlags.boolean = bFlags;\n    this.itemFlags.dictionary = dFlags;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareChanges() {\n    /** @type {ItemChange[]} */\n    const changes = [];\n    for (const item of this.items) {\n      if (item.isActive && item.hasChanges && item.changes.size) {\n        changes.push(...item.changes);\n      }\n    }\n\n    this._prepareTypeChanges(changes);\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n\n    this.changes = c;\n  }\n\n  /**\n   * Add actor type specific changes.\n   *\n   * @internal\n   * @abstract\n   * @protected\n   * @param {ItemChange[]} changes - Array of changes\n   */\n  // eslint-disable-next-line no-unused-vars\n  _prepareTypeChanges(changes) {}\n\n  /**\n   * @internal\n   * @override\n   */\n  applyActiveEffects() {\n    // Apply active effects. Required for status effects in v11 and onward, such as blind and invisible.\n    super.applyActiveEffects();\n\n    this.prepareConditions();\n\n    this._prepareItemFlags();\n    this._prepareChanges();\n    applyChanges(this, { simple: true });\n  }\n\n  /**\n   * Deletes expired temporary active effects and disables linked expired buffs.\n   *\n   * @param {object} [options] Additional options\n   * @param {Combat} [options.combat] Combat to expire data in, if relevant\n   * @param {number} [options.worldTime] - World time\n   * @param {number} [options.timeOffset=0] Time offset from world time\n   * @param {string} [options.event] - Expiration event\n   * @param {number} [options.initiative] - Initiative based expiration marker\n   * @param {DocumentModificationContext} [context] Document update context\n   * @throws {Error} - With insufficient permissions to control the actor.\n   */\n  async expireActiveEffects(\n    { combat, timeOffset = 0, worldTime = null, event = null, initiative = null } = {},\n    context = {}\n  ) {\n    if (!this.isOwner) throw new Error(\"Must be owner\");\n\n    // Canonical world time.\n    // Due to async code in numerous places and no awaiting of time updates, this can go out of sync of actual time.\n    worldTime ??= game.time.worldTime;\n    worldTime += timeOffset;\n\n    // Effects that have timed out\n    const expiredEffects = this._effectsWithDuration.filter((ae) => {\n      const { seconds, startTime } = ae.duration;\n      const { rounds, startRound } = ae.duration;\n\n      // Calculate remaining duration.\n      // AE.duration.remaining is updated by Foundry only in combat and is unreliable.\n      let remaining = Infinity;\n      // Convert rounds to seconds\n      if (Number.isFinite(seconds) && seconds >= 0) {\n        const elapsed = worldTime - (startTime ?? 0);\n        remaining = seconds - elapsed;\n      } else if (rounds > 0 && combat) {\n        // BUG: This will ignore which combat the round tracking started for\n        const elapsed = combat.round - (startRound ?? 0);\n        remaining = (rounds - elapsed) * CONFIG.time.roundTime;\n      }\n\n      // Time still remaining\n      if (remaining > 0) return false;\n\n      const aeInit = ae.system?.initiative;\n      const endTiming = ae.system?.end || \"turnStart\";\n\n      switch (endTiming) {\n        // Initiative based ending\n        case \"initiative\":\n          if (initiative !== null) {\n            return initiative <= aeInit;\n          }\n          // Anything not on initiative expires if they have negative time remaining\n          return remaining < 0;\n        // End on turn start, but we're not there yet\n        case \"turnStart\":\n          if (remaining === 0 && ![\"turnStart\", \"turnEnd\"].includes(event)) return false;\n          break;\n        // End on turn end, but we're not quite there yet\n        case \"turnEnd\":\n          if (remaining === 0 && event !== \"turnEnd\") return false;\n          break;\n      }\n\n      // Otherwise end when time is out\n      return remaining <= 0;\n    });\n\n    const disableActiveEffects = [],\n      deleteActiveEffects = [],\n      disableBuffs = [];\n\n    for (const ae of expiredEffects) {\n      let item;\n      // Use AE parent when available\n      if (ae.parent instanceof Item) item = ae.parent;\n      // Otherwise support older origin cases\n      else item = ae.origin ? await fromUuid(ae.origin, { relative: this }) : null;\n\n      if (item?.type === \"buff\") {\n        disableBuffs.push({ _id: item.id, \"system.active\": false });\n      } else {\n        if (ae.getFlag(\"pf1\", \"autoDelete\")) {\n          deleteActiveEffects.push(ae.id);\n        } else {\n          disableActiveEffects.push({ _id: ae.id, disabled: true });\n        }\n      }\n    }\n\n    // Add context info for why this update happens to allow modules to understand the cause.\n    context.pf1 ??= {};\n    context.pf1.reason = \"duration\";\n\n    if (deleteActiveEffects.length) {\n      const deleteAEContext = foundry.utils.mergeObject(\n        { render: !disableBuffs.length && !disableActiveEffects.length },\n        context\n      );\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", deleteActiveEffects, deleteAEContext);\n    }\n\n    if (disableActiveEffects.length) {\n      const disableAEContext = foundry.utils.mergeObject({ render: !disableBuffs.length }, context);\n      await this.updateEmbeddedDocuments(\"ActiveEffect\", disableActiveEffects, disableAEContext);\n    }\n\n    if (disableBuffs.length) {\n      await this.updateEmbeddedDocuments(\"Item\", disableBuffs, context);\n    }\n  }\n\n  /**\n   * Prepare actor data before items are prepared.\n   *\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this.system.details ??= {};\n    this.system.details.level ??= {};\n\n    /** @type {Record<string, {negative:SourceInfo[], positive:SourceInfo[]}>} */\n    this.sourceInfo = {};\n    this.changeFlags = {};\n\n    // Reset equipment info\n    this.equipment = {\n      shield: { type: pf1.config.shieldTypes.none, id: undefined },\n      armor: { type: pf1.config.armorTypes.none, id: undefined },\n    };\n\n    // Reset class info\n    this.classes = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n\n    this._resetInherentTotals();\n\n    this._prepareTraits();\n\n    if (Hooks.events.pf1PrepareBaseActorData?.length) {\n      Hooks.callAll(\"pf1PrepareBaseActorData\", this);\n    }\n\n    // Update total level and mythic tier\n    const classes = this.itemTypes.class;\n    /** @type {{hd:number,mythic:number,level:number}} */\n    const levels = classes.reduce(\n      (cur, o) => {\n        o.reset(); // HACK: Out of order preparation for later.\n        cur.hd += o.hitDice;\n        if (![\"mythic\", \"racial\"].includes(o.subType)) {\n          cur.level += o.system.level ?? 0;\n        }\n        cur.mythic += o.mythicTier;\n        return cur;\n      },\n      { hd: 0, mythic: 0, level: 0 }\n    );\n\n    this.system.details.level.value = levels.level;\n    this.system.details.mythicTier = levels.mythic;\n\n    // Refresh ability scores\n    for (const ability of Object.values(this.system.abilities)) {\n      const value = ability.value;\n      if (value === null) {\n        ability.total = null;\n        ability.base = null;\n        ability.undrained = null;\n      } else {\n        ability.undrained = value;\n        ability.total = value - ability.drain;\n        ability.penalty = (ability.penalty || 0) - Math.abs(ability.userPenalty || 0);\n        ability.base = ability.total;\n      }\n    }\n    this.refreshAbilityModifiers();\n\n    // Reset BAB\n    {\n      const k = \"system.attributes.bab.total\";\n      const v = Math.floor(\n        classes.reduce((cur, cls) => {\n          // HACK: Depends on earlier out of order preparation\n          const bab = cls.system.babBase;\n          if (bab !== 0) {\n            getSourceInfo(this.sourceInfo, k).positive.push({\n              name: cls.name,\n              value: pf1.utils.fractionalToString(bab),\n            });\n          }\n          return cur + bab;\n        }, 0)\n      );\n      this.system.attributes.bab.total = Math.floor(v);\n\n      // Add .value for NPC lite sheet\n      if (this.system.attributes.bab.value) this.system.attributes.bab.total += this.system.attributes.bab.value ?? 0;\n    }\n\n    this._prepareSenses();\n\n    this._prepareClassSkills();\n\n    // Reset HD\n    foundry.utils.setProperty(this.system, \"attributes.hd.total\", levels.hd);\n  }\n\n  /**\n   * Prepare traits.\n   *\n   * Called in prepareBaseData()\n   *\n   * @protected\n   * @abstract\n   */\n  _prepareTraits() {}\n\n  /**\n   * Finalize preparing armor, weapon, and language proficiencies and other traits.\n   *\n   * Called in prepareDerivedData()\n   *\n   * @protected\n   * @abstract\n   */\n  _finalizeTraits() {}\n\n  /**\n   * Prepare creature type info\n   */\n  _prepareCreatureType() {\n    const race = this.race;\n    if (race) {\n      const creatureType = race?.system.creatureType || \"humanoid\";\n      this.system.traits.type = creatureType;\n      // TODO: Move quadruped to traits or system roots\n      this.system.attributes.quadruped ??= race?.system.quadruped ?? false;\n    }\n\n    const types = this.system.traits.creatureTypes?.standard;\n    if (!types?.size) return;\n\n    // Add some booleans about the types\n    this.system.traits.humanoid = types.has(\"humanoid\");\n    this.system.traits.undead = types.has(\"undead\");\n    this.system.traits.construct = types.has(\"construct\");\n    this.system.traits.living = !this.system.traits.undead && !this.system.traits.construct;\n\n    // Add something from this.system.traits.creatureSubtypes ?\n  }\n\n  _prepareSenses() {\n    // Refresh senses\n    for (const [senseId, sense] of Object.entries(this.system.traits.senses)) {\n      if (typeof sense !== \"object\") continue;\n      if (!sense) continue;\n\n      switch (senseId) {\n        case \"ll\":\n        case \"si\":\n        case \"sid\":\n          break;\n\n        default:\n          sense.total = sense.value;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Prepare actor.system.conditions for use.\n   *\n   * @protected\n   */\n  prepareConditions() {\n    this.system.conditions = {};\n    const conditions = this.system.conditions;\n\n    // Populate conditions\n    // @deprecated - This should be only done in getRollData()\n    for (const condition of pf1.registry.conditions.keys()) {\n      conditions[condition] = this.statuses.has(condition);\n    }\n  }\n\n  /**\n   * Prepare natural reach for melee range and for reach weapons.\n   *\n   * @protected\n   */\n  _prepareNaturalReach() {\n    // Prepare base natural reach\n    this.system.traits.reach ??= {};\n    const reach = this.system.traits.reach;\n\n    reach.base = this.constructor.getReach(this.system.traits?.size?.value, this.system.traits?.stature);\n\n    // Reset values\n    reach.natural = reach.base;\n    reach.total = { ...reach.base };\n\n    // Add base natural values to the change sources\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.melee\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.melee,\n    });\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.reach\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.reach,\n    });\n  }\n\n  /**\n   * Reset class skills.\n   *\n   * @protected\n   */\n  _prepareClassSkills() {\n    /** @type {Record<string,SkillData>} */\n    const skills = this.system.skills;\n    if (!skills) return;\n\n    const skillSet = new Set();\n    const csSources = this.items.filter((item) => [\"class\", \"race\", \"feat\"].includes(item.type));\n    for (const csItem of csSources) {\n      for (const [classSkillName, isClassSkill] of Object.entries(csItem.system.classSkills || {})) {\n        if (isClassSkill === true) skillSet.add(classSkillName);\n      }\n    }\n    if (skillSet.size == 0) return;\n\n    for (const [skillKey, skillData] of Object.entries(skills)) {\n      if (!skillData) {\n        console.warn(`Bad skill data for \"${skillKey}\"`, this);\n        continue;\n      }\n      skills[skillKey].cs = skillSet.has(skillKey);\n      for (const k2 of Object.keys(skillData.subSkills ?? {})) {\n        foundry.utils.setProperty(skillData, `subSkills.${k2}.cs`, skillSet.has(skillKey));\n      }\n    }\n  }\n\n  /**\n   * Checks if there's any matching proficiency\n   *\n   * @param {pf1.document.item.ItemEquipmentPF} item - The item to check for.\n   * @returns {boolean} Whether the actor is proficient with that item.\n   */\n  hasArmorProficiency(item) {\n    // Check for item type\n    if (item.type !== \"equipment\" || ![\"armor\", \"shield\"].includes(item.system.subType)) return true;\n\n    /** @type {TraitData} */\n    const aprof = this.system.traits?.armorProf;\n    if (!aprof) return false;\n\n    // Base proficiency\n    if (aprof.total.has(item.baseArmorProficiency)) return true;\n\n    // Base types with custom proficiencies\n    if (aprof.custom.size == 0) return false;\n\n    /** @type {string[]} */\n    const baseTypes = item.system.baseTypes ?? [];\n    return baseTypes.some((type) => aprof.custom.has(type));\n  }\n\n  /**\n   * Test if actor is proficient with specified weapon.\n   *\n   * @remarks Natural attacks incorrectly do not count as proficient.\n   *\n   * @param {ItemPF} item - Item to test\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.override=true] - Allow item's proficiency override to influence the result.\n   * @returns {boolean} - Proficiency state\n   */\n  hasWeaponProficiency(item, { override = true } = {}) {\n    if (override && item.system.proficient) return true; // Explicitly marked as proficient\n\n    /** @type {TraitData} */\n    const wprof = this.system.traits?.weaponProf;\n    if (!wprof) return false;\n\n    // Match basic proficiencies, e.g. simple and martial (only present on weapons)\n    // TODO: Make the item identify it's own weapon type\n    let category;\n    if (item.type === \"weapon\") {\n      category = item.subType;\n    } else if (item.type === \"attack\") {\n      category = item.subType === \"weapon\" ? item.system.weapon?.category : null;\n    }\n    if (wprof.standard.has(category)) return true;\n\n    // Match base types\n    if (wprof.custom.size == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    return baseTypes.some((type) => wprof.custom.has(type));\n  }\n\n  /**\n   * Update specific spellbook.\n   *\n   * @internal\n   * @param {string} bookId Spellbook identifier\n   * @param {object} [rollData] Roll data instance\n   * @param {object} cache Pre-calculated data for re-use from _generateSpellbookCache\n   */\n  _updateSpellBook(bookId, rollData, cache) {\n    const actorData = this.system;\n    const book = actorData.attributes?.spells?.spellbooks?.[bookId];\n    if (!book) {\n      console.error(`Spellbook data not found for \"${bookId} on actor`, this);\n      return;\n    }\n\n    // Set spellbook label\n    book.label = book.name || game.i18n.localize(`PF1.SpellBook${bookId.capitalize()}`);\n\n    // Do not process spellbooks that are not in use\n    if (!book.inUse) return;\n\n    // Init some values\n    const domainSlots = book.domainSlotValue || 0;\n\n    const levels = new Map();\n    // Prepare base data\n    for (let level = 0; level < 10; level++) {\n      const levelData = book.spells[`spell${level}`];\n      if (!levelData) continue;\n      levels.set(level, levelData);\n\n      levelData.casts = { unused: 0, max: NaN };\n      levelData.known = { unused: 0, max: NaN };\n      levelData.preparation = { unused: 0, max: NaN, domain: 0 };\n      levelData.domain = { unused: 0, max: domainSlots };\n      levelData.slots = { used: 0, max: NaN }; // Unused?\n    }\n\n    const mode = new SpellbookMode(book);\n\n    // Casts per day table\n    /** @type {number[][]} */\n    let castsPerDayTables = pf1.config.casterProgression.castsPerDay[mode.raw] ?? {};\n\n    // Set caster type to sane default if configuration not found.\n    let casterType = book.casterType;\n    if (!castsPerDayTables[casterType]) {\n      const keys = Object.keys(castsPerDayTables);\n      book.casterType = casterType = keys[0];\n      console.debug(\n        `Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook \"${bookId}\", auto-corrected to \"${casterType}\"`\n      );\n    }\n\n    castsPerDayTables = castsPerDayTables[casterType];\n\n    book.isSchool = book.kind !== \"divine\";\n    book.hasProgressionChoices = Object.keys(castsPerDayTables).length > 1;\n\n    // Prepared spells and known spells table\n    /** @type {number[][]} */\n    const preparedForLevelTables = pf1.config.casterProgression.spellsPreparedPerDay[mode.raw]?.[casterType];\n\n    // Use custom name if present\n    if (book.name) book.label = book.name;\n    // Get name from class if selected\n    else if (book.class) {\n      if (book.class === \"_hd\") book.label = book.name || game.i18n.localize(\"PF1.SpellBookSpelllike\");\n      else {\n        const bookClassId = this.classes[book.class]?._id;\n        const bookClass = this.items.get(bookClassId);\n        if (bookClass) book.label = bookClass.name;\n      }\n    }\n\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    // Ensure class info is available\n    if (book.class === \"_hd\") rollData.class = { level: rollData.attributes.hd?.total };\n    else rollData.class = rollData.classes?.[book.class];\n    rollData.cl = book.cl?.total;\n\n    /** @type {Spellbook} */\n    const bookInfo = cache.books[bookId];\n\n    /** @type {AbilityScoreData} */\n    const spellbookAbility = actorData.abilities[book.ability];\n\n    // Add spell slots based on ability bonus slot formula\n    const spellSlotAbilityScoreBonus = RollPF.safeRollSync(book.spellSlotAbilityBonusFormula || \"0\", rollData).total,\n      spellSlotAbilityScore = (spellbookAbility?.total ?? 10) + spellSlotAbilityScoreBonus,\n      spellSlotAbilityMod = pf1.utils.getAbilityModifier(spellSlotAbilityScore);\n\n    // Set CL\n    let clTotal = 0;\n    {\n      const key = `system.attributes.spells.spellbooks.${bookId}.cl.total`;\n      const formula = book.cl.formula || \"0\";\n      let classLevelTotal = 0;\n\n      // Add NPC base\n      if (this.type === \"npc\") {\n        const value = book.cl.base || 0;\n        classLevelTotal += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.Base\"), value);\n      }\n      // Add HD\n      if (book.class === \"_hd\") {\n        const value = actorData.attributes.hd.total;\n        classLevelTotal += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.HitDie\"), value);\n      }\n      // Add class levels\n      else if (book.class && rollData.class) {\n        const value = rollData.class?.unlevel || 0;\n        classLevelTotal += value;\n        clTotal += value;\n\n        setSourceInfoByName(this.sourceInfo, key, this.classes[book.class]?.name, value, true, \"class\");\n      }\n\n      // Set auto spell level calculation offset\n      if (book.autoSpellLevelCalculation) {\n        const autoFormula = book.cl.autoSpellLevelCalculationFormula || \"0\";\n        const autoBonus = RollPF.safeRollSync(autoFormula, rollData).total ?? 0;\n        const autoTotal = Math.clamp(classLevelTotal + autoBonus, 1, 20);\n        book.cl.autoSpellLevelTotal = autoTotal;\n\n        clTotal += autoBonus;\n        if (autoBonus !== 0) {\n          setSourceInfoByName(\n            this.sourceInfo,\n            key,\n            game.i18n.localize(\"PF1.AutoSpellClassLevelOffset.Formula\"),\n            autoBonus\n          );\n        }\n      } else {\n        book.cl.autoSpellLevelTotal = classLevelTotal;\n      }\n\n      // Add from bonus formula\n      const clBonus = RollPF.safeRollSync(formula, rollData).total;\n      clTotal += clBonus;\n      if (clBonus > 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus);\n      } else if (clBonus < 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus, false);\n      }\n\n      // HACK: Apply Wound Threshold outside of normal WT workflow since spellbook is handled outside of normal workflow\n      const penalty = this.system.attributes?.woundThresholds?.penalty || 0;\n      if (clTotal > 0 && penalty != 0) {\n        // BUG: If CL target affects more than .cl.total this fails to do so\n        // In case CL target of WT has been disabled by users\n        if (pf1.config.woundThresholdChangeTargets.includes(\"cl\")) {\n          const newCL = Math.max(1, clTotal - penalty);\n          book.cl.woundPenalty = clTotal - newCL; // Keep record of how much WT actually reduced this\n          clTotal = newCL;\n        }\n      }\n\n      // Apply negative levels\n      if (rollData.attributes.energyDrain) {\n        clTotal = Math.max(0, clTotal - rollData.attributes.energyDrain);\n        setSourceInfoByName(\n          this.sourceInfo,\n          key,\n          game.i18n.localize(\"PF1.NegativeLevels\"),\n          -Math.abs(rollData.attributes.energyDrain),\n          false\n        );\n      }\n\n      clTotal += book.cl.total ?? 0;\n      clTotal += book.cl.bonus ?? 0;\n      book.cl.total = clTotal;\n    }\n\n    // Set concentration bonus\n    {\n      // Temp fix for old actors that fail migration\n      if (Number.isFinite(book.concentration)) {\n        console.error(`Bad spellbook concentration value \"${book.concentration}\" in spellbook \"${bookId}\"`);\n        book.concentration = {};\n      }\n\n      // Bonus formula\n      const concFormula = book.concentrationFormula;\n      const formulaRoll = concFormula.length\n        ? RollPF.safeRollSync(concFormula, rollData, undefined, undefined, { minimize: true })\n        : { total: 0, isDeterministic: true };\n      const rollBonus = formulaRoll.isDeterministic ? formulaRoll.total : 0;\n\n      // Add it all up\n      const classAbilityMod = actorData.abilities[book.ability]?.mod ?? 0;\n      const concentration = clTotal + classAbilityMod + rollBonus;\n      book.concentration.total ||= 0; // Init\n\n      // Set source info\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.CasterLevel\"),\n        clTotal,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.SpellcastingAbility\"),\n        classAbilityMod,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.ByBonus\"),\n        formulaRoll.isDeterministic ? formulaRoll.total : formulaRoll.formula,\n        false\n      );\n\n      // Apply value\n      book.concentration ??= {};\n      book.concentration.total += concentration;\n    }\n\n    /**\n     * Get ability bonus slots for level\n     *\n     * @param {number} level\n     * @returns {number} - Bonus slots, always zero for level 0\n     */\n    const getAbilityBonus = (level) => ActorPF.getSpellSlotIncrease(spellSlotAbilityMod, level);\n\n    // Spell slots\n    const useAuto = book.autoSpellLevelCalculation;\n\n    // Turn off spell points with auto slots\n    if (useAuto) book.spellPoints.useSystem = false;\n    // Turn off bonus slots from ability score without auto slots\n    else book.autoSpellLevels = false;\n\n    // Set base \"spontaneous\" based on spell prep mode when using auto slots or spell points\n    const isSpontaneous = mode.isSemiSpontaneous;\n    const isPrepared = mode.isPrepared;\n    const isPure = isSpontaneous != isPrepared;\n    const isHybrid = !isPure;\n    book.spontaneous = isSpontaneous;\n    book.prepared = isPrepared;\n    book.pure = isPure;\n    book.hybrid = isHybrid;\n\n    // Invalid caster type\n    if (!castsPerDayTables) {\n      return void console.error(`Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook \"${bookId}\"`);\n    }\n\n    // Determine class level\n    let classLevel = book.cl.autoSpellLevelTotal;\n    if (useAuto) classLevel = Math.clamp(classLevel, 1, 20);\n    // Protect against invalid class level bricking actors\n    if (!Number.isSafeInteger(classLevel)) {\n      const msg = `Actor ${this.uuid} has invalid caster class level.`;\n      console.error(msg, classLevel);\n      ui.notifications?.error(msg, { console: false });\n      classLevel = Math.floor(classLevel);\n    }\n\n    // Casts per day table\n    const castsForLevels = castsPerDayTables[classLevel - 1];\n    // Prepared per day table (also known spells overall)\n    const preparedForLevels = preparedForLevelTables[classLevel - 1];\n\n    rollData.ablMod = spellSlotAbilityMod;\n\n    if (useAuto) {\n      let classLevel = Math.clamp(book.cl.autoSpellLevelTotal, 1, 20);\n\n      // Protect against invalid class level bricking actors\n      if (!Number.isSafeInteger(classLevel)) {\n        const msg = `Actor ${this.id} has invalid caster class level.`;\n        console.error(msg, classLevel);\n        ui.notifications?.error(msg, { console: false });\n        classLevel = Math.floor(classLevel);\n      }\n\n      rollData.ablMod = spellSlotAbilityMod;\n\n      const castsModAllLevelsFormula = book.castPerDayAllOffsetFormula || \"0\";\n      const castsModAllLevels =\n        castsModAllLevelsFormula != \"0\" ? RollPF.safeRollSync(castsModAllLevelsFormula, rollData).total : 0;\n      const prepModAllLevelsFormula = book.preparedAllOffsetFormula || \"0\";\n      const prepModAllLevels =\n        prepModAllLevelsFormula != \"0\" ? RollPF.safeRollSync(prepModAllLevelsFormula, rollData).total : 0;\n\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        rollData.sl = spellLevel;\n\n        const levelData = levels.get(spellLevel);\n\n        const castsOffsetFormula = levelData.castPerDayOffsetFormula || \"0\";\n        const castsOffset = castsOffsetFormula != \"0\" ? RollPF.safeRollSync(castsOffsetFormula, rollData).total : 0;\n        const prepOffsetFormula = levelData.preparedOffsetFormula || \"0\";\n        const prepOffset = prepOffsetFormula != \"0\" ? RollPF.safeRollSync(prepOffsetFormula, rollData).total : 0;\n\n        const abilityBonusSlots = getAbilityBonus(spellLevel);\n\n        // Casts\n        let castsPerDay = castsForLevels[spellLevel];\n        // Dealing with cantrips with cantrips not enabled\n        if (!book.hasCantrips && spellLevel == 0) castsPerDay = NaN;\n        levelData.base = castsPerDay || 0;\n\n        const preparedForLevel = preparedForLevels[spellLevel];\n\n        // Infinite casts, not much else to it\n        if (castsPerDay === Infinity) {\n          levelData.max = Infinity;\n        }\n        // Casts\n        else if (Number.isFinite(castsPerDay)) {\n          let maxSlots = castsPerDay + abilityBonusSlots + castsModAllLevels + castsOffset;\n          if (isPrepared) maxSlots += domainSlots; // Prepared and Hybrid get domains as extra casts\n          levelData.max = maxSlots;\n        }\n        // All other cases\n        else {\n          levelData.max = NaN;\n        }\n\n        levelData.casts.max = levelData.max;\n\n        // Preparation\n        if (Number.isFinite(preparedForLevel)) {\n          let prep = preparedForLevel + prepOffset + prepModAllLevels;\n\n          // Add domain slot prep\n          levelData.preparation.domain = spellLevel > 0 ? domainSlots : 0;\n\n          // Add bonus slot from ability score, only pure prepared get this\n          if (!isSpontaneous) {\n            prep += abilityBonusSlots;\n            levelData.max = prep; // Full prepared tracks prepared spells rather than casts\n            if (spellLevel > 0) levelData.max += domainSlots;\n          }\n\n          levelData.preparation.max = prep;\n          levelData.known.max = isPrepared ? Infinity : prep;\n          if (isSpontaneous && spellLevel > 0) {\n            levelData.known.domain = domainSlots;\n          } else {\n            levelData.known.domain = 0;\n          }\n        }\n\n        // Set spells remaining to match max if it's not a number\n        if (!Number.isFinite(levelData.value)) levelData.value = levelData.max;\n\n        // NaN everything if level is invalid\n        if (isNaN(levelData.max)) {\n          levelData.preparation.max = NaN;\n          levelData.domain.max = NaN;\n          levelData.known.max = NaN;\n        }\n      }\n    }\n    // Manual slots\n    else {\n      for (let level = book.hasCantrips ? 0 : 1; level < 10; level++) {\n        const levelData = levels.get(level);\n\n        let base = levelData.base;\n        if (Number.isNaN(base) || base === null) {\n          levelData.base = null;\n          levelData.max = 0;\n        } else if (book.autoSpellLevels && base >= 0) {\n          base += getAbilityBonus(level);\n          levelData.max = base;\n        } else {\n          levelData.max = base || 0;\n        }\n\n        // TODO: Add option for automatic ability boosting\n\n        if (!Number.isFinite(levelData.value)) {\n          levelData.value = levelData.max;\n        }\n      }\n    }\n\n    const maxLevelByAblScore = (spellbookAbility?.total ?? 0) - 10;\n\n    // Calculate base slots\n    /** @type {Record<number, SpellbookSlots>} */\n    const slots = {};\n\n    for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n      const levelData = levels.get(spellLevel);\n      levelData.value ||= 0; // HACK: Set spontaneous remaining casts to something sane. This shouldn't be necessary\n\n      // Insufficient ability score for the level\n      if (maxLevelByAblScore < spellLevel && book.noAbilityLimit !== true) {\n        levelData.hasIssues = true;\n        levelData.lowAbilityScore = true;\n      }\n\n      // Skip on the rest if this spell level is invalid\n      if (Number.isNaN(levelData.max)) continue;\n\n      // Base slots\n      const max = useAuto ? (isSpontaneous ? levelData.casts.max : levelData.preparation.max) : levelData.max || 0;\n      slots[spellLevel] = new SpellbookSlots({\n        level: spellLevel,\n        max,\n        domain: book.domainSlotValue,\n      });\n\n      // Slot usage\n      /** @type {pf1.documents.item.ItemSpellPF[]} */\n      const levelSpells = bookInfo.level[spellLevel]?.spells ?? [];\n      const lvlSlots = slots[spellLevel];\n\n      // Occupied slots\n      for (const spell of levelSpells) {\n        /** @type {number} */\n        let prepared;\n        if (isSpontaneous) prepared = spell.system.preparation?.value || 0;\n        else prepared = spell.system.preparation?.max || 0;\n        if (!prepared) continue;\n\n        const slotCost = spell.slotCost;\n        const slots = slotCost * prepared;\n\n        if (spell.isDomain) {\n          lvlSlots.domain -= slots;\n        } else {\n          lvlSlots.used += slots;\n        }\n\n        lvlSlots.value -= slots;\n      }\n\n      // True prepared reduce casts by prepared slots, arcanist and sorcerer for example do not\n      if (!isSpontaneous) levelData.value = lvlSlots.value;\n\n      // Add slot statistics\n      if (useAuto) {\n        levelData.slots.max = isSpontaneous ? levelData.casts.max : levelData.preparation.max;\n        if (isHybrid) levelData.slots.max -= levelData.domain.max;\n      } else {\n        levelData.slots.max = levelData.max;\n      }\n\n      levelData.slots.used = lvlSlots.used;\n      if (isPrepared) levelData.preparation.used = levelData.slots.used;\n      levelData.slots.remaining = levelData.slots.max - levelData.slots.used;\n      levelData.slots.excess = Math.max(0, -levelData.slots.remaining);\n      levelData.domain.remaining = lvlSlots.domain;\n      levelData.domain.used = 0;\n      levelData.domain.excess = Math.max(0, -levelData.domain.remaining);\n      levelData.mismatchSlots = -(\n        levelData.slots.excess +\n        levelData.domain.excess -\n        Math.max(0, levelData.slots.remaining)\n      );\n\n      if (levelData.mismatchSlots == 0) levelData.mismatchSlots = levelData.slots.remaining;\n\n      // Without auto or with any form of spontaneous, slots are impossible to calculate\n      if (useAuto || !isSpontaneous) {\n        levelData.invalidSlots = levelData.mismatchSlots != 0 || levelData.slots.remaining != 0;\n      }\n\n      // Finalize\n      let remaining = 0;\n      // True prepared (not hybrid either)\n      if (isPrepared && isPure) {\n        remaining = levelData.value;\n      }\n      // Spontaneous\n      else {\n        // Spontaneous and Hybrid\n        // if not prepared then base off of casts per day\n        const available = useAuto ? levelData.preparation.max : levelData.max;\n\n        if (Number.isNaN(available)) {\n          levelData.hasIssues = true;\n          levelData.lowLevel = true;\n        }\n\n        // Reset used, just in case\n        lvlSlots.used = 0;\n        levelData.domain.used = 0;\n        let domainRemaining = levelData.domain.max;\n\n        // Count spell slots used\n        for (const spell of bookInfo.level[spellLevel]?.spells ?? []) {\n          const { preparation, atWill, domain } = spell.system;\n          if (atWill) continue;\n          if (preparation.value <= 0) continue;\n\n          const slotCost = spell.slotCost;\n          if (domain && domainRemaining > 0) domainRemaining -= slotCost;\n          else lvlSlots.used += slotCost;\n        }\n\n        levelData.domain.used = levelData.domain.max - domainRemaining;\n        remaining = available - lvlSlots.used;\n      }\n\n      levelData.remaining = remaining;\n\n      // No more processing needed\n      // Detect domain slot problems\n      const domainSlotsRemaining = spellLevel > 0 ? lvlSlots.domain : 0;\n      if (remaining == 0 && domainSlotsRemaining <= 0) continue;\n      levelData.hasIssues = true;\n\n      // Only pure spontaneous tracks known, hybrid calculates prepared through this\n      if (isSpontaneous) {\n        levelData.known.used = lvlSlots.used;\n        // Pure\n        if (!isPrepared) {\n          const known = levelData.known.max - levelData.known.used;\n          levelData.known.unused = Math.max(0, known);\n          levelData.known.excess = -Math.min(0, known);\n          if (useAuto) {\n            levelData.mismatchKnown = known;\n            levelData.invalidKnown = levelData.known.unused != 0 || levelData.known.excess != 0;\n          }\n        }\n        // Hybrid\n        else {\n          if (useAuto) levelData.mismatchSlots = remaining;\n        }\n      }\n\n      // TODO: Figure out why NaN leaks here\n      if (isPrepared && Number.isFinite(levelData.preparation.max)) {\n        const maxSlots = levelData.preparation.max + levelData.preparation.domain;\n        levelData.preparation.unused = Math.max(0, maxSlots - levelData.preparation.used);\n      }\n\n      // With auto slots disabled and any kind of spontaneous, we know nothing\n      if (!useAuto && isSpontaneous) {\n        levelData.mismatchKnown = 0;\n        levelData.mismatchSlots = 0;\n        levelData.domain.remaining = 0;\n        levelData.slots.remaining = 0;\n      }\n    }\n\n    // Spell points\n    const useSpellPoints = book.spellPoints.useSystem === true;\n    if (useSpellPoints) {\n      const formula = book.spellPoints.maxFormula || \"0\";\n      rollData.ablMod = spellSlotAbilityMod;\n\n      rollData.classLevel = rollData.class?.level; // @deprecated - to be removed after v11\n\n      const roll = RollPF.safeRollSync(formula, rollData);\n      book.spellPoints.max = roll.total;\n    } else {\n      book.spellPoints.max = 0;\n    }\n\n    // Set spellbook ranges\n    book.range = new SpellRanges(book.cl.total);\n  }\n\n  /**\n   * Collect some basic spellbook info so it doesn't need to be gathered again for each spellbook.\n   *\n   * @internal\n   * @returns {{spells:ItemSpellPF[], books:Record<string,Spellbook>}} Spellbook cache\n   */\n  _generateSpellbookCache() {\n    const bookKeys = new Set(Object.keys(this.system.attributes.spells.spellbooks));\n\n    const allSpells = this.itemTypes.spell;\n\n    const cache = {\n      spells: allSpells,\n      /** @type {Record<string,Spellbook>} */\n      books: {},\n    };\n\n    // Prepare spellbooks\n    for (const bookKey of bookKeys) {\n      cache.books[bookKey] ??= new Spellbook(bookKey, this);\n    }\n\n    // Spread out spells to books\n    for (const spell of allSpells) {\n      const bookKey = spell.system.spellbook;\n      if (!bookKeys.has(bookKey)) {\n        console.error(\"Spell has invalid book\", spell);\n        continue;\n      }\n      cache.books[bookKey].addSpell(spell);\n    }\n\n    return cache;\n  }\n\n  /**\n   * Update all spellbooks\n   *\n   * @internal\n   * @param {object} [rollData] Roll data instance\n   * @param {object} [cache] Spellbook cache\n   */\n  updateSpellbookInfo(rollData, cache) {\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const spellbooks = this.system.attributes.spells.spellbooks;\n\n    // Set spellbook info\n    for (const bookKey of Object.keys(spellbooks)) {\n      this._updateSpellBook(bookKey, rollData, cache);\n\n      // Cleanup roll data modifications\n      delete rollData.class;\n      delete rollData.classLevel;\n      delete rollData.cl;\n      delete rollData.sl;\n      delete rollData.ablMod;\n    }\n  }\n\n  /**\n   * Called just before the first change is applied, and after every change is applied.\n   * Sets additional variables (such as spellbook range)\n   *\n   * @internal\n   */\n  refreshDerivedData() {\n    // Reset maximum dexterity bonus\n    this.system.attributes.maxDexBonus = null;\n    this.system.abilities.dex.maxBonus = this.system.abilities.dex.mod;\n\n    // Compute encumbrance\n    const encPen = this._computeEncumbrance();\n\n    // Apply armor penalties\n    const gearPen = this._applyArmorPenalties();\n\n    // Set armor check penalty\n    this.system.attributes.acp.encumbrance = encPen.acp;\n    this.system.attributes.acp.gear = gearPen.acp;\n    this.system.attributes.acp.total = Math.max(encPen.acp, gearPen.acp);\n    // Broken gear affects only skills\n    this.system.attributes.acp.skill = Math.max(encPen.acp, gearPen.acpSkill);\n\n    // Set maximum dexterity bonus\n    if (encPen.maxDexBonus != null || gearPen.maxDexBonus != null) {\n      this.system.attributes.maxDexBonus = Math.min(\n        encPen.maxDexBonus ?? Number.POSITIVE_INFINITY,\n        gearPen.maxDexBonus ?? Number.POSITIVE_INFINITY\n      );\n      this.system.abilities.dex.maxBonus = Math.min(\n        this.system.abilities.dex.maxBonus,\n        this.system.attributes.maxDexBonus\n      );\n    }\n  }\n\n  /**\n   * Augment the basic actor data with additional dynamic data.\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this._prepareNaturalReach();\n\n    this.system.traits ??= {};\n    this._finalizeTraits();\n\n    // Add incorporeal status if they have incorporeal creature type\n    if (this.system.traits?.creatureSubtypes?.standard?.has(\"incorporeal\")) {\n      this.statuses.add(\"incorporeal\");\n      this.system.conditions.incorporeal = true;\n    }\n\n    this.system.attributes ??= {};\n\n    this._prepareCreatureType();\n\n    // Reset roll data cache\n    // Some changes act wonky without this\n    // Example: `@skills.hea.rank >= 10 ? 6 : 3` doesn't work well without this\n    this._rollData = null;\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Update dependant data and resources\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    const natReach = this.system.traits.reach.total;\n    // Ensure reach never becomes negative value\n    if (natReach.melee < 0) natReach.melee = 0;\n    if (natReach.reach < 0) natReach.reach = 0;\n\n    // Prepare specific derived data\n    // Final weight, ability modifiers, etc.\n    this.prepareSpecificDerivedData();\n\n    // Prepare CMB total\n    this.prepareCMB();\n\n    this._prepareOverlandSpeeds();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update items\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  /**\n   * Calculate overland speeds.\n   *\n   * @protected\n   */\n  _prepareOverlandSpeeds() {\n    for (const speed of Object.values(this.system.attributes?.speed ?? {})) {\n      speed.overland = speed.total > 0 ? pf1.utils.overlandSpeed(speed.total).speed : 0;\n    }\n  }\n\n  /**\n   * Prepare total CMB value.\n   *\n   * @todo Move all the logic here to the Change system.\n   *\n   * @protected\n   */\n  prepareCMB() {\n    const shrAtk = this.system.attributes.attack.shared ?? 0,\n      genAtk = this.system.attributes.attack.general ?? 0,\n      cmbAbl = this.system.attributes.cmbAbility,\n      cmbAblMod = this.system.abilities[cmbAbl]?.mod ?? 0,\n      size = this.system.traits.size.value,\n      szCMBMod = Object.values(pf1.config.sizeSpecialMods)[size] ?? 0,\n      cmbBonus = this.system.attributes.cmb.bonus ?? 0,\n      cmb = shrAtk + genAtk + szCMBMod + cmbBonus + cmbAblMod;\n    this.system.attributes.cmb.total = cmb;\n  }\n\n  /**\n   * @protected\n   */\n  prepareSpecificDerivedData() {\n    if (Hooks.events.pf1PrepareDerivedActorData?.length) {\n      Hooks.callAll(\"pf1PrepareDerivedActorData\", this);\n    }\n\n    this.refreshDerivedData();\n\n    const attributes = this.system.attributes,\n      /** @type {Record<string,AbilityScoreData>} */\n      abilities = this.system.abilities;\n\n    // Set base ability modifier\n    for (const ablKey of Object.keys(abilities)) {\n      const abl = abilities[ablKey];\n      const base = abl.base;\n      const penalty = abl.penalty || 0;\n      const damage = abl.damage;\n      abl.baseMod = pf1.utils.getAbilityModifier(base, { penalty, damage });\n      // Save also unmodified modifier\n      abl.unmod = pf1.utils.getAbilityModifier(abl.undrained);\n    }\n\n    const actorData = this.system;\n\n    // Round health\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    for (const k of [\"hp\", \"vigor\"]) {\n      attributes[k].max = round(attributes[k].max);\n    }\n\n    // Offset relative health\n    for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = this.system.attributes[key];\n      if (Number.isFinite(hp?.offset)) {\n        hp.value = hp.max + hp.offset;\n      }\n    }\n\n    // Shared attack bonuses\n    {\n      // Total\n      const totalAtk = attributes.bab.total - attributes.acp.attackPenalty - (attributes.energyDrain ?? 0);\n      attributes.attack.shared = totalAtk;\n    }\n\n    // Update wound threshold\n    this.updateWoundThreshold();\n\n    // Create arbitrary skill slots\n    for (const skillId of pf1.config.arbitrarySkills) {\n      if (actorData.skills[skillId] == null) continue;\n      /** @type {SkillData} */\n      const skill = actorData.skills[skillId];\n      skill.subSkills = skill.subSkills || {};\n      for (const subSkillId of Object.keys(skill.subSkills)) {\n        if (skill.subSkills[subSkillId] == null) delete skill.subSkills[subSkillId];\n      }\n    }\n\n    // Delete removed skills\n    for (const skillId of Object.keys(actorData.skills)) {\n      const skl = actorData.skills[skillId];\n      if (skl == null) {\n        delete actorData.skills[skillId];\n      }\n    }\n\n    // Mark background skills\n    for (const skillId of Object.keys(actorData.skills)) {\n      if (pf1.config.backgroundSkills.includes(skillId)) {\n        const skill = actorData.skills[skillId];\n        skill.background = true;\n        for (const subSkillId of Object.keys(skill.subSkills ?? {})) skill.subSkills[subSkillId].background = true;\n      }\n    }\n\n    // Combine AC types\n    for (const k of [\"ac.normal.total\", \"ac.shield.total\", \"ac.natural.total\"]) {\n      const v = foundry.utils.getProperty(actorData, k);\n      if (v) {\n        for (const k2 of [\"normal\", \"flatFooted\"]) {\n          attributes.ac[k2].total += v;\n        }\n      }\n    }\n\n    // Add Dexterity to AC\n    {\n      // get configured ability scores\n      const acAbl = attributes.ac.normal.ability ?? \"dex\";\n      const acTouchAbl = attributes.ac.touch.ability ?? \"dex\";\n      const cmdDexAbl = attributes.cmd.dexAbility ?? \"dex\";\n      let acAblMod = abilities[acAbl]?.mod ?? 0;\n      let acTouchAblMod = abilities[acTouchAbl]?.mod ?? 0;\n      const cmdDexAblMod = abilities[cmdDexAbl]?.mod ?? 0;\n      if (this.changeFlags[\"loseDexToAC\"]) {\n        acAblMod = Math.min(acAblMod, 0);\n        acTouchAblMod = Math.min(acTouchAblMod, 0);\n      }\n      const maxDex = attributes.maxDexBonus ?? null;\n      const ac = {\n        normal: maxDex !== null ? Math.min(maxDex, acAblMod) : acAblMod,\n        touch: maxDex !== null ? Math.min(maxDex, acTouchAblMod) : acTouchAblMod,\n        flatFooted: Math.min(0, acAblMod),\n      };\n      const acAblKey = {\n        normal: acAbl,\n        touch: acTouchAbl,\n        flatFooted: acAbl,\n      };\n      const cmd = {\n        total: cmdDexAblMod,\n        flatFootedTotal: Math.min(0, cmdDexAblMod),\n      };\n      for (const [k, v] of Object.entries(ac)) {\n        attributes.ac[k].total += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.ac.${k}.total`).positive.push({\n          value: v,\n          name: pf1.config.abilities[acAblKey[k]],\n        });\n      }\n      for (const [k, v] of Object.entries(cmd)) {\n        attributes.cmd[k] += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.cmd.${k}`).positive.push({\n          value: v,\n          name: pf1.config.abilities[cmdDexAbl],\n        });\n      }\n    }\n\n    // Reduce final speed under certain circumstances\n    {\n      let reducedSpeed = false;\n      const sInfo = { name: \"\", value: game.i18n.localize(\"PF1.ReducedMovementSpeed\") };\n\n      // from encumbrance\n      const encLevel = attributes.encumbrance.level;\n      if (encLevel > 0) {\n        const encLevels = pf1.config.encumbranceLevels;\n        if (encLevel >= encLevels.heavy) {\n          if (!this.changeFlags.noHeavyEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.HeavyEncumbrance\");\n          }\n        } else if (encLevel >= encLevels.medium) {\n          if (!this.changeFlags.noMediumEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.MediumEncumbrance\");\n          }\n        }\n      }\n\n      const armor = { type: 0 };\n      const eqData = this.equipment;\n      if (eqData) this._prepareArmorData(eqData.armor, armor);\n\n      // Wearing heavy armor\n      if (armor.type == pf1.config.armorTypes.heavy && !this.changeFlags.heavyArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.heavy\");\n      }\n      // Wearing medium armor\n      else if (armor.type == pf1.config.armorTypes.medium && !this.changeFlags.mediumArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.medium\");\n      }\n\n      for (const speedKey of Object.keys(this.system.attributes.speed)) {\n        const speedValue = this.system.attributes.speed[speedKey].total;\n        // Save speed unaffected by speed maluses here (not counting negative changes)\n        // TODO: Somehow make this ignore additional set operators\n        this.system.attributes.speed[speedKey].unhindered = speedValue; // @since PF1 v10\n\n        if (reducedSpeed && speedValue > 0) {\n          this.system.attributes.speed[speedKey].total = this.constructor.getReducedMovementSpeed(speedValue);\n          getSourceInfo(this.sourceInfo, `system.attributes.speed.${speedKey}.total`).negative.push(sInfo);\n        }\n      }\n    }\n\n    // Add encumbrance source details\n    let encACPPenalty = null,\n      encMaxDex = null;\n    switch (attributes.encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium: {\n        encACPPenalty = 3;\n        encMaxDex = 3;\n        break;\n      }\n      case pf1.config.encumbranceLevels.heavy: {\n        encACPPenalty = 6;\n        encMaxDex = 1;\n        break;\n      }\n    }\n    const encLabel = game.i18n.localize(\"PF1.Encumbrance\");\n    if (encACPPenalty !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n        name: encLabel,\n        value: encACPPenalty,\n      });\n    }\n    if (encMaxDex !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n        name: encLabel,\n        value: encMaxDex,\n      });\n      let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(encMaxDex);\n      maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.normal.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.touch.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n    }\n\n    // Enable senses based on flags\n    const senses = this.system.traits.senses;\n    senses.ll.enabled ||= this.changeFlags.lowLightVision;\n    senses.si ||= this.changeFlags.seeInvisibility;\n    senses.sid ||= this.changeFlags.seeInDarkness;\n\n    this.updateSpellbookInfo();\n  }\n\n  /**\n   * Returns this actor's labels for use with sheets.\n   *\n   * @protected\n   * @returns {Record<string, string>} - Label object\n   */\n  getLabels() {\n    const labels = {};\n\n    labels.alignment = pf1.config.alignments[this.system.details.alignment];\n\n    // Speed\n    labels.speed = {};\n    for (const [key, obj] of Object.entries(this.system.attributes.speed ?? {})) {\n      const dist = pf1.utils.convertDistance(obj.total);\n      labels.speed[key] = `${dist[0]} ${pf1.config.measureUnitsShort[dist[1]]}`;\n    }\n\n    return labels;\n  }\n\n  /**\n   * Computes armor penalties for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from armor.\n   */\n  _applyArmorPenalties() {\n    let attackACPPenalty = 0; // ACP to attack penalty from lacking proficiency. Stacks infinitely.\n    const acp = { armor: 0, shield: 0 };\n    const broken = { armor: { value: 0, item: null }, shield: { value: 0, item: null } };\n    const mdex = { armor: null, shield: null };\n\n    const equipment = this.itemTypes.equipment;\n    for (const item of equipment) {\n      if (!item.system.equipped) continue;\n\n      let eqType = item.system.subType;\n      const isShieldOrArmor = [\"armor\", \"shield\"].includes(eqType);\n      // Cast anything else to armor\n      if (!isShieldOrArmor) eqType = \"armor\";\n\n      let itemACP = item.system.armor?.acp ?? 0;\n      if (!Number.isFinite(itemACP)) itemACP = 0;\n\n      if (item.system.masterwork === true && isShieldOrArmor) itemACP = Math.max(0, itemACP - 1);\n\n      itemACP = Math.max(0, itemACP + (this.system.attributes?.acp?.[`${eqType}Bonus`] ?? 0));\n\n      if (itemACP) {\n        if (item.isBroken) {\n          broken[eqType].value = itemACP;\n          broken[eqType].item = item;\n\n          const bsInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.find(\n            (o) => o.itemId === item.id\n          );\n          if (bsInfo) bsInfo.value = itemACP;\n          else {\n            getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.push({\n              name: `${item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n              itemId: item.id,\n              value: itemACP,\n            });\n          }\n        }\n\n        const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.find(\n          (o) => o.itemId === item.id\n        );\n\n        if (sInfo) sInfo.value = itemACP;\n        else {\n          getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n            name: item.name,\n            itemId: item.id,\n            value: itemACP,\n          });\n        }\n      }\n\n      if (itemACP > acp[eqType]) acp[eqType] = itemACP;\n      try {\n        if (!item.getProficiency(false)) attackACPPenalty += itemACP;\n      } catch {\n        /* item does not support proficiency */\n      }\n\n      const mDex = item.system.armor.dex;\n      if (Number.isFinite(mDex)) {\n        const mod = this.system.attributes?.mDex?.[`${eqType}Bonus`] ?? 0;\n        const itemMDex = mDex + mod;\n        mdex[eqType] = Math.min(itemMDex, mdex[eqType] ?? Number.POSITIVE_INFINITY);\n\n        const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.find(\n          (o) => o.itemId === item.id\n        );\n        if (sInfo) sInfo.value = itemMDex;\n        else {\n          getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n            name: item.name,\n            itemId: item.id,\n            value: itemMDex,\n            ignoreNull: false,\n          });\n        }\n\n        // Add max dex to AC, too.\n        let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(itemMDex);\n        maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n        for (const p of [\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\"]) {\n          // Use special maxDex id to ensure only the worst is shown\n          const sInfoA = getSourceInfo(this.sourceInfo, p).negative.find((o) => o.id === \"maxDexEq\");\n          if (sInfoA) {\n            if (itemMDex < sInfoA.valueAsNumber) {\n              sInfoA.value = maxDexLabel;\n              sInfoA.valueAsNumber = itemMDex;\n              sInfoA.itemId = item.id;\n              sInfoA.name = item.name;\n            } else if (sInfoA.itemId == item.id) {\n              // Update existing (armor training or the like)\n              sInfoA.value = maxDexLabel;\n              sInfoA.valueAsNumber = itemMDex;\n            }\n          } else {\n            getSourceInfo(this.sourceInfo, p).negative.push({\n              name: item.name,\n              value: maxDexLabel,\n              valueAsNumber: itemMDex,\n              itemId: item.id,\n              id: \"maxDexEq\",\n            });\n          }\n        }\n      }\n    }\n\n    // Add Broken to sources\n    for (const eqType of Object.keys(broken)) {\n      const value = broken[eqType].value;\n      if (value == 0) continue;\n      const brokenId = broken[eqType].item.id;\n      const sInfo = getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.find(\n        (o) => o.brokenId === brokenId\n      );\n      if (sInfo) sInfo.value = value;\n      else\n        getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.push({\n          name: `${broken[eqType].item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n          brokenId,\n          value,\n        });\n    }\n\n    // Return result\n    const totalACP = acp.armor + acp.shield;\n    const result = {\n      maxDexBonus: null,\n      acp: totalACP,\n      acpSkill: totalACP + broken.armor.value + broken.shield.value,\n    };\n    this.system.attributes.acp.gear = totalACP;\n    if (mdex.armor !== null || mdex.shield !== null)\n      result.maxDexBonus = Math.min(mdex.armor ?? Number.POSITIVE_INFINITY, mdex.shield ?? Number.POSITIVE_INFINITY);\n\n    // Set armor penalty to attack rolls\n    this.system.attributes.acp.attackPenalty = attackACPPenalty;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  prepareItemLinks() {\n    for (const item of this.items) {\n      const links = item.system.links;\n      if (!links) continue;\n\n      for (const type of Object.keys(links)) {\n        for (const link of links[type]) {\n          // HACK: fromUuid[Sync]() causes recursive synth actor initialization at world launch, so we do this instead\n          if (!link.uuid) {\n            console.warn(`\"${item.name}\" on \"${this.name}\" has invalid link in \"${type}\"`, { link, item });\n            continue;\n          }\n          const linkData = foundry.utils.parseUuid(link.uuid, { relative: this });\n          const linkedItem = this.items.get(linkData?.id);\n          if (!linkedItem) continue; // Ignore items not on current actor\n\n          switch (type) {\n            case \"charges\": {\n              linkedItem.links.charges = item;\n              linkedItem.prepareLinks();\n              break;\n            }\n            case \"children\": {\n              linkedItem.links.parent = item;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @deprecated - Use {@link getSourceDetails()} instead.\n   * @type {object}\n   */\n  get sourceDetails() {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.sourceDetails is deprecated in favor of ActorPF.getSourceDetails()\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    const actor = this;\n\n    // Redirect to getSourceDetails()\n    const sourceDetailsHandler = {\n      get(_, prop) {\n        return actor.getSourceDetails(prop);\n      },\n    };\n\n    return new Proxy({}, sourceDetailsHandler);\n  }\n\n  /**\n   * Retrieve source details regarding a change target.\n   *\n   * @example\n   * ```js\n   * actor.getSourceDetails(\"system.attributes.hp.max\");\n   * ```\n   * @todo - Merge `sourceInfo` into the change system to reduce underlying system complexity\n   * @param {string} path - Change target path\n   * @returns {SourceInfo[]}\n   */\n  getSourceDetails(path) {\n    const sources = [];\n\n    const dexDenied = this.changeFlags.loseDexToAC === true;\n\n    // Add extra data\n    const rollData = this.getRollData();\n    const changeGrp = this.sourceInfo[path] ?? {};\n    const sourceGroups = Object.values(changeGrp);\n\n    const typeBonuses = {};\n\n    for (const grp of sourceGroups) {\n      for (const src of grp) {\n        src.operator ||= \"add\";\n        let srcValue =\n          src.value != null\n            ? src.value\n            : RollPF.safeRollSync(src.formula || \"0\", rollData, [path, src, this], {\n                suppressError: !this.isOwner,\n              }).total;\n        if (src.operator === \"set\") {\n          let displayValue = srcValue;\n          if (src.change?.isDistance) displayValue = pf1.utils.convertDistance(displayValue)[0];\n          srcValue = game.i18n.format(\"PF1.SetTo\", { value: displayValue });\n        }\n\n        // Add sources only if they actually add something else than zero\n        if (!(src.operator === \"add\" && srcValue === 0) || src.ignoreNull === false) {\n          // Account for dex denied denying dodge bonuses\n          if (dexDenied && srcValue > 0 && src.modifier === \"dodge\" && src.operator === \"add\" && src.change?.isAC)\n            continue;\n\n          // TODO: Separate source name from item type label\n          const label = this.constructor._getSourceLabel(src);\n          const info = { name: label.replace(/[[\\]]/g, \"\"), value: srcValue, modifier: src.modifier || null };\n          if (src.id) info.id = src.id;\n          typeBonuses[src.modifier || \"untyped\"] ??= [];\n          typeBonuses[src.modifier || \"untyped\"].push(info);\n          sources.push(info);\n        }\n      }\n    }\n\n    // Sort and disable entries\n    const stacking = new Set(pf1.config.stackingBonusTypes);\n    for (const [type, entries] of Object.entries(typeBonuses)) {\n      if (stacking.has(type)) continue;\n      entries.sort((a, b) => b.value - a.value);\n      for (const entry of entries) {\n        entry.disabled = entry.value >= 0 || typeof entry.value !== \"number\";\n      }\n      entries[0].disabled = false;\n    }\n\n    return sources;\n  }\n\n  /**\n   * @internal\n   * @returns {Record<string,*>} - Path to value mapping\n   */\n  _getInherentTotalsKeys() {\n    // Determine base keys\n    const keys = {\n      \"attributes.ac.normal.total\": 10,\n      \"attributes.ac.touch.total\": 10,\n      \"attributes.ac.flatFooted.total\": 10,\n      \"attributes.bab.total\": 0,\n      \"attributes.cmd.total\": 10,\n      \"attributes.cmd.flatFootedTotal\": 10,\n      \"attributes.acp.armorBonus\": 0,\n      \"attributes.acp.shieldBonus\": 0,\n      \"attributes.acp.gear\": 0,\n      \"attributes.acp.encumbrance\": 0,\n      \"attributes.acp.total\": 0,\n      \"attributes.acp.skill\": 0,\n      \"attributes.acp.attackPenalty\": 0,\n      \"attributes.maxDexBonus\": null,\n      \"ac.normal.total\": 0,\n      \"ac.normal.base\": 0,\n      \"ac.normal.enh\": 0,\n      \"ac.normal.misc\": 0,\n      \"ac.natural.total\": 0,\n      \"ac.natural.base\": 0,\n      \"ac.natural.misc\": 0,\n      \"ac.natural.enh\": 0,\n      \"ac.shield.total\": 0,\n      \"ac.shield.base\": 0,\n      \"ac.shield.enh\": 0,\n      \"ac.shield.misc\": 0,\n      \"attributes.sr.total\": 0,\n      \"attributes.init.bonus\": 0,\n      \"attributes.init.total\": this.system.attributes.init.value ?? 0,\n      \"attributes.cmb.bonus\": 0,\n      \"attributes.cmb.total\": 0,\n      \"attributes.cmb.value\": 0,\n      \"attributes.hp.max\": this.system.attributes.hp.base ?? 0,\n      \"attributes.vigor.max\": this.system.attributes.vigor.base ?? 0,\n      \"attributes.wounds.max\": this.system.attributes.wounds.base ?? 0,\n      \"attributes.wounds.threshold\": 0,\n      \"attributes.attack.general\": 0,\n      \"attributes.attack.melee\": 0,\n      \"attributes.attack.natural\": 0,\n      \"attributes.attack.ranged\": 0,\n      \"attributes.attack.thrown\": 0,\n      \"attributes.attack.shared\": 0,\n      \"attributes.attack.critConfirm\": 0,\n      \"attributes.mDex\": { armorBonus: 0, shieldBonus: 0 },\n      \"attributes.damage.general\": 0,\n      \"attributes.damage.weapon\": 0,\n      \"attributes.damage.natural\": 0,\n      \"attributes.damage.melee\": 0, // Melee weapon\n      \"attributes.damage.meleeAll\": 0,\n      \"attributes.damage.ranged\": 0, // Ranged weapon\n      \"attributes.damage.rangedAll\": 0,\n      \"attributes.damage.thrown\": 0, // Thrown weapon\n      \"attributes.damage.spell\": 0,\n      \"attributes.damage.shared\": 0,\n      \"attributes.woundThresholds.level\": 0,\n      \"attributes.woundThresholds.mod\": 0,\n      \"attributes.woundThresholds.penaltyBase\": 0,\n      \"attributes.woundThresholds.penalty\": 0,\n      \"abilities.str.checkMod\": 0,\n      \"abilities.str.total\": 0,\n      \"abilities.str.undrained\": 0,\n      \"abilities.dex.checkMod\": 0,\n      \"abilities.dex.total\": 0,\n      \"abilities.dex.undrained\": 0,\n      \"abilities.con.checkMod\": 0,\n      \"abilities.con.total\": 0,\n      \"abilities.con.undrained\": 0,\n      \"abilities.int.checkMod\": 0,\n      \"abilities.int.total\": 0,\n      \"abilities.int.undrained\": 0,\n      \"abilities.wis.checkMod\": 0,\n      \"abilities.wis.total\": 0,\n      \"abilities.wis.undrained\": 0,\n      \"abilities.cha.checkMod\": 0,\n      \"abilities.cha.total\": 0,\n      \"abilities.cha.undrained\": 0,\n      \"attributes.spells.spellbooks.primary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.secondary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.concentration.total\": 0,\n      \"attributes.spells.spellbooks.primary.cl.total\": 0,\n      \"attributes.spells.spellbooks.secondary.cl.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.cl.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.cl.total\": 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n      \"details.feats.bonus\": 0,\n      \"details.skills.bonus\": 0,\n      \"attributes.speed.land.add\": 0,\n      \"attributes.speed.swim.add\": 0,\n      \"attributes.speed.fly.add\": 0,\n      \"attributes.speed.climb.add\": 0,\n      \"attributes.speed.burrow.add\": 0,\n      \"attributes.savingThrows.fort.total\": this.system.attributes.savingThrows.fort.base ?? 0,\n      \"attributes.savingThrows.ref.total\": this.system.attributes.savingThrows.ref.base ?? 0,\n      \"attributes.savingThrows.will.total\": this.system.attributes.savingThrows.will.base ?? 0,\n    };\n\n    // Determine skill keys\n    try {\n      const skillKeys = getChangeFlat(this, \"skills\");\n      for (const k of skillKeys) {\n        keys[k.replace(/^system\\./, \"\")] = 0;\n      }\n    } catch (err) {\n      console.error(\"Could not determine skills for an actor\", this, err);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Data to reset base value of, but only if missing.\n   *\n   * @private\n   * @see {@link _resetInherentTotals}\n   * @returns {Record<string,number>} - Base fill keys\n   */\n  _getBaseValueFillKeys() {\n    return [\n      { parent: \"abilities.str\", key: \"base\", value: 0 },\n      { parent: \"abilities.dex\", key: \"base\", value: 0 },\n      { parent: \"abilities.con\", key: \"base\", value: 0 },\n      { parent: \"abilities.int\", key: \"base\", value: 0 },\n      { parent: \"abilities.wis\", key: \"base\", value: 0 },\n      { parent: \"abilities.cha\", key: \"base\", value: 0 },\n    ];\n  }\n\n  /**\n   * @protected\n   */\n  _resetInherentTotals() {\n    const keys = this._getInherentTotalsKeys();\n\n    // Reset totals\n    for (const [k, v] of Object.entries(keys)) {\n      try {\n        foundry.utils.setProperty(this.system, k, v);\n      } catch (err) {\n        console.error(err, k);\n      }\n    }\n\n    for (const data of this._getBaseValueFillKeys()) {\n      const { parent, key, value } = data;\n      const o = foundry.utils.getProperty(this.system, parent);\n      if (!o) continue; // Not all actor types have these\n      o[key] ??= value;\n    }\n  }\n\n  /**\n   * Return reduced movement speed.\n   *\n   * @example\n   * ```js\n   * pf1.documents.actor.ActorPF.getReducedMovementSpeed(30); // => 20\n   * ```\n   *\n   * @param {number} value - The non-reduced movement speed.\n   * @returns {number} The reduced movement speed.\n   */\n  static getReducedMovementSpeed(value) {\n    return value - Math.floor(value / 5 / 3) * 5;\n  }\n\n  /**\n   * Return increased amount of spell slots by ability score modifier.\n   *\n   * @example\n   * ```js\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(2, 1); // => 1\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 1); // => 2\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 7); // => 0\n   * ```\n   *\n   * @param {number} mod - The associated ability modifier.\n   * @param {number} level - Spell level.\n   * @returns {number} Amount of spell levels to increase.\n   */\n  static getSpellSlotIncrease(mod, level) {\n    if (level === 0) return 0;\n    if (mod <= 0) return 0;\n    return Math.max(0, Math.ceil((mod + 1 - level) / 4));\n  }\n\n  /**\n   * Return the amount of experience required to gain a certain character level.\n   *\n   * @abstract\n   * @param {number} level - The desired level\n   * @returns {number} - The XP required\n   */\n  // eslint-disable-next-line no-unused-vars\n  getLevelExp(level) {\n    return 0; // Only used by PCs\n  }\n\n  /**\n   * Create a new Token document, not yet saved to the database, which represents the Actor, and apply actor size to it.\n   *\n   * @override\n   * @param {object} [data={}]            Additional data, such as x, y, rotation, etc. for the created token data\n   * @param {object} [options={}]         The options passed to the TokenDocument constructor\n   * @returns {Promise<TokenDocumentPF>}  The created TokenDocument instance\n   */\n  async getTokenDocument(data = {}, options = {}) {\n    const sizeValue = this.system.traits?.size?.value;\n    if (!this.prototypeToken.flags?.pf1?.staticSize && Number.isFinite(sizeValue)) {\n      const maxSizeIndex = Object.values(pf1.config.sizeChart).length - 1;\n      const sizeIndex = Math.clamp(sizeValue, 0, maxSizeIndex);\n      const size = Object.values(pf1.config.tokenSizes)[sizeIndex];\n      if (size) {\n        foundry.utils.mergeObject(data, {\n          width: size.w,\n          height: size.h,\n          texture: {\n            scaleX: size.scale * (this.prototypeToken.texture.scaleX || 1),\n            scaleY: size.scale * (this.prototypeToken.texture.scaleY || 1),\n          },\n        });\n      }\n    }\n\n    return super.getTokenDocument(data, options);\n  }\n\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return; // No system updates.\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const oldData = this.system;\n\n    // Offset HP values\n    const attributes = changed.system.attributes;\n    if (attributes) {\n      for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = attributes[key];\n        if (!hp) continue;\n        if (hp.value !== undefined && hp.offset === undefined) {\n          const max = hp.max ?? oldData.attributes[key]?.max ?? 0;\n          hp.offset = hp.value - max;\n        }\n        // Do not ever keep .value\n        delete hp.value;\n      }\n\n      // Convert excess vigor damage to wounds\n      const vigor = attributes.vigor;\n      if (vigor?.offset < 0) {\n        const maxVigor = oldData.attributes.vigor.max;\n        const excessVigorDamage = -(maxVigor + vigor.offset);\n        if (excessVigorDamage > 0) {\n          attributes.wounds ??= {};\n          attributes.wounds.offset ??= oldData.attributes?.wounds?.offset ?? 0;\n          attributes.wounds.offset -= excessVigorDamage;\n          vigor.offset = -maxVigor;\n        }\n      }\n    }\n\n    if (changed.system.attributes?.quadruped !== undefined) {\n      const quad = changed.system.attributes.quadruped;\n      const quadRace = this.race?.system.quadruped ?? false;\n      // Null if setting quadruped to same as race (no override)\n      if (quad === quadRace) changed.system.attributes.quadruped = null;\n    }\n\n    // Make certain variables absolute\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const absoluteKeys = [\"userPenalty\", \"damage\", \"drain\"];\n      const keys = Object.keys(abilities);\n      for (const abl of keys) {\n        const ablData = abilities[abl];\n        if (!ablData) continue; // e.g. if null from being deleted for homebrew\n        for (const absKey of absoluteKeys) {\n          if (ablData[absKey] !== undefined) {\n            ablData[absKey] = Math.abs(ablData[absKey]);\n          }\n        }\n      }\n    }\n\n    const energyDrain = changed.system.attributes?.energyDrain;\n    if (energyDrain !== undefined) {\n      changed.system.attributes.energyDrain = Math.abs(energyDrain);\n    }\n\n    // Never allow updates to the new conditions location\n    if (changed.system.conditions !== undefined) {\n      delete changed.system.conditions;\n    }\n\n    // Adjust spellbook data\n    const books = changed.system.attributes?.spells?.spellbooks;\n    if (books) {\n      const cbooks = this.system.attributes?.spells?.spellbooks;\n      for (const [bookId, bookData] of Object.entries(books)) {\n        const prepMode = bookData.spellPreparationMode;\n        if (prepMode !== cbooks[bookId].spellPreparationMode) {\n          const prog = bookData.casterType || cbooks[bookId].casterType;\n          const progs = pf1.config.casterProgression.castsPerDay[prepMode] ?? {};\n          // Reset invalid progression to first choice\n          if (!progs[prog]) bookData.casterType = Object.keys(progs)[0];\n        }\n      }\n    }\n\n    this._detectHealthChange(changed, context);\n  }\n\n  /**\n   * Detect Health Changes\n   *\n   * Builds data for post-update handling of deltas, stored in `context.pf1.deltas`.\n   *\n   * @internal\n   * @abstract\n   * @param {object} changed\n   * @param {object} context\n   */\n  _detectHealthChange(changed, context) {}\n\n  /**\n   * Synchronize actor and token vision\n   *\n   * @internal\n   * @param {boolean} initializeVision - Initialize vision\n   * @param {boolean} refreshLighting - Refresh lightning\n   */\n  updateVision(initializeVision = false, refreshLighting = false) {\n    if (!this.testUserPermission(game.user, \"OBSERVER\")) return;\n\n    const visionUpdate = {\n      refreshLighting: true,\n      refreshVision: true,\n    };\n\n    /** @type {TokenDocumentPF[]} */\n    let tokens = this.getActiveTokens(false, true).filter((t) => t.sight.enabled);\n    const needSelection = game.settings.get(\"pf1\", \"lowLightVisionMode\");\n    if (needSelection) tokens = tokens.filter((t) => t.object?.controlled ?? false);\n\n    // Skip refresh if no tokens with vision present on scene\n    if (tokens.length == 0) return;\n\n    // Ensure vision immediately updates\n    if (initializeVision) {\n      for (const token of tokens) {\n        token._syncSenses();\n      }\n      visionUpdate.initializeVision = true;\n\n      // Re-init light sources in case LLV was toggled\n      pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n    }\n\n    // Ensure LLV functions correctly\n    if (refreshLighting) {\n      visionUpdate.initializeLighting = true;\n    }\n\n    canvas.perception.update(visionUpdate);\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // No system data updated\n    if (!changed.system) return;\n\n    const sourceUser = game.user.id === userId;\n\n    let initializeVision = false,\n      refreshLighting = false;\n\n    if (foundry.utils.hasProperty(changed.system, \"traits.senses\")) {\n      initializeVision = true;\n      if (changed.system.traits.senses.ll) {\n        refreshLighting = true;\n      }\n    } else if (changed.flags?.pf1?.visionSharing) {\n      initializeVision = true;\n      refreshLighting = true;\n    }\n\n    if (initializeVision || refreshLighting) {\n      this.updateVision(initializeVision, refreshLighting);\n    }\n\n    // Handle base size change\n    // TODO: Combine this test with testing updated items to reduce updates\n    if (sourceUser && changed?.system?.traits?.size) {\n      this._updateTokenSize();\n    }\n  }\n\n  /**\n   * Resize token sizes based on actor size.\n   *\n   * Ignores tokens with static size set.\n   *\n   * @todo Add option to update token size on all scenes.\n   *\n   * @internal\n   * @param {string} [sizeKey] - Size key to update to. If not provided, will use actor's current size.\n   * @returns {Promise<TokenDocument[]|null>} - Updated token documents, or null if no update was performed.\n   * @throws {Error} - On invalid parameters\n   */\n  async _updateTokenSize(sizeKey = undefined) {\n    const scene = canvas.scene;\n    if (!scene) return null;\n\n    if (!sizeKey) {\n      const sizes = Object.keys(pf1.config.tokenSizes);\n      sizeKey = sizes[this.getRollData({ refresh: true }).size];\n      if (sizeKey === undefined) return;\n    }\n\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) throw new Error(`Size key \"${sizeKey}\" is invalid`);\n\n    // Get relevant tokens\n    const tokens = (this.token ? [this.token] : this.getActiveTokens(false, true)).filter(\n      (token) => !token.getFlag(\"pf1\", \"staticSize\")\n    );\n\n    const { scaleX, scaleY } = this.prototypeToken?.texture ?? {};\n\n    const updates = tokens.map((t) => ({\n      _id: t.id,\n      width: size.w,\n      height: size.h,\n      texture: {\n        scaleX: size.scale * (scaleX || 1),\n        scaleY: size.scale * (scaleY || 1),\n      },\n    }));\n\n    if (!updates.length) return;\n\n    return TokenDocument.implementation.updateDocuments(updates, { parent: scene });\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {Item|Actor} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item[]|ActiveEffect[]} documents - Created documents\n   * @param {object[]} result - Creation data for the documents\n   * @param {object} context - Create context options\n   * @param {string} userId - Triggering user's ID\n   */\n  _onCreateDescendantDocuments(parent, collection, documents, result, context, userId) {\n    super._onCreateDescendantDocuments(...arguments);\n\n    if (userId !== game.user.id) return;\n\n    if (collection === \"items\") {\n      // Apply race size to actor\n      const race = documents.find((d) => d.type === \"race\");\n      if (race?.system.size) {\n        if (this.system.traits.size?.base !== race.system.size) this.update({ \"system.traits.size\": race.system.size });\n      }\n    }\n\n    if (collection === \"effects\") {\n      if (context.pf1?.updateConditionTracks !== false) {\n        this._handleConditionTracks(documents, context);\n      }\n    }\n  }\n\n  /**\n   * Handle condition track toggling post active effect creation if there's still some issues.\n   *\n   * @internal\n   * @param {ActiveEffect[]} documents - Updated active effect documents\n   * @returns {Promise<object>} - Result from {@link ActorPF.setConditions}\n   */\n  async _handleConditionTracks(documents) {\n    // Record of previously update conditions that didn't get notified about\n    const previousConditions = {};\n\n    const conditions = {};\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const ae of documents) {\n      for (const statusId of ae.statuses ?? []) {\n        // Skip non-conditions\n        if (!pf1.registry.conditions.has(statusId)) continue;\n\n        // Mark this condition for notification\n        previousConditions[statusId] = true;\n\n        // Process condition tracks\n        for (const conditionGroup of tracks) {\n          if (!conditionGroup.includes(statusId)) continue;\n          // Disable other conditions in the track\n          for (const disableConditionId of conditionGroup) {\n            if (disableConditionId === statusId) continue;\n            conditions[disableConditionId] = false;\n          }\n        }\n      }\n    }\n\n    this._conditionToggleNotify(previousConditions);\n\n    if (!foundry.utils.isEmpty(conditions)) {\n      return this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {*} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item|ActiveEffect[]} documents - Document array\n   * @param {string[]} ids - Document ID array\n   * @param {object} context - Delete context\n   * @param {string} userId - User ID\n   */\n  _onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId) {\n    super._onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId);\n\n    if (collection === \"effects\") {\n      const updatedConditions = {};\n      for (const ae of documents) {\n        for (const statusId of ae.statuses ?? []) {\n          // Toggle off only if it's valid ID and there isn't any other AEs that have same condition still\n          if (pf1.registry.conditions.has(statusId) && !this.statuses.has(statusId)) {\n            updatedConditions[statusId] = false;\n          }\n        }\n      }\n\n      if (context?.pf1?.updateConditionTracks !== false) {\n        this._conditionToggleNotify(updatedConditions);\n      }\n    }\n\n    // Following process is done only on triggering user\n    if (game.user.id !== userId) return;\n\n    if (collection === \"items\") {\n      this._cleanItemLinksTo(documents);\n\n      // Delete child linked items\n      const toRemove = new Set();\n\n      // Remove linked children with item\n      const _enumChildren = (item) => {\n        toRemove.add(item.id);\n\n        const links = item.getLinkedItemsSync(\"children\");\n        for (const link of links) {\n          if (toRemove.has(link.id)) continue;\n          const child = item.actor.items.get(link.id);\n          if (child) _enumChildren(child);\n        }\n      };\n\n      // Find children\n      for (const item of documents) _enumChildren(item);\n      // Remove already deleted items\n      for (const id of ids) toRemove.delete(id);\n\n      if (toRemove.size > 0) {\n        this.deleteEmbeddedDocuments(\"Item\", Array.from(toRemove));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {pf1.documents.item.ItemPF[]} items - Item documents to clean links to.\n   * @returns {Promise<Document[]>} - Updated documents\n   */\n  async _cleanItemLinksTo(items) {\n    const updates = [];\n    // Clean up references to this item\n    for (const deleted of items) {\n      const uuid = deleted.getRelativeUUID(this);\n      for (const item of this.items) {\n        const updateData = await item.removeItemLink(uuid, { commit: false });\n        if (updateData) {\n          updateData._id = item.id;\n          updates.push(updateData);\n        }\n      }\n    }\n\n    if (updates.length) {\n      return this.updateEmbeddedDocuments(\"Item\", updates);\n    }\n  }\n\n  /**\n   * @todo - The condition notification needs to be smarter.\n   *\n   * @internal\n   * @param {Record<string,boolean>} conditions - Condition toggle state\n   */\n  _conditionToggleNotify(conditions = {}) {\n    for (const [conditionId, state] of Object.entries(conditions)) {\n      Hooks.callAll(\"pf1ToggleActorCondition\", this, conditionId, state);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {ItemPF} item - the item to add to the actor's resources\n   * @param {object} [options] - extra options\n   * @param {boolean} [options.warnOnDuplicate] - Skips warning if item tag already exists in dictionary flags\n   * @returns {boolean} True if resources were set\n   */\n\n  updateItemResources(item, { warnOnDuplicate = true } = {}) {\n    if (item.type === \"spell\") return false;\n    if (item.links?.charges) return false; // Don't create resource for items that are inheriting charges\n    if (!item.isCharged) return false;\n    if (item.isSingleUse) return false;\n    if (item.isPhysical) return false;\n\n    const tag = item.system.tag;\n    if (!tag) console.error(\"Attempting create resource on tagless item\", item);\n\n    if (warnOnDuplicate && this.system.resources[tag] && this.isOwner) {\n      const msg = game.i18n.format(\"PF1.Warning.DuplicateTag\", {\n        actor: this.uuid,\n        item: item.name,\n        tag,\n      });\n      console.warn(msg, item);\n      ui.notifications?.warn(msg, { console: false });\n    }\n\n    const res = new Resource(item);\n    this.system.resources[tag] = res;\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  /**\n   * Enable and configure a new spellbook.\n   *\n   * @example\n   * Create spellbook for inquisitor\n   * ```js\n   * actor.createSpellbook({\n   *   type: \"spontaneous\",\n   *   progression: \"med\",\n   *   ability: \"wis\",\n   *   spells: \"divine\",\n   *   class: \"inquisitor\",\n   *   cantrips: true,\n   *   domain: 0\n   * });\n   * ```\n   *\n   * @param {object} [casting] - Book casting configuration\n   * @param {\"prepared\"|\"spontaneous\"|\"hybrid\"} [casting.type=\"prepared\"] - Spellbook type\n   * @param {\"high\"|\"med\"|\"low\"} [casting.progression=\"high\"] - Casting progression type\n   * @param {string} [casting.ability=\"int\"] - Spellcasting ability score ID\n   * @param {\"arcane\"|\"divine\"|\"psychic\"|\"alchemy\"} [casting.spells=\"arcane\"] - Spell/spellcasting type\n   * @param {string} [casting.class=\"_hd\"] - Class tag\n   * @param {boolean} [casting.cantrips=true] - Has cantrips?\n   * @param {number} [casting.domain=1] - Domain/School slots\n   * @param {number} [casting.offset] - Level offset\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.commit=true] - Commit modifications. If false, update data is returned instead of committing.\n   * @returns {Promise<this>} - Promise to updated document\n   */\n  createSpellbook(casting = {}, { commit = true } = {}) {\n    const books = this.system.attributes.spells.spellbooks ?? {};\n\n    const oldBook = casting.class\n      ? Object.entries(books).find(([_, book]) => !!book.class && book.class === casting.class)\n      : null;\n\n    let bookId;\n    if (oldBook) {\n      if (oldBook[1].inUse) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.SpellbookExists\"));\n      bookId = oldBook[0]; // Reuse old book\n    } else {\n      const available = Object.entries(books).find(([_, bookData]) => bookData.inUse !== true);\n      if (available === undefined) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoFreeSpellbooks\"));\n      bookId = available[0];\n    }\n\n    // Add defaults when unconfigured\n    // `class` causes problems if destructured, hence why it is here.\n    casting.type ??= \"prepared\";\n    casting.class ??= \"_hd\";\n    casting.progression ??= \"high\";\n    casting.spells ??= \"arcane\";\n    casting.ability ??= \"int\";\n    casting.cantrips ??= true;\n    casting.domain ??= 1;\n    casting.offset ??= 0;\n    if (casting.offset !== 0) casting.offset = `${casting.offset}`;\n\n    const updateData = {\n      [`system.attributes.spells.spellbooks.${bookId}`]: {\n        inUse: true,\n        kind: casting.spells,\n        class: casting.class,\n        spellPreparationMode: casting.type,\n        casterType: casting.progression,\n        ability: casting.ability,\n        psychic: casting.spells === \"psychic\",\n        arcaneSpellFailure: casting.spells === \"arcane\",\n        hasCantrips: casting.cantrips,\n        domainSlotValue: casting.domain,\n        \"cl.formula\": casting.offset ? `${casting.offset}` : \"\",\n      },\n    };\n\n    if (commit) return this.update(updateData);\n    else return updateData;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Retrieve information about a skill.\n   *\n   * @example\n   * ```js\n   * actor.getSkillInfo(\"per\"); // Perception skill info\n   * actor.getSkillInfo(\"crf.alchemy\"); // Craft (Alchemy) subskill info\n   * ```\n   *\n   * @param {string} skillId - Skill ID\n   * @param {object} [options] - Additional options\n   * @param {{ skills: Record<string, SkillData>}} [options.rollData] - Roll data instance to use.\n   * @throws {Error} - If defined skill is not found.\n   * @returns {SkillInfo} - Skill information\n   */\n  getSkillInfo(skillId, { rollData } = {}) {\n    const skillIdParts = skillId.split(\".\");\n    if (skillIdParts.length > 2) skillIdParts.splice(1, 1);\n\n    const mainSkillId = skillIdParts.shift(),\n      subSkillId = skillIdParts.pop(),\n      isSubSkill = !!subSkillId;\n\n    // Reconstruct skillId with new shorter version to ensure format\n    skillId = [mainSkillId, subSkillId].filterJoin(\".\");\n\n    rollData ??= this.getRollData();\n    const parentSkill = isSubSkill ? this.getSkillInfo(mainSkillId, { rollData }) : null;\n\n    /** @type {SkillInfo} */\n    const skill = subSkillId\n      ? parentSkill.subSkills?.[subSkillId]\n      : foundry.utils.deepClone(rollData.skills[mainSkillId]);\n\n    if (!skill) throw new Error(`Invalid skill ID '${skillId}'`);\n\n    skill.journal ||= pf1.config.skillCompendiumEntries[isSubSkill ? mainSkillId : skillId];\n    skill.name ||= pf1.config.skills[skillId] || skillId;\n    skill.id = skillId;\n\n    if (isSubSkill) {\n      skill.fullName = `${parentSkill.name} (${skill.name})`;\n      skill.parentSkill = parentSkill;\n    } else {\n      skill.fullName = skill.name;\n    }\n\n    return skill;\n  }\n\n  /**\n   * Roll a Skill Check\n   *\n   * @example\n   * ```js\n   * await actor.rollSkill(\"per\", { skipDialog: true, bonus: \"1d6\", dice: \"2d20kh\" });\n   * ```\n   *\n   * @param {string} skillId - The skill id (e.g. \"per\", \"prf.prf1\", or \"crf.alchemy\")\n   * @param {ActorRollOptions} [options={}] - Options which configure how the skill check is rolled\n   * @returns {Promise<ChatMessage|object|void>} - The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSkill(skillId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const skillIdParts = skillId.split(\".\");\n    const mainSkillId = skillIdParts[0],\n      subSkillId = skillIdParts.length > 1 ? skillIdParts.at(-1) : null;\n    // Reconstruct skill ID to ensure it is valid for everything else.\n    skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const skl = this.getSkillInfo(skillId);\n    const haveParentSkill = !!subSkillId;\n\n    // Add context notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`skill.${skillId}`, { rollData });\n    if (haveParentSkill)\n      notes.push(...(await this.getContextNotesParsed(`skill.${mainSkillId}`, { rollData, all: false })));\n\n    // Add untrained note\n    if (skl.rt && !skl.rank) {\n      notes.push({ text: game.i18n.localize(\"PF1.Untrained\") });\n    }\n\n    // Add parts\n    const parts = [];\n\n    // Base parts\n    // Ability damage and penalty are not part of change system\n    const details = this.getSourceDetails(`system.abilities.${skl.ability}.mod`);\n    for (const { value, name } of details) {\n      parts.push(`${value}[${name}]`);\n    }\n\n    // Add Wound Thresholds info\n    if (rollData.attributes.woundThresholds?.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Gather changes\n    const skillDataPathPart = subSkillId ? `${mainSkillId}.subSkills.${subSkillId}` : mainSkillId;\n\n    const validChanges = this.changes.filter((/** @type {ItemChange} */ c) =>\n      c.getTargets(this).includes(`system.skills.${skillDataPathPart}.mod`)\n    );\n    const changes = getHighestChanges(validChanges, { ignoreTarget: true });\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    // Get relevant conditions if any\n    const conds = this._getContextConditions(`skill.${skillId}`);\n    for (const cond of conds) notes.push({ text: cond.name });\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    // Add metadata about the skill\n    const metadata = { rank: skl.rank ?? 0 };\n    if ([\"acr\", \"swm\", \"clm\"].includes(skillId)) {\n      const speeds = this.system.attributes?.speed ?? {};\n      metadata.speed = { base: speeds.land?.total ?? 0 };\n      if (skillId === \"swm\") metadata.speed.swim = speeds.swim?.total ?? 0;\n      if (skillId === \"clm\") metadata.speed.climb = speeds.climb?.total ?? 0;\n    }\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: skl.fullName }),\n      chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[skillId] ?? skl.journal, type: \"JournalEntry\" },\n      subject: { skill: skillId },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      messageData: {\n        system: {\n          subject: { skill: skillId },\n          config: metadata,\n        },\n      },\n    };\n    if (Hooks.call(\"pf1PreActorRollSkill\", this, rollOptions, skillId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    if (result) Hooks.callAll(\"pf1ActorRollSkill\", this, result, skillId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll basic BAB check\n   *\n   * @param {ActorRollOptions} [options] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollBAB(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts: [`${this.system.attributes.bab.total}[${game.i18n.localize(\"PF1.BABAbbr\")}]`],\n      subject: { core: \"bab\" },\n      flavor: game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.BABAbbr\") }),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollBab\", this, rollOptions) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollBab\", this, result);\n    return result;\n  }\n\n  /**\n   * Roll a generic attack\n   *\n   * @example\n   * Basic ranged attack\n   * ```js\n   * await actor.rollAttack({ ranged: true });\n   * ```\n   * Basic melee maneuver\n   * ```js\n   * await actor.rollAttack({ maneuver: true });\n   * ```\n   *\n   * @param {ActorRollOptions} [options={}] - Roll options\n   * @param {boolean} [options.maneuver=false] - Whether this is weapon or maneuver check.\n   * @param {boolean} [options.ranged=false] - Melee or ranged.\n   * @param {boolean} [options.ability=null] - Attack ability. If not defined, appropriate one is chosen based on the ranged option.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAttack({ maneuver = false, ranged = false, ability = null, ...options } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    if (maneuver && this.system.config?.noManeuvers) throw new Error(\"Manuevers are disabled for this actor.\");\n\n    let actionType;\n    if (!maneuver) actionType = ranged ? \"rwak\" : \"mwak\";\n    else actionType = ranged ? \"rcman\" : \"mcman\";\n\n    const atkData = {\n      name: !ranged ? game.i18n.localize(\"PF1.Melee\") : game.i18n.localize(\"PF1.Ranged\"),\n      actionType,\n    };\n\n    // Alter attack ability\n    const atkAbl = this.system.attributes?.attack?.[`${ranged ? \"ranged\" : \"melee\"}Ability`];\n    atkData.ability ??= {};\n    if (maneuver) atkData.ability.attack = ability || this.system.attributes?.cmbAbility;\n    atkData.ability.attack ||= ability || atkAbl || (ranged ? \"dex\" : \"str\");\n\n    // Alter activation type\n    atkData.activation ??= {};\n    atkData.activation.type = \"attack\";\n    atkData.activation.unchained ??= {};\n    atkData.activation.unchained.type = \"attack\";\n\n    // Generate temporary item\n    /** @type {pf1.documents.item.ItemAttackPF} */\n    const atk = new Item.implementation(\n      {\n        type: \"attack\",\n        name: !maneuver ? game.i18n.localize(\"TYPES.Item.weapon\") : game.i18n.localize(\"PF1.CMBAbbr\"),\n        system: {\n          actions: [new pf1.components.ItemAction(atkData).toObject()],\n        },\n      },\n      { parent: this }\n    );\n\n    return atk.use(options);\n  }\n\n  /**\n   * Roll a Caster Level check using a particular spellbook of this actor\n   *\n   * @example\n   * Roll caster level check for primary spellbook.\n   * ```js\n   * await actor.rollCL(\"primary\");\n   * ```\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCL(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData ?? this.getRollData();\n    rollData.cl = spellbook.cl.total;\n\n    // Set up roll parts\n    const parts = [];\n\n    const sources = this.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`);\n    for (const src of sources.reverse()) {\n      if (src.id === \"woundThreshold\") {\n        // Adjust WT part to how much WT actually adjusted CL, to account for minimum CL\n        const wt = spellbook.cl.woundPenalty || 0;\n        if (wt) parts.push(`${wt}[${src.name}]`);\n        continue;\n      }\n      parts.push(`${src.value}[${src.name}]`);\n    }\n\n    // Add contextual caster level string\n    const notes = await this.getContextNotesParsed(`spell.cl.${bookId}`, { rollData });\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push({ text: pf1.config.woundThresholdConditions[wT.level] });\n\n    const props = [];\n    if (notes.length) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"cl\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.CasterLevelCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollCl\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollCl\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * Roll a concentration check using a particular spellbook of this actor\n   *\n   * @todo Add support for concentration check type, e.g. defensive casting\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollConcentration(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData ?? this.getRollData();\n    rollData.cl = spellbook.cl.total;\n    rollData.mod = this.system.abilities[spellbook.ability]?.mod ?? 0;\n\n    if (\n      Hooks.call(\"actorRoll\", \"pf1PreActorRollConcentration\", undefined, this, \"concentration\", bookId, options) ===\n      false\n    )\n      return;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.concentration.total`));\n\n    // Add contextual concentration string\n    const notes = await this.getContextNotesParsed(`spell.concentration.${bookId}`, { rollData });\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push({ text: game.i18n.localize(pf1.config.woundThresholdConditions[wT.level]) });\n    // TODO: Make the penalty show separate of the CL.total.\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"concentration\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.ConcentrationCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollConcentration\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollConcentration\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.damageResistances=true] If false, damage resistances (DR, ER) are omitted.\n   * @param {boolean} [options.damageVulnerabilities=true] If false, damage vulnerabilities are omitted.\n   * @returns {*} - Header data\n   */\n  getDefenseHeaders({ damageResistances = true, damageVulnerabilities = true } = {}) {\n    const system = this.system;\n    const headers = [];\n\n    const reSplit = pf1.config.re.traitSeparator;\n    const misc = [];\n\n    if (damageResistances) {\n      // Damage reduction\n      if (system.traits.dr.length) {\n        headers.push({\n          header: game.i18n.localize(\"PF1.DamRed\"),\n          value: system.traits.dr.split(reSplit).map((text) => ({ text })),\n        });\n      }\n      // Energy resistance\n      if (system.traits.eres.length) {\n        headers.push({\n          header: game.i18n.localize(\"PF1.EnRes\"),\n          value: system.traits.eres.split(reSplit).map((text) => ({ text })),\n        });\n      }\n    }\n    if (damageVulnerabilities) {\n      // Damage vulnerabilities\n      if (system.traits.dv.total.size) {\n        const value = system.traits.dv.names.map((text) => ({ text }));\n        headers.push({ header: game.i18n.localize(\"PF1.DamVuln\"), value });\n      }\n    }\n    // Condition resistance\n    if (system.traits.cres.length) {\n      headers.push({\n        header: game.i18n.localize(\"PF1.ConRes\"),\n        value: system.traits.cres.split(reSplit).map((text) => ({ text })),\n      });\n    }\n    // Immunities\n    if (system.traits.di.total.size || system.traits.ci.total.size) {\n      const value = [...system.traits.di.names, ...system.traits.ci.names].map((text) => ({ text }));\n      headers.push({ header: game.i18n.localize(\"PF1.ImmunityPlural\"), value });\n    }\n    // Spell Resistance\n    if (system.attributes.sr.total > 0) {\n      misc.push({ text: game.i18n.format(\"PF1.SpellResistanceNote\", { value: system.attributes.sr.total }) });\n    }\n\n    if (misc.length > 0) {\n      headers.push({ header: game.i18n.localize(\"PF1.MiscShort\"), value: misc });\n    }\n\n    return headers;\n  }\n\n  /**\n   * Roll initiative for one or multiple Combatants associated with this actor.\n   * If no combat exists, GMs have the option to create one.\n   * If viewing a full Actor document, all Tokens which map to that actor will be targeted for initiative rolls.\n   * If viewing a synthetic Token actor, only that particular Token will be targeted for an initiative roll.\n   *\n   * @example\n   * ```js\n   * await actor.rollInitiative({ dice: \"2d20kh\", createCombatants: true, skipDialog: true });\n   * ```\n   *\n   * @override\n   * @see {@link pf1.documents.CombatPF#rollInitiative}\n   * @param {object} [options={}] Options which configure how initiative is rolled\n   * @param {boolean} [options.createCombatants=false] - Create new Combatant entries for tokens associated with this actor.\n   * @param {boolean} [options.rerollInitiative=false] - Reroll initiative for existing Combatants\n   * @param {object} [options.initiativeOptions] - Options to pass to {@link CombatPF.rollInitiative()}\n   * @param {string|null} [options.dice=null] - Formula override for dice to roll\n   * @param {string|null} [options.bonus=null] - Formula for bonus to initiative\n   * @param {boolean} [options.skipDialog] - Skip roll dialog\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {TokenDocumentPF} [options.token=this.token] - For which token this initiative roll is for\n   * @returns {Promise<pf1.documents.CombatPF|null>} The updated Combat document in which initiative was rolled, or null if no initiative was rolled\n   */\n  async rollInitiative({\n    createCombatants = false,\n    rerollInitiative = false,\n    initiativeOptions = {},\n    dice = null,\n    bonus = null,\n    rollMode = null,\n    skipDialog,\n    token,\n  } = {}) {\n    token ||= this.token;\n\n    // Obtain (or create) a combat encounter\n    let combat = game.combat;\n    if (!combat) {\n      if (game.user.isGM) {\n        const cls = getDocumentClass(\"Combat\");\n        combat = await cls.create({ scene: canvas.scene?.id, active: true });\n      } else {\n        ui.notifications.warn(\"COMBAT.NoneActive\", { localize: true });\n        return null;\n      }\n    }\n\n    // Create new combatants\n    if (createCombatants) {\n      const tokens = this.isToken ? [this.token] : this.getActiveTokens().map((t) => t.document);\n      const toCreate = [];\n      if (tokens.length) {\n        for (const t of tokens) {\n          if (t.inCombat) continue;\n          toCreate.push({ tokenId: t.id, sceneId: t.parent.id, actorId: this.id, hidden: t.hidden });\n        }\n      }\n      // No tokens on scene\n      else {\n        const existing = combat.combatants.filter((t) => t.actor == this && !t.token);\n        if (!existing.length) {\n          toCreate.push({ actorId: this.id, hidden: false });\n        }\n      }\n\n      if (toCreate.length) await combat.createEmbeddedDocuments(\"Combatant\", toCreate);\n    }\n\n    let untokened = 0;\n    // Roll initiative for combatants\n    let combatants = combat.combatants.filter((c) => {\n      if (c.actor?.id !== this.id) return false;\n      if (token && c.token?.id !== token.id) return false;\n      if (!c.token) untokened += 1;\n      return rerollInitiative || c.initiative === null;\n    });\n\n    // If more than one relevant combatants with no token present, prune list of valid combatants.\n    if (untokened > 1) {\n      combatants = combatants.filter((c) => !!c.token || c.initiative === null);\n      if (combatants.length == 0) ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoInitOnDuplicateCombatant\"));\n    }\n\n    // No combatants. Possibly from reroll being disabled.\n    if (combatants.length == 0) return combat;\n\n    foundry.utils.mergeObject(initiativeOptions, { d20: dice, bonus, rollMode, skipDialog });\n\n    return combat.rollInitiative(\n      combatants.map((c) => c.id),\n      initiativeOptions\n    );\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * ```js\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   * ```\n   *\n   * @param {SaveId} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`savingThrow.${savingThrowId}`, { rollData });\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows[savingThrowId]?.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"allSavingThrows\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => c.operator !== \"set\"),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Get relevant conditions if any\n    const conds = this._getContextConditions(`savingThrow.${savingThrowId}`);\n    for (const cond of conds) notes.push({ text: cond.name });\n\n    const props = this.getDefenseHeaders({ damageResistances: false, damageVulnerabilities: false });\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n\n    // Roll saving throw\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll an Ability Test\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\n   *\n   * @example\n   * ```js\n   * await actor.rollAbilityTest(\"str\");\n   * ```\n   *\n   * @param {AbilityId} abilityId - The ability ID (e.g. \"str\")\n   * @param {ActorRollOptions} [options={}] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAbilityTest(abilityId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = options.rollData || this.getRollData();\n    const notes = await this.getContextNotesParsed(`abilityChecks.${abilityId}`, { rollData });\n\n    const label = pf1.config.abilities[abilityId] ?? abilityId;\n\n    const parts = [`@abilities.${abilityId}.mod[${label}]`];\n\n    // Base parts\n    // Ability damage and penalty are not part of change system\n    const details = this.getSourceDetails(`system.abilities.${abilityId}.mod`);\n    for (const { value, name } of details) {\n      parts.push(`${value}[${name}]`);\n    }\n\n    // Gather changes\n    const dataPathCheck = `system.abilities.${abilityId}.checkMod`;\n\n    const changes = getHighestChanges(\n      this.changes.filter((/** @type {ItemChange} */ c) => {\n        const cf = c.getTargets(this);\n\n        return cf.includes(dataPathCheck);\n      }),\n      { ignoreTarget: true }\n    );\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    // Add negative levels\n    if (this.system.attributes.energyDrain) {\n      const label = game.i18n.localize(\"PF1.NegativeLevels\");\n      parts.push(`-@attributes.energyDrain[${label}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`-@attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: label }),\n      subject: { ability: abilityId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollAbility\", this, rollOptions, abilityId) === false) return;\n\n    const result = await pf1.dice.d20Roll(rollOptions);\n\n    Hooks.callAll(\"pf1ActorRollAbility\", this, result, abilityId);\n\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage|undefined>} - Created message\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n\n    const formatTextNotes = (notes) => notes?.split(/[\\n\\r]+/).map((text) => ({ text })) ?? [];\n\n    // Add contextual AC notes\n    const acNotes = await this.getContextNotesParsed(\"ac\", { rollData });\n    if (this.system.attributes.acNotes) acNotes.push(...formatTextNotes(this.system.attributes.acNotes));\n\n    // Add contextual CMD notes\n    const cmdNotes = await this.getContextNotesParsed(\"cmd\", { rollData });\n    if (this.system.attributes.cmdNotes) cmdNotes.push(...formatTextNotes(this.system.attributes.cmdNotes));\n\n    // Add contextual SR notes\n    const srNotes = await this.getContextNotesParsed(\"sr\", { rollData });\n    if (this.system.attributes.srNotes) srNotes.push(...formatTextNotes(this.system.attributes.srNotes));\n\n    // BUG: No specific saving throw notes are included\n    const saveNotes = await this.getContextNotesParsed(\"allSavingThrows\", { rollData });\n    if (this.system.attributes.saveNotes) saveNotes.push(...formatTextNotes(this.system.attributes.saveNotes));\n\n    // Add misc data\n\n    // Damage Reduction\n    const drNotes = Object.values(this.parseResistances(\"dr\")).map((text) => ({ text }));\n\n    // Energy Resistance\n    const erNotes = Object.values(this.parseResistances(\"eres\")).map((text) => ({ text }));\n\n    // Damage Immunity\n    // BUG: All incorrectly clumped with ER\n    if (this.system.traits.di.total.size) {\n      const values = [...this.system.traits.di.names];\n      erNotes.push(...values.map((o) => ({ text: game.i18n.format(\"PF1.ImmuneTo\", { immunity: o }) })));\n    }\n    // Damage Vulnerability\n    if (this.system.traits.dv.total.size) {\n      const values = [...this.system.traits.dv.names];\n      erNotes.push(...values.map((o) => ({ text: game.i18n.format(\"PF1.VulnerableTo\", { vulnerability: o }) })));\n    }\n\n    // Conditions\n    const conditions = Object.entries(this.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInDefense)\n      .map((c) => ({ text: c.name }));\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) {\n      const wTlabel = pf1.config.woundThresholdConditions[wT.level];\n      acNotes.push({ text: wTlabel });\n      cmdNotes.push({ text: wTlabel });\n    }\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        flatFooted: actorData.attributes.ac.flatFooted.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        flatFooted: actorData.attributes.cmd.flatFootedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        hardness: actorData.traits.hardness,\n        sr: actorData.attributes.sr.total,\n        srNotes,\n        drNotes,\n        erNotes,\n        conditions,\n      },\n      saves: {\n        fort: rollData.attributes?.savingThrows?.fort?.total,\n        ref: rollData.attributes?.savingThrows?.ref?.total,\n        will: rollData.attributes?.savingThrows?.will?.total,\n        notes: saveNotes,\n      },\n    };\n\n    if (this.system.config?.noManeuvers) {\n      delete templateData.cmd;\n    }\n\n    // Add regeneration and fast healing\n    if ((actorData.traits?.fastHealing || \"\").length || (actorData.traits?.regen || \"\").length) {\n      templateData.regen = {\n        regen: actorData.traits.regen,\n        fastHealing: actorData.traits.fastHealing,\n      };\n    }\n\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      rollMode,\n      system: {\n        subject: { info: \"defenses\" },\n      },\n      flags: {\n        core: {\n          canPopout: true,\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /**\n   * Easy way to toggle a condition.\n   *\n   * @example\n   * Toggle Dazzled\n   * ```js\n   * await actor.toggleCondition(\"dazzled\");\n   * ```\n   * Toggle Blinded, set duration for 3 rounds if it's being enabled.\n   * ```js\n   * await actor.toggleCondition(\"blinded\", { duration: { seconds: 18 } });\n   * ```\n   *\n   * @param {boolean} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object} [aeData] - Extra data to add to the AE if it's being enabled\n   * @returns {Promise<object>} Condition ID to boolean mapping of actual updates.\n   */\n  async toggleCondition(conditionId, aeData) {\n    let active = !this.statuses.has(conditionId);\n    if (active && aeData) active = aeData;\n    return this.setCondition(conditionId, active);\n  }\n\n  /**\n   * Easy way to set a condition.\n   *\n   * @example\n   * Enable Dazzled\n   * ```js\n   * await actor.setCondition(\"dazzled\", true);\n   * ```\n   * Enable Sleep for 10 rounds\n   * ```js\n   * await actor.setCondition(\"sleep\", { duration: { seconds: 60 } });\n   * ```\n   *\n   * @param {string} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object|boolean} enabled - Whether to enable (true) the condition, or disable (false) it. Or object for merging into the active effect as part of enabling.\n   * @param {object} [context] Update context\n   * @returns {Promise<object>} Condition ID to boolean mapping of actual updates.\n   */\n  async setCondition(conditionId, enabled, context) {\n    if (typeof enabled !== \"boolean\" && foundry.utils.getType(enabled) !== \"Object\")\n      throw new TypeError(\"Actor.setCondition() enabled state must be a boolean or plain object\");\n    return this.setConditions({ [conditionId]: enabled }, context);\n  }\n\n  /**\n   * Set state of multiple conditions.\n   * Also handles condition tracks to minimize number of updates.\n   *\n   * @example\n   * Enable Blinded and Shaken conditions but disable Sleeping\n   * ```js\n   * await actor.setConditions({ blind: true, sleep: false, shaken:true });\n   * ```\n   *\n   * @param {object} conditions Condition ID to boolean (or update data) mapping of new condition states. See {@link setCondition()}\n   * @param {object} [context] Update context\n   * @returns {Record<string,boolean>} Condition ID to boolean mapping of actual updates.\n   */\n  async setConditions(conditions = {}, context = {}) {\n    conditions = foundry.utils.deepClone(conditions);\n\n    // Handle Condition tracks\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const conditionGroup of tracks) {\n      const newTrackState = conditionGroup.find((c) => conditions[c] === true);\n      if (!newTrackState) continue;\n      const disableTrackEntries = conditionGroup.filter((c) => c !== newTrackState);\n      for (const key of disableTrackEntries) {\n        conditions[key] = false;\n      }\n    }\n\n    // Create update data\n    const toDelete = [],\n      toCreate = [];\n\n    const immunities = this.getConditionImmunities();\n\n    for (const [conditionId, value] of Object.entries(conditions)) {\n      const condition = pf1.registry.conditions.get(conditionId);\n      if (!condition) {\n        console.error(\"Unrecognized condition:\", conditionId);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      if (value === true && immunities.has(conditionId)) {\n        console.warn(\"Actor is immune to condition:\", conditionId, this);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      // BUG: Only finds conditions directly on actor, not on items\n      const oldAe = this.statuses.has(conditionId) ? this.effects.find((ae) => ae.statuses.has(conditionId)) : null;\n\n      // Create\n      if (value) {\n        if (!oldAe) {\n          const aeData = {\n            flags: {\n              pf1: {\n                autoDelete: true,\n              },\n            },\n            statuses: [conditionId],\n            name: condition.name,\n            img: condition.texture,\n          };\n\n          if (condition.statuses?.size) {\n            aeData.statuses.push(...condition.statuses);\n          }\n\n          // Special boolean for easy overlay\n          if (value?.overlay) {\n            delete value.overlay;\n            foundry.utils.setProperty(aeData.flags, \"core.overlay\", true);\n          }\n\n          if (typeof value !== \"boolean\") {\n            foundry.utils.mergeObject(aeData, value);\n          }\n\n          toCreate.push(aeData);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n      // Delete\n      else {\n        if (oldAe) {\n          toDelete.push(oldAe.id);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n    }\n\n    // Perform updates\n    // Inform update handlers they don't need to do work\n    context.pf1 ??= {};\n    context.pf1.updateConditionTracks = false;\n\n    if (toDelete.length) {\n      const deleteContext = foundry.utils.deepClone(context);\n      // Prevent double render\n      if (context.trender && toCreate.length) deleteContext.render = false;\n      // Without await the deletions may not happen at all, presumably due to race condition, if AEs are also created.\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", toDelete, context);\n    }\n    if (toCreate.length) {\n      const createContext = foundry.utils.deepClone(context);\n      await this.createEmbeddedDocuments(\"ActiveEffect\", toCreate, createContext);\n    }\n\n    this._conditionToggleNotify(conditions);\n\n    return conditions;\n  }\n\n  /**\n   * Easy way to determine whether this actor has a condition.\n   *\n   * @example\n   * Test if user is grappled\n   * ```js\n   * actor.hasCondition(\"grappled\");\n   * ```\n   *\n   * @deprecated This is identical to `actor.statuses.has(\"conditionId\")`\n   * @param {string} conditionId - A direct condition key, as per pf1.registry.conditions, such as `shaken` or `dazed`.\n   * @returns {boolean} Condition state\n   */\n  hasCondition(conditionId) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.hasCondition() is deprecated in favor of actor.statuses.has(conditionId)\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v13\",\n      }\n    );\n    return this.statuses.has(conditionId);\n  }\n\n  /**\n   * Get active conditions marked for context\n   *\n   * @internal\n   * @param {string} context - Context ID\n   * @returns {Array<pf1.registry.conditions.model>} - Array of conditions\n   */\n  _getContextConditions(context) {\n    const conditions = [];\n    for (const conditionId of this.statuses) {\n      const condition = pf1.registry.conditions.get(conditionId);\n      if (!condition) continue;\n      if (condition.mechanics.contexts.has(context)) conditions.push(condition);\n    }\n    return conditions;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Helper function for actor energy resistance and damage reduction feedback.\n   *\n   * @protected\n   * @param {\"dr\"|\"eres\"} resistanceType Value to check resistances for.\n   * @returns {Record<string,string>} Entry to label mapping of resistances or reductions.\n   */\n  parseResistances(resistanceType) {\n    /** @type {{custom:string, value: {amount:number,operator:string,types:string[]}[]}} */\n    const res = this.system.traits?.[resistanceType];\n    if (!res) return {}; // Either actor is malformed, or it's a type that doesn't have this info\n\n    const result = {};\n    if (Array.isArray(res.value)) {\n      res.value.forEach((entry, counter) => {\n        const res = this._parseResistanceEntry(entry, resistanceType);\n        result[`${counter + 1}`] = res.label;\n      });\n    }\n\n    if (typeof res.custom === \"string\") {\n      res.custom.split(pf1.config.re.traitSeparator).forEach((entry, counter) => {\n        entry = entry?.trim();\n        if (!entry?.length) return;\n        const res = this._parseResistanceEntry(entry, resistanceType);\n        result[`custom${counter + 1}`] = res.label;\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Parse resistance entry\n   *\n   * Primarily called from {@link parseResistances}\n   *\n   * @internal\n   * @experimental\n   * @param {object|string} entry\n   * @param {\"dr\"|\"er\"} [resistanceType]\n   * @returns {ParsedResistanceEntry}\n   */\n  _parseResistanceEntry(entry, resistanceType = \"dr\") {\n    const dash = \"–\"; // en dash\n\n    const format = (amount, type1, operator = null, type2 = null) => {\n      let label = type1;\n      if (type2) {\n        switch (operator) {\n          case false: {\n            // Combine with AND\n            label = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedAnd\", {\n              type1,\n              type2,\n            });\n            break;\n          }\n          default:\n          case true: {\n            // Combine with OR\n            label = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedOr\", {\n              type1,\n              type2,\n            });\n            break;\n          }\n        }\n      }\n\n      return resistanceType === \"dr\" ? `${amount}/${label}` : `${label} ${amount}`;\n    };\n\n    const getType = (typeId) =>\n      pf1.registry.damageTypes.get(typeId) ??\n      pf1.registry.materials.get(typeId) ?? { name: pf1.config.damageResistances[typeId] ?? typeId };\n\n    const isDR = resistanceType == \"dr\";\n    const isER = !isDR;\n\n    // Parse custom entry\n    if (typeof entry === \"string\") {\n      const re = /(?<value>\\d+)/.exec(entry);\n      const amount = parseInt(re?.groups.value || \"0\");\n      const type = entry.replace(/\\d+\\s*\\/?/, \"\").trim();\n\n      return {\n        type0: { name: type },\n        amount,\n        label: format(amount, type || dash),\n        isDR,\n        isER,\n        custom: true,\n      };\n    }\n    // Parse normal entry\n    else {\n      const { amount, operator } = entry;\n      const [typeId0, typeId1] = entry.types;\n\n      const type0 = getType(typeId0);\n      const type0name = type0?.shortName || type0?.name;\n      const type1 = getType(typeId1);\n      const type1name = type1?.shortName || type1?.name;\n\n      return {\n        type0: { id: typeId0, name: type0name, data: type0 },\n        type1: { id: typeId1, name: type1name, data: type1 },\n        operator,\n        amount,\n        label: format(amount, type0name || dash, operator, type1name),\n        isDR,\n        isER,\n      };\n    }\n  }\n\n  /**\n   * Wrapper for the static function, taking this actor as the only target.\n   *\n   * @see {@link ActorPF.applyDamage}\n   *\n   * @example\n   * Cause 10 damage\n   * ```js\n   * await actor.applyDamage(10);\n   * ```\n   * Heal 10 damage\n   * ```js\n   * await actor.applyDamage(-10);\n   * ```\n   * Apply 3 damage directly to Wounds instead of Vigor\n   * ```js\n   * await actor.applyDamage(3, { asWounds: true });\n   * ```\n   *\n   * @param {number} value - Value to adjust health by. Positive values deal damage, negative values heal.\n   * @param {ApplyDamageOptions} [options] Additional options. This object will be transformed in-place as the damage application is processed.\n   * @returns {Promise<Actor|false>} - Updated actor or false.\n   */\n  async applyDamage(value, options = {}) {\n    const {\n      asWounds = false,\n      asNonlethal = false,\n      critMult,\n      dualHeal = game.settings.get(\"pf1\", \"dualHeal\"),\n      reduction = 0,\n      ratio = 1,\n    } = options;\n    const isHealing = value < 0;\n\n    // Apply ratio and reduction\n    value = Math.floor(value * ratio);\n    if (value < 0) value += Math.min(-value, reduction);\n    else value -= Math.min(value, reduction);\n    value = Math.floor(value); // Round again just for sake of sanity\n\n    console.debug(\"PF1 | Apply Damage |\", value, \"to\", this.name, `[${this.uuid}]`);\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    if (value == 0) {\n      console.warn(\"Attempting to apply 0 damage.\");\n      return false;\n    }\n\n    if (!this.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n      return false;\n    }\n\n    const useWoundsAndVigor = healthConfig.getActorConfig(this).rules?.useWoundsAndVigor ?? false,\n      hp = !useWoundsAndVigor ? this.system.attributes.hp : this.system.attributes.vigor;\n    // Cancel if no health data is found\n    if (!hp) return false;\n\n    const tmp = hp.temp || 0;\n\n    const updateData = {};\n\n    // Wounds & Vigor\n    if (useWoundsAndVigor) {\n      const currentHealth = hp.value;\n      let woundAdjust = 0;\n\n      if (asWounds) {\n        woundAdjust -= value;\n        value = 0;\n      }\n\n      // Temp HP adjustment\n      const dt = value > 0 ? Math.min(tmp, value) : 0;\n      value -= dt;\n\n      // Nonlethal damage\n      if (asNonlethal && value > 0) {\n        if (currentHealth > 0) {\n          value = Math.min(currentHealth, value);\n        } else {\n          woundAdjust -= critMult > 1 ? critMult : 1;\n          value = 0; // No other bleedover to wounds\n        }\n      }\n\n      // Create update data\n      if (dt != 0) updateData[\"system.attributes.vigor.temp\"] = tmp - dt;\n      if (value != 0) {\n        let newHP = Math.min(currentHealth - value, hp.max);\n        if (value > 0) {\n          if (newHP < 0) {\n            woundAdjust -= -newHP;\n            if (critMult > 0) woundAdjust -= critMult;\n            newHP = 0;\n          }\n        }\n\n        if (newHP != hp.value) updateData[\"system.attributes.vigor.value\"] = newHP;\n      }\n\n      if (woundAdjust != 0) {\n        const wounds = this.system.attributes.wounds;\n        updateData[\"system.attributes.wounds.value\"] = Math.clamp(wounds.value + woundAdjust, 0, wounds.max);\n      }\n    }\n    // Normal Hit Points\n    else {\n      // Nonlethal damage\n      let nld = 0;\n      if (asNonlethal) {\n        if (value > 0) {\n          nld = Math.min(hp.max - hp.nonlethal, value);\n          value -= nld;\n        }\n        // Nonlethal healing\n        else if (value < 0) {\n          nld = value;\n          value = 0;\n        }\n      }\n      // Dual healing heals also nonlethal\n      else if (isHealing && dualHeal) {\n        nld = value;\n      }\n\n      // Temp HP adjustment\n      const dt = !isHealing ? Math.min(tmp, value) : 0;\n\n      // Create update data\n      if (nld != 0) updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, hp.nonlethal + nld);\n      if (dt != 0) updateData[\"system.attributes.hp.temp\"] = tmp - dt;\n      const newHp = Math.min(hp.value - (value - dt), hp.max);\n      if (newHp != hp.value) updateData[\"system.attributes.hp.value\"] = newHp;\n    }\n\n    return this.update(updateData);\n  }\n\n  /**\n   * Apply damage to the token or tokens which are currently controlled.\n   *\n   * If Shift is held, will prompt for adjustments based on damage reduction and energy resistances.\n   *\n   * @param {number} value - The amount of damage to deal. Negative values heal instead.\n   * @param {TargetedApplyDamageOptions} [options] - Object containing default settings for overriding\n   * @throws {Error} - If no valid targets are provided.\n   * @returns {Promise<false|Actor[]>} - False if cancelled or array of updated actors.\n   */\n  static async applyDamage(value = 0, options = {}) {\n    // Get targets if none are provided\n    if (!options.targets?.length) options.targets = canvas.tokens.controlled;\n    if (!options.targets?.length && game.user.character) options.targets = [game.user.character];\n\n    // Make sure targets are all actors\n    options.targets = options.targets.map((t) => t.actor || t).filter((t) => t instanceof Actor);\n\n    console.debug(\"PF1 | Apply Damage |\", value, \"to\", options.targets.length, \"target(s)\");\n\n    if (options.targets.length === 0) throw new Error(\"No valid targets\");\n\n    if (value == 0 || !Number.isFinite(value)) {\n      console.warn(\"Attempting to apply 0 damage.\");\n      return false;\n    }\n\n    // HACK: Infer nonlethal\n    if (options.instances?.length && options.asNonlethal === undefined) {\n      options.asNonlethal = options.instances.every((t) => t.types.has(\"nonlethal\"));\n      if (options.asNonlethal) console.debug(\"PF1 | Damage inferred as nonlethal\");\n    }\n\n    // Apply defaults\n    options.asNonlethal ??= false;\n    options.critMult ??= 0;\n    options.asWounds ??= false;\n    options.forceDialog ??= false;\n\n    if (options.reductionDefault !== undefined) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.applyDamage() reductionDefault option is deprecated in favor of reduction.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      options.reduction = options.reductionDefault;\n    }\n\n    // Dialog skipped\n    if (pf1.skipConfirmPrompt ? options.forceDialog : !options.forceDialog) {\n      const promises = options.targets.map((t) => t.applyDamage(value, options));\n      return Promise.all(promises);\n    }\n\n    // Open dialog\n    options.value = value;\n\n    // TODO: This does not return updated documents\n    const rv = await pf1.applications.ApplyDamage.wait(options);\n    if (!rv) return false;\n    return rv.updated;\n  }\n\n  /**\n   * Adjust temporary hit points.\n   *\n   * @example\n   * Gain 50 THP\n   * ```js\n   * actor.addTempHP(50);\n   * ```\n   * Lose 10 THP\n   * ```js\n   * actor.addTempHP(-10);\n   * ```\n   * Set THP to zero\n   * ```js\n   * actor.addTempHP(0, { set: true });\n   * ```\n   *\n   * @param {number} value - Value to add to temp HP\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.set] - If true, the temporary hit points are set to the provide value instead of added to existing.\n   * @returns {Promise<this|undefined>} - Updated document or undefined if no update occurred\n   */\n  async addTempHP(value, { set = false } = {}) {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpActorConfig = healthConfig.getActorConfig(this);\n    const vigor = hpActorConfig.rules.useWoundsAndVigor;\n\n    const curTHP = (vigor ? this.system.attributes.vigor.temp : this.system.attributes.hp.temp) || 0;\n    const newTHP = Math.max(0, !set ? curTHP + value : value);\n\n    return this.update({ system: { attributes: { [vigor ? \"vigor\" : \"hp\"]: { temp: newTHP } } } });\n  }\n\n  /**\n   * Returns effective Wound Threshold multiplier with rules and overrides applied.\n   *\n   * @protected\n   * @param {object} [options] - Additional options\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {number} Multiplier\n   */\n  getWoundThresholdMultiplier({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").getActorConfig(this);\n\n    return healthConfig.rules.useWoundThresholds;\n  }\n\n  /**\n   * Returns Wound Threshold relevant data.\n   *\n   * @protected\n   * @param {object} [options] - Additional options\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {{level:number,penalty:number,multiplier:number,valid:boolean}} - Wound threshold info\n   */\n  getWoundThresholdData({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").getActorConfig(this);\n\n    /** @type {{level:number,mod:number}} */\n    const wt = this.system.attributes?.woundThresholds ?? {};\n\n    const woundMult = this.getWoundThresholdMultiplier({ healthConfig }),\n      woundLevel = wt.level || 0,\n      woundPenalty = woundLevel * woundMult + (wt.mod || 0);\n\n    return {\n      level: woundLevel,\n      penalty: woundPenalty,\n      multiplier: woundMult,\n      valid: woundLevel > 0 && woundMult > 0,\n    };\n  }\n\n  /**\n   * Updates attributes.woundThresholds.level variable.\n   *\n   * @protected\n   */\n  updateWoundThreshold() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpActorConfig = hpConfig.getActorConfig(this);\n    const usage = hpActorConfig.rules.useWoundThresholds;\n    const vigor = hpActorConfig.rules.useWoundsAndVigor;\n\n    /** @type {{mod:number,penalty:number}} */\n    const wt = this.system.attributes.woundThresholds;\n    // Null if WT is not in use, or it is combined with Wounds & Vigor\n    if (!usage || vigor) {\n      wt.level = 0;\n      wt.penaltyBase = 0;\n      wt.penalty = 0;\n      wt.mod = 0;\n      return;\n    }\n    /** @type {{value:number,temp:number,max:number}} */\n    const hp = this.system.attributes.hp,\n      curHP = hp.value,\n      tempHP = hp.temp ?? 0,\n      maxHP = hp.max;\n\n    let level = usage > 0 ? Math.clamp(4 - Math.ceil(((curHP + tempHP) / maxHP) * 4), 0, 3) : 0;\n    if (Number.isNaN(level)) level = 0; // Division by 0 due to max HP on new actors.\n\n    const wtMult = this.getWoundThresholdMultiplier({ healthConfig: hpActorConfig });\n    const wtMod = wt.mod ?? 0;\n\n    wt.level = level;\n    wt.penaltyBase = level * wtMult; // To aid relevant formulas\n    wt.penalty = level * wtMult + wtMod;\n\n    const penalty = wt.penalty;\n    // TODO: Convert to changes\n    if (penalty != 0) {\n      const changeFlatKeys = pf1.config.woundThresholdChangeTargets;\n      for (const fk of changeFlatKeys) {\n        if (fk === \"cl\") continue; // HACK: Handle CL change in spellbook update\n        const flats = getChangeFlat(this, fk, \"untyped\", -penalty);\n        for (const k of flats) {\n          if (!k) continue;\n          const curValue = foundry.utils.getProperty(this, k) ?? 0;\n          foundry.utils.setProperty(this, k, curValue - penalty);\n        }\n      }\n\n      // Soft add change for attacks\n      const ch = new pf1.components.ItemChange({\n        _id: \"woundThreshold\",\n        formula: `-${penalty}`,\n        flavor: pf1.config.woundThresholdConditions[wt.level],\n        target: \"attack\",\n        type: \"untyped\",\n        value: -penalty,\n      });\n      this.changes.set(ch.id, ch);\n    } else {\n      this.changes.delete(\"woundThreshold\");\n    }\n  }\n\n  /**\n   * All skill IDs relevant to this actor\n   *\n   * @type {Array<string>}\n   */\n  get allSkills() {\n    const result = [];\n    for (const [key, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) continue;\n      result.push(key);\n      for (const subKey of Object.keys(skillData.subSkills ?? {})) {\n        result.push(`${key}.${subKey}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An array of all context note data for this actor.\n   *\n   * @type {{notes: Array<pf1.components.ContextNote>, item: ItemPF}[]}\n   */\n  get allNotes() {\n    return this.items\n      .filter((item) => item.isActive && item.system.contextNotes?.length > 0)\n      .map((item) => ({ notes: item.system.contextNotes, item }));\n  }\n\n  /**\n   * @returns {ItemPF[]} All items on this actor, including those in containers.\n   */\n  get allItems() {\n    return [...this.containerItems, ...this.items];\n  }\n\n  /**\n   * All items this actor is holding in containers.\n   *\n   * @internal\n   * @type {ItemPF[]}\n   */\n  get containerItems() {\n    /** @type {Array<ItemPF>} */\n    const items = [];\n\n    /**\n     * @param {pf1.documents.item.ItemContainerPF} container - Item doc\n     */\n    function getContainerContents(container) {\n      if (container.type !== \"container\") return;\n\n      for (const item of container.items) {\n        items.push(item);\n        getContainerContents(item);\n      }\n    }\n\n    for (const container of this.itemTypes.container) {\n      getContainerContents(container);\n    }\n\n    return items;\n  }\n\n  /**\n   * Generates an array with all the active context-sensitive notes for the given context on this actor.\n   *\n   * @param {string} context - The context to draw from.\n   * @param {boolean} [all=true] - Retrieve notes meant for all, such as notes targeting all skills.\n   * @returns {Array<ItemContextNotes>} - Context notes\n   */\n  getContextNotes(context, all = true) {\n    if (context.string) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.getcontextNotes() first parameter must be a string, support for anything else is deprecated.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      context = context.string;\n    }\n\n    const formatTextNotes = (notes) => notes?.split(/[\\n\\r]+/) ?? [];\n\n    const result = this.allNotes;\n\n    const parts = context.split(\".\");\n    const mainId = parts.shift();\n\n    // Special contexts that retrieve additional targets.\n    switch (mainId) {\n      // skill.*\n      case \"skill\": {\n        const skillKey = parts.shift();\n        const skill = this.getSkillInfo(skillKey);\n        const ability = skill.ability;\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [context, `${ability}Skills`].includes(n.target) || (all && n.target === \"skills\"))\n            .map((n) => n.text);\n        }\n\n        return result;\n      }\n      // savingThrow.*\n      case \"savingThrow\": {\n        const saveKey = parts.shift();\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [saveKey, \"allSavingThrows\"].includes(n.target))\n            .map((n) => n.text);\n        }\n\n        if (this.system.attributes?.saveNotes) {\n          result.push({ notes: [this.system.attributes.saveNotes], item: null });\n        }\n\n        return result;\n      }\n      // abilityChecks.*\n      case \"abilityChecks\": {\n        const ablKey = parts.shift();\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [`${ablKey}Checks`, \"allChecks\"].includes(n.target))\n            .map((n) => n.text);\n        }\n\n        return result;\n      }\n      // spell.*\n      case \"spell\": {\n        const subId = parts.shift();\n        // spell.concentration.*\n        if (subId === \"concentration\") {\n          const bookId = parts.shift();\n          for (const noteSource of result) {\n            noteSource.notes = noteSource.notes.filter((n) => n.target === \"concentration\").map((n) => n.text);\n          }\n\n          /** @type {string} */\n          const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.concentrationNotes;\n          if (spellbookNotes?.length) {\n            result.push({ notes: formatTextNotes(spellbookNotes), item: null });\n          }\n\n          return result;\n        }\n        // spell.cl.*\n        if (subId == \"cl\") {\n          const bookId = parts.shift();\n          for (const noteSource of result) {\n            noteSource.notes = noteSource.notes.filter((n) => n.target === \"cl\").map((n) => n.text);\n          }\n\n          /** @type {string} */\n          const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.clNotes;\n          if (spellbookNotes?.length) {\n            result.push({ notes: formatTextNotes(spellbookNotes), item: null });\n          }\n\n          return result;\n        }\n\n        return [];\n      }\n    }\n\n    // Otherwise return notes if they directly match context\n    for (const note of result) {\n      note.notes = note.notes.filter((o) => o.target === context).map((o) => o.text);\n    }\n\n    return result.filter((n) => n.notes.length);\n  }\n\n  /**\n   * Returns a list of already parsed context notes.\n   *\n   * @param {string} context - The context to draw notes from.\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.roll=true] Whether to roll inline rolls or not.\n   * @param {boolean} [options.all] - Option to pass to {@link getContextNotes}\n   * @returns {Promise<Array<ParsedContextNoteEntry>>} The resulting notes, already parsed.\n   */\n  async getContextNotesParsed(context, { all, roll = true, rollData } = {}) {\n    rollData ??= this.getRollData();\n\n    const noteObjects = this.getContextNotes(context, all);\n    await this.enrichContextNotes(noteObjects, rollData, { roll });\n\n    return noteObjects.reduce((all, o) => {\n      all.push(...o.enriched.map((text) => ({ text, source: o.item?.name })));\n      return all;\n    }, []);\n  }\n\n  /**\n   * Enrich context notes with item specific roll data.\n   *\n   * Adds `enriched` array to each note object.\n   *\n   * @param {ItemContextNotes} notes - Context notes\n   * @param {object} [rollData] - Roll data instance\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.roll=true] - Handle rolls\n   */\n  async enrichContextNotes(notes, rollData, { roll = true } = {}) {\n    rollData ??= this.getRollData();\n    for (const noteObj of notes) {\n      rollData.item = {};\n      if (noteObj.item) rollData = noteObj.item.getRollData();\n\n      const enriched = [];\n      for (const note of noteObj.notes) {\n        enriched.push(\n          ...note\n            .split(/[\\n\\r]+/)\n            .map((subnote) => pf1.utils.enrichHTMLUnrolled(subnote, { rollData, rolls: roll, relativeTo: this }))\n        );\n      }\n\n      noteObj.enriched = await Promise.all(enriched);\n    }\n  }\n\n  /**\n   * @typedef {object} MobilityPenaltyResult\n   * @property {number|null} maxDexBonus - The maximum dexterity bonus allowed for this result.\n   * @property {number} acp - The armor check penalty of this result.\n   */\n\n  /**\n   * Computes encumbrance values for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from encumbrance.\n   */\n  _computeEncumbrance() {\n    // Init base data\n    this.system.attributes ??= {};\n    const attributes = this.system.attributes;\n    attributes.encumbrance ??= {};\n    const encumbrance = attributes.encumbrance;\n\n    const carry = this.getCarryCapacity();\n    // Set levels\n    encumbrance.levels = carry;\n    encumbrance.levels.overhead = carry.heavy;\n    encumbrance.levels.carry = carry.heavy * 2;\n    encumbrance.levels.drag = carry.heavy * 5;\n\n    const carriedWeight = Math.max(0, this.getCarriedWeight());\n    encumbrance.carriedWeight = Math.round(carriedWeight * 10) / 10;\n\n    // Determine load level\n    let encLevel = pf1.config.encumbranceLevels.light;\n    if (carriedWeight > 0) {\n      if (carriedWeight > encumbrance.levels.medium) encLevel = pf1.config.encumbranceLevels.heavy;\n      else if (carriedWeight > encumbrance.levels.light) encLevel = pf1.config.encumbranceLevels.medium;\n    }\n    encumbrance.level = encLevel;\n\n    const result = {\n      maxDexBonus: null,\n      acp: 0,\n    };\n\n    switch (encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium:\n        result.acp = 3;\n        result.maxDexBonus = 3;\n        break;\n      case pf1.config.encumbranceLevels.heavy:\n        result.acp = 6;\n        result.maxDexBonus = 1;\n        break;\n    }\n\n    encumbrance.acp = result.acp;\n    encumbrance.maxDex = result.maxDexBonus;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   * @returns {number} - Total coin weight in lbs\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * @returns {{light:number,medium:number,heavy:number}} - Capacity info\n   */\n  getCarryCapacity() {\n    // Determine carrying capacity\n    const carryCapacity = this.system.details?.carryCapacity ?? {};\n    const carryStr = this.system.abilities.str.total + carryCapacity.bonus?.total;\n    let carryMultiplier = carryCapacity.multiplier?.total;\n    const size = Object.keys(pf1.config.sizeChart)[this.system.traits.size.value];\n    if (this.system.attributes.quadruped) carryMultiplier *= pf1.config.encumbranceMultipliers.quadruped[size];\n    else carryMultiplier *= pf1.config.encumbranceMultipliers.normal[size];\n    const table = pf1.config.encumbranceLoads;\n\n    let heavy = Math.floor(table[carryStr] * carryMultiplier);\n    if (carryStr >= table.length) {\n      const multiplierCount = (carryStr - (table.length - 1)) / 10;\n      heavy = Math.floor(table[table.length - 1] * Math.pow(4, multiplierCount) * carryMultiplier);\n    }\n    // Convert to world unit system\n    heavy = pf1.utils.convertWeight(heavy);\n\n    return {\n      light: Math.floor(heavy / 3),\n      medium: Math.floor((heavy / 3) * 2),\n      heavy,\n    };\n  }\n\n  /**\n   * Determines carried weight.\n   *\n   * @returns {number} - kg or lbs of all carried things, including currency\n   */\n  getCarriedWeight() {\n    const weight = this.items\n      .filter((i) => i.isPhysical && i.system.carried !== false)\n      .reduce((cur, o) => cur + o.system.weight.total, this._calculateCoinWeight());\n\n    return pf1.utils.convertWeight(weight);\n  }\n\n  /**\n   * Get total currency in category.\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Return result in lowest denomination (default copper). If false, returns standard currency (default gold) instead.\n   * @returns {number} - Total currency in category.\n   */\n  getCurrency(category = \"currency\", { inLowestDenomination = true } = {}) {\n    const currencies = this.system[category];\n    if (!currencies) {\n      console.error(`Currency type \"${category}\" not found.`);\n      return NaN;\n    }\n\n    const cc = pf1.config.currency;\n\n    let total = 0;\n    for (let [unit, value] of Object.entries(currencies)) {\n      value = Math.max(0, value || 0);\n      if (value == 0) continue;\n      total += value * (cc.rate[unit] || 1);\n    }\n\n    return inLowestDenomination ? total : total / cc.standardRate;\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Use copper for calculations, otherwise {@link pf1.config.currency.standard standard denomination} is used.\n   * @returns {number} - The total amount of currency, in copper pieces.\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total =\n      this.getCurrency(\"currency\", { inLowestDenomination: true }) +\n      this.getCurrency(\"altCurrency\", { inLowestDenomination: true });\n\n    return inLowestDenomination ? total : total / pf1.config.currency.standardRate;\n  }\n\n  /**\n   * Converts currencies of the given category to the given currency type\n   *\n   * @see {@link pf1.utils.currency.convert}\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category, altCurrency is for weightless\n   * @param {CoinType} [type=\"pp\"] - Target currency.\n   * @returns {Promise<this>|undefined} Updated document or undefined if no update occurred.\n   */\n  convertCurrency(category = \"currency\", type = \"pp\") {\n    const cp = this.getCurrency(category, { inLowestDenomination: true });\n    if (!Number.isFinite(cp)) {\n      console.error(`Invalid total currency \"${cp}\" in \"${category}\" category`);\n      return;\n    }\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { [category]: currency } });\n  }\n\n  /**\n   * Prepare armor/shield data for roll data\n   *\n   * @internal\n   * @param {object} equipment Equipment info\n   * @param {string} equipment.id Item ID\n   * @param {string} equipment.type Armor/Shield type\n   * @param {object} armorData Armor data object\n   */\n  _prepareArmorData({ id, type } = {}, armorData) {\n    armorData.type = type ?? null;\n\n    const itemData = this.items.get(id)?.system;\n    if (!itemData) return;\n\n    armorData.ac = itemData.armor.value ?? 0;\n    armorData.enh = itemData.armor.enh ?? 0;\n    armorData.total = armorData.ac + armorData.enh;\n    if (!Number.isFinite(armorData.total)) armorData.total = 0;\n  }\n\n  /**\n   * Retrieve data used to fill in roll variables.\n   *\n   * @example\n   * ```js\n   * await new Roll(\"1d20 + @abilities.wis.mod[Wis]\", actor.getRollData()).toMessage();\n   * ```\n   *\n   * @override\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.refresh] - Refresh cache\n   * @param {boolean} [options.cache] - Use cache. If set to false, new fresh copy is returned without caching it.\n   * @returns {object} - Roll data object\n   */\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    pf1.utils.rollData.addStatic(result);\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        // Cleanup has no deep paths, so we can directly delete them\n        // TODO: Move this cleanup to whatever adds the data\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Add denied Dex to AC\n    result.conditions ??= {};\n    result.conditions.loseDexToAC = this.changeFlags?.loseDexToAC ?? false;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Sync health values\n    for (const hpKey of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = result.attributes[hpKey];\n      hp.value = hp.max + hp.offset;\n      /*\n      // Supporting values\n      const thp = hp.temp ?? 0;\n      hp.effective = hp.value + thp;\n      hp.ratio = hp.effective / (hp.max + thp);\n      */\n    }\n\n    // Set size index\n    const sizes = Object.values(pf1.config.sizeChart);\n    result.size = Math.clamp(result.traits.size.value, 0, sizes.length - 1);\n\n    // Set age category index\n    const ageCategories = Object.keys(pf1.config.ageCategories);\n    const maxAgeOffset = ageCategories.length - 1;\n    result.ageCategory = {\n      value: Math.clamp(result.traits?.ageCategory?.value, 0, maxAgeOffset),\n      physical: Math.clamp(result.traits?.ageCategory?.physical, 0, maxAgeOffset),\n      mental: Math.clamp(result.traits?.ageCategory?.mental, 0, maxAgeOffset),\n    };\n\n    // Add more info for formulas\n    result.armor = { type: 0, total: 0, ac: 0, enh: 0 };\n    result.shield = { type: 0, total: 0, ac: 0, enh: 0 };\n\n    // Determine equipped armor type\n    const eqData = this.equipment;\n    if (eqData) {\n      this._prepareArmorData(eqData.armor, result.armor);\n      this._prepareArmorData(eqData.shield, result.shield);\n    }\n\n    // Add spellbook info\n    result.spells = result.attributes.spells.spellbooks;\n    for (const book of Object.values(result.spells)) {\n      book.abilityMod = result.abilities[book.ability]?.mod ?? 0;\n      // Add alias\n      if (book.class && book.class !== \"_hd\") result.spells[book.class] ??= book;\n    }\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags.dictionary ?? {};\n    result.bFlags = Object.fromEntries(\n      Object.entries(this.itemFlags.boolean ?? {}).map(([key, { sources }]) => [key, sources.length > 0 ? 1 : 0])\n    );\n\n    result.range = this.system.traits?.reach?.total ?? { melee: NaN, reach: NaN };\n\n    // Add class info\n    result.classes = this.classes;\n    const negLevels = result.attributes.energyDrain ?? 0;\n    if (negLevels > 0 && result.classes) {\n      for (const cls of Object.values(result.classes)) {\n        if (cls.isMythic) continue;\n        cls.level = Math.max(0, cls.unlevel - negLevels);\n      }\n    }\n\n    // Map HP ability\n    const hpAbility = result.abilities[result.attributes.hpAbility];\n    Object.defineProperty(result.attributes, \"hpAbility\", {\n      get() {\n        return hpAbility;\n      },\n    });\n\n    // @since PF1 v10\n    result.alignment = pf1.utils.parseAlignment(this.system.details?.alignment || \"tn\");\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Get melee and reach maximum ranges.\n   *\n   * @param {ActorSize|number} size - Actor size as size key or number\n   * @param {ActorStature} stature - Actor stature\n   * @returns {{melee:number,reach:number}} - Ranges\n   */\n  static getReach(size = \"med\", stature = \"tall\") {\n    let effectiveSize = size >= 0 ? size : Object.keys(pf1.config.sizeChart).indexOf(size);\n    // Long creatures larger than medium count as one size smaller\n    // https://www.aonprd.com/Rules.aspx?ID=179\n    if (stature !== \"tall\" && effectiveSize > 4) effectiveSize -= 1;\n\n    const reachStruct = (melee, reach) => ({ melee, reach });\n\n    switch (effectiveSize) {\n      case 0: // Fine\n      case 1: // Diminutive\n        return reachStruct(0, 0);\n      case 2: // Tiny\n        return reachStruct(0, 5);\n      default:\n      case 3: // Small\n      case 4: // Medium\n        return reachStruct(5, 10);\n      case 5: // Large\n        return reachStruct(10, 20);\n      case 6: // Huge\n        return reachStruct(15, 30);\n      case 7: // Gargantuan\n        return reachStruct(20, 40);\n      case 8: // Colossal\n        return reachStruct(30, 60);\n    }\n  }\n\n  /**\n   * @protected\n   * @returns {Array<object>} - Array of item defining objects\n   */\n  getQuickActions() {\n    return this.items\n      .filter((o) => o.isActive && o.system.showInQuickbar === true && o.showUnidentifiedData !== true)\n      .sort((a, b) => a.sort - b.sort)\n      .map((item) => {\n        const qi = {\n          item,\n          name: item.name,\n          id: item.id,\n          type: item.type,\n          img: item.img,\n          get isSingleUse() {\n            return item.isSingleUse;\n          },\n          get haveAnyCharges() {\n            return this.item.isCharged && this.maxCharge > 0;\n          },\n          get maxCharge() {\n            return item.maxCharges;\n          },\n          get charges() {\n            return this.item.charges;\n          },\n        };\n\n        // Fill in charge details\n        qi.isCharged = qi.haveAnyCharges;\n        if (qi.isCharged) {\n          let chargeCost =\n            item.defaultAction?.getChargeCostSync({ maximize: true })?.total ?? item.getDefaultChargeCost();\n          //if (chargeCost == 0) qi.isCharged = false;\n\n          qi.recharging = chargeCost < 0;\n          chargeCost = Math.abs(chargeCost);\n\n          qi.uses = qi.charges;\n          qi.max = qi.maxCharge;\n\n          if (!Number.isFinite(qi.max)) {\n            delete qi.max; // Infinite\n          } else if (chargeCost != 0) {\n            // Maximum charging\n            if (qi.recharging) {\n              qi.uses = Math.ceil((qi.max - qi.uses) / chargeCost);\n              qi.max = Math.ceil(qi.max / chargeCost);\n            }\n            // Actual uses\n            else {\n              qi.uses = Math.floor(qi.uses / chargeCost);\n              qi.max = Math.floor(qi.max / chargeCost);\n            }\n          }\n        } else {\n          const action = item.defaultAction;\n          // Add fake charges for ammo using items\n          if (action?.ammo.type) {\n            const ammo = item.defaultAmmo;\n            if (ammo) {\n              qi.isCharged = true;\n              qi.uses = ammo.system.quantity || 0;\n            }\n          }\n        }\n\n        return qi;\n      });\n  }\n\n  /**\n   * @internal\n   */\n  refreshAbilityModifiers() {\n    for (const abl of Object.values(this.system.abilities)) {\n      const penalty = Math.abs(abl.penalty || 0);\n      const damage = abl.damage || 0;\n      const newMod = pf1.utils.getAbilityModifier(abl.total, { penalty, damage });\n      abl.mod = newMod;\n    }\n  }\n\n  /**\n   * Return feat counts.\n   *\n   * @typedef FeatCounts\n   * @type {object}\n   * @property {number} max - The maximum allowed feats.\n   * @property {number} active - The current number of active feats.\n   * @property {number} owned - The current number of feats, active or not.\n   * @property {number} levels - Feats gained by levels specifically\n   * @property {number} mythic - Mythic feats\n   * @property {number} formula - Feats gained by custom formula on the feats tab\n   * @property {number} changes - Feats gained via Changes\n   * @property {number} disabled - Disabled feats\n   * @property {number} excess - Feats over maximum allowed\n   * @property {number} missing - Feats under maximum allowed\n   * @returns {FeatCounts} An object with a property `value` which refers to the current used feats, and `max` which refers to the maximum available feats.\n   */\n  getFeatCount() {\n    const feats = this.itemTypes.feat.filter((o) => o.subType === \"feat\");\n\n    const active = feats.filter((o) => o.isActive).length;\n    const owned = feats.length;\n\n    const result = {\n      max: 0,\n      active,\n      owned,\n      disabled: owned - active,\n      levels: 0,\n      mythic: 0,\n      formula: 0,\n      changes: 0,\n      // Count totals\n      get discrepancy() {\n        return this.max - this.active;\n      },\n      get missing() {\n        return Math.max(0, this.discrepancy);\n      },\n      get excess() {\n        return Math.max(0, -this.discrepancy);\n      },\n    };\n\n    const isMindless = this.system.abilities?.int?.value === null;\n\n    // Ignore classes for feats with mindless\n    // Mindless gets other bonuses to feats beyond these...\n    // ... since they can be explicit \"gains X feat\", homebrew, or other impossible to account for.\n    if (!isMindless) {\n      // Add feat count by level\n      result.levels = Math.ceil(this.system.attributes.hd.total / 2);\n      result.max += result.levels;\n\n      // Mythic feats\n      // https://aonprd.com/Rules.aspx?Name=Mythic%20Heroes&Category=Mythic%20Rules\n      // Gained at 1, 3, 5, etc.\n      result.mythic = Math.ceil(this.system.details.mythicTier / 2);\n      result.max += result.mythic;\n    }\n\n    // Bonus feat formula\n    const bonusRoll = RollPF.safeRollSync(this.system.details?.bonusFeatFormula || \"0\", this.getRollData());\n    result.formula = bonusRoll.total;\n    result.max += result.formula;\n    if (bonusRoll.err) {\n      console.error(\n        `An error occurred in the Bonus Feat Formula of actor \"${this.name}\" [${this.id}].`,\n        {\n          formula: this.system.details?.bonusFeatFormula,\n          actor: this,\n        },\n        bonusRoll.err\n      );\n    }\n\n    // Bonuses from changes\n    result.changes = getHighestChanges(\n      this.changes.filter((c) => {\n        if (c.target !== \"bonusFeats\") return false;\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).reduce((cur, c) => cur + c.value, 0);\n    result.max += result.changes;\n\n    return result;\n  }\n\n  /**\n   * Check if actor has item with specified boolean flag.\n   *\n   * @param {string} flagName - The name/key of the flag to search for.\n   * @returns {boolean} Whether this actor has any owned item with the given flag.\n   */\n  hasItemBooleanFlag(flagName) {\n    return this.itemFlags.boolean[flagName] != null;\n  }\n\n  /**\n   * Restore spellbook used slots and spellpoints.\n   *\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.commit=true] If false, return update data object instead of directly updating the actor.\n   * @param {object} [options.rollData] Roll data\n   * @returns {Promise<this|object>} Result of update or the update data.\n   */\n  async resetSpellbookUsage({ commit = true, rollData } = {}) {\n    const actorData = this.system;\n    const updateData = {};\n\n    rollData ??= this.getRollData();\n\n    // Update spellbooks\n    for (const [bookId, spellbook] of Object.entries(actorData.attributes.spells.spellbooks)) {\n      if (!spellbook.inUse) continue;\n\n      // Restore spellbooks using spell points\n      if (spellbook.spellPoints.useSystem) {\n        // Try to roll restoreFormula, fall back to restoring max spell points\n        let restorePoints = spellbook.spellPoints.max;\n        if (spellbook.spellPoints.restoreFormula) {\n          const restoreRoll = await RollPF.safeRoll(\n            spellbook.spellPoints.restoreFormula,\n            rollData,\n            undefined,\n            undefined,\n            { allowInteractive: false }\n          );\n          if (restoreRoll.err) console.error(restoreRoll.err, spellbook.spellPoints.restoreFormula);\n          else restorePoints = Math.min(spellbook.spellPoints.value + restoreRoll.total, spellbook.spellPoints.max);\n        }\n        updateData[`system.attributes.spells.spellbooks.${bookId}.spellPoints.value`] = restorePoints;\n      }\n      // Restore spell slots\n      else {\n        for (let level = 0; level < 10; level++) {\n          updateData[`system.attributes.spells.spellbooks.${bookId}.spells.spell${level}.value`] =\n            spellbook.spells[`spell${level}`]?.max ?? 0;\n        }\n      }\n    }\n\n    if (commit) return this.update(updateData);\n    return updateData;\n  }\n\n  /**\n   * Recharge all owned items.\n   *\n   * @see {@link pf1.documents.item.ItemPF.recharge}\n   *\n   * @example\n   * Recharge items with default settings.\n   * ```js\n   * await actor.rechargeItems();\n   * ```\n   * Recharge items as if week had passed.\n   * ```js\n   * await actor.rechargeItems({ period: \"week\" });\n   * ```\n   *\n   * @param {RechargeActorItemsOptions} [options] - Additional options\n   * @returns {Promise<Item[]|object[]>} - Result of an update or the update data.\n   */\n  async rechargeItems({ commit = true, ...rechargeOptions } = {}) {\n    const itemUpdates = [];\n\n    // Update charged items\n    // TODO: Await all item recharges in one go.\n    for (const item of this.items) {\n      const itemUpdate = await item.recharge({ ...rechargeOptions, commit: false });\n\n      // Append update to queue\n      if (itemUpdate?.system && !foundry.utils.isEmpty(itemUpdate.system)) {\n        itemUpdate._id = item.id;\n        itemUpdates.push(itemUpdate);\n      }\n    }\n\n    if (commit) {\n      if (itemUpdates.length) return this.updateEmbeddedDocuments(\"Item\", itemUpdates);\n    } else return itemUpdates;\n    return [];\n  }\n\n  /**\n   * Handler for character healing during rest.\n   *\n   * @protected\n   * @param {object} options Resting options.\n   * @returns {object} Update data object\n   */\n  _restingHeal(options = {}) {\n    const actorData = this.system,\n      hp = actorData.attributes.hp,\n      wounds = actorData.attributes?.wounds,\n      vigor = actorData.attributes?.vigor;\n\n    const { hours, longTermCare } = options;\n    const updateData = {};\n\n    /** @type {number} */\n    const hd = actorData.attributes.hd.total;\n\n    // Base healing\n    const heal = {\n      hp: hd,\n      abl: 1,\n      nonlethal: hours * hd,\n      vigor: vigor?.max ?? 0,\n      wounds: wounds?.max > 0 ? 1 : 0,\n    };\n\n    // -- Normal Hit Points ---\n\n    // Full day of resting\n    if (hours >= 24) {\n      heal.hp += 1;\n      heal.wounds += Math.floor(hd / 2);\n      heal.abl += 1;\n    }\n    // Long term care\n    if (longTermCare === true) {\n      heal.hp *= 2;\n      heal.abl *= 2;\n      heal.wounds *= 2;\n    }\n\n    updateData[\"system.attributes.hp.value\"] = Math.min(hp.value + heal.hp, hp.max);\n    updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, (hp.nonlethal || 0) - heal.nonlethal);\n    for (const [key, abl] of Object.entries(actorData.abilities)) {\n      const dmg = Math.abs(abl.damage);\n      updateData[`system.abilities.${key}.damage`] = Math.max(0, dmg - heal.abl);\n    }\n\n    // --- Wounds & Vigor ---\n\n    // Secondary actors don't use W&V rules\n    if (wounds?.max && vigor?.max) {\n      updateData[\"system.attributes.wounds.value\"] = Math.min(wounds.value + heal.wounds, wounds.max);\n      updateData[\"system.attributes.vigor.value\"] = Math.min(vigor.value + heal.vigor, vigor.max);\n    }\n\n    return updateData;\n  }\n\n  /**\n   * Perform all changes related to an actor resting, including restoring HP, ability scores, item uses, etc.\n   *\n   * @example\n   * Rest with default settings\n   * ```js\n   * await actor.performRest();\n   * ```\n   *\n   * @see {@link hookEvents!pf1PreActorRest pf1PreActorRest hook}\n   * @see {@link hookEvents!pf1ActorRest pf1ActorRest hook}\n   * @param {Partial<ActorRestOptions>} options - Options affecting an actor's resting\n   * @returns {Promise<ActorRestData | void>} Updates applied to the actor, if resting was completed\n   */\n  async performRest(options = {}) {\n    const { restoreHealth = true, longTermCare = false, restoreDailyUses = true, hours = 8, verbose = false } = options;\n\n    const updateData = {};\n    // Restore health and ability damage\n    if (restoreHealth === true) {\n      const healUpdate = this._restingHeal(options);\n      foundry.utils.mergeObject(updateData, healUpdate);\n    }\n\n    let itemUpdates = [];\n    // Restore daily uses of spells, feats, etc.\n    if (restoreDailyUses === true) {\n      const spellbookUpdates = await this.resetSpellbookUsage({ commit: false });\n      foundry.utils.mergeObject(updateData, spellbookUpdates);\n\n      // Recharge all items (including spells for prepared spellbooks)\n      itemUpdates = await this.rechargeItems({ commit: false, updateData, period: \"day\" });\n    }\n\n    options = { restoreHealth, restoreDailyUses, longTermCare, hours };\n    const allowed = Hooks.call(\"pf1PreActorRest\", this, options, updateData, itemUpdates);\n    if (allowed === false) return;\n\n    const context = { pf1: { action: \"rest\", restOptions: options } };\n\n    if (itemUpdates.length) await this.updateEmbeddedDocuments(\"Item\", itemUpdates, foundry.utils.deepClone(context));\n    if (!foundry.utils.isEmpty(updateData.system)) await this.update(updateData, foundry.utils.deepClone(context));\n\n    Hooks.callAll(\"pf1ActorRest\", this, options, updateData, itemUpdates);\n\n    if (verbose) {\n      const message = restoreDailyUses ? \"PF1.FullRestMessage\" : \"PF1.RestMessage\";\n      ui.notifications.info(game.i18n.format(message, { name: this.token?.name ?? this.name, hours }));\n    }\n\n    return { options, updateData, itemUpdates };\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async modifyTokenAttribute(attribute, value, isDelta = false, isBar = true) {\n    let doc = this;\n    const current = foundry.utils.getProperty(this.system, attribute),\n      updates = {};\n\n    const isResource = current instanceof Resource;\n    if (isResource) doc = current.item;\n\n    if (!doc) return;\n\n    // Hit points\n    if (attribute === \"attributes.hp\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.hp.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.hp.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Wounds & Vigor\n    else if (attribute === \"attributes.vigor\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.vigor.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.vigor.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Relative\n    else if (isDelta) {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.min(current.value + value, current.max);\n      } else {\n        if (isBar)\n          updates[`system.${attribute}.value`] = Math.clamp(current.value + value, current.min || 0, current.max);\n        else updates[`system.${attribute}`] = current + value;\n      }\n    }\n    // Absolute\n    else {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.clamp(value, 0, current.max);\n      } else {\n        if (isBar) updates[`system.${attribute}.value`] = Math.min(value, current.max);\n        else updates[`system.${attribute}`] = value;\n      }\n    }\n\n    const allowed = Hooks.call(\"modifyTokenAttribute\", { attribute, value, isDelta, isBar }, updates);\n    return allowed !== false ? doc.update(updates) : this;\n  }\n\n  /**\n   * The VisionSharingSheet instance for this actor\n   *\n   * @type {VisionSharingSheet}\n   */\n  get visionSharingSheet() {\n    this._visionSharingSheet ??= new VisionSharingSheet({ document: this });\n    return this._visionSharingSheet;\n  }\n}\n\n/**\n * @typedef {object} ActorRestOptions\n * Options given to {@link ActorPF.performRest} affecting an actor's resting.\n * @property {boolean} [restoreHealth=true] - Whether the actor's health should be restored.\n * @property {boolean} [restoreDailyUses=true] - Whether daily uses of spells and abilities should be restored.\n * @property {boolean} [longTermCare=false] - Whether additional hit and ability score points should be restored through the Heal skill.\n * @property {number} [hours=8] - The number of hours the actor will rest.\n * @property {boolean} [verbose=false] - Display notification once rest processing finishes.\n */\n\n/**\n * @typedef {object} ActorRestData\n * @property {ActorRestOptions} options - Options for resting\n * @property {object} updateData - Updates applied to the actor\n * @property {object[]} itemUpdates - Updates applied to the actor's items\n */\n\n/**\n * @typedef {object} DamageInstance\n * @property {number} value - Total damage in this instance\n * @property {object} types - Damage type data\n * @property {string} types.custom - Custom damage types\n * @property {string[]} types.values - Standard damage types\n */\n\n/**\n * @typedef {object} ItemContextNotes\n * @property {Item} item - Item from which the notes are from\n * @property {Array<string>} notes - Note strings\n * @property {Array<string>} enriched - Enriched note things\n */\n\n/**\n * @typedef {object} ParsedContextNoteEntry\n * @property {string} text - Enriched note text\n * @property {string|undefined} source - Source label if any\n */\n","import { ActorPF } from \"@actor/actor-pf.mjs\";\nimport { getSourceInfo, getChangeFlat } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Shared functionality for {@link pf1.documents.actor.ActorCharacterPF | PCs} and {@link pf1.documents.actor.ActorNPCPF | NPCs}.\n *\n * @todo Move PC/NPC functionality from ActorPF here.\n *\n * @abstract\n */\nexport class BaseCharacterPF extends ActorPF {\n  /** @inheritDoc */\n  _detectHealthChange(changed, context) {\n    super._detectHealthChange(changed, context);\n\n    const deltas = context.pf1?.deltas ?? {};\n\n    const hpData = changed.system?.attributes;\n\n    if (hpData) {\n      const oldHpData = this.system.attributes;\n\n      for (const type of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = hpData[type];\n        if (!hp) continue;\n        for (const key of [\"offset\", \"temp\", \"nonlethal\"]) {\n          if (hp[key] === undefined) continue;\n          const diff = hp[key] - (oldHpData?.[type]?.[key] || 0);\n          if (diff && Number.isFinite(diff)) {\n            deltas[type] ??= {};\n            deltas[type][key] = diff;\n          }\n        }\n      }\n    }\n\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const oldAblData = this.system.abilities;\n      for (const [ablKey, ablData] of Object.entries(abilities)) {\n        for (const key of [\"damage\", \"drain\", \"userPenalty\"]) {\n          if (ablData[key] === undefined) continue;\n          const diff = ablData[key] - (oldAblData?.[ablKey]?.[key] ?? 0);\n          if (diff && Number.isFinite(diff)) {\n            deltas[ablKey] ??= {};\n            deltas[ablKey][key] = diff;\n          }\n        }\n      }\n    }\n\n    if (changed.system.attributes?.energyDrain !== undefined) {\n      const diff = changed.system.attributes?.energyDrain - this.system.attributes.energyDrain;\n      if (diff && Number.isFinite(diff)) {\n        deltas.energyDrain = diff;\n      }\n    }\n\n    if (Object.keys(deltas).length > 0) {\n      context.pf1 ??= {};\n      context.pf1.deltas = deltas;\n    }\n  }\n\n  /** @override */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    this._onDeltaUpdates(context.pf1?.deltas);\n  }\n\n  /**\n   * Handle Deltas in update context\n   *\n   * Produces scrolling text for health changes.\n   *\n   * @param {Promise<object>} deltas\n   */\n  async _onDeltaUpdates(deltas) {\n    if (!deltas) return;\n\n    // TODO: Maybe allow if the token has visible HP bar regardless?\n    if (!game.user.isGM && !this.testUserPermission(game.user, game.settings.get(\"pf1\", \"healthPermission\"))) return;\n\n    // TODO: Support multiple tokens?\n    let token = this.token ?? this.getActiveTokens(true, true)[0];\n\n    if (!game.user.isGM && !token.object.isVisible) token = null;\n\n    if (!token) return;\n\n    const deltaLabels = {\n      hp: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Health\",\n          color: pf1.config.feedback.deltas.hp,\n        },\n        temp: {\n          label: \"PF1.ActiveFeedback.Deltas.TempHP\",\n          color: pf1.config.feedback.deltas.temp,\n        },\n        nonlethal: {\n          label: \"PF1.ActiveFeedback.Deltas.Nonlethal\",\n          color: pf1.config.feedback.deltas.nonlethal,\n        },\n      },\n      wounds: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Wounds\",\n          color: pf1.config.feedback.deltas.wounds,\n        },\n      },\n      vigor: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Vigor\",\n          color: pf1.config.feedback.deltas.vigor,\n        },\n        temp: {\n          label: \"PF1.ActiveFeedback.Deltas.TempVigor\",\n          color: pf1.config.feedback.deltas.temp,\n        },\n      },\n      energyDrain: {\n        label: \"PF1.ActiveFeedback.Deltas.NegativeLevel\",\n        color: pf1.config.feedback.deltas.energyDrain,\n      },\n      ability: {\n        damage: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityDamage\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n        drain: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityDrain\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n        userPenalty: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityPenalty\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n      },\n    };\n\n    const formatter = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format;\n\n    for (const key of Object.keys(deltas)) {\n      const labels = [];\n      switch (key) {\n        case \"hp\":\n        case \"wounds\":\n        case \"vigor\":\n          for (const [hpKey, value] of Object.entries(deltas[key])) {\n            const conf = deltaLabels[key][hpKey];\n            if (conf) {\n              const positive = value > 0;\n              const color = positive ? conf.color.positive : conf.color.negative;\n              labels.push({\n                label: game.i18n.format(conf.label, { value: formatter(value) }),\n                positive,\n                color,\n                value,\n                key: `${key}.${hpKey}`,\n              });\n            } else console.debug(\"Unrecognized delta:\", key, hpKey, value);\n          }\n          break;\n        case \"energyDrain\": {\n          const diff = deltas[key];\n          const conf = deltaLabels.energyDrain;\n          const positive = diff < 0;\n          const color = positive ? conf.color.positive : conf.color.negative;\n          labels.push({\n            label: game.i18n.format(conf.label, { value: formatter(diff) }),\n            positive,\n            color,\n            value: diff,\n            key,\n          });\n          break;\n        }\n        default:\n          if (key in pf1.config.abilities) {\n            for (const [dmgKey, diff] of Object.entries(deltas[key])) {\n              const ablName = pf1.config.abilities[key];\n              const conf = deltaLabels.ability[dmgKey];\n              if (ablName && conf) {\n                const positive = diff < 0;\n                const color = positive ? conf.color.positive : conf.color.negative;\n                labels.push({\n                  label: game.i18n.format(conf.label, { value: formatter(diff), ability: ablName }),\n                  positive,\n                  color,\n                  value: diff,\n                  key: `${key}.${dmgKey}`,\n                });\n              } else {\n                console.debug(\"Unrecognized ability score delta:\", key, dmgKey, deltas[key]?.[dmgKey]);\n              }\n            }\n          } else {\n            console.warn(\"Unrecognized delta:\", key, deltas[key]);\n          }\n          break;\n      }\n\n      // Print the actual message.\n      let t0 = 0;\n      for (const options of labels) {\n        const { positive, color } = options;\n\n        // Roughly scale based on canvas resolution with some lower end clamping\n        // TODO: Adjust size based on how \"large\" the change was\n        const fontSize = Math.max(canvas.grid.size / 3, 24);\n\n        const textData = {\n          anchor: CONST.TEXT_ANCHOR_POINTS.CENTER,\n          direction: positive ? CONST.TEXT_ANCHOR_POINTS.TOP : CONST.TEXT_ANCHOR_POINTS.BOTTOM,\n          // duration: 2000,\n          fontSize,\n          fill: color,\n          stroke: 0x000000,\n          strokeThickness: 2.5,\n          jitter: 0.5,\n        };\n\n        if (Hooks.call(\"pf1HealthDeltaRender\", this, options, textData) === false) continue;\n\n        const t1 = performance.now();\n\n        // Prevent scrolling text from overlapping too much\n        const sinceLast = t1 - t0;\n        if (sinceLast < 200) {\n          await new Promise((resolve) => setTimeout(() => resolve(), Math.max(10, 200 - sinceLast)));\n        }\n        t0 = t1;\n\n        console.debug(\"PF1 |\", options.label, \"|\", this.uuid);\n        canvas.interface.createScrollingText(token.object.center, options.label, textData);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    const system = this.system;\n\n    system.traits ??= {};\n\n    // Prepare size data\n    const baseSize = system.traits.size || \"med\";\n    const sizeValue = Object.keys(pf1.config.sizeChart).indexOf(baseSize);\n    system.traits.size = {\n      base: baseSize,\n      value: sizeValue,\n    };\n\n    // Prepare age category data\n    const baseAge = system.traits.ageCategory || \"adult\";\n    const ageValue = Object.keys(pf1.config.ageCategories).indexOf(baseAge);\n    system.traits.ageCategory = {\n      base: baseAge,\n      value: ageValue,\n      physical: ageValue,\n      mental: ageValue,\n    };\n\n    // Prepare skills\n    const skills = system.skills;\n    for (const skill of Object.values(skills)) {\n      if (!skill) continue; // Shouldn't happen\n\n      skill.rank ||= 0;\n      skill.mod = 0;\n\n      for (const subSkill of Object.values(skill.subSkills || {})) {\n        if (!subSkill) continue; // Shouldn't happen\n        subSkill.rank ||= 0;\n        subSkill.mod = 0;\n      }\n    }\n  }\n\n  /** @inheritDoc  */\n  _prepareTypeChanges(changes) {\n    // Call hook\n    const tempChanges = [];\n    if (Hooks.events.pf1AddDefaultChanges?.length) {\n      Hooks.callAll(\"pf1AddDefaultChanges\", this, tempChanges);\n    }\n    changes.push(...tempChanges.filter((c) => c instanceof pf1.components.ItemChange));\n\n    const allClasses = this.itemTypes.class.sort((a, b) => a.sort - b.sort);\n\n    this._calculateMaxHealth(allClasses, changes);\n\n    const system = this.system;\n\n    // Add class data to saving throws\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\") === true;\n    for (const a of Object.keys(system.attributes.savingThrows)) {\n      let hasGoodSave = false;\n      system.attributes.savingThrows[a].total = system.attributes.savingThrows[a]?.base ?? 0;\n\n      const total = allClasses.reduce((cur, cls) => {\n        const base = cls.system.savingThrows[a].base;\n\n        if (!useFractional) {\n          // Add per class change\n          changes.push(\n            new pf1.components.ItemChange({\n              formula: base,\n              target: a,\n              type: \"untypedPerm\",\n              flavor: cls.name,\n            })\n          );\n        } else {\n          if (cls.system.savingThrows[a].good === true) hasGoodSave = true;\n        }\n        return cur + base;\n      }, 0);\n\n      if (useFractional) {\n        // Add shared change with fractional\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: Math.floor(total),\n            target: a,\n            type: \"untypedPerm\",\n            flavor: game.i18n.localize(\"PF1.Base\"),\n          })\n        );\n      }\n\n      // Fractional bonus +2 when one class has good save\n      if (useFractional && hasGoodSave) {\n        const goodSaveFormula = pf1.config.classFractionalSavingThrowFormulas.goodSaveBonus;\n        const total = RollPF.safeRollSync(goodSaveFormula).total;\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: total,\n            target: a,\n            type: \"untypedPerm\",\n            flavor: game.i18n.localize(\"PF1.SavingThrowGoodFractionalBonus\"),\n          })\n        );\n      }\n    }\n\n    // Add Constitution to HP\n    const hpAbility = system.attributes.hpAbility;\n    if (hpAbility) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.mod * @attributes.hd.total\",\n          operator: \"add\",\n          target: \"mhp\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n\n      if (!system.attributes.wounds?.base) {\n        // > a creature has a number of wound points equal to twice its Constitution score.\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.undrained * 2\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"base\",\n            flavor: pf1.config.abilities[hpAbility],\n          })\n        );\n        // > It also has a wound threshold equal to its Constitution score.\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.undrained\",\n            operator: \"add\",\n            target: \"woundThreshold\",\n            type: \"base\",\n            flavor: pf1.config.abilities[hpAbility],\n          })\n        );\n        // https://www.aonprd.com/Rules.aspx?ID=1157\n        // >  For each point of Constitution damage a creature takes, it loses 2 wound points\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"-(@attributes.hpAbility.damage * 2)\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(\"PF1.AbilityDamage\"),\n          })\n        );\n        // > When a creature takes a penalty to its Constitution score or its Constitution is drained,\n        // > it loses 1 wound point per point of drain or per penalty\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.penalty\", // no minus since penalty is negative inherently\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(`PF1.Ability${hpAbility.capitalize()}Pen`),\n          })\n        );\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"-@attributes.hpAbility.drain\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(\"PF1.AbilityDrain\"),\n          })\n        );\n      }\n    }\n\n    // Add skill changes\n    const addSKillChanges = (skill, target) => {\n      if (skill.rank > 0) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: skill.rank,\n            value: skill.rank,\n            target: `skill.~${target}`,\n            type: \"base\",\n            operator: \"add\",\n            flavor: game.i18n.localize(\"PF1.SkillRankPlural\"),\n          })\n        );\n        if (skill.cs) {\n          changes.push(\n            new pf1.components.ItemChange({\n              formula: pf1.config.classSkillBonus,\n              value: pf1.config.classSkillBonus,\n              target: `skill.~${target}`,\n              type: \"untyped\",\n              operator: \"add\",\n              flavor: game.i18n.localize(\"PF1.CSTooltip\"),\n            })\n          );\n        }\n      }\n\n      if (skill.ability) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: `@abilities.${skill.ability}.mod`,\n            target: `skill.~${target}`,\n            operator: \"add\",\n            type: \"untyped\",\n            flavor: pf1.config.abilities[skill.ability] || skill.ability,\n            priority: -10, // Stat buffing items don't work correctly without this\n          })\n        );\n\n        if (skill.acp) {\n          changes.push(\n            new pf1.components.ItemChange({\n              formula: \"-@attributes.acp.skill\",\n              target: `skill.~${target}`,\n              type: \"untyped\",\n              operator: \"add\",\n              flavor: game.i18n.localize(\"PF1.ACPLong\"),\n            })\n          );\n        }\n      }\n    };\n\n    const skills = system.skills;\n    for (const [skillId, skill] of Object.entries(skills)) {\n      if (!skill) continue; // Shouldn't happen\n      addSKillChanges(skill, skillId);\n\n      for (const [subSkillId, subSkill] of Object.entries(skill.subSkills || {})) {\n        if (!subSkill) continue; // Shouldn't happen\n        addSKillChanges(subSkill, `${skillId}.${subSkillId}`);\n      }\n    }\n\n    // Add movement speed(s)\n    for (const [mode, speed] of Object.entries(system.attributes.speed)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: speed.base || 0,\n          target: `${mode}Speed`,\n          type: \"base\",\n          operator: \"set\",\n          priority: 1001,\n          flavor: game.i18n.localize(\"PF1.Base\"),\n        })\n      );\n    }\n\n    // Add base attack modifiers shared by all attacks\n    // BAB to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Negative levels to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n    // ACP to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.acp.attackPenalty\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n      })\n    );\n\n    // Add variables to CMD\n    // BAB to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Strength or substitute to CMD\n    const strAbl = system.attributes.cmd.strAbility;\n    if (strAbl in pf1.config.abilities) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${strAbl}.mod`,\n          target: \"cmd\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[strAbl],\n        })\n      );\n    }\n    // Negative levels to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Add Dexterity Modifier to Initiative\n    const abl = system.attributes.init.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"init\",\n          type: \"untypedPerm\",\n          priority: -100,\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n\n    // Add ACP penalty\n    if ([\"str\", \"dex\"].includes(abl)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.acp.attackPenalty\",\n          operator: \"add\",\n          target: \"init\",\n          type: \"untyped\",\n          priority: -100,\n          flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n        })\n      );\n    }\n\n    // Add Ability modifiers and negative levels to saving throws\n    // Ability Mod to Fortitude\n    const fortAbl = system.attributes.savingThrows.fort.ability;\n    if (fortAbl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${fortAbl}.mod`,\n          operator: \"add\",\n          target: \"fort\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[fortAbl],\n        })\n      );\n    }\n    // Ability Mod to Reflex\n    const refAbl = system.attributes.savingThrows.ref.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${refAbl}.mod`,\n          operator: \"add\",\n          target: \"ref\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[refAbl],\n        })\n      );\n    }\n    // Ability Mod to Will\n    const willAbl = system.attributes.savingThrows.will.ability;\n    if (willAbl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${willAbl}.mod`,\n          operator: \"add\",\n          target: \"will\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[willAbl],\n        })\n      );\n    }\n    // Negative level to saves\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"allSavingThrows\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Spell Resistance\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.attributes.sr.formula || 0,\n        target: \"spellResist\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.CustomBonus\"),\n      })\n    );\n\n    // Carry capacity strength bonus\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.bonus.user || 0,\n        target: \"carryStr\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n    // Carry capacity multiplier\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.multiplier.base ?? 1,\n        target: \"carryMult\",\n        type: \"base\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.multiplier.user || 0,\n        target: \"carryMult\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n\n    // NPC Lite Sheet Values for Init, CMD, BAB and AC\n    const liteValues = {\n      init: null,\n      cmd: null,\n      bab: null,\n      ac: (data) => data.normal,\n    };\n\n    for (const [key, valfn] of Object.entries(liteValues)) {\n      let value = system.attributes[key];\n      if (typeof valfn === \"function\") value = valfn(value);\n      value = value.value;\n\n      if (value !== undefined) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: value,\n            trget: key,\n            type: \"base\",\n            flavor: game.i18n.localize(\"PF1.Custom\"),\n            operator: \"set\",\n          })\n        );\n      }\n    }\n\n    // Natural armor\n    const ac = system.attributes.naturalAC || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: ac,\n        target: \"nac\",\n        type: \"untyped\",\n        flavor: game.i18n.format(\"PF1.CustomBonusType\", { type: game.i18n.localize(\"PF1.NaturalArmor\") }),\n      })\n    );\n\n    // Add armor bonuses from equipment\n    for (const item of this.itemTypes.equipment) {\n      if (!item.system.equipped) continue;\n      // Ignore armor with zero value\n      const normalAC = item.system.armor?.value || 0;\n      const enhAC = item.system.armor?.enh || 0;\n      if (!(normalAC + enhAC)) continue;\n\n      const isBroken = item.isBroken;\n      let armorTarget = \"aac\";\n      if (item.system.subType === \"shield\") armorTarget = \"sac\";\n      // Push base armor\n      const baseAC = isBroken ? Math.floor(normalAC / 2) : normalAC;\n      const enhACEffective = isBroken ? Math.floor(enhAC / 2) : enhAC;\n      // Adjust broken AC to not cause extra reduction from halving both\n      // Proof: 5 / 2 base + 3 / 2 enh = 3, when it should be 8 / 2 = 4\n      const brokenAdjust = isBroken ? Math.floor(((normalAC % 2) + (enhAC % 2)) / 2) : 0;\n\n      // Add changes\n      changes.push(\n        new pf1.components.ItemChange(\n          {\n            formula: baseAC,\n            value: baseAC,\n            target: armorTarget,\n            type: \"base\",\n          },\n          { parent: item }\n        )\n      );\n      changes.push(\n        new pf1.components.ItemChange(\n          {\n            formula: enhACEffective + brokenAdjust,\n            value: enhACEffective + brokenAdjust,\n            target: armorTarget,\n            type: \"enhancement\",\n          },\n          { parent: item }\n        )\n      );\n    }\n\n    // Add fly bonuses or penalties based on maneuverability\n\n    const flyKey = system.attributes.speed.fly.maneuverability;\n    let flyValue = 0;\n    if (flyKey != null) flyValue = pf1.config.flyManeuverabilityValues[flyKey];\n    if (flyValue !== 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: flyValue,\n          target: \"skill.fly\",\n          type: \"racial\",\n          flavor: game.i18n.localize(\"PF1.Movement.FlyManeuverability.Label\"),\n        })\n      );\n    }\n\n    // Add swim and climb skill bonuses based on having speeds for them\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.climb.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.clm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.climb\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.swim.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.swm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.swim\"),\n      })\n    );\n\n    // Negative level to skills\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Wound Threshold to all skills\n    // BUG: This does nothing since the penalty is calculated independent of the change system\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.woundThresholds.penalty\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.WoundThreshold\"),\n      })\n    );\n\n    // Add size bonuses to various attributes\n    // AC\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeMods).join(\", \") + \")\",\n        target: \"ac\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // Stealth skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeStealthMods).join(\", \") + \")\",\n        target: \"skill.ste\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // Fly skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeFlyMods).join(\", \") + \")\",\n        target: \"skill.fly\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeSpecialMods).join(\", \") + \")\",\n        target: \"cmd\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n\n    // Add age modifiers to attributes\n    const ageCategories = Object.values(pf1.config.ageCategories);\n    for (const key of [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"]) {\n      const ageCategoryIdentifier = [\"str\", \"dex\", \"con\"].includes(key) ? \"physical\" : \"mental\";\n      const lookupStatement =\n        `lookup(@ageCategory.${ageCategoryIdentifier} + 1, 0, ` +\n        ageCategories.map((c) => c.modifiers[key]).join(\", \") +\n        \")\";\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `ifelse(gt(@abilities.${key}.base + ${lookupStatement}, 0), ${lookupStatement}, -@abilities.${key}.base + 1)`,\n          target: key,\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Age\"),\n          priority: 0,\n        })\n      );\n    }\n\n    // Custom skill rank bonus from sheet\n    if (system.details?.bonusSkillRankFormula) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: system.details.bonusSkillRankFormula,\n          target: \"bonusSkillRanks\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.SkillBonusRankFormula\"),\n        })\n      );\n    }\n\n    // Add conditions\n    for (const [con, v] of Object.entries(system.conditions)) {\n      if (!v) continue;\n      const condition = pf1.registry.conditions.get(con);\n      const mechanics = condition?.mechanics;\n      if (!mechanics) continue;\n\n      // Add changes\n      for (const change of mechanics.changes) {\n        // Alter change data\n        const changeData = { ...change, flavor: condition.name };\n\n        // Create change object\n        const changeObj = new pf1.components.ItemChange(changeData);\n        changes.push(changeObj);\n      }\n\n      // Set flags\n      for (const flag of mechanics.flags) {\n        this.changeFlags[flag] = true;\n      }\n    }\n\n    // Negative level to hit points and init\n    if (system.attributes.energyDrain > 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.energyDrain * 5)\",\n          operator: \"add\",\n          target: \"mhp\",\n          type: \"untyped\",\n          priority: -750,\n          flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n        })\n      );\n\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.energyDrain * 5)\",\n          operator: \"add\",\n          target: \"vigor\",\n          type: \"untyped\",\n          priority: -750,\n          flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n        })\n      );\n    }\n  }\n\n  /**\n   * Calculate maximum health\n   *\n   * @internal\n   * @param {ItemClassPF[]} allClasses - All classes, sorted in order to be applied\n   * @param {ItemChange[]} changes - Changes to\n   */\n  _calculateMaxHealth(allClasses, changes) {\n    // Categorize classes\n    const pcClasses = [],\n      npcClasses = [],\n      racialHD = [];\n    for (const cls of allClasses) {\n      if (cls.subType === \"racial\") racialHD.push(cls);\n      else if (cls.subType === \"npc\") npcClasses.push(cls);\n      else pcClasses.push(cls);\n    }\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHealthConfig = healthConfig.getActorConfig(this);\n\n    /**\n     * @type {typeof Math.round}\n     */\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    const { continuous } = healthConfig;\n\n    /**\n     * @param {number} value - Amount of health to add\n     * @param {ItemPF} source - Source item\n     */\n    function pushHealth(value, source) {\n      const fcb = pf1.config.favoredClassTypes.includes(source.subType) ? source.system.fc?.hp?.value || 0 : 0;\n\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: value,\n          target: \"mhp\",\n          type: \"untypedPerm\",\n          flavor: source.name,\n        }),\n        new pf1.components.ItemChange({\n          formula: value,\n          target: \"vigor\",\n          type: \"untypedPerm\",\n          flavor: source.name,\n        })\n      );\n      if (fcb != 0) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: fcb,\n            target: \"mhp\",\n            type: \"untypedPerm\",\n            flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n          }),\n          new pf1.components.ItemChange({\n            formula: fcb,\n            target: \"vigor\",\n            type: \"untypedPerm\",\n            flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n          })\n        );\n      }\n    }\n\n    /**\n     * @param {ItemPF} source - Source item\n     */\n    function manualHealth(source) {\n      let health = source.system.hp;\n      if (!continuous) health = round(health);\n\n      pushHealth(health, source);\n    }\n\n    /**\n     * @param {ItemPF} source - Class granting health\n     * @param {object} config - Class type configuration\n     * @param {number} config.rate - Automatic HP rate\n     * @param {boolean} config.maximized - Is this class allowed to grant maximized HP\n     * @param {object} state - State tracking\n     */\n    function autoHealth(source, { rate, maximized } = {}, state) {\n      const hpPerHD = source.system.hd ?? 0;\n      if (hpPerHD === 0) return;\n\n      let health = 0;\n\n      // Mythic\n      if (source.subType === \"mythic\") {\n        const hpPerTier = hpPerHD ?? 0;\n        if (hpPerTier === 0) return;\n        const tiers = source.system.level ?? 0;\n        if (tiers === 0) return;\n        health = hpPerTier * tiers;\n      }\n      // Everything else\n      else {\n        let dieHealth = 1 + (hpPerHD - 1) * rate;\n        if (!continuous) dieHealth = round(dieHealth);\n\n        const hitDice = source.hitDice;\n\n        let maxedHD = 0;\n        if (maximized) {\n          maxedHD = Math.min(hitDice, state.maximized.remaining);\n          state.maximized.value += maxedHD;\n        }\n        const maxedHp = maxedHD * hpPerHD;\n        const levelHp = Math.max(0, hitDice - maxedHD) * dieHealth;\n        health = maxedHp + levelHp;\n      }\n\n      pushHealth(health, source);\n    }\n\n    /**\n     * Compute and push health, tracking the remaining maximized levels.\n     *\n     * @param {ItemPF[]} sources - Health source classes\n     * @param {object} config - Configuration for this class type\n     * @param {boolean} config.auto - Automatic health enabled\n     * @param {object} state - State tracker for auto health\n     */\n    function computeHealth(sources, config, state) {\n      if (config.auto) {\n        for (const cls of sources) autoHealth(cls, config, state);\n      } else {\n        for (const cls of sources) manualHealth(cls);\n      }\n    }\n\n    // State tracking\n    const state = {\n      maximized: {\n        value: 0,\n        max: healthConfig.maximized,\n        get remaining() {\n          return this.max - this.value;\n        },\n      },\n    };\n\n    computeHealth(racialHD, actorHealthConfig.classes.racial, state);\n    computeHealth(pcClasses, actorHealthConfig.classes.base, state);\n    computeHealth(npcClasses, actorHealthConfig.classes.npc, state);\n  }\n\n  /** @inheritDoc */\n  getSourceDetails(path) {\n    const sources = super.getSourceDetails(path);\n\n    const baseLabel = game.i18n.localize(\"PF1.Base\");\n\n    // Add base values to certain bonuses\n    if (\n      [\n        \"system.attributes.ac.normal.total\",\n        \"system.attributes.ac.touch.total\",\n        \"system.attributes.ac.flatFooted.total\",\n        \"system.attributes.cmd.total\",\n        \"system.attributes.cmd.flatFootedTotal\",\n      ].includes(path)\n    ) {\n      sources.push({ name: baseLabel, value: 10, enabled: true });\n    }\n\n    const ablRE = /^system\\.abilities\\.(?<key>\\w+)\\.(?<detail>\\w+)$/.exec(path);\n    if (ablRE) {\n      const { key, detail } = ablRE.groups;\n      const abl = this.system.abilities[key];\n      switch (detail) {\n        case \"total\":\n          sources.push({ name: baseLabel, value: abl.value });\n          if (abl.drain > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityDrain\"),\n              value: -Math.abs(abl.drain),\n            });\n          }\n          break;\n        case \"mod\":\n          if (abl.damage > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityDamage\"),\n              value: -Math.floor(Math.abs(abl.damage) / 2),\n            });\n          }\n          if (abl.userPenalty > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityPenalty\"),\n              value: -Math.floor(Math.abs(abl.userPenalty) / 2),\n            });\n          }\n          break;\n      }\n    }\n\n    // Add wound threshold data\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHpConfig = hpConfig.getActorConfig(this);\n\n    if (actorHpConfig.rules.useWoundThresholds != 0) {\n      const wtData = this.getWoundThresholdData({ healthConfig: actorHpConfig });\n      if (wtData.valid) {\n        const penalty = -wtData.penalty;\n        for (const fk of pf1.config.woundThresholdChangeTargets) {\n          const paths = getChangeFlat(this, fk, \"untyped\", penalty);\n          if (paths.includes(path)) {\n            sources.push({\n              name: pf1.config.woundThresholdConditions[wtData.level],\n              value: penalty,\n              id: \"woundThreshold\",\n            });\n          }\n        }\n      }\n    }\n\n    return sources;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareTraits() {\n    this.system.traits ??= {};\n    const traits = this.system.traits;\n\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n    const traitsMap = {\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, labels] of Object.entries(traitsMap)) {\n      const trait = {\n        base: traits[key] ?? [],\n        custom: new Set(),\n        standard: new Set(),\n        get total() {\n          return this.standard.union(this.custom);\n        },\n        get names() {\n          return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n        },\n      };\n\n      traits[key] = trait;\n\n      Object.defineProperty(trait, \"value\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(`actor.system.traits.${key}.value is deprecated.`, {\n            since: \"PF1 v11\",\n            until: \"PF1 v12\",\n          });\n          return this.standard;\n        },\n      });\n      if (Array.isArray(trait.base)) {\n        const canon = traitsMap[key];\n        for (const c of trait.base) {\n          if (canon[c]) trait.standard.add(c);\n          else trait.custom.add(c);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finalize preparing armor, weapon, and language proficiencies and other traits.\n   *\n   * @inheritDoc\n   * @protected\n   */\n  _finalizeTraits() {\n    const traits = this.system.traits;\n\n    const traitsMap = {\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      languages: pf1.config.languages,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    const validItems = this.items.filter((i) => i.isActive);\n\n    for (const [traitKey, labels] of Object.entries(traitsMap)) {\n      const trait = traits[traitKey];\n      if (!trait) {\n        console.error(this.name, \"actor trait\", traitKey, \"is missing\");\n        continue;\n      }\n\n      // Iterate over all items to create one array of non-custom proficiencies\n      for (const item of validItems) {\n        const itemTrait = item.system[traitKey];\n        // Check only items able to grant proficiencies\n        if (!itemTrait) continue;\n        // Lack of migration or prep failure elsewhere\n        if (!itemTrait.total) continue;\n        if (itemTrait.total.size == 0) continue;\n\n        // Get existing sourceInfo for item with this name, create sourceInfo if none is found\n        // Remember whether sourceInfo can be modified or has to be pushed at the end\n        let sInfo = getSourceInfo(this.sourceInfo, `system.traits.${traitKey}`).positive.find(\n          (o) => o.name === item.name\n        );\n        const hasInfo = !!sInfo;\n        if (!sInfo) sInfo = { name: item.name, value: [] };\n        else if (typeof sInfo.value === \"string\") sInfo.value = sInfo.value.split(\", \"); // BUG: this is not i18n friendly\n\n        // Regular proficiencies\n        for (const traitId of itemTrait.standard) {\n          // Add localized source info if item's info does not have this proficiency already\n          const label = labels[traitId];\n          if (!sInfo.value.includes(label)) sInfo.value.push(label);\n          // Add raw proficiency key\n          trait.standard.add(traitId);\n        }\n\n        // Add readable custom profs to sources and overall collection\n        for (const name of itemTrait.custom) {\n          if (!sInfo.value.includes(name)) sInfo.value.push(name);\n          trait.custom.add(name);\n        }\n\n        if (sInfo.value.length > 0) {\n          // Dedupe if adding to existing sourceInfo\n          if (hasInfo) sInfo.value = [...new Set(sInfo.value)];\n          // Transform arrays into presentable strings\n          sInfo.value = pf1.utils.i18n.join(sInfo.value);\n          // If sourceInfo was not a reference to existing info, push it now\n          if (!hasInfo) getSourceInfo(this.sourceInfo, `system.traits.${traitKey}`).positive.push(sInfo);\n        }\n      }\n    }\n  }\n}\n","import { BaseCharacterPF } from \"./abstract/base-character.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class ActorCharacterPF extends BaseCharacterPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    // Link token data by default\n    if (data.prototypeToken?.actorLink === undefined) {\n      tokenUpdate.actorLink = true;\n    }\n\n    // Enable vision by default\n    if (game.settings.get(\"pf1\", \"characterVision\") && data.prototypeToken?.sight?.enabled === undefined) {\n      tokenUpdate.sight = { enabled: true };\n    }\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"pcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Update experience\n    this._updateExp(changed);\n  }\n\n  /**\n   * Handle relative XP change and constrain it to appropriate minimum value.\n   *\n   * @protected\n   * @param {object} changed - Changed data\n   */\n  _updateExp(changed) {\n    const xpData = changed.system.details?.xp;\n\n    if (xpData?.value <= 0) {\n      // Reset XP to minimum possible\n      // BUG: This will have stale value if the update changed classes, too\n      const level = this.system.details?.level?.value ?? 0;\n      xpData.value = level > 0 ? this.getLevelExp(level - 1) : 0;\n    }\n  }\n\n  /**\n   * Amount of experience required to gain next level at specific character level.\n   *\n   * @example\n   * ```js\n   * getLevelExp(1); // -> 3000, the XP needed for level 2\n   * ```\n   *\n   * @param {number} level - Desired level to level-up.\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - The XP required for next level.\n   * @throws {Error} - If invalid level is provided.\n   */\n  getLevelExp(level, { rollData = null } = {}) {\n    if (!Number.isInteger(level) || !(level >= 0)) throw new Error(`Level \"${level}\" must be zero or greater integer.`);\n    if (level === 0) return 0; // Explicit case for absolute minimum.\n\n    const config = game.settings.get(\"pf1\", \"experienceConfig\");\n    const track = config.track;\n\n    // Preset experience tracks\n    if ([\"fast\", \"medium\", \"slow\"].includes(track)) {\n      const levels = pf1.config.CHARACTER_EXP_LEVELS[track];\n      // Normal levels\n      if (level < levels.length) return levels[level];\n      // Otherwise return last possible\n      else return levels.at(-1);\n    }\n\n    // Custom formula experience track\n    let totalXP = 0;\n    if (config.custom.formula.length > 0) {\n      rollData ??= this.getRollData();\n      for (let a = 0; a < level; a++) {\n        rollData.level = a + 1;\n        const roll = RollPF.safeRollSync(config.custom.formula, rollData);\n        totalXP += roll.total;\n      }\n      delete rollData.level; // Cleanup\n    }\n\n    return totalXP;\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const actorData = this.system;\n\n    actorData.details ??= {};\n\n    // Prepare experience data\n    const level = actorData.details.level?.value || 1;\n\n    actorData.details.xp ??= {};\n\n    const maxExp = this.getLevelExp(level);\n    actorData.details.xp.max = maxExp;\n\n    // Experience bar\n    const curXp = actorData.details.xp.value;\n    // Maxed out XP needs no math\n    if (curXp >= maxExp) {\n      actorData.details.xp.pct = 100;\n    } else {\n      const prior = this.getLevelExp(level - 1 || 0);\n      actorData.details.xp.pct = ((Math.clamp(curXp, prior, maxExp) - prior) / (maxExp - prior)) * 100;\n    }\n  }\n\n  /** @inheritDoc */\n  getMovement(type) {\n    // Map certain conditions to movements\n    const typeMap = { prone: \"crawl\", land: \"walk\" };\n    type = typeMap[type] ?? type;\n\n    const moveInfo = {\n      ...pf1.config.tokenRuler.movement.default,\n      ...pf1.config.tokenRuler.movement[type],\n    };\n\n    let speed = 0;\n    switch (type) {\n      case \"walk\":\n        speed = this.system.attributes?.speed?.land?.total ?? 0;\n        break;\n      case \"fly\":\n        speed = this.system.attributes?.speed?.fly?.total ?? 0;\n        break;\n      case \"jump\":\n        // Jump speed takes the better of land or fly speed\n        speed = Math.max(\n          this.system.attributes?.speed?.land?.total ?? 0,\n          this.system.attributes?.speed?.fly?.total ?? 0\n        );\n        break;\n      case \"burrow\":\n        speed = this.system.attributes?.speed?.burrow?.total ?? 0;\n        break;\n      case \"swim\": {\n        speed = this.system.attributes?.speed?.swim?.total ?? 0;\n        if (speed <= 0) {\n          // Special handling for swimming with skill instead of natural speed\n          const base = this.system.attributes?.speed?.land?.total ?? 30;\n          Object.assign(moveInfo, pf1.config.tokenRuler.movement.swimSkill);\n          speed = Math.floor(base / 5 / 4) * 5;\n        }\n        break;\n      }\n      case \"climb\": {\n        speed = this.system.attributes?.speed?.climb?.total ?? 0;\n        if (speed <= 0) {\n          // Special handling for climbing with skill instead of natural speed\n          const base = this.system.attributes?.speed?.land?.total ?? 30;\n          Object.assign(moveInfo, pf1.config.tokenRuler.movement.climbSkill);\n          speed = Math.floor(base / 5 / 4) * 5;\n        }\n        break;\n      }\n      case \"crawl\":\n        speed = 5;\n        break;\n    }\n\n    moveInfo.speed ??= speed;\n\n    return moveInfo;\n  }\n}\n","import { BaseCharacterPF } from \"./abstract/base-character.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class ActorNPCPF extends BaseCharacterPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"npcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const cr = changed.system?.details?.cr?.base;\n    if (typeof cr === \"string\") changed.system.details.cr.base = pf1.utils.CR.fromString(cr);\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    this.system.details.cr.total = this.getCR();\n  }\n\n  prepareSpecificDerivedData() {\n    super.prepareSpecificDerivedData();\n\n    this._prepareCR();\n  }\n\n  _prepareCR() {\n    // Reset CR\n    foundry.utils.setProperty(this.system, \"details.cr.total\", this.getCR());\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = pf1.utils.CR.getXP(crTotal);\n    } catch {\n      newXP = pf1.utils.CR.getXP(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasArmorProficiency(item) {\n    // Assume NPCs to be proficient with their armor\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasArmorProficiency(item) : true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasWeaponProficiency(item, options = {}) {\n    // Assume NPCs to be proficient with their weapon\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasWeaponProficiency(item, options) : true;\n  }\n\n  /**\n   * Get challenge rating.\n   * Applies CR offset modifications from templates.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    const base = this.system.details?.cr?.base ?? 0;\n\n    // Gather CR from templates\n    const templates = this.itemTypes.feat.filter((item) => item.subType === \"template\" && item.isActive);\n\n    return templates.reduce((cur, item) => {\n      const crOffset = item.system.crOffset;\n      if (crOffset) {\n        cur += RollPF.safeRollSync(crOffset, item.getRollData()).total;\n      }\n      return cur;\n    }, base);\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @deprecated\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  getCRExp(cr) {\n    foundry.utils.logCompatibilityWarning(\"ActorPF.getCRExp() is deprecated in favor of pf1.utils.CR.getXP()\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return pf1.utils.CR.getXP(cr);\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorHauntPF extends ActorPF {\n  prepareBaseData() {\n    this._resetInherentTotals();\n\n    this.changeFlags = {};\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n\n    // Needed for getRollData and ActorPF, but useless for the actor\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n\n    this.system.skills ??= {};\n\n    // Init resources structure\n    this.system.resources ??= {};\n\n    // Handle Health\n    this.system.attributes.hp.max = this.system.attributes.hp.base;\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this._prepareTemplates();\n    this._prepareCR();\n    this.prepareHealth();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  _prepareTypeChanges(changes) {\n    // BAB\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n  }\n\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : pf1.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Caster Level\n    result.cl = result.details.cl;\n\n    // Aura strength\n    result.auraStrength = this.auraStrength;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Spoof size as Medium instead of letting it fail to Fine\n    result.size = 4;\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Haunts don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    this._rollData = result;\n    return result;\n  }\n\n  _prepareCR() {\n    // Gather CR Offset\n    let crOffset = 0;\n    for (const key of this.system.templates.base) {\n      const crDetail = pf1.config.hauntTemplates[key];\n      if (!crDetail) continue;\n      crOffset += crDetail.cr;\n\n      // Check for bonus CR - this is a special case for when a template's\n      // CR bonus is increased by the existence of a template with a specific tag.\n      // In 1PP, this is only used for the \"Elusive\" template when \"Persistent\" is also applied.\n      const crBonusTag = crDetail.crBonusTag;\n      if (crBonusTag && this.system.templates.base.includes(crBonusTag)) {\n        crOffset += crDetail.crBonus;\n      }\n    }\n\n    // Reset CR\n    this.system.details.cr.total = this.system.details.cr.base + crOffset;\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = pf1.utils.CR.getXP(crTotal);\n    } catch {\n      newXP = pf1.utils.CR.getXP(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * Aura strength as number from 0 to 4.\n   *\n   * @see {@link pf1.config.auraStrengths}\n   *\n   * @type {number}\n   */\n  get auraStrength() {\n    const cl = this.system.details.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  /** @inheritDoc */\n  getInitiativeOptions() {\n    return {\n      check: false,\n    };\n  }\n\n  _prepareTemplates() {\n    const templates = this.system.templates ?? {};\n    const key = \"templates\";\n    const labels = pf1.config.hauntTemplateLabels;\n    const template = {\n      base: templates,\n      custom: new Set(),\n      standard: new Set(),\n      get total() {\n        return this.standard.union(this.custom);\n      },\n      get names() {\n        return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n      },\n    };\n\n    this.system[key] = template;\n\n    if (Array.isArray(template.base)) {\n      for (const c of template.base) {\n        if (labels[c]) template.standard.add(c);\n        else template.custom.add(c);\n      }\n    }\n  }\n\n  /**\n   * Get challenge rating.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    return this.system.details?.cr?.total ?? 0;\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorTrapPF extends ActorPF {\n  prepareBaseData() {\n    this.changeFlags = {};\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n    this.system.resources ??= {};\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    // Necessary shim for action data prep.\n    this.system.abilities = {};\n\n    this.system.attributes = {\n      attack: { general: 0, shared: 0 },\n      bab: { total: 0 },\n      woundThresholds: {},\n    };\n\n    this.system.skills ??= {};\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this._prepareCR();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  _prepareCR() {\n    // Reset CR\n    this.system.cr.total = this.system.cr.base;\n\n    // Reset experience value\n    const newXP = pf1.utils.CR.getXP(this.system.cr.total);\n    foundry.utils.setProperty(this.system, \"xp.value\", newXP);\n  }\n\n  /** @inheritDoc */\n  _prepareTypeChanges(changes) {\n    // BAB\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n  }\n\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Spoof size as Medium instead of letting it fail to Fine\n    result.size = 4;\n\n    // Spoof range as medium tall creature\n    result.range = pf1.documents.actor.ActorPF.getReach();\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the perception modifier for the trap to detect triggers\n   *\n   * @returns {number} The perception modifier for the trap\n   */\n  getPerceptionModifier() {\n    const triggerType = this.system.trigger.type;\n    const visionType = this.system.trigger.vision;\n\n    if (triggerType !== \"visual\") return pf1.config.trapPerceptionModifiers[triggerType] ?? 0;\n    else return pf1.config.trapPerceptionModifiers.vision[visionType] ?? 0;\n  }\n\n  /**\n   * Roll a perception check for the trap\n   *\n   * @param {object} options Options for the roll\n   * @returns {Promise<void>}\n   */\n  async rollPerception(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const rollData = this.getRollData();\n    const token = options.token ?? this.token;\n\n    // Add metadata about the skill\n    const metadata = { rank: 0 };\n\n    const rollOptions = {\n      ...options,\n      parts: [`(${this.getPerceptionModifier()})[${game.i18n.localize(\"PF1.SkillPer\")}]`],\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: pf1.config.skills.per }),\n      // chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[\"per\"], type: \"JournalEntry\" },\n      subject: { skill: \"per\" },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      messageData: {\n        system: {\n          subject: { skill: \"per\" },\n          config: metadata,\n        },\n      },\n    };\n\n    await pf1.dice.d20Roll(rollOptions);\n  }\n\n  /**\n   * Get challenge rating.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    return this.system.cr?.total ?? 0;\n  }\n\n  /** @inheritDoc */\n  // eslint-disable-next-line no-unused-vars\n  getMovement(type) {\n    return { speed: 0, run: false, step: false };\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { getSourceInfo, getHighestChanges, applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorVehiclePF extends ActorPF {\n  prepareBaseData() {\n    this._resetInherentTotals();\n\n    // Prepare size data\n    this.system.traits ??= {};\n    const baseSize = this.system.traits.size || \"med\";\n    const sizeValue = Object.keys(pf1.config.sizeChart).indexOf(baseSize);\n    this.system.traits.size = {\n      base: baseSize,\n      value: sizeValue,\n    };\n\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n    this.changeFlags = {};\n    this.system.resources ??= {};\n    const sizeMod = pf1.config.sizeMods[this.system.traits.size.base];\n    const sizeModSpecial = Object.values(pf1.config.sizeSpecialMods)[this.system.traits.size.value] ?? 0;\n\n    // Add base initiative\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    // Handle AC\n    for (const [key, value] of Object.entries(this.system.attributes.ac)) {\n      value.base = 10;\n      this.system.attributes.ac[key].total = value.bonus + value.base + sizeMod;\n      getSourceInfo(this.sourceInfo, `system.attributes.ac.${key}.total`).positive.push(\n        {\n          name: game.i18n.localize(\"PF1.Size\"),\n          value: sizeMod,\n          modifier: \"size\",\n        },\n        {\n          name: game.i18n.localize(\"PF1.Modifications\"),\n          value: value.bonus,\n        }\n      );\n\n      if (key === \"stopped\") {\n        this.system.attributes.ac[key].total -= 7;\n        getSourceInfo(this.sourceInfo, \"system.attributes.ac.stopped.total\").positive.push(\n          {\n            name: game.i18n.localize(\"PF1.AbilityDex\"),\n            value: -5,\n          },\n          {\n            name: game.i18n.localize(\"PF1.Vehicles.ACStoppedMotion\"),\n            value: -2,\n          }\n        );\n      }\n    }\n\n    // Handle CMD\n    this.system.attributes.cmd = { base: 10 };\n    this.system.attributes.cmd.total = this.system.attributes.cmd.base + sizeModSpecial;\n    getSourceInfo(this.sourceInfo, \"system.attributes.cmd.total\").positive.push({\n      name: game.i18n.localize(\"PF1.Size\"),\n      value: sizeModSpecial,\n      modifier: \"size\",\n    });\n    this.system.attributes.cmd.stoppedTotal = this.system.attributes.cmd.total - 7;\n    getSourceInfo(this.sourceInfo, \"system.attributes.cmd.stoppedTotal\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Size\"),\n        value: sizeModSpecial,\n        modifier: \"size\",\n      },\n      {\n        name: game.i18n.localize(\"PF1.AbilityDex\"),\n        value: -5,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Vehicles.ACStoppedMotion\"),\n        value: -2,\n      }\n    );\n\n    this.system.attributes.savingThrows.save.total = this.system.attributes.savingThrows.save.base;\n    getSourceInfo(this.sourceInfo, `system.attributes.savingThrows.save.total`).positive.push({\n      name: game.i18n.localize(\"PF1.Base\"),\n      value: this.system.attributes.savingThrows.save.base,\n    });\n\n    // Handle hardness\n    this.system.attributes.hardness.base = pf1.config.vehicleMaterials[this.system.material.base]?.hardness ?? 0;\n    this.system.attributes.hardness.total =\n      (this.system.attributes.hardness.base + this.system.attributes.hardness.bonus) *\n      (this.system.material.magicallyHardened ? 2 : 1);\n    getSourceInfo(this.sourceInfo, \"system.attributes.hardness.total\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Materials.Normal\"),\n        value: this.system.attributes.hardness.base,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Modifications\"),\n        value: this.system.attributes.hardness.bonus,\n      }\n    );\n    if (this.system.material.magicallyHardened) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.hardness.total\").positive.push({\n        name: game.i18n.localize(\"PF1.Vehicles.MagicallyHardened\"),\n        value: \"x2\",\n      });\n    }\n\n    // Handle HP\n    this.system.attributes.hp.base =\n      (pf1.config.vehicleMaterials[this.system.material.base]?.hp ?? 0) * this.system.squares;\n    this.system.attributes.hp.max =\n      (this.system.attributes.hp.base + this.system.attributes.hp.bonus) *\n      (this.system.material.magicallyHardened ? 2 : 1);\n    getSourceInfo(this.sourceInfo, \"system.attributes.hp.max\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Materials.Normal\"),\n        value: this.system.attributes.hp.base,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Modifications\"),\n        value: this.system.attributes.hp.bonus,\n      }\n    );\n    if (this.system.squares > 0 && this.system.material.magicallyHardened) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.hp.max\").positive.push({\n        name: game.i18n.localize(\"PF1.Vehicles.MagicallyHardened\"),\n        value: \"x2\",\n      });\n    }\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n    this.system.attributes.woundThresholds ??= {};\n    this.system.skills ??= {};\n    this.system.attributes.speed ??= {};\n    this.system.attributes.cmb ??= {};\n\n    this._prepareDriverData();\n  }\n\n  /** @inheritDoc */\n  getSourceDetails(path) {\n    const sources = super.getSourceDetails(path);\n\n    const baseLabel = game.i18n.localize(\"PF1.Base\");\n\n    // Add base values to certain bonuses\n    if (\n      [\n        \"system.attributes.ac.normal.total\",\n        \"system.attributes.ac.touch.total\",\n        \"system.attributes.ac.stopped.total\",\n        \"system.attributes.cmd.total\",\n        \"system.attributes.cmd.stoppedTotal\",\n      ].includes(path)\n    ) {\n      sources.push({ name: baseLabel, value: 10 });\n    }\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * Overridden to prevent unnecessary behavior in ActorPF, as vehicles don't have carry capacity.\n   *\n   * @override\n   * @returns {{light:number,medium:number,heavy:number}} - Capacity info\n   */\n  getCarryCapacity() {\n    return {\n      light: 0,\n      medium: 0,\n      heavy: 0,\n    };\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  _getBaseValueFillKeys() {\n    return [];\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this.prepareHealth();\n    this._computeEncumbrance();\n\n    this.prepareCMB();\n\n    this._prepareOverlandSpeeds();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  _prepareDriverData() {\n    const driver = this.system.driver.uuid ? fromUuidSync(this.system.driver.uuid) : null;\n    if (!driver) return;\n\n    // Default to WIS mod\n    let driverBase = driver.system.abilities.wis.mod;\n\n    try {\n      const skill = driver.getSkillInfo(this.system.driver.skill);\n      driverBase = skill.mod;\n    } catch {\n      // error silently, as we default to Wisdom Modifier\n    }\n\n    this.system.driver.bonus = driverBase;\n  }\n\n  /**\n   * @override\n   */\n  prepareCMB() {\n    const size = this.system.traits.size.value,\n      szCMBMod = Object.values(pf1.config.sizeSpecialMods)[size] ?? 0,\n      driver = this.system.driver.bonus ?? 0;\n\n    this.system.attributes.cmb.total = szCMBMod + driver;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /** @inheritDoc */\n  _prepareTypeChanges(changes) {\n    changes.push(\n      // BAB\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n\n    if (this.system.driver.uuid) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"cmb\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"ac\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"cmd\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"floor(@driver.bonus / 2)\",\n          operator: \"add\",\n          target: \"vehicleSave\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        })\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n      /* ----------------------------- */\n\n    // Set size index\n    const sizes = Object.values(pf1.config.sizeChart);\n    result.size = Math.clamp(result.traits.size.value, 0, sizes.length - 1);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = { melee: 5, reach: 5 };\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Traps don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    return result;\n  }\n\n  /**\n   * @remarks - Vehicles don't have weightless currency\n   * @override\n   * @inheritDoc\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total = this.getCurrency(\"currency\", { inLowestDenomination: true });\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Calculate overland speeds.\n   * Overridden to use different data in Vehicles.\n   *\n   * @protected\n   * @override\n   */\n  _prepareOverlandSpeeds() {\n    this.system.details.currentSpeedOverland = pf1.utils.overlandSpeed(this.system.details.currentSpeed);\n    this.system.details.maxSpeedOverland = pf1.utils.overlandSpeed(this.system.details.maxSpeed);\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   *\n   * @param {SaveId} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`savingThrow.${savingThrowId}`, { rollData });\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows.save.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"vehicle\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => c.operator !== \"set\"),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Roll saving throw\n    const props = [\n      {\n        header: game.i18n.localize(\"PF1.ConRes\"),\n        value: [\n          { text: pf1.registry.conditions.get(\"bleed\").name.toLowerCase() },\n          { text: game.i18n.localize(\"PF1.AbilityDamage\").toLowerCase() },\n          { text: game.i18n.localize(\"PF1.AbilityDrain\").toLowerCase() },\n        ],\n      },\n    ];\n\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage|undefined>} - Created message\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n\n    // Add contextual AC notes\n    const acNotes = await this.getContextNotesParsed(\"ac\", { rollData });\n\n    // Add contextual CMD notes\n    const cmdNotes = await this.getContextNotesParsed(\"cmd\", { rollData });\n\n    // BUG: No specific saving throw notes are included\n    const saveNotes = await this.getContextNotesParsed(\"allSavingThrows\", { rollData });\n\n    // Conditions\n    const conditions = {\n      bleed: pf1.registry.conditions.get(\"bleed\").name,\n      abilityDamage: game.i18n.localize(\"PF1.AbilityDamage\"),\n      abilityDrain: game.i18n.localize(\"PF1.AbilityDrain\"),\n    };\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      type: this.system.traits.type,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        stopped: actorData.attributes.ac.stopped.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        stopped: actorData.attributes.cmd.stoppedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        hardness: actorData.traits.hardness,\n        conditions,\n      },\n      saves: {\n        save: rollData.attributes?.savingThrows?.save?.total,\n        notes: saveNotes,\n      },\n    };\n\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses-vehicle.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n      rollMode,\n      system: {\n        subject: { info: \"defenses\" },\n      },\n      flags: {\n        core: {\n          canPopout: true,\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /** @inheritDoc */\n  // eslint-disable-next-line no-unused-vars\n  getMovement(type) {\n    // TODO: Adhere to type\n\n    return {\n      speed: this.system.details?.currentSpeed ?? 0,\n      run: false,\n      step: false,\n    };\n  }\n}\n","import { ItemBasePF } from \"@item/item-base.mjs\";\nimport { getHighestChanges } from \"@documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { ActionUse } from \"@actionUse/action-use.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport class ItemPF extends ItemBasePF {\n  /**\n   * Configure item before data preparation.\n   *\n   * @override\n   * @param {object} options - Data model options\n   */\n  _configure(options = {}) {\n    super._configure(options);\n\n    /**\n     * An object containing links to other items.\n     *\n     * @type {Record<string, ItemPF>}\n     */\n    this.links = {};\n\n    if (this.hasActions) {\n      /**\n       * A {@link Collection} of {@link ItemAction}s.\n       *\n       * @type {Collection<pf1.components.ItemAction>}\n       */\n      this.actions = new Collection();\n    }\n\n    /** @type {Collection<string, pf1.components.ItemScriptCall>} */\n    this.scriptCalls = new Collection();\n  }\n\n  /**\n   * A static object holding system-specific metadata applicable to all instances of this Document class.\n   *\n   * @internal\n   */\n  static system = Object.freeze({\n    /**\n     * Whether this item is a physical one, possessing properties like quantity or weight.\n     *\n     * @type {boolean}\n     */\n    isPhysical: false,\n    /**\n     * Whether this item receives an identifier.\n     */\n    hasIdentifier: true,\n    /**\n     * Whether this item has changes and change flags.\n     */\n    hasChanges: true,\n    /**\n     * Whether this item has actions.\n     */\n    hasActions: true,\n    /**\n     * Subtype name should be used as default name.\n     */\n    subtypeName: false,\n  });\n\n  /** @inheritDoc */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Ensure unique Change IDs\n    const actor = this.actor;\n    if (actor && data?.system?.changes?.length > 0) {\n      /** @type {Array<ItemChange>} */\n      const changes = data.system.changes;\n\n      /** @type {Set<string>} */\n      let ids = new Set();\n      while (ids.size < changes.length) ids.add(foundry.utils.randomID(8));\n      ids = Array.from(ids);\n      for (const c of changes) c._id = ids.pop();\n      this.updateSource({ \"system.changes\": changes });\n    }\n  }\n\n  /**\n   * Adjust temporary item before creation\n   *\n   * @abstract\n   * @protected\n   * @param {ItemPF} [item] - Temporary document\n   * @param {object} [data] - Creation data\n   * @param {boolean} [override=false] - Override values even if defined\n   */\n  // eslint-disable-next-line no-unused-vars\n  static _adjustNewItem(item, data, override = false) {}\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.isActive) {\n      // Simulate toggling a feature or buff on\n      if ([\"buff\", \"feat\"].includes(this.type)) {\n        this.executeScriptCalls(\"toggle\", { state: true });\n      }\n    }\n\n    // Handle Size Change no longer affecting actor\n    // TODO: Move this to actor so it's done only once\n    if (this.actor && this.adjustsSize) {\n      this.actor._updateTokenSize();\n    }\n  }\n\n  /** @override */\n  getFlag(scope, key) {\n    if (scope === \"pf1\" && key === \"defaultAmmo\") {\n      foundry.utils.logCompatibilityWarning(\n        \"item.getFlag('pf1', 'defaultAmmo') is deprecated, please use item.system.ammo?.default instead\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      return this.system.ammo?.default || this.flags?.pf1?.defaultAmmo;\n    }\n    return super.getFlag(scope, key);\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    context.adjustedSize = this.adjustsSize;\n    context.adjustedVision = this.adjustsVision;\n\n    await super._preUpdate(changed, context, user);\n\n    // Obsolete ammo location\n    if (changed.flags?.pf1?.defaultAmmo) {\n      foundry.utils.logCompatibilityWarning(\n        \"item.flags.pf1.defaultAmmo is no longer used, please use item.system.ammo.default instead\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      foundry.utils.setProperty(changed.system, \"ammo.default\", changed.flags?.pf1?.defaultAmmo);\n      delete changed.flags.pf1.defaultAmmo;\n    }\n\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    this._preUpdateNumericValueGuard(changed.system);\n\n    // Ensure tag is not invalid\n    if (changed.system.tag) {\n      changed.system.tag = pf1.utils.createTag(changed.system.tag, { allowUpperCase: true, camelCase: false });\n    }\n\n    // Make sure stuff remains an array\n    const keepPaths = [\n      \"system.attackNotes\",\n      \"system.effectNotes\",\n      \"system.contextNotes\",\n      \"system.scriptCalls\",\n      \"system.actions\",\n      \"system.changes\",\n    ];\n\n    const itemData = this.toObject();\n    for (const path of keepPaths) {\n      pf1.utils.internal.keepUpdateArray(itemData, changed, path);\n    }\n\n    await this._chargePreUpdate(changed, context);\n  }\n\n  /**\n   * Fake DataModel-like behaviour\n   *\n   * Ensure numeric bits remain numbers\n   *\n   * @internal\n   * @abstract\n   * @param {object} system - System data\n   */\n  // eslint-disable-next-line no-unused-vars\n  _preUpdateNumericValueGuard(system) {}\n\n  /**\n   * Handle charge update sanity checking, constraining them to reasonable values,\n   *   and propagating to parent items if charges are shared.\n   *\n   * @private\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   */\n  async _chargePreUpdate(changed, context) {\n    // Make sure charges doesn't exceed max charges\n    const uses = changed.system.uses;\n    if (uses?.value && this.isCharged) {\n      const maxCharges = this.maxCharges;\n      if (uses.value > maxCharges) uses.value = maxCharges;\n\n      const link = this.links.charges;\n      if (link) {\n        // Update charges for linked item. This will cascade if items are linked more.\n        await link.update({ \"system.uses.value\": uses.value }, context);\n        // Remove updating current item's inherited value\n        delete changed.system.uses.value;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Remove special charge sharing links that don't clear on their own\n    const links = this.getLinkedItemsSync(\"charges\");\n    if (links.length) {\n      for (const link of links) {\n        if (link.links?.charges) {\n          delete link.links.charges;\n          link.reset();\n        }\n      }\n    }\n\n    // Handle Size Change no longer affecting actor\n    // TODO: Move this to actor so it's done only once\n    if (this.adjustsSize) {\n      this.actor?._updateTokenSize();\n    }\n  }\n\n  /**\n   * @returns {string[]} The keys of data variables to memorize between updates, for e.g. determining the difference in update.\n   */\n  get memoryVariables() {\n    return [\"quantity\", \"level\"];\n  }\n\n  /**\n   * Whether the item is tangible physical object in reality.\n   *\n   * @remarks\n   * - You can utilize this with raw data via `CONFIG.Item.documentClasses[type]?.isPhysical`\n   *\n   * @type {boolean}\n   */\n  static get isPhysical() {\n    return this.system.isPhysical;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get isPhysical() {\n    return this.constructor.isPhysical;\n  }\n\n  /** @type {boolean} */\n  static get hasChanges() {\n    return this.system.hasChanges;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get hasChanges() {\n    return this.constructor.hasChanges;\n  }\n\n  static get hasActions() {\n    return this.system.hasChanges;\n  }\n\n  /** {@inheritDoc ItemPF.hasActions:getter} */\n  get hasActions() {\n    return this.constructor.hasActions;\n  }\n\n  /**\n   * The item's subtype, or `null` if the item has no subtype\n   *\n   * @type {string|null}\n   */\n  get subType() {\n    return this.system.subType ?? null;\n  }\n\n  /**\n   * Base material\n   *\n   * @type {string|null}\n   */\n  get baseMaterial() {\n    return this.system.armor?.material?.base?.value || this.system.material?.base?.value || null;\n  }\n\n  /**\n   * The item's actual material.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    return (\n      this.system.armor?.material?.normal?.value || this.system.material?.normal?.value || this.baseMaterial || null\n    );\n  }\n\n  /**\n   * The item's material addons.\n   *\n   * @type {string[]}\n   */\n  get addonMaterial() {\n    const addons = this.system.armor?.material?.addon || this.system.material?.addon || [];\n    return addons.filter((o) => !!o);\n  }\n\n  /**\n   * The item's alignment attributes, or `null` if the item has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.system.alignments ?? null;\n  }\n\n  /**\n   * @deprecated\n   * @type {pf1.components.ItemAction|undefined}\n   */\n  get firstAction() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.firstAction is deprecated in favor of ItemPF.defaultAction\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.defaultAction;\n  }\n\n  /** @type {pf1.components.ItemAction|undefined} */\n  get defaultAction() {\n    return this.actions?.get(this.system.actions?.[0]?._id);\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have an attack, see {@link ItemAction#hasAttack}.\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return this.actions?.some((o) => o.hasAttack) ?? false;\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have a damage roll, see {@link ItemAction#hasDamage}.\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return this.actions?.some((o) => o.hasDamage) ?? false;\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Properties                             */\n  /* -------------------------------------------- */\n\n  /**\n   * @abstract\n   * @param {boolean} [weapon=true] - Get proficiency as a weapon. Armor otherwise.\n   * @returns {boolean} - Whether or not the owner of the item is proficient.\n   * @throws {Error} - If item type does not support proficiency.\n   * @since PF1 v10\n   */\n  // eslint-disable-next-line no-unused-vars\n  getProficiency(weapon = true) {\n    throw new Error(`Item type ${this.type} has no concept of proficiency`);\n  }\n\n  /**\n   * Is the owning actor proficiency at using this as weapon.\n   *\n   * @abstract\n   * @type {boolean}\n   * @since PF1 v10\n   */\n  get isProficient() {\n    return true;\n  }\n\n  /** @type {boolean} */\n  get hasAction() {\n    return this.system.actions?.length > 0;\n  }\n\n  /** @type {boolean} */\n  get isSingleUse() {\n    return this.system.uses?.per === \"single\";\n  }\n\n  /** @type {boolean} */\n  get isCharged() {\n    return this.isSingleUse || !!this.system.uses?.per;\n  }\n\n  /**\n   * Finite charges\n   *\n   * @type {boolean}\n   */\n  get hasFiniteCharges() {\n    return this.isSingleUse || [\"charges\"].includes(this.system.uses?.per);\n  }\n\n  /**\n   * Remaining charges\n   *\n   * @type {number}\n   */\n  get charges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.charges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n    return this.system.uses?.value ?? 0;\n  }\n\n  /**\n   * Consumes are adds charges by default.\n   *\n   * @type {boolean}\n   */\n  get autoDeductCharges() {\n    return this.getDefaultChargeCost() != 0;\n  }\n\n  /**\n   * Get default charge cost for all actions.\n   *\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    rollData ??= this.getRollData();\n    const formula = this.getDefaultChargeFormula();\n    // TODO: Support default cost being variable\n    return RollPF.safeRollSync(formula, rollData, undefined, undefined, { maximize: true }).total;\n  }\n\n  /**\n   * Default charge formula.\n   *\n   * @returns {string} Charge formula\n   */\n  getDefaultChargeFormula() {\n    return this.system.uses?.autoDeductChargesCost || \"1\";\n  }\n\n  /**\n   * Maximum possible charges this item can have.\n   *\n   * @remarks\n   * - Can return zero. Usually signifying something has reduced the potential uses below usability.\n   * - Can return infinity, signifying lack of limits.\n   *\n   * @type {number}\n   */\n  get maxCharges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.maxCharges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n\n    return this.system.uses?.max ?? Infinity;\n  }\n\n  /**\n   * Recharges item's uses, if any.\n   *\n   * @param {object} options - Options\n   * @param {\"round\"|\"minute\"|\"hour\"|\"day\"|\"week\"|\"any\"} [options.period=\"day\"] Recharge period. Use \"any\" to ignore item's configuration.\n   * @param {boolean} [options.exact=false] - Use exact time period. Otherwise \"week\" for example will also recharge items with \"day\" period.\n   * @param {number} [options.value] - Recharge to specific value, respecting maximum and minimum bounds.\n   * @param {boolean} [options.maximize=false] - Recharge to full regardless of recharge formula.\n   * @param {boolean} [options.commit=true] - Commit update directly. If false, returns the update data instead.\n   * @param {object} [options.rollData] - Roll data instance to use for formulas.\n   * @param {object} [options.context] - Update context\n   * @returns {Promise<this|object|undefined>} - Promise for the update, update data object, or undefined (no update needed).\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = false, commit = true, rollData, context } = {}) {\n    const updateData = (await this._rechargeUses({ value, period, exact, maximize, rollData })) ?? { system: {} };\n    const actionUpdate = this._rechargeActions({ period, exact, rollData });\n    if (actionUpdate) updateData.system.actions = actionUpdate.system.actions;\n\n    // Cancel empty update\n    if (foundry.utils.isEmpty(updateData.system)) return;\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * Recharge item uses\n   *\n   * {@inheritDoc recharge}\n   *\n   * @internal\n   * @param {object} options - Options\n   * @param {number} [options.value] - Set charges to specific value\n   * @param {string} [options.period] - Recharge only if it matches this time period\n   * @param {boolean} [options.exact] - Match only exact time period\n   * @param {boolean} [options.maximize] - Maximize instead of using recharge formula\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {Promise<object | undefined>} - Update data or undefined if no update is necessary.\n   */\n  async _rechargeUses({ value, period, exact, maximize, rollData } = {}) {\n    const uses = this.system.uses ?? {};\n    if (!uses.per) return; // Unlimited uses, recharging meaningless\n\n    // Cancel if charges are managed by different item.\n    if (this.links.charges) return;\n\n    // No update when period does not match usage\n    if ([\"charges\", \"single\"].includes(uses.per)) {\n      // Only charge if time period is any\n      if (period !== \"any\") return;\n    } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n      // Recharge lesser time periods when using inexact matching\n      const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n      const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n      if (!validPeriods.includes(uses.per)) return;\n    }\n    // Otherwise test if \"any\" period is used\n    else if (uses.per !== period && period !== \"any\") return;\n\n    const staticValue = value !== undefined;\n\n    // No specific value given\n    if (!staticValue) {\n      const formula = uses.rechargeFormula || \"\";\n      // Default to maximizing value\n      if (!formula) {\n        if (uses.max > 0) maximize = true;\n      } else {\n        rollData ??= this.getRollData();\n        const roll = await RollPF.safeRoll(formula, rollData, \"recharge\", undefined, { allowInteractive: false });\n        value = roll.total;\n\n        // Cancel if formula produced invalid value\n        if (!Number.isFinite(value))\n          return void console.warn(`Formula \"${formula}\" produced non-numeric value \"${value}\"`);\n      }\n    }\n\n    // Maximize value regardless what value is\n    if (maximize) value = uses.max;\n\n    // No recharge value established\n    if (!Number.isFinite(value)) return;\n\n    // Clamp charge value to\n    value = Math.clamp(value, 0, uses.max);\n\n    if (value !== uses.value) {\n      return { system: { uses: { value } } };\n    }\n  }\n\n  /**\n   * Update action limited uses\n   *\n   * {@inheritDoc ItemPF.recharge}\n   *\n   * @internal\n   * @param {object} options - Options\n   * @param {string} [options.period] - Recharge only if matching this time period\n   * @param {boolean} options.exact - Exact time period only\n   * @param {object} [options.rollData] - Roll data\n   * @returns {object|undefined} - Update data or undefined if no update is needed.\n   */\n  // eslint-disable-next-line no-unused-vars\n  _rechargeActions({ period, exact, rollData } = {}) {\n    if (!(this.system.actions?.length > 0)) return;\n\n    const actions = this.toObject().system.actions;\n    let changedActions = false;\n    for (const actionData of actions) {\n      const action = this.actions.get(actionData._id);\n      const max = action.uses?.self?.max ?? 0;\n      if (!(max > 0)) continue;\n\n      const uses = actionData.uses?.self;\n      const per = uses?.per;\n      if (!per) continue;\n\n      if ([\"charges\"].includes(uses.per)) {\n        continue;\n      } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n        // Recharge lesser time periods when using inexact matching\n        const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n        const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n        if (!validPeriods.includes(per)) continue;\n      }\n\n      if (uses.value < max) {\n        uses.value = max;\n        changedActions = true;\n      }\n    }\n\n    if (!changedActions) return;\n\n    return { system: { actions } };\n  }\n\n  /**\n   * Aura strength as number from 0 to 4.\n   *\n   * @see {@link pf1.config.auraStrengths}\n   *\n   * @type {number}\n   */\n  get auraStrength() {\n    const cl = this.system.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  get uuid() {\n    if (this.parentItem) return this.parentItem.uuid + `.Item.${this.id}`;\n    return super.uuid;\n  }\n\n  get fullDescription() {\n    return this.system.description.value;\n  }\n\n  /**\n   * Get full description.\n   *\n   * @abstract\n   * @param {object} options - Item type dependant options for rendering the description.\n   * @param {boolean} [options.chatcard=false] - Instruct template to render chat card in mind.\n   * @param {object} [options.data={}] - Template data for rendering\n   * @param {object} [options.rollData] - Roll data for transforming description\n   * @param {boolean} [options.header] - Include header if such exists.\n   * @param {boolean} [options.body] - Include main description body if such exists.\n   * @param {boolean} [options.identified] - Enforce identified description retrieval\n   * @param {boolean} [options.isolated] - Passed to {@link getDescriptionData}\n   * @returns {Promise<string>} - Full description.\n   */\n\n  async getDescription({\n    chatcard = false,\n    data = {},\n    rollData,\n    header = true,\n    body = true,\n    isolated = false,\n    identified = false,\n  } = {}) {\n    if (body) {\n      if (identified) return this._source.system.description?.value || \"\";\n      return this.system.description?.value || \"\";\n    }\n    return \"\";\n  }\n\n  /**\n   * Description Data\n   *\n   * @param {object} options - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @param {boolean} [options.isolated] - Include extra data to reflect it not being so easily available in context.\n   * @returns {Promise<object>} - Description context data\n   */\n  async getDescriptionData({ rollData, isolated = false } = {}) {\n    const context = {};\n\n    const action = this.defaultAction;\n    rollData ??= action?.getRollData() ?? this.getRollData();\n    context.rollData = rollData;\n    context.labels = action?.getLabels({ rollData, isolated }) ?? this.getLabels({ rollData, isolated });\n\n    const fullInfo = game.user.isGM ? true : (this.system.identified ?? true);\n\n    // Attack data, for attacks and weapons primarily\n    if (!action) return context;\n\n    if (action?.hasAttack) {\n      context.action = {};\n      if (action.hasDamage) {\n        const firstDamage = action.damage?.parts?.[0]?.formula;\n        // Spoof sizeRoll() to work based on weapon size instead of actor size\n        const sizeKey = pf1.config.sizeChart[this.system.size || \"med\"] || \"M\";\n        const sizeIndex = Object.values(pf1.config.sizeChart).indexOf(sizeKey);\n        context.action.damage = pf1.utils.formula.simplify(firstDamage || \"0\", {\n          ...rollData,\n          size: sizeIndex,\n        });\n        const critMult = action?.ability?.critMult || 1;\n        if (critMult > 1) {\n          const critRange = action.critRange || 20;\n          if (critRange === 20) context.action.critical = `×${critMult}`;\n          else context.action.critical = `${critRange}-20/×${critMult}`;\n        }\n        context.action.size = Object.values(pf1.config.actorSizes)[sizeIndex] || pf1.config.actorSizes.med;\n\n        const types = fullInfo\n          ? action.damage?.parts?.map((part) => part.parsed.all.map((t) => t.name || t)).flat()\n          : (action.damage?.parts?.[0].parsed.all.map((t) => t.name || t) ?? []);\n\n        context.action.type = types.join(\", \");\n      }\n\n      // Range\n      if ([\"melee\", \"reach\"].includes(action.range?.units)) context.action.range = \"–\";\n      else if ([\"ft\"].includes(action.range?.units)) {\n        context.action.range = action.range;\n        context.action.unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n      }\n\n      if (action.ammo.type && action.ammo.cost) {\n        const misfire = action.misfire;\n        const capacity = this.system.ammo?.capacity ?? 0;\n        context.action.ammo = {\n          misfire: misfire > 1 ? `1–${misfire}` : misfire > 0 ? misfire : null,\n          capacity: capacity > 0 ? capacity : \"–\",\n          enabled: misfire > 0 || capacity > 0,\n        };\n      }\n    }\n    return context;\n  }\n\n  /**\n   * An active effect associated with this item.\n   *\n   * @remarks\n   * - Most item types don't have associated effect.\n   *\n   * @abstract\n   * @type {ActiveEffect|null}\n   */\n  get effect() {\n    return null;\n  }\n\n  /**\n   * An array containing all action types from this item's actions.\n   *\n   * @see {@link config.itemActionTypes}\n   * @type {string[]}\n   */\n  get actionTypes() {\n    const actionTypes = this.actions?.map((action) => action.actionType).filter(Boolean) ?? [];\n    return [...new Set(actionTypes)];\n  }\n\n  /**\n   * Generic charge addition (or subtraction) function that either adds charges\n   * or quantity, based on item data.\n   *\n   * @param {number} value The amount of charges to add.\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible.\n   */\n  async addCharges(value) {\n    // Add link charges\n    const link = this.links.charges;\n    if (link) return link.addCharges(value);\n\n    // Add own charges\n    if (this.isSingleUse && this.isPhysical) {\n      return this.update({ \"system.quantity\": (this.system.quantity || 0) + value });\n    } else {\n      return this.update({ \"system.uses.value\": (this.system.uses?.value || 0) + value });\n    }\n  }\n\n  /**\n   * Linked ammunition item if any.\n   *\n   * @type {Item|undefined}\n   */\n  get defaultAmmo() {\n    return this.actor?.items.get(this.system.ammo?.default);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the item show unidentified data\n   *\n   * @type {boolean}\n   */\n  get showUnidentifiedData() {\n    return false;\n  }\n\n  /* -------------------------------------------- */\n  /*\tData Preparation\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareLinks();\n\n    // Update changes\n    if (this.hasChanges) {\n      this._prepareChanges();\n    }\n\n    this._prepareScriptCalls();\n\n    // Prepare dependent data only if there's no actor or actor initialization has happened.\n    if (!this.actor || this.actor._initialized !== false) {\n      this._prepareDependentData(true);\n    }\n  }\n\n  /**\n   * Prepare data potentially dependent on other items.\n   *\n   * This should be run at in Item.prepareDerivedData() if no actor is present,\n   * or in actor's prepareDerivedData after document preparation is done.\n   *\n   * @param {boolean} final - Is this final call to this?\n   */\n  _prepareDependentData(final = false) {\n    // Update maximum uses\n    this._updateMaxUses();\n\n    // Prepare actions only when item preparation is deemed finalized\n    if (final) this._prepareActions();\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this._prepareIdentifier();\n    this._prepareTraits();\n\n    if (this.inContainer) this.adjustContained();\n\n    if (this.system.contextNotes?.length) {\n      this.system.contextNotes = this.system.contextNotes.map(\n        (cn) => new pf1.components.ContextNote(cn, { parent: this })\n      );\n    }\n  }\n\n  /**\n   * Initialize identifier\n   *\n   * @internal\n   */\n  _prepareIdentifier() {\n    const isTaggedType = this.constructor.system?.hasIdentifier ?? false;\n    if (isTaggedType) {\n      if (!this.system.tag) {\n        this.system.tag = pf1.utils.createTag(this.name);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _prepareTraits() {\n    const map = {\n      descriptors: pf1.config.spellDescriptors,\n      weaponGroups: pf1.config.weaponGroups,\n      subschool: pf1.config.spellSubschools,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, labels] of Object.entries(map)) {\n      if (!this.system[key]) continue;\n      if (!Array.isArray(this.system[key])) {\n        continue; // Preparation has already run, avoid double transform\n      }\n\n      const trait = {\n        base: this.system[key],\n        custom: new Set(),\n        standard: new Set(),\n        get total() {\n          return this.standard.union(this.custom);\n        },\n        get names() {\n          return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n        },\n      };\n      Object.defineProperty(trait, \"value\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(`item.system.${key}.value is deprecated.`, {\n            since: \"PF1 v11\",\n            until: \"PF1 v12\",\n          });\n          return this.standard;\n        },\n      });\n      if (Array.isArray(trait.base)) {\n        for (const c of trait.base) {\n          if (labels[c]) trait.standard.add(c);\n          else trait.custom.add(c);\n        }\n      }\n      this.system[key] = trait;\n    }\n  }\n\n  /**\n   * Adjust data if the item is in container.\n   *\n   * @abstract\n   */\n  adjustContained() {}\n\n  /**\n   * Returns labels for this item\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.actionId] - ID of one of this item's actions to get labels for; defaults to first action\n   * @param {object} [options.rollData] - Roll data to use.\n   * @param {boolean} [options.isolated] - Is this isolated use? If true, more data is included.\n   * @returns {Record<string, string>} This item's labels\n   */\n  getLabels({ actionId, rollData, isolated } = {}) {\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n    const labels = action?.getLabels({ rollData, isolated }) ?? {};\n    labels.activation ||= pf1.config.abilityActivationTypes.passive; // Default passive if no action is present\n    if (!action) labels.noAction = true;\n    if (!action || action.activation.type === \"passive\") labels.isPassive = true;\n    labels.hasEffect = Boolean(\n      labels.range || labels.area || labels.target || labels.effect || labels.duration || labels.savingThrow\n    );\n    return labels;\n  }\n\n  /**\n   * Prepare item links.\n   *\n   * @internal\n   */\n  prepareLinks() {\n    if (!this.links) return;\n\n    for (const [type, item] of Object.entries(this.links)) {\n      if (type === \"charges\") {\n        // Remove cached link if stale\n        // TODO: This should not exist.\n        const links = item.getLinkedItemsSync(\"charges\");\n        if (!links.some((i) => i.id === this.id)) {\n          delete this.links.charges;\n          continue;\n        }\n\n        this._updateInheritedCharges(item);\n      }\n    }\n  }\n\n  /**\n   * Prepare and update Changes collection.\n   *\n   * @internal\n   */\n  _prepareChanges() {\n    const prior = this.changes;\n    const collection = new Collection();\n    for (const c of this.system.changes ?? []) {\n      /** @type {pf1.components.ItemChange} */\n      let change;\n      if (prior && prior.has(c._id)) {\n        change = prior.get(c._id);\n        change.replaceSource(c);\n      } else change = new pf1.components.ItemChange(c, { parent: this });\n      collection.set(c._id || change.data._id, change);\n    }\n\n    this.changes = collection;\n  }\n\n  /**\n   * Prepare actions\n   *\n   * @internal\n   */\n  _prepareActions() {\n    const actions = this.system.actions ?? [];\n\n    const prior = this.actions;\n    const collection = new Collection();\n    for (const actionData of actions) {\n      let action = null;\n      if (prior && prior.has(actionData._id)) {\n        action = prior.get(actionData._id);\n        action.replaceSource(actionData);\n      } else {\n        action = new pf1.components.ItemAction(actionData, { parent: this });\n      }\n      collection.set(action.id, action);\n    }\n\n    /** @type {Collection<pf1.components.ItemAction>} */\n    this.actions = collection;\n\n    for (const action of prior ?? []) {\n      if (this.actions.get(action.id) !== action) {\n        for (const app of Object.values(action.apps)) {\n          app.close({ pf1: { action: \"delete\" }, submit: false, force: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Prepare `ItemPF.scriptCalls` collection.\n   *\n   * @internal\n   */\n  _prepareScriptCalls() {\n    if (!this.scriptCalls) return;\n\n    const prior = new Collection(this.scriptCalls.entries());\n    this.scriptCalls.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    const scriptCalls = this.system.scriptCalls;\n    if (!scriptCalls?.length) return;\n\n    for (const s of scriptCalls) {\n      const sid = s._id;\n      let script = null;\n      if (prior && prior.has(sid)) {\n        script = prior.get(sid);\n        const scriptData = { ...s };\n        script.replaceSource(scriptData);\n      } else script = new pf1.components.ItemScriptCall(s, { parent: this });\n      this.scriptCalls.set(sid, script);\n    }\n  }\n\n  /**\n   * Executes all script calls on this item of a specified category.\n   *\n   * @param {string} category - The category of script calls to call.\n   * @param {Record<string, *>} [extraParams={}] - A dictionary of extra parameters to pass as variables for use in the script.\n   * @param {object} [shared={}] - Shared data object\n   * @returns {Promise<object>} The shared object between calls which may have been given data.\n   */\n  async executeScriptCalls(category, extraParams = {}, shared = {}) {\n    /** @type {pf1.components.ItemScriptCall[]} */\n    const scripts = this.scriptCalls?.filter((o) => o.category === category) ?? [];\n\n    shared.category = category;\n\n    try {\n      for (const s of scripts) {\n        await s.execute(shared, extraParams);\n      }\n    } catch (error) {\n      console.error(`Script call execution failed\\n`, error, this);\n      // Rethrow to ensure everything cancels\n      throw new Error(\"Error occurred while executing a script call\", { cause: error });\n    }\n\n    return shared;\n  }\n\n  /**\n   * @override\n   * @param {object} data - Update data\n   * @param {object} context - Context\n   * @returns {Promise<Item>} - Updated item\n   */\n  async update(data, context = {}) {\n    // Avoid regular update flow for explicitly non-recursive update calls\n    if (context.recursive === false) {\n      if (this.inContainer) {\n        this.rootItem.update(this._transformContainerUpdateData(data, { recursive: true }), context);\n      } else {\n        return super.update(data, context);\n      }\n    }\n\n    data = foundry.utils.expandObject(data);\n\n    this.memorizeVariables();\n\n    const parentItem = this.parentItem;\n    if (!parentItem) {\n      return super.update(data, context);\n    } else {\n      // Update parent item\n      context.pf1 ??= {};\n      context.pf1.containerItem = this.id;\n      await parentItem.update(this._transformContainerUpdateData(data), context);\n      return this;\n    }\n  }\n\n  /**\n   * Transform given data so it becomes valid update data within parent item.\n   *\n   * This can, for example, be used to generate batched update to the real item.\n   *\n   * @example\n   * ```js\n   * _transformContainerUpdateData({ name: \"new name\" })\n   * // => { system: { items: { [itemID]: { name: \"new name\" } } } }\n   * ```\n   *\n   * @internal\n   * @param {object} data Update data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.recursive=false] - Create data recursively, meant for the real item document.\n   * @returns {object} - Transformed update data\n   */\n  _transformContainerUpdateData(data, { recursive = false } = {}) {\n    const parentItem = this.parentItem;\n    if (parentItem) {\n      const baseUpdate = { system: { items: { [this.id]: data } } };\n      if (recursive) return parentItem._transformContainerUpdateData(baseUpdate, { recursive });\n      else return baseUpdate;\n    }\n    return data;\n  }\n\n  /**\n   * Memorize quantity and level for later diffing.\n   *\n   * @internal\n   */\n  memorizeVariables() {\n    if (this._memoryVariables != null) return;\n\n    const memKeys = this.memoryVariables;\n    this._memoryVariables = {};\n    for (const k of memKeys) {\n      if (foundry.utils.hasProperty(this.system, k)) {\n        this._memoryVariables[k] = foundry.utils.deepClone(foundry.utils.getProperty(this.system, k));\n      }\n    }\n\n    // Memorize variables recursively on container items\n    for (const item of this.items ?? []) {\n      item.memorizeVariables();\n    }\n  }\n\n  /**\n   * Determine whether this item adjusts actor size\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  get adjustsSize() {\n    return this.changes?.some((change) => change.target === \"size\") ?? false;\n  }\n\n  /**\n   * Determine whether a given change set affects size\n   *\n   * @internal\n   * @param {object} data - Item data\n   * @returns {boolean} - Contains size targeting change\n   */\n  static _hasSizeUpdate(data) {\n    return data.system?.changes?.some((change) => change.target === \"size\") || false;\n  }\n\n  /**\n   * Determine whether this item adjusts senses\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  get adjustsVision() {\n    const flags = this.system.changeFlags;\n    if (flags && (flags?.lowLightVision || flags?.seeInvisibility || flags?.seeInDarkness)) {\n      return true;\n    }\n\n    return this.system.changes?.some((change) => pf1.config.buffTargets[change.target]?.category === \"senses\") ?? false;\n  }\n\n  /**\n   * Determine whether a given change set affect senses\n   *\n   * @internal\n   * @param {object} changes - An object containing changeFlags and changes to be inspected.\n   * @returns {boolean} - Vision alteration detected\n   */\n  static _hasVisionUpdate(changes) {\n    if (\n      changes.system?.changeFlags?.lowLightVision !== undefined ||\n      changes.system?.changeFlags?.seeInvisibility !== undefined ||\n      changes.system?.changeFlags?.seeInDarkness !== undefined\n    ) {\n      return true;\n    }\n\n    return (\n      changes.system?.changes?.some((change) => pf1.config.buffTargets[change.target]?.category === \"senses\") || false\n    );\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    // Call 'toggle' script calls\n    let state = null;\n    if (this.type === \"buff\") state = changed.system?.active;\n    else if (this.type === \"feat\" && changed.system?.disabled !== undefined)\n      state = changed.system.disabled === true ? false : true;\n    if (state != null) {\n      const startTime = this.effect?.duration.startTime ?? game.time.worldTime;\n      this.executeScriptCalls(\"toggle\", { state, startTime });\n    }\n\n    // Handle Size Change\n    // TODO: Move this to actor to handle it only once\n    const activeChanged = this._activeStateChange(changed);\n    const adjustsSize = this.adjustsSize;\n    if (\n      // Item contains a size change and active state was toggled\n      (activeChanged !== undefined && adjustsSize) ||\n      // Item contains a new or updated size change\n      this.constructor._hasSizeUpdate(changed) ||\n      // Item contained a size change that was removed\n      (context.adjustedSize && !adjustsSize)\n    ) {\n      this.actor?._updateTokenSize();\n    }\n\n    if (this._memoryVariables) this._onMemorizedUpdate(changed, context);\n  }\n\n  /**\n   * Return active state change from data if present\n   *\n   * This is a hack to allow item-type agnostic active state change detection.\n   *\n   * @internal\n   * @experimental\n   * @param {object} changed\n   * @returns\n   */\n  _activeStateChange(changed) {\n    return this.system._activeStateChange?.(changed.system) ?? true;\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeLevel' script calls\n    const oldLevel = this._memoryVariables?.level;\n    if (oldLevel !== undefined && changed.system?.level !== undefined) {\n      const level = {\n        previous: parseInt(oldLevel),\n        new: parseInt(this.system.level),\n      };\n      for (const [k, v] of Object.entries(level)) {\n        if (Number.isNaN(v)) level[k] = null;\n      }\n      if (level.new !== undefined && level.new !== level.previous) {\n        this.executeScriptCalls(\"changeLevel\", { level });\n      }\n    }\n\n    if (\n      // Item contains a vision change and active state was toggled\n      (changed?.system?.active !== undefined && this.adjustsVision) ||\n      // Item contains a new or updated vision change\n      this.constructor._hasVisionUpdate(changed) ||\n      // Item contained a vision change that was removed\n      (context.adjustedVision && !this.adjustsVision)\n    ) {\n      const initializeVision = true;\n      const refreshLighting = this.system.changeFlags.lowLightVision || false;\n      this.actor.updateVision(initializeVision, refreshLighting);\n    }\n\n    // Forget memory variables\n    this._memoryVariables = null;\n  }\n\n  /**\n   * Update max uses\n   *\n   * @internal\n   */\n  _updateMaxUses() {\n    const per = this.system.uses?.per;\n\n    // No charges? No charges!\n    if (!per) return;\n\n    // Do not evaluate inherited charges\n    if (this.links?.charges) return;\n\n    const maxFormula = this.system.uses.maxFormula;\n    if (per === \"single\") {\n      this.system.uses.max = 1;\n    } else if (!maxFormula) {\n      this.system.uses.max = null;\n    } else {\n      try {\n        const isDeterministic = Roll.parse(maxFormula).every((t) => t.isDeterministic);\n        if (isDeterministic) {\n          const rollData = this.getRollData();\n          const roll = RollPF.safeRollSync(\n            maxFormula,\n            rollData,\n            { formula: maxFormula, item: this },\n            { suppressError: !this.isOwner }\n          );\n          this.system.uses.max = roll.total;\n\n          // Update any items inheriting our charges\n          const linked = this.getLinkedItemsSync(\"charges\");\n          for (const item of linked) {\n            item._updateInheritedCharges(this);\n          }\n        } else {\n          const msg = game.i18n.format(\"PF1.Warning.NoDiceAllowedInFormula\", {\n            formula: maxFormula,\n            context: game.i18n.localize(\"PF1.ChargePlural\"),\n          });\n          ui.notifications.warn(msg, { console: false });\n          console.warn(msg, this);\n        }\n      } catch (err) {\n        console.error(\"Invalid max uses formula:\", { formula: maxFormula, item: this }, err);\n      }\n    }\n  }\n\n  /**\n   * Update this item's charges based on provided item.\n   *\n   * @internal\n   * @param {Item} item - Charge source\n   */\n  _updateInheritedCharges(item) {\n    const iuses = item.system.uses;\n    if (!iuses) return;\n\n    const uses = this.system.uses;\n\n    uses.per = iuses.per;\n    uses.max = iuses.max;\n    uses.maxFormula = iuses.maxFormula;\n    uses.value = iuses.value;\n    uses.rechargeFormula = iuses.rechargeFormula;\n  }\n\n  /**\n   * Determines the starting data for an ActiveEffect based off this item.\n   *\n   * @param {object} options - Additional options\n   * @param {object} options.rollData - Roll data\n   * @returns {Promise<object>} - Active Effect creation data\n   */\n  // eslint-disable-next-line no-unused-vars\n  async getRawEffectData({ rollData } = {}) {\n    return {\n      name: this.name,\n      img: this.img,\n      origin: this.getRelativeUUID(this.actor),\n      duration: {\n        startTime: game.time.worldTime,\n      },\n      disabled: !this.isActive,\n    };\n  }\n\n  /**\n   * Fetches all this item's script calls of a specified category\n   *\n   * @internal\n   * @param {string} category - Category\n   * @returns {pf1.components.ItemScriptCall[]} - Script calls within the category.\n   */\n  getScriptCalls(category) {\n    return this.scriptCalls?.filter((s) => s.category === category) ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Display the chat card for an Item as a message in chat\n   *\n   * @param {object} [altChatData={}] - Optional data that will be merged into the chat data object.\n   * @param {object} [options=[]] Additional options.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage | void>} Chat message instance if one was created.\n   */\n  async displayCard(altChatData = {}, { token } = {}) {\n    const actor = this.actor;\n    if (actor && !actor.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n    }\n\n    // Basic template rendering data\n    token ??= actor?.token;\n    const rollData = this.defaultAction?.getRollData() ?? this.getRollData();\n    const itemChatData = await this.getChatData({ rollData });\n    const identified = Boolean(rollData.item?.identified ?? true);\n\n    const templateData = {\n      actor: this.actor,\n      token,\n      tokenId: token?.uuid,\n      item: this.toObject(),\n      labels: this.getLabels({ rollData }),\n      hasAttack: this.hasAttack,\n      hasMultiAttack: this.hasMultiAttack,\n      hasAction: this.hasAction,\n      isVersatile: this.isVersatile,\n      isSpell: this.type === \"spell\",\n      name: this.getName(true),\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      rollData,\n      properties: [],\n    };\n\n    const enrichOptions = {\n      rollData,\n      secrets: this.isOwner,\n      relativeTo: this.actor,\n    };\n\n    // If the item was unidentified, store data for GM info box containing identified info\n    const system = {};\n    system.item = {\n      identified,\n      id: this.id,\n    };\n\n    if (identified === false) {\n      system.item.name = this._source.name;\n      // TODO: Remove storage of description?\n      // It should not be relevant after the item is deleted and the description can be fetched from the item.\n      system.item.description = await TextEditor.enrichHTML(itemChatData.identifiedDescription, enrichOptions);\n    }\n\n    if (itemChatData.properties) {\n      templateData.properties.push({\n        header: game.i18n.localize(\"PF1.InfoShort\"),\n        value: itemChatData.properties,\n        css: \"info-properties\",\n      });\n    }\n\n    // Add combat info\n    if (game.combat) {\n      system.combat = game.combat.id;\n\n      const combatProps = [];\n      // Add round info\n      combatProps.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n      if (combatProps.length > 0) {\n        templateData.properties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Basic chat message data\n    const chatData = foundry.utils.mergeObject(\n      {\n        type: \"item\",\n        system,\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        speaker: ChatMessage.implementation.getSpeaker({ actor, token }),\n        flags: {\n          core: {\n            canPopout: true,\n          },\n        },\n      },\n      altChatData\n    );\n\n    const template = `systems/pf1/templates/chat/items/item-card.hbs`;\n    if (Hooks.call(\"pf1DisplayCard\", this, { template, templateData, chatData }) === false) return;\n\n    // Create the chat message\n    const content = await renderTemplate(template, templateData);\n    chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // Apply roll mode\n    chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(chatData, chatData.rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Cards\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this item, either in a default configuration or for a specific action.\n   *\n   * @param {object} [options] - Options affecting how descriptions are enriched.\n   *                                              `rollData`\n   * @param {boolean} [options.chatcard=false] - Is this actually for chat card.\n   * @param {boolean} [options.extended=false] - Include extended information that may not be useful in all circumstances.\n   * @param {string} [options.actionId] - The ID of an action on this item to generate chat data for,\n   *                                      defaults to {@link ItemPF.defaultAction}\n   * @param {object} [options.rollData] - Defaults to {@link ItemAction#getRollData}/{@link ItemPF#getRollData}.\n   * @param {boolean} [options.interactive=false]\n   * @returns {Promise<ChatData>} The chat data for this item (+action)\n   */\n  async getChatData({ chatcard = false, actionId = null, rollData, extended = false, interactive = false } = {}) {\n    /** @type {ChatData} */\n    const data = {};\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n\n    rollData ??= action ? action.getRollData() : this.getRollData();\n    const actionData = rollData.action ?? action ?? {};\n\n    const labels = this.getLabels({ actionId, rollData });\n\n    // Rich text descriptions\n    data.identifiedDescription = await this.getDescription({\n      chatcard,\n      rollData,\n      isolated: extended,\n      identified: true,\n    });\n    data.unidentifiedDescription = this.system.description.unidentified;\n\n    data.isIdentified = this.system.identified ?? true;\n    data.showIdentified = !this.showUnidentifiedData;\n    data.description = data.showIdentified ? data.identifiedDescription : data.unidentifiedDescription;\n    data.actionDescription = actionData.description;\n\n    // General equipment properties\n    const props = [];\n\n    if (chatcard !== true) {\n      if (labels.subType && labels.childTypeDistinct !== true) props.push(labels.subType);\n      if (labels.childType) props.push(labels.childType);\n    }\n\n    if (!this.showUnidentifiedData) {\n      if (labels.activation) props.push(labels.activation);\n      // Range\n      if (actionData.range != null) {\n        const range = action.getRange({ type: \"max\", rollData }),\n          units = actionData.range.units === \"mi\" ? \"mi\" : \"ft\";\n        const distanceValues = pf1.utils.convertDistance(range, units);\n        // TODO: Display range increment and max range instead of just the latter when max increment is higher than 1\n        const rangeLabel =\n          range > 0 ? game.i18n.format(\"PF1.MaxRangeNote\", { distance: range, units: distanceValues[1] }) : null;\n        if (rangeLabel) props.push(rangeLabel);\n      }\n\n      // Add Difficulty Class (DC) label\n      if (labels.save) {\n        props.push(labels.save);\n        const saveDesc = actionData.save?.description;\n        if (saveDesc) props.push(saveDesc);\n      }\n\n      // Duration\n      if (actionData.duration != null) {\n        let duration;\n        if (actionData.duration.units === \"spec\") {\n          duration = actionData.duration.value;\n        } else if (![\"inst\", \"perm\"].includes(actionData.duration.units)) {\n          const roll = await RollPF.safeRoll(actionData.duration.value || \"0\", rollData, undefined, undefined, {\n            allowInteractive: interactive,\n          });\n          const value = roll.total;\n          duration = [value, pf1.config.timePeriods[actionData.duration.units]].filterJoin(\" \");\n        }\n        if (duration) props.push(duration);\n      }\n\n      // Enhancement Bonus\n      const enhBonus = actionData.enh?.value ?? rollData.item.enh ?? 0;\n      if (enhBonus > 0) {\n        props.push(game.i18n.format(\"PF1.EnhancementInline\", { bonus: enhBonus }));\n      }\n    }\n\n    // Get per item type chat data\n    this.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    const harmless = actionData.save?.harmless;\n    if (harmless) props.push(game.i18n.localize(\"PF1.Harmless\"));\n\n    if (this.isBroken) props.push(game.i18n.localize(\"PF1.Broken\"));\n\n    data.properties = props;\n\n    return data;\n  }\n\n  /**\n   * Per item type chat data.\n   *\n   * @param {ChatData} data - A partial of a chat data object that can be modified to add per item type data.\n   * @param {Record<string, *>} labels - The labels for this item.\n   * @param {string[]} props - Additional property strings\n   * @param {object} rollData - A rollData object to be used for checks\n   * @param {object} [options] - Additional options\n   * @param {string} [options.actionId=null] - Action this pertains to, if any.\n   * @param {boolean} [options.chatcard=false] - Is this for a chat card?\n   */\n  // eslint-disable-next-line no-unused-vars\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    // Charges as used by most item types, except spells\n\n    const usesPer = this.system.uses?.per;\n    if (usesPer) {\n      const isSingleUse = usesPer === \"single\";\n\n      // No charges for single-use physical items, but quantity instead\n      if (isSingleUse && this.isPhysical) {\n        props.push(`${game.i18n.localize(\"PF1.Quantity\")}: ${this.system.quantity}`);\n      } else if (this.isCharged) {\n        const charges = this.charges;\n        if (Number.isFinite(charges)) {\n          const max = this.maxCharges;\n          // Finite max charges\n          if (Number.isFinite(max) && !isSingleUse) {\n            props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}/${max}`);\n          }\n          // Infinite max charges\n          else {\n            props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}`);\n          }\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Rolls - Attack, Damage, Saves, Checks  */\n  /* -------------------------------------------- */\n\n  /**\n   * Use an attack, using {@link SharedActionData}\n   *\n   * @see {@link SharedActionData}\n   * @param {object} options - Options\n   * @param {string} [options.actionId=\"\"] - The ID of the action to use, defaults to the first action\n   * @param {number} [options.cost=null] - Cost override. Replaces charge cost or slot cost as appropriate.\n   * @param {Event | null} [options.ev=null] - The event that triggered the use, if any\n   * @param {boolean} [options.skipDialog=getSkipActionPrompt()] - Whether to skip the dialog for this action\n   * @param {boolean} [options.chatMessage=true] - Whether to send a chat message for this action\n   * @param {string} [options.dice=pf1.dice.D20RollPF.standardRoll] - The base dice to roll for this action\n   * @param {string} [options.rollMode] - The roll mode to use for the chat message\n   * @param {TokenDocument} [options.token] Token this action is for, if any.\n   * @param {UseOptions} [options.options={}] Additional use options.\n   * @throws {Error} - On some invalid inputs.\n   * @returns {Promise<ActionUse | SharedActionData | void>} - Action use, shared data, or nothing.\n   */\n  async use({\n    actionId = \"\",\n    cost = null,\n    ev = null,\n    skipDialog = getSkipActionPrompt(),\n    chatMessage = true,\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollMode,\n    token,\n    options = {},\n  } = {}) {\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n    token ||= this.actor?.token ?? this.actor?.getActiveTokens(true, true)[0];\n\n    if (ev?.originalEvent) ev = ev.originalEvent;\n\n    if (cost !== null && !Number.isSafeInteger(cost)) throw new Error(`Invalid value for cost override: ${cost}`);\n\n    if (options.held) {\n      // Convert human friendly options to internal types\n      if (options.held === \"twohanded\") options.held = \"2h\";\n      else if (options.held === \"offhand\") options.held = \"oh\";\n    }\n\n    // Prepare variables\n    /** @type {SharedActionData} */\n    const shared = {\n      event: ev,\n      action: null,\n      item: null,\n      token: null,\n      rollData: {},\n      skipDialog,\n      chatMessage,\n      dice,\n      cost,\n      fullAttack: true,\n      useOptions: options,\n      attackBonus: [],\n      damageBonus: [],\n      attacks: [],\n      chatAttacks: [],\n      rollMode,\n      useMeasureTemplate: false,\n      conditionals: null,\n      conditionalPartsCommon: {},\n      casterLevelCheck: false, // TODO: Move to use-options\n      concentrationCheck: false, // TODO: Move to use-options\n      scriptData: {},\n    };\n\n    // Prevent reassigning the ActionUse's item and token\n    Object.defineProperties(shared, {\n      item: { value: this, writable: false, enumerable: true },\n      token: { value: token, writable: false, enumerable: true },\n    });\n\n    // Old use method\n    if (!this.hasAction) {\n      // Use\n      if (!(\"attackData\" in shared)) {\n        Object.defineProperty(shared, \"attackData\", {\n          get: () => {\n            foundry.utils.logCompatibilityWarning(\n              \"shared.attackData is deprecated in favor of directly accessing shared\",\n              {\n                since: \"PF1 v10\",\n                until: \"PF1 v12\",\n              }\n            );\n            return shared;\n          },\n        });\n      }\n\n      await this.executeScriptCalls(\"use\", {}, shared);\n      rollMode = shared.rollMode || rollMode;\n      if (shared.reject) return shared;\n\n      // Deduct charges\n      if (this.isCharged) {\n        const chargeCost = cost ?? this.getDefaultChargeCost();\n        if (this.charges < chargeCost) {\n          if (this.isSingleUse) {\n            return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n          }\n          return void ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.name }));\n        }\n\n        await this.addCharges(-chargeCost);\n      }\n\n      if (shared.hideChat !== true && chatMessage) {\n        shared.descriptionOnly = true;\n        Object.defineProperty(shared, \"chatCard\", {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"shared.chatCard is deprecated in favor of shared.message\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n\n            return this.message;\n          },\n        });\n        shared.message = await this.displayCard({ rollMode });\n      }\n\n      await this.executeScriptCalls(\"postUse\", {}, shared);\n\n      return shared;\n    }\n\n    /** @type {ItemAction | undefined} */\n    let action;\n    if (actionId) {\n      action = this.actions.get(actionId);\n      if (!action) throw new Error(`Could not find action by ID \"${actionId}\"`);\n    } else if (this.system.actions.length > 1 && skipDialog !== true) {\n      const actionId = await pf1.applications.ActionSelector.open({ document: this });\n      action = this.actions.get(actionId);\n    } else {\n      action = this.defaultAction;\n    }\n\n    if (!action) {\n      console.debug(`PF1 | Cancelled use of \"${this.name}\"`);\n      return null; // No action chosen\n    }\n\n    // Prevent reassigning the ActionUse's action\n    Object.defineProperties(shared, {\n      action: { value: action, writable: false, enumerable: true },\n    });\n\n    if (shared.useOptions.ammo) {\n      if (action.usesAmmo) {\n        await this.update({ \"system.ammo.default\": shared.useOptions.ammo });\n      } else {\n        console.error(\"Attempted to set ammo for action that does not use ammo\");\n      }\n    }\n\n    // TODO: Remove this variable usage\n    shared.useMeasureTemplate = action.hasTemplate && game.settings.get(\"pf1\", \"placeMeasureTemplateOnQuickRolls\");\n\n    return new ActionUse(shared).process({ skipDialog });\n  }\n\n  /**\n   * Item specific conditional targets.\n   *\n   * @abstract\n   * @param {object} results - Conditional targets\n   * @param _result\n   * @param {Record<string, string>} results - Result key to label mapping.\n   */\n\n  getConditionalTargets(results, _result) {\n    if (_result) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemPF.getConditionalTargets() with two parameters is now ItemPF.getConditionalSubTargets()\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      return this.getConditionalSubTargets(results, _result);\n    }\n  }\n\n  /**\n   * Item specific conditional sub targets.\n   *\n   * @abstract\n   * @param {string} target - Conditional target\n   * @param {Record<string, string>} result - Result key to label mapping.\n   */\n  getConditionalSubTargets(target, result) {}\n\n  /**\n   * Finds, filters and alters changes relevant to a context, and returns the result (as an array)\n   *\n   * @remarks - Always returns empty array if no actor is present.\n   * @param {\"mattack\"|\"rattack\"|\"nattack\"|\"tattack\"|\"wdamage\"|\"sdamage\"|\"rwdamage\"|\"twdamage\"|\"mwdamage\"|\"ndamage\"|\"rdamage\"|\"tdamage\"|\"mdamage\"} context - The given context.\n   * @returns {ItemChange[]} - The matching changes.\n   */\n  getContextChanges(context = [\"attack\"]) {\n    if (!this.actor) return [];\n    const targets = this.getContextStack(context);\n    return this.actor.changes.filter((c) => targets.has(c.target));\n  }\n\n  /**\n   * Retrieve stack of contexts related to the one given.\n   *\n   * @private\n   * @param {Array<string>} contexts Context subtarget ID array.\n   * @returns {Set<string>} - Modified context array.\n   */\n  getContextStack(contexts) {\n    const result = new Set(contexts);\n    for (const context of contexts) {\n      switch (context) {\n        case \"sattack\":\n        case \"wattack\":\n        case \"mattack\":\n        case \"rattack\":\n        case \"nattack\":\n        case \"tattack\":\n          result.add(\"attack\");\n          break;\n        case \"wdamage\":\n        case \"sdamage\":\n          result.add(\"damage\");\n          break;\n        case \"mwdamage\":\n        case \"rwdamage\":\n        case \"twdamage\":\n          result.add(\"damage\");\n          result.add(\"wdamage\");\n          break;\n      }\n    }\n\n    // Add generic ranged damage for ranged weapon damage and thrown weapon damage\n    if (result.has(\"rwdamage\") || result.has(\"twdamage\")) {\n      result.add(\"rdamage\");\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {object} [options] - Additional options\n   * @returns {object} An object with data to be used in rolls in relation to this item.\n   */\n  getRollData(options) {\n    const actor = this.actor;\n    const result = { ...(actor?.getRollData(options) ?? {}) };\n\n    if (!actor) pf1.utils.rollData.addStatic(result);\n\n    result.item = foundry.utils.deepClone(this.system);\n\n    // Add @class\n    const classTag = result.item.class;\n    if (classTag) result.class = result.classes?.[classTag];\n\n    // Add dictionary flag\n    const tag = this.system.tag;\n    result.item.dFlags = result.dFlags?.[tag];\n\n    result.item.bFlags = Object.fromEntries(\n      Object.entries(result.item.flags?.boolean ?? {}).map(([key, value]) => [key, value ? 1 : 0])\n    );\n\n    // Set aura strength\n    if (this.isPhysical) {\n      result.item.auraStrength = this.auraStrength;\n\n      // Resize item\n      if (this.system.resizing && result.size !== undefined) {\n        result.item.size = result.size;\n      }\n    }\n\n    // Add caster level\n    // TODO: Replace with associated class level if higher?\n    result.cl = result.item?.cl;\n\n    this._addTypeRollData(result);\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Add item type specific roll data.\n   *\n   * @abstract\n   * @internal\n   * @param {object} result - Roll data\n   */\n  // eslint-disable-next-line no-unused-vars\n  _addTypeRollData(result) {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if specified link can be created.\n   *\n   * @internal\n   * @param {string} type - The type of link.\n   * @param {Item} item - The target item to link to.\n   * @returns {Promise<boolean>} Whether a link to the item is possible here.\n   */\n  async _canCreateItemLink(type, item) {\n    if (!(item instanceof Item)) throw new Error(\"Item must be instance of Item document\");\n\n    if (![\"charges\", \"children\", \"supplements\", \"classAssociations\"].includes(type))\n      throw new Error(`Invalid link type: \"${type}\"`);\n\n    // Don't create link to self\n    if (item === this) return false;\n\n    const sameActor = this.actor && item.actor === this.actor;\n\n    // Link happens between items on same actor?\n    const linkOnActor = [\"children\", \"charges\"].includes(type);\n    if (linkOnActor && !sameActor) {\n      ui.notifications.warn(\"PF1.Warning.LinkOwnerMismatch\", { localize: true });\n      return false;\n    }\n\n    // Don't re-create existing links\n    const links = this.system.links?.[type] || [];\n    for (const link of links) {\n      // Use slow matching method to ensure old style links aren't ignored\n      const ti = await fromUuid(link.uuid, { relative: this.actor });\n      if (ti === item) {\n        ui.notifications.warn(\"PF1.Warning.NoMultiLink\", { localize: true });\n        return false;\n      }\n    }\n\n    switch (type) {\n      // Charge link requirements\n      case \"charges\": {\n        // Prevent item from inheriting charges from multiple sources\n        if (item.links?.charges) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: this.name,\n              target: item.name,\n              deeptarget: item.links.charges.name,\n            })\n          );\n          return false;\n        }\n        // Target is already sharing charges itself\n        const targetLinks = item.system.links?.charges ?? [];\n        if (targetLinks.length > 0) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink\", { source: this.name, target: item.name })\n          );\n          return false;\n        }\n        if (this.links?.charges) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: item.name,\n              target: this.name,\n              deeptarget: this.links.charges.name,\n            })\n          );\n          return false;\n        }\n        return true;\n      }\n      // Class association link requirements\n      case \"classAssociations\":\n        // Item must not be on actor and must be in compendium\n        if (item.actor) {\n          ui.notifications.error(\"PF1.Warning.LinkOnlyUnowned\", { localize: true });\n          return false;\n        }\n        if (!item.pack) {\n          ui.notifications.error(\"PF1.Warning.LinkOnlyCompendium\", { localize: true });\n          return false;\n        }\n        return true;\n      case \"supplements\": {\n        // Must NOT be on actor\n        if (!item.actor) return true;\n        else ui.notifications.error(\"PF1.Warning.LinkOnlyUnowned\", { localize: true });\n        break;\n      }\n      case \"children\":\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @internal\n   * @param {string} type - The type of link.\n   * @param {object} item - The target item to link to.\n   * @param {string} uuid - The link identifier for the item.\n   * @returns {Array} An array to insert into this item's link data.\n   */\n  _generateLinkData(type, item, uuid) {\n    const result = {\n      name: item.name,\n      uuid,\n    };\n\n    // Remove name for various links\n    switch (type) {\n      case \"classAssociations\":\n        result.level = 1;\n      // eslint-disable-next-line no-fallthrough\n      case \"supplements\":\n        // System packs are assumed static\n        if (game.packs.get(item.pack)?.metadata.packageType === \"system\") {\n          delete result.name;\n        }\n        break;\n      case \"charges\":\n      case \"children\":\n        // Actor local links\n        delete result.name;\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates a link to another item.\n   *\n   * @param {\"children\"|\"charges\"|\"supplement\"|\"classAssociations\"} type - The type of link.\n   * @param {Item} item - The target item to link into this.\n   * @param {object} [extraData] - Additional data to store int he link\n   * @returns {Promise<boolean>} - Whether a link was created.\n   */\n  async createItemLink(type, item, extraData) {\n    if (!(await this._canCreateItemLink(type, item))) {\n      console.warn(`Can not create \"${type}\" link for ${item.name} [${item.uuid}] in ${this.name}`);\n      return false;\n    }\n\n    const links = this.toObject().system.links?.[type] ?? [];\n\n    const uuid = this.actor ? item.getRelativeUUID(this.actor) : item.uuid;\n\n    const linkData = this._generateLinkData(type, item, uuid);\n    if (extraData) foundry.utils.mergeObject(linkData, extraData);\n    links.push(linkData);\n\n    const itemUpdate = { _id: this.id, [`system.links.${type}`]: links };\n\n    // Clear value, maxFormula and per from link target to avoid odd behaviour\n    const itemUpdates = [];\n    if (type === \"charges\") {\n      itemUpdates.push({\n        _id: item.id,\n        system: { uses: { \"-=value\": null, \"-=maxFormula\": null, \"-=per\": null, \"-=rechargeFormula\": null } },\n      });\n    }\n\n    if (this.actor && itemUpdates.length > 0) {\n      await this.actor.updateEmbeddedDocuments(\"Item\", [itemUpdate, ...itemUpdates]);\n    } else {\n      await this.update(itemUpdate);\n    }\n\n    // Call link creation hook\n    Hooks.callAll(\"pf1CreateItemLink\", this, linkData, type);\n\n    return true;\n  }\n\n  /**\n   * Get item links of type\n   *\n   * @param {string} type - Link type\n   * @param {boolean} includeLinkData - Include link data, return value changes from item array to object array\n   * @param {object} [options={}] - Additional options\n   * @param {Set} [options._results] - Internal use only.\n   * @param {boolean} [options.recursive=false] - Retrieved linked items recursively.\n   * @returns {Promise<Item[]|object[]>} - Linked items, or objects with linked items and additional data\n   */\n  async getLinkedItems(type, includeLinkData = false, { recursive = false, _results } = {}) {\n    const items = this.system.links?.[type];\n    if (!items) return [];\n\n    const results = _results ?? new Set();\n    for (const l of items) {\n      if (!l.uuid) continue;\n      const item = await fromUuid(l.uuid, { relative: this.actor });\n      if (item) {\n        if (includeLinkData) {\n          if (results.some((i) => i.item === item)) continue;\n        } else if (results.has(item)) continue;\n\n        if (includeLinkData) results.add({ item, linkData: l });\n        else results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          await item.getLinkedItems(type, { recursive, includeLinkData, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Retrieve list of linked items for a type, synchronously.\n   * Intended mainly for fetching child or charge links quickly.\n   *\n   * @example\n   * ```js\n   * const childItems = item.getLinkedItemsSync(\"children\");\n   * ```\n   *\n   * @param {string} type Link type, e.g. \"children\", \"charges\", or \"classAssociations\"\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.recursive=false] - Retrieve links recursively.\n   * @param {Set<string>} [options._results] - Internal use only\n   * @returns {Item[]|object[]} Linked items or their compendium index data\n   */\n  getLinkedItemsSync(type, { recursive = false, _results } = {}) {\n    const links = this.system.links?.[type];\n    if (!links) return [];\n\n    const results = _results ?? new Set();\n    for (const linkData of links) {\n      if (!linkData.uuid) continue;\n\n      const parsed = foundry.utils.parseUuid(linkData.uuid, { relative: this.actor });\n      const item = this.actor?.items.get(parsed?.id);\n      if (!item || results.has(item)) continue;\n      results.add(item);\n\n      // Recursive\n      if (type !== \"charges\" && recursive) {\n        item.getLinkedItemsSync(type, { recursive, _results: results });\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Get all items linked by any means.\n   *\n   * @returns {Promise<Item[]>} - Linked items\n   */\n  async getAllLinkedItems() {\n    const result = [];\n\n    for (const items of Object.values(this.system.links ?? {})) {\n      for (const l of items) {\n        if (!l.uuid) continue;\n        const item = await fromUuid(l.uuid, { relative: this.actor });\n        if (item) result.push(item);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all link references to an item.\n   *\n   * @param {string} uuid - The UUID of the item to remove links to.\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.commit=true] - Commit changes to database. If false, resulting update data is returned instead.\n   * @returns {Promise<Item|object|undefined>} - Updated document, update data, or undefined\n   */\n  async removeItemLink(uuid, { commit = true } = {}) {\n    const updateData = {};\n    for (const [type, linkItems] of Object.entries(this.system.links ?? {})) {\n      const items = foundry.utils.deepClone(linkItems);\n      const idx = items.findIndex((item) => item.uuid === uuid);\n      if (idx >= 0) {\n        items.splice(idx, 1);\n        updateData[`system.links.${type}`] = items;\n      }\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      if (commit) return this.update(updateData);\n      return updateData;\n    }\n  }\n\n  /**\n   * Generates lists of change targets this item can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.buffTargets.\n   * @returns {Record<string, string>} A list of changes\n   */\n  getChangeTargets(target) {\n    const result = {};\n    // Add specific skills\n    if (target === \"skill\") {\n      if (!this.actor) {\n        for (const [s, skl] of Object.entries(pf1.config.skills)) {\n          result[`skill.${s}`] = skl;\n        }\n      } else {\n        const actorSkills = foundry.utils.mergeObject(pf1.config.skills, this.actor.system.skills, { inplace: false });\n        for (const [s, skl] of Object.entries(actorSkills)) {\n          if (!skl.subSkills) {\n            if (skl.custom) result[`skill.${s}`] = skl.name;\n            else result[`skill.${s}`] = pf1.config.skills[s];\n          } else {\n            for (const [s2, skl2] of Object.entries(skl.subSkills)) {\n              result[`skill.${s}.${s2}`] = `${pf1.config.skills[s]} (${skl2.name})`;\n            }\n          }\n        }\n      }\n    }\n    // Add static subtargets\n    else if (foundry.utils.hasProperty(pf1.config.buffTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.buffTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Sets a boolean flag on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async addItemBooleanFlag(flagName, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (Array.isArray(flags)) throw new Error(`${this.name} [${this.id}] requires migration.`);\n\n    if (flags[flagName] === undefined) {\n      await this.update({ [`system.flags.boolean.${flagName}`]: true }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a boolean flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemBooleanFlag(flagName, context = {}) {\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.boolean.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag on this item.\n   * @returns {boolean} Whether the flag was found on this item.\n   */\n  hasItemBooleanFlag(flagName) {\n    const flags = this.system.flags?.boolean ?? {};\n    return flags[flagName] === true;\n  }\n\n  /**\n   * Get all item boolean flags as array.\n   *\n   * @returns {string[]} - Flag keys\n   */\n  getItemBooleanFlags() {\n    const flags = this.system.flags?.boolean ?? {};\n    return Object.keys(flags);\n  }\n\n  /**\n   * Sets a dictionary flag value on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {number|string} value - The flag's new value.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async setItemDictionaryFlag(flagName, value, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== value) {\n      await this.update({ [`system.flags.dictionary.${flagName}`]: value }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a dictionary flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemDictionaryFlag(flagName, context = {}) {\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.dictionary.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag to get.\n   * @returns {string|number|undefined} The value stored in the flag.\n   */\n  getItemDictionaryFlag(flagName) {\n    const flags = this.system.flags?.dictionary || {};\n    return flags[flagName];\n  }\n\n  /**\n   * Get all item dictionary flags as array of objects.\n   *\n   * @returns {Record<string, *>} - All dictionary flags\n   */\n  getItemDictionaryFlags() {\n    const flags = this.system.flags?.dictionary || {};\n    return flags;\n  }\n\n  /**\n   * Attack sources for a specific action.\n   *\n   * @param {string} actionId Action ID\n   * @param {object} [options={}] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack, or undefined if the action is missing.\n   */\n  getAttackSources(actionId, { rollData } = {}) {\n    actionId ??= this.defaultAction?.id;\n\n    /** @type {pf1.components.ItemAction} */\n    const action = this.actions.get(actionId);\n    if (!action) return;\n\n    const sources = [];\n\n    const actorData = this.actor?.system,\n      itemData = this.system;\n\n    if (!actorData) return sources;\n    rollData ??= action.getRollData();\n\n    const describePart = (value, name, modifier, sort = 0) => {\n      if (value == 0) return;\n      sources.push({ value, name, modifier, sort });\n    };\n\n    const isManeuver = action.isCombatManeuver;\n\n    // Unreliable melee/ranged identification\n    const sizeBonus = Object.values(!isManeuver ? pf1.config.sizeMods : pf1.config.sizeSpecialMods)[rollData.size] || 0;\n\n    // Add size bonus\n    if (sizeBonus != 0) describePart(sizeBonus, game.i18n.localize(\"PF1.Size\"), \"size\", -20);\n\n    const changeSources = action.attackSources;\n\n    const effectiveChanges = getHighestChanges(changeSources, { ignoreTarget: true });\n    for (const ic of effectiveChanges) {\n      let value = ic.value;\n      // BAB override\n      if (action.bab && ic._id === \"_bab\") {\n        value = RollPF.safeRollSync(ic.formula, rollData).total || 0;\n      }\n      describePart(value, ic.flavor, ic.type, -800);\n    }\n\n    if (action.ability.attack) {\n      const ablMod = actorData.abilities?.[action.ability.attack]?.mod ?? 0;\n      describePart(ablMod, pf1.config.abilities[action.ability.attack], \"untyped\", -50);\n    }\n\n    // Attack bonus formula\n    // TODO: Don't pre-eval\n    const bonusRoll = RollPF.safeRollSync(action.attackBonus || \"0\", rollData, undefined, undefined, {\n      minimize: true,\n    });\n    if (bonusRoll.total != 0)\n      describePart(bonusRoll.total, bonusRoll.flavor ?? game.i18n.localize(\"PF1.AttackRollBonus\"), \"untyped\", -100);\n\n    // Masterwork or enhancement bonus\n    // Only add them if there's no larger enhancement bonus from some other source\n    const virtualEnh = action.enhancementBonus ?? (itemData.masterwork ? 1 : 0);\n    if (!effectiveChanges.find((i) => i.type === \"enh\" && i.value > virtualEnh)) {\n      if (Number.isFinite(action.enhancementBonus) && action.enhancementBonus !== 0) {\n        describePart(action.enhancementBonus, game.i18n.localize(\"PF1.EnhancementBonus\"), \"enh\", -300);\n      } else if (itemData.masterwork) {\n        describePart(1, game.i18n.localize(\"PF1.Masterwork\"), \"enh\", -300);\n      }\n    }\n\n    // Add proficiency penalty\n    try {\n      if (!this.getProficiency(true)) {\n        describePart(-4, game.i18n.localize(\"PF1.Proficiency.Penalty\"), \"untyped\", -500);\n      }\n    } catch {\n      // Ignore proficiency incompatibility.\n    }\n\n    // Broken condition\n    if (this.isBroken) {\n      describePart(-2, game.i18n.localize(\"PF1.Broken\"), \"untyped\", -500);\n    }\n\n    // Add secondary natural attack penalty\n    if (action.naturalAttack.primary !== true && itemData.subType === \"natural\") {\n      const attackBonus = action.naturalAttack?.secondary?.attackBonus || pf1.config.naturalAttacks.secondary.penalty;\n      const secondaryModifier = RollPF.safeRollSync(`${attackBonus}`, rollData).total ?? 0;\n      describePart(secondaryModifier, game.i18n.localize(\"PF1.SecondaryAttack\"), \"untyped\", -400);\n    }\n\n    // Conditional modifiers\n    const conditionals = action.conditionals.filter(\n      (c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\")\n    );\n    for (const c of conditionals) {\n      for (const cc of c.modifiers) {\n        if (cc.subTarget === \"allAttack\") {\n          const bonusRoll = RollPF.safeRollSync(cc.formula, rollData, undefined, undefined, { minimize: true });\n          if (bonusRoll.err) {\n            console.error(\"PF1 | Bad Conditional Formula:\", cc.formula, \"\\n\", cc, \"\\n\", bonusRoll.err);\n          }\n          const isRng = !bonusRoll.isDeterministic;\n          if (bonusRoll.total == 0 && !isRng) continue;\n          const value = isRng ? bonusRoll.formula : bonusRoll.total;\n          describePart(value, c.name, cc.type, -5000);\n        }\n      }\n    }\n\n    return sources.sort((a, b) => b.sort - a.sort);\n  }\n\n  /**\n   * Return attack sources for default action.\n   *\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack.\n   */\n  get attackSources() {\n    return this.getAttackSources(this.defaultAction.id);\n  }\n\n  getAllDamageSources(actionId) {\n    return this.actions.get(actionId)?.allDamageSources;\n  }\n\n  /**\n   * Generic damage source retrieval for default action, includes default conditionals and other item specific modifiers.\n   *\n   * @returns {ItemChange[]|undefined} All relevant changes, or undefined if action was not found.\n   */\n  get allDamageSources() {\n    return this.getAllDamageSources(this.defaultAction.id);\n  }\n\n  /**\n   * Is this item inside a container?\n   *\n   * @type {boolean}\n   */\n  get inContainer() {\n    return !!this.parentItem;\n  }\n\n  /**\n   * Root item.\n   *\n   * Specifically the item at bottom of the container tree.\n   *\n   * @internal\n   * @type {Item}\n   */\n  get rootItem() {\n    return this.parentItem?.rootItem ?? this;\n  }\n}\n\n/**\n * @typedef {object} ChatData\n * Data required to render an item's summary or chat card, including descriptions and properties/tags/labels\n * @property {string} description - The item's enriched description as appropriate for the current user\n * @property {string} identifiedDescription - The item's full enriched description when identified\n * @property {string} unidentifiedDescription - The item's enriched description when unidentified\n * @property {string} [actionDescription] - The enriched description of a specific action\n * @property {string[]} properties - Additional properties/labels for the item and the action\n */\n\n/**\n * @typedef {object} SharedActionData\n * A common data object used to store and share data between stages of an action's usage.\n * @property {Event | null} event - The event that triggered the action. Defaults to `null`.\n * @property {object} rollData - The singular rollData object used for all rolls in the action\n * @property {boolean} skipDialog - Whether the user-facing dialog should get skipped. Defaults to `false`.\n * @property {boolean} chatMessage - Whether a chat message should be created at the end of the action's usage. Defaults to `true`.\n * @property {ChatMessage} message - Chat message once it is created.\n * @property {string} dice - The base dice used for the action's attack rolls. Defaults to return value of `pf1.dice.D20RollPF.standardRoll`.\n * @property {boolean} fullAttack - Whether the action is a full attack. Defaults to `true`.\n * @property {string[]} attackBonus - Bonus values to be added to the attack roll formula\n * @property {string[]} damageBonus - Bonus values to be added to the damage roll formula\n * @property {ActionUseAttack[]} attacks - Array of attacks\n * @property {pf1.actionUse.ChatAttack[]} chatAttacks - Array of chat attacks for this action's use\n * @property {string} rollMode - The roll mode to be used for the creation of the chat message. Defaults to the `core.rollMode` setting.\n * @property {boolean} useMeasureTemplate - Whether to use a measure template\n * @property {object[] | null} conditionals - Conditionals\n * @property {object} conditionalPartsCommon - Common conditionals\n * @property {boolean} casterLevelCheck - Will caster level check be needed?\n * @property {boolean} concentrationCheck - Will concentration check be needed?\n * @property {object} scriptData - Return data from script calls\n * @property {ItemAction} action - The {@link ItemAction} this use is based on\n * @property {ItemPF} item - The {@link ItemPF} this use is based on\n * @property {object} chatData - Data to be passed to {@link ChatMessage.create}, excluding `content` rendered using {@link templateData} and {@link template}.\n * @property {string} [chatTemplate] - The template to be used for the creation of the chat message.\n * @property {MeasuredTemplateDocument} template - Template document.\n * @property {object} templateData - Data used to render the chat card, passed to {@link foundry.utils.renderTemplate}.\n * @property {Token[]} targets - Targeted tokens\n */\n\n/**\n * Additional options for (action) use.\n *\n * @typedef {object} UseOptions\n * @property {boolean} [primaryAttack] - Set primary attack state\n * @property {boolean} [clCheck] - Set caster level check state\n * @property {boolean} [measureTemplate] - Set measure template state\n * @property {boolean} [powerAttack] - Set power attack state\n * @property {\"normal\"|\"2h\"|\"twohanded\"|\"oh\"|\"offhand\"} [held] - Set held option (for power attack mode).\n * @property {number} [abilityMult] - Ability score damage multiplier\n * @property {string} [ammo] - Ammo item ID to use.\n * @property {boolean} [haste] - Enable Haste\n * @property {boolean} [manyshot] - Enable Manyshot\n * @property {boolean} [rapidShot] - Enable Rapid Shot\n */\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Attack item\n *\n * Non-specific combat related actions. Mainly used to populate the combat tab.\n */\nexport class ItemAttackPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Remove held option if type changed to natural attack\n    if (changed.system.subType === \"natural\") {\n      changed.system.held = null;\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Init weapon-like type if missing\n    if (this.subType === \"weapon\") {\n      this.system.weapon ??= {};\n      this.system.weapon.category ||= \"simple\";\n      this.system.weapon.type ||= \"light\";\n    }\n  }\n\n  /**\n   * Pretend-physical item.\n   *\n   * Used in action handling only.\n   *\n   * @type {boolean}\n   */\n  get isQuasiPhysical() {\n    return [\"weapon\", \"item\"].includes(this.subType);\n  }\n\n  /**\n   * Is pretend broken?\n   *\n   * @see {@link pf1.documents.item.ItemPhysicalPF.isBroken}\n   * @type {boolean}\n   */\n  get isBroken() {\n    if (!this.isQuasiPhysical) return false;\n    return this.system.broken === true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Attacks do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n\n    // Non-weapon attacks always proficient\n    if (this.subType !== \"weapon\") return true;\n\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * Creates attack from provided item.\n   *\n   * @remarks - Only supports weapon item type.\n   * @param {Item} item - Source item\n   * @throws {Error} - On unsupported type\n   * @returns {object} - Attack item data\n   */\n  static fromItem(item) {\n    if (item.type !== \"weapon\") throw new Error(`Unsupported item type \"${item.type}\"`);\n\n    const srcData = item.toObject().system;\n\n    // Convert single-use to 1 max charge\n    const uses = srcData.uses ?? {};\n    if (uses.per === \"single\") {\n      uses.per = \"charges\";\n      uses.maxFormula = \"1\";\n    }\n\n    // Get attack template\n    const attackItem = {\n      name: item.name,\n      type: \"attack\",\n      img: item.img,\n      system: {\n        subType: \"weapon\",\n        weapon: {\n          category: srcData.subType,\n          type: srcData.weaponSubtype,\n        },\n        held: srcData.held,\n        masterwork: srcData.masterwork,\n        proficient: srcData.proficient,\n        enh: srcData.enh,\n        broken: item.isBroken,\n        timeworn: srcData.timeworn,\n        cursed: srcData.cursed,\n        artifact: srcData.artifact,\n        baseTypes: srcData.baseTypes,\n        tags: srcData.tags,\n        ammo: srcData.ammo,\n        weaponGroups: srcData.weaponGroups,\n        actions: srcData.actions ?? [],\n        material: srcData.material,\n        alignments: srcData.alignments,\n        attackNotes: srcData.attackNotes ?? [],\n        effectNotes: srcData.effectNotes ?? [],\n      },\n    };\n\n    // Ensure action IDs are correct and unique\n    for (const action of attackItem.system.actions) {\n      action._id = foundry.utils.randomID(16);\n    }\n\n    return attackItem;\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.attackTypes[this.subType];\n\n    if (this.subType === \"weapon\") {\n      // Type and subtype labels\n      const wcat = itemData.weapon?.category || \"simple\";\n      const wtype = itemData.weapon?.type || \"light\";\n\n      labels.weapon ??= {};\n      const cat = pf1.config.weaponTypes[wcat];\n      labels.weapon.category = cat?._label;\n      labels.weapon.type = cat?.[wtype];\n    }\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Buff item\n *\n * More or less ephemeral effects, such as spell buffs.\n */\nexport class ItemBuffPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Add activation time when not present\n    if (changed.system?.active && changed.system?.duration?.start === undefined) {\n      foundry.utils.setProperty(changed, \"system.duration.start\", game.time.worldTime);\n    }\n\n    if (this.isActive && changed.system?.active === false) {\n      const effect = this.effect;\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {object} context - Update context options\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.system === undefined) return; // No system data updates\n\n    // Following requires actor\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Toggle buff hook\n    const isActive = changed.system?.active;\n    if (isActive !== undefined) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, isActive);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {string} userId - User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    const isActive = this.isActive;\n    if (actor && isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, true);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    // Run script call(s)\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        const startTime = context.pf1?.startTime;\n        this.executeScriptCalls(\"toggle\", { state: false, startTime });\n      }\n    }\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Call buff removal hook\n    if (this.isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, false);\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.active;\n  }\n\n  /**\n   * Toggle active effect icon as necessary.\n   *\n   * @param {object} changed Update data\n   */\n  async _updateTrackingEffect(changed) {\n    // Toggle icon if active state has changed\n    const isActive = changed.system?.active;\n    if (isActive === undefined) return;\n\n    const oldEffect = this.effect;\n\n    // Remove old AE\n    if (!isActive) {\n      oldEffect?.delete({ render: false });\n    }\n    // Add new AE or update old AE\n    else {\n      const aeData = await this.getRawEffectData();\n      aeData.active = isActive;\n      aeData.transfer = true;\n      foundry.utils.setProperty(aeData, \"flags.pf1.tracker\", true);\n\n      // Update old\n      if (oldEffect) oldEffect.update(aeData);\n      // Create new\n      else ActiveEffect.implementation.create(aeData, { parent: this });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preDelete(context, user) {\n    const effect = this.effect;\n    if (effect) {\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n      // Delete associated effect\n      // TODO: Remove this eventually, it is only needed by old items/actors\n      if (effect?.parent !== this) {\n        await effect.delete({ pf1: { delete: this.uuid } });\n      }\n    }\n\n    await super._preDelete(context, user);\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.buffTypes[itemData.subType];\n\n    if (this.system.duration) {\n      const duration = this.system.duration;\n      const unit = pf1.config.timePeriodsShort[duration.units];\n      if (unit === \"turn\") {\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n      } else if (unit && duration.value) {\n        try {\n          // TODO: Durations can be variable, variable durations need to be supported.\n          rollData ??= this.getRollData();\n          const roll = RollPF.safeRollSync(\n            duration.value,\n            rollData,\n            { formula: duration.value, item: this },\n            {},\n            { maximize: true }\n          );\n          let value;\n          if (roll.isDeterministic) {\n            value = roll.total ?? 0;\n          } else {\n            value = pf1.utils.formula.simplify(duration.value, rollData);\n          }\n          labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n        } catch (e) {\n          console.warn(`Error with buff duration formula \"${duration.value}\"`, this, e);\n        }\n      }\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Add fake CL based on buff level\n    result.cl = result.item.level;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n  }\n\n  /**\n   * Duration of the buff in seconds.\n   *\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.interactive=false]\n   * @param {object} [options.rollData] - Roll data\n   * @returns {Promise<number|null>} Duration in seconds or null if if it has no duration.\n   */\n  async getDuration({ rollData, interactive = false } = {}) {\n    const duration = this.system.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return null;\n\n    rollData ??= this.getRollData();\n\n    // Add total duration in seconds\n    let seconds = 0;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return null;\n      rollData ??= this.getRollData();\n      // TODO: Make this roll somehow known\n      const droll = await RollPF.safeRoll(formula, rollData, undefined, undefined, { allowInteractive: interactive });\n      const duration = droll.total;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    return seconds;\n  }\n\n  /** @inheritDoc */\n  async getRawEffectData({ rollData } = {}) {\n    const createData = await super.getRawEffectData();\n\n    createData.type = \"buff\";\n\n    if (this.system.conditions?.length) createData.statuses = [...this.system.conditions];\n\n    // Add buff durations\n    const duration = this.system.duration;\n\n    let endTiming = this.system.duration.end || \"turnStart\";\n\n    let seconds;\n    if (duration.units === \"turn\") {\n      endTiming = \"turnEnd\";\n      seconds = 0;\n    } else if (duration.value) {\n      seconds = await this.getDuration({ rollData });\n    }\n\n    if (Number.isFinite(seconds)) {\n      createData.duration.seconds = seconds;\n    }\n\n    // Record timing\n    createData.system ??= {};\n    createData.system.end = endTiming;\n    createData.system.initiative = game.combat?.initiative;\n\n    return createData;\n  }\n\n  /**\n   * @override\n   */\n  getRollData(options) {\n    const result = super.getRollData(options);\n\n    result.item.level = this.system.level;\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    return this.system.active ?? false;\n  }\n\n  /**\n   * Retrieve associated tracking Active Effect\n   *\n   * @type {ActiveEffect|undefined}\n   */\n  get effect() {\n    return this.effects.find((ae) => ae.getFlag(\"pf1\", \"tracker\") === true);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.active\": active }, context);\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Class-like item\n *\n * For base classes, NPC classes, racial HD, and mythic paths.\n */\nexport class ItemClassPF extends ItemPF {\n  /** @override */\n  static system = Object.freeze({\n    ...super.system,\n    hasActions: false,\n    subtypeName: true,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set level marker\n    if (changed.system.level !== undefined && changed.system.level !== this.system.level) {\n      context.pf1 ??= {};\n      context.pf1.item ??= {};\n      context.pf1.item[this.id] ??= {};\n      context.pf1.item[this.id].oldLevel = this.system.level;\n    }\n\n    // Ensure class associations remain in level order\n    const classLinks = changed.system.links?.classAssociations;\n    if (classLinks?.length) {\n      classLinks.forEach((link) => (link.level ||= 1));\n      classLinks.sort((a, b) => a.level - b.level);\n    }\n  }\n\n  /**\n   * Add or remove class associations on level change.\n   *\n   * @param {number} curLevel Current level, before the change.\n   * @param {number} newLevel New level, after the change.\n   * @param {object} [options] - Additional options\n   * @param {\"delete\"|\"update\"|\"create\"} [options.event] - Relevant event\n   */\n  async _onLevelChange(curLevel = 0, newLevel = 0, { event } = {}) {\n    const actor = this.actor;\n    if (!actor) return;\n\n    if (curLevel === newLevel) return;\n\n    // Add items associated to this class\n    if (newLevel > curLevel) {\n      const associations = this.system.links?.classAssociations ?? [];\n      const newAssociations = associations.filter((link) => link.level > curLevel && link.level <= newLevel);\n\n      const sources = new Map();\n\n      const newItems = [];\n      for (const link of newAssociations) {\n        const item = await fromUuid(link.uuid);\n        if (!item) {\n          const msg = `Could not find class association: ${link.uuid}`;\n          console.warn(link.uuid, msg, this);\n          ui.notifications?.warn(msg, { console: false });\n          continue;\n        }\n\n        sources.set(item.uuid, link);\n\n        // Apply Foundry's transformations for importing (automatically calls .toObject())\n        // This adds _stats.compendiumSource, removes extraneous permissions, resets sorting, etc.\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n        // Set associated class\n        itemData.system.class = this.system.tag;\n\n        newItems.push({ data: itemData, link });\n      }\n\n      if (newItems.length) {\n        const itemsCreationData = newItems.sort((a, b) => a.link.level - b.link.level).map((o) => o.data);\n        // Put new items at end of their types\n        const _typeSorting = {};\n        for (const item of itemsCreationData) {\n          _typeSorting[item.type] ??= actor.itemTypes[item.type].sort((a, b) => b.sort - a.sort)[0]?.sort ?? 0;\n          _typeSorting[item.type] += CONST.SORT_INTEGER_DENSITY;\n          item.sort = _typeSorting[item.type];\n        }\n        const items = await actor.createEmbeddedDocuments(\"Item\", itemsCreationData);\n\n        const classAssociations = {};\n        const updateData = { flags: { pf1: { links: { classAssociations } } } };\n        for (const item of items) {\n          const link = sources.get(item._stats?.compendiumSource);\n\n          // Set class association flags\n          classAssociations[item.id] = link?.level ?? 1;\n        }\n\n        await this.update(updateData, { render: false });\n      }\n    }\n\n    // Remove items associated to this class\n    if (newLevel < curLevel) {\n      const associations = foundry.utils.deepClone(this.getFlag(\"pf1\", \"links.classAssociations\") || {});\n\n      const itemIds = [];\n      for (const [id, level] of Object.entries(associations)) {\n        const item = actor.items.get(id);\n        if (!item) {\n          delete associations[id];\n          continue;\n        }\n\n        if (level > newLevel) {\n          itemIds.push(item.id);\n          delete associations[id];\n        }\n      }\n\n      if (event !== \"delete\") await this.setFlag(\"pf1\", \"links.classAssociations\", associations);\n\n      await Item.implementation.deleteDocuments(itemIds, { parent: actor });\n    }\n\n    // Call level change hook\n    Hooks.callAll(\"pf1ClassLevelChange\", this.actor, this, curLevel, newLevel);\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    const itemData = this.system;\n    // Reset cached HD/MT\n    // Can't prepare here as the actor uses this info before item preparation is done.\n    itemData.hitDice = undefined;\n    itemData.mythicTier = undefined;\n\n    // Soft fill default casting details when missing\n    if (itemData.casting?.type) {\n      itemData.casting.progression ??= \"high\";\n      itemData.casting.ability ??= \"int\";\n      itemData.casting.spells ??= \"arcane\";\n      itemData.casting.domainSlots ??= 1;\n      itemData.casting.cantrips ??= true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const itemData = this.system;\n\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\");\n\n    // Prepare class base save\n    {\n      const saveFormulas = useFractional\n        ? pf1.config.classFractionalSavingThrowFormulas\n        : pf1.config.classSavingThrowFormulas;\n\n      for (const save of Object.keys(pf1.config.savingThrows)) {\n        const classType = itemData.subType || \"base\";\n        let formula;\n        const saveData = itemData.savingThrows[save];\n        const saveType = saveData.value;\n        if (saveType === \"custom\") {\n          formula = saveData.custom || \"0\";\n        } else {\n          formula = saveFormulas[classType][saveType];\n        }\n        if (formula == null) formula = \"0\";\n        const total = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n        saveData.base = total;\n        if (useFractional) saveData.good = saveFormulas[classType].goodSave === true && saveType === \"high\";\n      }\n    }\n\n    // Prepare BAB\n    {\n      const babFormulas = useFractional ? pf1.config.classFractionalBABFormulas : pf1.config.classBABFormulas;\n\n      const babType = itemData.bab;\n      let formula;\n      if (babType === \"custom\") {\n        formula = itemData.babFormula || \"0\";\n      } else {\n        formula = babFormulas[babType] || \"0\";\n      }\n      itemData.babBase = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n    }\n\n    // Feed info back to actor\n    // Unlinked actors sometimes call item prep when actor isn't prepped and they're lacking .system\n    if (this.actor?.system) this._registerOnActor();\n  }\n\n  /**\n   * Register this item on actor in relevant places.\n   *\n   * @internal\n   * @returns {void}\n   */\n  _registerOnActor() {\n    const actor = this.actor;\n    if (!actor.classes) return; // actor prep has not run for some reason (unlinked actor)\n\n    const itemData = this.system;\n\n    // Don't record a link of tag is missing or empty.\n    if (!itemData.tag) return void console.error(\"Class doesn't have a tag\", this);\n\n    if (!itemData.subType) console.warn(`${this.name} lacks class type`, this);\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const classHpConfig = hpConfig.getClassHD(this);\n\n    const isBaseClass = (itemData.subType || \"base\") === \"base\";\n    const isMythic = itemData.subType === \"mythic\";\n\n    actor.classes[itemData.tag] = {\n      _id: this.id,\n      level: itemData.level,\n      unlevel: itemData.level,\n      name: this.name,\n      hd: itemData.hd,\n      hitDice: this.hitDice,\n      mythicTier: this.mythicTier,\n      bab: itemData.bab,\n      hp: classHpConfig.auto,\n      type: itemData.subType,\n      isBase: isBaseClass,\n      isMythic,\n      savingThrows: {\n        fort: itemData.savingThrows.fort.base,\n        ref: itemData.savingThrows.ref.base,\n        will: itemData.savingThrows.will.base,\n      },\n      fc: {\n        hp: isBaseClass ? itemData.fc.hp.value : 0,\n        skill: isBaseClass ? itemData.fc.skill.value : 0,\n        alt: isBaseClass ? itemData.fc.alt.value : 0,\n      },\n    };\n  }\n\n  /**\n   * Hit Dice\n   *\n   * @type {number}\n   */\n  get hitDice() {\n    const itemData = this.system;\n    if (itemData.hitDice === undefined) {\n      if (itemData.subType === \"mythic\") {\n        itemData.hitDice = 0;\n      } else if (itemData.customHD?.length > 0) {\n        const rollData = { item: { level: this.system.level } };\n        itemData.hitDice = RollPF.safeRollSync(itemData.customHD, rollData).total;\n      } else {\n        itemData.hitDice = itemData.level;\n      }\n    }\n\n    return itemData.hitDice;\n  }\n\n  /**\n   * Mythic Tier\n   *\n   * @type {number}\n   */\n  get mythicTier() {\n    this.system.mythicTier ??= this.subType === \"mythic\" ? this.system.level : 0;\n    return this.system.mythicTier;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  getLabels({ rollData, isolated } = {}) {\n    const labels = super.getLabels({ rollData, isolated });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.classTypes[itemData.subType];\n\n    labels.bab = pf1.config.classBAB[itemData.bab];\n    labels.saves = {\n      fort: pf1.config.classSavingThrows[itemData.savingThrows?.fort?.value],\n      ref: pf1.config.classSavingThrows[itemData.savingThrows?.ref?.value],\n      will: pf1.config.classSavingThrows[itemData.savingThrows?.will?.value],\n    };\n\n    labels.hitDie = itemData.hd;\n    if (itemData.subType !== \"mythic\") labels.hitDie = game.i18n.format(\"PF1.DieSize\", { size: itemData.hd });\n\n    labels.hasFCB = itemData.fc?.hp > 0 || itemData.fc?.skill > 0 || itemData.fc?.alt > 0;\n\n    // Remove labels that are meaningless for classes\n    delete labels.activation;\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Abstract class for physical items.\n */\nexport class ItemPhysicalPF extends ItemPF {\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return;\n\n    // Convert .hp.value into .hp.offset\n    const hp = changed.system?.hp;\n    if (hp?.value !== undefined) {\n      let max = this.system.hp?.max ?? 0;\n      const oldBase = this.system.hp?.base;\n      if (hp.base !== undefined && hp.base !== oldBase) {\n        max += hp.base - oldBase;\n      }\n      hp.offset ??= hp.value - max;\n      delete hp.value;\n    }\n\n    await this._resetChargesOnQuantityUpdate(changed);\n  }\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  static system = Object.freeze(foundry.utils.mergeObject(super.system, { isPhysical: true }, { inplace: false }));\n\n  /**\n   * @internal\n   * @param {object} system - System data\n   */\n  _preUpdateNumericValueGuard(system) {\n    super._preUpdateNumericValueGuard(system);\n\n    if (system.quantity !== undefined && (!Number.isSafeInteger(system.quantity) || system.quantity < 0)) {\n      system.quantity = 0;\n    }\n    if (system.price !== undefined && !Number.isFinite(system.price)) {\n      system.price = 0;\n    }\n    if (system.unidentified?.price !== undefined && !Number.isFinite(system.unidentified.price)) {\n      system.unidentified.price = 0;\n    }\n    if (system.hardness !== undefined && (!Number.isSafeInteger(system.hardness) || system.hardness < 0)) {\n      system.hardness = 0;\n    }\n    if (system.hp?.value !== undefined && !Number.isSafeInteger(system.hp.value)) {\n      system.hp.value = 0;\n    }\n    if (system.hp?.max !== undefined && (!Number.isSafeInteger(system.hp.max) || system.hp.max < 0)) {\n      system.hp.max = 0;\n    }\n  }\n\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const extraData = {};\n\n    // Items for NPCs should be unidentified by default if unknown\n    if (\n      data.system?.identified === undefined &&\n      this.actor && // Has actor, ignore otherwise\n      this.actor.type !== \"character\" && // Any NPCs\n      !this.actor?.hasPlayerOwner // Player owned actors ignore this\n    ) {\n      extraData[\"system.identified\"] = false;\n    }\n\n    // No HP defined, old or new\n    if (data.system?.hp?.base === undefined && data.system?.hp?.max === undefined) {\n      extraData[\"system.hp.base\"] = 10;\n    }\n\n    if (!foundry.utils.isEmpty(extraData)) {\n      this.updateSource(extraData);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.equipped === true) {\n      this.executeScriptCalls(\"equip\", { equipped: true });\n    }\n\n    // Quantity change\n    const quantity = this.system.quantity || 0;\n    if (quantity > 0) {\n      this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: 0, new: quantity } });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'equip' script calls\n    const equipped = changed.system?.equipped;\n    if (equipped != null) {\n      this.executeScriptCalls(\"equip\", { equipped });\n    }\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeQuantity' script calls\n    const oldQuantity = this._memoryVariables?.quantity;\n    if (oldQuantity !== undefined) {\n      const quantity = {\n        previous: oldQuantity,\n        new: this.system.quantity,\n      };\n\n      if (quantity.new != null && quantity.new !== quantity.previous) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity });\n      }\n    }\n\n    // Must call super last or the memory data gets cleared too soon\n    super._onMemorizedUpdate(changed, context);\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.equipped === true) {\n        this.executeScriptCalls(\"equip\", { equipped: false });\n      }\n\n      if (this.system.quantity > 0) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: this.system.quantity, new: 0 } });\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.equipped;\n  }\n\n  /**\n   * Reset charges when quantity is changed to simulate a stack.\n   *\n   * - If charges are 0\n   * - ... and quantity is reduced, reset to max\n   *\n   * @param {object} changed - Changed data\n   */\n  async _resetChargesOnQuantityUpdate(changed) {\n    // Don't care if charges are linked\n    if (this.links.charges) return;\n\n    // Only if quantity changed\n    const newQuantity = changed.system.quantity;\n    if (newQuantity === undefined) return;\n    // Don't touch if quantity is increased or remains the same\n    if ((newQuantity || 0) >= (this.system.quantity || 0)) return;\n\n    // Avoid overwriting value if the update is modifying it.\n    if (changed.system.uses?.value !== undefined) return;\n\n    const oldUses = this.system.uses ?? {};\n    if (oldUses.per && oldUses.value === 0 && oldUses.max > 0) {\n      const update = await this.recharge({ period: \"any\", commit: false });\n      if (update) {\n        changed.system.uses ??= {};\n        changed.system.uses.value = update.system.uses.value;\n      }\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Set visible name\n    if (this.showUnidentifiedData) {\n      this.name = this.system.unidentified?.name || this._source.name;\n    } else {\n      this.name = this._source.name;\n    }\n\n    // Ensure some base data has values\n    this.system.size ||= \"med\";\n    this.system.weight ??= {};\n    this.system.weight.value ||= 0;\n    this.system.quantity ||= 0;\n\n    super.prepareBaseData();\n\n    const itemData = this.system;\n    // Init base weight values in case they're missing.\n    itemData.weight ??= {};\n    itemData.weight.value ??= 0;\n    itemData.weight.total = 0;\n    itemData.weight.converted ??= {};\n\n    this.prepareDurability();\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    // Physical items\n    if (this.isPhysical && this.showUnidentifiedData) {\n      // Set unidentified description for players\n      this.system.description.value = this.system.description.unidentified;\n    }\n  }\n\n  /**\n   * Prepare dependent data for contained items.\n   *\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n    this.prepareWeight();\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.equipped\": active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Determines if the item is equipped.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.equipped || false;\n  }\n\n  /**\n   * Prepare hardness and hit points\n   *\n   * @internal\n   */\n  prepareDurability() {\n    const system = this.system;\n\n    const enh = system.enh || system.armor?.enh || 0;\n    const hardness = this._source.system.hardness || 0;\n\n    system.hardness = {\n      base: hardness,\n      total: hardness + pf1.config.itemEnhancementMods.hardness * enh,\n    };\n\n    // Establish HP structure\n    system.hp ??= {};\n    system.hp.base ??= 10;\n    system.hp.offset ||= 0;\n    system.hp.max = this._sizeAdjustedHealth() + pf1.config.itemEnhancementMods.hp * enh;\n    system.hp.value = Math.max(0, system.hp.max + system.hp.offset);\n  }\n\n  /**\n   * Adjust HP value by item size.\n   *\n   * In reference to rules established at Table 7-12 of CRB p. 175\n   *\n   * @see {@link https://aonprd.com/Rules.aspx?ID=126}\n   *\n   * @internal\n   * @returns {number} - Size adjusted health\n   */\n  _sizeAdjustedHealth() {\n    let hp = this.system.hp?.base || 10;\n\n    // Adjust HP per size\n    let itemSize = Object.keys(pf1.config.actorSizes).indexOf(this.system.size || \"med\");\n    if (itemSize < 0) itemSize = 4;\n    while (itemSize !== 4) {\n      if (itemSize > 4) {\n        hp *= 2;\n        itemSize--;\n      } else if (itemSize < 4) {\n        hp /= 2;\n        itemSize++;\n      }\n    }\n\n    return Math.max(1, Math.floor(hp));\n  }\n\n  /**\n   * Prepare this item's {@link ItemWeightData}\n   *\n   * @param {boolean} [initialize=true] - Initialize. Only used by containers.\n   */\n  prepareWeight(initialize = true) {\n    const itemData = this.system;\n    const weight = itemData.weight;\n\n    // Adjust base weight\n    // Altering weight.value directly will corrupt the weight\n    const baseWeight = weight.value * this.getWeightMultiplier();\n\n    if (initialize) weight.total = 0;\n\n    weight.total += baseWeight * itemData.quantity;\n\n    // Convert weight according metric system (lb vs kg)\n    weight.converted.value = pf1.utils.convertWeight(baseWeight);\n    weight.converted.total = pf1.utils.convertWeight(weight.total);\n  }\n\n  /**\n   * Return weight multiplier affecting this item.\n   *\n   * Such as item size dictating how heavy an armor is.\n   *\n   * @returns {number} - Multiplier, 1 for most items regardless of size.\n   */\n  getWeightMultiplier() {\n    return 1;\n  }\n\n  /**\n   * Weight scaling\n   *\n   * For use with {@link getWeightMultiplier()} across item types\n   *\n   * @internal\n   * @returns {number} - Weight multiplier\n   */\n  _getArmorWeightMultiplier() {\n    // Scale weight for weapons, armor and shields\n    const actorSize = Object.keys(pf1.config.sizeChart)[this.actor?.system.traits?.size?.value];\n    const itemSize = this.system.size || \"med\";\n    const size = this.system.resizing ? actorSize || itemSize : itemSize;\n    const mult = pf1.config.armorWeight[size];\n    return mult ?? 1;\n  }\n\n  /**\n   * Returns the displayed value of an item according to multiple options\n   *\n   * @param {object} [options] - Various optional parameters affecting value calculations\n   * @param {boolean} [options.recursive=true] - Whether the value of contained items should be included\n   * @param {number} [options.sellValue=0.5] - The sell value multiplier\n   * @param {boolean} [options.inLowestDenomination=false] - Whether the value should be returned in the lowest denomination\n   * @param {boolean} [options.forceUnidentified=false] - Override whether the value should use the unidentified price\n   * @param {boolean} [options.single=false] - Return value of singular item instead of the actual stack. Disables recursive option.\n   * @param {boolean} [options.identical=false] - Treat all items in stack as identical (same number of charges).\n   * @param {boolean} [options.maximized=false] - Pretend as if the items were fresh  (full charges)\n   * @returns {number} The item's value\n   */\n  getValue({\n    // eslint-disable-next-line no-unused-vars\n    recursive = true, // Not used by all types, so unused in this base implementation\n    sellValue = 0.5,\n    inLowestDenomination = false,\n    forceUnidentified = false,\n    single = false,\n    identical = false,\n    maximized = false,\n  } = {}) {\n    const hasFiniteCharges = this.hasFiniteCharges;\n    const maxChargesValue = hasFiniteCharges ? this.maxCharges : 0;\n    const remainingCharges = hasFiniteCharges ? (maximized ? maxChargesValue : this.charges) : 0;\n\n    const getActualValue = (identified = true, maxCharges = false) => {\n      let value = 0;\n      if (identified) value = this.system.price || 0;\n      else value = this.system.unidentified?.price || 0;\n\n      // Add charge price\n      if (identified && hasFiniteCharges) {\n        let charges = maxCharges ? maxChargesValue : remainingCharges;\n        if (!Number.isFinite(charges) || charges < 0) charges = 0;\n        value += (this.system.uses?.pricePerUse ?? 0) * charges;\n      }\n\n      if (inLowestDenomination) value *= 100;\n      if (this.isBroken) value *= 0.75; // TODO: Make broken value configurable\n      if (this.system.timeworn) {\n        if (hasFiniteCharges && remainingCharges === 0) value *= 0.01;\n        else value *= 0.5;\n      }\n      return value;\n    };\n\n    // Increase value by quantity\n    const isIdentified = forceUnidentified ? false : !this.showUnidentifiedData;\n    const quantity = single ? 1 : this.system.quantity || 0;\n    let result = getActualValue(isIdentified);\n    if (quantity > 1) {\n      // If charged item, add rest of the stack as if they had full charges\n      if (hasFiniteCharges && identical !== true) result += getActualValue(isIdentified, true) * (quantity - 1);\n      // Otherwise just multiply\n      else result *= quantity;\n    }\n\n    // Modify sell value\n    if (!(this.type === \"loot\" && [\"tradeGoods\", \"treasure\"].includes(this.subType))) result *= sellValue;\n\n    return result;\n  }\n\n  /**\n   * @remarks\n   * Checks if the item is equipped and has quantity.\n   * @inheritDoc\n   */\n  get canUse() {\n    return this.system.equipped && this.system.quantity > 0;\n  }\n\n  /**\n   * Broken state\n   *\n   * Tests both explicit broken override and current health.\n   *\n   * @type {boolean}\n   */\n  get isBroken() {\n    if (this.system.broken) return true;\n\n    const hp = this.system.hp ?? {};\n    const hpMax = hp.max ?? 0;\n    if (hpMax > 0) {\n      const hpCur = hp.value ?? 0;\n      const brokenThreshold = Math.floor(hpMax / 2);\n      return hpCur <= brokenThreshold;\n    }\n\n    return false;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.broken = this.isBroken;\n\n    const itemData = this.system;\n\n    // Equipped label\n    const checkYes = '<i class=\"fa-solid fa-check\"></i>';\n    const checkNo = '<i class=\"fa-solid fa-times\"></i>';\n    labels.equipped = \"\";\n    if (itemData.equipped === true) labels.equipped = checkYes;\n    else labels.equipped = checkNo;\n\n    // Carried label\n    labels.carried = \"\";\n    if (itemData.carried === true) labels.carried = checkYes;\n    else labels.carried = checkNo;\n\n    // Identified label\n    labels.identified = \"\";\n    if (itemData.identified === true) labels.identified = checkYes;\n    else labels.identified = checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n\n    // Auto-unequip\n    if (!this.canEquip) this.system.equipped = false;\n  }\n\n  /**\n   * Can equip currently?\n   *\n   * @type {boolean}\n   */\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  /**\n   * @remarks\n   * Identified state is the only thing that can alter the result.\n   * @override\n   * @inheritDoc\n   */\n  getName(forcePlayerPerspective = false) {\n    if (game.user.isGM && forcePlayerPerspective) {\n      if (this.system.identified === false) return this.system.unidentified?.name || this.name;\n    }\n    return this.name;\n  }\n\n  get showUnidentifiedData() {\n    return !game.user.isGM && this.system.identified === false;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Convert size string to number\n    result.item.size = Object.keys(pf1.config.actorSizes).indexOf(result.item.size);\n\n    // Overwrite broken state\n    result.item.broken = this.isBroken;\n  }\n}\n\n/**\n * @typedef {object} ItemWeightData\n * An item's `weight` data. The only property to be stored is `value`, from which all other values are derived.\n * @see {@link ItemPF.prepareWeight} for generation\n * @remarks A weight property is considered \"effective\" if it is the value that is added to its parent's weight.\n *          An item with a weight of 10 lbs in a container with 50% weight reduction would increase\n *          the container's effective `weight.total` by 5 lbs, but increases the container's `weight.contents` weight by 10 lbs.\n * @property {number} value - The weight of a single item instance, in lbs\n * @property {number} total - The effective total weight of the item (including quantity and contents), in lbs\n * @property {number} [currency] - Effective weight of contained currency for containers, in lbs\n * @property {number} [contents] - Weight of contained items and currency, in lbs\n * @property {object} converted - Weight of this item, converted to the current unit system\n * @property {number} converted.value - The weight of a single item instance, in world units\n * @property {number} converted.total - The effective total weight of the item (including quantity and contents), in world units\n * @property {number} [converted.contents] - Weight of contained items and currency, in world units\n */\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Consumable item\n *\n * For potions, wands, scrolls, drugs, etc.\n */\nexport class ItemConsumablePF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @inheritDoc\n   */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.consumableTypes[this.subType];\n\n    return labels;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Container item\n *\n * Bags, backpacks, chests, etc.\n */\nexport class ItemContainerPF extends ItemPhysicalPF {\n  /** @override */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: true,\n    hasActions: false,\n  });\n\n  _initialize() {\n    this.items = new Collection();\n\n    super._initialize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.recursive === false || context.diff === false) return;\n\n    // Ensure contained item updates adhere to reason\n    const items = changed.system.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        await this._containedItemUpdate(itemId, itemData, items, context);\n      }\n    }\n  }\n\n  /**\n   * Handle contained item CRUD\n   *\n   * @internal\n   * @param {string} itemId - Item ID\n   * @param {object|null} itemData - Item's update data\n   * @param {object} items - Parent's items update object\n   * @param {object} context - Context\n   */\n  async _containedItemUpdate(itemId, itemData, items, context) {\n    // Deletion\n    if (itemId.startsWith(\"-=\")) {\n      /** @type {ItemPF} */\n      const oldItem = this.items.get(itemId.replace(/^-=/, \"\"));\n\n      if (oldItem) {\n        await oldItem._preDelete(context, game.user);\n        // TODO: Run pre-delete on everything contained by this\n      }\n      return;\n    }\n\n    /** @type {ItemPF} */\n    const oldItem = this.items.get(itemId);\n\n    let diff;\n    // Existing contained item\n    if (oldItem) {\n      await oldItem._preUpdate(itemData, context, game.user);\n      diff = oldItem.updateSource(itemData, { dryRun: true, fallback: false });\n      // Remove lingering .data if present, the above line prunes this out if done externally\n      if (\"data\" in this.system.items[itemId]) diff[\"-=data\"] = null;\n    }\n    // New contained item\n    else {\n      /** @type {ItemPF} */\n      const temp = new Item.implementation(itemData);\n      await temp._preCreate(itemData, context, game.user);\n      diff = temp.toObject();\n    }\n\n    items[itemId] = diff;\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    // Call various document workflows for changed items\n    const items = changed.system?.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        const item = this.items.get(itemId);\n        try {\n          if (itemId.startsWith(\"-=\")) {\n            // TODO: Item reference is no longer available for _onDelete workflow\n            // item._onDelete(options, userId);\n          } else if (itemData._id) {\n            item._onCreate(itemData, context, userId);\n          } else {\n            item._onUpdate(itemData, context, userId);\n          }\n        } catch (err) {\n          console.error(err, { parent: this, item });\n        }\n\n        // TODO: createDocument, deleteDocument, updateDocument hooks\n      }\n    }\n\n    super._onUpdate(changed, context, userId);\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Set base weight to weight of coins, which can be calculated without knowing contained items\n    const weightReduction = (100 - (this.system.weight?.reduction?.percent ?? 0)) / 100;\n    this.system.weight.currency = this._calculateCoinWeight() * weightReduction;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    this._prepareInventory();\n\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Prepare dependent data for contained items.\n   *\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    // Update dependant data and resources\n    for (const item of this.items) {\n      item._prepareDependentData(final);\n    }\n\n    super._prepareDependentData(final);\n  }\n\n  /**\n   * Prepare .items collection for contained items.\n   *\n   * @private\n   */\n  _prepareInventory() {\n    const prior = this.items;\n    const collection = new Collection();\n    this.system.items ??= {}; // Shim for items that haven't had template.json applied to them\n    for (const [itemId, itemData] of Object.entries(this.system.items)) {\n      try {\n        let item = prior?.get(itemId);\n        if (item) {\n          item.updateSource(new Item.implementation(itemData).toObject(), { recursive: false });\n        } else {\n          item = new Item.implementation(itemData, { parent: this.actor });\n          item.parentItem = this;\n        }\n        item.reset();\n        collection.set(itemId, item);\n      } catch (err) {\n        console.error(\"Error preparing contained item:\", { id: itemId, data: itemData }, this);\n        throw err;\n      }\n    }\n\n    /** @type {Collection<ItemPF>} */\n    this.items = collection;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    this.system.weight ??= {};\n    /** @type {ItemWeightData} */\n    const weight = this.system.weight;\n    weight.total = 0; // Reset\n\n    // Percentile weight reduction\n    const weightMult = (100 - (weight.reduction?.percent || 0)) / 100;\n\n    const currencyWeight = this._calculateCoinWeight();\n    weight.currency = currencyWeight * weightMult;\n\n    // Total unreduced weight of contents\n    weight.contents = this.items.reduce((total, item) => total + item.system.weight.total, 0);\n    weight.contents += currencyWeight;\n\n    const reductionFlat = weight.reduction?.value ?? 0;\n    weight.total += Math.max(0, weight.contents * weightMult - reductionFlat);\n\n    // Apply quantity\n    weight.total *= this.system.quantity || 0;\n\n    weight.converted.reduction = pf1.utils.convertWeight(reductionFlat);\n    weight.converted.contents = pf1.utils.convertWeight(weight.contents);\n    weight.converted.currency = pf1.utils.convertWeight(weight.currency);\n\n    super.prepareWeight(false);\n  }\n\n  /**\n   * @protected\n   * @param {object[]} itemsData Item creation data\n   * @param {object} [options={}] Additional options\n   * @returns {Promise<this>} Promise to the updated document.\n   */\n  async createContainerContent(itemsData, options = { renderSheet: false }) {\n    itemsData = itemsData instanceof Array ? itemsData : [itemsData];\n\n    const itemOptions = foundry.utils.deepClone(options);\n    const user = game.user;\n\n    const actuallyCreated = [];\n    const updateData = { system: { items: {} } };\n\n    // Iterate over data to create\n    for (const itemData of itemsData) {\n      // Find unique ID\n      do {\n        itemData._id = foundry.utils.randomID(16);\n      } while (this.system.items[itemData._id] !== undefined);\n\n      // Create temporary item\n      const item = new Item.implementation(itemData);\n\n      // Run pre-create workflow\n      let allowed = (await item._preCreate(itemData, options, game.user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(\"preCreateItem\", item, itemData, itemOptions, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | Item creation prevented during pre-create`);\n        continue;\n      }\n\n      // Update _stats\n      item.updateSource({\n        _stats: {\n          coreVersion: game.version,\n          systemVersion: game.system.version,\n          createdTime: Date.now(),\n          lastModifiedBy: user.id,\n        },\n      });\n\n      updateData.system.items[itemData._id] = item.toObject();\n      actuallyCreated.push(itemData._id);\n    }\n\n    await this.update(updateData, { pf1: { createContained: actuallyCreated } });\n\n    // Mimic createEmbeddedDocuments()\n    const created = this.items.filter((i) => actuallyCreated.includes(i.id));\n    if (options.renderSheet) created.forEach((i) => i.sheet.render(true));\n    return created;\n  }\n\n  async deleteContainerContent(data, context = {}) {\n    const ids = new Set(data instanceof Array ? data : [data]);\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n\n    const updateData = { system: { items: {} } };\n\n    const actuallyDeleted = [];\n\n    // Iterate over data to delete\n    for (const id of ids) {\n      const item = this.items.get(id);\n\n      // Run pre-delete workflow\n      let allowed = (await item._preDelete(context, user)) ?? true;\n      allowed &&= context.noHook || Hooks.call(`preDelete${embeddedName}`, item, context, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | ${embeddedName} deletion prevented during pre-delete`);\n        continue;\n      }\n\n      updateData.system.items[`-=${id}`] = null;\n      actuallyDeleted.push(id);\n    }\n\n    await this.update(updateData, { pf1: { removeContained: actuallyDeleted } });\n  }\n\n  async updateContainerContents(data) {\n    data = data instanceof Array ? data : [data];\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n    const options = { diff: true };\n\n    const actuallyUpdated = [];\n    const updateData = { system: { items: {} } };\n\n    // Difference each update against existing data\n    for (const changes of data) {\n      if (!changes._id) throw new Error(\"You must provide an id for every Embedded Document in an update operation\");\n\n      const item = this.items.get(changes._id);\n\n      let diff = {};\n      try {\n        diff = item.updateSource(changes, { dryRun: true, fallback: false });\n      } catch (err) {\n        console.error(err);\n        continue;\n      }\n\n      // Run pre-update workflow\n      let allowed = (await item._preUpdate(diff, options, user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(`preUpdate${embeddedName}`, item, diff, options, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | ${embeddedName} update prevented during pre-update`);\n        continue;\n      }\n\n      diff._stats = {\n        coreVersion: game.version,\n        systemVersion: game.system.version,\n        modifiedTime: Date.now(),\n        lastModifiedBy: user.id,\n      };\n\n      updateData.system.items[changes._id] = diff;\n      actuallyUpdated.push(changes._id);\n    }\n\n    await this.update(updateData, { pf1: { updateContained: actuallyUpdated } });\n  }\n\n  /**\n   * Returns the currency this item contains\n   *\n   * @param {object} [options] - Additional options affecting how the value is returned\n   * @param {boolean} [options.inLowestDenomination=false] - Whether to return the value in copper, or in gold (default)\n   * @returns {number} The total amount of currency this item contains, in gold pieces\n   */\n  getTotalCurrency({ inLowestDenomination = false } = {}) {\n    const cc = pf1.config.currency;\n\n    let total = 0;\n    for (let [unit, value] of Object.entries(this.system.currency || {})) {\n      value = Math.max(0, value || 0);\n      if (value == 0) continue;\n      total += value * (cc.rate[unit] || 1);\n    }\n\n    return inLowestDenomination ? total : total / cc.standardRate;\n  }\n\n  /**\n   * Converts currencies to the given currency type\n   *\n   * @param {CoinType} type - Converts as much currency as possible to this type.\n   * @returns {Promise<this>} The updated item\n   */\n  convertCurrency(type = \"pp\") {\n    const cp = this.getTotalCurrency({ inLowestDenomination: true });\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { currency } });\n  }\n\n  /**\n   * @returns {number} Weight of coins on the item.\n   * @private\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /** @inheritDoc */\n  getValue({ recursive = false, inLowestDenomination = false, ...options } = {}) {\n    if (options.single) recursive = false;\n    const fullOptions = { recursive, inLowestDenomination, ...options };\n    let result = super.getValue(fullOptions);\n\n    if (!recursive) return result;\n\n    // Add item's contained currencies at full value\n    result += this.getTotalCurrency({ inLowestDenomination });\n\n    // Add item's content items' values\n    for (const item of this.items) {\n      result += item.getValue(fullOptions);\n    }\n\n    return result;\n  }\n\n  /** @inheritDoc */\n  async getChatData({ chatcard, rollData } = {}) {\n    const context = await super.getChatData({ chatcard, rollData });\n    // Get contents value\n    const cpValue =\n      this.getValue({ sellValue: 1, recursive: true, inLowestDenomination: true }) -\n      this.getValue({ sellValue: 1, recursive: false, inLowestDenomination: true });\n    const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    const value =\n      game.i18n.localize(\"PF1.Containers.Contents.Value\") + \": \" + game.i18n.format(\"PF1.SplitValue\", totalValue);\n    context.properties.push(value);\n    const currency = { ...this.system.currency };\n    currency.gp ||= 0;\n    currency.gp += currency.pp * 10;\n    const coins = game.i18n.localize(\"PF1.Currency.Label\") + \": \" + game.i18n.format(\"PF1.SplitValue\", currency);\n    context.properties.push(coins);\n\n    return context;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Equipment item\n *\n * Armor, shields, wondrous items, etc.\n */\nexport class ItemEquipmentPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set equipment subtype and slot\n    const type = changed.system?.subType;\n    if (type !== undefined && type !== this.system.subType) {\n      // Set subtype\n      const subtype = changed.system?.equipmentSubtype ?? this.system.equipmentSubtype ?? \"\";\n      const subtypes = Object.keys(pf1.config.equipmentTypes[type] ?? {}).filter((o) => !o.startsWith(\"_\"));\n\n      // Current subtype is not valid for current type\n      if (!subtypes.includes(subtype)) {\n        // Clear if no subtypes exist\n        if (subtypes.length === 0) {\n          changed.system.equipmentSubtype = \"\";\n        }\n        // Set to first subtype if no valid subtype is set\n        else if (subtypes.length > 0) {\n          changed.system.equipmentSubtype = subtypes[0];\n        }\n      }\n\n      // Set slot\n      const slot = changed.system?.slot ?? this.system.slot ?? \"\";\n      const slotType = type === \"other\" ? \"wondrous\" : type; // Fix \"other\" item default slot type\n      const slotTypes = Object.keys(pf1.config.equipmentSlots[slotType] ?? {});\n      if (!slot || !slotTypes.includes(slot)) {\n        changed.system.slot = slotTypes[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    let eType = this.subType;\n    const typeKeys = Object.keys(pf1.config.equipmentTypes);\n    if (!typeKeys.includes(eType)) eType = typeKeys[0];\n\n    let eSubtype = this.system.equipmentSubtype;\n    const subtypeKeys = Object.keys(pf1.config.equipmentTypes[eType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(eSubtype)) eSubtype = subtypeKeys[0];\n\n    const showIdentified = !this.showUnidentifiedData;\n\n    const isArmor = [\"armor\", \"shield\"].includes(this.subType);\n    const isOrdinary = isArmor || [\"clothing\"].includes(this.subType);\n\n    const subtypeLabels = pf1.config.equipmentTypes[eType];\n    labels.subType = subtypeLabels._label;\n    if (showIdentified || isOrdinary) {\n      labels.childType = subtypeLabels[eSubtype];\n    } else {\n      // Obfuscate wondrous as other\n      if (this.subType === \"wondrous\") labels.subType = pf1.config.equipmentTypes.other._label;\n    }\n\n    if (isArmor && labels.childType) {\n      labels.childTypeDistinct = true;\n    }\n\n    let ac = itemData.armor.value || 0;\n    if (showIdentified) ac += itemData.armor?.enh || 0;\n\n    if (ac > 0) {\n      labels.armor = `${ac} ${game.i18n.localize(\"PF1.ACNormal\")}`;\n      labels.armorValue = ac;\n      if (labels.broken) {\n        labels.armorValueEffective = Math.floor(ac / 2);\n      }\n    }\n\n    const acp = itemData.armor?.acp || 0;\n    if (acp > 0) {\n      labels.acp = true;\n      labels.acpEffective = Math.max(0, acp + (itemData.masterwork ? -1 : 0));\n    }\n    const mdex = itemData.armor?.dex ?? null;\n    if (Number.isFinite(mdex)) labels.mdex = true;\n\n    if (this.hasSlots || [\"armor\", \"shield\"].includes(this.subType)) {\n      if (this.subType === \"armor\") {\n        labels.slot = pf1.config.equipmentSlots.armor.armor;\n      } else if (this.subType === \"shield\") {\n        labels.slot = pf1.config.equipmentSlots.shield.shield;\n      } else if (this.subType === \"clothing\") {\n        labels.slot = pf1.config.equipmentSlots.clothing.clothing;\n      } else {\n        labels.slot = pf1.config.equipmentSlots.wondrous[itemData.slot];\n      }\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  get canEquip() {\n    // Always true if not in container\n    if (!this.inContainer) return true;\n\n    switch (this.subType) {\n      case \"armor\":\n      case \"shield\":\n      case \"clothing\":\n        return false;\n      case \"wondrous\":\n      case \"other\":\n        return this.system.slot === \"slotless\";\n    }\n    return true;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const itemData = this.system;\n\n    // Add enhancement bonus\n    itemData.armor.enh ??= 0;\n\n    const enh = itemData.armor.enh || 0;\n    itemData.armor.total = (itemData.armor.value || 0) + enh;\n\n    // Feed info back to actor\n    if (itemData.equipped !== false) {\n      this.applyEquippedEffects();\n    }\n  }\n\n  /**\n   * Apply effects of equipping this item.\n   */\n  applyEquippedEffects() {\n    const itemData = this.system;\n\n    if (!this.isActive) return;\n\n    const actor = this.actor;\n    // Guard against weirdness with unlinked data (data is undefined at this state), and also basic test for if this item has actor.\n    if (!actor?.system || !actor?.equipment) return;\n\n    switch (this.subType) {\n      case \"shield\": {\n        const shieldTypes = pf1.config.shieldTypes;\n        const subtype = itemData.equipmentSubtype;\n        let shieldType = actor.equipment.shield.type;\n        if (subtype === \"other\" && shieldType < shieldTypes.other) shieldType = shieldTypes.other;\n        else if (subtype === \"lightShield\" && shieldType < shieldTypes.light) shieldType = shieldTypes.light;\n        else if (subtype === \"heavyShield\" && shieldType < shieldTypes.heavy) shieldType = shieldTypes.heavy;\n        else if (subtype === \"towerShield\" && shieldType < shieldTypes.tower) shieldType = shieldTypes.tower;\n        if (actor.equipment.shield.type !== shieldType) {\n          actor.equipment.shield.type = shieldType;\n          actor.equipment.shield.id = this.id;\n        }\n        break;\n      }\n      case \"armor\": {\n        const armorTypes = pf1.config.armorTypes;\n        const subtype = itemData.equipmentSubtype;\n        let armorType = actor.equipment.armor.type;\n        if (subtype === \"lightArmor\" && armorType < armorTypes.light) armorType = armorTypes.light;\n        else if (subtype === \"mediumArmor\" && armorType < armorTypes.medium) armorType = armorTypes.medium;\n        else if (subtype === \"heavyArmor\" && armorType < armorTypes.heavy) armorType = armorTypes.heavy;\n        if (armorType !== actor.equipment.armor.type) {\n          actor.equipment.armor.type = armorType;\n          actor.equipment.armor.id = this.id;\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Does the equipment subtype use slots.\n   *\n   * @type {boolean}\n   */\n  get hasSlots() {\n    return [\"wondrous\", \"other\"].includes(this.subType);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @remarks Supports both weapon and armor proficiencies.\n   */\n  getProficiency(weapon = true) {\n    if (weapon) return this.isProficient;\n\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    const actor = this.actor;\n    if (!actor) return true; // No actor, so always proficient\n\n    return actor.hasArmorProficiency(this);\n  }\n\n  /**\n   * Retrieve armor proficiency type required by this item.\n   *\n   * @remarks\n   * - Null if no relevant proficiency found. Possibly an error.\n   *\n   * @type {keyof typeof pf1.config.armorProficiencies | null}\n   * @throws - If used on item that is not an armor or a shield.\n   * @since PF1 v10\n   */\n  get baseArmorProficiency() {\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    // Item type to proficiency maps\n    const proficiencyMaps = {\n      armor: {\n        lightArmor: \"lgt\",\n        mediumArmor: \"med\",\n        heavyArmor: \"hvy\",\n      },\n      shield: {\n        other: \"shl\", // buckler\n        lightShield: \"shl\",\n        heavyShield: \"shl\",\n        towerShield: \"twr\",\n      },\n    };\n\n    return proficiencyMaps[subType][this.system.equipmentSubtype] ?? null;\n  }\n\n  /**\n   * @see {@link https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor}\n   *\n   * @inheritdoc\n   * @remarks - Only armor and shields get anything besides 1.\n   * @since PF1 v10\n   */\n  getWeightMultiplier() {\n    if (![\"armor\", \"shield\"].includes(this.subType)) return 1;\n\n    return this._getArmorWeightMultiplier();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Feature item\n *\n * Class features, feats, traits, templates, racial traits, etc.\n */\nexport class ItemFeatPF extends ItemPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {User} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        this.executeScriptCalls(\"toggle\", { state: false });\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    const active = changed.system?.disabled;\n    if (active !== undefined) return !active;\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.disabled\": !active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    return this.system.disabled !== true;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const { subType, abilityType } = this.system;\n\n    labels.subType = pf1.config.featTypes[subType];\n    labels.featType = pf1.config.featTypes[subType];\n\n    labels.abilityType = pf1.config.abilityTypes[this.system.abilityType]?.short;\n    if (this.subType === \"trait\") {\n      labels.traitType = pf1.config.traitTypes[this.system.traitType];\n    } else if (this.subType === \"racial\") {\n      labels.raceType = pf1.config.raceTypes[this.system.traitType];\n      labels.traitCategory = pf1.config.racialTraitCategories[this.system.traitCategory];\n    }\n\n    // Ability type\n    if (abilityType && abilityType !== \"none\") {\n      labels.abilityType = pf1.config.abilityTypes[abilityType].short;\n      labels.abilityTypeLong = pf1.config.abilityTypes[abilityType].long;\n    } else if (labels.abilityType) {\n      delete labels.abilityType;\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Add fake CL based on associated class level or HD\n    result.cl = result.class?.level || result.attributes?.hd?.total;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    super.getTypeChatData(data, labels, props, rollData);\n    // Add ability type label\n    if (labels.abilityType) {\n      props.push(labels.abilityType);\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Loot item\n *\n * Ammunition, gear, trade goods, etc.\n */\nexport class ItemLootPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /** @type {string} */\n  get extraType() {\n    return this.system.extraType;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Reset loot extra type when loot subtype is changed\n    if (\n      changed.system?.subType !== undefined &&\n      changed.system?.subType !== this.system.subType &&\n      changed.system?.extraType === undefined\n    ) {\n      changed.system.extraType = \"\";\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    if (!this.showUnidentifiedData) {\n      labels.subType = pf1.config.lootTypes[this.subType];\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    if (pf1.config.unequippableLoot.includes(this.subType)) return true;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Make ammo count inherently as single use.\n   *\n   * @inheritDoc\n   */\n  get isSingleUse() {\n    return this.subType === \"ammo\" || super.isSingleUse;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Race item\n */\nexport class ItemRacePF extends ItemPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasActions: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Overwrite race\n    const oldRace = actor.itemTypes.race.find((r) => r !== this);\n    if (oldRace) {\n      const oldSize = oldRace.system.size;\n      await oldRace.delete();\n\n      const context = {};\n      // Ensure actor size is updated to match the race, but only if it's same as old race\n      const actorSize = actor.system.traits.size?.base;\n      if (actorSize !== this.system.size && oldSize === actorSize) context._pf1SizeChanged = true;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const actor = this.actor;\n\n    // Track size change\n    const newSize = changed.system?.size;\n    if (actor && newSize !== undefined) {\n      const oldSize = actor.system.traits?.size?.base;\n      if (this.system.size === oldSize && newSize !== oldSize) {\n        context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Add humanoid if the race has nothing\n    if (this.system.creatureTypes?.total?.size === 0) {\n      this.system.creatureTypes.standard.add(\"humanoid\");\n    }\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Spell item\n */\nexport class ItemSpellPF extends ItemPF {\n  /**\n   * @override\n   * @inheritDoc\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasChanges: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data Creation data\n   * @param {object} options Context options\n   * @param {User} user Triggering user\n   */\n  async _preCreate(data, options, user) {\n    await super._preCreate(data, options, user);\n\n    // Following is only if the item is added on actor\n    if (!this.actor) return;\n\n    this.constructor._adjustNewItem(this, data, false);\n  }\n\n  /** @inheritDoc */\n  static _adjustNewItem(item, data, override = false) {\n    if (!item.actor) return;\n\n    // Assign level if undefined\n    if (!Number.isFinite(data?.system?.level) || override) {\n      const book = item.system.spellbook;\n      const cls = item.actor.system.attributes?.spells?.spellbooks?.[book]?.class;\n      const level = item.system.learnedAt?.class?.[cls];\n      if (Number.isFinite(level)) {\n        foundry.utils.setProperty(item._source, \"system.level\", Math.clamp(level, 0, 9));\n      }\n    }\n\n    // Prepare if undefined\n    if (!Number.isFinite(data?.system?.preparation?.value) || override) {\n      // Only spontaneous casters auto-prepare new spells\n      if (item.spellbook?.spellPreparationMode === \"spontaneous\") {\n        foundry.utils.setProperty(item._source, \"system.preparation.value\", 1);\n        foundry.utils.setProperty(item._source, \"system.preparation.max\", 1);\n      }\n    }\n\n    // Swap non-psychic components for psychic ones\n    if (this.spellbook?.psychic === true) {\n      if (this.system.components?.verbal === true) {\n        foundry.utils.setProperty(item._source, \"components.verbal\", false);\n        foundry.utils.setProperty(item._source, \"components.thought\", true);\n      }\n      if (this.system.components?.somatic === true) {\n        foundry.utils.setProperty(item._source, \"components.somatic\", false);\n        foundry.utils.setProperty(item._source, \"components.emotion\", true);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    this._preparationPreUpdate(changed);\n  }\n\n  /**\n   * Constrains and alters prepared slot updates to result in meaningful end results.\n   *\n   * @private\n   * @param {object} changed Change data in pre-update\n   */\n  _preparationPreUpdate(changed) {\n    const prep = changed.system.preparation;\n    if (!prep) return;\n\n    const current = this.system.preparation;\n    const max = prep.max ?? current.max ?? 0;\n    const left = prep.value ?? current.value ?? 0;\n\n    // Constrain left and max to sane values\n    if (left > max) {\n      if (prep.max !== undefined) {\n        prep.value = max;\n      } else if (prep.value !== undefined) {\n        prep.max = left;\n      }\n    }\n\n    // TODO: Remove following once DataModel is implemented with relevant constraints\n    if (prep.max < 0) prep.max = 0;\n    if (prep.value < 0) prep.value = 0;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData, isolated } = {}) {\n    const labels = super.getLabels({ actionId, rollData, isolated });\n    const itemData = this.system;\n\n    // Spell Level, School, and Components\n    labels.level = pf1.config.spellLevels[itemData.level];\n    labels.school = pf1.config.spellSchools[itemData.school];\n    labels.components = this.getSpellComponents({ compact: true }).join(\" \");\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    result.sl = this.spellLevel || 0;\n\n    const spellbook = this.spellbook;\n    if (spellbook) {\n      const spellAbility = spellbook.ability;\n      let ablMod = \"\";\n      if (spellAbility !== \"\") ablMod = result.abilities?.[spellAbility]?.mod;\n      result.ablMod = ablMod;\n\n      result.cl = this.casterLevel || 0;\n\n      // Add @class shortcut to @classes[classTag]\n      if (spellbook.class === \"_hd\")\n        result.class = { level: result.attributes.hd?.total ?? result.details?.level?.value ?? 0 };\n      else result.class = result.classes?.[spellbook.class] ?? {};\n\n      // Add @spellbook shortcut to @spells[bookId]\n      result.spellbook = result.spells[this.system.spellbook];\n\n      if (this.useSpellPoints()) {\n        result.sp = result.spellbook.spellPoints;\n      }\n    } else {\n      const [sl, cl] = this.constructor.getMinimumCasterLevelBySpellData(this);\n\n      result.sl = sl;\n      result.cl = cl;\n      result.ablMod = Math.floor(sl / 2);\n    }\n  }\n\n  /** @inheritDoc */\n  getConditionalTargets(targets) {\n    super.getConditionalTargets(targets);\n\n    // Add Caster Level target\n    targets.push({\n      id: \"cl\",\n      label: game.i18n.localize(\"PF1.CasterLevel\"),\n      simple: true,\n      sort: (targets.find((e) => e.id === \"dc\").sort ?? 5_000) + 100, // Sort after DC\n    });\n\n    const charges = targets.find((t) => t.id === \"charges\");\n\n    // Relabel for spellpoints\n    if (this.useSpellPoints()) charges.label = game.i18n.localize(\"PF1.SpellPointsCost\");\n    else charges.disabled = true; // Non-spellpoint spells do not use charges\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    if (rollData.item.sr) {\n      props.push(game.i18n.localize(\"PF1.SpellResistance\"));\n    }\n\n    // Add charges\n    if (this.isCharged && !this.system.atWill) {\n      if (this.useSpellPoints()) {\n        props.push(`${game.i18n.localize(\"PF1.SpellPoints\")}: ${this.charges}/${this.maxCharges}`);\n      } else {\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${this.charges}/${this.maxCharges}`);\n      }\n    }\n  }\n\n  /**\n   * Add charges to the spell or its relevant resource pool (spell points or spontaneous spells).\n   *\n   * @override\n   * @param {number} value - Number of charges to add\n   * @param {object} [data=null] - Additional data to pass to the update\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible or required.\n   */\n  async addCharges(value, data = null) {\n    if (!this.actor) return;\n    if (this.system.atWill) return;\n\n    const spellbook = this.spellbook;\n    if (!spellbook) return;\n    const isSpontaneous = spellbook.spontaneous,\n      spellbookKey = this.system.spellbook || \"primary\",\n      spellLevel = this.system.level;\n\n    if (this.useSpellPoints()) {\n      const curUses = this.getSpellUses();\n      const updateData = {};\n      updateData[`system.attributes.spells.spellbooks.${spellbookKey}.spellPoints.value`] = curUses + value;\n      await this.actor.update(updateData);\n      return this;\n    } else {\n      const newCharges = isSpontaneous\n        ? Math.max(0, (spellbook.spells?.[`spell${spellLevel}`]?.value || 0) + value)\n        : Math.max(0, (this.system.preparation?.value || 0) + value);\n\n      if (!isSpontaneous) {\n        const key = \"system.preparation.value\";\n        if (data == null) {\n          data = {};\n          data[key] = newCharges;\n          return this.update(data);\n        } else {\n          data[key] = newCharges;\n        }\n      } else {\n        const key = `system.attributes.spells.spellbooks.${spellbookKey}.spells.spell${spellLevel}.value`;\n        const actorUpdateData = {};\n        actorUpdateData[key] = newCharges;\n        await this.actor.update(actorUpdateData);\n        return this;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isCharged() {\n    if (this.system.atWill) return false;\n    return true;\n  }\n\n  /** @inheritdoc */\n  get hasFiniteCharges() {\n    if (this.system.atWill) return false;\n    return this.getDefaultChargeCost() > 0;\n  }\n\n  /** @inheritDoc */\n  get charges() {\n    return this.getSpellUses();\n  }\n\n  /** @inheritDoc */\n  get maxCharges() {\n    return this.getSpellUses(true);\n  }\n\n  /**\n   * Get default charge cost for spell actions.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - Default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    if (this.system.atWill) return 0;\n\n    if (this.useSpellPoints()) {\n      rollData ??= this.getRollData();\n      const formula = this.getDefaultChargeFormula();\n      return RollPF.safeRollSync(formula, rollData).total;\n    } else {\n      return super.getDefaultChargeCost({ rollData });\n    }\n  }\n\n  /** @inheritDoc */\n  getDefaultChargeFormula() {\n    if (this.useSpellPoints()) {\n      return this.system.spellPoints?.cost || game.settings.get(\"pf1\", \"spellPointCost\") || \"0\";\n    } else {\n      return super.getDefaultChargeFormula();\n    }\n  }\n\n  /**\n   * @remarks\n   * - Recharging individual spells for spell point, spontaneous, or hybrid spellbooks has no effect.\n   * @override\n   * @inheritDoc\n   */\n  // eslint-disable-next-line no-unused-vars\n  async recharge({ value, period = \"day\", exact = false, maximize = true, commit = true, rollData, context } = {}) {\n    const spellbook = this.spellbook,\n      mode = spellbook?.spellPreparationMode || \"prepared\";\n\n    // Can not recharge non-prepared spellbooks\n    if (mode !== \"prepared\") return;\n\n    // Spellpoints are not on spells\n    if (spellbook?.spellPoints?.useSystem ?? false) return;\n\n    if (period == \"week\") {\n      // Spells do not recharge per week\n      if (exact) return;\n      // When not recharging with exact period, downgrade to \"day\" which is normal spell restoration period\n      period = \"day\";\n    }\n\n    // Spells do not restore on non-day period\n    if (![\"day\", \"any\"].includes(period)) return;\n\n    const prep = this.system.preparation ?? {};\n\n    // No specific value given\n    maximize = !(Number.isFinite(value) && value >= 0);\n\n    // Set value\n    if (maximize) value = prep.max || 0;\n    // Clamp charge value\n    value = Math.clamp(value, 0, prep.max || 0);\n\n    // Cancel pointless or bad update\n    if (value === (prep.value || 0) || !Number.isFinite(value)) return;\n\n    const updateData = { system: { preparation: { value } } };\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * Effective spell level\n   *\n   * @remarks\n   * - Accounts for offset\n   *\n   * @type {number}\n   */\n  get spellLevel() {\n    return this.system.level + (this.system.slOffset || 0);\n  }\n\n  /**\n   * Effective caster level\n   *\n   * @remarks\n   * - Accounts for offset\n   * - Returns null if not linked to a valid spellbook.\n   *\n   * @type {number|null}\n   */\n  get casterLevel() {\n    const spellbook = this.spellbook;\n    if (!spellbook) return null;\n\n    return spellbook.cl.total + (this.system.clOffset || 0);\n  }\n\n  /**\n   * Linked spellbook\n   *\n   * @type {object|undefined}\n   */\n  get spellbook() {\n    const bookId = this.system.spellbook;\n    return this.actor?.system.attributes?.spells.spellbooks[bookId];\n  }\n\n  /**\n   * Number of remaining uses, or max.\n   *\n   * @param {boolean} max - Return max uses.\n   * @returns {number} - Uses\n   */\n  getSpellUses(max = false) {\n    const itemData = this.system;\n    if (itemData.atWill) return Number.POSITIVE_INFINITY;\n\n    const spellbook = this.spellbook;\n\n    const isSpontaneous = spellbook?.spontaneous ?? false,\n      spellLevel = itemData.level;\n\n    const maxPrepared = itemData.preparation?.max ?? 0,\n      prepared = itemData.preparation?.value ?? 0;\n\n    if (this.useSpellPoints()) {\n      if (prepared > 0) {\n        if (max) return Math.max(spellbook.spellPoints?.max ?? 0, prepared);\n        return spellbook.spellPoints?.value ?? 0;\n      }\n    } else if (isSpontaneous) {\n      if (prepared > 0) {\n        if (max) return Math.max(spellbook.spells?.[`spell${spellLevel}`]?.max || 0, prepared);\n        return spellbook.spells?.[`spell${spellLevel}`]?.value || 0;\n      }\n    } else {\n      if (max) return maxPrepared;\n      return prepared;\n    }\n\n    return 0;\n  }\n\n  /** @returns {boolean} - Whether the attached spellbok uses spell points */\n  useSpellPoints() {\n    return this.spellbook?.spellPoints?.useSystem ?? false;\n  }\n\n  /**\n   * Spell components\n   *\n   * @example\n   * Example with Discern Lies on Cleric\n   * ```js\n   * spell.getSpellComponents(); // => [\"V\", \"S\", \"M/DF\"]\n   * ```\n   * Same with compacted components\n   * ```js\n   * spell.getSpellComponents({compact:true}); // => [\"V\",\"S\", \"DF\"]\n   * ```\n   *\n   * @param {object} options - Additional options\n   * @param {boolean} [options.compact] - Remove redundant components (e.g. M/DF becomes DF for divine caster)\n   * @returns {string[]} - Component keys\n   */\n  getSpellComponents({ compact = false } = {}) {\n    const reSplit = pf1.config.re.traitSeparator,\n      srcComponents = this.system.components ?? {},\n      srcMaterials = this.system.materials ?? {};\n\n    const kind = this.spellbook?.kind,\n      //isArcane = kind === \"arcane\",\n      //isPsychic = kind === \"psychic\",\n      //isAlchemical = kind === \"alchemy\",\n      isDivine = kind === \"divine\";\n\n    const components = [];\n    const labels = pf1.config.spellComponents;\n\n    if (srcComponents.verbal) components.push(labels.verbal);\n    if (srcComponents.somatic) components.push(labels.somatic);\n    if (srcComponents.thought) components.push(labels.thought);\n    if (srcComponents.emotion) components.push(labels.emotion);\n\n    // Reverse mapping of pf1.config.divineFocus for readability\n    const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n\n    let df = srcComponents.divineFocus;\n\n    // Display focus and material only if they aren't overridden by DF variant\n    if (isDivine && df === dfVariants.MDF && compact) {\n      // Downgrade to DF since material is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.material) {\n      let material = labels.material;\n      // Display indeterminate M/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.MDF) material = `${material}/${labels.divineFocus}`;\n      if (srcMaterials.value && !compact) material = `${material} (${srcMaterials.value})`;\n      if (material) components.push(material);\n    }\n\n    if (isDivine && df === dfVariants.FDF && compact) {\n      // Downgrade to DF since focus is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.focus) {\n      let focus = labels.focus;\n      // Display indeterminate F/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.FDF) focus = `${focus}/${labels.divineFocus}`;\n      if (srcMaterials.focus && !compact) focus = `${focus} (${srcMaterials.focus})`;\n      if (focus) components.push(focus);\n    }\n\n    if (df === dfVariants.DF) components.push(labels.divineFocus);\n    if (labels.value) components.push(...srcComponents.value.split(reSplit));\n\n    return components;\n  }\n\n  /**\n   * @param {object} itemData - A spell item's data.\n   * @returns {[number,number]} - A tuple containing the spell level and caster level in order.\n   */\n  static getMinimumCasterLevelBySpellData(itemData) {\n    const learnedAt = Object.entries(itemData.system.learnedAt?.class ?? {})?.reduce((cur, [classId, level]) => {\n      const classes = classId.split(\"/\");\n      for (const cls of classes) cur.push([cls, level]);\n      return cur;\n    }, []);\n    const result = [9, 20];\n    for (const [classId, level] of learnedAt) {\n      result[0] = Math.min(result[0], level);\n\n      const tc = pf1.config.classCasterType[classId] || \"high\";\n      if (tc === \"high\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 2);\n      } else if (tc === \"med\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 3);\n      } else if (tc === \"low\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level) * 3);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Used in consumable creation\n   *\n   * @internal\n   * @param {string} string - String to convert\n   * @param {object} rollData - Roll data instance\n   * @returns {string} - Converted string\n   */\n  static _replaceConsumableConversionString(string, rollData) {\n    return string\n      .replace(/@sl/g, `${rollData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}]`)\n      .replace(/@cl/g, \"@item.cl\")\n      .replace(/@ablMod/g, `${rollData.ablMod}[${game.i18n.localize(\"PF1.AbilityScore\")}]`);\n  }\n\n  /**\n   * Convert spell into a consumable item.\n   *\n   * @param {object} origData - Spell item data\n   * @param {\"wand\"|\"scroll\"|\"potion\"} type - Consumable type\n   * @param {object} [options] - Additional options\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @returns {Promise<object|null>} - Item data for appropriate consumable, or null if dialog option was used and it was cancelled.\n   */\n  static async toConsumable(origData, type, { spellType = \"arcane\" } = {}) {\n    const isWand = type === \"wand\",\n      isPotion = type === \"potion\",\n      isScroll = type === \"scroll\";\n\n    const [minLevel, minCl] = this.getMinimumCasterLevelBySpellData(origData);\n    const level = origData.sl ?? minLevel ?? 1;\n    const cl = origData.cl ?? minCl ?? 1;\n    const materialPrice = origData.system.materials?.gpValue ?? 0;\n\n    const itemData = {\n      type: \"consumable\",\n      name: origData.name,\n      system: {\n        subType: type,\n        spellType: origData.spellType || spellType,\n        description: {},\n        identified: origData.identified ?? true,\n        unidentified: {\n          name: origData.unidentifiedName || game.i18n.localize(`PF1.CreateItem${type.capitalize()}`),\n        },\n        cl, // Caster level\n        aura: { school: origData.system.school },\n        uses: { per: \"single\" },\n        price: 0,\n        hardness: 0,\n        hp: { value: 1, max: 1 },\n        actions: origData.system.actions ?? [],\n        sources: origData.system.sources ?? [],\n      },\n    };\n\n    // Add basic item type source as source for the consumable\n    const extraSources = {\n      wand: { id: \"PZO1110\", pages: \"496\" },\n      scroll: { id: \"PZO1110\", pages: \"490-491\" },\n      potion: { id: \"PZO1110\", pages: \"477-478\" },\n    };\n    const xsrc = extraSources[type];\n    if (xsrc) {\n      const osrc = itemData.system.sources.find((s) => s.id == xsrc.id);\n      if (osrc) {\n        // Merge pages when same source already exists\n        if (osrc.pages) osrc.pages += `, ${xsrc.pages}`;\n        else osrc.pages = xsrc.pages;\n      } else {\n        itemData.system.sources.push(xsrc);\n      }\n    }\n\n    // Initialize default action\n    if (itemData.system.actions.length == 0) itemData.system.actions.push(defaultAction);\n    const defaultAction = itemData.system.actions[0] ?? pf1.components.ItemAction({}, { parent: this }).toObject();\n    defaultAction.range ??= {};\n\n    // Prepare new action copying over with old data if present\n\n    // Override activation as required by consumables\n    defaultAction.activation.type = \"standard\";\n    defaultAction.activation.unchained.type = \"action\";\n    defaultAction.activation.unchained.cost = 2;\n\n    // Fill in pseudo roll data object\n    const rollData = {\n      item: origData.system,\n      ablMod: Math.floor(level / 2), // Minimum usable ability modifier\n      sl: level,\n      cl,\n    };\n\n    if (isWand) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemWandOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/wand-star.jpg\";\n      itemData.system.uses.pricePerUse =\n        Math.floor(((Math.max(0.5, level) * cl * 750) / 50) * 100) / 100 + materialPrice;\n      itemData.system.hardness = 5;\n      itemData.system.hp.max = 5;\n      itemData.system.hp.value = 5;\n      // Set charges\n      itemData.system.uses.maxFormula = \"50\";\n      itemData.system.uses.value = 50;\n      itemData.system.uses.max = 50;\n      itemData.system.uses.per = \"charges\";\n    } else if (isPotion) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemPotionOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Drink\");\n      itemData.img = \"systems/pf1/icons/items/potions/minor-blue.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 50 + materialPrice;\n      itemData.system.hardness = 1;\n    } else if (isScroll) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemScrollOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/scroll-magic.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 25 + materialPrice;\n    }\n\n    const convertNotes = (data, keys = []) => {\n      if (!data) return;\n\n      // Replace attack and effect formula data\n      for (const arrKey of keys) {\n        const arr = data[arrKey];\n        if (!arr) continue;\n        for (let idx = 0; idx < arr.length; idx++) {\n          arr[idx] = this._replaceConsumableConversionString(arr[idx], rollData);\n        }\n      }\n    };\n\n    // Adjust all actions\n    for (const action of itemData.system.actions) {\n      // Convert ranges\n      // Special handling for potions\n      if (isPotion && defaultAction === action) {\n        // BUG: This is wrong for oils\n        action.range.units = \"personal\";\n        delete action.range.value;\n      }\n\n      // Convert template\n      if (action.measureTemplate?.type) {\n        action.measureTemplate.size = this._replaceConsumableConversionString(action.measureTemplate.size, rollData);\n      }\n\n      // Convert extra attacks\n      const exAtk = action.extraAttacks;\n      if (exAtk) {\n        if (exAtk.formula?.count?.length)\n          exAtk.formula.count = this._replaceConsumableConversionString(exAtk.formula.count, rollData);\n        if (exAtk.formula?.bonus?.length)\n          exAtk.formula.bonus = this._replaceConsumableConversionString(exAtk.formula.bonus, rollData);\n\n        for (const bAtk of exAtk.manual ?? []) {\n          bAtk.formula = this._replaceConsumableConversionString(bAtk.formula, rollData);\n        }\n      }\n\n      // Set damage formula\n      for (const dmgPart of action.damage?.parts ?? []) {\n        dmgPart.formula = this._replaceConsumableConversionString(dmgPart.formula, rollData);\n      }\n\n      // Set save\n      if (action.save?.type) {\n        const oldSaveDC = action.save.dc;\n        action.save.dc = `10 + ${origData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}] + ${Math.floor(\n          origData.sl / 2\n        )}[${game.i18n.localize(\"PF1.SpellcastingAbility\")}]`;\n        // Add DC offset\n        if (oldSaveDC?.length) action.save.dc += ` + (${oldSaveDC})[${game.i18n.localize(\"PF1.DCOffset\")}]`;\n      }\n\n      convertNotes(action.notes, [\"effect\", \"footer\"]);\n    }\n\n    convertNotes(itemData.system, [\"attackNotes\", \"effectNotes\"]);\n\n    // Set description\n    const spell = new Item.implementation(origData);\n    spell.reset();\n    // TODO: Make range and duration appear as inline rolls that scale on item CL?\n    const desc = await spell.getDescription({ charcard: false, header: true, body: true, rollData });\n    itemData.system.description.value = this._replaceConsumableConversionString(desc, rollData);\n\n    // Create and return synthetic item data\n    return new ItemPF(foundry.utils.expandObject(itemData)).toObject();\n  }\n\n  /**\n   * Open Consumable conversion dialog.\n   *\n   * Automatically calls {@link this.toConsumable} as appropriate.\n   *\n   * @param {object} itemData - Spell item data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.allowSpell=true] - Allow spell creation\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @param {object} [options.actor=undefined] - The actor the consumable is being created on.\n   * @returns {Promise<null|false|object>} - Returns null if cancelled, false if no conversion is to take place, or converted data.\n   */\n  static async toConsumablePrompt(itemData, { allowSpell = true, spellType = \"arcane\", actor = undefined } = {}) {\n    const [sl, cl] = CONFIG.Item.documentClasses.spell.getMinimumCasterLevelBySpellData(itemData);\n\n    const getFormData = (html) => {\n      if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n      const formData = foundry.utils.expandObject(new FormDataExtended(html.querySelector(\"form\")).object);\n      foundry.utils.mergeObject(itemData, formData);\n      // NaN check here to allow SL 0\n      if (Number.isNaN(itemData.sl)) itemData.sl = 1;\n      return itemData;\n    };\n\n    const createConsumable = (data, type) => this.toConsumable(data, type, { spellType: data.spellType });\n\n    const buttons = [\n      {\n        icon: \"fa-solid fa-prescription-bottle\",\n        label: game.i18n.localize(\"PF1.CreateItemPotion\"),\n        action: \"potion\",\n        default: true,\n        callback: (event, target, html) => createConsumable(getFormData(html), \"potion\"),\n      },\n      {\n        icon: \"fa-solid fa-scroll\",\n        label: game.i18n.localize(\"PF1.CreateItemScroll\"),\n        action: \"scroll\",\n        callback: (event, target, html) => createConsumable(getFormData(html), \"scroll\"),\n      },\n      {\n        icon: \"fa-solid fa-magic\",\n        label: game.i18n.localize(\"PF1.CreateItemWand\"),\n        action: \"wand\",\n        callback: (event, target, html) => createConsumable(getFormData(html), \"wand\"),\n      },\n    ];\n\n    if (allowSpell) {\n      buttons.push({\n        icon: \"fa-solid fa-hand-sparkles\",\n        label: game.i18n.localize(\"TYPES.Item.spell\"),\n        action: \"spell\",\n        callback: () => false,\n      });\n    }\n\n    const fields = foundry.data.fields;\n\n    return foundry.applications.api.DialogV2.wait({\n      window: { title: game.i18n.format(\"PF1.CreateItemForSpell\", { name: itemData.name }) },\n      position: {\n        width: \"auto\",\n        height: \"auto\",\n      },\n      classes: [\"pf1-v2\", \"create-consumable\"],\n      content: await renderTemplate(\"systems/pf1/templates/internal/create-consumable.hbs\", {\n        name: itemData.name,\n        sl,\n        cl,\n        isGM: game.user.isGM,\n        spellType,\n        fields: {\n          sl: new fields.NumberField({ min: 0, integer: true }),\n          cl: new fields.NumberField({ min: 1, integer: true }),\n          spellType: new fields.StringField({ choices: pf1.config.spellcasting.spells }),\n          identified: new fields.BooleanField({ initial: actor?.type === \"character\" }),\n          unidentifiedName: new fields.StringField(),\n        },\n        // We assume every other check done at `ActorSheetPF._alterDropItemData` has passed\n        isNPC: actor?.type === \"npc\",\n      }),\n      itemData,\n      buttons,\n      close: () => null,\n      rejectClose: false,\n    });\n  }\n\n  /**\n   * @remarks\n   * Checks for at-will and preparation status.\n   * @inheritDoc\n   */\n  get canUse() {\n    if (this.system.atWill) return true;\n\n    return (this.system.preparation?.value ?? 0) > 0;\n  }\n\n  /**\n   * Determine if this spell is domain/school spell.\n   *\n   * @type {boolean}\n   */\n  get isDomain() {\n    return this.system.domain === true;\n  }\n\n  /** @inheritDoc */\n  async getDescription({ chatcard = false, data = {}, rollData, header = true, body = true, isolated = false } = {}) {\n    const headerContent = header\n      ? renderCachedTemplate(\"systems/pf1/templates/items/headers/spell-header.hbs\", {\n          ...data,\n          ...(await this.getDescriptionData({ rollData, isolated })),\n          chatcard: chatcard === true,\n        })\n      : \"\";\n\n    let bodyContent = \"\";\n    if (body) {\n      const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n      bodyContent = `<div class=\"description-body\">` + (this.system.description.value || noDesc) + \"</div>\";\n    }\n\n    let separator = \"\";\n    if (header && body) separator = `<h3 class=\"description-header\">${game.i18n.localize(\"PF1.Description\")}</h3>`;\n\n    return headerContent + separator + bodyContent;\n  }\n\n  /** @inheritDoc */\n  async getDescriptionData({ rollData, isolated = false } = {}) {\n    const result = await super.getDescriptionData({ rollData, isolated });\n\n    const system = this.system;\n    result.system = system;\n\n    const defaultAction = this.defaultAction;\n    const action = defaultAction ?? {};\n\n    rollData ??= defaultAction?.getRollData() ?? this.getRollData();\n\n    const labels = this.getLabels({ rollData, isolated });\n    result.labels = labels;\n\n    labels.school = pf1.config.spellSchools[system.school];\n    labels.subschool = pf1.utils.i18n.join([...(system.subschool.names ?? [])]);\n    labels.descriptors = pf1.utils.i18n.join([...(system.descriptors.names ?? [])], \"conjunction\", false);\n\n    // Set information about when the spell is learned\n    result.learnedAt = {};\n    if (system.learnedAt) {\n      const classNames = await pf1.utils.packs.getClassIDMap();\n      for (const category of [\"class\", \"domain\", \"subDomain\", \"elementalSchool\", \"bloodline\"]) {\n        result.learnedAt[category] = pf1.utils.i18n.join(\n          Object.entries(system.learnedAt[category]).map(\n            ([classId, level]) => `${classNames[classId] || classId} ${level}`\n          )\n        );\n      }\n    }\n\n    // Set components label\n    labels.components = pf1.utils.i18n.join(this.getSpellComponents());\n\n    // Set effect label\n    const effect = action.effect;\n    if (effect) labels.effect = effect;\n\n    // Set DC and SR\n    {\n      const savingThrowDescription = action.save?.description;\n      labels.savingThrow = savingThrowDescription || game.i18n.localize(\"PF1.None\");\n\n      const sr = system.sr;\n      labels.sr = (sr === true ? game.i18n.localize(\"PF1.Yes\") : game.i18n.localize(\"PF1.No\")).toLowerCase();\n\n      if (action.range?.units !== \"personal\") result.useDCandSR = true;\n    }\n\n    const harmless = action.save?.harmless ?? false;\n    if (harmless) labels.harmless = game.i18n.localize(\"PF1.Yes\").toLowerCase();\n\n    return result;\n  }\n\n  /**\n   * Number of slots the spell takes to prepare.\n   *\n   * Quick access to .system.slotCost with additional considerations such as at-will toggle.\n   *\n   * Defaults to 1 if the data is not present, 0 if the spell is at-will.\n   *\n   * @type {number}\n   */\n  get slotCost() {\n    if (this.system.atWill) return 0;\n    return this.system.slotCost ?? 1;\n  }\n\n  /**\n   * Concentration DC\n   *\n   * @param {string} type - Type of concentration check\n   * @param {object} [options] - Additional options\n   * @throws {Error} - If type is invalid\n   * @returns {number} - DC\n   */\n  getConcentrationDC(type = \"defensive\", options = {}) {\n    const level = this.system.level || 0;\n    switch (type) {\n      // Defensive Casting\n      case \"defensive\": {\n        return 15 + level * 2;\n      }\n      // Maintain spell on damage taken\n      case \"damage\": {\n        const damage = options.damage ?? 0;\n        return 15 + level + damage;\n      }\n      // Default nonsense value\n      default: {\n        throw new Error(`Unrecgnized concentration check type: \"${type}\"`);\n      }\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Weapon item\n */\nexport class ItemWeaponPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set weapon subtype if not present\n    const newWeaponType = changed.system?.subType;\n    if (newWeaponType != null && newWeaponType !== this.system.subType) {\n      const subtype = changed.system.weaponSubtype ?? this.system.weaponSubtype ?? \"\";\n      const keys = Object.keys(pf1.config.weaponTypes[newWeaponType]).filter((o) => !o.startsWith(\"_\"));\n      if (!subtype || !keys.includes(subtype)) {\n        changed.system.weaponSubtype = keys[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const { weaponTypes } = pf1.config;\n\n    // Type and subtype labels\n    let wType = this.system.subType;\n    const typeKeys = Object.keys(weaponTypes);\n    if (!typeKeys.includes(wType)) wType = typeKeys[0];\n\n    let wSubtype = this.system.weaponSubtype;\n    const subtypeKeys = Object.keys(weaponTypes[wType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(wSubtype)) wSubtype = subtypeKeys[0];\n\n    labels.subType = weaponTypes[wType]._label;\n    labels.childType = weaponTypes[wType][wSubtype];\n\n    labels.properties = [\n      ...Object.entries(this.system.properties ?? {})\n        .filter(([_, enabled]) => enabled)\n        .map(([id]) => pf1.config.weaponProperties[id] || id),\n    ];\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    super.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    if (this.showUnidentifiedData) return;\n\n    if (labels.weaponSubtype) props.push(labels.weaponSubtype);\n  }\n\n  /** @inheritDoc */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Weapons do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /** @inheritDoc */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks\n   * Not 100% RAW correct as this applies armor table to weapons,\n   * but since Paizo did not provide a table for weapons\n   * besides stating weapons for small are half weight, we assume they use the same table.\n   *\n   * @see {@link pf1.documents.item.ItemEquipmentPF.getWeightMultiplier}\n   */\n  getWeightMultiplier() {\n    // Use same as armor, even though Paizo has only stats for halving for small and nothing else.\n    return this._getArmorWeightMultiplier();\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Implant item\n *\n * Cybernetics, magic tattoos, necrografts, demonic implants, piercings, etc.\n */\nexport class ItemImplantPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /** @override */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.implanted === true) {\n      this.executeScriptCalls(\"implant\", { implanted: true });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.implanted === true) {\n        this.executeScriptCalls(\"implant\", { implanted: false });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'implant' script calls\n    const implanted = changed.system?.implanted;\n    if (implanted != null) {\n      this.executeScriptCalls(\"implant\", { implanted });\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.implanted;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.implantTypes[this.subType];\n\n    switch (this.subType) {\n      case \"cybertech\":\n        labels.slot = pf1.config.implantSlots.cybertech[this.system.slot] ?? pf1.config.implantSlots.cybertech.none;\n        break;\n    }\n\n    const checkYes = '<i class=\"fa-solid fa-check\"></i>';\n    const checkNo = '<i class=\"fa-solid fa-times\"></i>';\n    labels.equipped = this.system.implanted ? checkYes : checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    // Everything in containers count as carried\n    this.system.carried = true;\n\n    // Auto-unimplant\n    this.system.implanted = false;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    super.prepareWeight();\n\n    // Implanted items weigh nothing\n    const itemData = this.system;\n    const weight = itemData.weight;\n    if (itemData.implanted) {\n      weight.total = 0;\n      weight.converted.total = 0;\n\n      // If there's more than 1 in stack, restore part of the weight\n      if (itemData.quantity > 1) {\n        // Partial duplication from base physical item\n        const baseWeight = weight.value * this.getWeightMultiplier();\n        weight.total = baseWeight * (itemData.quantity - 1);\n        weight.converted.total = pf1.utils.convertWeight(weight.total);\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    if (this.system.quantity <= 0) return false;\n    if (this.subType === \"cybertech\" && this.system.disabled) return false;\n    return this.system.implanted || false;\n  }\n\n  /**\n   * Determines if the item implanted.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.implanted || false;\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.implanted\": active }, context);\n  }\n}\n","/**\n * ID field.\n *\n * Validates the field contents are alphanumeric string as expected of document IDs.\n */\nexport class IDField extends foundry.data.fields.StringField {\n  constructor(options = {}, context) {\n    if (options.choices) throw new Error(\"choices is not valid option for IDField\");\n    super(options, context);\n  }\n\n  static get _defaults() {\n    const defaults = super._defaults;\n    defaults.required = true;\n    defaults.nullable = false;\n    defaults.blank = false;\n    defaults.readonly = true;\n    defaults.initial = () => foundry.utils.randomID(16);\n    return defaults;\n  }\n\n  _validateType(value) {\n    if (typeof value !== \"string\") throw new Error(\"must be a string\");\n    if (!/^[a-z\\d]+$/i.test(value)) throw new Error(\"must be alphanumeric\");\n  }\n}\n","/**\n * DataModel that performs automatic data preparation\n *\n * Calls {@link prepareData()} on initialization and on {@link reset()}\n */\nexport class PreparedModel extends foundry.abstract.DataModel {\n  /**\n   * @override\n   * @protected\n   * @param {object} options - Constructor options\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n\n    this._safePrepareData();\n  }\n\n  /**\n   * Safely prepare data\n   *\n   * @internal\n   */\n  _safePrepareData() {\n    try {\n      this.prepareData();\n    } catch (err) {\n      console.error(err, this, { parent: this.parent });\n    }\n  }\n\n  /**\n   * Prepare data after initialization or reset.\n   *\n   * @abstract\n   * @protected\n   */\n  prepareData() {}\n}\n","import { PreparedModel } from \"./prepared-model.mjs\";\n\nimport { IDField } from \"@datafields/id-field.mjs\";\n\n/**\n * DataModel to mimic basic document-like behaviour.\n *\n * Calls {@link prepareData()} on initialization and on {@link reset()}\n *\n * Also handles `_id` nicely.\n */\nexport class DocumentLikeModel extends PreparedModel {\n  static defineSchema(options) {\n    const fields = foundry.data.fields;\n    return {\n      _id: new IDField(),\n      name: new fields.StringField({\n        required: true,\n        blank: false,\n        nullable: false,\n        initial: options.name,\n      }),\n    };\n  }\n\n  /**\n   * Internal ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n}\n","/**\n * Base model for Active Effects\n *\n * Active Effect type: `base` (the default when unspecified)\n */\nexport class AEBaseModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      // End timing\n      end: new fields.StringField({\n        required: false,\n        blank: false,\n        choices: () => pf1.config.durationEndEvents,\n        label: \"PF1.DurationEndTiming\",\n      }),\n      // Initiative this AE was started on\n      initiative: new fields.NumberField({\n        required: false,\n        initial: undefined, // HACK: Without unlinked actors start erroring about nulls\n        nullable: false,\n        label: \"PF1.Initiative\",\n      }),\n      // Arbitrary level\n      level: new fields.NumberField({\n        required: false,\n        initial: undefined, // HACK: Without unlinked actors start erroring about nulls\n        integer: true,\n        nullable: false,\n        label: \"PF1.Level\",\n      }),\n    };\n  }\n\n  /**\n   * Retrieve parent item\n   *\n   * @type {Item|null}\n   */\n  get item() {\n    const doc = this.parent?.parent;\n    if (doc instanceof Item) return doc;\n    return null;\n  }\n}\n","import { AEBaseModel } from \"./ae-base.mjs\";\n\n/**\n * Buff tracking Active Effect.\n *\n * Active Effect type: `buff`\n */\nexport class AEBuffModel extends AEBaseModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      // Nothing here yet\n    };\n  }\n\n  /** @override */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Tracker does not support disabling\n    if (data.disabled) this.parent.updateSource({ disabled: false });\n  }\n\n  /** @override */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // Buff trackers do not support disabling themselves.\n    delete changed.disabled;\n  }\n\n  /** @override */\n  async _preDelete(context, user) {\n    await super._preDelete(context, user);\n\n    // Tracker AE can not be deleted while parent item is active\n    if (this.item?.isActive) return false;\n  }\n\n  /**\n   * Is this item tracking AE\n   *\n   * @remarks\n   * - There should be only one AE with this true per item.\n   *\n   * @type {boolean}\n   */\n  get isTracker() {\n    // This being false is an error of some kind.\n    return !!this.item;\n  }\n}\n","/**\n * Compacting Mixin\n *\n * Provides framework for automatic data pruning.\n *\n * @param {T} Base - Base datamodel\n * @returns {T} - Enriched class\n */\nexport const CompactingMixin = (Base) =>\n  class extends Base {\n    /** @override */\n    toObject(source = true, clean = true) {\n      const data = super.toObject(source);\n\n      if (clean) this.constructor.pruneData(data);\n\n      return data;\n    }\n\n    /**\n     * Prune data\n     *\n     * @abstract\n     * @protected\n     * @param {object} data - Source data to prune\n     * @returns {void}\n     */\n    // eslint-disable-next-line no-unused-vars\n    static pruneData(data) {}\n  };\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\nexport class DamagePartModel extends CompactingMixin(foundry.abstract.DataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      formula: new FormulaField(),\n      types: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n    };\n  }\n\n  static migrateData(source) {\n    // Since v11, merge standard and custom type IDs into single array.\n    if (!source.types && source.type) {\n      source.types = source.type?.values ?? [];\n\n      if (typeof source.type?.custom === \"string\" && source.type.custom.length) {\n        source.types.push(source.type.custom.split(\";\").map((t) => t.trim()));\n      }\n    }\n\n    return super.migrateData(source);\n  }\n\n  _initialize(options) {\n    super._initialize(options);\n\n    Object.defineProperty(this, \"type\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\"DamagePartModel.type is deprecated in favor of DamagePartModel.types\", {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        });\n\n        const full = this.parsed;\n        return {\n          values: [...full.standard].map((d) => d.id),\n          custom: [...full.custom].join(\";\"),\n        };\n      },\n    });\n  }\n\n  /**\n   * Prune data\n   *\n   * @param {object} data - Damage part data\n   */\n  static pruneData(data) {\n    if (!data.formula) delete data.formula;\n    data.types = data.types?.map((t) => t.trim()).filter((t) => !!t);\n    if (!data.types?.length) delete data.types;\n  }\n\n  /**\n   * Parsed types\n   *\n   * @type {{standard:Set<pf1.registry.DamageType>,custom:Set<string>}}\n   */\n  get parsed() {\n    // TODO: Cache this?\n\n    const result = {\n      standard: new Set(),\n      custom: new Set(),\n      get all() {\n        return [...this.standard, ...this.custom];\n      },\n    };\n    for (const type of this.types) {\n      const d = pf1.registry.damageTypes.get(type);\n      if (d) {\n        result.standard.add(d);\n      } else {\n        result.custom.add(type);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parsed names of all types\n   *\n   * @type {Array<string>}\n   */\n  get names() {\n    return this.parsed.all.map((dt) => dt.name || dt);\n  }\n\n  /**\n   * Standard types\n   *\n   * @type {Set<pf1.registry.DamageType>}\n   */\n  get standard() {\n    return this.parsed.standard;\n  }\n\n  /**\n   * Custom types\n   *\n   * @type {Set<string>}\n   */\n  get custom() {\n    return this.parsed.custom;\n  }\n}\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Manual Extra Attack data model\n */\nexport class ExtraAttackModel extends CompactingMixin(foundry.abstract.DataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      name: new fields.StringField(),\n      formula: new FormulaField(),\n    };\n  }\n\n  static migrateData(source) {\n    // Convert very old tuple format\n    if (Array.isArray(source)) {\n      const [formula, name] = source;\n      source = { formula, name };\n    }\n\n    return super.migrateData(source);\n  }\n\n  /** @override */\n  static pruneData(data) {\n    if (!data.formula) delete data.formula;\n    if (!data.name) delete data.name;\n  }\n}\n","/**\n * Replaceable Source Mixin\n *\n * Adds function to the data model to replace source data.\n *\n * @see {@link https://github.com/foundryvtt/foundryvtt/issues/11792}\n *\n * @param {T} Base - Base datamodel\n * @returns {T} - Enriched class\n */\nexport const ReplaceableSourceMixin = (Base) =>\n  class extends Base {\n    /**\n     * Replace datamodel source\n     *\n     * @param {object} source - New source\n     * @returns {object} - Result of DataModel.updateSource()\n     */\n    replaceSource(source) {\n      source = foundry.utils.deepClone(source); // Prevent mutations to source data\n\n      this.constructor.migrateData(source);\n\n      // Clear values not present in new data\n      // Does not do deep comparisons\n      for (const [key, schema] of Object.entries(this.schema.fields)) {\n        if (schema.readonly) continue;\n        if (key in source) continue;\n        if (key in this._source) {\n          source[key] = undefined; // Delete syntax does not work here\n        }\n      }\n\n      return this.updateSource(source); // recursive:false,diff:false does not work here\n    }\n  };\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nexport class BaseMessageModel extends CompactingMixin(foundry.abstract.TypeDataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const nonEmpty = { initial: undefined, blank: false, nullable: false }; // Either undefined or something, not something but nothing\n    return {\n      subject: new fields.ObjectField(), // Message subject data\n      reference: new fields.StringField({ ...nonEmpty }), // UUID reference to whatever prompted this message\n      combat: new fields.StringField(), // Combat ID\n      config: new fields.ObjectField(), // Details about the message use scenario\n    };\n  }\n\n  static pruneData(data) {\n    for (const [key, sv] of Object.entries(data.subject ?? {})) {\n      if (typeof sv === \"object\") delete data.subject[key];\n    }\n    if (foundry.utils.isEmpty(data.subject)) delete data.subject;\n    if (!data.reference) delete data.reference;\n    if (!data.combat) delete data.combat;\n    if (foundry.utils.isEmpty(data.config)) delete data.config;\n  }\n\n  /**\n   * Additional shim for metadata shim\n   *\n   * @deprecated - Use `msg.system.config.rank` instead.\n   * @returns {{rank:number}} - Skill data\n   */\n  get skill() {\n    foundry.utils.logCompatibilityWarning(\n      \"ChatMessagePF.flags.pf1.metadata.skill.rank has been deprecated in favor of ChatMessagePF.system.config.rank\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return {\n      rank: this.config.rank,\n    };\n  }\n}\n","import { BaseMessageModel } from \"./base-message.mjs\";\n\n/**\n * Data Model for item cards.\n */\nexport class ItemMessageModel extends BaseMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      actor: new fields.StringField(), // Actor UUID (is this actually ever different from card speaker?)\n      template: new fields.StringField(), // Template UUID\n      item: new fields.SchemaField({\n        id: new fields.StringField(), // Item ID,\n        name: new fields.StringField(),\n        description: new fields.HTMLField(),\n        identified: new fields.BooleanField({ initial: true }),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (typeof source.item === \"string\") {\n      source.item = { id: source.item };\n    }\n\n    return super.migrateData(source);\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (!data.actor) delete data.actor;\n    if (!data.template) delete data.template;\n\n    if (data.item) {\n      if (!data.item.id) delete data.item.id;\n      if (data.item.identified) delete data.item.identified;\n      if (!data.item.description) delete data.item.description;\n      if (!data.item.name) delete data.item.name;\n\n      if (foundry.utils.isEmpty(data.item)) delete data.item;\n    }\n  }\n}\n","import { ItemMessageModel } from \"./item-message.mjs\";\n\n/**\n * Data Model for action cards.\n */\nexport class ActionMessageModel extends ItemMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const nonEmpty = { initial: undefined, blank: false, nullable: false }; // Either undefined or something, not something but nothing\n\n    return {\n      ...super.defineSchema(),\n      config: new fields.SchemaField({\n        critMult: new fields.NumberField({ initial: undefined, min: 1, step: 1, integer: true }),\n        nonlethal: new fields.BooleanField({ initial: false, required: false }),\n        cl: new fields.NumberField({ initial: undefined, required: false, integer: true, min: 0 }),\n        sl: new fields.NumberField({ initial: undefined, required: false, integer: true, min: 0 }),\n      }),\n      rolls: new fields.ObjectField(),\n      targets: new fields.ArrayField(new fields.StringField({ ...nonEmpty })),\n      action: new fields.SchemaField({\n        id: new fields.StringField(), // Action ID\n        name: new fields.StringField(),\n        description: new fields.HTMLField(),\n      }),\n      save: new fields.SchemaField(\n        {\n          dc: new fields.NumberField({ initial: undefined, integer: true, nullable: false }),\n          type: new fields.StringField(),\n        },\n        { initial: undefined, required: false }\n      ),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source) return;\n\n    // Old flag metadata\n    if (typeof source.action === \"string\") {\n      source.action = { id: source.action };\n    }\n\n    // PF1 v11.3\n    if (source.action?.dc !== undefined) {\n      source.save ??= {};\n      source.save.dc ??= source.action?.dc;\n    }\n\n    return super.migrateData(source);\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    if (this.action) {\n      // @deprecated\n      Object.defineProperty(this.action, \"dc\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.system.action.dc is deprecated in favor of ChatMessagePF.system.save.dc\",\n            {\n              since: \"PF1 v11.3\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return this.save?.dc;\n        },\n      });\n    }\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (data.rolls) {\n      if (!(data.rolls.attacks?.length > 0)) delete data.rolls.attacks;\n      else {\n        for (const atk of data.rolls.attacks) {\n          if (!atk.critConfirm) delete atk.critConfirm;\n          if (!atk.critDamage?.length) delete atk.critDamage;\n          if (!atk.damage?.length) delete atk.damage;\n        }\n      }\n      if (foundry.utils.isEmpty(data.rolls)) delete data.rolls;\n    }\n\n    if (!data.targets?.length) delete data.targets;\n\n    if (data.config?.nonlethal === false) delete data.config?.nonlethal;\n    if (!Number.isFinite(data.config?.sl)) delete data.config?.sl;\n    if (!Number.isFinite(data.config?.cl)) delete data.config?.cl;\n\n    if (data.action) {\n      if (!data.action.id) delete data.action.id;\n      if (!data.action.description) delete data.action.description;\n      if (!data.action.name) delete data.action.name;\n      if (!Number.isFinite(data.action.dc)) delete data.action.dc;\n\n      if (foundry.utils.isEmpty(data.action)) delete data.action;\n    }\n\n    if (data.save?.dc === undefined) delete data.save;\n  }\n}\n","import { BaseMessageModel } from \"./base-message.mjs\";\n\n/**\n * Data Model for basic check cards.\n */\nexport class CheckMessageModel extends BaseMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      dc: new fields.NumberField({ initial: undefined, nullable: false, integer: true }),\n    };\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (typeof data.dc !== \"number\") delete data.dc;\n  }\n}\n","/**\n * Haunt actor data model\n */\nexport class HauntModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      attributes: new fields.SchemaField({\n        hp: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            nullable: false,\n          }),\n          offset: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            nullable: false,\n          }),\n        }),\n        init: new fields.SchemaField({\n          value: new fields.NumberField({\n            initial: 10,\n            integer: true,\n            nullable: false,\n          }),\n        }),\n      }),\n      templates: new fields.ArrayField(new fields.StringField({ blank: false })),\n      traits: new fields.SchemaField({\n        size: new fields.StringField({\n          required: true,\n          initial: \"med\",\n          choices: () => pf1.config.actorSizes,\n        }),\n      }),\n      details: new fields.SchemaField({\n        alignment: new fields.StringField({\n          required: true,\n          initial: \"tn\",\n          choices: () => pf1.config.alignments,\n        }),\n        area: new fields.SchemaField({\n          size: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            min: 0,\n            nullable: false,\n          }),\n          type: new fields.StringField({\n            initial: \"circle\",\n            required: true,\n            choices: () => pf1.utils.internal.getTemplateTypes(),\n          }),\n        }),\n        aura: new fields.SchemaField({\n          custom: new fields.BooleanField({\n            initial: false,\n          }),\n          school: new fields.StringField(),\n        }),\n        cl: new fields.NumberField({\n          initial: 1,\n          integer: true,\n          min: 1,\n          nullable: false,\n        }),\n        cr: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n          }),\n        }),\n        destruction: new fields.HTMLField(),\n        effect: new fields.HTMLField(),\n        notes: new fields.HTMLField(),\n        notice: new fields.SchemaField({\n          dc: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            min: 0,\n            nullable: false,\n          }),\n          desc: new fields.StringField(),\n          value: new fields.StringField(),\n        }),\n        reset: new fields.SchemaField({\n          value: new fields.StringField(),\n          units: new fields.StringField({\n            blank: true,\n            choices: () => pf1.config.timePeriods,\n          }),\n        }),\n        trigger: new fields.StringField(),\n        weakness: new fields.StringField(),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    // Migrate Alignment info\n    const alignment = source.details?.alignment?.toLowerCase();\n    if (alignment && Object.keys(pf1.config.alignments).includes(alignment)) {\n      source.details.alignment = alignment;\n    }\n\n    // Migrate Aura info\n    if (typeof source.details?.aura === \"string\") {\n      source.details.aura = {\n        custom: true,\n        school: source.details.aura,\n      };\n    }\n\n    // Migrate Area info\n    if (typeof source.details?.area === \"string\") {\n      source.details.area = {\n        size: source.details.area.match(/\\d+/)?.[0] ?? 0,\n        type: \"circle\",\n      };\n    }\n\n    // Migrate Reset info\n    if (typeof source.details?.reset === \"string\") {\n      source.details.reset = {\n        value: source.details.reset,\n        units: \"spec\",\n      };\n    }\n\n    // Migrate Notice info\n    if (typeof source.details?.notice === \"string\") {\n      source.details.notice = {\n        value: source.details.notice,\n        dc: 0,\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.details.notes = source.details.notes.value;\n    }\n  }\n}\n","/**\n * Trap actor data model\n */\nexport class TrapModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      bypass: new fields.StringField({\n        blank: true,\n        choices: () => pf1.config.traps.bypass,\n      }),\n      cr: new fields.SchemaField({\n        base: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n        }),\n      }),\n      disarm: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        min: 0,\n        nullable: false,\n      }),\n      duration: new fields.SchemaField({\n        value: new fields.StringField(),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      effect: new fields.HTMLField(),\n      notes: new fields.HTMLField(),\n      perception: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        min: 0,\n        nullable: false,\n      }),\n      reset: new fields.SchemaField({\n        type: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.reset,\n        }),\n        value: new fields.StringField(),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      trigger: new fields.SchemaField({\n        type: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.trigger,\n        }),\n        value: new fields.StringField(),\n        vision: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.vision,\n        }),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      type: new fields.StringField({\n        initial: \"mechanical\",\n      }),\n      technology: new fields.BooleanField({\n        initial: false,\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source.details) return;\n\n    // Migrate CR\n    if (source.details.cr) {\n      source.cr ??= {\n        base: source.details.cr.base,\n      };\n    }\n\n    // Migrate flat fields\n    [\"disarm\", \"effect\", \"perception\"].forEach((key) => {\n      if (source.details[key]) {\n        source[key] ??= source.details[key];\n      }\n    });\n\n    // Make sure the type is lowercase (actor breaks if type was \"Magic\" instead of \"magic\", for example)\n    if (source.details.type) {\n      const old = source.details.type;\n      for (const [key, value] of Object.entries(pf1.config.traps.types)) {\n        if (value === old) {\n          source.type ??= key;\n          break;\n        }\n      }\n      source.type ??= old;\n    }\n\n    // Migrate Duration\n    if (source.details.duration) {\n      source.duration ??= {\n        value: source.details.duration,\n        units: \"\",\n      };\n    }\n\n    // Migrate Reset\n    if (source.details.reset) {\n      source.reset ??= {\n        type: \"automatic\",\n        value: source.details.reset,\n        units: \"\",\n      };\n    }\n\n    // Migrate Trigger\n    if (source.details.trigger) {\n      source.duration ??= {\n        type: \"location\",\n        value: source.details.trigger,\n        units: \"\",\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.notes = source.details.notes.value;\n    }\n\n    // Clean up the Details\n    delete source.details;\n  }\n}\n","/**\n * Vehicle actor data model\n */\nexport class VehicleModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      attributes: new fields.SchemaField({\n        ac: new fields.SchemaField({\n          normal: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n          touch: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n          stopped: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n        }),\n        hardness: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n          bonus: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n          }),\n        }),\n        hp: new fields.SchemaField({\n          bonus: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n          offset: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n        }),\n        init: new fields.SchemaField({\n          value: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n        }),\n        savingThrows: new fields.SchemaField({\n          save: new fields.SchemaField({\n            base: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n              integer: true,\n            }),\n          }),\n        }),\n      }),\n      crew: new fields.SchemaField({\n        value: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          nullable: false,\n        }),\n        max: new fields.NumberField({\n          initial: 1,\n          integer: true,\n          min: 1,\n          nullable: false,\n        }),\n        passengers: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          nullable: false,\n        }),\n      }),\n      currency: new fields.SchemaField({\n        pp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        gp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        sp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        cp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n      }),\n      material: new fields.SchemaField({\n        base: new fields.StringField({}),\n        magicallyHardened: new fields.BooleanField({\n          initial: false,\n        }),\n      }),\n      squares: new fields.NumberField({\n        initial: 2,\n        integer: true,\n        min: 2,\n        nullable: false,\n      }),\n      traits: new fields.SchemaField({\n        size: new fields.StringField({\n          required: true,\n          initial: \"lg\",\n          choices: () => pf1.config.actorSizes,\n        }),\n        type: new fields.StringField({\n          required: true,\n          initial: \"land\",\n          choices: () => pf1.config.vehicles.type,\n        }),\n      }),\n      details: new fields.SchemaField({\n        carryCapacity: new fields.SchemaField({}),\n        acceleration: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        cost: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n        }),\n        currentSpeed: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        decks: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        description: new fields.HTMLField({}),\n        drivingCheck: new fields.StringField({}),\n        drivingDevice: new fields.StringField({}),\n        drivingSpace: new fields.StringField({}),\n        forwardFacing: new fields.StringField({}),\n        maxSpeed: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        propulsion: new fields.StringField({}),\n        notes: new fields.HTMLField(),\n      }),\n      driver: new fields.SchemaField({\n        skill: new fields.StringField(),\n        uuid: new fields.StringField(),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source.details) return;\n\n    // Migrate Hardess\n    if (typeof source.details.hardness === \"number\") {\n      source.attributes.hardness ??= {\n        base: source.details.hardness,\n        bonus: 0,\n      };\n\n      delete source.details.hardness;\n    }\n\n    // Migrate Crew\n    if (Number.isInteger(source.details.crew)) {\n      source.details.crew = {\n        value: source.details.crew,\n        max: source.details.crew,\n        passengers: 0,\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.details.notes = source.details.notes.value;\n    }\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\n\nconst affirmative = new Set([\"yes\", \"true\", \"1\", \"y\"]);\nconst negatory = new Set([\"no\", \"false\", \"0\", \"n\"]);\n\n/**\n * Basic item filter function for {@link findItem}\n *\n * @internal\n * @param {Item|object} item - Item or index entry to match\n * @param {object} query - Query data\n * @returns {boolean}\n */\nexport function matchItem(item, query) {\n  const { name, type } = query;\n  return item.name === name && (type ? item.type === type : true);\n}\n\n/**\n * Find item based on basic criteria.\n *\n * @internal\n * @param {string} name - Item name to search for\n * @param {object} [options] - Additional options\n * @param {string} [options.type] - Document type, such as \"buff\"\n * @returns {string|null} - Most appropriate matching item's UUID\n */\nexport async function findItem(name, { type } = {}) {\n  // Items directory has priority\n  const item = game.items.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n  if (item) return item.uuid;\n\n  const packTypePriority = {\n    items: 1_000,\n    world: 2_000,\n    module: 3_000,\n    system: 4_000,\n  };\n\n  // Sort packs by above criteria\n  const packs = [...game.packs]\n    .map((p) => ({\n      pack: p,\n      visible: p.visible ?? true,\n      disabled: p.config.pf1?.disabled ?? false,\n      sort: packTypePriority[p.metadata.packageType],\n    }))\n    .filter((p) => !p.disabled && p.visible && p.pack.metadata.type === \"Item\")\n    .sort((a, b) => a.sort - b.sort);\n\n  for (const { pack } of packs) {\n    if (!pack.indexed) await pack.getIndex();\n    const item = pack.index.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n    if (item) return item.uuid;\n  }\n\n  return null;\n}\n\n/**\n * Get most relevant roll data\n *\n * @param {ChatMessagePF} message\n * @returns {object} - Roll data\n */\nfunction getRollData(message) {\n  // Get action, item, or actor\n  let srcDoc = message.actionSource ?? message.itemSource;\n  srcDoc ??= message.speaker ? ChatMessage.getSpeakerActor(message.speaker) : null;\n  const rollData = srcDoc?.getRollData();\n\n  // Apply cached values\n  const cfg = message.system?.config;\n  if (cfg && rollData) {\n    if (cfg.cl !== undefined) rollData.cl = cfg.cl;\n    if (cfg.sl !== undefined) rollData.sl = cfg.sl;\n    if (cfg.critMult !== undefined) rollData.critMult = cfg.critMult;\n  }\n\n  return rollData;\n}\n\n/**\n * Helper class for making `CONFIG.TextEditor.enrichers` usage easier.\n */\nexport class PF1TextEnricher {\n  id;\n\n  pattern;\n\n  match;\n\n  enricher;\n\n  /**\n   * @abstract\n   * @param {Event} event Click event\n   * @param {HTMLElement} target Target element\n   */\n  click(event, target) {}\n\n  /**\n   * @abstract\n   * @param {Event} event Drag event\n   * @param {HTMLElement} target Target element\n   */\n  drag(event, target) {}\n\n  /**\n   * @param {string} id Unique identifier\n   * @param {RegExp} pattern Pattern for content matching.\n   * @param {Function} enricher Function for generating enriched content.\n   * @param {object} [interaction] Additional interaction options\n   * @param {string[]} [interaction.match] CSS selectors for triggering click or drag handler\n   * @param {Function} [interaction.click] Click handler\n   * @param {Function} [interaction.drag] Drag handler\n   */\n  constructor(id, pattern, enricher, { click, drag } = {}) {\n    if (!(pattern instanceof RegExp)) throw new Error(\"TextEnricher pattern must be a regular expression\");\n    if (!pattern.global) throw new Error(\"TextEnricher pattern must be global\");\n    this.id = id;\n    this.pattern = pattern;\n    this.enricher = enricher.bind(this);\n    if (click) this.click = click;\n    if (drag) this.drag = drag;\n  }\n}\n\n/**\n * @param {Element} el\n * @param {string} icon\n */\nfunction setIcon(el, icon) {\n  const i = document.createElement(\"i\");\n  i.inert = true;\n  i.classList.add(...icon.split(\" \"));\n  el.prepend(i, \" \");\n}\n\n/**\n * Parses duration string into distinct time and unit.\n *\n * @param {string} duration\n */\nfunction parseDuration(duration) {\n  const re = /^(?<time>\\d+)(?<unit>[a-z]+)?$/.exec(duration);\n  if (!re) return [];\n  const { time, unit } = re.groups;\n\n  const unitLabel = (() => {\n    switch (unit?.[0]?.toLowerCase()) {\n      default:\n      case \"r\":\n        return game.i18n.localize(\"PF1.Time.Period.round.Label\");\n      case \"s\":\n        return game.i18n.localize(\"PF1.Time.Period.second.Label\");\n      case \"h\":\n        return game.i18n.localize(\"PF1.Time.Period.hour.Label\");\n      case \"m\":\n        return game.i18n.localize(\"PF1.Time.Period.minute.Label\");\n    }\n  })();\n\n  return [parseInt(time), unit || \"r\", unitLabel];\n}\n\n/**\n * Create enriched element for interaction.\n *\n * @param {object} config - Element configuration\n * @param {string} [config.label] - Prefix label for the element\n * @param {string} [config.icon] - Font Awesome icon classes\n * @param {boolean} [config.click=false] - Is this a clickable element?\n * @param {boolean} [config.drag=false] - Is this draggable element?\n * @param {string} config.handler - {@link PF1TextEnricher} ID\n * @param {Record<string,string>} [config.options] - Additional options set as dataset elements.\n * @param {boolean} [config.broken=false] - Is this broken?\n * @returns {HTMLElement} - The element.\n */\nexport function createElement({ label, icon, click = false, drag = false, handler, options, broken = false } = {}) {\n  const a = document.createElement(\"a\");\n  if (click || drag) a.classList.add(\"pf1-link\");\n  else a.classList.add(\"pf1-info\");\n  if (click) a.classList.add(\"button\");\n  if (drag) {\n    a.classList.add(\"content\");\n    a.draggable = true;\n  }\n  if (icon) setIcon(a, icon);\n\n  if (label) a.append(label, \": \");\n  if (handler) a.dataset.handler = handler;\n\n  if (broken) a.classList.add(\"broken\");\n\n  setElementOptions(a, options);\n\n  a.dataset.tooltipClass = \"pf1\";\n\n  return a;\n}\n\n/**\n * Get card's speaker actor\n *\n * @param {HTMLElement} target\n * @param {ChatMessage} [message]\n * @returns {Actor|undefined}\n */\nfunction getSpeaker(target, message) {\n  const speaker = getSpeakerData(target, message);\n  if (!speaker) return;\n  return ChatMessage.implementation.getSpeakerActor(speaker);\n}\n\n/**\n * Get card's speaker data\n *\n * @param {HTMLElement} target - Element to search message card from.\n * @param {ChatMessage} [message]\n * @returns {object|undefined} - Message's speaker data or undefined\n */\nfunction getSpeakerData(target, message) {\n  message ??= getMessage(target);\n  return message?.speaker;\n}\n\n/**\n * Get Chat Message\n *\n * @param {HTMLElement} target\n * @returns {ChatMessagePF|undefined}\n */\nfunction getMessage(target) {\n  const messageId = target.closest(\"[data-message-id]\")?.dataset.messageId;\n  return game.messages.get(messageId);\n}\n\n/**\n * Get sheet actor\n *\n * @param {Element} target\n * @returns {Actor|undefined}\n */\nfunction getSheetActor(target) {\n  const appId = target.closest(\".app[data-appid]\")?.dataset.appid;\n  return ui.windows[appId]?.actor;\n}\n\n/**\n * Get relevant actors based on the enriched element data.\n *\n * @param {HTMLElement} button - Clicked element.\n * @param {boolean} required - Error if no actors are found.\n * @returns {Set<ActorPF>} - Relevant actors\n */\nexport function getRelevantActors(button, required = true) {\n  const actors = [];\n\n  const as = button.dataset.as || (button.dataset.speaker ? \"speaker\" : null);\n  const asSpeaker = as === \"speaker\";\n  const asSheet = as === \"sheet\";\n  const auto = [\"auto\", \"context\"].includes(as);\n\n  // Speaker\n  if (asSpeaker || auto) {\n    const actor = getSpeaker(button);\n    if (actor) actors.push(actor);\n  }\n\n  if (asSheet || auto) {\n    const actor = getSheetActor(button);\n    if (actor) actors.push(actor);\n  }\n\n  if (!as) {\n    // Controlled tokens\n    if (canvas.tokens.controlled.length) {\n      const tokenActors = canvas.tokens.controlled.map((t) => t.actor);\n      for (const actor of tokenActors) {\n        if (actor) actors.push(actor);\n      }\n    }\n    // Configured character\n    else {\n      const actor = game.user.character;\n      if (actor) actors.push(actor);\n    }\n  }\n\n  if (required && actors.length == 0) {\n    ui.notifications.error(game.i18n.localize(\"PF1.EnrichedText.Errors.NoActors\"), { console: false });\n    throw new Error(\"No valid actors found.\");\n  }\n\n  return new Set(actors);\n}\n\n/**\n * Add tooltip to enriched element.\n *\n * @param {Element} el Target element\n * @param {object} allowed -\n */\nexport function generateTooltip(el, allowed = {}) {\n  const { roll, formula, bonus, speaker, name, level, as, card, dc } = el.dataset;\n\n  const tooltip = [];\n  if (name) tooltip.push(name);\n  if (roll) {\n    if (/d\\d+/.test(roll)) tooltip.push(game.i18n.localize(\"PF1.Roll\") + `: ${roll}`);\n    else tooltip.push(game.i18n.format(\"PF1.TakeX\", { number: roll }));\n  } else if (formula) {\n    tooltip.push(formula);\n  }\n  if (level) tooltip.push(game.i18n.localize(\"PF1.Level\") + `: ${level}`);\n  if (bonus) tooltip.push(game.i18n.localize(\"PF1.Bonus\") + `: ${bonus}`);\n  if (speaker || as === \"speaker\") tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsSpeaker\"));\n  if (allowed.card) {\n    if (card) tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsCard\"));\n    else tooltip.push(game.i18n.localize(\"PF1.EnrichedText.Direct\"));\n  }\n\n  if (tooltip.length) el.dataset.tooltip = tooltip.join(\"<br>\");\n}\n\n/**\n * Break down options string into dataset properties.\n *\n * @internal\n * @param {Element} el Target element\n * @param {string} options Options string\n */\nexport function setElementOptions(el, options) {\n  if (!options) return;\n  for (const option of options.split(\";\")) {\n    const [key, value] = option.split(\"=\", 2);\n    if (el.dataset[key]) el.dataset[key] += \";\" + value;\n    else el.dataset[key] = value ?? true;\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSave(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { roll, bonus, type, dc } = target.dataset;\n  if (!type) throw new Error(\"No save type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n  if (dc) options.dc = parseInt(dc);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSavingThrow(type, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAbility(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { ability, bonus, roll } = target.dataset;\n  if (!ability) throw new Error(\"No ability check type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollAbilityTest(ability, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} _event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onDraw(_event, target) {\n  const { ident } = target.dataset;\n  if (!ident) throw new Error(\"No roll table defined\");\n\n  const table = await fromUuid(ident);\n  if (!table) throw new Error(`Roll table not found for \"${ident}\"`);\n  await table.draw({ roll: true, displayChat: true });\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSkill(event, target) {\n  // Add additional options\n  const options = {};\n  const { skill, bonus, roll, info, dc } = target.dataset;\n  if (!skill) throw new Error(\"No skill key defined\");\n\n  if (info) {\n    const journal = pf1.config.skillCompendiumEntries[skill];\n    if (!journal) throw new Error(`Journal entry not found for skill \"${skill}\"`);\n    return void pf1.utils.openJournal(journal);\n  }\n\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n  if (dc) options.dc = parseInt(dc);\n\n  const actors = getRelevantActors(target);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSkill(skill, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onUse(event, target) {\n  // Add additional options\n  const options = {};\n  const { type, item: itemName, action: actionIdent, speaker } = target.dataset;\n  if (!itemName) throw new Error(\"No item name defined\");\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    const item = actor.items.find((item) => {\n      if (type && item.type !== type) return false;\n      return item.name.localeCompare(itemName, undefined, { usage: \"search\" }) == 0;\n    });\n\n    if (!item) {\n      const msg = game.i18n.format(\"PF1.Warning.NoItemOnActor\", { actor: actor.name, item: itemName });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(\"PF1 | @Use |\", msg, actor);\n      continue;\n    }\n\n    let itemAction;\n    if (actionIdent) {\n      const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n      const { actionTag, actionId } = re?.groups ?? {};\n      const actionName = !actionTag && !actionId ? actionIdent : null;\n      itemAction = item.actions.find((act) => {\n        if (actionId) return act.id === actionId;\n        if (actionTag) return act.tag === actionTag;\n        return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n      });\n\n      if (!itemAction) {\n        const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, action: actionIdent });\n        ui.notifications.warn(msg, { console: false });\n        console.warn(\"PF1 | @Use |\", msg, actor);\n        continue;\n      }\n\n      itemAction.use();\n    } else {\n      item.use();\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAction(event, target) {\n  // Add additional options\n  const options = {};\n  const { action: actionIdent } = target.dataset;\n\n  const msgId = target.closest(\".chat-message[data-message-id]\")?.dataset.messageId;\n  const msg = game.messages.get(msgId);\n  const item = msg.itemSource;\n\n  if (!item) {\n    const warn = game.i18n.format(\"PF1.EnrichedText.Errors.NoItemInMessage\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.warn(\"PF1 | @Action |\", warn, msg);\n  }\n\n  const actor = item.actor;\n\n  const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n  const { actionTag, actionId } = re?.groups ?? {};\n  const actionName = !actionTag && !actionId ? actionIdent : null;\n\n  const action = item.actions.find((act) => {\n    if (actionId) return act.id === actionId;\n    if (actionTag) return act.tag === actionTag;\n    return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n  });\n\n  if (!action) {\n    const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, actor: actor.name });\n    ui.notifications.warn(msg, { console: false });\n    return void console.warn(\"PF1 | @Action |\", msg, actor);\n  }\n\n  action.use();\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onHealth(event, target) {\n  const { command, formula, speaker, nonlethal, wounds, vars, dual, card } = target.dataset;\n\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  if (nonlethal) options.asNonlethal = true;\n  if (affirmative.has(dual)) options.dualHeal = true;\n  if (wounds) options.asWounds = true;\n\n  const message = getMessage(target);\n  const speakerData = getSpeakerData(target, message);\n\n  const targetRollData = vars === \"target\";\n  let rollData = targetRollData ? null : getRollData(message);\n\n  const isHeal = command === \"heal\";\n\n  // Generate card\n  if (card && actors.size == 0) {\n    // TODO: Make card flavor better\n    pf1.chat.command(command, formula, undefined, { rollData, speaker: speakerData });\n    return;\n  }\n\n  // Apply directly\n  for (const actor of actors) {\n    if (targetRollData) rollData = actor.getRollData();\n    // Roll card\n    if (card) {\n      const tname = actor.token?.name ?? actor.name;\n      pf1.chat.command(command, formula, game.i18n.format(\"PF1.EnrichedText.Subject\", { name: tname }), {\n        rollData,\n        speaker: speakerData,\n      });\n    }\n    // Apply directly\n    else {\n      const roll = await RollPF.safeRoll(formula, rollData);\n      let value = roll.total;\n      if (isHeal) value = -value;\n      actor.applyDamage(value, { ...options, event, element: target });\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onBrowse(event, target) {\n  const { category, options } = target.dataset;\n\n  // TODO: Configure browser filters with options.\n  // TODO: Find closest browser via Sørensen–Dice coefficient or something.\n\n  const browser = pf1.applications.compendiums[category];\n\n  const filters = {};\n\n  filters.tags = target.dataset.tag?.split(\";\").map((f) => f?.trim());\n  if (filters.tags?.length) browser._queueFilters(filters);\n\n  if (browser) browser.render(true, { focus: true });\n  else ui.notifications.error(game.i18n.format(\"PF1.EnrichedText.Errors.BrowserNotFound\", { category }));\n}\n\n/**\n * Handle Condition click\n *\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n * @returns {void}\n */\nexport async function onCondition(event, target) {\n  const { condition, toggle, remove, duration, options, vars, info } = target.dataset;\n\n  const cond = pf1.registry.conditions.getAliased(condition);\n  if (!cond) throw new Error(`Condition \"${condition}\" not found!`); // TODO: Error notification\n\n  let enableConfig = !remove;\n\n  let seconds = duration;\n  // Determine duration\n  if (duration && !info) {\n    const [time, unit] = parseDuration(duration);\n    if (time) {\n      const units = {\n        s: 1,\n        r: CONFIG.time.roundTime,\n        m: 60,\n        h: 60 * 60,\n      };\n      seconds = time * (units[unit?.[0]] ?? CONFIG.time.roundTime);\n    }\n  }\n\n  if (info) {\n    /** @type {JournalEntry} */\n    const journal = cond?.journal;\n    if (!journal) throw new Error(`Journal entry not found for condition \"${condition}\"`);\n    return void pf1.utils.openJournal(journal);\n  }\n\n  const targetRollData = vars === \"target\";\n  let rollData;\n\n  if (seconds && !Number.isFinite(seconds) && !targetRollData) {\n    rollData = getRollData(getMessage(target));\n    seconds = (await RollPF.safeRoll(seconds, rollData)).total * CONFIG.time.roundTime;\n  }\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    if (!remove && seconds) {\n      // Flat number\n      if (Number.isFinite(seconds)) {\n        enableConfig = { duration: { seconds } };\n      }\n      // Roll\n      else {\n        if (targetRollData) rollData = actor.getRollData();\n        else\n          rollData ??= enableConfig = {\n            duration: { seconds: (await RollPF.safeRoll(seconds, rollData)).total * CONFIG.time.roundTime },\n          };\n      }\n    }\n\n    if (toggle) {\n      actor.toggleCondition(condition, enableConfig);\n    } else {\n      actor.setCondition(condition, enableConfig);\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onApply(event, target) {\n  const { uuid, level, vars } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  const item = await fromUuid(uuid);\n  if (!item) {\n    const warn = game.i18n.localize(\"PF1.EnrichedText.Errors.ItemNotFound\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.error(\"PF1 | @Apply |\", warn, uuid);\n  }\n\n  // TODO: Support more types (race, class, and few others should never be here)\n  if (item.type !== \"buff\") {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.EnrichedText.Errors.UnsupportedItemType\", { type: item.type })\n    );\n  }\n\n  // Prepare item\n  const itemData = game.items.fromCompendium(item, { clearFolder: true });\n  itemData.system.active = true;\n\n  let roll;\n  const targetRollData = vars === \"target\";\n  const message = getMessage(target);\n  let rollData = targetRollData ? null : getRollData(message);\n  if (!targetRollData && level?.length) {\n    roll = await RollPF.safeRoll(level, rollData);\n    itemData.system.level = roll.total;\n  }\n\n  // Apply\n  for (const actor of actors) {\n    if (targetRollData && level?.length) {\n      rollData = actor.getRollData();\n      roll = await RollPF.safeRoll(level, rollData);\n      itemData.system.level = roll.total;\n    }\n\n    // Activate existing item with same source\n    const old = actor.itemTypes[item.type].find((i) => i._stats?.compendiumSource === uuid);\n    if (old) {\n      const activationData = { system: { active: true } };\n      if (roll) activationData.system.level = roll.total;\n      old.update(activationData);\n    }\n    // Add new\n    else {\n      Item.implementation.create(itemData, { parent: actor });\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onToggle(event, target) {\n  const { name, level, enable, disable, type, vars } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  let state;\n  if (enable) state = true;\n  else if (disable) state = false;\n\n  const targetRollData = vars === \"target\";\n  const message = getMessage(target);\n  let rollData = targetRollData ? null : getRollData(message);\n\n  for (const actor of actors) {\n    //\n    let items = actor.items;\n    if (type) items = actor.itemTypes[type];\n    const item = items?.getName(name);\n\n    // TODO: Attempt to find item based on source UUID\n\n    if (item) {\n      console.debug(\n        `PF1 | @Toggle | Setting ${name} state to`,\n        state ?? !item.activeState,\n        `on ${actor.name} [${actor.uuid}]`\n      );\n      // Special handling for buffs to assign level\n      if (type === \"buff\" && level) {\n        if (targetRollData) rollData = actor.getRollData();\n        const roll = await RollPF.safeRoll(level, rollData);\n\n        item.update({\n          system: {\n            active: state ?? !item.activeState,\n            level: roll.total,\n          },\n        });\n      } else {\n        item.setActive(state ?? !item.activeState);\n      }\n    } else {\n      console.debug(`PF1 | @Toggle | ${name} not found on ${actor.name} [${actor.uuid}]`);\n      if (actors.size === 1) ui.notifications.error(\"PF1.EnrichedText.Errors.ItemNotFound\", { localize: true });\n    }\n  }\n}\n\n/**\n * Text enrichers\n */\nexport const enrichers = [\n  // @Apply\n  new PF1TextEnricher(\n    \"apply\",\n    /@Apply\\[(?<ident>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    async (match, _options) => {\n      const { ident, options, label } = match.groups;\n\n      const item = fromUuidSync(ident) ?? fromUuidSync(await findItem(ident, { type: \"buff\" }));\n\n      if (!item) console.warn(\"PF1 | @Apply | Could not find item\", ident);\n\n      const broken = !item;\n\n      const a = createElement({ label, click: true, handler: \"apply\", options, broken });\n\n      if (item) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.Item\")}: ${item.name}`;\n        a.dataset.uuid = item.uuid;\n        a.append(item.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fa-solid fa-angles-right\");\n\n      return a;\n    },\n    {\n      click: onApply,\n    }\n  ),\n  // @Toggle\n  new PF1TextEnricher(\n    \"toggle\",\n    /@Toggle\\[(?<ident>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    async (match, _options) => {\n      const { ident, options, label } = match.groups;\n      if (!ident) throw new Error(\"No target\");\n\n      const a = createElement({ label, click: true, handler: \"toggle\", options });\n\n      a.dataset.name = ident.trim();\n\n      generateTooltip(a);\n\n      a.append(label || ident);\n      if (a.dataset.enable) setIcon(a, \"fa-solid fa-toggle-on\");\n      else if (a.dataset.disable) setIcon(a, \"fa-solid fa-toggle-off\");\n      else setIcon(a, \"fa-solid fa-shuffle\");\n\n      return a;\n    },\n    {\n      click: onToggle,\n    }\n  ),\n  // @Save\n  new PF1TextEnricher(\n    \"save\",\n    /@Save\\[(?<save>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData } = {}) => {\n      const { save, options, label } = match.groups;\n      const a = createElement({ label, click: true, handler: \"save\", options });\n      const name = pf1.config.savingThrows[save];\n\n      let dc = a.dataset.dc;\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (dc?.length && !/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n        a.dataset.dc = dc;\n      }\n\n      const title = dc?.length ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      a.dataset.type = save;\n      if (dc?.length) a.dataset.sensitiveLabel = name;\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-shield-halved\");\n\n      return a;\n    },\n    {\n      click: onSave,\n    }\n  ),\n  // @Ability\n  new PF1TextEnricher(\n    \"ability\",\n    /@Ability\\[(?<ability>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { ability, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"ability\", options });\n      const title = pf1.config.abilities[ability] ?? ability;\n      a.dataset.ability = ability;\n      a.append(title);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-brain\");\n\n      return a;\n    },\n    {\n      click: onAbility,\n    }\n  ),\n  // @Skill\n  new PF1TextEnricher(\n    \"skill\",\n    /@Skill\\[(?<skill>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData }) => {\n      const { skill, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"skill\", options });\n      const name = pf1.config.skills[skill] ?? skill;\n      a.dataset.skill = skill;\n\n      if (a.dataset.info) {\n        const compendium = pf1.config.skillCompendiumEntries[skill];\n        if (!compendium) return;\n        setIcon(a, \"fa-solid fa-book\");\n      } else {\n        setIcon(a, \"fa-solid fa-hands-clapping\");\n      }\n\n      let dc = a.dataset.dc;\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (dc?.length && !/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n        a.dataset.dc = dc;\n      }\n      const title = dc?.length ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      if (dc?.length) a.dataset.sensitiveLabel = name;\n\n      generateTooltip(a);\n\n      return a;\n    },\n    {\n      click: onSkill,\n    }\n  ),\n  // @Use\n  new PF1TextEnricher(\n    \"use\",\n    /@Use\\[(?<item>.*?)(?:#(?<action>.*?))?(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n\n    (match, _options) => {\n      const { item, action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"use\", options });\n      a.append(item?.trim());\n      a.dataset.item = item?.trim();\n      if (action) {\n        const displayAction = action.replace(/^(id|tag):\\s*/, \"\")?.trim();\n        // TODO: pretty print action name if speaker option is enabled\n        a.append(` (${displayAction})`);\n        a.dataset.action = action?.trim();\n      }\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onUse,\n    }\n  ),\n  // @Action\n  new PF1TextEnricher(\n    \"action\",\n    /@Action\\[(?<action>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"action\", options });\n      // TODO: Pretty print the action name, especially if speaker option is enabled\n      a.append(action);\n      a.dataset.speaker = true;\n      a.dataset.action = action?.trim();\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onAction,\n    }\n  ),\n  // @Heal & @Damage\n  new PF1TextEnricher(\n    \"health\",\n    /@(?<command>Heal|Damage)\\[(?<formula>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { command, formula, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"health\", options });\n      a.dataset.command = command.toLowerCase();\n      a.dataset.formula = formula;\n\n      a.append(\n        game.i18n.format(`PF1.EnrichedText.Health.${command}`, {\n          value: label || formula,\n          NL: a.dataset.nonlethal ? game.i18n.localize(\"PF1.EnrichedText.Health.NL\") : \"\",\n        })\n      );\n\n      generateTooltip(a, { card: true });\n\n      if (a.dataset.command === \"heal\") setIcon(a, \"fa-solid fa-heart-pulse\");\n      else setIcon(a, \"fa-solid fa-heart-crack\");\n\n      // TODO: Make wound damage better\n\n      return a;\n    },\n    {\n      click: onHealth,\n    }\n  ),\n  // @Browse\n  new PF1TextEnricher(\n    \"browse\",\n    /@Browse\\[(?<category>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { category, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"browse\", options });\n\n      a.dataset.category = category;\n\n      let mainlabel;\n      const browser = pf1.applications.compendiumBrowser.CompendiumBrowser.BROWSERS[category];\n      if (!browser) {\n        setIcon(a, \"fa-solid fa-link-slash\");\n        a.classList.add(\"invalid\");\n        mainlabel = category;\n      } else {\n        setIcon(a, \"fa-solid fa-book\");\n        mainlabel = game.i18n.localize(browser.typeName);\n      }\n\n      mainlabel = game.i18n.format(\"PF1.EnrichedText.Browse\", { value: mainlabel });\n\n      if (label) a.append(label);\n      else a.append(mainlabel);\n\n      generateTooltip(a);\n\n      if (label) a.dataset.tooltip = mainlabel;\n      if (!browser) {\n        if (label) a.dataset.tooltip += \"<br>\";\n        a.dataset.tooltip +=\n          game.i18n.localize(\"PF1.EnrichedText.Error\") +\n          \": \" +\n          game.i18n.localize(\"PF1.EnrichedText.Errors.NoCategory\");\n      }\n\n      return a;\n    },\n    {\n      click: onBrowse,\n    }\n  ),\n  // Weight\n  new PF1TextEnricher(\"weight\", /@Weight\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>lbs|kg)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"kg\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"lbs\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n\n    let lbs = total,\n      kg = total;\n\n    if (sourceImperial) kg = pf1.utils.swapWeight(total, \"lbs\");\n    if (sourceMetric) lbs = pf1.utils.swapWeight(total, \"kg\");\n\n    const kgl = `${pf1.utils.limitPrecision(kg, 3)} ${pf1.config.weightUnitsShort.kg}`;\n    const lbsl = `${pf1.utils.limitPrecision(lbs, 3)} ${pf1.config.weightUnitsShort.lbs}`;\n\n    const isMetric = pf1.utils.getWeightSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${kgl} (${lbsl})`;\n      else label = `${lbsl} (${kgl})`;\n    } else if (isMetric) label = kgl;\n    else label = lbsl;\n\n    a.textContent = label;\n\n    return a;\n  }),\n  // Distance\n  new PF1TextEnricher(\"distance\", /@Distance\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>ft|m)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"m\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"ft\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n    let ft = total,\n      m = total;\n\n    if (sourceImperial) m = pf1.utils.swapDistance(total, \"ft\");\n    if (sourceMetric) ft = pf1.utils.swapDistance(total, \"m\");\n\n    const ml = `${pf1.utils.limitPrecision(m, 3)} ${pf1.config.measureUnitsShort.m}`;\n    const ftl = `${pf1.utils.limitPrecision(ft, 3)} ${pf1.config.measureUnitsShort.ft}`;\n\n    const isMetric = pf1.utils.getDistanceSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${ml} (${ftl})`;\n      else label = `${ftl} (${ml})`;\n    } else if (isMetric) label = ml;\n    else label = ftl;\n\n    a.textContent = label;\n\n    a.dataset.tooltip = formula;\n\n    return a;\n  }),\n  // @Condition\n  new PF1TextEnricher(\n    \"condition\",\n    /@Condition\\[(?<condition>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { condition, options, label } = match.groups;\n\n      // TODO: Find closest condition via Sørensen–Dice coefficient or something.\n      let cond = pf1.registry.conditions.getAliased(condition);\n      if (!cond) {\n        // No direct match, find closest matching conditions and take the one with longest ID\n        const condId = [\n          ...pf1.registry.conditions.keys(),\n          ...[...pf1.registry.conditions.values()].map((e) => [...e.aliases]).flat(),\n        ]\n          .filter((c) => c.startsWith(condition))\n          .sort((a, b) => b.length - a.length)[0];\n        cond = pf1.registry.conditions.getAliased(condId);\n      }\n      let text = label || cond?.name || condition;\n\n      const broken = !cond;\n\n      const a = createElement({ click: true, handler: \"condition\", options, broken });\n      if (!cond) a.classList.add(\"broken\");\n\n      a.dataset.condition = cond?.id || condition;\n\n      if (a.dataset.disable) a.dataset.remove = true;\n\n      if (a.dataset.info) {\n        setIcon(a, \"fa-solid fa-book\");\n        if (!cond?.journal) a.classList.add(\"broken\");\n      } else if (a.dataset.remove) {\n        setIcon(a, \"fa-solid fa-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Remove\", { value: text });\n      } else if (a.dataset.toggle) {\n        setIcon(a, \"fa-solid fa-plus-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Toggle\", { value: text });\n      } else {\n        setIcon(a, \"fa-solid fa-plus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Add\", { value: text });\n      }\n\n      if (a.dataset.duration) {\n        let [period, _, unit] = parseDuration(a.dataset.duration);\n        if (!period) {\n          // On parse failing, treat it as complex formula\n          period = a.dataset.duration;\n          unit = game.i18n.localize(\"PF1.Time.Period.round.Label\");\n        }\n        a.dataset.tooltip += \"<br>\" + game.i18n.format(\"PF1.EnrichedText.Condition.Duration\", { unit, period });\n        text = game.i18n.format(\"PF1.ForDuration\", {\n          subject: text,\n          duration: game.i18n.format(\"PF1.Time.Format\", { value: period, unit }),\n        });\n      }\n\n      a.append(text);\n\n      return a;\n    },\n    {\n      click: onCondition,\n    }\n  ),\n  // @Draw\n  new PF1TextEnricher(\n    \"draw\",\n    /@Draw\\[(?<ident>.*?)\\](?:\\{(?<label>.*?)\\})?/g,\n    /**\n     * @param {any} match\n     * @param {unknown} _options\n     * @returns\n     */\n    async (match, _options) => {\n      const { ident, label } = match.groups;\n\n      const table = fromUuidSync(ident) || game.tables.getName(ident);\n\n      if (!table) console.warn(\"PF1 | @Draw | Could not find roll table\", ident);\n\n      const broken = !table;\n\n      const a = createElement({ click: true, handler: \"draw\", broken });\n\n      if (table) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.RollTable\")}: ${table.name}`;\n        a.dataset.ident = table.uuid;\n\n        a.append(label || table.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fa-solid fa-th-list\");\n\n      return a;\n    },\n    {\n      click: onDraw,\n    }\n  ),\n  // Source\n  new PF1TextEnricher(\"source\", /@Source\\[(?<ident>\\w+)(?:;(?<options>.*?))?]/g, async (match, _options) => {\n    const { ident, options } = match.groups;\n\n    let source = pf1.registry.sources.get(ident);\n    if (!source) source = pf1.registry.sources.find((s) => s.abbr.toLowerCase() === ident.toLowerCase());\n\n    const a = createElement({ handler: \"source\", options, broken: !source });\n\n    if (source) {\n      a.append(source.name);\n      const pages = a.dataset.pages;\n      if (pages) a.append(\" \", game.i18n.format(\"PF1.ContentSource.Pages\", { pages }));\n\n      // Tooltip\n      const tips = [game.i18n.localize(\"PF1.ContentSource.Info.ID\") + \": \" + source.id];\n      if (source.date) tips.push(game.i18n.localize(\"PF1.ContentSource.Info.Release\") + \": \" + source.date);\n      if (source.publisher) tips.push(game.i18n.localize(\"PF1.ContentSource.Info.Publisher\") + \": \" + source.publisher);\n      a.dataset.tooltip = tips.join(\"<br>\");\n    } else {\n      a.replaceChildren(ident);\n    }\n\n    setIcon(a, \"fa-solid fa-bookmark\");\n\n    return a;\n  }),\n];\n\n/**\n * Register in setup phase so modules can alter the enrichers before they're registered\n * ... and become largely immutable without deeper modification.\n * Otherwise this could be done in init phase.\n */\nHooks.once(\"setup\", () => {\n  CONFIG.TextEditor.enrichers.push(...enrichers);\n});\n\n/**\n * Proxy click and drag events to the enrichers\n *\n * @param {JQuery<MouseEvent>} event Click event\n * @param click\n */\nconst onEnrichedInteraction = (event, click = true) => {\n  const target = event.currentTarget,\n    handler = target.dataset.handler,\n    enricher = enrichers.find((e) => e.id === handler);\n\n  if (!enricher) throw new Error(`Relevant enricher not found: ${handler}`);\n\n  if (target.classList.contains(\"broken\")) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (click) enricher.click(event, target);\n  else enricher.drag(event, target);\n};\n\n// Register click & drag handlers\nHooks.once(\"ready\", () => {\n  // Mimic Foundry listener handling for simplicity\n  // TODO: Use plain DOM instead\n  const body = $(\"body\");\n  body.on(\"click\", \"a.pf1-link.button\", (event) => onEnrichedInteraction(event, true));\n  //body.on(\"drag\", \"a.pf1-link.content\", (event) => onEnrichedInteraction(event, false));\n});\n","/**\n * Handle custom chat commands\n *\n * @param {string} command - Command\n * @param {string} message - Message\n * @param {string} comment - Comment\n * @param {object} options - Additional options\n */\nexport async function command(command, message, comment, options) {\n  command = command.toLowerCase();\n\n  console.debug(\"PF1 | Chat Command:\", { command, formula: message, comment });\n\n  let { speaker, rollData } = options;\n\n  speaker = speaker ?? ChatMessage.implementation.getSpeaker();\n  const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n  const token = actor?.token;\n\n  try {\n    switch (command) {\n      case \"d\":\n      case \"damage\":\n      case \"h\":\n      case \"heal\": {\n        rollData ??= actor?.getRollData() ?? {};\n        const roll = await new Roll(message, rollData).evaluate();\n\n        const isHealing = /^H/i.test(command);\n        const content = await renderTemplate(\"systems/pf1/templates/chat/simple-damage.hbs\", {\n          actor,\n          token,\n          isHealing,\n          css: isHealing ? \"heal\" : \"damage\",\n          value: {\n            total: roll.total * (isHealing ? -1 : 1),\n            half: Math.floor(roll.total / 2) * (isHealing ? -1 : 1),\n          },\n          roll,\n          total: roll.total,\n          details: await roll.getTooltip(),\n          hasDetails: roll.terms.length > 1 || !roll.isDeterministic,\n        });\n\n        const chatOptions = {\n          // TODO: Apply custom message type\n          rolls: [roll],\n          flavor: comment,\n          sound: CONFIG.sounds.dice,\n          speaker,\n          rollMode: game.settings.get(\"core\", \"rollMode\"),\n          content,\n          system: {\n            subject: { health: isHealing ? \"healing\" : \"damage\" },\n          },\n        };\n\n        ChatMessage.implementation.create(chatOptions);\n      }\n    }\n  } catch (err) {\n    ui.notifications.error(\"PF1.Error.CommandParse\", { localize: true, console: false });\n    console.error(\"Error handling chat command:\", { command, formula: message, comment }, \"\\n\", err);\n  }\n}\n\n/**\n * `chatMessage` hook event handler.\n *\n * @param {ChatLog} app - Chat log\n * @param {string} msg - Chat message\n * @param {object} options - Options\n * @returns {boolean|void} - False if processing is to stop. Nothing otherwise.\n */\nfunction handleChatInput(app, msg, options) {\n  const re = /^\\/(?<command>h|heal|d|damage)\\s+(?<formula>.*?)(\\s*#\\s*(?<comment>.*))?$/i.exec(msg);\n  if (!re) return;\n\n  const { command, formula, comment } = re.groups;\n\n  pf1.chat.command(command, formula, comment, options);\n\n  return false;\n}\n\nHooks.on(\"chatMessage\", handleChatInput);\n","const withinAngle = (min, max, value) => {\n  min = Math.normalizeDegrees(min);\n  max = Math.normalizeDegrees(max);\n  value = Math.normalizeDegrees(value);\n\n  if (min < max) return value >= min && value <= max;\n  return value >= min || value <= max;\n};\n\n/**\n * @param {Point} point\n * @param {Rectangle} rect\n * @returns {boolean}\n */\nconst withinRect = (point, rect) => {\n  return point.x >= rect.x && point.x < rect.x + rect.width && point.y >= rect.y && point.y < rect.y + rect.height;\n};\n\n/**\n * Applies patches to core functions to integrate Pathfinder specific measurements.\n *\n * Replacement for `CONFIG.Canvas.layers.templates.layerClass`\n */\nexport class TemplateLayerPF extends TemplateLayer {\n  /**\n   * Override to provide snapped drag for cone template direction.\n   *\n   * @override\n   * @param {Event} event\n   * Synced with Foundry v12.331\n   */\n  _onDragLeftMove(event) {\n    if (!game.settings.get(\"pf1\", \"measureStyle\")) return super._onDragLeftMove(event);\n\n    const interaction = event.interactionData;\n\n    // Snap the destination to the grid\n    const snapToGrid = !event.shiftKey;\n    if (snapToGrid) {\n      const snapMode =\n        CONST.GRID_SNAPPING_MODES.CENTER | CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT | CONST.GRID_SNAPPING_MODES.CORNER;\n      interaction.destination = this.getSnappedPoint(interaction.destination, { mode: snapMode });\n    }\n\n    // Compute the ray\n    const { origin, destination, preview } = interaction;\n    const ray = new Ray(origin, destination);\n    let distance;\n\n    // Grid type\n    if (game.settings.get(\"core\", \"gridTemplates\")) {\n      distance = canvas.grid.measurePath([origin, destination]).distance;\n    }\n    // Euclidean type\n    else {\n      const ratio = canvas.dimensions.size / canvas.dimensions.distance;\n      distance = ray.distance / ratio;\n    }\n\n    // Update the preview object\n    if (snapToGrid && preview.document.t === \"cone\") {\n      const halfAngle = CONFIG.MeasuredTemplate.defaults.angle / 2;\n      const baseDirection = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      preview.document.direction = Math.floor((baseDirection + halfAngle / 2) / halfAngle) * halfAngle;\n    } else {\n      preview.document.direction = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n    }\n    preview.document.distance = distance;\n    preview.renderFlags.set({ refreshShape: true });\n  }\n}\n\nexport class MeasuredTemplatePF extends MeasuredTemplate {\n  /**\n   * Calculates a set of x & y coordinates that the template actually should have based on type and origin\n   *\n   * @returns {{x: number, y: number}}\n   * @private\n   */\n  _getTemplateSnapCoordinates() {\n    let { x, y } = this.document;\n    const grid = canvas.grid;\n\n    if (this.document.t === \"cone\" && game.canvas.grid.isSquare) {\n      const angle = this.document.direction;\n\n      if (angle <= 45 || angle >= 315) {\n        x = Math.ceil(x / grid.size) * grid.size;\n      } else if (angle >= 135 && angle <= 225) {\n        x = Math.floor(x / grid.size) * grid.size;\n      }\n\n      if (angle >= 45 && angle <= 135) {\n        y = Math.ceil(y / grid.size) * grid.size;\n      } else if (angle >= 225 && angle <= 315) {\n        y = Math.floor(y / grid.size) * grid.size;\n      }\n    }\n\n    return { x, y };\n  }\n\n  /**\n   * Recalculate template visual element positions based on snap coordinates\n   *\n   * @private\n   */\n  _setElementOffsets() {\n    const { x: snapX, y: snapY } = this._getTemplateSnapCoordinates();\n    const offsetX = snapX - this.document.x;\n    const offsetY = snapY - this.document.y;\n\n    this.template.x = offsetX;\n    this.template.y = offsetY;\n\n    this.ruler.position.set(this.ray?.dx + 10 + offsetX, this.ray?.dy + 5 + offsetY);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshRulerText() {\n    super._refreshRulerText();\n    this._setElementOffsets();\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshPosition() {\n    super._refreshPosition();\n    this._setElementOffsets();\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshTemplate() {\n    super._refreshTemplate();\n    this._setElementOffsets();\n  }\n\n  /**\n   * Get highlighted square coordinates.\n   *\n   * Supports only circle, cone and ray templates.\n   *\n   * @protected\n   * @override\n   * @returns {Point[]} - Array of grid coordinates\n   */\n  _getGridHighlightPositions() {\n    const templateType = this.document.t;\n    // In case this is not initialized, not circle or cone, or system measure templates are disabled, let Foundry handle it.\n    // Foundry's handling of Ray is perfectly usable even if slightly wrong, so no override needed.\n    if (\n      !game.settings.get(\"pf1\", \"measureStyle\") ||\n      (templateType !== \"circle\" && (templateType !== \"cone\" || canvas.grid.isHexagonal))\n    ) {\n      return super._getGridHighlightPositions();\n    }\n\n    const grid = canvas.grid;\n    const { x: ox, y: oy } = this._getTemplateSnapCoordinates();\n\n    // Test if template origin is in the center of a grid space. Apply a grace margin for odd grid sizes\n    const originInCenter = ox % grid.size === Math.ceil(grid.size / 2) && oy % grid.size === Math.ceil(grid.size / 2);\n\n    const shape = this.shape;\n    const bounds = shape.getBounds();\n    bounds.x += ox;\n    bounds.y += oy;\n    bounds.fit(canvas.dimensions.rect);\n    bounds.pad(1);\n\n    // Identify grid spaces that are in \"walking distance\" of the template origin\n    const positions = [];\n    const [i0, j0, i1, j1] = grid.getOffsetRange(bounds);\n    for (let i = i0; i < i1; i++) {\n      for (let j = j0; j < j1; j++) {\n        const offset = { i, j };\n        const { x: cx, y: cy } = grid.getCenterPoint(offset);\n\n        const distance = grid.measurePath([\n          { x: cx, y: cy },\n          { x: ox, y: oy },\n        ]).distance;\n\n        switch (templateType) {\n          case \"cone\": {\n            // Include all squares that are within \"walking distance\"\" and within 45 degrees of the cone direction\n            const angle = (Math.atan2(cy - oy, cx - ox) * 180) / Math.PI;\n            const angleDiff = Math.abs(angle - this.document.direction) % 360;\n            const docAngle = this.document.angle / 2;\n\n            if (distance < this.document.distance && (angleDiff <= docAngle || angleDiff >= 360 - docAngle)) {\n              positions.push(grid.getTopLeftPoint(offset));\n            }\n            break;\n          }\n\n          case \"circle\":\n            // If template origin lies in grid center, include all squares that have their center within the distance, otherwise only those that are strictly within\n            // Centered circles get a 2% grace margin in distance calculation to deal with uneven grid sizes\n            if (\n              originInCenter || canvas.grid.isHexagonal\n                ? distance <= this.document.distance * 1.02\n                : distance < this.document.distance\n            ) {\n              positions.push(grid.getTopLeftPoint(offset));\n            }\n            break;\n        }\n      }\n    }\n    return positions;\n  }\n\n  /**\n   * Determine tokens residing within the template bounds, based on either grid highlight logic or token center.\n   *\n   * @public\n   * @returns {Promise<Token[]>} Tokens sufficiently within the template.\n   */\n  async getTokensWithin() {\n    const shape = this.document.t,\n      dimensions = this.scene.dimensions,\n      gridSizePx = dimensions.size,\n      gridSizeUnits = dimensions.distance;\n\n    const getCenter = () => {\n      if (shape !== \"rect\") return this.center;\n      // Hack: Fix for Foundry bug where .center for rectangle template returns top-left corner instead.\n      return {\n        x: this.x + this.width / 2,\n        y: this.y + this.height / 2,\n      };\n    };\n\n    // Ensure shape and related data exists (e.g. this.ray) for getHighlightedSquares to work correctly.\n    // this.width, this.height, etc. are wrong without this\n    if (!this.shape) {\n      this._applyRenderFlags({ refreshShape: true });\n      // HACK: Wait for next tick, the template won't be finalized by Foundry until then.\n      // Likely breaks with Foundry v12 with newer PIXI version\n      await new Promise((resolve) => canvas.app.ticker.addOnce(() => resolve()), undefined, PIXI.UPDATE_PRIORITY.LOW);\n    }\n\n    const tCenter = getCenter();\n\n    const { distance, angle, direction } = this.document;\n\n    // Max distance from template center, +1 cell for proper detection, and +1 pixel for uneven grids and rounding protection\n    const maxDistance = Math.max(this.height, this.width) + gridSizePx + 1;\n    // Get tokens within max potential distance from the template\n    const relevantTokens = new Set(\n      canvas.tokens.placeables.filter((t) => new Ray(t.center, tCenter).distance - t.sizeErrorMargin <= maxDistance)\n    );\n\n    const results = new Set();\n\n    const isLargeToken = (t) => t.document.width > 1 || t.document.height > 1;\n\n    const withinCircle = (target) => {\n      const ray = new Ray(tCenter, target);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include this token if its center is within template radius\n      return raySceneLength <= distance + 1;\n    };\n\n    const withinCone = (target, minAngle, maxAngle) => {\n      const ray = new Ray(tCenter, target);\n      const rayAngle = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      const rayWithinAngle = withinAngle(minAngle, maxAngle, rayAngle);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include token if its within template distance and within the cone's angle\n      return rayWithinAngle && raySceneLength <= distance + 1;\n    };\n\n    // Rectangle has same handling everywhere\n    if (shape === \"rect\") {\n      const rect = {\n        x: this.x,\n        y: this.y,\n        width: this.shape.width,\n        height: this.shape.height,\n      };\n\n      for (const t of relevantTokens) {\n        if (isLargeToken(t)) {\n          const cells = t.getOccupiedCells({ center: true });\n          if (cells.some((c) => withinRect(c, rect))) results.add(t);\n        } else {\n          if (withinRect(t.center, rect)) results.add(t);\n        }\n      }\n    }\n    // Special handling for gridless\n    else if (canvas.grid.type === CONST.GRID_TYPES.GRIDLESS && [\"circle\", \"cone\"].includes(shape)) {\n      // Pre-calc cone data\n      let minAngle, maxAngle;\n      if (shape === \"cone\") {\n        minAngle = Math.normalizeDegrees(direction - angle / 2);\n        maxAngle = Math.normalizeDegrees(direction + angle / 2);\n      }\n\n      // TODO: Test against vision points and ensure ~third of them are inside the template instead.\n      for (const t of relevantTokens) {\n        const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n        switch (shape) {\n          case \"circle\": {\n            if (cells.some((c) => withinCircle(c))) results.add(t);\n            break;\n          }\n          case \"cone\": {\n            if (cells.some((c) => withinCone(c, minAngle, maxAngle))) results.add(t);\n            break;\n          }\n        }\n      }\n    }\n    // Non-gridless\n    else {\n      const mapCoordsToCell = ({ x, y }) => ({ x, y, width: gridSizePx, height: gridSizePx });\n\n      const highlightSquares = this._getGridHighlightPositions().map(mapCoordsToCell);\n      for (const cell of highlightSquares) {\n        for (const t of relevantTokens) {\n          const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n          if (cells.some((tc) => withinRect(tc, cell))) {\n            results.add(t);\n            relevantTokens.delete(t);\n          }\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  getHighlightLayer() {\n    return canvas.interface.grid.getHighlightLayer(this.highlightId);\n  }\n\n  /**\n   * Return origin item if any.\n   *\n   * @type {Item|pf1.components.ItemAction|null}\n   */\n  get origin() {\n    const { uuid, action: actionId } = this.document.getFlag(\"pf1\", \"origin\") ?? {};\n    if (!uuid) return null;\n    const item = fromUuidSync(uuid);\n    const action = item?.actions?.get(actionId);\n    return action ?? item ?? null;\n  }\n}\n","// TODO: Make the highlight colors configurable\nconst rangeColor = {\n  fill: Color.from(\"#FF0000\"),\n  border: Color.from(\"#FF0000\").multiply(0.9),\n};\nconst reachColor = {\n  fill: Color.from(\"#FFFF00\"),\n  border: Color.from(\"#FFFF00\").multiply(0.9),\n};\n\nclass SquareHighlight {\n  constructor(origin, fillColor = 0x00ff00, borderColor = 0x000000, name) {\n    this.origin = origin;\n    this.borderColor = borderColor;\n    this.fillColor = fillColor;\n    this._squares = [];\n\n    this._id = foundry.utils.randomID();\n    this.name = name;\n    this.layer = canvas.interface.grid.addHighlightLayer(this.name);\n  }\n\n  addSquare(x, y) {\n    this._squares.push({ x, y });\n  }\n\n  clear() {\n    this.layer?.clear();\n  }\n\n  render() {\n    const gridSize = canvas.grid.size;\n\n    this.clear();\n\n    // Highlight squares\n    const hlname = this.layer.name;\n    const ig = canvas.interface.grid;\n    for (const s of this._squares) {\n      const x = Math.floor(this.origin.x - s.x) * gridSize;\n      const y = Math.floor(this.origin.y - s.y) * gridSize;\n      ig.highlightPosition(hlname, { x, y, border: this.borderColor, color: this.fillColor });\n    }\n  }\n}\n\n/**\n * Calculates the attack for a token's attack.\n */\nclass AttackHighlightBase {\n  /** @abstract */\n  clearHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n  /** @abstract */\n  renderHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @abstract\n   * @returns {boolean}\n   */\n  get isValid() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    const attack = action?.item;\n    if (!action || !token || !attack) throw new Error(\"Invalid arguments.\");\n\n    this._id = foundry.utils.randomID();\n    this.name = `AttackHighlight.${this._id}`;\n    this.layer = canvas.interface.grid.addHighlightLayer(this.name);\n  }\n}\n\nclass GridlessHighlight extends AttackHighlightBase {\n  /** @type {number[]|undefined} */\n  #rangeStops;\n\n  /** @override */\n  get isValid() {\n    return (this.#rangeStops?.length ?? 0) >= 2;\n  }\n\n  /** @type {{x: number, y: number} | undefined} */\n  #center;\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    this.#center = {\n      x: Math.floor(token.x + (tw * gridSize) / 2),\n      y: Math.floor(token.y + (th * gridSize) / 2),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const rangeMeasurements = [minRange || 0, r];\n\n    if (rangeKey === \"ft\") {\n      // Add range increments\n      const rangeIncrements = action.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        rangeMeasurements.push((a + 1) * r);\n      }\n    }\n\n    this.#rangeStops = rangeMeasurements.map((r) => {\n      const tokenOffset = r === 0 ? 0 : (tw * gridSize) / 2;\n      return r * canvas.dimensions.distancePixels + tokenOffset;\n    });\n  }\n\n  clearHighlight() {\n    if (this.isValid) {\n      const hl = this.layer;\n      if (!hl) return;\n      hl.removeChildren();\n      this.#rangeStops = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.isValid) {\n      const hl = this.layer;\n      if (!hl) return;\n      hl.clear();\n\n      const { x, y } = this.#center;\n\n      const circle = new PIXI.Graphics();\n\n      const stops = /** @type {!number[]} */ (this.#rangeStops);\n      for (let i = stops.length - 1; i > 0; i--) {\n        const outer = stops[i];\n        const inner = stops[i - 1];\n\n        const color = [rangeColor, reachColor][(i + 1) % 2];\n\n        circle.beginFill(color.fill, 0.1);\n        circle.drawCircle(x, y, outer);\n\n        // if inner has a defined value and is not 0, then cut a hole for either the next increment or because it's the minimum range\n        if (inner) {\n          circle.beginHole();\n          circle.beginFill(reachColor.fill, 0.1);\n          circle.drawCircle(x, y, inner);\n          circle.endHole();\n        }\n      }\n      circle.endFill();\n\n      hl.addChild(circle);\n    }\n  }\n}\n\nclass SquareGridHighlight extends AttackHighlightBase {\n  /**\n   * @typedef {object} AttackReachHighlight\n   * An object containing highlights belonging to a specific attack\n   * @property {SquareHighlight} normal - Highlight for normal range\n   * @property {SquareHighlight[]} extra - Additional highlights\n   */\n\n  /** @type {AttackReachHighlight|undefined} */\n  #currentHighlight;\n\n  /** @override */\n  get isValid() {\n    return !!this.#currentHighlight;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    const origin = {\n      x: Math.floor((token.x + tw * gridSize - 0.5 * gridSize) / gridSize),\n      y: Math.floor((token.y + th * gridSize - 0.5 * gridSize) / gridSize),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n    const isFeet = rangeKey === \"ft\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const squares = {\n      normal: [],\n      reach: [],\n      extra: [],\n    };\n    const useReachRule = game.settings.get(\"pf1\", \"alternativeReachCornerRule\") !== true;\n\n    squares.normal = this.#getReachSquares(token, r, minRange, { useReachRule: isFeet ? true : useReachRule });\n\n    if (isFeet) {\n      // Add range increments\n      const ftDistance = pf1.utils.convertDistance(r)[0];\n      const userLimit = game.settings.get(\"pf1\", \"performance\").reachLimit;\n      const maxSquareRange = Math.min(\n        userLimit, // arbitrary limit to enhance performance on large canvases\n        Math.max(\n          canvas.dimensions.width / canvas.dimensions.distancePixels,\n          canvas.dimensions.height / canvas.dimensions.distancePixels\n        ) + ftDistance\n      );\n      const rangeIncrements = action.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        if ((a + 1) * ftDistance <= maxSquareRange) {\n          squares.extra.push(this.#getReachSquares(token, (a + 1) * r, a * r, { useReachRule }));\n        }\n      }\n    }\n\n    const result = {\n      normal: new SquareHighlight(origin, rangeColor.fill, rangeColor.border, this.name + \".base\"),\n      extra: [],\n    };\n\n    for (const s of squares.normal) {\n      result.normal.addSquare(s[0], s[1]);\n    }\n\n    // Add extra range squares\n    for (let a = 0; a < squares.extra.length; a++) {\n      const squaresExtra = squares.extra[a];\n\n      const color = {\n        fill: a % 2 === 1 ? rangeColor.fill : reachColor.fill,\n        border: a % 2 === 1 ? rangeColor.border : reachColor.border,\n      };\n\n      const hl = new SquareHighlight(origin, color.fill, color.border, this.name + `.${a}`);\n      for (const s of squaresExtra) {\n        hl.addSquare(s[0], s[1]);\n      }\n      result.extra.push(hl);\n    }\n\n    this.#currentHighlight = result;\n  }\n\n  /**\n   *\n   * @param {Token} token\n   * @param {number} range\n   * @param {number} minRange\n   * @param {object} options\n   * @returns {Array<Array<number,number>>} - Array of x,y coordinate tuples\n   */\n  #getReachSquares(token, range, minRange = 0, options) {\n    const result = [];\n    if (canvas.grid.type !== CONST.GRID_TYPES.SQUARE) return result;\n\n    range = pf1.utils.convertDistance(range)[0];\n    if (typeof minRange === \"number\") minRange = pf1.utils.convertDistance(minRange)[0];\n\n    // Initialize variables\n    const gridDist = canvas.scene.grid.distance;\n    const gridSize = canvas.grid.size;\n\n    // Determine token squares\n    const tokenSquares = [];\n    for (let a = 0; a < Math.floor(token.w / gridSize); a++) {\n      for (let b = 0; b < Math.floor(token.h / gridSize); b++) {\n        const x = Math.floor((token.x + gridSize * 0.5) / gridSize + a);\n        const y = Math.floor((token.y + gridSize * 0.5) / gridSize + b);\n        tokenSquares.push([x, y]);\n      }\n    }\n\n    // Determine token-based variables\n    const tokenRect = [\n      Math.floor((token.x + gridSize * 0.5) / gridSize),\n      Math.floor((token.y + gridSize * 0.5) / gridSize),\n      Math.floor(token.w / gridSize),\n      Math.floor(token.h / gridSize),\n    ];\n\n    // Create function to determine closest token square\n    const getClosestTokenSquare = (pos) => {\n      const lowest = { square: null, dist: null };\n      for (const s of tokenSquares) {\n        const dist = Math.sqrt((s[0] - pos[0]) ** 2 + (s[1] - pos[1]) ** 2);\n        if (lowest.dist == null || dist < lowest.dist) {\n          lowest.square = s;\n          lowest.dist = dist;\n        }\n      }\n\n      return lowest.square;\n    };\n\n    // Gather potential squares\n    const squareRange = Math.round(range / gridDist);\n    const wMax = squareRange * 2 + tokenRect[2];\n    const hMax = squareRange * 2 + tokenRect[3];\n    const tl = [tokenRect[0] - squareRange, tokenRect[1] - squareRange];\n    for (let a = tl[0]; a < tl[0] + wMax; a++) {\n      for (let b = tl[1]; b < tl[1] + hMax; b++) {\n        const closestSquare = getClosestTokenSquare([a, b]);\n\n        const offset = [a - tokenRect[0], b - tokenRect[1]];\n        if (\n          !(\n            a >= tokenRect[0] &&\n            a < tokenRect[0] + tokenRect[2] &&\n            b >= tokenRect[1] &&\n            b < tokenRect[1] + tokenRect[2] &&\n            minRange != null\n          ) &&\n          this.#shouldAddReachSquare([a, b], closestSquare, range, minRange, options)\n        ) {\n          result.push(offset);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  #shouldAddReachSquare(pos, closestTokenSquare, range, minRange, { useReachRule = false } = {}) {\n    const gridSize = canvas.grid.size;\n    const p0 = { x: closestTokenSquare[0] * gridSize, y: closestTokenSquare[1] * gridSize };\n    const p1 = { x: pos[0] * gridSize, y: pos[1] * gridSize };\n\n    // BUG: This will fail if user is using non 1/2/1 diagonals\n    const dist = canvas.grid.measurePath([p0, p1]).distance;\n\n    // TODO: https://github.com/foundryvtt/foundryvtt/issues/11428\n    const dist2 = useReachRule\n      ? new foundry.grid.SquareGrid({\n          size: canvas.grid.size,\n          distance: canvas.grid.distance,\n          diagonals: CONST.GRID_DIAGONALS.EQUIDISTANT,\n        }).measurePath([p0, p1]).distance\n      : null;\n\n    const reachRuleRange = pf1.utils.convertDistance(10)[0];\n    if (dist > range) {\n      // Special rule for 10-ft. reach\n      if (!(useReachRule && range === reachRuleRange)) {\n        return false;\n      }\n    }\n\n    if (minRange != null && dist <= minRange) {\n      return false;\n    }\n\n    // Special rule for minimum ranges >= 10-ft.\n    if (useReachRule && minRange >= reachRuleRange && dist2 <= reachRuleRange) {\n      return false;\n    }\n\n    return true;\n  }\n\n  clearHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.clear();\n      for (const h of this.#currentHighlight.extra) {\n        h.clear();\n      }\n      this.#currentHighlight = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.render();\n      for (const h of this.#currentHighlight.extra) {\n        h.render();\n      }\n    }\n  }\n}\n\n/** @type {AttackHighlightBase|undefined} */\nlet attackReachHighlight;\n\n/**\n * Calculates and renders the {@link AttackReachHighlight} for a token's attack.\n * If a highlight already exists, it will be removed.\n *\n * @param {Token} token - The token to calculate the attack reach for\n * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n */\nexport const showAttackReach = (token, action) => {\n  // Clear previous highlight\n  clearHighlight();\n\n  const cls = canvas.grid.type === CONST.GRID_TYPES.SQUARE ? SquareGridHighlight : GridlessHighlight;\n\n  try {\n    const highlight = new cls(token, action);\n\n    // If a highlight could be created, make it the current highlight and render it\n    if (!highlight.isValid) return;\n    attackReachHighlight = highlight;\n    attackReachHighlight.renderHighlight();\n  } catch {\n    // no action, token, or item to use to render the highlight\n  }\n};\n\nexport const clearHighlight = () => {\n  attackReachHighlight?.clearHighlight();\n  attackReachHighlight = undefined;\n};\n\n/**\n * Returns a token belonging to either an actor's UUID or a token's UUID\n *\n * @param {string} uuid - UUID of an actor or token\n * @returns {Promise<Token|null|undefined>} A Token, if one can be found\n */\nconst _getTokenByUuid = async function (uuid) {\n  if (!uuid) return;\n  /** @type {TokenDocument | Actor} */\n  const actor = await fromUuid(uuid);\n  if (actor instanceof TokenDocument) return actor.object;\n  return actor?.token ?? (actor != null ? canvas.tokens.placeables.find((o) => o.actor === actor) : null);\n};\n\n/**\n * Add listeners on the {@link ChatLog}'s HTML element, checking for hover events involving\n * chat cards' range element using event delegation.\n *\n * @param {JQuery<HTMLElement>} html - The chat log\n */\nexport function addReachListeners(html) {\n  html.on(\"pointerenter\", \".card-range\", _onMouseEnterReach);\n  html.on(\"pointerleave\", \".card-range\", _onMouseLeaveReach);\n}\n\n/**\n * Handle display of reach when a chat card's reach element is hovered\n *\n * @param {JQuery.MouseEnterEvent<HTMLElement>} event - A `mouseEnter` event\n */\nconst _onMouseEnterReach = (event) => {\n  event.preventDefault();\n  if (game.settings.get(\"pf1\", \"performance\").reachLimit < 10) return;\n\n  const reachElement = event.currentTarget;\n  const card = reachElement.closest(\".chat-card\");\n  const { tokenUuid, actionId, itemId } = card.dataset;\n  if (!(itemId && actionId && tokenUuid)) return;\n\n  _getTokenByUuid(tokenUuid).then((token) => {\n    if (!token) return;\n\n    const item = token.actor.allItems.find((item) => item.id === itemId);\n    const action = item?.actions.get(actionId);\n    if (!action) return;\n\n    showAttackReach(token, action);\n  });\n};\n\n/**\n * Handle clearing of reach highlights created by {@link _onMouseEnterReach}\n *\n * @param {JQuery.MouseLeaveEvent} event - A `mouseLeave` event\n */\nconst _onMouseLeaveReach = (event) => {\n  event.preventDefault();\n  clearHighlight();\n};\n","/**\n * Add a checkbox to enable/disable low-light vision effects to a light's configuration\n *\n * @param {AmbientLightConfig} app - The LightConfig app\n * @param {Element} html - The application HTML element\n */\nexport function addLowLightVisionToLightConfig(app, html) {\n  /** @type {AmbientLightDocument} */\n  const light = app.document;\n\n  // Create checkbox HTML element\n  const bf = new foundry.data.fields.BooleanField();\n\n  /** @type {Element} */\n  const el = bf.toFormGroup(\n    {\n      label: game.i18n.localize(\"PF1.SETTINGS.DisableLLV.Label\"),\n      hint: game.i18n.localize(\"PF1.SETTINGS.DisableLLV.Hint\"),\n    },\n    {\n      name: \"flags.pf1.disableLowLight\",\n      value: light.getFlag(\"pf1\", \"disableLowLight\") ?? false,\n    }\n  );\n\n  // Create containing fieldset\n  const field = document.createElement(\"fieldset\");\n  const legend = document.createElement(\"legend\");\n  legend.innerText = game.i18n.localize(\"PF1.Title\");\n  field.append(legend, el);\n\n  // Insert new checkbox\n  html.querySelector('section.tab[data-tab=\"advanced\"]').append(field);\n}\n\n/**\n * LLV support mixin for AmbientLight and Token\n *\n * Adds light-radius multiplication effect to both light sources.\n *\n * @param {class} Base - Base class\n * @returns {class} - Mixin class\n */\nexport const LLVMixin = (Base) =>\n  class extends Base {\n    /** @override */\n    _getLightSourceData() {\n      const data = super._getLightSourceData();\n\n      const { dim, bright } = this.getRadius(data.dim, data.bright);\n\n      // Avoid NaN and introducing keys that shouldn't be in the data\n      // Without undefined check, global illumination will cause darkvision and similar vision modes to glitch.\n      // We're assuming getRadius gives sensible values otherwise.\n      if (data.dim !== undefined) data.dim = dim;\n      if (data.bright !== undefined) data.bright = bright;\n\n      return data;\n    }\n\n    /**\n     * @param {number} dim - Dim radius\n     * @param {number} bright - Bright radius\n     * @returns {{dim:number,bright:number}} - Adjusted distances\n     */\n    getRadius(dim, bright) {\n      const result = { dim, bright };\n      let multiplier = { dim: 1, bright: 1 };\n\n      // System vision is disabled\n      if (!game.settings.get(\"pf1\", \"systemVision\")) return result;\n      // This light source has LLV handling disabled\n      if (this.document.getFlag(\"pf1\", \"disableLowLight\")) return result;\n\n      /**\n       * @param {TokenDocument} token\n       * @returns {boolean}\n       */\n      const hasSystemVision = (token) => token.getFlag(\"pf1\", \"customVisionRules\") !== true;\n\n      const token = this.object?.document;\n      if (token && !hasSystemVision(token)) return result;\n\n      const requiresSelection = game.user.isGM || game.settings.get(\"pf1\", \"lowLightVisionMode\");\n      const relevantTokens = canvas.tokens.placeables.filter((token) => {\n        const tokenDoc = token.document;\n        return (\n          token.actor?.testUserPermission(game.user, \"OBSERVER\") &&\n          (requiresSelection ? token.controlled : true) &&\n          hasSystemVision(tokenDoc)\n        );\n      });\n      const lowLightTokens = relevantTokens.filter((o) => o.actorVision.lowLight === true);\n\n      if (requiresSelection) {\n        if (lowLightTokens.length && lowLightTokens.length === relevantTokens.length) {\n          multiplier = { dim: 999, bright: 999 };\n          for (const t of lowLightTokens) {\n            const tokenVision = t.actorVision;\n            multiplier.dim = Math.min(multiplier.dim, tokenVision.lowLightMultiplier);\n            multiplier.bright = Math.min(multiplier.bright, tokenVision.lowLightMultiplierBright);\n          }\n        }\n      } else {\n        for (const t of lowLightTokens) {\n          const tokenVision = t.actorVision;\n          multiplier.dim = Math.max(multiplier.dim, tokenVision.lowLightMultiplier);\n          multiplier.bright = Math.max(multiplier.bright, tokenVision.lowLightMultiplierBright);\n        }\n      }\n\n      result.dim *= multiplier.dim;\n      result.bright *= multiplier.bright;\n\n      return result;\n    }\n  };\n\n/**\n * Re-initialize light sources.\n *\n * @remarks\n * Foundry v12 no longer initializes the lights fully on calling perception manager to do so, making the following insufficient.\n * ```js\n * canvas.perception.update({ initializeLighting: true }, true);\n * ```\n */\nexport function reinitLightSources() {\n  for (const { object } of canvas.effects.lightSources) {\n    object.initializeLightSource?.();\n  }\n}\n\n/**\n * Debounced call to {@link reinitLightSources}\n */\nexport const debouncedLightSourceReInit = foundry.utils.debounce(reinitLightSources, 100);\n\nHooks.on(\"renderAmbientLightConfig\", (app, html) =>\n  pf1.canvas.lowLightVision.addLowLightVisionToLightConfig(app, html)\n);\n","export class TokenPF extends Token {\n  /**\n   * Synced with Foundry v12\n   *\n   * @override\n   * @param {string|object} effect - Effect ID or data\n   * @param {object} options - Additional options\n   * @param {boolean} [options.active] - Force active state\n   * @param {boolean} [options.overlay=false] - Overlay effect\n   * @param {boolean} [options.interaction=true] - Nonstandard. Is this triggered by user interaction?\n   * @returns {Promise<boolean>} - was it applied or removed\n   */\n  async toggleEffect(effect, { active, overlay = false, interaction = true } = {}) {\n    const effectId = typeof effect === \"string\" ? effect : effect?.id;\n\n    if (this.actor && pf1.registry.conditions.has(effectId) && typeof this.actor.toggleCondition === \"function\") {\n      const enable = active ?? !this.actor.statuses.has(effectId);\n      if (enable && this.actor.getConditionImmunities().has(effectId)) {\n        if (interaction) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n              name: this.actor.name,\n              condition: pf1.registry.conditions.get(effectId)?.name || effectId,\n            })\n          );\n        }\n        return false;\n      }\n\n      const extraData = overlay ? { flags: { core: { overlay: true } } } : undefined;\n\n      let rv;\n      if (active === undefined) rv = await this.actor.toggleCondition(effectId, extraData);\n      else {\n        if (active && overlay) active = extraData; // Support right click\n        rv = await this.actor.setCondition(effectId, active);\n      }\n      return rv[effectId];\n    } else {\n      return super.toggleEffect(effect, { active, overlay });\n    }\n  }\n\n  get actorVision() {\n    const ll = this.actor.system.traits?.senses?.ll ?? {};\n    return {\n      lowLight: ll.enabled,\n      lowLightMultiplier: ll.multiplier?.dim,\n      lowLightMultiplierBright: ll.multiplier?.bright,\n    };\n  }\n\n  get disableLowLight() {\n    return this.document.getFlag(\"pf1\", \"disableLowLight\") === true;\n  }\n\n  /**\n   * @override\n   * @param {object} options - Control options\n   */\n  _onControl(options) {\n    super._onControl(options);\n\n    pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n  }\n\n  /**\n   * @override\n   * @param {object} options - Release options\n   */\n  _onRelease(options) {\n    super._onRelease(options);\n\n    pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n  }\n\n  /**\n   * Override to support vision sharing and setting for minimum needed permission level.\n   *\n   * Synced with Foundry v12.331 & v13.340\n   *\n   * @override\n   * @since PF1 v10\n   */\n  _isVisionSource() {\n    if (!canvas.visibility.tokenVision || !this.hasSight) return false;\n\n    // Only display hidden tokens for the GM\n    const isGM = game.user.isGM;\n    if (this.document.hidden && !isGM) return false;\n\n    // Always display controlled tokens which have vision\n    if (this.controlled) return true;\n\n    // Otherwise, vision is ignored for GM users\n    if (isGM) return false;\n\n    // Vision sharing (explicit boolean test to avoid problems with corrupt sharing data)\n    if (this.actor?.sharesVision === true) return true;\n\n    // If a non-GM user controls no other tokens with sight, display sight\n    const guarantee = game.settings.get(\"pf1\", \"guaranteedVision\");\n    const canObserve = this.actor?.testUserPermission(game.user, guarantee) ?? false;\n    if (!canObserve) return false;\n    return !this.layer.controlled.some((t) => !t.document.hidden && t.hasSight);\n  }\n\n  /**\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The number to boost the bar by, if any.\n   * @protected\n   */\n  _getBarBoost(data) {\n    if (data.attribute === \"attributes.hp\") return { value: this.actor.system.attributes.hp.temp, color: 0xc0d6e4 };\n    if (data.attribute === \"attributes.vigor\")\n      return { value: this.actor.system.attributes.vigor.temp, color: 0xc0d6e4 };\n    return null;\n  }\n\n  /**\n   * Determines the length of the underline (bottom half-height bar overlay) on a token bar.\n   *\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The value of the bar underline, if any.\n   * @protected\n   */\n  _getBarUnderline(data) {\n    if (data.attribute === \"attributes.hp\")\n      return { value: this.actor.system.attributes.hp.nonlethal, color: 0x7d2828 };\n    return null;\n  }\n\n  /**\n   * Draw a single resource bar, given provided data.\n   *\n   * @param {number} number       The Bar number>\n   * @param {PIXI.Graphics} bar   The Bar container.\n   * @param {object} data         Resource data for this bar.\n   * @protected\n   */\n  _drawBar(number, bar, data) {\n    // Get boost value (such as temporary hit points\n    const boost = this._getBarBoost(data);\n    const underline = this._getBarUnderline(data);\n    const boostlessMax = data.max;\n\n    const val = Number(data.value);\n    data.max = Math.max(data.max, (boost?.value ?? 0) + val);\n    const pct = Math.clamp(val, 0, data.max) / data.max;\n    const boostlessPct = Math.clamp(val, 0, boostlessMax) / boostlessMax;\n\n    // Determine sizing\n    let h = Math.max(canvas.dimensions.size / 12, 8);\n    const w = this.w;\n    const bs = Math.clamp(h / 8, 1, 2);\n    if (this.document.height >= 2) h *= 1.6; // Enlarge the bar for large tokens\n\n    // Determine the color to use\n    const blk = 0x000000;\n    let color;\n    if (number === 0) color = Color.fromRGBvalues(1 - boostlessPct / 2, boostlessPct, 0);\n    else color = Color.fromRGBvalues(0.5 * boostlessPct, 0.7 * boostlessPct, 0.5 + boostlessPct / 2);\n\n    // Draw the bar\n    bar.clear();\n    // Draw background of bar\n    bar.beginFill(blk, 0.5).lineStyle(bs, blk, 1.0).drawRoundedRect(0, 0, this.w, h, 3);\n    // Draw bar boost\n    if (boost?.value > 0) {\n      const pct = Math.clamp(val + boost.value, 0, data.max) / data.max;\n      bar\n        .beginFill(boost.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, 0, pct * w, h, 2);\n    }\n\n    // Draw normal value\n    bar\n      .beginFill(color, 1.0)\n      .lineStyle(bs, blk, 1.0)\n      .drawRoundedRect(0, 0, pct * w, h, 2);\n    // Draw bar underline\n    if (underline?.value > 0) {\n      const pct = Math.clamp(underline.value, 0, data.max) / data.max;\n      bar\n        .beginFill(underline.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, h / 2, pct * w, h / 2, 2);\n    }\n\n    // Set position\n    const posY = number === 0 ? this.h - h : 0;\n    bar.position.set(0, posY);\n  }\n\n  /**\n   * Returns error margin, in pixels, for measuring to and from token center.\n   *\n   * Defined as larger of half the token's width and height.\n   *\n   * @type {number}\n   */\n  get sizeErrorMargin() {\n    return Math.max(this.w / 2, this.h / 2);\n  }\n\n  /**\n   * Return coordinates of cells the token occupies.\n   *\n   * Bug: Does not work with hex grid.\n   * Bug: Does not account for rotation.\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.center=false] - Return cell centers instead of origins\n   * @returns {Point[]} - Occupied cell coordinates.\n   */\n  getOccupiedCells({ center = false } = {}) {\n    const doc = this.document;\n    const gridSizePx = this.scene.grid.size ?? 1;\n    const { x, y, width, height } = doc;\n\n    // Offset for returning cell center\n    const offset = center ? gridSizePx / 2 : 0;\n\n    const squares = [];\n\n    const wr = width - 1,\n      hr = height - 1;\n\n    for (let x0 = 0; x0 <= wr; x0++) {\n      for (let y0 = 0; y0 <= hr; y0++) {\n        squares.push({ x: x + x0 * gridSizePx + offset, y: y + y0 * gridSizePx + offset });\n      }\n    }\n\n    return squares;\n  }\n\n  /**\n   * Is this token a square?\n   *\n   * @type {boolean}\n   */\n  get isSquare() {\n    return this.document.width === this.document.height;\n  }\n}\n","/**\n * See invisibility detection mode with respect to sight (light & darkvision)\n *\n * Replacement for `CONFIG.Canvas.detectionModes.seeInvisibility`\n */\nexport class DetectionModeInvisibilityPF extends DetectionModeInvisibility {\n  static ID = \"seeInvisibility\";\n  static LABEL = \"PF1.Sense.seeInvis\";\n  static PRIORITY = 100000;\n\n  /**\n   * Copy of DetectionModeBasicSight._testPoint instead of the one inherited from DetectionMode.\n   *\n   * Allows seeing invisible in lit areas.\n   *\n   * @override\n   */\n  _testPoint(visionSource, mode, target, test) {\n    // Blocked by walls\n    if (!this._testLOS(visionSource, mode, target, test)) return false;\n    // Otherwise allowed within range\n    if (this._testRange(visionSource, mode, target, test)) return true;\n\n    // If limited (e.g. true seeing), do not care about other light sources beyond range\n    if (mode.limited) return false;\n\n    // Allowed outside of range if lit\n    const { x, y } = test.point;\n    for (const lightSource of canvas.effects.lightSources.values()) {\n      if (!lightSource.active) continue;\n      if (lightSource.shape.contains(x, y)) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Blindsense\n *\n * Registered at `CONFIG.Canvas.detectionModes.blindSense`\n */\nexport class DetectionModeBlindSensePF extends DetectionMode {\n  static ID = \"blindSense\";\n  static LABEL = \"PF1.Sense.blindsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200100;\n\n  constructor(data = {}, ...args) {\n    data.walls = true;\n    super(data, ...args);\n  }\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: this.ID === \"blindSense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    return true;\n  }\n}\n\n/**\n * Blindsight\n *\n * Registered at `CONFIG.Canvas.detectionModes.blindSight`\n */\nexport class DetectionModeBlindSightPF extends DetectionModeBlindSensePF {\n  static ID = \"blindSight\";\n  static LABEL = \"PF1.Sense.blindsight\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200000;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: false,\n    }));\n  }\n}\n\n/**\n * Lifesense\n *\n * Registered at `CONFIG.Canvas.detectionModes.lifesense`\n */\nexport class DetectionModeLifesensePF extends DetectionMode {\n  static ID = \"lifesense\";\n  static LABEL = \"PF1.Sense.lifesense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200200;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [1, 0.1, 0.2, 1],\n      knockout: false,\n      wave: this.ID === \"lifesense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    const rv = super._canDetect(visionSource, target);\n\n    if (rv) {\n      const traits = target.actor?.system?.traits;\n      if (!traits?.living) {\n        return false;\n      }\n    }\n\n    return rv;\n  }\n}\n\n/**\n * Tremorsense\n *\n * Unlike base implementation, does not block with walls but also does not detect swimming.\n *\n * Replacement for `CONFIG.Canvas.detectionModes.feelTremor`\n */\nexport class DetectionModeTremorPF extends DetectionModeTremor {\n  static ID = \"feelTremor\";\n  static LABEL = \"PF1.Sense.tremorsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.MOVE;\n  static PRIORITY = 201000;\n\n  constructor(data = {}, ...args) {\n    data.walls = false;\n    super(data, ...args);\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    const rv = super._canDetect(visionSource, target);\n\n    if (rv) {\n      // Do not detect swimming\n      if (target.document.hasStatusEffect(CONFIG.specialStatusEffects.SWIM)) return false;\n    }\n\n    return rv;\n  }\n}\n","/**\n * Rules accurate darkvision override.\n *\n * Replacement for `CONFIG.Canvas.visionModes.darkvision`\n *\n * @remarks\n * Compared to example implementation, this does not turn dim light into bright.\n *\n * @type {VisionMode}\n */\nexport const darkvision = (() => {\n  const data = CONFIG.Canvas.visionModes.darkvision.toObject();\n  delete data.lighting.levels[VisionMode.LIGHTING_LEVELS.DIM];\n  return new VisionMode(data);\n})();\n","import { clearHighlight, showAttackReach } from \"./attack-reach.mjs\";\nimport { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Extension of core Token HUD\n *\n * @since PF1 v11\n */\nexport class TokenHUDPF extends TokenHUD {\n  _getStatusEffectChoices() {\n    const core = super._getStatusEffectChoices(),\n      buffs = {};\n\n    const items = this.object.actor?.itemTypes.buff ?? [];\n    for (const buff of items) {\n      const id = `buff-${buff.id}`;\n      buffs[id] = {\n        _id: id, // to match v12\n        id,\n        title: buff.name,\n        src: buff.img,\n        isActive: buff.isActive,\n        isOverlay: false,\n        cssClass: buff.isActive ? \"active\" : \"\",\n      };\n    }\n\n    return { ...core, ...buffs };\n  }\n\n  // V12 and prior\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    this.addQuickActions(this, html[0]);\n  }\n\n  // V13\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    this.addQuickActions(this, this.element);\n  }\n\n  /**\n   * Add quick action buttons to token HUD.\n   *\n   * @param {TokenHUD} app - HUD app\n   * @param {Element} html - HUD element\n   */\n  async addQuickActions(app, html) {\n    const token = app.object;\n    const actor = token.actor;\n\n    const quickActions = actor?.getQuickActions?.();\n\n    if (!quickActions?.length) return;\n\n    const templateData = {\n      actions: quickActions,\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/hud/quick-actions.hbs\", templateData);\n    const fragment = template.content;\n\n    this.addQuickActionListeners(fragment);\n\n    Hooks.callAll(\"pf1RenderQuickActions\", app, token, fragment);\n\n    html.querySelector(\".col.middle\").after(fragment);\n  }\n\n  /**\n   * Add listeners to token HUD quick action element.\n   *\n   * @param {DocumentFragment} html - Quick actions element\n   */\n  addQuickActionListeners(html) {\n    const showReach = game.settings.get(\"pf1\", \"performance\").reachLimit >= 10;\n\n    const token = this.object;\n    const actor = token.actor;\n\n    for (const el of html.querySelectorAll(\".token-quick-action\")) {\n      el.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        const itemId = event.target.dataset.itemId;\n        const item = actor.items.get(itemId);\n        if (!event.ctrlKey) {\n          item.use({ ev: event, token: token.document, skipDialog: getSkipActionPrompt() });\n        } else {\n          item.displayCard({ token: token.document });\n        }\n      });\n\n      el.addEventListener(\"contextmenu\", (event) => {\n        event.preventDefault();\n        const itemId = event.target.dataset.itemId;\n        const item = actor.items.get(itemId);\n        item.sheet.render(true, { focus: true });\n      });\n\n      // Reach highlight on mouse hover\n      if (showReach) {\n        const itemId = el.dataset.itemId;\n        const item = actor.items.get(itemId);\n        const action = item.defaultAction;\n        el.addEventListener(\"pointerenter\", () => showAttackReach(token, action), { passive: true });\n        el.addEventListener(\"pointerleave\", () => clearHighlight(), { passive: true });\n      }\n    }\n  }\n\n  /*\n  // TODO: Do actual choice constraints\n  _getMovementActionChoices() {\n    const choices = super._getMovementActionChoices();\n\n    //const token = this.token.document;\n    //const allowed = token.allowedMovement;\n\n    return choices;\n  }\n  */\n}\n","import { MeasuredTemplatePF } from \"./measure.mjs\";\n\n/**\n * A helper class for building MeasuredTemplates for PF1 spells and abilities\n */\nexport class AbilityTemplate extends MeasuredTemplatePF {\n  /**\n   * Preview movement and rotation re-render throttle time in milliseconds.\n   *\n   * @private\n   */\n  static RENDER_THROTTLE = 30;\n\n  /**\n   * A factory method to create an AbilityTemplate instance using provided data\n   *\n   * @param {object} data - Data used to create the template\n   * @param {\"cone\" | \"circle\" | \"rect\" | \"ray\"} data.type - The type of template\n   * @param {number} data.distance - The distance/size of the template\n   * @param {string} [data.texture=null] - Path to template texture\n   * @param {string} [data.color=game.user.color] - Template color\n   * @param {object} [data.flags] - Additional flags stored on the template\n   * @param {object} [options]\n   * @param {pf1.components.ItemAction} [options.action]\n   * @returns {AbilityTemplate|null} - The template object, or null if the data does not produce a template\n   */\n  static fromData(data, { action } = {}) {\n    const { type, distance, flags } = data;\n    if (!type || !distance || !canvas.scene) return null;\n    if (![\"cone\", \"circle\", \"rect\", \"ray\"].includes(type)) return null;\n\n    // Prepare template data\n    const templateData = {\n      t: type,\n      distance: distance || game.system.grid.distance,\n      direction: 0,\n      x: 0,\n      y: 0,\n      flags,\n      fillColor: data.color ? data.color : game.user.color,\n      texture: data.texture ? data.texture : null,\n    };\n\n    // Additional type-specific data\n    switch (type) {\n      case \"cone\":\n        templateData.angle = game.settings.get(\"pf1\", \"measureStyle\")\n          ? game.canvas.grid.isHexagonal\n            ? 60\n            : CONFIG.MeasuredTemplate.defaults.angle\n          : CONFIG.MeasuredTemplate.defaults.originalAngle;\n        break;\n\n      case \"rect\":\n        templateData.distance = Math.sqrt(Math.pow(distance, 2) + Math.pow(distance, 2));\n        templateData.direction = 45;\n        break;\n\n      case \"ray\":\n        templateData.width = CONFIG.MeasuredTemplate.defaults.width;\n        break;\n      default:\n        break;\n    }\n\n    // Return the template constructed from the item data\n    const cls = CONFIG.MeasuredTemplate.documentClass;\n    const template = new cls(templateData, { parent: canvas.scene });\n    const object = new this(template);\n    object.action = action;\n    return object;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Creates a preview of the spell template\n   *\n   * @override\n   * @param {Event} _event - The initiating click event\n   * @returns {Promise<object>} - Result\n   */\n  async drawPreview(_event) {\n    const initialLayer = canvas.activeLayer;\n    await this.draw();\n    this.layer.activate();\n    this.layer.preview.addChild(this);\n    return this.activatePreviewListeners(initialLayer);\n  }\n\n  /* -------------------------------------------- */\n\n  // Use system style\n  pfStyle = true;\n\n  // Event handlers\n  #events;\n\n  // Initial layer\n  #initialLayer;\n\n  /**\n   * Activate listeners for the template preview\n   *\n   * @param {CanvasLayer} initialLayer  The initially active CanvasLayer to re-activate after the workflow is complete\n   * @returns {Promise<object>} Returns result object\n   */\n  activatePreviewListeners(initialLayer) {\n    this.#initialLayer = initialLayer;\n    this.pfStyle = game.settings.get(\"pf1\", \"measureStyle\") === true;\n\n    return new Promise((resolve, reject) => {\n      // Prepare events\n      this.#events = {\n        confirm: this._onConfirm.bind(this),\n        cancel: this._onCancel.bind(this),\n        move: this._onMove.bind(this),\n        rotate: this._onRotate.bind(this),\n        resolve,\n        reject,\n      };\n\n      // Prevent interactions with control icon\n      // This also allows left and right click to work correctly\n      if (this.controlIcon) this.controlIcon.removeAllListeners();\n\n      // Activate listeners\n      canvas.stage.on(\"pointermove\", this.#events.move);\n      canvas.stage.on(\"click\", this.#events.confirm);\n      canvas.app.view.addEventListener(\"contextmenu\", this.#events.cancel);\n      canvas.app.view.addEventListener(\"wheel\", this.#events.rotate);\n    });\n  }\n\n  #lastMove = 0;\n\n  // Update placement (mouse-move)\n  _onMove(event) {\n    event.stopPropagation();\n\n    // Throttle\n    const now = performance.now();\n    if (now - this.#lastMove <= this.constructor.RENDER_THROTTLE) return;\n\n    const snapMode =\n      CONST.GRID_SNAPPING_MODES.CENTER | CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT | CONST.GRID_SNAPPING_MODES.CORNER;\n\n    const center = event.data.getLocalPosition(this.layer);\n    const pos = canvas.grid.getSnappedPoint(center, { mode: snapMode });\n\n    // TODO: Adjust template size if placing in middle of a square (especially if on a token)\n\n    this.document.updateSource({\n      x: pos.x,\n      y: pos.y,\n    });\n\n    this.refresh();\n\n    this.#lastMove = now;\n  }\n\n  /**\n   * Cancel the workflow (right-click)\n   *\n   * @param {Event} event\n   */\n  _onCancel(event) {\n    console.debug(\"PF1 | Cancelling template placement for\", this.action?.item?.name ?? \"unknown\");\n\n    this._onFinish(event);\n    this.#events.reject();\n  }\n\n  // Confirm the workflow (left-click)\n  _onConfirm(event) {\n    console.debug(\"PF1 | Placing template for\", this.action?.item?.name ?? \"unknown\");\n\n    this._onFinish(event);\n\n    // Reject if template size is zero\n    if (!this.document.distance) return this.#events.reject();\n\n    // Create the template\n    // TODO: This should create the template directly and resolve with it.\n    const result = {\n      result: true,\n      place: async () => {\n        this.document = await MeasuredTemplateDocument.create(this.document.toObject(false), { parent: canvas.scene });\n        return this.document;\n      },\n      delete: () => {\n        return this.document.delete();\n      },\n    };\n\n    this.#events.resolve(result);\n  }\n\n  /**\n   * Rotate the template by 3 degree increments (mouse-wheel)\n   *\n   * @param {Event} event\n   */\n  _onRotate(event) {\n    event.preventDefault(); // Prevent browser zoom\n    event.stopPropagation(); // Prevent other handlers\n\n    let { distance, direction } = this.document,\n      delta;\n\n    if (event.ctrlKey) {\n      delta = canvas.dimensions.distance * -Math.sign(event.deltaY);\n      distance += delta;\n      if (distance < 0) distance = 0;\n    } else {\n      let snap;\n      if (this.pfStyle && this.document.t === \"cone\") {\n        delta = game.canvas.grid.isHexagonal ? 60 : 90;\n        snap = event.shiftKey ? delta : game.canvas.grid.isHexagonal ? 30 : 45;\n      } else {\n        delta = canvas.grid.type > CONST.GRID_TYPES.SQUARE ? 30 : 15;\n        snap = event.shiftKey ? delta : 5;\n      }\n      if (this.document.t === \"rect\") {\n        snap = Math.sqrt(Math.pow(5, 2) + Math.pow(5, 2));\n        distance += snap * -Math.sign(event.deltaY);\n      } else {\n        direction += snap * Math.sign(event.deltaY);\n      }\n    }\n\n    this.document.updateSource({ distance, direction });\n\n    this.refresh();\n  }\n\n  /** @override */\n  _onClickRight(event) {\n    event.stopPropagation(); // Prevent right click counting as left click\n  }\n\n  /**\n   * @param {Event} event\n   */\n  _onFinish(event) {\n    // Call Foundry's preview cleanup\n    this.layer._onDragLeftCancel(event);\n\n    // Remove listeners\n    canvas.stage.off(\"pointermove\", this.#events.move);\n    canvas.stage.off(\"click\", this.#events.confirm);\n    canvas.app.view.removeEventListener(\"contextmenu\", this.#events.cancel);\n    canvas.app.view.removeEventListener(\"wheel\", this.#events.rotate);\n\n    this.#initialLayer.activate();\n  }\n}\n","import { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { RollPF } from \"./roll.mjs\";\n\n/**\n * A class adding additional functionality to `Roll` class for d20 based Pathfinder rolls.\n */\nexport class D20RollPF extends RollPF {\n  /** @type {D20RollOptions} */\n  options;\n\n  /**\n   * Standard roll used by the system (1d20).\n   *\n   * @readonly\n   */\n  static standardRoll = \"1d20\";\n\n  /**\n   * @param {string} formula - The roll formula to parse\n   * @param {object} [data] - The data object against which to parse attributes within the formula\n   * @param {Partial<D20RollConstructorOptions>} [options] - Options\n   * @param {D20RollContext} [context] - Context\n   */\n  constructor(formula, data, options = {}, context = {}) {\n    super(formula, data, options);\n    this.options = foundry.utils.mergeObject(this.constructor.defaultOptions, options);\n\n    // Cleanup redundant options\n    if (!Number.isFinite(this.options.critical)) delete this.options.critical;\n    if (this.options.check) delete this.options.check; // Keep only if set to false\n    if (!this.options.flavor) delete this.options.flavor;\n    if (!Number.isFinite(this.options.staticRoll)) delete this.options.staticRoll;\n    if (!this.options.bonus) delete this.options.bonus;\n    if (!Number.isFinite(this.options.dc)) delete this.options.dc;\n\n    this.context = context;\n\n    this._applyStaticRoll();\n  }\n\n  /**\n   * Apply static roll, such as Take 10/20\n   *\n   * @param {boolean} [force] - Ignore evaluated state of the roll and apply static roll config anyway.\n   * @protected\n   */\n  _applyStaticRoll(force = false) {\n    // Spoof only if check isn't disabled\n    if (this.options.check === false) return;\n    // _evaluate() has _evaluated already set true and the override is needed\n    if (this._evaluated && force !== true) return;\n\n    const d20 = this.d20;\n    const result = d20.total;\n\n    const isNumeric = d20 instanceof foundry.dice.terms.NumericTerm;\n    const isDie = d20 instanceof foundry.dice.terms.Die;\n\n    if (isNumeric) {\n      this.options.staticRoll = result;\n    } else if (isDie) {\n      /* NOP */\n    } else {\n      // Conflict between numeric term and static roll\n      throw new Error(`Invalid D20RollPF formula provided: ${this._formula}`);\n    }\n\n    if (!this.isStatic) return;\n\n    const die = isDie ? d20.toJSON() : {};\n\n    // Configure static roll\n    die.number = 1;\n    die.faces = 20;\n    die.results = [\n      {\n        result: this.options.staticRoll,\n        active: true,\n      },\n    ];\n    die.method = \"manual\"; // Spoof resolver for consistency\n    die.evaluated = true;\n\n    // Record spoofed term\n    this.terms[0] = new foundry.dice.terms.Die(die);\n  }\n\n  /**\n   * Default options for D20Rolls\n   *\n   * @type {Partial<D20RollOptions>}\n   */\n  static get defaultOptions() {\n    return { critical: 20 };\n  }\n\n  /**\n   * The default handlebars template used to render the roll's dialog\n   *\n   * @type {string}\n   * @readonly\n   */\n  static DIALOG_TEMPLATE = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n\n  /**\n   * The default handlebars template used to render the roll's chat message\n   *\n   * @type {string}\n   * @readonly\n   */\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll-ext.hbs\";\n\n  /**\n   * Static roll results\n   *\n   * @enum {number}\n   * @readonly\n   */\n  static STATIC_ROLL = {\n    TEN: 10,\n    TWENTY: 20,\n  };\n\n  /**\n   * The D20 die this roll is based on.\n   *\n   * @type {Die}\n   */\n  get d20() {\n    // this.dice[0] returns wrong number if formula had, for example, a die roll inside parenthesis.\n    return this.terms[0];\n  }\n\n  /**\n   * Is this a proper check?\n   *\n   * @type {boolean}\n   */\n  get isCheck() {\n    return this.options.check !== false;\n  }\n\n  /**\n   * Is this roll a critical success? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isCrit() {\n    if (!this._evaluated) return undefined;\n    if (!Number.isFinite(this.options.critical)) return false;\n    return this.d20.total >= this.options.critical;\n  }\n\n  /**\n   * Is this roll a natural 20? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat20() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 20;\n  }\n\n  /**\n   * Is this roll a natural 1? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat1() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 1;\n  }\n\n  /**\n   * Difficulty Class\n   *\n   * @type {number|undefined}\n   */\n  get dc() {\n    return this.options.dc;\n  }\n\n  /**\n   * Is this roll a success against its DC?\n   *\n   * @remarks\n   * - Returns undefined if no DC is known or if the roll is not evaluated yet.\n   *\n   * @type {boolean|undefined}\n   */\n  get isSuccess() {\n    if (!this._evaluated) return undefined;\n    const dc = this.dc;\n    if (!Number.isFinite(dc)) return undefined;\n    if (dc <= this.total) return true;\n    return false;\n  }\n\n  /**\n   * Is this roll a failure against its DC?\n   *\n   * @remarks\n   * - Returns undefined if no DC is known or if the roll is not evaluated yet.\n   *\n   * @type {boolean|undefined}\n   */\n  get isFailure() {\n    if (!this._evaluated) return undefined;\n    const dc = this.dc;\n    if (!Number.isFinite(dc)) return undefined;\n    if (dc > this.total) return true;\n    return false;\n  }\n\n  /**\n   * DC offset\n   *\n   * @remarks\n   * - Returns NaN if no DC is defined.\n   * - Returns NaN if the roll has not been evaluated.\n   *\n   * @type {number}\n   */\n  get offset() {\n    if (!this._evaluated) return NaN;\n    return this.total - this.dc;\n  }\n\n  /**\n   * How many 5s over the DC is this?\n   *\n   * Primarily meant for things like Heal check bonus healing or similar.\n   *\n   * @remarks\n   * - Returns NaN if no DC is defined.\n   *\n   * @type {number}\n   */\n  get overBy5() {\n    return Math.floor(this.offset / 5);\n  }\n\n  /**\n   * Is this roll a misfire.\n   *\n   * @type {boolean|void}\n   */\n  get isMisfire() {\n    if (!this._evaluated) return undefined;\n    return this.natural <= (this.options.misfire ?? 0);\n  }\n\n  /**\n   * Natural roll value. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get natural() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total;\n  }\n\n  /**\n   * Is static roll (e.g. Take 20)\n   *\n   * @type {boolean}\n   */\n  get isStatic() {\n    return Number.isFinite(this.options.staticRoll) || this.d20.method === \"manual\";\n  }\n\n  /**\n   * Is not an actual roll.\n   *\n   * @type {boolean}\n   */\n  get isNonRoll() {\n    return this.d20.constructor.name !== \"Die\" && this.options.check === false;\n  }\n\n  /**\n   * Is a normal d20\n   *\n   * @type {boolean}\n   */\n  get isNormal() {\n    return this.d20.expression === this.constructor.standardRoll;\n  }\n\n  /**\n   * Modifier on the roll besides natural roll. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get bonus() {\n    if (!this._evaluated) return undefined;\n    return this.total - this.natural;\n  }\n\n  /**\n   * Return a standardized representation for the displayed formula associated with this Roll.\n   * This formula includes any {@link D20RollOptions.bonus bonus} that might not be part of this roll's {@link terms}.\n   *\n   * @type {string}\n   */\n  get formula() {\n    let formula = this.constructor.getFormula(this.terms);\n    const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n    if (this.options.bonus && !this._evaluated) formula += ` + ${this.constructor.getFormula(bonusTerms)}`;\n    return formula;\n  }\n\n  /**\n   * The flavor this roll was created with.\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor;\n  }\n\n  /**\n   * Render a {@link Dialog} for the user to enter additional bonuses, set a static roll result, or take 10/20.\n   *\n   * @param {D20RollDialogOptions} [options] - Additional options determining what options to show in the dialog\n   * @returns {Promise<this | null>} A promise that resolves when the dialog is closed\n   */\n  async promptDialog(options = {}) {\n    const { rollMode = game.settings.get(\"core\", \"rollMode\"), template = this.constructor.DIALOG_TEMPLATE } = options;\n    const d20 = this.isStatic ? this.options.staticRoll : this.d20.formula;\n    const hasDC = Number.isFinite(options.dc);\n    const editDC = game.user.isGM || !hasDC || !game.settings.get(\"pf1\", \"obscureSaveDCs\");\n    const templateData = {\n      check: true,\n      data: this.data,\n      rollMode: options.rollMode || rollMode,\n      rollModes: CONFIG.Dice.rollModes,\n      // TODO: Move this standard roll obfuscation to dialog handling\n      d20: d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20, // Do not show standard roll in the input field\n      bonus: this.options.bonus || options.bonus, // DEPRECATED: this.options.bonus to be removed with PF1 v12\n      dc: options.dc,\n      editDC,\n    };\n\n    let title = options.title || game.i18n.localize(\"PF1.Roll\");\n    // Display DC, if allowed\n    if (hasDC && editDC) title += \" (\" + game.i18n.format(\"PF1.DCThreshold\", { threshold: options.dc }) + \")\";\n\n    const dialogData = {\n      window: { title, icon: \"fa-solid fa-dice-d20\" },\n      position: { width: 420 },\n      classes: [\"pf1-v2\", \"roll-prompt\"],\n      content: await renderTemplate(template, templateData),\n      buttons: [\n        {\n          action: \"normal\",\n          default: true,\n          icon: \"fa-solid fa-dice-d20\",\n          label: game.i18n.localize(\"PF1.Normal\"),\n          callback: (event, button, html) => this._onDialogSubmit(html, null),\n        },\n        {\n          action: \"take10\",\n          label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TEN }),\n          callback: (event, button, html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TEN),\n        },\n        {\n          action: \"take20\",\n          label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TWENTY }),\n          callback: (event, button, html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TWENTY),\n        },\n      ],\n      close: () => null,\n      rejectClose: false,\n      subject: options.subject,\n      speaker: options.speaker,\n      roll: this,\n    };\n\n    if (options.dialogOptions) {\n      foundry.utils.mergeObject(dialogData, options.dialogOptions);\n    }\n\n    return foundry.applications.api.DialogV2.wait(dialogData);\n  }\n\n  /**\n   * Converts form element to object\n   *\n   * @protected\n   * @param {HTMLFormElement} html\n   * @returns {object} - Expanded form data\n   */\n  _getFormData(html) {\n    return foundry.utils.expandObject(new FormDataExtended(html).object);\n  }\n\n  /**\n   * A callback applying the user's input from the dialog to the roll and its options.\n   *\n   * @protected\n   * @param {HTMLElement} html - The dialog's submitted HTML\n   * @param {number | null} [staticRoll] - A static roll result to use instead of rolling the dice\n   * @returns {D20RollPF} This roll\n   */\n  _onDialogSubmit(html, staticRoll) {\n    if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n    const form = html.querySelector(\"form\");\n    if (!form) return this;\n    const formData = this._getFormData(form);\n\n    if (formData.bonus) this.options.bonus = formData.bonus;\n\n    if (formData.d20) {\n      const baseDice = this.constructor.parse(formData.d20, this.data);\n      // If a static roll is given as d20 input, Take X button clicks are ignored\n      if (baseDice[0] instanceof foundry.dice.terms.NumericTerm) this.options.staticRoll = baseDice[0].total;\n      else if (baseDice[0] instanceof foundry.dice.terms.Die) {\n        this.terms = [...baseDice, ...this.terms.slice(1)];\n        // d20 input is actual dice, so Take X buttons are respected\n        this.options.staticRoll = staticRoll;\n      }\n    } else {\n      // No d20 input, base die is default, so Take X buttons are respected\n      this.options.staticRoll = staticRoll;\n    }\n\n    if (formData.rollMode) {\n      this.options.rollMode = formData.rollMode;\n    }\n\n    if (Number.isFinite(formData.dc)) this.options.dc = formData.dc;\n\n    this._formula = this.constructor.getFormula(this.terms);\n\n    return this;\n  }\n\n  /**\n   * Render a Roll instance to HTML\n   *\n   * @override\n   * @param {object} [options={}] - Options which affect how the Roll is rendered\n   * @param {string} [options.flavor] - Flavor text to include\n   * @param {string} [options.template] - A custom HTML template path\n   * @param {boolean} [options.isPrivate=false] - Is the Roll displayed privately?\n   * @returns {Promise<string>} - The rendered HTML template as a string\n   * Synced with Foundry v12.331\n   */\n  async render({ flavor, template = this.constructor.CHAT_TEMPLATE, isPrivate = false } = {}) {\n    if (!this._evaluated) await this.evaluate({ allowInteractive: !isPrivate });\n\n    const templateData = {\n      onDemand: true,\n      isPrivate,\n      formula: isPrivate ? \"???\" : this._formula,\n      flavor: isPrivate ? null : (flavor ?? this.options.flavor),\n      user: game.user.id,\n      details: isPrivate ? \"\" : await this.getTooltip(),\n      total: isPrivate ? \"?\" : pf1.utils.limitPrecision(this.total, 2), // Total result\n      roll: this,\n      d20: this.d20.total, // Natural d20 roll\n      bonus: this.bonus, // Total bonus to the roll\n      precision: Math.floor((this.total - Math.floor(this.total)) * 100), // Extra precision\n      isCrit: this.isCrit,\n      isMisfire: this.isMisfire,\n      isNat20: this.isNat20,\n      isNat1: this.isNat1,\n      dc: this.dc,\n      hasDC: Number.isFinite(this.dc),\n      isSuccess: this.isSuccess,\n      isFailure: this.isFailure,\n      natural: this.natural,\n      options: this.options,\n      isStatic: this.isStatic,\n      isNormal: this.isNormal,\n      isNonRoll: this.isNonRoll,\n      get isAbnormal() {\n        if (this.isNonRoll) return false; // Technically abnormal but not override\n        return this.isStatic || !this.isNormal;\n      },\n      get abnormalTooltip() {\n        if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.d20 });\n        else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n        else return \"\";\n      },\n    };\n\n    return renderTemplate(template, templateData);\n  }\n\n  /**\n   * Transform this roll into a {@link ChatMessage} displaying the result.\n   * This function can either create a ChatMessage (by default) or return the data object that would be used to create one.\n   *\n   * @param {object} messageData - The data object to use when creating the message\n   * @param {D20RollChatOptions} options - Additional options which configure how the message is created\n   * @returns {Promise<ChatMessage | object>} The created ChatMessage document, or the object of data that would be used to create one\n   */\n  async toMessage(messageData = {}, options = {}) {\n    if (!this._evaluated) await this.evaluate();\n\n    const chatTemplate = options.chatTemplate || this.constructor.CHAT_TEMPLATE;\n    const chatTemplateData = foundry.utils.mergeObject(\n      {\n        formula: this.formula,\n        details: await this.getTooltip(),\n        roll: this,\n        d20: this.d20.total, // Natural d20 roll\n        total: pf1.utils.limitPrecision(this.total, 2), // Total result\n        bonus: this.bonus, // Total bonus to the roll\n        precision: Math.floor((this.total - Math.floor(this.total)) * 100), // Extra precision\n        isCrit: this.isCrit,\n        isMisfire: this.isMisfire,\n        isNat20: this.isNat20,\n        isNat1: this.isNat1,\n        dc: this.dc,\n        hasDC: Number.isFinite(this.dc),\n        isSuccess: this.isSuccess,\n        isFailure: this.isFailure,\n        natural: this.natural,\n        options: this.options,\n        isStatic: this.isStatic,\n        isNormal: this.isNormal,\n        isNonRoll: this.isNonRoll,\n        get isAbnormal() {\n          if (this.isNonRoll) return false; // Technically abnormal but not override\n          return this.isStatic || !this.isNormal;\n        },\n        get abnormalTooltip() {\n          if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.d20 });\n          else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n          else return \"\";\n        },\n        flavor: this.options.flavor,\n        compendiumEntry: options.compendium?.entry,\n        compendiumEntryType: options.compendium?.type,\n      },\n      options.chatTemplateData || {}\n    );\n\n    const rollMode = options.rollMode || this.options.rollMode || game.settings.get(\"core\", \"rollMode\");\n\n    messageData = foundry.utils.mergeObject(\n      {\n        type: \"check\",\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        sound: options.noSound ? undefined : CONFIG.sounds.dice,\n        content: await renderTemplate(chatTemplate, chatTemplateData),\n        system: {\n          dc: this.dc,\n          reference: options.reference,\n        },\n      },\n      messageData\n    );\n    messageData.rolls = [this]; // merge/expandObject would otherwise destroy the `Roll` instance\n\n    messageData.system ??= {};\n    if (options.subject) messageData.system.subject = options.subject;\n\n    // Add combat reference if such exists\n    const actor = ChatMessage.getSpeakerActor(messageData.speaker);\n    if (actor && game.combat?.combatants.some((c) => c.actor === actor)) {\n      foundry.utils.setProperty(messageData, \"system.combat\", game.combat.id);\n    }\n\n    const message = new ChatMessage.implementation(messageData);\n    if (rollMode) message.applyRollMode(rollMode);\n    messageData = message.toObject();\n\n    if (options.create ?? true) {\n      return ChatMessage.implementation.create(messageData, { rollMode });\n    } else {\n      return messageData;\n    }\n  }\n\n  /** @inheritDoc */\n  async _evaluate(options) {\n    this._applyBonus(); // deprecated\n    this._applyStaticRoll(true);\n    await super._evaluate(options);\n    return this;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync(options) {\n    this._applyBonus(); // deprecated\n    this._applyStaticRoll(true);\n    super._evaluateSync(options);\n    return this;\n  }\n\n  /**\n   * Apply the bonus the roll was created with or the user entered into the dialog.\n   *\n   * @deprecated\n   * @private\n   */\n  _applyBonus() {\n    if (this.options.bonus) {\n      foundry.utils.logCompatibilityWarning(\n        \"D20RollPF bonus option is deprecated in favor of including it in the base formula itself\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n      if (!(bonusTerms[0] instanceof foundry.dice.terms.OperatorTerm))\n        bonusTerms.unshift(new foundry.dice.terms.OperatorTerm({ operator: \"+\" }));\n      this.terms.push(...bonusTerms);\n      this._formula = this.constructor.getFormula(this.terms);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {string} bonus\n   */\n  addBonus(bonus) {\n    const bonusTerms = this.constructor.parse(`${bonus}`, this.data);\n    if (bonusTerms[0].operator !== \"+\") bonusTerms.unshift(new foundry.dice.terms.OperatorTerm({ operator: \"+\" }));\n    this.terms.push(...bonusTerms);\n    this._formula = this.constructor.getFormula(this.terms);\n  }\n\n  async getTooltip() {\n    const d20 = this.d20;\n    if (d20?.constructor.name === \"Die\") {\n      // Add in flavor for base check if missing\n      d20.options ??= {};\n      d20.options.flavor ||= game.i18n.localize(\"PF1.Rolls.Check.Label\");\n    }\n\n    return super.getTooltip();\n  }\n}\n\n/**\n * Performs an actor based d20 roll.\n *\n * @param {Partial<D20ActorRollOptions>} [options] - Options\n * @example Rolling a 1d20 + an actor's BAB + 2 for good behavior\n * ```js\n * const actor = game.actors.getName(\"Righteous Paladin\");\n * await pf1.dice.d20Roll({\n *   skipDialog: true, // Roll away without a dialog\n *   flavor: \"BAB\", // Add a flavor/title to the roll\n *   parts: [`${actor.system.attributes.bab.total}[BAB]`], // Use the actor's BAB\n *   dice: \"2d20kh\", // Roll 2 d20s and keep the highest\n *   bonus: \"2[Good Behavior]\", // Add a static bonus of 2\n *   rollMode: \"gmroll\", // Make roll only visible to user and GM\n * });\n * ```\n * @returns {Promise<ChatMessage | object | undefined>} The created ChatMessage document, the object of data that would be used to create one, or undefined if cancelled\n */\nexport async function d20Roll(options = {}) {\n  const {\n    skipDialog = getSkipActionPrompt(),\n    staticRoll = null,\n    chatTemplateData = {},\n    chatMessage = true,\n    compendium,\n    noSound = false,\n    flavor = \"\",\n    parts = [],\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollData = {},\n    subject,\n    bonus = \"\",\n    speaker,\n    messageData = undefined,\n    dc,\n    reference,\n  } = options;\n\n  let rollMode = options.rollMode;\n\n  const formula = [dice, ...parts].join(\" + \");\n\n  const roll = new pf1.dice.D20RollPF(formula, rollData, { flavor, staticRoll, bonus, dc }, { speaker });\n  if (!skipDialog) {\n    const title = speaker?.alias ? `${speaker.alias}: ${flavor}` : flavor;\n    const dialogResult = await roll.promptDialog({ title, rollMode, bonus, subject, speaker, dc });\n    if (dialogResult === null) return;\n\n    // Move roll mode selection from roll data\n    rollMode = roll.options.rollMode;\n    delete roll.options.rollMode;\n  }\n\n  // Move deprecated roll.options.bonus out\n  if (roll.options?.bonus) {\n    roll.addBonus(roll.options.bonus);\n    delete roll.options.bonus;\n  }\n\n  if (Hooks.call(\"pf1PreD20Roll\", roll, options) === false) return;\n\n  return roll.toMessage(\n    { ...messageData, speaker },\n    { create: chatMessage, noSound, chatTemplateData, compendium, subject, dc, reference, rollMode }\n  );\n}\n","import { RollPF } from \"./roll.mjs\";\n\n/**\n * A specialized Roll class which is used to evaluate damage rolls.\n * Provides additional utility getters for data relevant to damage rolls (e.g. damage type).\n */\nexport class DamageRoll extends RollPF {\n  /**\n   * @param {string} formula - The formula to parse.\n   * @param {object} data - The data object against which to parse attributes within the formula.\n   * @param {object} options - Additional options which customize the created Roll instance.\n   */\n  constructor(formula, data, options = {}) {\n    super(formula, data, options);\n\n    this.options.damageType ??= [\"untyped\"];\n    if (this.options.damageType instanceof Set) this.options.damageType = [...this.options.damageType];\n\n    // Add DSN dice styling based on type\n    if (game.dice3d?.isEnabled() && game.dice3d?.constructor.CONFIG().enableFlavorColorset) {\n      // FIXME: for now just randomization of the damage type since we cannot handle randomization of multiple damage types\n      const typeId = this.options.damageType[Math.floor(Math.random() * this.options.damageType.length)];\n      const type = pf1.registry.damageTypes.get(typeId);\n\n      if (type?.diceSoNice) {\n        this.options.appearance = { ...type.diceSoNice };\n      }\n    }\n  }\n\n  /**\n   * Types of damage rolls with regard to their critical status.\n   *\n   * @type {{NON_CRITICAL: string, NORMAL: string, CRITICAL: string}}\n   */\n  static TYPES = {\n    NORMAL: \"normal\",\n    CRITICAL: \"crit\",\n    NON_CRITICAL: \"nonCrit\",\n  };\n\n  /**\n   * The damage type info of this damage roll.\n   *\n   * Returns damage part model to benefit from its auxiliary functionality.\n   *\n   * @type {pf1.models.action.DamagePartModel}\n   */\n  get damageType() {\n    return new pf1.models.action.DamagePartModel({ types: this.options.damageType });\n  }\n\n  /**\n   * The type of this damage roll.\n   *\n   * @see {@link DamageRoll.TYPES}\n   * @type {\"normal\"|\"crit\"|\"nonCrit\"}\n   */\n  get type() {\n    return this.options.type;\n  }\n\n  /**\n   * Whether this damage roll is for a critical damage instance.\n   *\n   * @type {boolean}\n   */\n  get isCritical() {\n    return this.type === this.constructor.TYPES.CRITICAL;\n  }\n}\n","/**\n * Function Term override to support sizeRoll\n */\nexport class FunctionTermPF extends CONFIG.Dice.termTypes.FunctionTerm {\n  /** @override */\n  get expression() {\n    // Evaluated sizeRoll has extra term to store the roll in\n    if (this._evaluated && this.fn === \"sizeRoll\") {\n      const terms = [...this.terms];\n      terms.pop(); // Remove the result\n      return `sizeRoll(${terms.join(\",\")})`;\n    }\n    return super.expression;\n  }\n\n  /**\n   * Simpler formula expression if possible\n   *\n   * @remarks\n   * - Used mainly by {@link pf1.utils.formula.simplify()}\n   * - Unevaluated rolls can't always be simplified.\n   * @type {string}\n   */\n  get simplify() {\n    switch (this.fn) {\n      case \"sizeRoll\":\n        if (!this._evaluated) {\n          if (this.terms.length === 2) return this.terms.join(\"d\");\n          else return this.expression;\n        }\n        return this.terms.at(-1);\n      case \"if\": {\n        const cond = this.rolls[0];\n        if (!cond.isDeterministic) return this.expression;\n        if (cond.total !== 0) return this.terms[1];\n        return \"0\";\n      }\n      case \"ifelse\": {\n        const cond = this.rolls[0];\n        if (!cond.isDeterministic) return this.expression;\n        if (cond.total !== 0) return this.terms[1];\n        return this.terms[2];\n      }\n      case \"lookup\": {\n        const search = this.rolls[0];\n        if (!search.isDeterministic) return this.expression;\n        const offset = search.total;\n        const result = this.terms[offset + 1] ?? this.terms[1];\n        return result;\n      }\n    }\n    return this.expression;\n  }\n\n  /**\n   * Flavor text\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor || \"\";\n  }\n\n  /** @override */\n  get isDeterministic() {\n    if (this.fn === \"sizeRoll\") return false; // sizeRoll is never deterministic\n    return super.isDeterministic;\n  }\n\n  /** @override */\n  _evaluateSync(options = {}) {\n    super._evaluateSync(options);\n    if (this.fn === \"sizeRoll\") {\n      const result = this.rolls.at(-1);\n      result.options.flavor ||= this.flavor;\n      result.propagateFlavor(this.flavor);\n      if (!result._evaluated) result.evaluateSync(options);\n      this.result = result.total;\n    }\n    return this;\n  }\n\n  /** @override */\n  async _evaluateAsync(options = {}) {\n    await super._evaluateAsync(options);\n    if (this.fn === \"sizeRoll\") {\n      const result = this.rolls.at(-1);\n      result.options.flavor ||= this.flavor;\n      result.propagateFlavor(this.flavor);\n      if (!result._evaluated) await result.evaluate(options);\n      this.result = result.total;\n    }\n    return this;\n  }\n\n  /** @override */\n  toJSON() {\n    const json = super.toJSON();\n    json.class = super.constructor.name; // Alias to original function term to allow de-serialization to work\n    return json;\n  }\n}\n","/**\n * String Term override to support booleans as numbers\n *\n * Should be obsoleted by: https://github.com/foundryvtt/foundryvtt/issues/12139\n */\nexport class StringTermPF extends foundry.dice.terms.StringTerm {\n  constructor({ term, options } = {}) {\n    if ([\"true\", \"false\"].includes(term))\n      return new foundry.dice.terms.NumericTerm({ number: term === \"true\" ? 1 : 0, options });\n\n    super({ term, options });\n  }\n}\n","import { getHighestChanges } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\nimport { DamageRoll } from \"../dice/damage-roll.mjs\";\n\nimport { DocumentLikeModel } from \"@models/abstract/document-like-model.mjs\";\nimport { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\nimport { DamagePartModel } from \"@models/action/damage-part-model.mjs\";\nimport { ExtraAttackModel } from \"@models/action/extra-attack-model.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Action pseudo-document\n */\nexport class ItemAction extends ReplaceableSourceMixin(CompactingMixin(DocumentLikeModel)) {\n  /**\n   * Default image if the action has no image and it is not correctly linked to an item\n   *\n   * @readonly\n   */\n  static FALLBACK_IMAGE = /** @type {const} */ (\"systems/pf1/icons/skills/gray_04.jpg\");\n\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * Required by {@link pf1.applications.ItemActionSheet#_createDocumentIdLink}\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Action\",\n    label: \"PF1.Action\",\n  });\n\n  /**\n   * @param {object} data - Action data\n   * @param {*} options - Data model options\n   */\n  constructor(data, options) {\n    if (options instanceof Item) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemAction constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n\n    super(data, options);\n  }\n\n  /** @override */\n  _configure(options) {\n    super._configure(options);\n\n    // Following prevent these definitions being lost on model reset()\n    Object.defineProperties(this, {\n      // Apps\n      apps: {\n        value: {},\n        writable: false,\n        enumerable: false,\n      },\n      // Sheet cache\n      _sheet: {\n        value: null,\n        writable: true,\n        enumerable: false,\n      },\n      // Conditionals collection cache to avoid conflicts with stored array\n      _conditionals: {\n        value: new Collection(),\n        writable: false,\n        enumerable: false,\n      },\n    });\n  }\n\n  /** @override */\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const blankToNull = { nullable: true, blank: false };\n    return {\n      ...super.defineSchema({ name: () => game.i18n.localize(\"PF1.Action\") }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      description: new fields.HTMLField(),\n      tag: new fields.StringField({ blank: false, nullable: true }), // TODO: slug field\n      activation: new fields.SchemaField({\n        cost: new fields.NumberField({ initial: 1, nullable: true, min: 1, integer: true }),\n        type: new fields.StringField({ initial: \"nonaction\" }), // pf1.config.abilityActivationTypes\n        unchained: new fields.SchemaField({\n          cost: new fields.NumberField({ initial: 1, nullable: true, min: 1, integer: true }),\n          type: new fields.StringField({ initial: \"nonaction\" }), // pf1.config.abilityActivationTypes_unchained\n        }),\n      }),\n      duration: new fields.SchemaField({\n        value: new fields.StringField(),\n        units: new fields.StringField(),\n        dismiss: new fields.BooleanField({ initial: false }),\n        concentration: new fields.BooleanField({ initial: false }),\n      }),\n      // Refactor into just .target string?\n      target: new fields.SchemaField({\n        value: new fields.StringField(),\n      }),\n      range: new fields.SchemaField({\n        value: new fields.StringField({ ...blankToNull }),\n        units: new fields.StringField({ ...blankToNull }),\n        maxIncrements: new fields.NumberField({ integer: true, nullable: false, initial: 1 }),\n        minValue: new fields.StringField({ ...blankToNull }),\n        minUnits: new fields.StringField({ ...blankToNull }),\n      }),\n      uses: new fields.SchemaField({\n        autoDeductChargesCost: new fields.StringField(), // TODO: rename to cost\n        perAttack: new fields.BooleanField({ initial: false }),\n        self: new fields.SchemaField({\n          value: new fields.NumberField({ integer: true, min: 0, nullable: false, initial: 0 }),\n          maxFormula: new FormulaField(),\n          per: new fields.StringField(),\n        }),\n        spellPointCost: new FormulaField(),\n      }),\n      measureTemplate: new fields.SchemaField({\n        type: new fields.StringField(),\n        size: new FormulaField(),\n        color: new fields.ColorField(),\n        texture: new fields.FilePathField({ categories: [\"IMAGE\", \"VIDEO\"] }),\n      }),\n      bab: new FormulaField(),\n      attackName: new fields.StringField(),\n      actionType: new fields.StringField({ initial: \"other\" }), // pf1.config.itemActionTypes\n      attackBonus: new FormulaField(),\n      critConfirmBonus: new FormulaField(),\n      damage: new fields.SchemaField({\n        parts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n        critParts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n        nonCritParts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n      }),\n      extraAttacks: new fields.SchemaField({\n        type: new fields.StringField(), // pf1.config.extraAttacks\n        manual: new fields.ArrayField(new fields.EmbeddedDataField(ExtraAttackModel)),\n        formula: new fields.SchemaField({\n          count: new FormulaField(),\n          bonus: new FormulaField(),\n          label: new fields.StringField(),\n        }),\n      }),\n      ability: new fields.SchemaField({\n        attack: new fields.StringField(), // ability key\n        damage: new fields.StringField(), // ability key\n        max: new fields.NumberField({ integer: true, nullable: true }),\n        damageMult: new fields.NumberField({ initial: null }),\n        critRange: new fields.NumberField({ initial: 20, nullable: true, min: 0, integer: true }), // null => 0\n        critMult: new fields.NumberField({ initial: 2, nullable: true, min: 1, integer: true }), // null => 1\n      }),\n      save: new fields.SchemaField({\n        dc: new FormulaField(),\n        type: new fields.StringField(), // pf1.config.savingThrows\n        description: new fields.StringField(),\n        harmless: new fields.BooleanField({ initial: false }),\n      }),\n      notes: new fields.SchemaField({\n        effect: new fields.ArrayField(new fields.StringField()),\n        footer: new fields.ArrayField(new fields.StringField()),\n      }),\n      soundEffect: new fields.FilePathField({ categories: [\"AUDIO\"] }),\n      powerAttack: new fields.SchemaField({\n        multiplier: new fields.NumberField({ min: 0, initial: null, nullable: true }),\n        damageBonus: new fields.NumberField({ min: 0, initial: 2, integer: true }),\n        critMultiplier: new fields.NumberField({ min: 1, initial: 1, integer: true }),\n      }),\n      naturalAttack: new fields.SchemaField({\n        primary: new fields.BooleanField({ initial: true }),\n        secondary: new fields.SchemaField({\n          attackBonus: new FormulaField(),\n          damageMult: new fields.NumberField({ initial: 0.5, positive: true }),\n        }),\n      }),\n      held: new fields.StringField({ choices: () => pf1.config.weaponHoldTypes, initial: undefined, blank: true }),\n      nonlethal: new fields.BooleanField({ initial: false }),\n      splash: new fields.BooleanField({ initial: false }),\n      touch: new fields.BooleanField({ initial: false }),\n      ammo: new fields.SchemaField({\n        type: new fields.StringField({ initial: \"\" }), // pf1.config.ammoTypes\n        cost: new fields.NumberField({ integer: true, min: 0, initial: undefined }),\n        misfire: new fields.NumberField({ integer: true, min: 0, initial: null, nullable: true }),\n      }),\n      effect: new fields.StringField(),\n      area: new fields.StringField(),\n      conditionals: new fields.ArrayField(new fields.ObjectField()), // TODO\n      enh: new fields.SchemaField({\n        value: new fields.NumberField({ integer: true, min: 0, initial: null, nullable: true }),\n      }),\n      material: new fields.SchemaField({\n        normal: new fields.SchemaField({\n          value: new fields.StringField(),\n          custom: new fields.BooleanField({ initial: false }),\n        }),\n        addon: new fields.SetField(new fields.StringField({ nullable: false, blank: false })),\n      }),\n      // Trinary alignments to allow inheriting from item and to explicitly disabling alignments\n      alignments: new fields.SchemaField({\n        lawful: new fields.BooleanField({ nullable: true, initial: null }),\n        chaotic: new fields.BooleanField({ nullable: true, initial: null }),\n        good: new fields.BooleanField({ nullable: true, initial: null }),\n        evil: new fields.BooleanField({ nullable: true, initial: null }),\n      }),\n    };\n  }\n\n  /** @override */\n  static migrateData(source) {\n    if (typeof source !== \"object\") return;\n\n    source.activation ??= {};\n    source.activation.unchained ??= {};\n\n    // Added with v?\n    // .unchainedAction.activation to .activation.unchained\n    if (source.unchainedAction?.activation) {\n      source.activation.unchained = source.unchainedAction.activation;\n    }\n\n    // Inconsistent held option (PF1 v11)\n    if (source.held === \"normal\") source.held = \"1h\";\n\n    // Migrate invalid string activation cost to 1.\n    if (typeof source.activation.cost === \"string\") source.activation.cost = 1;\n    if (typeof source.activation.unchained?.cost === \"string\") source.activation.unchained.cost = 1;\n\n    if (source.enh !== undefined) {\n      if (typeof source.enh !== \"object\") {\n        source.enh = { value: source.enh ?? null };\n      }\n      // Set to null if disabled.\n      if (source.enh.override === false) {\n        source.enh.value = null;\n      }\n      // Reset odd values to null, too.\n      else if (source.enh.value !== null && typeof source.enh.value !== \"number\") {\n        source.enh.value = null;\n      }\n    }\n\n    if (source.uses?.autoDeductCharges === false) {\n      source.uses.autoDeductChargesCost = \"0\";\n    } else if (source.uses?.autoDeductCharges === true) {\n      source.uses.autoDeductChargesCost = \"1\";\n    }\n\n    // Added with v10\n    source.actionType ||= \"other\";\n    source.area ||= source.spellArea;\n\n    // Migrate unlimited to empty selection, as the two are identical in meaning\n    if (source.uses?.self?.per === \"unlimited\") {\n      delete source.uses.self.per;\n    }\n\n    const mt = source.measureTemplate;\n    if (mt) {\n      mt.color ||= mt.customColor;\n      mt.texture ||= mt.customTexture;\n    }\n\n    // Added with v11\n    if (source.range?.maxIncrements === null || source.range?.maxIncrements < 1) source.range.maxIncrements = 1;\n    if (source.spellEffect && !source.effect) source.effect = source.spellEffect;\n    if (source.naturalAttack?.primaryAttack !== undefined && source.naturalAttack?.primary === undefined) {\n      source.naturalAttack.primary = source.naturalAttack?.primaryAttack;\n    }\n    source.notes ??= {};\n    if (source.effectNotes && !source.notes.effect) source.notes.effect = source.effectNotes;\n    if (source.attackNotes && !source.notes.footer) source.notes.footer = source.attackNotes;\n\n    if (source.range?.units === \"none\") delete source.range.units;\n\n    if (source.ability?.critMult <= 0) source.ability.critMult = 1;\n\n    // Since v9, convert old damage array format of [formula, types] tuple into object\n    // DamagePartModel.migrateData can't handle this as DataModel trashes it before it reaches it\n    // See: https://github.com/foundryvtt/foundryvtt/issues/12125\n    if (source.damage) {\n      for (const key of [\"parts\", \"critParts\", \"nonCritParts\"]) {\n        const parts = source.damage[key] ?? [];\n        if (parts.some((p) => Array.isArray(p))) {\n          source.damage[key] = parts.map((p) => {\n            if (Array.isArray(p)) {\n              const [formula, type] = p;\n              return { formula, type };\n            }\n            return p;\n          });\n        }\n      }\n    }\n\n    return super.migrateData(source);\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.documents.item.ItemBasePF.getEmbeddedDocument | Item#getEmbeddedDocument()} override to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * For supporting conditionals in fromUuid()\n   *\n   * Synced with Foundry v12.331\n   *\n   * @param {string} embeddedName\n   * @param {string} id\n   * @param {object} options\n   * @returns {pf1.components.ItemConditional|undefined}\n   */\n  getEmbeddedDocument(embeddedName, id, options = {}) {\n    let result;\n    switch (embeddedName) {\n      case pf1.components.ItemConditional.metadata.name: {\n        result = this.conditionals?.get(id);\n      }\n    }\n\n    if (options.strict) throw new Error(`${embeddedName} id [${id}] does not exist in ${this.uuid}`);\n\n    return result;\n  }\n\n  /**\n   * Default damage ability\n   *\n   * @internal\n   * @type {string}\n   */\n  get _defaultDamageAbility() {\n    // TODO: Finesse handling\n    switch (this.actionType) {\n      case \"heal\":\n      case \"other\":\n      case \"rsak\":\n      case \"msak\":\n      case \"spellsave\":\n      case \"save\":\n        return null;\n      default:\n        return \"str\";\n    }\n  }\n\n  /**\n   * Default attack ability\n   *\n   * @internal\n   * @type {string}\n   */\n  get _defaultAttackAbility() {\n    switch (this.actionType) {\n      case \"mwak\":\n      case \"msak\":\n      case \"mcman\":\n        return this.actor?.system.attributes?.attack?.meleeAbility || \"str\";\n      case \"rwak\":\n      case \"twak\":\n      case \"rsak\":\n      case \"rcman\":\n        return this.actor?.system.attributes?.attack?.rangedAbility || \"dex\";\n    }\n    return null;\n  }\n\n  /**\n   * Data preparation\n   *\n   * @internal\n   */\n  prepareData() {\n    // Default action type to other if undefined.\n    // Optimally this would be in constructor only, but item action handling can cause that to be lost\n    this.actionType ||= \"other\";\n\n    this.img ||= this.item?.img || this.constructor.FALLBACK_IMAGE;\n\n    this.tag ||= pf1.utils.createTag(this.name);\n\n    // DEPRECATIONS\n    if (this.naturalAttack) {\n      Object.defineProperty(this.naturalAttack, \"primaryAttack\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemAction.naturalAttack.primaryAttack is deprecated in favor of ItemAction.naturalAttack.primary\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n          return this.primary;\n        },\n      });\n    }\n\n    // Prepare ammo\n    const ammoType = this.ammo?.type;\n    this.ammo.type = ammoType === \"none\" ? null : ammoType || this.item?.system.ammo?.type || null;\n\n    if (this.ammo.type) this.ammo.cost ??= 1;\n    else this.ammo.cost = 0; // Force zero if no type defined\n\n    // Override activation\n    if (game.settings.get(\"pf1\", \"unchainedActionEconomy\")) {\n      this.activation = this.activation.unchained;\n    }\n\n    this._prepareConditionals();\n\n    // Nothing more if there's no parent. Temporary Action?\n    if (!this.item) return;\n\n    const rollData = this.getRollData();\n\n    if (this.item.type === \"spell\") {\n      // Early transform key ability reference to spellbook ability\n      // TODO: Support key ability via class-association\n      const keyAbility = this.item.spellbook?.ability;\n      if (keyAbility) {\n        if (this.ability?.damage === \"_key\") {\n          this.ability.damage = keyAbility;\n        }\n        if (this.ability?.attack === \"_key\") {\n          this.ability.attack = keyAbility;\n        }\n      }\n    }\n\n    if (this.ability?.damage === \"_default\") {\n      this.ability.damage = this._defaultDamageAbility;\n    }\n\n    if (this.ability?.attack === \"_default\") {\n      this.ability.attack = this._defaultAttackAbility;\n    }\n\n    // Prepare max personal charges\n    if (this.uses.self?.per) {\n      const maxFormula = this.uses.self.per === \"single\" ? \"1\" : this.uses.self.maxFormula;\n      const maxUses = RollPF.safeRollSync(maxFormula, rollData).total ?? 0;\n      this.uses.self.max = maxUses;\n    }\n\n    // Remove enhancement bonus override, if wrong type\n    if (this.enh?.value != null && ![\"weapon\", \"attack\"].includes(this.item.type)) {\n      this.enh.value = null;\n    }\n\n    // Initialize default damageMult if missing (for things that can't inherit it from item)\n    if (!Number.isFinite(this.ability?.damageMult)) {\n      let canHold = this.item.isPhysical || this.item.isQuasiPhysical || false;\n      if (!this.hasAttack) canHold = false;\n      if (!canHold) this.ability.damageMult = 1;\n    }\n  }\n\n  /**\n   * Normal material\n   *\n   * @remarks - Null if no material is configured in action or item.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    return this.material.normal.value || this.item.normalMaterial || null;\n  }\n\n  /**\n   * Addon materials\n   *\n   * @type {Array<string>}\n   */\n  get addonMaterial() {\n    const addons = this.material.addon || this.item.addonMaterial || [];\n    return addons.filter((o) => !!o);\n  }\n\n  /**\n   * Returns whether this action is a combat maneuver\n   *\n   * @type {boolean}\n   */\n  get isCombatManeuver() {\n    return [\"mcman\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Creates an action.\n   *\n   * @param {object[]} data - Data to initialize the action(s) with.\n   * @param {object} context - An object containing update context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the action within.\n   * @throws {Error} - If the action has no parent\n   * @returns {Promise<ItemAction[]>} - The resulting actions\n   */\n  static async create(data, context = {}) {\n    const { parent, ...updateContext } = context;\n\n    if (!(parent instanceof Item)) throw new Error(\"No parent declared\");\n\n    // Prepare new data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n\n    // Update parent\n    const actions = parent.toObject().system.actions || [];\n    actions.push(...data);\n    await parent.update({ \"system.actions\": actions }, updateContext);\n\n    // Return resulting actions\n    return data.map((o) => parent.actions.get(o._id));\n  }\n\n  /**\n   * Parent item\n   *\n   * @type {ItemPF|undefined}\n   */\n  get item() {\n    return this.parent;\n  }\n\n  /**\n   * Parent actor of the parent item\n   *\n   * @type {ActorPF|undefined}\n   */\n  get actor() {\n    return this.parent?.actor;\n  }\n\n  /**\n   * Action ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Can this action be used?\n   *\n   * Returns false if any known criteria for use limitation fails. Calls owning item's canUse functionality also.\n   *\n   * @see {@link pf1.documents.item.ItemBasePF.canUse}\n   *\n   * @type {boolean}\n   */\n  get canUse() {\n    const item = this.item;\n    if (!item.canUse) return false;\n\n    if (this.isSelfCharged) {\n      if ((this.uses.self?.value ?? 0) <= 0) return false;\n    }\n\n    if (item.isPhysical) {\n      if (item.system.quantity <= 0) return false;\n    }\n\n    if (this.isCharged) {\n      const cost = this.getChargeCostSync({ maximize: true })?.total ?? 0;\n      const charges = item.charges;\n      if (cost > 0) {\n        if (cost > charges) return false;\n      }\n    }\n\n    const ammo = this.ammo.type;\n    if (ammo) {\n      // Check if actor has any relevant ammo, regardless if they're set to default\n      if (\n        this.actor?.itemTypes.loot.filter(\n          (i) => i.subType === \"ammo\" && i.system.extraType === ammo && i.system.quantity > 0\n        ).length === 0\n      )\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Includes attack roll?\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return [\"mwak\", \"rwak\", \"twak\", \"msak\", \"rsak\", \"mcman\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Has potentially multiple attacks\n   *\n   * @type {boolean}\n   */\n  get hasMultiAttack() {\n    if (!this.hasAttack) return false;\n    const exAtk = this.extraAttacks ?? {};\n    return exAtk.manual?.length > 0 || !!exAtk.type;\n  }\n\n  /**\n   * Consumes charges on use?\n   *\n   * @type {boolean}\n   */\n  get autoDeductCharges() {\n    return this.getChargeCostSync({ maximize: true })?.total > 0;\n  }\n\n  /**\n   * Does parent item have charges?\n   *\n   * @type {boolean}\n   */\n  get isCharged() {\n    return this.item.isCharged ?? false;\n  }\n\n  /**\n   * Action has charges of its own?\n   *\n   * @type {boolean}\n   */\n  get isSelfCharged() {\n    return !!this.uses?.self?.per;\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @param {boolean} [options.minimize=false]\n   * @param {boolean} [options.maximize=false]\n   * @param {boolean} [options.interactive=false]\n   * @returns {Promise<Roll|null>} - Cost in charges for this action. Null if not charged.\n   */\n  async getChargeCost({ minimize = false, maximize = false, rollData = null, interactive = false } = {}) {\n    if (!this.isCharged) return null;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.uses.autoDeductChargesCost : this.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n\n    const roll = await RollPF.safeRoll(formula, rollData, undefined, undefined, {\n      maximize,\n      minimize,\n      allowInteractive: interactive,\n    });\n\n    // Clamp single use\n    if (this.item.isSingleUse) roll._total = Math.clamp(roll._total, -1, 1);\n\n    return roll;\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @param {boolean} [options.minimize=false]\n   * @param {boolean} [options.maximize=false]\n   * @returns {Roll|null} - Cost in charges for this action. Null if not charged.\n   */\n  getChargeCostSync({ minimize = false, maximize = false, rollData = null } = {}) {\n    if (!this.isCharged) return null;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.uses.autoDeductChargesCost : this.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n\n    if (!maximize && !minimize) maximize = true; // Enforce maximization if neither is called in case this is a die\n    const roll = RollPF.safeRollSync(formula, rollData, undefined, undefined, { maximize, minimize });\n\n    // Clamp single use\n    if (this.item.isSingleUse) roll._total = Math.clamp(roll._total, -1, 1);\n\n    return roll;\n  }\n\n  /**\n   * The action's first increment range (in system configured units)\n   *\n   * @type {number}\n   */\n  get rangeIncrement() {\n    return this.getRange({ type: \"single\" });\n  }\n\n  /**\n   * The action's exclusive minimum range.\n   *\n   * @type {number}\n   */\n  get minRange() {\n    return this.getRange({ type: \"min\" });\n  }\n\n  /**\n   * The action's maximum range (range multiplied by maximum range increments).\n   *\n   * @type {number}\n   */\n  get maxRange() {\n    return this.getRange({ type: \"max\" });\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {\"single\"|\"min\"|\"max\"} [options.type=\"single\"] - What type of range to query. Either \"single\" (for a single range increment), \"max\" or \"min\".\n   * @param {object} [options.rollData=null] - Specific roll data to pass.\n   * @returns {number|null} The given range, in system configured units, or `null` if no range is applicable.\n   */\n  getRange({ type = \"single\", rollData = null } = {}) {\n    const baseRange = this.range.units;\n    const range = type === \"min\" ? this.range.minValue : this.range.value;\n    let rangeType = type === \"min\" ? this.range.minUnits : baseRange;\n\n    // Special case of ignoring min range for invalid range types\n    if (type === \"min\" && ![\"reach\", \"ft\", \"mi\", \"seeText\"].includes(baseRange)) return 0;\n\n    if (!rangeType) {\n      if (type !== \"min\") return null;\n      // Special handling for reach minimum range to account for natural reach when no explicit minimum range is defined\n      if (baseRange === \"reach\") rangeType = \"natural\";\n      else return 0;\n    }\n\n    rollData ??= this.getRollData();\n    const singleIncrementRange = pf1.utils.calculateRange(range, rangeType, rollData)[0];\n\n    if ([\"single\", \"min\"].includes(type)) return singleIncrementRange;\n    return singleIncrementRange * this.range.maxIncrements;\n  }\n\n  /**\n   * Has measured template?\n   *\n   * @type {boolean}\n   */\n  get hasTemplate() {\n    const { type, size } = this.measureTemplate;\n    return !!type && !!size;\n  }\n\n  /**\n   * Does the action implement a damage roll as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return !!this.damage.parts?.length;\n  }\n\n  /**\n   * Effective critical range when accounting for broken status and action type.\n   *\n   * Returns null when crit is not possible.\n   *\n   * @type {number|null}\n   */\n  get critRange() {\n    if (this.ability?.critRange <= 0) return null;\n    if (this.item.isBroken || this.isCombatManeuver) return 20;\n    return this.ability?.critRange || 20;\n  }\n\n  /**\n   * Misfire threshold\n   *\n   * @remarks - Zero if action does not misfire.\n   *\n   * @type {number}\n   */\n  get misfire() {\n    const misfire = this.ammo?.misfire ?? null;\n    if (Number.isFinite(misfire)) return misfire;\n    return this.item.system.ammo?.misfire ?? 0;\n  }\n\n  /**\n   * Get power attack, deadly aim or piranha strike multiplier.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData=null] - Roll data instance\n   * @returns {number} - Effective multiplier\n   */\n  getPowerAttackMult({ rollData = null } = {}) {\n    rollData ??= this.getRollData();\n\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n\n    let mult = rollData.action?.powerAttack?.multiplier;\n    // Use defined override\n    if (mult) return mult;\n\n    // Determine default based on attack type and held option\n    mult = 1;\n    if (this.item.subType === \"natural\") {\n      // Primary\n      if (rollData.action.naturalAttack?.primary) {\n        const ablDmgMult = rollData.action.ability?.damageMult ?? 1;\n        // Primary attack gets +50% damage like with two-handing if ability score multiplier is 1.5x or higher\n        if (ablDmgMult >= 1.5) mult = 1.5;\n      }\n      // Secondary\n      else {\n        mult = 0.5;\n      }\n    } else {\n      if (held === \"2h\") mult = 1.5;\n      else if (held === \"oh\") mult = 0.5;\n    }\n\n    return mult;\n  }\n\n  /**\n   * Does the item have range defined.\n   *\n   * @type {boolean}\n   */\n  get hasRange() {\n    const units = this.range?.units;\n    if (!units) return false;\n    return !!units;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Does the item provide an amount of healing instead of conventional damage?\n   *\n   * @returns {boolean}\n   */\n  get isHealing() {\n    return this.actionType === \"heal\" && this.hasDamage;\n  }\n\n  get hasEffect() {\n    return this.hasDamage || this.notes.effect.length > 0;\n  }\n\n  /**\n   * Does the Item implement a saving throw as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasSave() {\n    return !!this.save?.type;\n  }\n\n  /**\n   * @param {object} [rollData] - Data to pass to the roll. If none is given, get new roll data.\n   * @returns {number} The Difficulty Class for this action.\n   */\n  getDC(rollData = null) {\n    rollData ??= this.getRollData();\n    let result = 10;\n\n    // Get conditional save DC bonus\n    const dcBonus = rollData.dcBonus ?? 0;\n\n    if (this.item.type === \"spell\") {\n      const spellbook = this.item.spellbook;\n      if (spellbook) {\n        let formula = spellbook.baseDCFormula;\n\n        const data = rollData.action;\n        if (data.save.dc) formula += ` + ${data.save.dc}`;\n\n        const dcSchoolBonus = rollData.attributes.spells?.school?.[this.item.system.school]?.dc ?? 0;\n        const universalDCBonus = rollData.attributes?.spells?.school?.all?.dc ?? 0;\n\n        return RollPF.safeRollSync(formula, rollData).total + dcBonus + dcSchoolBonus + universalDCBonus;\n      } else {\n        // Assume standard base formula for spells with minimum required abilty score\n        const level = this.item.system.level ?? 1;\n        const minAbl = Math.floor(level / 2);\n        return 10 + level + minAbl + dcBonus;\n      }\n    } else {\n      const dcFormula = this.save.dc?.toString() || \"0\";\n      result = RollPF.safeRollSync(dcFormula, rollData).total + dcBonus;\n      return result;\n    }\n  }\n\n  /**\n   * Effective enhancement bonus\n   *\n   * Action's enhancement override or what is inherited from item.\n   *\n   * @remarks\n   * - Null if not enhanced.\n   *\n   * @type {number|null}\n   */\n  get enhancementBonus() {\n    return this.enh?.value ?? this.item.system.enh ?? null;\n  }\n\n  /**\n   * Is ranged rather than melee.\n   *\n   * @type {boolean}\n   */\n  get isRanged() {\n    return [\"rwak\", \"twak\", \"rsak\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Is spell-like action\n   *\n   * @remarks\n   * - Action type is set to melee/ranged spell attack or spell save.\n   *\n   * @type {boolean}\n   */\n  get isSpell() {\n    return [\"rsak\", \"msak\", \"spellsave\"].includes(this.actionType);\n  }\n\n  /**\n   * An array of changes affecting this action's damage\n   *\n   * @type {ItemChange[]}\n   */\n  get damageSources() {\n    // Build damage context\n    const contexts = [pf1.const.actionTypeToContext[this.actionType] ?? \"damage\"];\n    if (this.isRanged) contexts.push(\"rdamage\");\n    else contexts.push(\"mdamage\");\n    if (this.item.subType === \"natural\") contexts.push(\"ndamage\");\n\n    const changes = this.item.getContextChanges(contexts);\n    if (changes.length == 0) return [];\n    return getHighestChanges(changes, { ignoreTarget: true });\n  }\n\n  /**\n   * All relevant Changes the action's damage.\n   *\n   * @type {ItemChange[]}\n   */\n  get allDamageSources() {\n    const conds = this.conditionals\n      .filter((c) => c.default)\n      .filter((c) => c.modifiers.find((m) => m.target === \"damage\"));\n    const rollData = this.getRollData();\n\n    if (!rollData) return [];\n\n    const mods = Object.keys(pf1.config.bonusTypes);\n\n    // Turn relevant conditionals into structure accepted by getHighestChanges\n    const fakeCondChanges = [];\n    for (const c of conds) {\n      for (const m of c.modifiers) {\n        if (m.target !== \"damage\") continue;\n        let roll;\n        let isDeterministic;\n        try {\n          roll = new RollPF(m.formula, rollData);\n          isDeterministic = roll.isDeterministic;\n          if (isDeterministic) roll.evaluateSync();\n        } catch (err) {\n          // This is very noisy but needed to help track down the problem\n          console.error(\n            \"Invalid conditional formula:\",\n            { formula: m.formula, conditional: c, action: this, item: this.item },\n            \"\\n\",\n            err\n          );\n        }\n        const isModifier = mods.includes(m.type);\n        fakeCondChanges.push({\n          flavor: c.name,\n          value: isDeterministic ? roll.total : m.formula,\n          modifier: isModifier ? m.type : \"untyped\", // Turn unrecognized types to untyped\n          type: isModifier ? undefined : m.type, // Preserve damage type if present\n          formula: m.formula,\n        });\n      }\n    }\n\n    const allChanges = [...this.damageSources, ...fakeCondChanges];\n\n    // Add enhancement bonus\n    const enh = this.enhancementBonus;\n    if (enh) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        value: enh,\n        type: \"enh\",\n        formula: enh.toString(),\n      });\n    }\n\n    // Add special cases specific to the item\n    // Broken\n    if (this.item.isBroken) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.Broken\"),\n        value: -2,\n        type: \"untyped\",\n        formula: \"-2\",\n      });\n    }\n\n    return getHighestChanges(allChanges, { ignoreTarget: true });\n  }\n\n  /**\n   * @param {object} [options]\n   * @internal\n   * @returns {object}\n   */\n  getRollData(options) {\n    const item = this.item;\n    const result = item?.getRollData({ ...options, cache: false }) ?? {};\n\n    result.action = pf1.utils.deepClone(this);\n    result.dc = this.hasSave ? this.getDC(result) : 0;\n\n    if (item?.type === \"spell\") {\n      // Add per school CL bonus\n      // TODO: Move to item roll data generation?\n      result.cl += result.attributes?.spells?.school?.[item.system.school]?.cl ?? 0;\n    }\n\n    // Determine size bonus\n    if (this.hasAttack) {\n      const size = result.size || 4;\n      result.sizeBonus = Object.values(this.isCombatManeuver ? pf1.config.sizeSpecialMods : pf1.config.sizeMods)[size];\n    }\n\n    // BAB override\n    if (result.action.bab) {\n      const bab = RollPF.safeRollSync(result.action.bab, result).total;\n      foundry.utils.setProperty(result, \"attributes.bab.total\", bab || 0);\n    }\n\n    // Add @bab alias\n    result.bab = result.attributes?.bab?.total || 0;\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Replace conditionals array with collection\n   *\n   * @internal\n   */\n  _prepareConditionals() {\n    const collection = this._conditionals;\n    /** @type {Collection<pf1.components.ItemConditional>} */\n    const prior = new Collection(collection.entries());\n    collection.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    for (const condData of this._source.conditionals) {\n      /** @type {pf1.components.ItemConditional} */\n      let conditional;\n      if (prior && prior.has(condData._id)) {\n        conditional = prior.get(condData._id);\n        conditional.replaceSource(condData);\n      } else {\n        conditional = new pf1.components.ItemConditional(condData, { parent: this });\n      }\n\n      collection.set(conditional.id, conditional);\n    }\n\n    /** @type {Collection<pf1.components.ItemConditional>} */\n    this.conditionals = collection;\n  }\n\n  /**\n   * Delete this action\n   *\n   * @returns {Promise<Item>} - Updated parent item document.\n   */\n  async delete() {\n    const actions = this.item.toObject().system.actions;\n    actions.findSplice((a) => a._id == this.id);\n\n    // Preemptively close applications\n    const promises = [];\n    for (const app of Object.values(this.apps)) {\n      promises.push(app.close({ pf1: { action: \"delete\" }, submit: false, force: true }));\n    }\n    await Promise.all(promises);\n\n    // Delete action\n    return this.item.update({ \"system.actions\": actions });\n  }\n\n  /**\n   * Update the action\n   *\n   * TODO: BROKEN\n   *\n   * @param {object} updateData - Update data\n   * @param {object} context - Update context\n   */\n  async update(updateData, context = {}) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    delete updateData._id; // Prevent ID drift\n    this.updateSource(updateData);\n\n    const updates = this.item.actions.map((a) => a.toObject());\n\n    await this.item.update({ \"system.actions\": updates }, context);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Data Generation\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this action's parent item, but with this action's data,\n   * regardless of whether it is the first action or not.\n   *\n   * @see {@link ItemPF#getChatData}\n   * @param {object} [chatDataOptions] - Options passed to {@link ItemPF#getChatData} affecting the chat data\n   * @returns {Promise<import(\"../documents/item/item-pf.mjs\").ChatData>} Chat data for this action's parent and this action\n   */\n  async getChatData(chatDataOptions = {}) {\n    return this.item.getChatData({ ...chatDataOptions, actionId: this.id });\n  }\n\n  /**\n   * Returns labels related to this particular action\n   *\n   * @param {object} [options]\n   * @param {object} [options.rollData] - Pre-determined roll data. If not provided, finds the action's own roll data.\n   * @param {boolean} [options.isolated] - Are these labels generated for isolated information (that is, need more details)\n   * @returns {Record<string, string>} This action's labels\n   */\n  getLabels({ rollData, isolated = false } = {}) {\n    const labels = {};\n    rollData ??= this.getRollData();\n\n    const hasActor = !!this.actor;\n\n    // Activation method\n    if (this.activation) {\n      const activation = this.activation;\n      if (activation) {\n        const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n        const activationTypes = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypes_unchained\n          : pf1.config.abilityActivationTypes;\n        const activationTypesPlural = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypesPlurals_unchained\n          : pf1.config.abilityActivationTypesPlurals;\n\n        const activationType = activation.type || \"nonaction\";\n        if (activation.type === \"special\") {\n          labels.activation = activationTypes.special;\n        } else if (activation.cost > 1 && !!activationTypesPlural[activationType]) {\n          labels.activation = [activation.cost.toString(), activationTypesPlural[activationType]].filterJoin(\" \");\n        } else {\n          labels.activation = [\n            [\"minute\", \"hour\", \"action\"].includes(activationType) && activation.cost ? activation.cost.toString() : \"\",\n            activationTypes[activationType],\n          ].filterJoin(\" \");\n        }\n      }\n    }\n\n    // Duration\n    // Set duration label\n    const duration = this.duration;\n    switch (duration?.units) {\n      case \"spec\":\n        labels.duration = duration.value;\n        break;\n      case \"seeText\":\n      case \"inst\":\n      case \"perm\":\n        labels.duration = pf1.config.timePeriods[duration.units];\n        break;\n      case \"turn\": {\n        const unit = pf1.config.timePeriods[duration.units];\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n        break;\n      }\n      case \"round\":\n      case \"minute\":\n      case \"hour\":\n      case \"day\":\n      case \"month\":\n      case \"year\":\n        if (duration.value) {\n          const unit = pf1.config.timePeriods[duration.units];\n          labels.durationFormula = duration.value;\n          labels.variableDuration = /@\\w/.test(duration.value);\n          let roll, value;\n          try {\n            roll = new RollPF(duration.value, rollData);\n            // Outside of actor\n            if (isolated) {\n              const _rollData = foundry.utils.deepClone(rollData);\n              const minroll = new RollPF(duration.value, _rollData);\n              minroll.evaluateSync({ minimize: true });\n              // Spoof level 20\n              _rollData.cl = 20;\n              foundry.utils.setProperty(_rollData, \"attributes.hd.total\", 20);\n              foundry.utils.setProperty(_rollData, \"attributes.bab.total\", 20);\n              _rollData.bab = 20;\n              foundry.utils.setProperty(_rollData, \"class.level\", 20);\n              const maxroll = new RollPF(duration.value, _rollData);\n              maxroll.evaluateSync({ maximize: true });\n              if (minroll.total !== maxroll.total) value = `${minroll.total} - ${maxroll.total}`;\n              else value = `${minroll.total}`;\n            }\n            // On actor\n            else {\n              if (roll.isDeterministic) {\n                roll.evaluateSync();\n                value = roll.total;\n              } else {\n                let formula = pf1.utils.formula.unflair(duration.value || \"0\");\n                formula = RollPF.replaceFormulaData(formula || \"0\", rollData);\n                value = pf1.utils.formula.compress(pf1.utils.formula.simplify(formula));\n              }\n            }\n\n            labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n          } catch (err) {\n            console.error(\n              \"Error in duration formula:\",\n              { formula: duration.value, rollData, roll },\n              roll?.err ?? err,\n              this\n            );\n          }\n        }\n        break;\n    }\n\n    // Dismissable, but only if special duration isn't used\n    // TODO: Better i18n support\n    if (labels.duration && duration.units !== \"spec\") {\n      if (duration.dismiss) labels.duration += \" \" + game.i18n.localize(\"PF1.DismissableMark\");\n      if (duration.concentration)\n        labels.duration = game.i18n.format(\"PF1.ConcentationDuration\", { duration: labels.duration });\n    }\n\n    // Difficulty Class\n    if (this.hasSave) {\n      const totalDC = rollData.dc + (rollData.dcBonus ?? 0);\n      labels.save = game.i18n.format(\"PF1.DCThreshold\", { threshold: totalDC });\n    }\n\n    // Range\n    if (this.hasRange) {\n      const rangeUnit = this.range.units;\n      const rangeValue = this.range.value;\n      const rangeLabel = pf1.config.distanceUnits[rangeUnit];\n      labels.range = rangeLabel;\n      if (rangeUnit === \"spec\") {\n        labels.range = rangeValue || labels.range;\n      } else if ([\"personal\", \"touch\", \"melee\", \"reach\"].includes(rangeUnit)) {\n        // Display as is\n      } else {\n        const range = this.getRange({ type: \"single\", rollData });\n        if (range > 0) {\n          const usystem = pf1.utils.getDistanceSystem();\n          const rangeUnit = usystem === \"metric\" ? \"m\" : \"ft\";\n          const lrange = new Intl.NumberFormat(undefined).format(range);\n          labels.range = `${lrange} ${rangeUnit}`;\n        }\n        if ([\"close\", \"medium\", \"long\"].includes(rangeUnit)) {\n          labels.range += ` (${rangeLabel})`;\n        }\n      }\n\n      // Special formatting when no actor present\n      if (!hasActor) {\n        const units = pf1.utils.getDistanceSystem();\n        switch (rangeUnit) {\n          case \"close\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeShortMetric\" : \"PF1.SpellRangeShort\"\n            )})`;\n            break;\n          case \"medium\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeMediumMetric\" : \"PF1.SpellRangeMedium\"\n            )})`;\n            break;\n          case \"long\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeLongMetric\" : \"PF1.SpellRangeLong\"\n            )})`;\n            break;\n        }\n      }\n    }\n\n    // Targets\n    const targets = this.target?.value;\n    if (targets) labels.targets = targets;\n\n    // Set area label\n    if (this?.area) labels.area = this.area;\n\n    // Action type\n    labels.actionType = pf1.config.itemActionTypes[this.actionType];\n\n    return labels;\n  }\n\n  // -----------------------------------------------------------------------\n\n  /**\n   * Get all appropriate context changes for attack rolls.\n   *\n   * @see {@link ItemPF.getContextChanges}\n   */\n  get attackSources() {\n    const contexts = [\"~attackCore\"];\n    if (this.isCombatManeuver) contexts.push(\"cmb\");\n    if (this.isRanged) contexts.push(\"rattack\");\n    else contexts.push(\"mattack\");\n\n    // TODO: Query from item itself\n    const isNatural = this.item.subType === \"natural\";\n    if (isNatural) contexts.push(\"nattack\");\n\n    switch (this.actionType) {\n      case \"twak\":\n        contexts.push(\"tattack\");\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"mwak\":\n      case \"rwak\":\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"msak\":\n      case \"rsak\":\n        contexts.push(\"sattack\");\n        break;\n    }\n\n    return this.item.getContextChanges(contexts);\n  }\n\n  /**\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\n   *\n   * @param {object} [options] - Options\n   * @param {object} [options.data] - Roll data\n   * @param {Array<string>} [options.extraParts] - Additional attack parts\n   * @param {string} [options.bonus] - Additional attack bonus\n   * @param {boolean} [options.primary=true] - Treat as primary natural attack\n   * @param {pf1.components.ItemChange[]} [options.extraChanges] - Additional changes\n   * @returns {Promise<D20RollPF>}\n   */\n  async rollAttack({ data = null, extraParts = [], extraChanges = [], bonus = null, primary = true, ...options } = {}) {\n    if (typeof options.primaryAttack === \"boolean\") {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemAttack.rollAttack()'s `primaryAttack` option is deprecated in favor of `primary`\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      primary = options.primaryAttack;\n    }\n    const rollData = data ?? this.getRollData();\n    const itemData = rollData.item;\n    const actionData = rollData.action;\n\n    const config = {};\n\n    itemData.primaryAttack = primary;\n\n    // Add misc bonuses/penalties\n    itemData.proficiencyPenalty = -4;\n\n    // Determine ability score modifier\n    const abl = actionData.ability.attack;\n\n    // Define Roll parts\n    const parts = [];\n\n    // Add size bonus\n    if (rollData.sizeBonus !== 0) parts.push(`@sizeBonus[${game.i18n.localize(\"PF1.Size\")}]`);\n\n    const ability = rollData.abilities?.[abl];\n    // Add ability modifier\n    if (ability && ability?.mod !== 0) {\n      parts.push(`@abilities.${abl}.mod[${pf1.config.abilities[abl]}]`);\n    }\n\n    // Get relevant changes\n    const changes = this.attackSources;\n    changes.push(...extraChanges);\n\n    // Add masterwork bonus to changes (if applicable)\n    if ([\"mwak\", \"rwak\", \"twak\", \"mcman\", \"rcman\"].includes(this.actionType) && this.item.system.masterwork) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"1\",\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: 1,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add enhancement bonus to changes\n    if (this.enhancementBonus) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: this.enhancementBonus.toString(),\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: this.enhancementBonus,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add bonus parts\n    parts.push(...extraParts);\n    // Add attack bonus\n    if (typeof actionData.attackBonus === \"string\" && ![\"\", \"0\"].includes(actionData.attackBonus)) {\n      parts.push(actionData.attackBonus);\n    }\n    // Backwards compatibility\n    else if (typeof actionData.attackBonus === \"number\") {\n      itemData.attackBonus = actionData.attackBonus;\n      parts.push(`@item.attackBonus[${game.i18n.localize(\"PF1.AttackRollBonus\")}]`);\n    }\n\n    // Add proficiency penalty\n    try {\n      config.proficient = this.item.getProficiency(true);\n    } catch (error) {\n      // Treat as proficient if there's proficiency incompatibility.\n      config.proficient = true;\n    }\n\n    // Add secondary natural attack penalty\n    const isNatural = this.item.subType === \"natural\";\n    const isNaturalSecondary = isNatural && primary === false;\n    config.secondaryPenalty = isNaturalSecondary ? pf1.config.naturalAttacks.secondary.penalty : \"0\";\n\n    // Add bonus\n    rollData.bonus = 0;\n    if (bonus) {\n      // TODO: Do not pre-roll\n      const roll = await RollPF.safeRoll(bonus, rollData);\n      rollData.bonus = roll.total;\n    }\n\n    // Options for D20RollPF\n    const rollOptions = {\n      critical: this.critRange,\n    };\n\n    if (this.ammo.type && this.ammo.cost > 0) {\n      const misfire = this.misfire;\n      if (misfire > 0) rollOptions.misfire = misfire;\n    }\n\n    // call pre attack hook before changes are filtered and before specific [parts] from config and roll data are created\n    Hooks.call(\"pf1PreAttackRoll\", this, config, rollData, rollOptions, parts, changes);\n\n    // Get attack bonus\n    const hightest = getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    );\n\n    for (const c of hightest) {\n      let value = c.value;\n      // BAB override\n      if (actionData.bab && c._id === \"_bab\") {\n        value = RollPF.safeRollSync(c.formula, data).total || 0;\n      }\n      if (value == 0) continue;\n      parts.push(`${value}[${RollPF.cleanFlavor(c.flavor)}]`);\n    }\n\n    // Convert config to roll part\n    if (config.secondaryPenalty != 0) {\n      const terms = RollPF.parse(config.secondaryPenalty);\n      if (terms.length > 1) config.secondaryPenalty = `(${config.secondaryPenalty})`;\n      parts.push(`${config.secondaryPenalty}[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n    }\n\n    if (rollData.bonus != 0) {\n      parts.push(`@bonus[${game.i18n.localize(\"PF1.SituationalBonus\")}]`);\n    }\n\n    if (!config.proficient) {\n      parts.push(`@item.proficiencyPenalty[${game.i18n.localize(\"PF1.Proficiency.Penalty\")}]`);\n    }\n\n    const roll = new pf1.dice.D20RollPF(\n      [rollData.d20 || pf1.dice.D20RollPF.standardRoll, ...parts.filter((p) => !!p)].join(\"+\"),\n      rollData,\n      rollOptions\n    );\n\n    try {\n      await roll.evaluate();\n    } catch (err) {\n      throw new Error(`Attack roll evaluation failed:\\n${roll.formula}\\n`, { cause: err });\n    }\n\n    // Cleanup roll data that was altered here.\n    delete rollData.bonus;\n\n    Hooks.call(\"pf1AttackRoll\", this, roll, config);\n\n    return roll;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll damage for an action.\n   *\n   * @param {object} [options] - Options configuring the damage roll\n   * @param {object | null} [options.data=null] - rollData to be used\n   * @param {boolean} [options.critical=false] - Whether to roll critical damage\n   * @param {string[]} [options.extraParts] - Additional strings added to the roll formula\n   * @param {object} [options.conditionalParts=[]] - Conditional data sets\n   * @param {boolean} [options.primaryAttack] - Whether this is the primary attack\n   * @returns {Promise<DamageRoll[]>} Created damage rolls, one roll per damage part\n   */\n  async rollDamage({\n    data = null,\n    critical = false,\n    extraParts = [],\n    conditionalParts = {},\n    primaryAttack = true,\n  } = {}) {\n    const rollData = data ?? this.getRollData();\n    const itemData = rollData.item;\n    const actionData = rollData.action;\n\n    if (!this.hasDamage) {\n      throw new Error(\"You may not make a Damage Roll with this Action.\");\n    }\n\n    const isNatural = this.item.subType === \"natural\";\n\n    // Determine critical multiplier\n    rollData.critMult = 1;\n    if (critical) rollData.critMult = actionData.ability.critMult;\n    // Determine ability multiplier\n    if (rollData.ablMult == null) {\n      const held = actionData?.held || itemData?.held || \"1h\";\n      rollData.ablMult =\n        actionData?.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    }\n\n    // Define Roll parts\n    const parts = [];\n    const addParts = (property, type) => {\n      parts.push(\n        ...(this.damage[property]?.map((damage) => ({\n          base: damage.formula,\n          extra: [],\n          damageType: damage.types,\n          type,\n        })) ?? [])\n      );\n\n      // add typed conditionals\n      conditionalParts[`damage.${type}`]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type });\n      });\n    };\n\n    addParts(\"parts\", \"normal\");\n    if (critical) addParts(\"critParts\", \"crit\");\n    else addParts(\"nonCritParts\", \"nonCrit\");\n\n    /**\n     * Initialize changes to empty array so mods can still add changes for healing \"attacks\" via the pre-roll hook below\n     *\n     * @type {ItemChange[]}\n     */\n    let changes = [];\n    if (!this.isHealing) {\n      // Gather changes\n      changes = this.damageSources;\n\n      // Add enhancement bonus to changes\n      if (this.enhancementBonus) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: this.enhancementBonus.toString(),\n            operator: \"add\",\n            target: \"damage\",\n            type: \"enh\",\n            value: this.enhancementBonus,\n            flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n          })\n        );\n      }\n\n      // Add broken penalty\n      if (this.item.isBroken) {\n        const label = game.i18n.localize(\"PF1.Broken\");\n        parts[0].extra.push(`-2[${label}]`);\n      }\n    }\n\n    // call pre damage hook before changes are filtered and before specific [parts] from roll data are created\n    Hooks.call(\"pf1PreDamageRoll\", this, rollData, parts, changes);\n\n    // Get damage bonus\n    getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).forEach((c) => {\n      let value = c.value;\n      // Put in parenthesis if there's a chance it is more complex\n      if (/[\\s+-?:]/.test(value)) value = `(${value})`;\n      parts[0].extra.push(`${value}[${c.flavor}]`);\n    });\n\n    // Determine ability score modifier\n    const abl = actionData.ability.damage;\n    const ability = rollData.abilities?.[abl];\n    if (ability) {\n      // Determine ability score bonus\n      const max = actionData.ability?.max ?? Infinity;\n      if (ability.mod < 0) rollData.ablDamage = Math.min(max, ability.mod);\n      else rollData.ablDamage = Math.floor(Math.min(max, ability.mod) * rollData.ablMult);\n\n      // Determine ability score label\n      const ablLabel = pf1.config.abilities[abl];\n\n      // Add ability score\n      parts[0].extra.push(`@ablDamage[${ablLabel}]`);\n    }\n\n    // Ensure previous data does not infect things here\n    delete rollData.previous;\n    delete rollData.base;\n\n    // Create roll\n    const rolls = [];\n    for (let a = 0; a < parts.length; a++) {\n      const part = parts[a];\n      let rollParts = [];\n      if (a === 0) rollParts = [...part.extra, ...extraParts];\n      const formula = [part.base, ...rollParts].join(\" + \");\n      // Skip empty formulas instead of erroring on them\n      if (formula.length == 0) continue;\n      let roll;\n      try {\n        roll = await new DamageRoll(formula, rollData, {\n          damageType: part.damageType,\n          type: part.type,\n        }).evaluate();\n        // Add to result\n        rolls.push(roll);\n      } catch (err) {\n        console.error(\"Error with damage formula:\", formula, this);\n        throw err;\n      }\n\n      const firstDie = roll.dice[0];\n\n      // Add first normal damage instance as @base damage data in roll data\n      if (a === 0 && !critical) {\n        rollData.base = {\n          total: roll.total,\n          dice: firstDie?.expression,\n          die: { size: firstDie?.faces, count: firstDie?.number },\n        };\n      }\n\n      // Store some details as @previous\n      rollData.previous = {\n        total: roll.total,\n        dice: firstDie?.expression,\n        die: { size: firstDie?.faces, count: firstDie?.number },\n      };\n    }\n\n    return rolls;\n  }\n\n  /**\n   * Generates a list of targets this modifier can have.\n   *\n   * @returns {Record<string, string>} Target ID to label mapping.\n   */\n  getConditionalTargets() {\n    const hasAttack = this.hasAttack,\n      hasDamage = this.hasDamage,\n      hasSave = this.hasSave;\n\n    const results = [\n      { id: \"attack\", sort: 1_000, label: pf1.config.conditionalTargets.attack._label, disabled: !hasAttack },\n      {\n        id: \"critMult\",\n        sort: 2_000,\n        label: pf1.config.conditionalTargets.critMult._label,\n        disabled: !hasAttack,\n        simple: true,\n      },\n      { id: \"damage\", sort: 3_000, label: pf1.config.conditionalTargets.damage._label, disabled: !hasDamage },\n      { id: \"size\", sort: 4_000, label: pf1.config.conditionalTargets.size._label, disabled: !hasDamage, simple: true },\n      { id: \"dc\", sort: 5_000, label: game.i18n.localize(\"PF1.DC\"), disabled: !hasSave, simple: true },\n      {\n        id: \"effect\",\n        sort: 6_000,\n        label: pf1.config.conditionalTargets.effect._label,\n        choices: {},\n        get disabled() {\n          return foundry.utils.isEmpty(this.choices);\n        },\n      },\n      {\n        id: \"misc\",\n        sort: 7_000,\n        label: pf1.config.conditionalTargets.misc._label,\n        choices: {},\n        get disabled() {\n          return foundry.utils.isEmpty(this.choices);\n        },\n      },\n      {\n        id: \"charges\",\n        sort: 8_000,\n        label: game.i18n.localize(\"PF1.ChargeCost\"),\n        disabled: !this.isCharged,\n        simple: true,\n      },\n    ];\n\n    // Add additional item-specific targets\n    this.item.getConditionalTargets(results);\n\n    // Fill in sub-targets\n    for (const entry of results) {\n      this.getConditionalSubTargets(entry);\n    }\n\n    // Convert results into its final form\n    const result = {};\n    for (const entry of results.sort((a, b) => a.sort - b.sort)) {\n      if (entry.disabled) continue;\n      if (!entry.simple && foundry.utils.isEmpty(entry.choices)) continue;\n      result[entry.id] = entry;\n    }\n\n    return result;\n  }\n\n  /**\n   * Generates lists of conditional sub-targets this action can have.\n   *\n   * @param {object} entry - The target entry\n   * @param {*} _results - Unused. Deprecated option\n   * @returns {object} - Same as the target entry parameter with added info.\n   */\n  getConditionalSubTargets(entry, _results) {\n    // @deprecated - Remove after PF1 v12\n    if (typeof entry === \"string\" || _results)\n      throw new Error(\"ItemAction#getConditionalSubTargets() called with invalid arguments\");\n\n    entry.choices ??= {};\n\n    const targetId = entry.id;\n\n    // Add static targets\n    const subTargets = pf1.config.conditionalTargets[targetId];\n    if (subTargets) {\n      for (const [key, label] of Object.entries(subTargets)) {\n        if (!key.startsWith(\"_\") && !key.startsWith(\"~\")) entry.choices[key] = label;\n      }\n    }\n\n    // Add subtargets depending on attacks\n    if ([\"attack\", \"damage\"].includes(targetId)) {\n      // Add specific attacks\n      if (this.hasAttack) {\n        entry.choices[\"attack_0\"] = `${game.i18n.localize(\"PF1.Attack\")} 1`;\n\n        const exAtk = this.extraAttacks;\n        if (exAtk?.manual?.length) {\n          exAtk.manual.forEach((part, index) => {\n            entry.choices[`attack_${index + 1}`] = part.name;\n          });\n        }\n      } else {\n        delete entry.choices[\"rapidShotDamage\"];\n      }\n    }\n\n    this.item.getConditionalSubTargets?.(entry);\n\n    return entry;\n  }\n\n  /**\n   * Generates lists of conditional modifier bonus types applicable to a formula.\n   *\n   * @param {string} target - The target key as defined in {@link pf1.config.conditionTargets}.\n   * @returns {Record<string, string>} A list of bonus types.\n   */\n  getConditionalModifierTypes(target) {\n    const result = {};\n    if (target === \"attack\" || target === \"damage\") {\n      // Add types from pf1.config.bonusTypes\n      for (const [k, v] of Object.entries(pf1.config.bonusTypes)) {\n        result[k] = v;\n      }\n    }\n    if (target === \"damage\") {\n      for (const damageType of pf1.registry.damageTypes) {\n        result[damageType.id] = damageType.name;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generates a list of critical applications for a given formula target.\n   *\n   * @param {string} target - The target key as defined in {@link pf1.config.conditionalTargets}.\n   * @returns {Record<string, string>} A list of critical applications.\n   */\n  getConditionalCritical(target) {\n    let result = {};\n    // Attack bonuses can only apply as critical confirm bonus\n    if (target === \"attack\") {\n      result = { ...result, normal: \"PF1.Normal\", crit: \"PF1.CriticalConfirmBonus\" };\n    }\n    // Damage bonuses can be multiplied or not\n    if (target === \"damage\") {\n      result = { ...result, normal: \"PF1.Normal\" };\n      if (this.hasAttack) {\n        result = { ...result, crit: \"PF1.OnCritBonusFormula\", nonCrit: \"PF1.NonMultBonusFormula\" };\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generate attacks.\n   *\n   * @param {object} [options] - Options\n   * @param {boolean} [options.full=true] - Full attack\n   * @param {object} [options.rollData] - Roll data\n   * @param {boolean} [options.resolve=false] - If the bonuses are to be resolved directly.\n   * @param {boolean} [options.conditionals=false] - Include conditional modifications. Requires `resolve` to be enabled.\n   * @param {boolean} [options.bonuses=false] - Include other bonuses. Requires `resolve` to be enabled.\n   * @returns {Array<object>} - Array of attack data\n   */\n  getAttacks({ full = true, rollData, resolve = false, conditionals = false, bonuses = false } = {}) {\n    rollData ||= this.getRollData();\n\n    const exAtkCfg = pf1.config.extraAttacks[this.extraAttacks?.type] ?? {};\n\n    const bonusToAll = exAtkCfg.modToAll;\n\n    /**\n     * Counter for unnamed or other numbered attacks, to be incremented with each usage.\n     * Starts at 1 to account for the base attack.\n     */\n    let unnamedAttack = 0;\n    const unnamedAttackNames = new Set();\n    const getUniqueName = (name, template) => {\n      if (template && template.indexOf(\"{0}\") == -1) template = null;\n      let label = name;\n      while (unnamedAttackNames.has(label) || !label) {\n        unnamedAttack += 1;\n        if (template) {\n          if (game.i18n.has(template)) label = game.i18n.format(template, { 0: unnamedAttack });\n          else label = template.replace(\"{0}\", unnamedAttack);\n        } else label = game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: unnamedAttack });\n      }\n      unnamedAttackNames.add(label);\n      return label;\n    };\n\n    rollData.attackCount = 0;\n\n    // Replace roll data that won't be available after\n    const replaceSpecificRollData = (formula, data) => {\n      return formula.replace(/@\\w+\\b/, (m) => {\n        const p = m.slice(1);\n        if (p in data) return data[p];\n        return m;\n      });\n    };\n\n    const _rollData = {\n      attackCount: 0,\n      attackSetCount: 0,\n      formulaicAttack: 0,\n    };\n\n    const flavor = game.i18n.localize(exAtkCfg.flavor || \"\");\n    let formula = `(${exAtkCfg.bonus || \"0\"} + ${bonusToAll || \"0\"})` + (flavor ? `[${flavor}]` : \"\");\n    formula = replaceSpecificRollData(formula, _rollData);\n    formula = pf1.utils.formula.simplify(formula); // Reduce (0 + 0) to 0 or other similar cases\n    const attacks = [{ bonus: formula, label: getUniqueName(this.attackName) }];\n\n    // Extra attacks\n    if (full) {\n      rollData.fullAttack = 1;\n      const unchainedEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n      let attackCount = 0;\n\n      const parseAttacks = async (countFormula, bonusFormula, label, bonusLabel) => {\n        // Soft assign zero formula to deal with empty string causing parameter init to fail\n        countFormula ||= \"0\";\n        bonusFormula ||= \"0\";\n        if (!countFormula || countFormula == \"0\") return;\n\n        const exAtkCount =\n          RollPF.safeRollSync(countFormula, rollData, undefined, undefined, { minimized: true })?.total ?? 0;\n        if (exAtkCount <= 0) return;\n\n        try {\n          for (let i = 0; i < exAtkCount; i++) {\n            const _rollData = {\n              attackCount: (attackCount += 1),\n              attackSetCount: i,\n              formulaicAttack: i + 1, // Add and update attack counter\n            };\n\n            let formula = bonusFormula;\n            if (bonusToAll) formula += ` + ${bonusToAll}`;\n            formula = replaceSpecificRollData(formula, _rollData);\n\n            const alabel = game.i18n.has(label) ? game.i18n.format(label, { 0: i + 1 }) : label?.replace(\"{0}\", i + 1);\n\n            attacks.push({\n              bonus: bonusLabel ? `(${formula})[${bonusLabel}]` : `(${formula})`,\n              formula,\n              flavor: bonusLabel,\n              // Continue counting if similar to initial attack name\n              // If formulaic attacks have a non-default name, number them with their own counter; otherwise, continue unnamed attack numbering\n              label: getUniqueName(alabel, label),\n              rollData: _rollData,\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      if (exAtkCfg.iteratives && !unchainedEconomy) {\n        parseAttacks(\n          pf1.config.iterativeExtraAttacks,\n          pf1.config.iterativeAttackModifier,\n          null,\n          game.i18n.localize(\"PF1.Iterative\")\n        );\n      }\n\n      // Add attacks defined by configuration\n      if (exAtkCfg.count) {\n        parseAttacks(exAtkCfg.count, exAtkCfg.bonus, exAtkCfg.attackName, flavor);\n      }\n\n      // Add manually entered explicit extra attacks\n      if (exAtkCfg.manual) {\n        const extraAttacks = this.extraAttacks?.manual ?? [];\n        for (const { name, formula } of extraAttacks) {\n          if (name) unnamedAttackNames.add(name);\n          attacks.push({\n            bonus: formula,\n            // Use defined label, or fall back to continuously numbered default attack name\n            label: name || getUniqueName(),\n          });\n        }\n      }\n\n      // Add custom extra attack formula\n      if (exAtkCfg.formula) {\n        const formulaCfg = this.extraAttacks.formula ?? {};\n        parseAttacks(formulaCfg.count, formulaCfg.bonus, formulaCfg.label);\n      }\n    }\n\n    // TODO: Move this to be part of the output data as formulas\n    if (resolve) {\n      const condBonuses = new Array(attacks.length).fill(0);\n      if (conditionals) {\n        // Conditional modifiers\n        const conds = this.conditionals.filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"));\n        for (const c of conds) {\n          for (const cc of c.modifiers) {\n            const bonusRoll = RollPF.safeRollSync(cc.formula, rollData, undefined, undefined, { minimize: true });\n            if (bonusRoll.total == 0) continue;\n            if (cc.subTarget?.match(/^attack\\.(\\d+)$/)) {\n              const atk = parseInt(RegExp.$1, 10);\n              if (atk in condBonuses) condBonuses[atk] += bonusRoll.total;\n            }\n          }\n        }\n      }\n\n      let totalBonus = 0;\n      if (bonuses) {\n        const sources = this.item.getAttackSources(this.id, { rollData });\n        totalBonus = sources.reduce((total, src) => {\n          let value = src.value;\n          if (typeof value === \"string\") {\n            const roll = RollPF.safeRollSync(value, rollData, undefined, undefined, { minimize: true });\n            value = roll.total;\n          }\n          return total + value;\n        }, 0);\n      }\n\n      attacks.forEach((atk, i) => {\n        rollData.attackCount = i;\n        const roll = RollPF.safeRollSync(atk.bonus, rollData, undefined, undefined, { minimize: true });\n        atk.bonus = roll.total + totalBonus + condBonuses[i];\n        delete rollData.attackCount;\n      });\n    }\n\n    return attacks;\n  }\n\n  /**\n   * Use action.\n   *\n   * Wrapper for {@link pf1.documents.item.ItemPF.use() ItemPF.use()}\n   *\n   * @param {object} options - Options passed to `ItemPF.use()`.\n   * @returns {Promise<void>} - Returns what `ItemPF.use()` returns.\n   */\n  async use(options = {}) {\n    options.actionId = this.id;\n\n    // TODO: ItemPF.use() and this.use() relation needs to be flipped.\n\n    return this.item.use(options);\n  }\n\n  /**\n   * Prune data\n   *\n   * @internal\n   * @param {object} data - Raw data (e.g. product of {@link toObject()})\n   */\n  static pruneData(data) {\n    // Aggressive data size reduction\n\n    if (!data.img) delete data.img;\n    if (!data.tag) delete data.tag;\n    if (!data.bab) delete data.bab;\n    if (data.enh?.value === null) delete data.enh.value;\n    if (foundry.utils.isEmpty(data.enh)) delete data.enh;\n    if (!data.attackName) delete data.attackName;\n    if (!data.attackBonus) delete data.attackBonus;\n    if (!data.critConfirmBonus) delete data.critConfirmBonus;\n    if (!data.measureTemplate?.type) delete data.measureTemplate;\n    if (!data.extraAttacks?.type) delete data.extraAttacks;\n    if (data.extraAttacks) {\n      if (!data.extraAttacks.formula) delete data.extraAttacks.formula;\n      if (!data.extraAttacks.count) delete data.extraAttacks.count;\n      if (!data.extraAttacks.label) delete data.extraAttacks.label;\n      if (data.extraAttacks.manual?.length == 0) delete data.extraAttacks.manual;\n    }\n    if (!data.uses?.self?.per) delete data.uses?.self;\n    if (data.uses?.spellPointCost === \"\") delete data.uses?.spellPointCost;\n    if (data.save && !data.save.type) {\n      // Preserve description even if there's no save (TODO: Maybe cull it anyway?)\n      if (!data.save.description) delete data.save.description;\n      // RAW preserving harmless=true here is pointless if there's no save.\n      if (data.save.harmless === false) delete data.save.harmless;\n      if (data.save.harmless !== true && !data.save.description) delete data.save;\n      else {\n        delete data.save.type;\n        delete data.save.dc;\n      }\n    }\n    if (!data.held) delete data.held;\n    if (!data.duration?.units) delete data.duration;\n    if (data.duration?.dismiss === false) delete data.duration.dismiss;\n    if (data.duration?.concentration === false) delete data.duration.concentration;\n    if (!data.target?.value) delete data.target;\n    if (!data.uses?.autoDeductChargesCost) delete data.uses?.autoDeductChargesCost;\n    if (data.uses?.perAttack === false) delete data.uses.perAttack;\n    if (foundry.utils.isEmpty(data.uses)) delete data.uses;\n\n    if (!data.ability?.damage) {\n      delete data.ability?.damage;\n      delete data.ability?.damageMult;\n      delete data.ability.max;\n    }\n    if ([\"other\", \"save\", \"spellSave\", \"healing\"].includes(data.actionType || \"other\")) {\n      delete data.ability?.attack;\n      delete data.ability?.critMult;\n      delete data.ability?.critRange;\n    }\n    if (data.ability?.critMult <= 0) data.ability.critMult = 1;\n    if (data.ability?.critRange <= 0) {\n      delete data.ability?.critMult;\n      data.ability.critRange = null;\n    }\n    if (!data.ability?.attack) delete data.ability?.attack;\n    if (data.ability?.damageMult === null) delete data.ability?.damageMult;\n    if (data.ability?.max === null) delete data.ability.max;\n    if (foundry.utils.isEmpty(data.ability)) delete data.ability;\n\n    if (data.powerAttack?.multiplier === null) delete data.powerAttack?.multiplier;\n\n    if (!data.area) delete data.area;\n    if (!data.effect) delete data.effect;\n    if (data.notes?.effect) {\n      if (data.notes.effect.length === 0) delete data.notes.effect;\n    }\n    if (data.notes?.footer) {\n      if (data.notes.footer.length === 0) delete data.notes.footer;\n    }\n    if (foundry.utils.isEmpty(data.notes)) delete data.notes;\n\n    if (!data.range?.units) delete data.range;\n    else {\n      if (!data.range?.minUnits) delete data.range?.minValue;\n      if (data.range?.maxIncrements === 1) delete data.range?.maxIncrements;\n    }\n\n    if (data.damage) {\n      if (data.damage.parts?.length == 0) delete data.damage.parts;\n      if (data.damage.critParts?.length == 0) delete data.damage.critParts;\n      if (data.damage.nonCritParts?.length == 0) delete data.damage.nonCritParts;\n      if (Object.keys(data.damage).length == 0) delete data.damage;\n    }\n\n    if (data.material) {\n      if (!data.material.normal?.value && !data.material.normal?.custom) delete data.material?.normal;\n      if (!(data.material.addon?.length > 0)) delete data.material?.addon;\n      if (Object.keys(data.material).length == 0) delete data.material;\n    }\n\n    // Diff based cleanup (don't do this for everything, to avoid defaults changing causing problems)\n    const defaults = new this().toObject(true, false);\n    const diff = foundry.utils.diffObject(defaults, data);\n    if (!diff.naturalAttack) delete data.naturalAttack;\n    if (!diff.alignments) delete data.alignments;\n\n    // Prune child models\n    // HACK: .toObject() only clones _source and thus never calls .toObject() on the child models\n    if (data.damage) {\n      for (const parts of Object.values(data.damage)) {\n        for (const part of parts) {\n          DamagePartModel.pruneData(part);\n        }\n      }\n    }\n\n    if (data.extraAttacks?.manual?.length) {\n      for (const exAtk of data.extraAttacks.manual) {\n        ExtraAttackModel.pruneData(exAtk);\n      }\n    }\n\n    if (data.conditionals?.length === 0) delete data.conditionals;\n\n    if (data.ammo?.type === \"\") delete data.ammo.type;\n    if (data.ammo?.misfire === null) delete data.ammo.misfire;\n    if (data.ammo?.cost === null || data.ammo?.cost === undefined) delete data.ammo?.cost;\n    if (foundry.utils.isEmpty(data.ammo)) delete data.ammo;\n\n    if (!data.soundEffect) delete data.soundEffect;\n    if (!data.description) delete data.description;\n\n    if (!data.splash) delete data.splash;\n    if (!data.touch) delete data.touch;\n    if (!data.nonlethal) delete data.nonlethal;\n  }\n\n  /**\n   * Current sheet.\n   *\n   * @remarks\n   * - Initializes a new sheet if one doesn't exist yet.\n   *\n   * @type {pf1.applications.component.ItemActionSheet}\n   */\n  get sheet() {\n    this._sheet ??= new pf1.applications.component.ItemActionSheet(this);\n    return this._sheet;\n  }\n\n  /**\n   * Render all connected application instances.\n   *\n   * @param {boolean} [force=false] - Force rendering\n   * @param {object} [context={}] - Optional context\n   */\n  render(force = false, context = {}) {\n    // TODO: Support AppV2\n    Object.values(this.apps).forEach((app) => app.render(force, context));\n  }\n\n  /* DEPRECATIONS */\n\n  /** @deprecated - No replacement */\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.defaultData has been deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return new this().toObject(undefined, false);\n  }\n\n  /**\n   * @deprecated - Use the action directly instead\n   * @returns {this}\n   */\n  get data() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemAction.data has been deprecated. Use the data directly on the action instead.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return this;\n  }\n\n  /** @deprecated - No replacement */\n  static get defaultDamageType() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.defaultDamageType is deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return [];\n  }\n\n  /**\n   * Has sound effect?\n   *\n   * @deprecated - Test `!!action.soundEffect` instead.\n   * @type {boolean}\n   */\n  get hasSound() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemAction.hasSound is deprecated with no replacement. Test !!action.soundEffect instead.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return !!this.soundEffect;\n  }\n\n  /**\n   * Effective ammo type.\n   *\n   * @deprecated - Use `action.ammo.type` instead.\n   * @type {string|null}\n   */\n  get ammoType() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.ammoType is deprecated in favor of ItemAction.ammo.type\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.ammo.type;\n  }\n\n  /**\n   * Area\n   *\n   * @deprecated - Use `action.area` instead.\n   * @type {string}\n   */\n  get spellArea() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.spellArea is deprecated in favor of ItemAction.area\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.area;\n  }\n\n  /**\n   * Effective per-attack ammo cost.\n   *\n   * @deprecated - Use `action.ammo.cost` instead.\n   * @type {number}\n   */\n  get ammoCost() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.ammoCost is deprecated in favor of ItemAction.ammo.cost\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.ammo.cost;\n  }\n\n  /**\n   * @deprecated - Use `action.effect` instead\n   */\n  get spellEffect() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.spellEffect is deprecated in favor of ItemAction.effect\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.effect;\n  }\n\n  /** @deprecated - Use `action.notes.footer` instead */\n  get attackNotes() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.attackNotes is deprecated in favor of ItemAction.notes.footer\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.notes?.footer;\n  }\n\n  /** @deprecated - Use `action.notes.effect` instead */\n  get effectNotes() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.effectNotes is deprecated in favor of ItemAction.notes.effect\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.notes?.effect;\n  }\n}\n","import { getChangeFlat, getSourceInfo } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\nimport { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Change datamodel\n */\nexport class ItemChange extends ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Change\",\n    label: \"Change\", // TODO: i18n\n  });\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        blank: false,\n        initial: () => foundry.utils.randomID(8),\n        required: true,\n        readonly: true,\n      }),\n      formula: new FormulaField(),\n      operator: new fields.StringField({ blank: false, initial: \"add\", choices: [\"add\", \"set\"] }),\n      target: new fields.StringField({ blank: true, required: false }),\n      type: new fields.StringField({ blank: false, required: false, initial: \"untyped\" }),\n      priority: new fields.NumberField({ initial: 0, required: false }),\n      value: new fields.NumberField({ initial: 0, required: false }),\n      flavor: new fields.StringField({ blank: true, initial: undefined, required: false }),\n      continuous: new fields.BooleanField({ initial: undefined, required: false }),\n    };\n  }\n\n  static migrateData(source) {\n    // Update terminology\n    if (source.subTarget) {\n      source.target = source.subTarget;\n      delete source.subTarget;\n    }\n    if (source.modifier) {\n      source.type = source.modifier;\n      delete source.modifier;\n    }\n    // Script operator is no longer supported\n    // And migrate legacy operators\n    if (source.operator === \"script\") source.operator = \"add\";\n    else if (source.operator === \"+\") source.operator = \"add\";\n    else if (source.operator === \"=\") source.operator = \"set\";\n\n    return super.migrateData(source);\n  }\n\n  constructor(data, options = {}) {\n    super(data, options);\n    this.updateTime = new Date();\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange#subTarget is deprecated in favor of ItemChange#target\", {\n      since: \"PF1 v11.4\",\n      until: \"PF1 v12\",\n    });\n    return this.target;\n  }\n\n  get modifier() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange#modifier is deprecated in favor of ItemChange#type\", {\n      since: \"PF1 v11.4\",\n      until: \"PF1 v12\",\n    });\n    return this.type;\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.documents.item.ItemBasePF.getEmbeddedDocument | Item#getEmbeddedDocument()} override to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * @override\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n    // Required to overcome Foundry's _id special case\n    Object.defineProperty(this, \"_id\", {\n      value: this._source._id,\n      writable: false,\n      configurable: true,\n    });\n    this.prepareData();\n  }\n\n  /**\n   * Prepare in-memory data.\n   *\n   * @internal\n   */\n  prepareData() {\n    this.flavor ||= this.parent?.name.replace(/\\[|\\]/g, \"\") || this.type;\n  }\n\n  /**\n   * Creates a change.\n   *\n   * @param {object[]} data - Data to initialize the change(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the change within.\n   * @returns {Promise<ItemChange[]>} The resulting changes, or an empty array if nothing was created.\n   */\n  static async create(data, { parent = null } = {}) {\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => new this(dataObj).toObject());\n\n      const oldChangeData = parent.toObject().system.changes ?? [];\n\n      // Catalog existing IDs\n      const ids = new Set(oldChangeData.map((c) => c._id));\n      // Remove invalid IDs\n      ids.delete(undefined);\n      ids.delete(\"\");\n      // Ensure new data has unique IDs that don't conflict with old\n      const newIds = new Set();\n      for (const c of data) {\n        c._id ||= foundry.utils.randomID(8);\n        while (ids.has(c._id)) c._id = foundry.utils.randomID(8);\n        ids.add(c._id);\n        newIds.add(c._id);\n      }\n\n      // Update parent\n      const newChangeData = [...oldChangeData, ...data];\n      await parent.update({ \"system.changes\": newChangeData });\n\n      // Return results\n      return [...parent.changes.filter((c) => newIds.has(c._id))];\n    }\n\n    return [];\n  }\n\n  async delete() {\n    const item = this.parent;\n    if (!item) throw new Error(\"Can not delete Change not in an item\");\n    const changes = item.toObject().system.changes ?? [];\n    const changeId = this.id;\n    changes.findSplice((c) => c._id === changeId);\n    return item.update({ \"system.changes\": changes });\n  }\n\n  /**\n   * Change ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * CSS Template Class\n   *\n   * @type {string}\n   */\n  get cssClass() {\n    if (this.isSimple) return \"simple\";\n    if (this.isDeferred) return \"roll\";\n    return \"deterministic\";\n  }\n\n  /**\n   * Is simple?\n   *\n   * Simple changes are evaluated before roll data becomes available.\n   *\n   * @type {boolean}\n   */\n  get isSimple() {\n    const targetData = pf1.config.buffTargets[this.target];\n    return targetData?.simple ?? false;\n  }\n\n  /**\n   * Is deferred?\n   *\n   * Deferred changes are evaluated only when rolled.\n   *\n   * @type {boolean}\n   */\n  get isDeferred() {\n    const targetData = pf1.config.buffTargets[this.target];\n    if (targetData) return targetData.deferred ?? false;\n\n    // Also any per-skill change is deferred\n    return /^skill\\./.test(this.target);\n  }\n\n  /**\n   * Does this change distance of something?\n   *\n   * Affects mostly presentation.\n   *\n   * @type {boolean}\n   */\n  get isDistance() {\n    return /speed|sense/i.test(this.target);\n  }\n\n  get source() {\n    console.warn(\"ItemChange.source does not exist\");\n    return null;\n  }\n\n  getSourceInfoTargets(actor) {\n    switch (this.target) {\n      case \"aac\":\n      case \"sac\":\n      case \"nac\":\n        return [\"system.attributes.ac.normal.total\", \"system.attributes.ac.flatFooted.total\"];\n    }\n\n    // Return default targets\n    return getChangeFlat(actor, this.target, this.type);\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Data to update with\n   */\n  _preUpdate(data) {\n    // Make sure sub-target is valid\n    /*\n    // BUG: This does not work reliably for much anything but skills\n    const targetCategory = data.target?.split(\".\").shift();\n    if (targetCategory) {\n      const target = data.target || this.target;\n      const changeTargets = this.parent.getChangeTargets(targetCategory);\n      if (changeTargets[target] == null) {\n        console.error(`Invalid change target ${target}, resetting.`);\n        data.target = \"\";\n      }\n    }\n    */\n  }\n\n  /**\n   * @override\n   */\n  updateSource(data, options) {\n    // Shallow copy to avoid altering things for caller\n    data = { ...data };\n    // Prevent ID alterations\n    if (this.id && data._id) delete data._id;\n\n    return super.updateSource(data, options);\n  }\n\n  /**\n   * Update this change.\n   *\n   * @param {object} data - Update data\n   * @param {object} options - Additional options\n   * @param {object} context - Update context\n   * @throws {Error} - If change has no parent to update or the change does not exist on parent.\n   * @returns {Promise<Item|null>} - Updated parent, or null if no update was performed (e.g. nothing changed)\n   */\n  async update(data, options = {}, context = {}) {\n    if (!this.parent) throw new Error(\"ItemChange has no parent to update.\");\n\n    this.updateTime = new Date();\n\n    this._preUpdate(data);\n    // Prevent ID alterations\n    if (data._id) delete data._id;\n\n    const changes = this.parent.toObject().system.changes ?? [];\n\n    const idx = changes.findIndex((change) => change._id === this.id);\n    if (idx >= 0) {\n      // Temporary change to validate the update\n      const tc = new this.constructor(this.toObject());\n      const updated = tc.updateSource(data);\n      // Omit update if nothing would change\n      if (foundry.utils.isEmpty(updated)) return null;\n\n      changes[idx] = tc.toObject();\n      return this.parent.update({ \"system.changes\": changes }, context);\n    } else {\n      throw new Error(`Change #${this.id} not found on parent ${this.parent.uuid}`);\n    }\n  }\n\n  /**\n   * Safely apply this change to an actor, catching any errors.\n   *\n   * @internal\n   * @see {@link ItemChange#applyChange}\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   */\n  _safeApplyChange(actor, targets = null, { applySourceInfo = true } = {}) {\n    try {\n      this.applyChange(actor, targets, { applySourceInfo });\n    } catch (error) {\n      if (this.parent?.isOwner || actor.isOwner) {\n        const msgSourceReference = this.parent\n          ? `from ${this.parent.name} [${this.parent.uuid}] to ${actor.name}`\n          : `to ${actor.name} [${actor.uuid}]]`;\n        const errorMessage = `Failed to apply ItemChange ${this.id} ${msgSourceReference}`;\n        const errorData = {\n          change: this,\n          parent: this.parent,\n          actor,\n          targets,\n        };\n        Hooks.onError(\"ItemChange#applyChange\", error, {\n          msg: errorMessage,\n          log: \"error\",\n          data: errorData,\n        });\n        ui.notifications?.error(error.message, { console: false });\n      }\n    }\n  }\n\n  /**\n   * Applies this change to an actor.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   * @param {object} [options.rollData] - Roll data\n   */\n  applyChange(actor, targets = null, { applySourceInfo = true, rollData } = {}) {\n    // Prepare change targets\n    targets ??= this.getTargets(actor);\n\n    rollData ??= this.parent ? this.parent.getRollData({ refresh: true }) : actor.getRollData({ refresh: true });\n\n    const overrides = actor.changeOverrides;\n    for (const t of targets) {\n      const override = overrides[t];\n      const operator = this.operator;\n\n      // HACK: Data prep change application creates overrides; only changes meant for manual comparison lack them,\n      // and those do not have to be applied to the actor.\n      // This hack enables calling applyChange on Changes that are not meant to be applied, but require a call to\n      // determine effective operator and/or value.\n      if (!override) continue;\n\n      let value = 0;\n      if (this.formula) {\n        if (!isNaN(this.formula)) {\n          value = parseFloat(this.formula);\n        } else if (this.isDeferred && RollPF.parse(this.formula).some((t) => !t.isDeterministic)) {\n          value = RollPF.replaceFormulaData(this.formula, rollData, { missing: 0 });\n        } else {\n          value = RollPF.safeRollSync(\n            this.formula,\n            rollData,\n            { formula: this.formula, target: t, change: this, rollData },\n            { suppressError: this.parent && !this.parent.isOwner },\n            { maximize: true }\n          ).total;\n        }\n      }\n\n      this.value = value;\n\n      if (!t) continue;\n\n      const prior = override[operator][this.type];\n\n      switch (operator) {\n        case \"add\":\n          {\n            let base = foundry.utils.getProperty(actor, t);\n\n            // Don't change non-existing ability scores\n            if (base == null) {\n              if (t.match(/^system\\.abilities/)) continue;\n              base = 0;\n            }\n\n            // Deferred formula\n            if (typeof value === \"string\") break;\n\n            if (typeof base === \"number\") {\n              // Skip positive dodge modifiers if lose dex to AC is in effect\n              if (actor.changeFlags.loseDexToAC && value > 0 && this.type === \"dodge\" && this.isAC) continue;\n\n              if (pf1.config.stackingBonusTypes.includes(this.type)) {\n                // Add stacking bonus\n                foundry.utils.setProperty(actor, t, base + value);\n                override[operator][this.type] = (prior ?? 0) + value;\n              } else {\n                // Use higher value only\n                const diff = !prior ? value : Math.max(0, value - (prior ?? 0));\n                foundry.utils.setProperty(actor, t, base + diff);\n                override[operator][this.type] = Math.max(prior ?? 0, value);\n              }\n            }\n          }\n          break;\n\n        case \"set\":\n          foundry.utils.setProperty(actor, t, value);\n          override[operator][this.type] = value;\n          break;\n      }\n\n      if (applySourceInfo) this.applySourceInfo(actor);\n\n      // Adjust ability modifier\n      const modifierChanger = t.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.(?:total|penalty|base)$/);\n      const abilityTarget = modifierChanger?.[1];\n      if (abilityTarget) {\n        const ability = actor.system.abilities[abilityTarget];\n        ability.mod = pf1.utils.getAbilityModifier(ability.total, {\n          damage: ability.damage,\n          penalty: ability.penalty,\n        });\n      }\n    }\n  }\n\n  /**\n   * Does this target any kind of AC?\n   *\n   * @type {boolean}\n   */\n  get isAC() {\n    return [\"ac\", \"aac\", \"sac\", \"nac\", \"tac\", \"ffac\"].includes(this.target);\n  }\n\n  /**\n   * Applies this change's info to an actor's `sourceInfo`.\n   * Info is only added if either the {@link type | modifier type} allows stacking or the {@link value} is higher than the previous value.\n   * If the modifier type is not stacking and this change's info is added, existing and now ineffective info entries are removed.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @returns {void}\n   */\n  applySourceInfo(actor) {\n    const sourceInfoTargets = this.getSourceInfoTargets(actor);\n    const value = this.value;\n\n    // This Change's info entry data\n    const infoEntry = {\n      value,\n      operator: this.operator,\n      name: this.parent ? this.parent.name : this.flavor,\n      modifier: this.type,\n      type: this.parent ? this.parent.type : null,\n      change: this,\n    };\n\n    switch (this.operator) {\n      case \"add\":\n        if (pf1.config.stackingBonusTypes.includes(this.type)) {\n          // Always add stacking entries\n          const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n          for (const si of sourceInfoTargets) {\n            getSourceInfo(actor.sourceInfo, si)[sourceInfoGroup].push(infoEntry);\n          }\n        } else {\n          for (const infoTarget of sourceInfoTargets) {\n            const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n            const sInfo = getSourceInfo(actor.sourceInfo, infoTarget)[sourceInfoGroup];\n\n            // Assume this Change's info entry should be added\n            let doAdd = true;\n\n            // The value of the this Change's source info entry for this specific target\n            let sumValue = value;\n\n            // Check if there already is an info entry with which this Change should be combined\n            // This is the case for `enhancement` and `base` entries otherwise sharing parent and target\n            const existingInfoEntry = sInfo.find((infoEntry) => {\n              const hasSameParent = infoEntry.change?.parent === this.parent;\n              const isEnh =\n                (infoEntry.change?.type === \"base\" && this.type === \"enhancement\") ||\n                (infoEntry.change?.type === \"enhancement\" && this.type === \"base\");\n              const hasSameTarget = infoEntry.change?.target === this.target;\n              return hasSameParent && isEnh && hasSameTarget;\n            });\n            if (existingInfoEntry) {\n              doAdd = false;\n              if (existingInfoEntry.change?.type === \"base\") {\n                // This Change enhances an existing base\n                existingInfoEntry.value += value;\n                continue;\n              } else {\n                // This Change replaces an existing `enhancement` entry with its own `base` entry, using the sum of both values\n                sumValue += existingInfoEntry.value;\n                // Check whether the combined entry should exist, or if another entry is already better than it\n                const hasHighestValue = !sInfo.some((infoEntry) => {\n                  const isSameModifier = infoEntry.modifier === infoEntry.modifier;\n                  const target = infoEntry.change?.target;\n                  const isSameTarget = target ? target === this.target : true;\n                  const hasHigherValue = infoEntry.value > sumValue;\n                  return isSameModifier && isSameTarget && hasHigherValue;\n                });\n                // If the merged entry is the best, replace the existing entry with it\n                sInfo.findSplice(\n                  (entry) => entry === existingInfoEntry,\n                  hasHighestValue ? { ...infoEntry, value: sumValue } : undefined\n                );\n              }\n            }\n\n            // Determine whether there is an entry with a higher value; remove entries with lower values\n            if (this.type) {\n              for (const oldEntry of sInfo) {\n                if (!oldEntry.type) continue;\n                const isSameType = oldEntry.change?.type === oldEntry.type;\n                if (!isSameType) continue;\n                if (oldEntry.value < sumValue) {\n                  sInfo.splice(sInfo.indexOf(oldEntry), 1);\n                } else {\n                  doAdd = false;\n                }\n              }\n            }\n\n            if (doAdd) sInfo.push({ ...infoEntry });\n          }\n        }\n        break;\n      case \"set\": {\n        for (const si of sourceInfoTargets) {\n          getSourceInfo(actor.sourceInfo, si).positive.push({ ...infoEntry });\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * @see {@link getChangeFlat}\n   * @param {ActorPF} actor - Actor instance\n   * @returns {Array<string>} - Valid targets for this change on specified actor\n   */\n  getTargets(actor) {\n    return getChangeFlat(actor, this.target, this.type, this.value);\n  }\n\n  static pruneData(data) {\n    // Null priority is pointless\n    if (data.priority === null) delete data.priority;\n\n    // Clear undefined values\n    for (const [key, value] of Object.entries(data)) {\n      if (value === undefined) delete data[key];\n    }\n  }\n\n  toObject(source, prune) {\n    const data = super.toObject(source, prune);\n\n    // Cleanup: Following are never meant to be stored\n    delete data.value;\n    delete data.continuous;\n\n    return data;\n  }\n}\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\nimport { PreparedModel } from \"@models/abstract/prepared-model.mjs\";\nimport { IDField } from \"@datafields/id-field.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Conditional modifier bundle.\n */\nexport class ItemConditional extends ReplaceableSourceMixin(CompactingMixin(PreparedModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Conditional\",\n    label: \"Conditional\", // TODO: i18n\n  });\n\n  constructor(data, options) {\n    if (options instanceof pf1.components.ItemAction) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemConditional constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      _id: new IDField(),\n      name: new fields.StringField(),\n      default: new fields.BooleanField({ initial: false }),\n      modifiers: new fields.ArrayField(new fields.EmbeddedDataField(ItemConditionalModifier)),\n    };\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.component.ItemAction.getEmbeddedDocument | ItemAction#getEmbeddedDocument()} to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * For supporting modifiers in fromUuid()\n   *\n   * Synced with Foundry v12.331\n   *\n   * @param {string} embeddedName\n   * @param {string} id\n   * @param {object} options\n   * @returns {pf1.components.ItemConditionalModifier|undefined}\n   */\n  getEmbeddedDocument(embeddedName, id, options = {}) {\n    let result;\n    switch (embeddedName) {\n      case \"Modifier\": {\n        result = this.modifiers?.get(id);\n      }\n    }\n\n    if (options.strict) throw new Error(`${embeddedName} id [${id}] does not exist in ${this.uuid}`);\n\n    return result;\n  }\n\n  _configure(options) {\n    super._configure(options);\n\n    // Following prevent these definitions being lost on model reset()\n    Object.defineProperties(this, {\n      // Modifiers collection cache to avoid conflicts with stored array\n      _modifiers: {\n        value: new Collection(),\n        writable: false,\n        enumerable: false,\n      },\n    });\n  }\n\n  /**\n   * @internal\n   */\n  prepareData() {\n    this._prepareModifiers();\n  }\n\n  /**\n   * @internal\n   */\n  _prepareModifiers() {\n    const collection = this._modifiers;\n    const prior = new Collection(collection.entries());\n    collection.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    // HACK: this causes modifier datamodels to be re-initialized\n    // It would be better for the system if we didn't make this persistent reference guarantee\n    for (const mod of this.modifiers) {\n      let modifier = null;\n      if (prior && prior.has(mod.id)) {\n        modifier = prior.get(mod.id);\n        if (mod !== modifier) modifier.replaceSource(mod._source);\n      } else {\n        modifier = mod;\n      }\n\n      collection.set(modifier.id, modifier);\n    }\n\n    this.modifiers = collection;\n  }\n\n  /**\n   * Create new conditional\n   *\n   * @param {object|object[]} data - Data to create conditional(s) from.\n   * @param {object} context - Context data\n   * @param {ItemAction} context.parent Parent action to add the conditional to.\n   * @throws {Error} - If no valid parent is defined.\n   * @returns {Proimise<ItemConditional[]>} - Created conditionals\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (!(parent instanceof pf1.components.ItemAction))\n      throw new Error(\"Can not create conditionals without parent ItemAction\");\n\n    if (!Array.isArray(data)) data = [data];\n\n    // Prepare data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n    const conditionals = parent.toObject().conditionals || [];\n    conditionals.push(...data);\n\n    // Update parent\n    await parent.update({ conditionals });\n\n    // Return results\n    return data.map((o) => parent.conditionals.get(o._id));\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemConditional.defaultData has been deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return new this().toObject(true, false);\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Update conditional\n   *\n   * @param {object} updateData\n   * @param {object} options\n   */\n  async update(updateData, options = {}) {\n    if (options.dryRun) return this.updateSource(updateData, { dryRun: true });\n\n    this.updateSource(updateData);\n\n    const conditionals = this.parent.conditionals.map((t) => t.toObject());\n    await this.parent.update({ conditionals });\n  }\n\n  /**\n   * Delete conditional\n   */\n  async delete() {\n    const conditionals = this.parent.conditionals.map((t) => t.toObject());\n    conditionals.findSplice((c) => c._id === this.id);\n    return this.parent.update({ conditionals });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  static pruneData(data) {\n    if (!data.default) delete data.default;\n    if (!(data.modifiers?.length > 0)) delete data.modifiers;\n    else {\n      for (const m of data.modifiers) {\n        ItemConditionalModifier.pruneData(m);\n      }\n    }\n  }\n}\n\n/**\n * Individual modifier in a conditional bundle.\n */\nexport class ItemConditionalModifier extends ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Modifier\",\n    label: \"Modifier\", // TODO: i18n\n  });\n\n  /**\n   * @param {object} data\n   * @param {object} options\n   */\n  constructor(data, options) {\n    if (options instanceof pf1.components.ItemAction) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemConditionalModifier constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      _id: new IDField(),\n      formula: new FormulaField(),\n      target: new fields.StringField(), // modifier on what?\n      subTarget: new fields.StringField(), // which attack is this targeting?\n      type: new fields.StringField({ initial: \"untyped\" }), // Bonus type\n      damageType: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n      critical: new fields.StringField({ initial: undefined }), // Does this target normal or critical confirm? or which kind of damage is this in relation to crits?\n    };\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.component.ItemConditional.getEmbeddedDocument | ItemConditional#getEmbeddedDocument()} to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  static migrateData(source) {\n    if (source.damageType && !Array.isArray(source.damageType)) {\n      const custom =\n        source.damageType.custom\n          ?.split(\";\")\n          .map((t) => t?.trim())\n          .filter((t) => !!t) ?? [];\n      const standard = source.damageType.values ?? [];\n      source.damageType = [...standard, ...custom];\n    }\n\n    // Move effect.dc and effect.cl to dc and cl\n    if (source.target === \"effect\") {\n      if ([\"dc\", \"cl\"].includes(source.subTarget)) {\n        source.target = source.subTarget;\n        source.subTarget = undefined;\n      }\n    }\n    // Remove redundant subtarget\n    if ([\"cl\", \"dc\"].includes(source.target)) source.subTarget = undefined;\n    // Move misc.charges to charges\n    if (source.target === \"misc\") {\n      if (source.subTarget === \"charges\") {\n        source.target = source.subTarget;\n        source.subTarget = undefined;\n      }\n    }\n\n    // Initialize defaults for attack and damage modifiers if not present\n    if (source.target === \"damage\") {\n      if (!source.subTarget) source.subTarget = \"allDamage\";\n      if (!source.critical) source.critical = \"normal\";\n    }\n    if (source.target === \"attack\") {\n      if (!source.subTarget) source.subTarget = \"allAttack\";\n      if (!source.critical) source.critical = \"normal\";\n    }\n\n    return super.migrateData(source);\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemConditionalModifier.defaultData has been deprecated with no replacement.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return new this().toObject(true, false);\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Part ID string\n   *\n   * @type {string}\n   */\n  get partID() {\n    const parts = [this.target];\n    if (this.subTarget) parts.push(this.subTarget);\n    if (this.critical) parts.push(this.critical);\n    return parts.join(\".\");\n  }\n\n  /**\n   * Create conditional modifier\n   *\n   * @param {object} data - Creation data\n   * @param {object} context - Context data\n   * @param {ItemConditional} context.parent - Parent conditional\n   * @returns {Promise<ItemConditionalModifier[]>} - Created modifiers\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n    if (!(parent instanceof pf1.components.ItemConditional))\n      throw new Error(\"Conditional modifier's parent must be a Conditional\");\n\n    if (!Array.isArray(data)) data = [data];\n\n    const modifiers = parent.toObject().modifiers ?? [];\n\n    // Prepare data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n    modifiers.push(...data);\n\n    // Update parent\n    await parent.update({ modifiers });\n\n    // Return results\n    return data.map((o) => parent.modifiers.get(o._id));\n  }\n\n  /**\n   * Update modifier\n   *\n   * @param {object} updateData\n   * @param {object} [options]\n   * @returns {Promise<ItemAction>} - Updated action\n   */\n  async update(updateData, options = {}) {\n    if (options.dryRun) return this.updateSource(updateData, { dryRun: true });\n\n    this.updateSource(updateData);\n\n    const modifiers = this.parent.modifiers.map((m) => m.toObject());\n    return this.parent.update({ modifiers });\n  }\n\n  /**\n   * Delete this individual modifier.\n   *\n   * @returns {Promise<ItemAction>} - Updated action\n   */\n  async delete() {\n    const modifiers = this.parent.toObject().modifiers ?? [];\n    const idx = modifiers.findIndex((m) => m._id === this.id);\n    if (idx < 0) throw new Error(`Modifier not found in parent ${this.parent.name}`);\n\n    modifiers.splice(idx, 1);\n    return this.parent.update({ modifiers });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  static pruneData(data) {\n    if (!data.type) delete data.type;\n    if (!data.formula) delete data.formula;\n    if (!data.critical || data.critical === \"normal\") delete data.critical;\n    if (!data.target) delete data.target;\n    if (!data.subTarget) delete data.subTarget;\n\n    if (![\"attack\", \"damage\"].includes(data.target)) {\n      delete data.critical;\n    }\n\n    // Damage type is only meaningful with damage target\n    if (data.target !== \"damage\") delete data.damageType;\n    else {\n      if (data.damageType?.length) {\n        data.damageType = [...new Set(data.damageType)].filter((t) => !!t);\n      }\n      if (!(data.damageType?.length > 0)) delete data.damageType;\n    }\n\n    // These don't use bonus typing\n    if ([\"damage\", \"size\", \"charges\", \"critMult\", \"cl\", \"sl\"].includes(data.target)) {\n      delete data.type;\n    }\n  }\n}\n","import { PreparedModel } from \"@models/abstract/prepared-model.mjs\";\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\n/**\n * Script Call\n */\nexport class ItemScriptCall extends ReplaceableSourceMixin(PreparedModel) {\n  constructor(data, options) {\n    if (options instanceof foundry.abstract.DataModel) {\n      foundry.utils.logCompatibilityWarning(\"ItemScriptCall second constructor parameter is no longer plain parent.\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        required: true,\n        blank: false,\n        readonly: true,\n        initial: () => foundry.utils.randomID(8),\n      }),\n      name: new fields.StringField({ required: true, initial: () => game.i18n.localize(\"PF1.ScriptCalls.NewName\") }),\n      img: new fields.FilePathField({ required: false, blank: false, categories: [\"IMAGE\"] }),\n      type: new fields.StringField({\n        required: true,\n        blank: false,\n        nullable: false,\n        initial: \"script\",\n        choices: [\"script\", \"macro\"],\n      }),\n      value: new fields.StringField({ required: true, nullable: false, blank: true }),\n      category: new fields.StringField({ required: false }),\n      hidden: new fields.BooleanField({ initial: false, required: false }),\n    };\n  }\n\n  static migrateData(source) {\n    if (source.type == \"macro\") {\n      source.name = \"\";\n      source.img = \"\";\n    }\n\n    return super.migrateData(source);\n  }\n\n  /** @deprecated */\n  get data() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemScriptCall.data is deprecated in favor of directly accessing the data.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return this;\n  }\n\n  /** @deprecated */\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemScriptCall.defaultData is deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return new this().toObject();\n  }\n\n  prepareData() {\n    if (this.type === \"macro\") {\n      const macro = fromUuidSync(this.value);\n      this.name = macro?.name || `${game.i18n.localize(\"PF1.Unknown\")} (${game.i18n.localize(\"DOCUMENT.Macro\")})`;\n      this.img = macro?.img || \"icons/svg/hazard.svg\";\n    }\n  }\n\n  /**\n   * Creates a script call.\n   *\n   * @param {object[]} data - Data to initialize the script call(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the script call within.\n   * @returns {Promise<ItemScriptCall[]>} - The resulting script calls, or an empty array if nothing was created.\n   */\n  static async create(data, context) {\n    const { parent } = context;\n\n    if (!(parent instanceof pf1.documents.item.ItemPF))\n      throw new Error(\"Can not create script calls outside of items.\");\n\n    // Prepare data\n    data = data.map((dataObj) => new ItemScriptCall(dataObj, { parent }).toObject());\n    const newScriptCallData = parent.toObject().system.scriptCalls || [];\n    newScriptCallData.push(...data);\n\n    // TODO: Ensure new script calls don't have ID conflicts\n\n    // Update parent\n    await parent.update({ \"system.scriptCalls\": newScriptCallData });\n\n    // Return results\n    return data.map((o) => parent.scriptCalls.get(o._id));\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {boolean} */\n  get hide() {\n    return this.hidden && !game.user.isGM;\n  }\n\n  /**\n   * Get macro delegate for executing this script call with.\n   *\n   * @returns {Promise<Macro>} - Actual macro or its delegate\n   */\n  async getDelegate() {\n    if (this.type === \"script\") {\n      return new Macro({\n        type: \"script\",\n        command: this.value,\n        name: this.name,\n      });\n    } else {\n      return fromUuid(this.value);\n    }\n  }\n\n  async update(data, options = {}) {\n    if (this.parent != null) {\n      const idx = this.parent.system.scriptCalls.findIndex((o) => o._id === this.id);\n      if (idx >= 0) {\n        data = Object.entries(data).reduce((cur, o) => {\n          cur[`system.scriptCalls.${idx}.${o[0]}`] = o[1];\n          return cur;\n        }, {});\n        return this.parent.update(data, options);\n      }\n    }\n  }\n\n  // Opens up the editor for this script call\n  async edit({ editable = true } = {}) {\n    // For Macros\n    if (this.type === \"macro\") {\n      const macro = await fromUuid(this.value);\n      if (!macro) return void ui.notifications.error(game.i18n.format(\"PF1.Error.NoMacroID\", { id: this.value }));\n\n      macro.sheet.render(true, { focus: true, editable });\n    }\n    // For regular script calls\n    else {\n      const scriptEditor = new pf1.applications.ScriptEditor({\n        command: this.value,\n        name: this.name,\n        parent: this.parent,\n        script: this.id,\n        scriptCall: true,\n      });\n      scriptEditor.render(true);\n\n      const result = await scriptEditor.awaitResult();\n      if (result) {\n        return this.update({ value: result.command, name: result.name });\n      }\n    }\n  }\n\n  /**\n   * Executes the script.\n   *\n   * @param {object} shared - An object passed between script calls, and which is passed back as a result of ItemPF.executeScriptCalls.\n   * @param {object} extraParams - A dictionary containing extra parameters to pass on to the call.\n   * @returns {Promise<*>} - Script return value if any\n   */\n  async execute(shared, extraParams = {}) {\n    // Add variables to the evaluation scope\n    const item = this.parent;\n    const actor = item.actor;\n    const action = shared.action ?? null;\n    const token = actor?.token?.object ?? actor?.getActiveTokens(false, false)[0];\n\n    const scm = await this.getDelegate();\n    if (!scm) return;\n\n    // Create temporary macro for handling execution context and other utility\n    return scm.execute({ item, actor, token, shared, action, ...extraParams });\n  }\n}\n","export class ContextNote extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      text: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n      target: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n    };\n  }\n\n  static migrateData(source) {\n    if (source.subTarget) {\n      // Transfer a special tuple format target\n      if (source.target === \"spell\" && source.subTarget === \"effect\") {\n        source.target = \"spellEffect\";\n      }\n      // Otherwise transfer subtarget to target\n      else {\n        source.target = source.subTarget;\n      }\n    }\n\n    return super.migrateData(source);\n  }\n}\n","/**\n * Convert Distance\n *\n * @example\n * With metric enabled\n * ```hbs\n * {{convertDistance 5}} -> 1.5\n * ```\n * With imperial\n * ```hbs\n * {{convertDistance 9 \"m\"}} -> 30\n * ```\n *\n * @see {@link pf1.utils.convertDistance}\n * @internal\n * @group Handlebars\n * @param {number} value\n * @param {string} [type]\n */\nexport function convertDistance(value, type) {\n  return Number.isFinite(value)\n    ? pf1.utils.convertDistance(value, typeof type === \"string\" ? type : undefined)[0]\n    : value;\n}\n\n/**\n * Action Range\n *\n * @example\n * ```hbs\n * {{actionRange someAction actionRollData}} -> 30 ft\n * ```\n *\n * @group Handlebars\n * @internal\n * @param {pf1.components.ItemAction} action\n * @param {object} rollData\n * @returns {string}\n */\nexport function actionRange(action, rollData) {\n  if (!action?.hasRange) return null;\n\n  const range = action.range.value;\n  const rangeType = action.range.units;\n\n  if (!rangeType) return null;\n  if (rangeType === \"spec\") return null; // Special is its own thing\n\n  let [rng, unit] = pf1.utils.calculateRange(range, rangeType, rollData);\n\n  [rng, unit] = pf1.utils.simplifyRange(rng, unit);\n\n  return `${rng} ${pf1.config.measureUnitsShort[unit] || unit}`;\n}\n\n/**\n * Action Damage\n *\n * @example\n * ```hbs\n * {{actionDamage someAction}} -> 3d6\n * ```\n * @see {@link pf1.utils.formula.actionDamage}\n * @group Handlebars\n * @internal\n * @param {ItemAction} action - Action\n * @param {object} [_rollData] - Deprecated\n * @param {object} [options] - Additional options\n * @returns {string} - Damage string\n */\nexport function actionDamage(action, _rollData, options) {\n  if (!action.hasDamage) return null;\n  return pf1.utils.formula.actionDamage(action, { simplify: options?.hash?.combine ?? true });\n}\n\n/**\n * Alt numberFormat helper to provide non-fixed point decimals and pretty fractionals\n *\n * @example\n * ```hbs\n * {{numberFormatAlt 5.52 decimals=1}} -> 5.5\n * {{numberFormatAlt 5 decimals=1}} -> 5\n * {{numberFormatAlt 5.5 fraction=true}} -> 5 1/2\n * ```\n * Compare with core helper\n * ```hbs\n * {{numberFormat 5.52 decimals=1}} -> 5.5\n * {{numberFormat 5 decimals=1}} -> 5.0\n * ```\n *\n * @group Handlebars\n * @internal\n * @param {number} number\n * @param {object} [context]\n * @param {object} [context.hash]\n * @param {boolean} [context.hash.fraction] - Format as fractional.\n * @param {number} [context.hash.decimals] - Display up to this many decimals. Has no effect with fractional.\n * @returns {number|string} - Formatted number\n */\nexport function numberFormatAlt(number, { hash } = {}) {\n  if (hash.fraction) return pf1.utils.fractionalToString(number);\n  else return pf1.utils.limitPrecision(number, hash.decimals);\n}\n\n/**\n * Register Handlebars Helpers as part of system initialization\n *\n * @group Handlebars\n * @internal\n */\nexport function register() {\n  const helpers = {\n    convertDistance,\n    actionRange,\n    actionDamage,\n    numberFormatAlt,\n  };\n\n  for (const [id, fn] of Object.entries(helpers)) {\n    if (id in Handlebars.helpers) console.error(`PF1 | Masking \"${id}\" HBS helper`);\n    Handlebars.registerHelper(id, fn);\n  }\n}\n","/**\n * Measure the distance between two pixel coordinates\n * See BaseGrid.measureDistance for more details\n *\n * @deprecated\n * @param segments\n * @param options\n */\nexport function measureDistances(segments, options = {}) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.canvas.measureDistances() is deprecated in favor of canvas.grid.measureDistances() and canvas.grid.measurePath()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n  return canvas.grid.measureDistances(segments, options);\n}\n","import { ItemSelector } from \"module/applications/item-selector.mjs\";\nimport { ActorSelector } from \"module/applications/actor-selector.mjs\";\n\n/**\n * Choose actor from list.\n *\n * This is simplified interface to {@link pf1.applications.ActorSelector}\n *\n * @param {ActorSelectorOptions} options - Selection options\n * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n */\nexport async function getActor(options) {\n  options.document ??= false;\n  return ActorSelector.wait(options);\n}\n\n/**\n * Choose item from actor.\n *\n * This is simplified interface to {@link pf1.applications.ItemSelector}\n *\n * @param {getItemOptions} options - Options\n * @returns {Promise<Item|string|null>} - Chosen item or null.\n */\nexport async function getItem(options = {}) {\n  options.document ??= true;\n\n  if (!options.type && !options.subType && !options.filterFunc && !options.items)\n    throw new Error(\"Insufficient filter rules provided.\");\n\n  options.filterFunc ||= (item) => {\n    return (!options.type || item.type === options.type) && (!options.subType || item.subType === options.subType);\n  };\n\n  if (!options.window) options.window = {};\n\n  // Provide nice basic title\n  if (!options.window.title && !options.filterFunc && options.type) {\n    options.window.title = game.i18n.format(\"PF1.SelectSpecific\", {\n      specifier: options.subType\n        ? pf1.config[`${options.type}Types`]?.[options.subType]\n        : game.i18n.localize(CONFIG.Item.typeLabels[options.type]),\n    });\n  }\n\n  return ItemSelector.wait(options);\n}\n\n/**\n * Query for a number from current user.\n *\n * @example\n * ```js\n * const num = await pf1.utils.dialog.getNumber({\n *   placeholder: \"NaN\",\n *   hint: \"Amazing\",\n *   label: \"Gimme a number\",\n * });\n * ```\n *\n * @param {object} [options={}] Additional options\n * @param {number} [options.min=null] Minimum value\n * @param {number} [options.max=null] Maximum value\n * @param {number} [options.step] Value stepping\n * @param {string} [options.title] Dialog title\n * @param {string} [options.label] A label preceding the number input.\n * @param {string} [options.hint] A hint displayed under the input.\n * @param {number} [options.initial] Initial value\n * @param {string} [options.placeholder] Placeholder value or description.\n * @param {string[]} [options.classes=[]] CSS classes to add.\n * @param {Function} [options.render] Render callback. Passed onto DialogV2.\n * @param {object} [options.dialog={}] Additional dialog options. Merged with the other DialogV2 options.\n * @returns {Promise<number|null>} Provided value or null if dialog was cancelled.\n */\nexport async function getNumber({\n  title,\n  label,\n  hint,\n  initial,\n  placeholder,\n  min,\n  max,\n  step,\n  classes = [],\n  render: renderCallback,\n  dialog: dialogOptions = {},\n} = {}) {\n  const templateData = { value: initial, min, max, step, placeholder, label, hint };\n  const content = await renderTemplate(\"systems/pf1/templates/apps/get-number.hbs\", templateData);\n\n  const options = {\n    window: { title: title || game.i18n.localize(\"PF1.Application.GetNumber.Title\") },\n    classes: [\"pf1-v2\", \"get-number\", ...classes],\n    content,\n    position: {\n      width: 260,\n    },\n    buttons: [\n      {\n        icon: \"fa-solid fa-check\",\n        label: \"PF1.Application.GetNumber.Confirm\",\n        action: \"confirm\",\n        default: true,\n        callback: (event, target, html) => {\n          if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n          return html.querySelector(\"form input[name='number']\").valueAsNumber;\n        },\n      },\n    ],\n    render: (event, html) => {\n      if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n      // Select contents of the number input\n      html.querySelector(\"form input[name='number']\").select();\n\n      renderCallback?.(event, html);\n    },\n    close: () => NaN,\n    rejectClose: false,\n  };\n\n  return foundry.applications.api.DialogV2.wait(foundry.utils.mergeObject(options, dialogOptions));\n}\n","/**\n * Split copper currency into multiple currencies favoring the one with highest rates.\n *\n * @param {number} cp - Copper\n * @param {object} [options] - Additional options\n * @param {CoinType[]} [options.omit=[]] - Omit these types from the result. Baseline currency can not be omitted.\n * @param {boolean} [options.pad=true] - Pad return value by including zeroed currencies\n * @param {boolean} [options.standard=true] - If true, no coinage of greater value than the {@link pf1.config.currency.standard standard currency} is included.\n * @returns {Record<CoinType,number>} The various currencies.\n */\nexport function split(cp, { omit = [], standard = true, pad = true } = {}) {\n  const cc = pf1.config.currency;\n\n  const rates = Object.entries(cc.rate)\n    .filter(([key]) => !omit.includes(key))\n    .sort((a, b) => b[1] - a[1]);\n\n  const maxRate = standard ? cc.standardRate : Infinity;\n\n  const currencies = {};\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value != 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[cc.base] = cp;\n  }\n\n  return currencies;\n}\n\n/**\n * Merges provided currencies into specified type.\n *\n * @param {object} currency - Currency object with keys according to {@link pf1.config.currencies}\n * @param {CoinType} [type] - Return coinage, defaults to {@link pf1.config.currency.base baseline currency}.\n * @returns {number} - Merged currency\n */\nexport function merge({ ...currency } = {}, type) {\n  const { rate: rates, base } = pf1.config.currency;\n  type ||= pf1.config.currency.base;\n\n  let copper = 0;\n  for (let [type, value] of Object.entries(currency)) {\n    value ??= 0;\n    if (!Number.isFinite(value)) throw new Error(`Invalid currency value \"${value}\" for type \"${type}\"`);\n    if (value == 0) continue;\n    /** @type {number|undefined} */\n    const rate = rates[type];\n    if (rate) {\n      copper += value * rate;\n    } else {\n      if (type === base) copper += value;\n      else throw new Error(`Invalid currency type: \"${type}\"`);\n    }\n  }\n\n  if (type === base) return copper;\n  return copper / rates[type];\n}\n\n/**\n * Convert given amount of copper to some other currency, excess is placed on less valuable coinage.\n *\n * @param {number} cp - Copper quantity\n * @param {CoinType} [target] - Target unit. Defaults to {@link pf1.config.currency.standard standard currency}.\n * @param {object} [options] - Additional options\n * @param {boolean} [options.pad] - Pad return value by including zeroed currencies\n * @returns {Record<CoinType,number>} - Resulting conversion\n */\nexport function convert(cp, target, { pad = true } = {}) {\n  if (!Number.isFinite(cp) || !(cp >= 0)) throw new Error(`Invalid currency quantity: ${cp}`);\n\n  const cc = pf1.config.currency;\n  target ||= cc.standard;\n\n  if (target !== cc.base && cc.rate[target] === undefined) throw new Error(`Invalid currency type \"${target}\"`);\n\n  const { base, rate } = cc;\n  const rates = Object.entries(rate).sort((a, b) => b[1] - a[1]);\n\n  /** @type {number} */\n  const maxRate = rate[target] ?? 1;\n\n  const currencies = {};\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value !== 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[base] = cp;\n  }\n\n  return currencies;\n}\n","/**\n * @internal\n * @typedef {RollTerm|FormulaPart} AnyTerm\n */\n\n/**\n * Removes flairs from a formula.\n *\n * @param {string} formula Formula\n * @returns {string} Stripped formula\n */\nexport const unflair = (formula) => formula.replace(/\\[[^\\]]*]/g, \"\");\n\n/**\n * Compress basic math and space in produced formula.\n *\n * @param {string} formula - Formula to compress\n * @returns {string} - Compressed formula\n */\nexport const compress = (formula) =>\n  formula\n    .replace(/\\s+/g, \"\") // remove whitespaces\n    .replace(/\\+-/g, \"-\") // + -n = -n\n    .replace(/--/g, \"+\") // - -n = +n\n    .replace(/-\\+/g, \"-\") // - +n = -n\n    .replace(/\\+\\++/g, \"+\"); // + +n = +n\n\n/**\n * @param {AnyTerm} t - Term to test\n * @returns {boolean} - Is deemed simple.\n */\nconst isSimpleTerm = (t) => t instanceof foundry.dice.terms.NumericTerm || t?.simple || false;\n\nclass FormulaPart {\n  /** @type {AnyChunk[]} */\n  terms = [];\n  simple = false;\n\n  constructor(terms = [], simple = false, evaluate = true) {\n    this.terms = terms.filter((t) => !!t);\n    this.simple = simple;\n\n    if (evaluate) this.evaluate();\n  }\n\n  get isDeterministic() {\n    return this.terms.every((t) => t.isDeterministic);\n  }\n\n  #formula;\n  get formula() {\n    if (this.#formula) return this.#formula;\n\n    const f = this.terms\n      .map((t) => {\n        if (t.isDeterministic) return `${t.total}`;\n        else if (t instanceof foundry.dice.terms.FunctionTerm) return `${t.simplify || t.expression}`;\n        // Dice eat up prefix parentheticals in v12\n        else if (\n          t instanceof foundry.dice.terms.Die &&\n          t._number instanceof Roll &&\n          t._number.terms.length == 1 &&\n          t._number.terms[0] instanceof foundry.dice.terms.ParentheticalTerm\n        ) {\n          // Simplify prefix parenthetical part of (X)dY\n          const formula = t._number.terms[0].roll.formula;\n          const iformula = simplify(formula);\n          t._number = new Roll.defaultImplementation(iformula).evaluateSync({ maximize: true });\n          return t.formula;\n        } else {\n          return t.formula;\n        }\n      })\n      .join(\"\");\n\n    const roll = new Roll.defaultImplementation(f);\n    if (roll.isDeterministic) this.#formula = roll.evaluateSync({ minimize: true }).total.toString();\n    else this.#formula = f;\n\n    return this.#formula;\n  }\n\n  _total = null;\n\n  evaluate() {\n    const roll = new Roll.defaultImplementation(this.formula).evaluateSync({ minimize: true });\n    this._total = roll.total;\n  }\n\n  get total() {\n    if (this._total === null) {\n      console.error(\"Must be evaluated first!\", this);\n      throw new Error(\"Must be evaluated first!\");\n    }\n    return this._total;\n  }\n}\n\n/**\n * Combine [\"-\", term] into single {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to handle\n * @returns {Array<AnyTerm>} - New terms\n */\nfunction negativeTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.OperatorTerm && term.operator === \"-\") {\n      // Add preceding + if operators are fully consumed\n      if (!(nterms.at(-1) instanceof foundry.dice.terms.OperatorTerm)) {\n        const nt = new foundry.dice.terms.OperatorTerm({ operator: \"+\" });\n        nt._evaluated = true;\n        nterms.push(nt);\n      }\n      nterms.push(new FormulaPart([term, terms.shift()], true));\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n *\n * @param {AnyTerm[]} terms - Terms to handle\n * @returns {Array<AnyTerm>} - Reduced terms\n */\nfunction stringTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.StringTerm) {\n      // Partial dice terms combine left\n      if (/^d\\d/.test(term.expression)) {\n        nterms.push(new FormulaPart([nterms.pop(), term]));\n      }\n      // Rest combine right\n      else {\n        nterms.push(new FormulaPart([term, terms.shift()]));\n      }\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n * Combine [term, operator, term] cases into singular {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to combine\n * @param {string[]} operators - Operators to look for\n * @param {boolean} simpleOnly - Only combine simple terms\n * @returns {AnyTerm[]} - Product\n */\nfunction triTermOps(terms, operators, simpleOnly = false) {\n  const eterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.OperatorTerm && operators.includes(term.operator)) {\n      // Only combine simple terms\n      if (simpleOnly && !(isSimpleTerm(eterms.at(-1)) && isSimpleTerm(terms[0]))) {\n        // Fall through\n      }\n      // Combine all\n      else {\n        const left = eterms.pop(),\n          right = terms.shift();\n        eterms.push(new FormulaPart([left, term, right], isSimpleTerm(left) && isSimpleTerm(right)));\n        continue;\n      }\n    }\n    eterms.push(term);\n  }\n\n  return eterms;\n}\n\n/**\n * Replace 0dX with 0\n *\n * Alters terms in-place.\n *\n * @param {foundry.dice.terms.RollTerm[]} terms - Term array\n * @returns {foundry.dice.terms.RollTerm[]} - Same term array as it was given.\n */\nfunction replaceZeroDice(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    const term = terms[i];\n    if (term instanceof foundry.dice.terms.Die && term.number === 0) {\n      terms.splice(i, 1, foundry.dice.terms.RollTerm.fromData({ number: 0, class: \"NumericTerm\", _evaluated: true }));\n    }\n  }\n\n  return terms;\n}\n\n/**\n * Simplifies formula to very basic level.\n *\n * @param {string} formula - Formula\n * @param {object} [rollData={}] - Roll data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict] - Attempt to return something even slightly valid even with bad formulas\n * @returns {string} - Simpler formula\n * @throws {Error} - On invalid formula\n */\nexport function simplify(formula, rollData = {}, { strict = true } = {}) {\n  formula = compress(Roll.replaceFormulaData(unflair(formula), rollData, { missing: 0 }));\n\n  // Produce nicer formula\n  formula = Roll.defaultImplementation\n    .parse(formula)\n    .map((t) => {\n      if (t instanceof foundry.dice.terms.ParentheticalTerm) {\n        if (t.isDeterministic) {\n          // Parenthetical term doesn't have separate evaluate calls yet\n          t.evaluate({ minimize: true });\n          const v = t.total;\n          return `${v}`;\n        } else {\n          const iformula = simplify(t.roll.formula);\n          const isSingleTerm = Roll.defaultImplementation.parse(iformula).length === 1;\n          if (isSingleTerm) return iformula;\n          else return `(${iformula})`;\n        }\n      }\n      return t.formula;\n    })\n    .join(\"\");\n\n  const roll = new Roll.defaultImplementation(formula);\n\n  // Evaluate\n  try {\n    roll.evaluateSync({ minimize: true });\n  } catch (err) {\n    if (strict) throw err;\n    else return compress(formula);\n  }\n\n  // Old evaluation, fails with parenthetical terms followed by d6 or the like\n  //terms.forEach((term) => term.evaluateSync({ minimize: true }));\n  let terms = replaceZeroDice(roll.terms);\n\n  // Negatives (combine - with the following term)\n  terms = negativeTerms(terms);\n\n  // PEMDAS\n  // Foundry doesn't support juxtaposition so it's not handled here\n\n  // Exponents\n  terms = triTermOps(terms, [\"**\"]);\n  // Multiply/Divide\n  terms = triTermOps(terms, [\"/\", \"*\"]);\n  // Conditionals\n  terms = triTermOps(terms, [\"==\", \"===\", \">\", \">=\", \"<\", \"<=\", \"!=\", \"!==\"]);\n  // Plus/Minus\n  terms = triTermOps(terms, [\"+\", \"-\"], true);\n  // String terms\n  terms = stringTerms(terms);\n\n  // Make final pass\n  const final = new FormulaPart(terms, undefined, false);\n\n  return final.formula.replace(/ \\+ 0\\b/g, \"\");\n}\n\n/**\n * Get action's damage formula.\n *\n * @internal\n * @param {ItemAction} action - Action\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simplify] - Simplify and compress the resulting formula before returning.\n * @param {boolean} [options.strict] - Strict option to pass to {@link pf1.utils.formula.simplify simplify}.\n * @returns {string} - Damage string\n */\nexport function actionDamage(action, { simplify = true, strict = true } = {}) {\n  const actor = action.actor,\n    item = action.item,\n    actorData = actor?.system;\n\n  const parts = [];\n\n  const lazy = {\n    get rollData() {\n      this._cache ??= action.getRollData();\n      return this._cache;\n    },\n  };\n\n  const handleFormula = (formula, change) => {\n    try {\n      switch (typeof formula) {\n        case \"string\": {\n          // Ensure @item.level and similar gets parsed correctly\n          const rd = formula.indexOf(\"@\") >= 0 ? (change?.parent?.getRollData() ?? lazy.rollData) : {};\n          if (formula != 0) {\n            const newformula = pf1.utils.formula.simplify(formula, rd, { strict });\n            if (newformula != 0) parts.push(newformula);\n          }\n          break;\n        }\n        case \"number\":\n          if (formula != 0) parts.push(`${formula}`);\n          break;\n      }\n    } catch (err) {\n      console.error(`Action damage formula parsing error with \"${formula}\"`, err, \"\\n\", { action, change });\n      parts.push(\"NaN\");\n    }\n  };\n\n  const handleParts = (parts) => parts.forEach(({ formula }) => handleFormula(formula));\n\n  // Normal damage parts\n  handleParts(action.damage.parts);\n\n  const isNatural = action.item.subType === \"natural\";\n\n  // Include ability score only if the string isn't too long yet\n  const dmgAbl = action.ability.damage;\n  if (dmgAbl) {\n    const ablMax = action.ability?.max ?? Infinity;\n    const dmgAblBaseMod = Math.min(actorData?.abilities?.[dmgAbl]?.mod ?? 0, ablMax);\n    const held = action.held || item?.system.held || \"1h\";\n    let ablDmgMult =\n      action.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    if (isNatural && !(action.naturalAttack?.primary ?? true)) {\n      ablDmgMult = action.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n    if (dmgAblMod != 0) parts.push(dmgAblMod);\n  }\n\n  // Include damage parts that don't happen on crits\n  handleParts(action.damage.nonCritParts);\n\n  // Include general sources. Item enhancement bonus is among these.\n  action.allDamageSources.forEach((s) => handleFormula(s.formula, s));\n\n  // Something probably went wrong\n  // Early exit from invalid formulas\n  if (parts.length === 0 || parts.some((p) => p === \"NaN\")) {\n    console.warn(\"Action damage resulted in invalid formula:\", parts.join(\" + \"), action);\n    return \"NaN\";\n  }\n\n  const semiFinal = pf1.utils.formula.compress(parts.join(\"+\"));\n  if (!simplify) return semiFinal;\n\n  // Simplification turns 1d12+1d8+6-8+3-2 into 1d12+1d8-1\n  try {\n    const rollData = semiFinal.indexOf(\"@\") >= 0 ? lazy.rollData : undefined;\n    const final = pf1.utils.formula.simplify(semiFinal, rollData, { strict });\n    return pf1.utils.formula.compress(final);\n  } catch (err) {\n    console.error(\"Invalid action damage formula:\", parts.join(\" + \"), action, err);\n    return \"NaN\";\n  }\n}\n","/**\n * Returns the result of a roll of die, which changes based on different sizes.\n *\n * Applies size change damage progression as per Paizo's FAQ entry for it.\n *\n * @see https://paizo.com/paizo/faq/v5748nruor1fm#v5748eaic9t3f\n *\n * @param {number} origCount - The original number of die to roll.\n * @param {number} origSides - The original number of sides per die to roll.\n * @param {string|number} [targetSize=\"M\"] - The target size to change the die to.\n *   Can be a string of values \"F\", \"D\", \"T\", \"S\", \"M\", \"L\", \"H\", \"G\" or \"C\" for the different sizes.\n *   Can also be a number in the range of 0 to 8, where 4 is Medium.\n * @param {string|number} [initialSize=\"M\"] - The initial size of the creature. See targetSize above.\n * @returns {Die[]|NumericTerm[]} The resulting roll.\n */\nexport function sizeRoll(origCount, origSides, targetSize = \"M\", initialSize = \"M\") {\n  // Return NaN from invalid input\n  if (!Number.isFinite(origCount) || !Number.isFinite(origSides)) {\n    return [new foundry.dice.terms.NumericTerm({ number: NaN })];\n  }\n\n  const _getSizeIndex = (size) => {\n    if (typeof size === \"string\") return Object.values(pf1.config.sizeChart).indexOf(size.toUpperCase());\n    return size;\n  };\n\n  targetSize = _getSizeIndex(targetSize);\n  initialSize = _getSizeIndex(initialSize);\n\n  // Do no conversion if no size change is occurring\n  if (targetSize === initialSize) {\n    // Special case for 1d1\n    if (origCount === 1 && origSides === 1) return [new foundry.dice.terms.NumericTerm({ number: 1 })];\n    return [new foundry.dice.terms.Die({ number: origCount, faces: origSides })];\n  }\n\n  // Special rules\n  // \"If the die type is not referenced on this chart\"\n  if (origCount > 1) {\n    // D10\n    if (origSides === 10) {\n      if (targetSize < initialSize) {\n        initialSize--;\n      } else {\n        origCount *= 2;\n        initialSize++;\n      }\n      origSides = 8;\n    }\n    // D4\n    else if (origSides === 4) {\n      // 2d4=1d8, 3d4=2d6, 4d4=2d8, 5d4=3d6, 6d4=3d8, etc...\n      origSides = origCount % 2 == 0 ? 8 : 6;\n      origCount = Math.floor((origCount + 1) / 2);\n    }\n  }\n\n  // D12\n  // Each d12 counts as 2d6\n  if (origSides === 12) {\n    origCount *= 2;\n    origSides = 6;\n  }\n\n  // Get initial die type\n  let currentDie = `${origCount}d${origSides}`;\n  const c = pf1.config.sizeDie;\n\n  // \"If the exact number of original dice is not found on this chart...\"\n  if (c.indexOf(currentDie) === -1 && [6, 8].includes(origSides)) {\n    // Xd6: \"find the next lowest number of d6 on the chart and use that number of d8 as the original damage value\"\n    let shifted;\n    const fc = c.map((d) => d.split(\"d\").map((n) => Number(n)));\n    if (origSides === 6) {\n      shifted = fc.filter(([c, s]) => c < origCount && s === origSides).at(-1);\n    }\n    // Xd8: \"find the next highest number of d8 on the chart and use that number of d6 as the original damage value\"\n    else if (origSides === 8) {\n      shifted = fc.filter(([c, s]) => c > origCount && s === origSides).at(0);\n    } else {\n      // Paizo has not provided instructions how to resolve this\n    }\n\n    if (shifted) {\n      const [count, sides] = shifted;\n      // Swap d6 to d8 and vice versa\n      const newSides = sides === 6 ? 8 : 6;\n      currentDie = `${count}d${newSides}`;\n    }\n  }\n\n  // Pick an index from the chart\n  let index = c.indexOf(currentDie);\n  if (index === -1 && currentDie === \"1d1\") index = 0;\n  let formula = currentDie;\n  // If found, shift size\n  if (index >= 0) {\n    const d6Index = c.indexOf(\"1d6\");\n    const d8Index = c.indexOf(\"1d8\");\n    let sizeOffset = initialSize - targetSize;\n    let curSize = initialSize;\n\n    // When decreasing in size (e.g. from medium to small)\n    while (sizeOffset > 0) {\n      if (curSize <= 4 || index <= d8Index) {\n        index--;\n        sizeOffset--;\n        curSize--;\n      } else {\n        index -= 2;\n        sizeOffset--;\n        curSize--;\n      }\n    }\n    // When increasing in size (e.g. from medium to large)\n    while (sizeOffset < 0) {\n      if (curSize <= 3 || index <= d6Index) {\n        index++;\n        sizeOffset++;\n        curSize++;\n      } else {\n        index += 2;\n        sizeOffset++;\n        curSize++;\n      }\n    }\n\n    index = Math.max(0, Math.min(c.length - 1, index));\n    formula = c[index];\n  }\n\n  if (index === -1) {\n    ui.notifications.warn(game.i18n.format(\"PF1.Warning.NoSizeDie\", { fallback: currentDie, formula }));\n  }\n\n  const [number, faces] = formula.split(\"d\").map((n) => parseInt(n));\n  if (!faces || (number === 1 && faces === 1)) {\n    return [new foundry.dice.terms.NumericTerm({ number })];\n  }\n  return [new foundry.dice.terms.Die({ number, faces })];\n}\n\n/**\n * `sizeReach()` roll function handler.\n *\n * Return reach information for defined size and stature.\n *\n * @param {string|number} [size=\"M\"] {@link pf1.config.sizeChart} key or offset\n * @param {boolean} [reach=false] Reach weapon\n * @param {\"tall\"|\"long\"} [stature=\"tall\"] Character stature\n * @returns {number} -\n */\nexport const sizeReach = (size = \"M\", reach = false, stature = \"tall\") => {\n  if (typeof size === \"number\") size = Object.values(pf1.config.sizeChart)[size];\n  size = Object.entries(pf1.config.sizeChart).find((o) => o[1] === size)[0];\n\n  return pf1.documents.actor.ActorPF.getReach(size, stature)[reach ? \"reach\" : \"melee\"];\n};\n\n/**\n * `sizeRoll()` roll function handler.\n *\n * @internal\n * @param {number} count - Number of dice\n * @param {number} sides - Number of sides\n * @param {number|string} target - Target size\n * @param {number|string} initial - Initial size\n * @returns {number} - Ignore. Placeholder number.\n */\nfunction sizeRollFn(count, sides, target, initial) {\n  /** @type {Die[]|NumericTerm[]} */\n  const [rt] = sizeRoll(count, sides, target, initial);\n\n  this.terms.push(rt.formula);\n\n  if (rt instanceof foundry.dice.terms.Die) {\n    const roll = Roll.defaultImplementation.fromTerms([rt]);\n    roll.options.final = true;\n    this.rolls.push(roll);\n    return 0; // The roll can not be evaluated here due to lacking eval opts.\n  }\n  // NumericTerm\n  else {\n    return rt.number;\n  }\n}\n\n/**\n * `if-else` roll function\n *\n * Syntax:\n * ifelse(condition, if-true, if-else)\n *\n * @example\n * ```txt\n * ifelse(@powerAttackPenalty, 4, 0)\n * ```\n *\n * @param {*} condition - Condition\n * @param {*} ifTrue - Result if condition is true\n * @param {*} ifFalse - Result if condition is false\n * @returns {number} - Result\n */\nfunction ifelse(condition, ifTrue, ifFalse) {\n  return condition ? ifTrue : ifFalse;\n}\n\n/**\n * `if` roll function\n *\n * Alias for ifelse() with last parameter defaulting to 0.\n *\n * @param {*} condition - Condition\n * @param {*} ifTrue - Result if condition is true\n * @returns {number} - Result\n */\nfunction _if(condition, ifTrue) {\n  return ifelse(condition, ifTrue, 0);\n}\n\n/**\n * `lookup` roll function\n *\n * Syntax:\n * lookup(condition, fallback, ...results)\n *\n * @example\n * ```txt\n * lookup(1d4, 0, 4, 3, 2, 1)\n * lookup(@cl, 0, 3, 2, 1)\n * ```\n *\n * @param {number} condition - Condition\n * @param {number} fallback - Fallback if the condition goes out of range\n * @param  {...any} results - Potential results\n * @returns {number} - Result\n */\nfunction lookup(condition, fallback, ...results) {\n  // TODO: mark die terms disabled that are not in the end result\n  return results[condition - 1] ?? fallback;\n}\n\n/**\n * Roll functions\n *\n * @example\n * ```js\n * eq(a,b) // equal (a === b)\n * ne(a,b) // not equal (a !== b)\n * lt(a,b) // less than (a < b)\n * lte(a,b) // less than or equal (a <= b)\n * gt(a,b) // greater than (a > b)\n * gte(a,b) // greater than or equal (a >= b)\n * and(a, b, ...) // all true\n * or(a, b, ...) // some true\n * xor(a, b, ...) // one true\n * not(a) // not (!a)\n * ```\n */\nexport const functions = {\n  sizeRoll: sizeRollFn,\n  sizeReach,\n  lookup,\n  ifelse,\n  if: _if,\n  eq: (a, b) => (a === b ? 1 : 0),\n  ne: (a, b) => (a !== b ? 1 : 0),\n  lt: (a, b) => (a < b ? 1 : 0),\n  lte: (a, b) => (a <= b ? 1 : 0),\n  gt: (a, b) => (a > b ? 1 : 0),\n  gte: (a, b) => (a >= b ? 1 : 0),\n  and: (...args) => (args.every((a) => !!a) ? 1 : 0),\n  or: (...args) => (args.some((a) => !!a) ? 1 : 0),\n  xor: (...args) => (args.filter((a) => !!a).length == 1 ? 1 : 0),\n  not: (a) => !a,\n};\n","/**\n * Initialize `CONFIG.statusEffects`\n *\n * @returns {Array<object>} - Status effects array\n */\nexport function getConditions() {\n  const core = CONFIG.statusEffects.filter((c) => c.id !== \"dead\");\n  let sys = pf1.registry.conditions.map((condition) => {\n    const status = condition.toStatusEffect();\n\n    // Copy of Foundry's deprecation code\n    for (const [oldKey, newKey] of Object.entries({ label: \"name\", icon: \"img\" })) {\n      const msg = `StatusEffectConfig#${oldKey} has been deprecated in favor of StatusEffectConfig#${newKey}`;\n      Object.defineProperty(status, oldKey, {\n        get() {\n          foundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n          return this[newKey];\n        },\n        set(value) {\n          foundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n          this[newKey] = value;\n        },\n        enumerable: false,\n        configurable: true,\n      });\n    }\n\n    return status;\n  });\n\n  if (game.settings.get(\"pf1\", \"coreEffects\")) sys.push(...core);\n\n  sys.sort((a, b) => a.name.localeCompare(b.name));\n\n  const deadCond = sys.findSplice((c) => c.id === \"dead\");\n  sys = [deadCond, ...sys];\n\n  return sys;\n}\n","/**\n * Add static helper data to roll data.\n *\n * Static data:\n * - `@step`: 5 (represents single step which is always 5 internally, even if it can be 1.5m in the final result)\n *\n * @param {object} rollData - Roll data to modify\n */\nexport function addStatic(rollData) {\n  rollData.step = 5;\n}\n","/**\n * Convert string array into joined string according to current language.\n *\n * @param {Array<string>} strings - Array of strings to join\n * @param {\"c\"|\"d\"|\"u\"} type - conjunction = and, disjunction = or, unit = neither. Only the first letter matters.\n * @param {boolean} short - If true, effectively same as type being set to \"u\"\n * @returns {string} - Formatted string of all traits.\n */\nexport function join(strings, type = \"u\", short = true) {\n  type = {\n    c: \"conjunction\",\n    d: \"disjunction\",\n    u: \"unit\",\n  }[type[0]];\n\n  return new Intl.ListFormat(game.i18n.lang, { style: short ? \"short\" : \"long\", type }).format(strings);\n}\n\nexport const numberFormat = new Intl.NumberFormat(undefined).format;\n","/**\n * Fetch mapping of class identifier to class name.\n *\n * @returns {Record<string,string>}\n */\nexport async function getClassIDMap() {\n  if (this.classIDMap) return this.classIDMap;\n\n  const packTypePriority = {\n    world: 4_000,\n    module: 3_000,\n    system: 2_000,\n  };\n\n  // Sort packs by above criteria, higher priority last so they override earlier entries\n  let packs = [...game.packs]\n    .map((p) => ({\n      pack: p,\n      visible: p.visible ?? true,\n      disabled: p.config.pf1?.disabled ?? false,\n      sort: packTypePriority[p.metadata.packageType],\n    }))\n    .filter((p) => !p.disabled && p.visible && p.pack.metadata.type === \"Item\")\n    .sort((a, b) => a.sort - b.sort);\n\n  await Promise.all(packs.map((p) => p.pack.getIndex({ fields: [\"system.tag\", \"system.subType\"] })));\n\n  // Only take packs with Just classes, assume first item being class is good enough for this\n  packs = packs.filter((p) => p.pack.index.size > 0 && [...p.pack.index][0]?.type === \"class\");\n\n  const classes = {};\n\n  for (const { pack } of packs) {\n    for (const entry of pack.index) {\n      if (entry.system?.subType && ![\"base\", \"npc\"].includes(entry.system?.subType)) continue;\n\n      const tag = entry.system?.tag;\n      if (!tag) continue;\n\n      classes[tag] = entry.name;\n    }\n  }\n\n  this.classIDMap = classes;\n  return classes;\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { HandlebarsApplicationMixin, ApplicationV2 } = foundry.applications.api;\n\n/**\n * Party Rest Configuration Dialog\n */\nexport class PartyRestConfig extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  constructor(config, options) {\n    super(options);\n\n    config.hours ??= null;\n    this.restConfig = config;\n\n    this.constructor._prepareActors(config);\n\n    this.constructor._calculateHours(config, config.hours === null);\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"party-rest\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.XPDistributor.Title\",\n      minimizable: false,\n      resizable: true,\n    },\n    actions: {\n      rest: this._onRest,\n      toggle: this._onToggleCategory,\n      sheet: { handler: this._onOpenSheet, buttons: [2] }, // 2: Context menu\n    },\n    position: {\n      width: 500,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/party-rest.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  static _prepareActors(config) {\n    const { longTermCare, restoreHealth, restoreUses, restOptions } = config;\n\n    config.actors = config.actors\n      .map((a) => {\n        if ([\"haunt\", \"vehicle\", \"trap\"].includes(a.type)) return null;\n\n        const conscious = this._isConscious(a);\n        return {\n          name: a.token?.name || a.name,\n          img: a.token?.img || a.prototypeToken?.texture?.src || a.img,\n          uuid: a.uuid,\n          conscious,\n          watch: conscious,\n          options: {\n            ...restOptions,\n            longTermCare,\n            restoreHealth,\n            restoreUses,\n          },\n        };\n      })\n      .filter((a) => !!a);\n  }\n\n  static _isConscious(actor) {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHpConfig = hpConfig.getActorConfig(this.actor);\n\n    const vigor = actorHpConfig.rules.useWoundsAndVigor;\n\n    // TODO: Wounds & Vigor\n    if (vigor) {\n      const hp = actor.system.attributes.wounds;\n      return hp.value >= hp.threshold;\n    }\n    // normal health\n    else {\n      const hp = actor.system.attributes.hp;\n      return hp.value + hp.temp >= 0;\n    }\n  }\n\n  static _calculateHours(config, updateTime = true) {\n    const nowatch = config.watches === \"none\";\n    const duo = config.watches === \"duo\";\n    const solo = !duo;\n\n    // Count watchers and pretend zero watchers results in math related to single person sleeping\n    const active = nowatch ? 1 : Math.max(1, config.actors.filter((a) => a.watch).length);\n\n    const cfg = pf1.config.partyRest[active] ?? Object.values(pf1.config.partyRest).at(-1);\n\n    let hours = config.hours;\n    // Skip time update if it was manually adjusted\n    if (updateTime) {\n      if (solo) hours = cfg.hours;\n      else hours = cfg.double ?? cfg.hours;\n      config.hours = hours;\n    }\n\n    // Set time needed per watch\n    if (active > 1) {\n      const watchTime = Math.clamp(hours, 0, 24);\n      config.watchTime = watchTime / (solo ? active : Math.floor(active / 2));\n    } else {\n      config.watchTime = 0;\n    }\n\n    // Check if double watches are available for this group with this many watchers\n    config.duo = cfg.double ?? false;\n    if (!config.duo && duo) config.watches = \"solo\";\n  }\n\n  get title() {\n    return game.i18n.localize(\"PF1.Application.PartyRest.Title\");\n  }\n\n  /** @override */\n  _prepareContext() {\n    const config = this.restConfig;\n\n    return {\n      id: this.id,\n      ...config,\n      buttons: [\n        {\n          type: \"button\",\n          label: \"PF1.Rest\",\n          icon: \"fa-solid fa-bed\",\n          action: \"rest\",\n        },\n      ],\n    };\n  }\n\n  /**\n   * Toggle rest category for all participants.\n   *\n   * @param {Event} event - Click event\n   * @param {Element} el - Clicked element\n   */\n  static _onToggleCategory(event, el) {\n    const config = this.restConfig;\n\n    const toggle = el.dataset.toggle;\n    const isWatch = toggle === \"watch\";\n    const state = config.actors.some((a) => (isWatch ? !a.watch : !a.options[toggle]));\n    config.actors.forEach((a) => {\n      if (isWatch) a.watch = state;\n      else a.options[toggle] = state;\n    });\n\n    if (isWatch) this.constructor._calculateHours(config);\n\n    this.render();\n  }\n\n  /**\n   * Rest button handler\n   *\n   * @param {Event} event - Click event\n   * @param {Element} _el - Clicked element\n   */\n  static async _onRest(event, _el) {\n    event.pf1NoRender = true;\n\n    // Ensure current state is submitted\n    await this._onSubmitForm(this.options.form, event);\n\n    const config = this.restConfig;\n\n    // Disable inputs\n    const content = this.element.querySelector(\".window-content\");\n    content.classList.add(\"resting\");\n    for (const el of content.querySelectorAll(\"input,button\")) {\n      el.disabled = true;\n    }\n\n    const rv = await this.constructor._performRest(config);\n    if (rv !== false) {\n      ui.notifications.info(\n        game.i18n.format(\"PF1.Application.PartyRest.Rested\", {\n          people: config.actors.length,\n          hours: pf1.utils.limitPrecision(config.hours, 1),\n        })\n      );\n    } else {\n      config.cancelled = true;\n    }\n    this.resolve(config);\n    this.close();\n  }\n\n  /**\n   * Perform rest on each individual actor\n   *\n   * @internal\n   * @param {object} config - Rest configuration\n   * @returns {Promise<boolean|void>} - False if cancelled, nothing otherwise.\n   */\n  static async _performRest(config) {\n    if (Hooks.call(\"pf1PrePartyRest\", config) === false) return false;\n\n    const { actors, hours } = config;\n\n    const promises = [];\n    for (const actorData of actors) {\n      const { restoreHealth, restoreUses, longTermCare, ...options } = actorData.options;\n      const actor = fromUuidSync(actorData.uuid);\n      if (!actor) continue;\n      const p = actor.performRest({ ...options, restoreHealth, restoreDailyUses: restoreUses, longTermCare });\n      promises.push(p);\n    }\n\n    await Promise.allSettled(promises);\n\n    if (hours > 0 && game.user.isGM) await game.time.advance(Math.floor(hours * 3_600));\n\n    Hooks.callAll(\"pf1PartyRest\", config);\n  }\n\n  /**\n   * @param {Event} event - Triggering event\n   * @param {Element} form - Form element\n   * @param {FormDataExtended} formData - Form data\n   */\n  static _onSubmit(event, form, formData) {\n    const config = this.restConfig;\n\n    formData = foundry.utils.expandObject(formData.object);\n    formData.actors = Object.values(formData.actors).map((a, idx) => foundry.utils.mergeObject(config.actors[idx], a));\n    foundry.utils.mergeObject(config, formData);\n\n    this.constructor._calculateHours(config, event.target.name !== \"hours\");\n\n    if (event.pf1NoRender !== true) this.render();\n  }\n\n  /**\n   * @override\n   */\n  close(...args) {\n    super.close(...args);\n    this.resolve(null);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   * @param {Element} target - Target element\n   */\n  static _onOpenSheet(event, target) {\n    fromUuidSync(target.dataset.actorUuid).sheet.render(true);\n  }\n\n  static async quickRest({\n    actors = [],\n    hours,\n    restoreUses = true,\n    restoreHealth = true,\n    longTermCare = true,\n    restOptions = {},\n    watches = \"none\",\n  } = {}) {\n    const config = { actors, hours, restoreUses, restoreHealth, longTermCare, restOptions, watches };\n\n    this._prepareActors(config);\n\n    this._calculateHours(config, hours === undefined);\n\n    await this._performRest(config);\n\n    return config;\n  }\n\n  static async open(options) {\n    return new Promise((resolve) => {\n      const rd = new PartyRestConfig(options);\n      rd.resolve = resolve;\n      rd.render(true, { focus: true });\n    });\n  }\n}\n\n/**\n * Rest Party\n *\n * Time is passed if used by the GM.\n *\n * @param {options} options - Additional options\n * @param {Actor[]} options.actors - Actors to rest\n * @param {boolean} [options.watches=true] - People keep watch shifts.\n * @param {number} [options.hours=null] - How many hours to rest.\n * @param {boolean} [options.restoreHealth] - Restore health\n * @param {boolean} [options.restoreUses] - Restore daily uses\n * @param {boolean} [options.longTermCare] - Apply long term care\n * @param {object} [options.restOptions] - Additional options to pass to {@link ActorPF.performRest}\n * @returns {object|null} - Object with configuration resting was performed with, null if cancelled.\n */\nexport async function rest({\n  actors = [],\n  watches = true,\n  hours = null,\n  restoreHealth = true,\n  restoreUses = true,\n  longTermCare = false,\n  skipDialog = false,\n  restOptions = {},\n} = {}) {\n  actors = actors.filter((a) => a instanceof Actor && a.isOwner);\n  if (actors.length == 0) throw new Error(\"No valid actors chosen to rest\");\n\n  if (typeof watches === \"boolean\") watches = watches ? \"solo\" : \"none\";\n\n  if (skipDialog) {\n    return PartyRestConfig.quickRest({ actors, hours, restoreUses, restoreHealth, longTermCare, restOptions });\n  } else {\n    return PartyRestConfig.open({ actors, watches, hours, restoreUses, restoreHealth, longTermCare, restOptions });\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Creates a tag from a string.\n *\n * @example\n * ```js\n * pf1.utils.createTag(\"Wizard of Oz 2\"); // => \"wizardOfOz2\"\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false}); // => wizardofoz2\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false,allowUpperCase:true}); // => WizardofOz2\n * pf1.utils.createTag(\"d'Artagnan\"); // => dartagnan\n * pf1.utils.createTag(\"d'Artagnan\", {allowUpperCase:true}); // => dArtagnan\n * ```\n *\n * @param {string} str - String to convert\n * @param {object} [options] - Additional options\n * @param {boolean} [options.allowUpperCase=false] - Do not forcibly lowercase everything.\n * @param {boolean} [options.camelCase=true] - Automatic camel case\n * @param {string | Function} [options.replacement=\"\"] - Replacement for disallowed characters.\n * @param {boolean} [options.allowInitialNumbers=false] - If false, number prefix is removed.\n * @param {boolean} [options.allowUnderScore=true] - If false, underscore is removed.\n * @returns {string} - String suitable as a tag\n */\nexport function createTag(\n  str,\n  {\n    allowUpperCase = false,\n    camelCase = true,\n    replacement = \"\",\n    allowInitialNumbers = false,\n    allowUnderScore = true,\n  } = {}\n) {\n  if (!str) return \"\";\n\n  str = str\n    .normalize(\"NFD\") // Normalize\n    .replace(/\\p{Diacritic}/gu, \"\") // Remove diacritics\n    .replace(/[^a-zA-Z0-9_\\s]/g, replacement) // Replace remaining non-latin letters\n    // Camel case and such\n    .split(/\\s+/)\n    .map((s, a) => {\n      if (!allowUpperCase) s = s.toLowerCase();\n      if (a > 0 && camelCase) s = s.substring(0, 1).toUpperCase() + s.substring(1);\n      return s;\n    })\n    .join(\"\");\n\n  if (!allowUnderScore) str = str.replaceAll(\"_\", \"\");\n\n  // Remove number prefix\n  if (!allowInitialNumbers) str = str.replace(/^\\d+/, \"\");\n\n  return str;\n}\n\n/**\n * Turn some fractional numbers into pretty strings.\n *\n * @remarks\n * - Only supports the following fractions: 1/4, 1/3, 1/2, 2/3, 3/4\n *\n * @param {number} n - Number to transform\n * @returns {string} - Representation of the fraction\n */\nexport const fractionalToString = (n) => {\n  const base = Math.floor(n);\n  const f = pf1.utils.limitPrecision(n - base, 3, \"round\");\n  if (f === 0) return `${base}`;\n  const rv = [];\n  if (base !== 0) rv.push(base);\n  if (f === 0.25) rv.push(\"1/4\");\n  else if (f === 0.333) rv.push(\"1/3\");\n  else if (f === 0.5) rv.push(\"1/2\");\n  else if (f === 0.667) rv.push(\"2/3\");\n  else if (f === 0.75) rv.push(\"3/4\");\n  return rv.join(\" \");\n};\n\n/**\n * Challenge Rating helper functions.\n */\nexport class CR {\n  /**\n   * Parse CR string to produce a numeric representation\n   *\n   * Parses 1/8, 1/6, 1/4, 1/3, and 1/2 as exact decimals. Everything else is treated as regular number string and passed through parseFloat().\n   *\n   * @param {string} value - String to transform\n   * @returns {number} - Transformed number\n   */\n  static fromString(value) {\n    if (value === \"1/8\") return 0.125;\n    if (value === \"1/6\") return 0.1625;\n    if (value === \"1/4\") return 0.25;\n    if (value === \"1/3\") return 0.3375;\n    if (value === \"1/2\") return 0.5;\n    return parseFloat(value);\n  }\n\n  /**\n   * Convert number to string representation.\n   *\n   * @param {number} value - Number to transform\n   * @returns {string} - String representation\n   */\n  static fromNumber(value = 0) {\n    if (value === 0.125) return \"1/8\";\n    if (value === 0.1625) return \"1/6\";\n    if (value === 0.25) return \"1/4\";\n    if (value === 0.3375) return \"1/3\";\n    if (value === 0.5) return \"1/2\";\n    if (!Number.isNumeric(value)) return \"0\";\n    return value?.toString() ?? \"\";\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  static getXP(cr) {\n    if (cr < 1.0) return Math.floor(Math.max(400 * cr, 0));\n    return pf1.config.CR_EXP_LEVELS[cr] || null;\n  }\n}\n\n/**\n * Converts feet to what the world is using as a measurement unit.\n *\n * @example\n * With metric enabled\n * ```js\n * pf1.utils.convertDistance(30); // => [9, \"m\"]\n * ```\n *\n * @param {number} value - The value (in feet) to convert.\n * @param {\"ft\"|\"mi\"} type - The original type to convert from. Either 'ft' (feet, default) or 'mi' (miles, in which case the result is in km (metric))\n * @returns {[range:number, unit:string]} An array containing the converted value in index 0 and the new unit key in index 1 (for use in {@link pf1.config.measureUnits}, for example)\n */\nexport const convertDistance = (value, type = \"ft\") => {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round(value * 1.6 * 100) / 100, \"km\"];\n        default:\n          return [Math.round((value / 5) * 1.5 * 100) / 100, \"m\"];\n      }\n    default:\n      if (![\"ft\", \"mi\"].includes(type)) type = \"ft\";\n      return [value, type];\n  }\n};\n\n/**\n * Simplify range value to something more humanly readable but not necessarily precise\n *\n * @param {number} range\n * @param {string} type\n * @returns {[range:number, unit:string]} - Tuple of new range and unit\n */\nexport function simplifyRange(range, type = \"ft\") {\n  switch (type) {\n    case \"km\":\n      if (range < 0.8) return [Math.floor(range * 1_000), \"m\"];\n      break;\n    case \"m\":\n      if (range % 1_000 === 0) return [Math.floor(range / 1000), \"km\"];\n      if (range > 800) return [limitPrecision(range / 1000, 2), \"km\"];\n      break;\n    case \"mi\":\n      if (range < 0.3) return [Math.floor(range * 5_280), \"ft\"];\n      break;\n    case \"ft\":\n      if (range % 5_280 === 0) return [Math.floor(range / 5_280), \"mi\"];\n      if (range > 2000) return [limitPrecision(range / 5_280, 2), \"mi\"];\n      break;\n  }\n\n  return [range, type];\n}\n\n/**\n * Converts what the world is using as a measurement unit to feet.\n *\n * @param {number} value - The value (in the world's measurement unit) to convert back.\n * @param {string} type - The target type to convert back to. Either 'ft' (feet, default) or 'mi' (miles, in which case the expected given value should be in km (metric))\n * @returns {number} The resulting value.\n */\nexport const convertDistanceBack = (value, type = \"ft\") => {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round((value / 1.6) * 100) / 100, \"mi\"];\n        default:\n          return [Math.round(((value * 5) / 1.5) * 100) / 100, \"ft\"];\n      }\n    default:\n      return [value, type];\n  }\n};\n\n/**\n * Convert feet or meters distance to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapDistance(30, \"ft\"); // => 9\n * pf1.utils.swapDistance(9, \"m\"); // => 30\n * ```\n * @param {number} value - Feet or meters\n * @param {\"ft\"|\"m\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Feet or meters, opposite of what set type was\n */\nexport function swapDistance(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"ft\":\n      return Math.round(((value * 100) / 5) * 1.5) / 100; // to meters\n    case \"m\":\n      return Math.round(((value * 100) / 1.5) * 5) / 100; // to feet\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Convert pounds or kilograms weight to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapWeight(5, \"kg\"); // => 10\n * pf1.utils.swapWeight(10, \"lbs\"); // => 5\n * ```\n * @param {number} value - Pounds or kilos\n * @param {\"kg\"|\"lbs\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Pounds or kilos, opposite of what set type was\n */\nexport function swapWeight(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"kg\":\n      return value * 2; // to lbs\n    case \"lbs\":\n      return value / 2; // to kg\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Calculate overland speed per hour\n *\n * @see {@link https://www.aonprd.com/Rules.aspx?Name=Movement&Category=Exploration Exploration Movement rules}\n *\n * @example\n * With metric metric enabled\n * ```js\n * overlandSpeed(9); // => {speed:6, unit:'km'}\n * ```\n * With imperial\n * ```js\n * overlandSpeed(40); // => {speed:4, unit:'mi'}\n * ```\n *\n * @param {number} speed - Tactical speed\n * @returns {{speed:number,unit:string}} - Object with overland speed and unit.\n */\nexport function overlandSpeed(speed) {\n  const system = getDistanceSystem();\n  const variant = system === \"metric\" ? game.settings.get(\"pf1\", \"overlandMetricVariant\") : \"default\";\n  const { per, out, unit } = pf1.config.overlandSpeed[system][variant];\n\n  return { speed: (speed / per) * out, unit };\n}\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getDistanceSystem = () => {\n  let system = game.settings.get(\"pf1\", \"distanceUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getWeightSystem = () => {\n  let system = game.settings.get(\"pf1\", \"weightUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @typedef Point\n * @property {number} x X coordinate\n * @param {number} y Y coordinate\n */\n\n/**\n * @typedef MeasureState\n * @param {number} diagonals Number of diagonals passed so far.\n * @param {number} cells Total cells in distance\n */\n\n/**\n * Measure distance between two points.\n *\n * @deprecated\n * @example\n * ```js\n * pf1.utils.measureDistance(token, game.user.targets.first());\n * ```\n * @param {Point} p0 - Start point on canvas\n * @param {Point} p1 - End point on canvas\n * @param {object} [options] - Measuring options.\n * @param {\"5105\"|\"555\"} [options.diagonalRule=\"5105\"] - Used diagonal rule. Defaults to 5/10/5 PF measuring.\n * @param {Ray} [options.ray=null] - Pre-generated ray to use instead of the points.\n * @param {MeasureState} [options.state] - Optional state tracking across multiple measures.\n * @returns {number} - Grid distance between the two points.\n */\nexport const measureDistance = (\n  p0,\n  p1,\n  { ray = null, diagonalRule = \"5105\", state = { diagonals: 0, cells: 0 } } = {}\n) => {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.measureDistance() is deprecated in favor of canvas.grid.measurePath()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n\n  // TODO: Optionally adjust start and end point to closest grid\n  ray ??= new Ray(p0, p1);\n  const gs = canvas.dimensions.size,\n    nx = Math.ceil(Math.abs(ray.dx / gs)),\n    ny = Math.ceil(Math.abs(ray.dy / gs));\n\n  // Get the number of straight and diagonal moves\n  const nDiagonal = Math.min(nx, ny),\n    nStraight = Math.abs(ny - nx);\n\n  state.diagonals += nDiagonal;\n\n  let cells = 0;\n  // Standard Pathfinder diagonals: double distance for every odd.\n  if (diagonalRule === \"5105\") {\n    const nd10 = Math.floor(state.diagonals / 2) - Math.floor((state.diagonals - nDiagonal) / 2);\n    cells = nd10 * 2 + (nDiagonal - nd10) + nStraight;\n  }\n  // Equal distance diagonals\n  else cells = nStraight + nDiagonal;\n\n  state.cells += cells;\n  return cells * canvas.dimensions.distance;\n};\n\n/**\n * Converts lbs to what the world is using as a measurement unit.\n *\n * @param {number} value - The value (in lbs) to convert.\n * @returns {number} The converted value. In the case of the metric system, converts to kg.\n */\nexport const convertWeight = (value) => {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n      return value / 2;\n    default:\n      return value;\n  }\n};\n\n/**\n * Converts back to lbs from what the world is using as a measurement unit.\n *\n * @example\n * With metric enabled\n * ```js\n * pf1.utils.convertWeightBack(10); // => 20\n * ```\n * With default imperial\n * ```js\n * pf1.utils.convertWeightBack(10); // => 10\n * ```\n *\n * @param {number} value - The value to convert back to lbs.\n * @returns {number} The converted value. In the case of the metric system, converts from kg.\n */\nexport const convertWeightBack = (value) => {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      return value * 2; // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n    default:\n      return value;\n  }\n};\n\n/**\n * Sort an array in-place using a language-aware comparison function that can sort by a property key.\n * If no property key is provided, the array is sorted directly.\n *\n * @template T\n * @param {T[]} arr The array to sort\n * @param {string} [propertyKey=\"\"] The property key to sort by, if any; can be a dot-separated path\n * @param {object} [sortOptions] - Options affecting the sorting of elements\n * @param {boolean} sortOptions.numeric - Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\n * @param {boolean} sortOptions.ignorePunctuation - Whether punctuation should be ignored.\n * @returns {T[]} The sorted array\n */\nexport const naturalSort = (arr, propertyKey = \"\", { numeric = true, ignorePunctuation = false } = {}) => {\n  const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), { numeric, ignorePunctuation });\n  return arr.sort((a, b) => {\n    const propA = propertyKey ? (propertyKey in a ? a[propertyKey] : foundry.utils.getProperty(a, propertyKey)) : a;\n    const propB = propertyKey ? (propertyKey in b ? b[propertyKey] : foundry.utils.getProperty(b, propertyKey)) : b;\n    return collator.compare(propA, propB);\n  });\n};\n\n/**\n * Opens journal or journal page.\n *\n * Pages are opened in collapsed state.\n *\n * @param {string} uuid - UUID to journal or journal page\n * @param {object} [options={}] - Additional rendering options\n * @returns {JournalEntry|JournalEntryPage|null} - Opened document\n */\nexport async function openJournal(uuid, options = {}) {\n  const journal = await fromUuid(uuid);\n\n  if (journal instanceof JournalEntryPage) {\n    journal.parent.sheet.render(true, {\n      pageId: journal.id,\n      editable: false,\n      collapsed: true,\n      width: 600,\n      height: 700,\n      ...options,\n    });\n  } else {\n    journal.sheet.render(true, { editable: false, ...options });\n  }\n\n  return journal;\n}\n\n/**\n * A simple binary search to be used on sorted arrays\n *\n * @internal\n * @template T\n * @param {T[]} searchArr - Sorted Array to be searched\n * @param {T} el - Element to be compared to array values\n * @param {function(T, T): number} compare_fn - Comparison function to be apply el to every element in ar. Should return an positive/ negative integer or 0 if matching.\n * @returns {number} Index where search is found or negative index indicating where it would be inserted\n */\nexport const binarySearch = (searchArr, el, compare_fn) => {\n  let m = 0,\n    n = searchArr.length - 1;\n  while (m <= n) {\n    const k = (n + m) >> 1,\n      cmp = compare_fn(el, searchArr[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n};\n\n/**\n * Generate permutations of an array. Complexity is O(n!).\n * Should be safe up to 7, though you should probably consider something else if you're reaching that high often.\n *\n * @internal\n * @template T\n * @param {T[]} perm - The Array to be generated upon\n * @returns {Array.<T[]>|false} An Array containing all Array permutations or false if failed.\n */\nfunction uniquePermutations(perm) {\n  perm = perm.map((p) => p.trim()).filter((p) => p?.length > 0);\n\n  if (perm.length > 7) {\n    console.warn(\"Array too large. Not attempting.\", perm);\n    return false;\n  }\n\n  const total = new Set();\n\n  for (let i = 0; i < perm.length; i = i + 1) {\n    const rest = uniquePermutations(perm.slice(0, i).concat(perm.slice(i + 1)));\n\n    if (!rest.length) {\n      total.add([perm[i]]);\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        total.add([perm[i]].concat(rest[j]));\n      }\n    }\n  }\n  return [...total];\n}\n\n/**\n * Searches through compendia quickly using the system generated index caches.\n * Exact matches excluding punctuation and case are prioritized before searching word order permutations.\n *\n * @param {string} searchTerm - The name of the Document being searched for\n * @param {object} [options] - Provides a filter to limit search to specific packs or Document types\n * @param {string[]} [options.packs] - An array of packs to search in\n * @param {\"Actor\"|\"Item\"|\"Scene\"|\"JournalEntry\"|\"Macro\"|\"RollTable\"|\"Playlist\"} [options.type] - A Document type to limit which packs are searched in\n * @param {string} [options.docType] - Document type, such as \"loot\" or \"npc\"\n * @param {boolean} [options.disabled=false] - Include packs disabled for compendium browser.\n * @returns {{pack: CompendiumCollection, index: object}|false} The index and pack containing it or undefined if no match is found\n */\nexport const findInCompendia = (searchTerm, { packs = [], type, docType, disabled = false } = {}) => {\n  if (packs?.length) packs = packs.flatMap((o) => game.packs.get(o) ?? []);\n  else packs = game.packs.filter((o) => !type || o.metadata.type == type);\n  if (!disabled) packs = packs.filter((o) => o.config?.pf1?.disabled !== true);\n\n  searchTerm = searchTerm.toLocaleLowerCase();\n\n  for (const pack of packs) {\n    if (!pack.fuzzyIndex) pack.fuzzyIndex = pf1.utils.internal.sortArrayByName([...pack.index]);\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    const found = binarySearch(filteredIndex, searchTerm, (sp, it) =>\n      sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n    );\n    if (found > -1) {\n      const entry = pack.index.get(filteredIndex[found]._id);\n      return { pack, index: entry };\n    }\n  }\n\n  let searchMutations = uniquePermutations(searchTerm.split(/[, _-]/));\n  if (searchMutations) searchMutations = searchMutations.map((o) => o.join(\" \"));\n  else {\n    // If array is too long, search for just a reversed version and one that pivots around commas/ semicolons\n    searchMutations = [null];\n    searchMutations.push(searchTerm.split(/[ _-]/).reverse().join(\" \"));\n    searchMutations.push(\n      searchTerm\n        .split(/[,;] ?/)\n        .reverse()\n        .flatMap((o) => o.split(\" \"))\n        .join(\" \")\n    );\n  }\n\n  for (const pack of packs) {\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    // Skip first mutation since it is already searched for manually before computing mutations\n    for (let mut = 1; mut < searchMutations.length; mut++) {\n      const found = binarySearch(filteredIndex, searchMutations[mut], (sp, it) =>\n        sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n      );\n      if (found > -1) {\n        const entry = pack.index.get(filteredIndex[found]._id);\n        if (entry) return { pack, index: entry };\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * enrichHTML but with inline rolls not rolled\n *\n * Exists because core devs refused to have it in Foundry itself: https://github.com/foundryvtt/foundryvtt/issues/10557\n *\n * {@inheritDoc TextEditor.enrichHTML}\n *\n * @experimental - This may be removed without warning.\n * @param {string} content HTML content in string format to be enriched.\n * @param {options} [options] Additional options passed to enrichHTML\n * @param {object} [options.rollData] Roll data object\n * @param {boolean} [options.secrets] Display secrets\n * @param {boolean} [options.rolls=false] Roll inline rolls. If false, the roll formula is shown instead as if /r had been used.\n * @param {boolean} [options.documents] Parse content links\n * @returns {string} - Enriched HTML string\n * Synchronized with Foundry VTT v12.331 & v13.339\n */\nexport async function enrichHTMLUnrolled(\n  content,\n  { secrets, documents, links, embeds, rolls = false, rollData, relativeTo } = {}\n) {\n  let pcontent = await TextEditor.enrichHTML(content, {\n    secrets,\n    documents,\n    links,\n    embeds,\n    rolls,\n    rollData,\n    relativeTo,\n  });\n\n  if (rolls !== true) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = pcontent;\n    const text = TextEditor_getTextNodes(html);\n\n    rollData = rollData instanceof Function ? rollData() : rollData || {};\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    await TextEditor_replaceTextContent(text, rgx, (match) => pf1.utils.internal.createInlineFormula(match, rollData));\n\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Re-implementation of TextEditor##getTextNodes() since v13 made it fully private.\n *\n * Needed by {@link enrichHTMLUnrolled}\n *\n * @param {HTMLElement} parent\n * Synced with v13.339\n */\nfunction TextEditor_getTextNodes(parent) {\n  const text = [];\n  const walk = document.createTreeWalker(parent, NodeFilter.SHOW_TEXT);\n  while (walk.nextNode()) text.push(walk.currentNode);\n  return text;\n}\n\n/**\n * Re-implementation of TextEditor##replaceTextContent() since v13 made it fully private.\n *\n * Needed by {@link enrichHTMLUnrolled}\n *\n * @param text\n * @param rgx\n * @param func\n * @param options\n * Synced with v13.339\n */\nasync function TextEditor_replaceTextContent(text, rgx, func, options = {}) {\n  let replaced = false;\n  for (const t of text) {\n    const matches = t.textContent.matchAll(rgx);\n    for (const match of Array.from(matches).reverse()) {\n      let result;\n      try {\n        result = await func(match);\n      } catch (err) {\n        Hooks.onError(\"TextEditor.enrichHTML\", err, { log: \"error\" });\n      }\n      if (result) {\n        TextEditor_replaceTextNode(t, match, result, options);\n        replaced = true;\n      }\n    }\n  }\n  return replaced;\n}\n\n/**\n * Re-implementation of TextEditor##replaceTextNode() since v13 made it fully private.\n *\n * Needed by {@link TextEditor_replaceTextContent}\n *\n * @param text\n * @param match\n * @param replacement\n * @param options\n * @param options.replaceParent\n * Synced with v13.339\n */\nfunction TextEditor_replaceTextNode(text, match, replacement, { replaceParent = false } = {}) {\n  let target = text;\n  if (match.index > 0) target = text.splitText(match.index);\n  if (match[0].length < target.length) target.splitText(match[0].length);\n  const parent = target.parentElement;\n  if (parent.parentElement && parent.childNodes.length < 2 && replaceParent) parent.replaceWith(replacement);\n  else target.replaceWith(replacement);\n}\n\n/**\n * Resolve range formula to numeric value.\n *\n * @param {string} [formula] Range formula. Only used with \"mi\", \"ft\", \"m\", \"km\" and similar types.\n * @param {\"natural\"|\"melee\"|\"touch\"|\"reach\"|\"close\"|\"medium\"|\"long\"|\"mi\"} [type=\"ft\"] Formula type\n * @param {object} [rollData] Roll data for evaluating the formula\n * @returns {number} Range in feet for the defined formula\n */\nexport const calculateRangeFormula = (formula, type = \"ft\", rollData = {}) => {\n  switch (type) {\n    case \"natural\":\n      return rollData.traits?.reach?.natural?.melee ?? 0;\n    case \"melee\":\n    case \"touch\":\n      return rollData.range?.melee ?? 0;\n    case \"reach\":\n      return rollData.range?.reach ?? 0;\n    case \"close\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.close, rollData).total;\n    case \"medium\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.medium, rollData).total;\n    case \"long\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.long, rollData).total;\n    case \"mi\":\n      return RollPF.safeRollSync(formula, rollData).total * 5_280;\n    case \"m\":\n      return (RollPF.safeRollSync(formula, rollData).total / 1.5) * 5;\n    case \"km\":\n      return ((RollPF.safeRollSync(formula, rollData).total * 1_000) / 1.5) * 5;\n    default:\n      return RollPF.safeRollSync(formula, rollData).total;\n  }\n};\n\n/**\n * Calculates range formula and converts it.\n *\n * Wrapper around {@link calculateRangeFormula} and {@link convertDistance}\n *\n * @example\n * Simple example\n * ```js\n * const [range,unit] = calculateRange(\"@level\", \"mi\", { level:2 });\n * // => range:10560, unit:\"ft\"\n * ```\n *\n * @param {string} formula - Range formula\n * @param {string} type - Type fed to calculateRangeFormula\n * @param {object} rollData - Roll data fed to calculateRangeFormula\n * @returns {[range:number, unit:string]} - Range value and unit tuple\n */\nexport function calculateRange(formula, type = \"ft\", rollData = {}) {\n  const value = calculateRangeFormula(formula, type, rollData);\n  return convertDistance(value, \"ft\");\n}\n\n/**\n * Refreshes all actor data and re-renders sheets.\n *\n * @internal\n * @param {object} [options] - Additional options\n * @param {boolean} [options.renderOnly=false] - If false, actors are reset also.\n * @param {boolean} [options.renderForEveryone=false] - Deprecated. If true, other players are told to re-render, too.\n */\nexport function refreshActors({ renderOnly = false, renderForEveryone = false } = {}) {\n  // Reset base actors\n  if (!renderOnly) {\n    game.actors.forEach((a) => a.reset());\n\n    // Reset unlinked actors in all scenes\n    game.scenes.forEach((scene) =>\n      scene.tokens\n        .filter((t) => t.actor && !t.isLinked)\n        .map((t) => t.actor)\n        .forEach((a) => a.reset())\n    );\n  }\n\n  // Render system sheets. Doesn't matter if this renders more than necessary\n  pf1.utils.renderApplications({ systemOnly: true });\n\n  if (renderForEveryone) {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.utils.refreshActors() renderForEveryone option is deprecated with no replacement.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    game.socket.emit(\"pf1\", \"refreshActorSheets\");\n  }\n}\n\n/**\n * Re-render all open applications. Optionally limiting to just the the system apps.\n *\n * @param {object} [options] - Additional options\n * @param {boolean} [options.systemOnly=false] - Render only system apps.\n * @param {boolean} [options.force] - Force render\n */\nexport async function renderApplications({ systemOnly = false, force } = {}) {\n  const applications = [];\n  for (const app of Object.values(ui.windows)) {\n    if (systemOnly && !app.options.classes.includes(\"pf1\")) continue;\n    applications.push(app);\n  }\n  for (const app of foundry.applications.instances.values()) {\n    if (systemOnly && !app.options.classes.includes(\"pf1-v2\")) continue;\n    applications.push(app);\n  }\n\n  applications.sort((a, b) => a.position.zIndex - b.position.zIndex);\n\n  for (const app of applications) {\n    if (app.minimized) continue;\n    app.render(force, { zIndex: app.position.zIndex });\n  }\n\n  console.debug(\"PF1 |\", applications.length, \"application(s) re-rendered\");\n}\n\n/**\n * Refresh all actor, item and action sheets.\n *\n * @internal\n * @param {object} [options] Additional options\n * @param {boolean} [options.reset=true] Reset underlying document.\n * @param {boolean} [options.actor] Include actor sheets\n * @param {boolean} [options.item] Include item sheets\n * @param {boolean} [options.action] Include action sheets\n */\nexport function refreshSheets({ reset = true, actor = true, item = true, action = true } = {}) {\n  Object.values(ui.windows).forEach((app) => {\n    if (\n      (actor && app instanceof ActorSheet) ||\n      (item && app instanceof ItemSheet) ||\n      (action && app instanceof pf1.applications.component.ItemActionSheet)\n    ) {\n      if (reset && app.object instanceof Document) app.object.reset();\n      app.render();\n    }\n  });\n}\n\n/**\n * Deeply difference an object against some other, returning the update keys and values.\n * Unlike foundry.utils.diffObject, this function also deeply compares arrays.\n *\n * @internal\n * @deprecated - Will be removed with PF1 v12\n * @param {object} original       An object comparing data against which to compare\n * @param {object} other          An object containing potentially different data\n * @param {object} [options={}]   Additional options which configure the diff operation\n * @param {boolean} [options.inner=false]  Only recognize differences in other for keys which also exist in original\n * @param {boolean} [options.keepLength=false]  Keep array length intact, possibly having to insert empty objects\n * @returns {object}               An object of the data in other which differs from that in original\n */\nexport const diffObjectAndArray = (original, other, { inner = false, keepLength = false } = {}) => {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.diffObjectAndArray() is deprecated with no replacement.\", {\n    since: \"PF1 v11\",\n    until: \"PF1 v12\",\n  });\n\n  function _difference(v0, v1) {\n    const t0 = foundry.utils.getType(v0);\n    const t1 = foundry.utils.getType(v1);\n    if (t0 !== t1) return [true, v1];\n    if (t0 === \"Array\") {\n      if (v0.length !== v1.length) return [true, v1];\n      const d = [];\n      for (let a = 0; a < v0.length; a++) {\n        const d2 = diffObjectAndArray(v0[a], v1[a], { inner, keepLength });\n        if (!foundry.utils.isEmpty(d2)) d.push(d2);\n        else if (keepLength) d.push({});\n      }\n      if (d.length > 0) return [true, d];\n      return [false, d];\n    }\n    if (t0 === \"Object\") {\n      if (foundry.utils.isEmpty(v0) !== foundry.utils.isEmpty(v1)) return [true, v1];\n      const d = diffObjectAndArray(v0, v1, { inner, keepLength });\n      return [!foundry.utils.isEmpty(d), d];\n    }\n    return [v0 !== v1, v1];\n  }\n\n  // Recursively call the _difference function\n  return Object.keys(other).reduce((obj, key) => {\n    if (inner && !(key in original)) return obj;\n    const [isDifferent, difference] = _difference(original[key], other[key]);\n    if (isDifferent) obj[key] = difference;\n    return obj;\n  }, {});\n};\n\n/**\n * Determines what ability modifier is appropriate for a given score.\n *\n * @example\n * ```js\n * pf1.utils.getAbilityModifier(15); // => 2\n * pf1.utils.getAbilityModifier(6, { damage: 1 }); // => -2\n * ```\n *\n * @param {number} [score] - The score to find the modifier for.\n * @param {object} [options={}] - Options for this function.\n * @param {number} [options.penalty=0] - A penalty value to take into account.\n * @param {number} [options.damage=0] - Ability score damage to take into account.\n * @returns {number} The modifier for the given score.\n */\nexport function getAbilityModifier(score = null, options = {}) {\n  if (score != null) {\n    const penalty = Math.abs(options.penalty ?? 0);\n    const damage = Math.abs(options.damage ?? 0);\n    return Math.max(-5, Math.floor((score - 10) / 2) - Math.floor(penalty / 2) - Math.floor(damage / 2));\n  }\n  return 0;\n}\n\n/**\n * Create throttling function.\n *\n * Returned function will execute after defined delay. Multiple calls will be discarded until the callback is executed and new timeout can start.\n *\n * @param {Function} callback - Callback function\n * @param {number} delay - Delay in milliseconds\n * @returns {Function}\n */\nexport function throttle(callback, delay) {\n  let timeoutId = -1;\n  return () => {\n    if (timeoutId <= 0) {\n      timeoutId = setTimeout(() => {\n        timeoutId = -1;\n        callback();\n      }, delay);\n    }\n    return timeoutId;\n  };\n}\n\n/**\n * Create limiting function\n *\n * The function is called immediately, unless it was recently called in which case the call is discarded until defined amount of time has passed.\n *\n * @param {Function} callback - Function to call\n * @param {number} ms - Milliseconds that must pass before the wrapped function can be called again.\n * @returns {Function} - Limited function\n */\nexport function limit(callback, ms = 100) {\n  let lastCall = 0;\n  return (...args) => {\n    const t0 = performance.now();\n    if (t0 - lastCall < ms) return;\n    lastCall = t0;\n    callback(...args);\n  };\n}\n\n/**\n * Get iterator for all actors.\n *\n * @param {object} [options] - Options for which actors to fetch.\n * @param {Array<string>|null} [options.types=null] - Array of actor types to accept. Returns all if null.\n * @param {boolean} [options.base=true] - Return base actors (from game.actors).\n * @param {string|Scene|null} [options.scene=null] - Specific scene. Sets `scenes` and `base` to false.\n * @param {boolean} [options.scenes=false] - All scenes.\n * @param {boolean} [options.linked=true] - Get linked actors from scenes.\n * @param {boolean} [options.unlinked=true] - Get unlinked actors from scenes.\n * @param {Array<string|User>} [options.users=[game.user]] - Test specific users permission, either User instances or user IDs. Defaults to current user.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER] - What permission level (`CONST.DOCUMENT_OWNERSHIP_LEVELS`) to test user for, if user is defined.\n *\n * @yields {Actor} - Relevant actors\n */\nexport function* getActors({\n  base = true,\n  types = null,\n  scene = null,\n  scenes = false,\n  linked = true,\n  unlinked = true,\n  users = [game.user],\n  ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,\n} = {}) {\n  users = users.map((user) => (user instanceof User ? user : game.users.get(user)));\n\n  const testUsers = (actor) => (users.length ? users.some((user) => actor.testUserPermission(user, ownership)) : true);\n\n  if (base) {\n    for (const actor of [...game.actors]) {\n      if (types && !types.includes(actor.type)) continue;\n      if (!testUsers(actor)) continue;\n      yield actor;\n    }\n  }\n\n  let sceneList;\n  if (scene) {\n    if (scene instanceof Scene) sceneList = [scene];\n    else sceneList = [game.scenes.get(scene)];\n  } else if (scenes) {\n    sceneList = [...game.scenes];\n  }\n\n  for (const scene of sceneList) {\n    for (const token of [...scene.tokens]) {\n      const actor = token.actor;\n      if (!actor) continue;\n\n      if (types && !types.includes(actor.type)) continue;\n\n      // Test at least one user has appropriate ownership\n      if (!testUsers(actor)) continue;\n\n      const isLinked = token.isLinked;\n      // Yield linked only if such are desired and we didn't already return base actors\n      if (isLinked && linked && !base) yield actor;\n      // Yield unlinked only if desired\n      else if (!isLinked && unlinked) yield actor;\n    }\n  }\n}\n\n/**\n * Parse alignment string and provide breakdown of it.\n *\n * Each alignment is either 0 or 1, except for neutral which can reach 2 for true neutral.\n *\n * @param {string} align - Alignment string.\n * @returns {{lawful:number, evil:number, chaotic:number, good:number, neutral:number}}\n * @since PF1 v10\n */\nexport function parseAlignment(align) {\n  const lawful = align.includes(\"l\") ? 1 : 0;\n  const evil = align.includes(\"e\") ? 1 : 0;\n  const chaotic = align.includes(\"c\") ? 1 : 0;\n  const good = align.includes(\"g\") ? 1 : 0;\n  const neutral = align == \"tn\" ? 2 : align.includes(\"n\") ? 1 : 0;\n  return { lawful, evil, chaotic, good, neutral };\n}\n\n/**\n * Limit precision.\n *\n * Reduces number of decimals but does not insist on those decimals to be there.\n *\n * @beta\n * @param {number} number - Number to adjust\n * @param {number} [decimals] - Maximum number of decimals\n * @param {\"floor\"|\"ceil\"|\"round\"} [method] - Rounding method.\n * @returns {number} - Adjusted number\n */\nexport function limitPrecision(number, decimals = 2, method = \"floor\") {\n  const mult = Math.pow(10, decimals);\n  return Math[method](number * mult) / mult;\n}\n\n/**\n * Tests if two items are in same sub-group.\n *\n * This does not test main grouping (that is, item type itself).\n *\n * @param {ItemPF} item0 - First item to test\n * @param {ItemPF} item1 - Second item to test\n * @returns {boolean} - Equivalency\n */\nexport function isItemSameSubGroup(item0, item1) {\n  if (item0.type === \"spell\") {\n    // Spells sort by spell level instead of subtype\n    return item0.system.spellbook === item1.system.spellbook && item0.system.level === item1.system.level;\n  }\n\n  if (item0.subType) return item0.subType === item1.subType;\n\n  // Assume everything else is only categorized by main type\n  return true;\n}\n\n/**\n * Clone value.\n *\n * Similar to `foundry.utils.deepClone()` but does not return references for DataModel instances.\n *\n * @remarks\n * - Documents are returned as references (unless source option is enabled)\n * - PIXI graphics are returned as references\n * - DataModels are extracted like objects with `parent` excluded\n * - Unsupported objects call .toObject() when present, otherwise as references\n *\n * @param {object} original - Original data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict=false] - Throw an error if a reference would be returned.\n * @param {boolean} [options.source=false] - Return source data instead for supporting data.\n * @throws {Error} - With strict mode if reference would be returned.\n * @returns {object} - Cloned object\n */\nexport function deepClone(original, { strict = false, source = false } = {}) {\n  return _deepClone(original, strict, source);\n}\n\n/**\n * Faster deepClone() without destructuring.\n *\n * @internal\n * @param {*} original - Original data\n * @param {boolean} strict - Strict mode\n * @param {boolean} source - Clone source data\n * @param {number} _depth - Recursion depth\n * @returns {*} - Cloned data\n */\nfunction _deepClone(original, strict = false, source = false, _depth = 0) {\n  if (_depth > 100) {\n    throw new Error(\"Maximum depth exceeded. Be sure your object does not contain cyclical data structures.\");\n  }\n  _depth++;\n\n  // Simple types (null, undefined, number, string, bigint, function,...)\n  if (typeof original !== \"object\" || original === null) return original;\n\n  // Does not clone injected extra data\n  if (Array.isArray(original)) return original.map((value) => _deepClone(value, strict, source, _depth));\n\n  // Dates\n  if (original instanceof Date) return new Date(original);\n\n  // Return documents as is\n  if (original instanceof foundry.abstract.Document) {\n    if (source) return original.toObject();\n    if (strict) throw new Error(\"Document instance encountered\");\n    return original;\n  }\n\n  if (original instanceof PIXI.DisplayObject) {\n    if (strict) throw new Error(\"PIXI graphic encountered\");\n    return original;\n  }\n\n  // Unsupported advanced objects\n  if (original instanceof foundry.abstract.DataModel) {\n    if (source) return original.toObject();\n    // Otherwise treat as regular object\n  } else if (original.constructor && original.constructor !== Object) {\n    if (typeof original.toObject === \"function\") return original.toObject();\n    else if (typeof original.toJSON === \"function\") return original.toJSON();\n    if (strict) throw new Error(`Unsupported advanced object: ${original.constructor.name}`);\n    return original;\n  }\n\n  // DataModels and other plain objects\n  const clone = {};\n  for (const k of Object.keys(original)) {\n    clone[k] = _deepClone(original[k], strict, source, _depth);\n  }\n\n  return clone;\n}\n","const fields = foundry.data.fields;\n\n/**\n * The Base Registry class, providing shared functionality for all registries in the system.\n *\n * @abstract\n * @group Base Classes\n * @template {RegistryEntry} Model\n * @augments {foundry.utils.Collection<Model>}\n */\nexport class Registry extends foundry.utils.Collection {\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @type {typeof Model}\n   */\n  static model = null;\n\n  /**\n   * An array of data used to initialize this registry.\n   *\n   * @protected\n   * @type {Array<object>}\n   */\n  static _defaultData = [];\n\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @see {@link Registry.model}\n   * @type {Model}\n   */\n  model;\n\n  constructor() {\n    super();\n    Object.defineProperty(this, \"model\", { value: this.constructor.model, writable: false, enumerable: false });\n    this._initialize();\n  }\n\n  /**\n   * The name of the registry\n   *\n   * @type {string}\n   */\n  get name() {\n    return this.constructor.name;\n  }\n\n  /**\n   * Initializes the registry with its default data.\n   *\n   * @remarks This method is called automatically when the registry is instantiated.\n   *  It should be self-reliant and not require any other setup.\n   * @private\n   */\n  _initialize() {\n    this.clear();\n    for (const element of this.constructor._defaultData) {\n      try {\n        const content = new this.model({ ...element, namespace: \"pf1\" });\n        super.set(content.id, content);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Allow modules to register their own content\n    Hooks.callAll(`pf1Register${this.name}`, this);\n\n    this.setup();\n  }\n\n  /**\n   * Post-registry initialization entry preparation\n   *\n   * @abstract\n   * @protected\n   */\n  setup() {}\n\n  /**\n   * Localize registry and all their entries.\n   *\n   * Called in `i18nInit`.\n   *\n   * @protected\n   */\n  localize() {\n    for (const element of this) {\n      element.localize();\n    }\n  }\n\n  /**\n   * Sets the value of a key in the registry.\n   *\n   * @param {string} id - ID of the value to set.\n   * @param {Model} content - The value to set.\n   * @returns {Registry} The registry itself, after the value has been set.\n   */\n  set(id, content) {\n    const cls = this.model;\n    if (!(content instanceof cls)) {\n      throw new Error(`Registry '${this.name}' can only register ${cls.name}`);\n    }\n    return super.set(id, content);\n  }\n\n  /**\n   * Registers a new instance of {@link Model} with the registry, using a partial of its data as the base.\n   *\n   * @example\n   * ```js\n   * pf1.registry.damageTypes.register(\"my-module\", \"my-damage-type\", {\n   *   name: \"My Damage Type\",\n   *   img: \"icons/svg/damage.svg\",\n   *   category: \"physical\",\n   * });\n   * ```\n   * @param {string} namespace - The namespace for which this value is registered.\n   * @param {string} id - The unique key of the value.\n   * @param {object} value - A {@link Partial} of the data to use as the base for the new value.\n   * @returns {Registry} The registry itself, after the value has been registered.\n   */\n  register(namespace, id, value) {\n    if (!namespace || !id) throw new Error(\"Registering requires both a namespace and an ID\");\n    if (this.has(id)) {\n      throw new Error(`Registry '${this.name}' already has a key '${id}'`);\n    }\n    return this.set(id, new this.model({ ...value, namespace, _id: id }));\n  }\n\n  /**\n   * Unregisters a value from the registry, or if no id is provided, all values belonging to the namespace.\n   *\n   * @param {string} namespace - The namespace for which this value is unregistered.\n   * @param {string} [id] - The unique key of the value, or `undefined` to unregister all values belonging to the namespace.\n   */\n  unregister(namespace, id) {\n    if (!namespace) throw new Error(\"Unregistering requires a namespace\");\n    if (id) {\n      const entry = this.get(id);\n      if (entry && entry.namespace === namespace) this.delete(id);\n      else throw new Error(`Registry '${this.name}' has no key '${id}'`);\n    } else {\n      for (const entry of this) {\n        if (entry.namespace === namespace) this.delete(entry.id);\n      }\n    }\n  }\n\n  /**\n   * Returns the contents of this registry as object, using ids as keys.\n   *\n   * @param {boolean} [source=false] - Whether to include the source data instead of its prepared data for each value.\n   * @returns {{ [id: string]: object }} The data of each value in the registry, by id\n   */\n  toObject(source = false) {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.toObject(source)]));\n  }\n\n  /**\n   * Returns an object of the registry's contents, with the id as key and the name as value.\n   *\n   * @returns {{ [id: string]: string }} The names of each value in the registry, by id\n   */\n  getLabels() {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.name]));\n  }\n}\n\n/**\n * The Base Registry Object class, providing shared functionality for all registry objects in the system.\n * For the required data, see {@link defineSchema}.\n *\n * @abstract\n * @group Base Classes\n */\nexport class RegistryEntry extends foundry.abstract.DataModel {\n  /** @override */\n  static defineSchema() {\n    return {\n      _id: new fields.StringField({ required: true, blank: false, readonly: true }),\n      name: new fields.StringField({ required: false, initial: \"\", localize: true }),\n      flags: new fields.ObjectField({ required: false, initial: {} }),\n      namespace: new fields.StringField({ required: true, blank: false }),\n    };\n  }\n\n  /**\n   * The unique key of the value.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  _initialize() {\n    super._initialize();\n\n    this.prepareData();\n  }\n\n  /**\n   * Prepares the data of the registry entry.\n   *\n   * @abstract\n   * @protected\n   */\n  prepareData() {}\n\n  /**\n   * Localize fields\n   *\n   * @protected\n   */\n  localize() {\n    for (const [name, field] of Object.entries(this.constructor.schema.fields)) {\n      if (field instanceof fields.StringField && field.options.localize === true)\n        this[name] = game.i18n.localize(this[name]);\n    }\n  }\n}\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single damage type entry in the {@link DamageTypes} registry.\n *\n * @group Damage Types\n */\nexport class DamageType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      abbr: new fields.StringField({ required: false, blank: false, nullable: true, initial: null }),\n      icon: new fields.StringField({ required: false, initial: \"\" }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      category: new fields.StringField({\n        required: true,\n        blank: false,\n        initial: \"misc\",\n        choices: () => DamageTypes.CATEGORIES,\n      }),\n      isModifier: new fields.BooleanField({ required: false, initial: false }),\n      color: new fields.StringField({ required: true, initial: \"black\" }),\n      resist: new fields.BooleanField({ initial: true }),\n      diceSoNice: new fields.SchemaField(\n        {\n          colorset: new fields.StringField({ required: false }),\n          texture: new fields.StringField({ required: false }),\n          material: new fields.StringField({ required: false }),\n        },\n        {\n          initial: undefined,\n          required: false,\n        }\n      ),\n    };\n  }\n}\n/**\n * The singleton registry of damage types.\n *\n * At runtime this registry is accessible as `pf1.registry.damageTypes`.\n *\n * @group Damage Types\n * @see {@link Registry}\n * @see {@link DamageType}\n * @augments {Registry<DamageType>}\n */\nexport class DamageTypes extends Registry {\n  /** @inheritdoc */\n  static model = DamageType;\n\n  /**\n   * An array of allowed categories of damage types.\n   */\n  static CATEGORIES = /** @type {const} */ ([\"physical\", \"energy\", \"misc\"]);\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"untyped\",\n      name: \"PF1.DamageTypes.untyped.Label\",\n      icon: \"ra ra-uncertainty\",\n      resist: false,\n      category: \"misc\",\n    },\n    {\n      _id: \"slashing\",\n      name: \"PF1.DamageTypes.slashing.Label\",\n      abbr: \"PF1.DamageTypes.slashing.Abbr\",\n      icon: \"ra ra-sword\",\n      color: \"yellow\",\n      category: \"physical\",\n    },\n    {\n      _id: \"piercing\",\n      name: \"PF1.DamageTypes.piercing.Label\",\n      abbr: \"PF1.DamageTypes.piercing.Abbr\",\n      icon: \"ra ra-spear-head\",\n      color: \"blue\",\n      category: \"physical\",\n    },\n    {\n      _id: \"bludgeoning\",\n      name: \"PF1.DamageTypes.bludgeoning.Label\",\n      abbr: \"PF1.DamageTypes.bludgeoning.Abbr\",\n      icon: \"ra ra-large-hammer\",\n      color: \"red\",\n      category: \"physical\",\n    },\n    {\n      _id: \"fire\",\n      name: \"PF1.DamageTypes.fire.Label\",\n      icon: \"ra ra-fire\",\n      color: \"orange\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"fire\",\n        texture: \"fire\",\n      },\n    },\n    {\n      _id: \"cold\",\n      name: \"PF1.DamageTypes.cold.Label\",\n      icon: \"ra ra-frost-emblem\",\n      color: \"aqua\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"ice\",\n        texture: \"ice\",\n      },\n    },\n    {\n      _id: \"electric\",\n      name: \"PF1.DamageTypes.electricity.Label\",\n      icon: \"ra ra-lightning-bolt\",\n      color: \"yellow\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"lightning\",\n        texture: \"ice\",\n      },\n    },\n    {\n      _id: \"acid\",\n      name: \"PF1.DamageTypes.acid.Label\",\n      icon: \"ra ra-acid\",\n      color: \"lime\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"acid\",\n        texture: \"marble\",\n      },\n    },\n    {\n      _id: \"sonic\",\n      name: \"PF1.DamageTypes.sonic.Label\",\n      icon: \"ra ra-horn-call\",\n      color: \"#00aedb\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"astralsea\",\n        texture: \"astral\",\n      },\n    },\n    {\n      _id: \"force\",\n      name: \"PF1.DamageTypes.force.Label\",\n      icon: \"ra ra-doubled\",\n      color: \"#a200ff\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"force\",\n        texture: \"stars\",\n      },\n    },\n    {\n      _id: \"negative\",\n      name: \"PF1.DamageTypes.negative.Label\",\n      icon: \"ra ra-skull\",\n      color: \"#765898\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"necrotic\",\n        texture: \"skulls\",\n      },\n    },\n    {\n      _id: \"positive\",\n      name: \"PF1.DamageTypes.positive.Label\",\n      icon: \"ra ra-sunbeams\",\n      color: \"#f8ed62\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"prism\",\n        texture: \"stainedglass\",\n      },\n    },\n    {\n      _id: \"precision\",\n      name: \"PF1.Precision\",\n      icon: \"ra ra-archery-target\",\n      isModifier: true,\n    },\n    {\n      _id: \"nonlethal\",\n      name: \"PF1.Nonlethal\",\n      icon: \"ra ra-hand\",\n      isModifier: true,\n    },\n    {\n      _id: \"areaOfEffect\",\n      name: \"PF1.DamageTypes.areaOfEffect.Label\",\n      icon: \"ra ra-bomb-explosion\",\n      isModifier: true,\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc DamageTypes}\n *\n * @group Damage Types\n * @type {DamageTypes}\n */\nexport let damageTypes;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single material type entry in the {@link Materials} registry.\n *\n * @group Materials\n */\nexport class Material extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({\n        required: false,\n        localize: true,\n        initial: (data) => `PF1.Materials.Types.${data._id}`,\n      }),\n      shortName: new fields.StringField({ required: false, initial: undefined, blank: false, localize: true }),\n      treatedAs: new fields.StringField({ required: false, initial: undefined, blank: false }),\n      addon: new fields.BooleanField({ required: false, initial: false }),\n      intrinsic: new fields.BooleanField({ required: false, initial: false }), // Always available, same as base materials\n      primitive: new fields.BooleanField({ required: false, initial: false }),\n      baseMaterial: new fields.ArrayField(new fields.StringField(), { required: false, initial: [] }),\n      hardness: new fields.NumberField({ required: false, initial: 10, integer: true, min: 0 }),\n      hardnessMultiplier: new fields.NumberField({ required: false, initial: null, nullable: true, min: 0 }),\n      healthPerInch: new fields.NumberField({ required: false, initial: null, integer: true, min: 0, nullable: true }),\n      healthBonus: new fields.NumberField({ required: false, initial: 0, integer: true, min: 0 }),\n      healthMultiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n      masterwork: new fields.BooleanField({ required: false, initial: false }),\n      allowed: new fields.SchemaField({\n        lightBlade: new fields.BooleanField({ required: false, initial: true }),\n        oneHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        twoHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        rangedWeapon: new fields.BooleanField({ required: false, initial: true }),\n        buckler: new fields.BooleanField({ required: false, initial: true }),\n        lightShield: new fields.BooleanField({ required: false, initial: true }),\n        heavyShield: new fields.BooleanField({ required: false, initial: true }),\n        towerShield: new fields.BooleanField({ required: false, initial: true }),\n        lightArmor: new fields.BooleanField({ required: false, initial: true }),\n        mediumArmor: new fields.BooleanField({ required: false, initial: true }),\n        heavyArmor: new fields.BooleanField({ required: false, initial: true }),\n      }),\n      armor: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      dr: new fields.BooleanField({ required: false, initial: false }),\n      incompatible: new fields.ArrayField(new fields.StringField(), {\n        required: false,\n        initial: [],\n      }),\n      price: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        perPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        ammunition: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        oneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        twoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedOneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedTwoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        shield: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        mediumArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        heavyArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        enhancement: new fields.SchemaField({\n          // Bonus cost to apply enhancement. One time price increase on first enhancement.\n          weapon: new fields.NumberField({ required: false, initial: 0, min: 0 }),\n        }),\n      }),\n      shield: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      weight: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        bonusPerPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n      }),\n    };\n  }\n\n  /**\n   * Is this a basic material that items without special materials are made of?\n   *\n   * @type {boolean}\n   */\n  get basic() {\n    return !this.baseMaterial.length && !this.addon;\n  }\n\n  /**\n   * Check if a given material is okay to be added to our materials list\n   *\n   * @param {ItemPF} item - Whether we're checking weapons or equipment\n   * @returns {boolean} - Whether the material is allowed for the given item\n   */\n  isAllowed(item) {\n    // Let's end this early if we can never be allowed\n    if (this.basic) return false;\n    const type = item.type,\n      subtype = item.system.subType,\n      baseMaterial = item.baseMaterial;\n    let result = false;\n\n    if (this.baseMaterial.length && baseMaterial && !this.baseMaterial.includes(baseMaterial)) {\n      return result;\n    }\n\n    // Check whether the material is allowed for the given item\n    switch (type) {\n      case \"spell\": {\n        result = true;\n        break;\n      }\n      case \"weapon\":\n      case \"attack\": {\n        const weaponCategory = type === \"weapon\" ? item.system.weaponSubtype : item.system.weapon?.type || \"all\";\n\n        switch (weaponCategory) {\n          case \"light\":\n            result = this.allowed.lightBlade;\n            break;\n          case \"1h\":\n            result = this.allowed.oneHandBlade;\n            break;\n          case \"2h\":\n            result = this.allowed.twoHandBlade;\n            break;\n          case \"ranged\":\n            result = this.allowed.rangedWeapon;\n            break;\n          case \"all\": // We're prepping an Attack and don't care (don't have the info anyways)\n            result =\n              this.allowed.lightBlade ||\n              this.allowed.oneHandBlade ||\n              this.allowed.twoHandBlade ||\n              this.allowed.rangedWeapon; // Essentially, filter out any that are armor-only.\n            break;\n          default:\n            // Shouldn't find this\n            return false;\n        }\n        break;\n      }\n      case \"equipment\": {\n        if (subtype === \"shield\" && item.system.equipmentSubtype === \"other\") {\n          result = this.allowed.buckler;\n        } else {\n          result = this.allowed[item.system.equipmentSubtype];\n        }\n        break;\n      }\n    }\n\n    if (result && this.addon) {\n      // If we're an addon, we need to check if the addon is valid for the item\n      return this.isValidAddon(item) ?? false;\n    }\n    return result; // Finally made it through the gauntlet!\n  }\n\n  /**\n   * Check if a given addon material is valid for the chosen material\n   *\n   * @param {ItemPF|Material|string} material - Item, material, or material ID for which to test if this addon is valid.\n   * @returns {boolean|null} - Null if the provided parameter is invalid, boolean otherwise.\n   */\n  isValidAddon(material) {\n    // Convert item and material IDs to actual material\n    if (material instanceof Item) material = pf1.registry.materials.get(material.normalMaterial);\n    else if (typeof material === \"string\") material = pf1.registry.materials.get(material);\n\n    if (!(material instanceof Material)) {\n      if (this.intrinsic) return true;\n      return null; // Material not found or is invalid data\n    }\n\n    if (this.addon === material.addon) return false; // Both are addons or both are not addons\n\n    return !this.incompatible.includes(material.id);\n  }\n}\n\n/**\n * The singleton registry of materials.\n *\n * At runtime this registry is accessible as `pf1.registry.materials`.\n *\n * @group Materials\n * @see {@link Registry}\n * @see {@link Material}\n * @augments {Registry<Material>}\n */\nexport class Materials extends Registry {\n  /** @inheritdoc */\n  static model = Material;\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"cloth\",\n      hardness: 0,\n      healthPerInch: 2,\n      healthMultiplier: 0.07,\n    },\n    {\n      _id: \"leather\",\n      hardness: 2,\n      healthPerInch: 5,\n      healthMultiplier: 0.17,\n    },\n    {\n      _id: \"adamantine\",\n      baseMaterial: [\"steel\"],\n      hardness: 20,\n      healthPerInch: 40,\n      dr: true,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 60.0,\n        lightWeapon: 3000.0,\n        oneHandWeapon: 3000.0,\n        twoHandWeapon: 3000.0,\n        rangedOneHandWeapon: 3000.0,\n        rangedTwoHandWeapon: 3000.0,\n        lightArmor: 5000.0,\n        mediumArmor: 10000.0,\n        heavyArmor: 15000.0,\n      },\n    },\n    {\n      _id: \"alchemicalSilver\",\n      shortName: \"PF1.Materials.Types.silver\",\n      baseMaterial: [\"steel\"],\n      hardness: 8,\n      healthPerInch: 10,\n      incompatible: [\"adamantine\", \"coldIron\", \"mithral\", \"nexavaranSteel\", \"silversheen\", \"sunsilver\"],\n      dr: true,\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 2.0,\n        lightWeapon: 20.0,\n        oneHandWeapon: 90.0,\n        twoHandWeapon: 180.0,\n        rangedOneHandWeapon: 90.0,\n        rangedTwoHandWeapon: 180.0,\n      },\n    },\n    {\n      _id: \"angelSkin\",\n      baseMaterial: [\"leather\"],\n      hardness: 5,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.17,\n      price: {\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"aszite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 750.0,\n        heavyArmor: 1000.0,\n      },\n      weight: {\n        multiplier: 1.1,\n      },\n    },\n    {\n      _id: \"blackwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 20.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"blightQuartz\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 200.0,\n        lightWeapon: 2500.0,\n        oneHandWeapon: 2500.0,\n        twoHandWeapon: 2500.0,\n        rangedOneHandWeapon: 2500.0,\n        rangedTwoHandWeapon: 2500.0,\n      },\n    },\n    {\n      _id: \"bloodCrystal\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        ammunition: 30.0,\n        lightWeapon: 1500.0,\n        oneHandWeapon: 1500.0,\n        twoHandWeapon: 1500.0,\n        rangedOneHandWeapon: 1500.0,\n        rangedTwoHandWeapon: 1500.0,\n      },\n    },\n    {\n      _id: \"caphorite\",\n      baseMaterial: [\"steel\"],\n      // No official hardness stat\n      // No official hp per inch stat\n      // Only allowed to be used for ammunition so these stats are not necessary\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n      },\n    },\n    {\n      _id: \"coldIron\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      price: {\n        multiplier: 2.0,\n        enhancement: {\n          weapon: 2_000,\n        },\n      },\n    },\n    {\n      _id: \"cryptstone\",\n      baseMaterial: [\"stone\", \"steel\", \"wood\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"darkleafCloth\",\n      baseMaterial: [\"leather\", \"cloth\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: -10,\n      },\n      healthMultiplier: 4.0,\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 1500.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"darkwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 10.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"dragonhide\",\n      baseMaterial: [\"leather\"],\n      hardness: 10,\n      healthPerInch: 10, // Typically ½ and 1 inch thick\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        buckler: false,\n        towerShield: false,\n      },\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"druchite\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 12.0,\n        lightWeapon: 1200.0,\n        oneHandWeapon: 1200.0,\n        twoHandWeapon: 1200.0,\n        rangedOneHandWeapon: 1200.0,\n        rangedTwoHandWeapon: 1200.0,\n        lightArmor: 1000.0,\n        mediumArmor: 1500.0,\n        heavyArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"eelHide\",\n      baseMaterial: [\"leather\"],\n      hardness: 2,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -1,\n        maxDex: 1,\n      },\n      price: {\n        lightArmor: 1200.0,\n        mediumArmor: 1800.0,\n      },\n    },\n    {\n      _id: \"elysianBronze\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"fireForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"frostForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"glaucite\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 3.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"greenwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      price: {\n        perPound: 50.0,\n        ammunition: 6.0,\n        lightWeapon: 300.0,\n        oneHandWeapon: 300.0,\n        twoHandWeapon: 300.0,\n        rangedOneHandWeapon: 300.0,\n        rangedTwoHandWeapon: 300.0,\n        shield: 150.0,\n        lightArmor: 150.0,\n        mediumArmor: 150.0,\n        heavyArmor: 150.0,\n      },\n    },\n    {\n      _id: \"griffonMane\",\n      baseMaterial: [\"cloth\"],\n      hardness: 1,\n      healthPerInch: 4,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 2.0,\n      price: {\n        perPound: 50.0,\n        lightArmor: 200.0,\n      },\n    },\n    {\n      _id: \"heatstonePlating\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightArmor: 800.0,\n        mediumArmor: 1000.0,\n      },\n      weight: {\n        bonusPerPound: 0.2,\n      },\n    },\n    {\n      _id: \"horacalcum\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.25, // Horacalcum actually has additional multiplier over health per inch\n      price: {\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        lightArmor: 10000.0,\n        mediumArmor: 30000.0,\n        heavyArmor: 60000.0,\n      },\n    },\n    {\n      _id: \"inubrix\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 100.0,\n        lightWeapon: 5000.0,\n        oneHandWeapon: 5000.0,\n        twoHandWeapon: 5000.0,\n        rangedOneHandWeapon: 5000.0,\n        rangedTwoHandWeapon: 5000.0,\n      },\n    },\n    /* This is added for completenss' sake, but it's not an applicable material outside of constructs.\n    {\n      _id: \"irespanBasalt\",\n      baseMaterial: [\"stone\"],\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 10,\n      price: {\n        perPound: 0.5,\n      },\n    },\n    */\n    {\n      _id: \"lazurite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 1500.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3500.0,\n      },\n    },\n    {\n      _id: \"liquidGlass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10,\n      healthPerInch: 10,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 250.0,\n        ammunition: 16.0,\n        lightWeapon: 800.0,\n        oneHandWeapon: 800.0,\n        twoHandWeapon: 800.0,\n        rangedOneHandWeapon: 800.0,\n        rangedTwoHandWeapon: 800.0,\n      },\n    },\n    {\n      _id: \"livingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 35,\n      healthMultiplier: 1.16,\n      price: {\n        perPound: 250.0,\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 100.0,\n        lightArmor: 500.0,\n        mediumArmor: 1000.0,\n        heavyArmor: 1500.0,\n      },\n    },\n    {\n      _id: \"mithral\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      armor: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      shield: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      price: {\n        perPound: 500, // Non-armor/shield only\n        shield: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 4000.0,\n        heavyArmor: 9000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"nexavaranSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      treatedAs: \"coldIron\",\n      price: {\n        multiplier: 1.5,\n        enhancement: {\n          weapon: 3_000,\n        },\n      },\n    },\n    {\n      _id: \"noqual\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      shield: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 2000.0,\n        lightArmor: 4000.0,\n        mediumArmor: 8000.0,\n        heavyArmor: 12000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"paueliel\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 15.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"pyresteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 15,\n      allowed: {\n        buckler: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"siccatite\",\n      baseMaterial: [\"steel\"],\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"silversheen\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 750.0,\n        oneHandWeapon: 750.0,\n        twoHandWeapon: 750.0,\n        rangedOneHandWeapon: 750.0,\n        rangedTwoHandWeapon: 750.0,\n      },\n    },\n    {\n      _id: \"singingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      armor: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      shield: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      healthMultiplier: 0.67,\n      price: {\n        perPound: 600.0,\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        shield: 7000.0,\n        lightArmor: 750.0,\n        mediumArmor: 9000.0,\n        heavyArmor: 12000.0,\n      },\n    },\n    {\n      _id: \"spireSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 2000.0,\n        oneHandWeapon: 2000.0,\n        twoHandWeapon: 2000.0,\n        rangedOneHandWeapon: 2000.0,\n        rangedTwoHandWeapon: 2000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"steel\",\n      hardness: 10,\n      healthPerInch: 30,\n    },\n    {\n      _id: \"sunsilk\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"sunsilver\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 8,\n      healthPerInch: 10,\n      masterwork: true,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 25.0,\n      },\n    },\n    {\n      _id: \"throneglass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10, // \"as durable as steel\"\n      healthPerInch: 30, // \"as durable as steel\"\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 13000.0,\n        oneHandWeapon: 13000.0,\n        twoHandWeapon: 13000.0,\n      },\n    },\n    {\n      _id: \"viridium\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 200.0,\n        oneHandWeapon: 200.0,\n        twoHandWeapon: 200.0,\n        rangedOneHandWeapon: 200.0,\n        rangedTwoHandWeapon: 200.0,\n      },\n    },\n    {\n      _id: \"voidglass\",\n      baseMaterial: [\"glass\", \"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      price: {\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        shield: 3000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 4500.0,\n      },\n    },\n    {\n      _id: \"whipwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      healthBonus: 5, // Grants flat +5 hp bonus to item regardless of anything else\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"wyroot\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n    },\n    {\n      _id: \"bone\",\n      primitive: true,\n      hardness: 5, // Actually half of whatever the base material is for weapons, 5 is true for armor\n      healthPerInch: null, // Same as base material\n    },\n    {\n      _id: \"bronze\",\n      primitive: true,\n      hardness: 9,\n      healthPerInch: 30, // Not officially statted, but speaks of steel\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"glass\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"gold\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 10.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"obsidian\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        multiplier: 0.5,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"stone\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 0.25,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"wood\",\n      hardness: 5,\n      healthPerInch: 10,\n    },\n    {\n      _id: \"magic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n    {\n      _id: \"epic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc Materials}\n *\n * @group Materials\n * @type {Materials}\n */\nexport let materials;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single script call category/trigger.\n *\n * @group Script Call Categories\n */\nexport class ScriptCallCategory extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      itemTypes: new fields.ArrayField(new fields.StringField({})),\n      info: new fields.StringField({ required: true, blank: false, initial: \"\" }, { localize: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of script call categories/trigger events.\n * At runtime this registry is accessible as `pf1.registry.scriptCalls`.\n *\n * @group Script Call Categories\n * @see {@link Registry}\n * @see {@link ScriptCallCategory}\n * @augments {Registry<ScriptCallCategory>}\n */\nexport class ScriptCalls extends Registry {\n  /** @inheritdoc */\n  static model = ScriptCallCategory;\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    // Use\n    {\n      _id: \"use\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.Use.Name\",\n      info: \"PF1.ScriptCalls.Use.Info\",\n    },\n    // Post-Use\n    {\n      _id: \"postUse\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.PostUse.Name\",\n      info: \"PF1.ScriptCalls.PostUse.Info\",\n    },\n    // Equip\n    {\n      _id: \"equip\",\n      itemTypes: [\"weapon\", \"equipment\", \"loot\"],\n      name: \"PF1.ScriptCalls.Equip.Name\",\n      info: \"PF1.ScriptCalls.Equip.Info\",\n    },\n    // Implant\n    {\n      _id: \"implant\",\n      itemTypes: [\"implant\"],\n      name: \"PF1.ScriptCalls.Implant.Name\",\n      info: \"PF1.ScriptCalls.Implant.Info\",\n    },\n    // Toggle\n    {\n      _id: \"toggle\",\n      itemTypes: [\"buff\", \"feat\"],\n      name: \"PF1.ScriptCalls.Toggle.Name\",\n      info: \"PF1.ScriptCalls.Toggle.Info\",\n    },\n    // Change Quantity\n    {\n      _id: \"changeQuantity\",\n      itemTypes: [\"loot\", \"equipment\", \"weapon\", \"implant\", \"consumable\", \"container\"],\n      name: \"PF1.ScriptCalls.ChangeQuantity.Name\",\n      info: \"PF1.ScriptCalls.ChangeQuantity.Info\",\n    },\n    // Change Level\n    {\n      _id: \"changeLevel\",\n      itemTypes: [\"buff\", \"class\"],\n      name: \"PF1.ScriptCalls.ChangeLevel.Name\",\n      info: \"PF1.ScriptCalls.ChangeLevel.Info\",\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc ScriptCalls}\n *\n * @group Script Call Categories\n * @type {ScriptCalls}\n */\nexport let scriptCalls;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nimport { ItemChange } from \"@component/change.mjs\";\n\nconst omitFields = (obj, keys) => {\n  for (const key of keys) delete obj[key];\n  return obj;\n};\n\n/**\n * Condition's status HUD behaviour configuration.\n *\n * @group Conditions\n */\nexport class StatusHudModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      show: new fields.BooleanField({ required: false, initial: true, label: \"Show in token status HUD\" }),\n      include: new fields.SetField(new fields.StringField({ choices: () => Object.keys(game.model.Actor) }), {\n        initial: [],\n        required: false,\n        label: \"Required actor types.\",\n      }),\n      exclude: new fields.SetField(new fields.StringField({ choices: () => Object.keys(game.model.Actor) }), {\n        initial: [],\n        required: false,\n        label: \"Excluded actor types. Has no effect if include list is populated.\",\n      }),\n    };\n  }\n\n  /**\n   * Allowed actor types.\n   *\n   * @remarks\n   * - Undefined if no limitations are present.\n   *\n   * @type {Array<string>|undefined}\n   */\n  get actorTypes() {\n    if (this.include.size) return [...this.include];\n    if (this.exclude.size) return Object.keys(game.model.Actor).filter((type) => !this.exclude.has(type));\n    return undefined;\n  }\n}\n\n/**\n * A single condition entry in the {@link Condition} registry.\n *\n * @group Conditions\n */\nexport class Condition extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      aliases: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n      texture: new fields.StringField({ required: true }),\n      track: new fields.StringField({\n        required: false,\n        blank: false,\n        nullable: true,\n        initial: null,\n        choices: () => Conditions.TRACKS,\n      }),\n      mechanics: new fields.SchemaField({\n        changes: new fields.ArrayField(\n          new fields.SchemaField({ ...omitFields(ItemChange.defineSchema(), [\"_id\", \"value\", \"flavor\"]) })\n        ),\n        flags: new fields.SetField(new fields.StringField({ blank: false })),\n        contexts: new fields.SetField(new fields.StringField({ blank: false })),\n      }),\n      journal: new fields.StringField({ nullable: true, blank: false, required: false }),\n      showInDefense: new fields.BooleanField({ required: false, initial: true }),\n      showInAction: new fields.BooleanField({ required: false, initial: true }),\n      showInBuffsTab: new fields.BooleanField({ required: false, initial: true }),\n      hud: new fields.EmbeddedDataField(StatusHudModel),\n      statuses: new fields.SetField(new fields.StringField()), // Secondary statuses\n    };\n  }\n\n  /**\n   * Convert condition to format expected by `CONFIG.statusEffects`.\n   *\n   * @returns {object} - Base object\n   */\n  toStatusEffect() {\n    return {\n      id: this.id,\n      name: this.name,\n      img: this.texture,\n      hud: this.hud.show ? this.hud : false,\n    };\n  }\n}\n\n/**\n * The singleton registry of condition types.\n * At runtime this registry is accessible as `pf1.registry.conditions`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Condition}\n * @augments {Registry<Condition>}\n */\nexport class Conditions extends Registry {\n  /** @inheritdoc */\n  static model = Condition;\n\n  /**\n   * An array of allowed tracks of condition advancement.\n   */\n  static TRACKS = /** @type {const} */ ([\"dying\", \"fear\", \"lethargy\", \"movement\"]);\n\n  /**\n   * @internal\n   */\n  static SET_TO_ZERO = /** @type {const} */ ({\n    formula: 0,\n    type: \"untypedPerm\",\n    operator: \"set\",\n    priority: 1001,\n    continuous: true,\n  });\n\n  /**\n   * @internal\n   */\n  static HUD_EXCLUDE_INANIMATE = /** @type {const} */ ({\n    exclude: [\"haunt\", \"trap\", \"vehicle\"],\n  });\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"bleed\",\n      aliases: [\"bleeding\"],\n      name: \"PF1.Condition.bleed\",\n      texture: \"systems/pf1/icons/conditions/bleed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.L6DTocj1PbOtuspU\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"blind\",\n      aliases: [\"blinded\", \"blinding\"],\n      name: \"PF1.Condition.blind\",\n      texture: \"icons/svg/blind.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.A9KUpd2bsdZZsQqj\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n        // Perception checks, and spellcraft checks for non-verbal components\n        contexts: [\"skill.per\", \"skill.spl\"],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"confused\",\n      aliases: [\"confuse\", \"confusing\"],\n      name: \"PF1.Condition.confused\",\n      texture: \"systems/pf1/icons/conditions/confused.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.J2yma0xciBKRUh9t\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"cowering\",\n      aliases: [\"cower\"],\n      name: \"PF1.Condition.cowering\",\n      texture: \"systems/pf1/icons/conditions/cowering.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eNW5geiJqrnAjjNu\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dazed\",\n      aliases: [\"daze\", \"dazing\"],\n      name: \"PF1.Condition.dazed\",\n      texture: \"systems/pf1/icons/conditions/dazed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.2A6Gk60pLDKR2zT0\",\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dazzled\",\n      aliases: [\"dazzle\", \"dazzling\"],\n      name: \"PF1.Condition.dazzled\",\n      texture: \"systems/pf1/icons/conditions/dazzled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.xHUnCadQ2qYsfvV0\",\n      mechanics: {\n        changes: [\n          {\n            formula: -1,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        contexts: [\"skill.per\"],\n      },\n      showInDefense: false,\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dead\",\n      name: \"PF1.Condition.dead\",\n      texture: \"icons/svg/skull.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.YvycF7bsU1hPm4pX\",\n      track: \"dying\",\n      showInBuffsTab: false,\n    },\n    {\n      _id: \"deaf\",\n      aliases: [\"deafen\", \"deafened\", \"deafening\"],\n      name: \"PF1.Condition.deaf\",\n      texture: \"icons/svg/deaf.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.3uIamlB0L1UZUwoF\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"init\",\n            type: \"untyped\",\n          },\n        ],\n        // Any skills that take perception modifiers (perception itself and spellcraft when identifying spellcasting with verbal components)\n        // Language dependant saves\n        contexts: [\"savingThrow.will\", \"skill.per\", \"skill.spl\"],\n      },\n      showInAction: false, // TODO: Add configuration that this is to be true for spells only\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"disabled\",\n      aliases: [\"disable\", \"disabling\"],\n      statuses: [\"staggered\"],\n      name: \"PF1.Condition.disabled\",\n      texture: \"systems/pf1/icons/conditions/disabled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.dtHHibCiKZzdjyvp\",\n      track: \"dying\",\n      // TODO: Add card tag whenever any \"strenuous\" activity performed\n      showInDefense: false,\n    },\n    {\n      _id: \"dying\",\n      name: \"PF1.Condition.dying\",\n      texture: \"systems/pf1/icons/conditions/dying.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.zG6xEGMIerpbnND0\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"entangled\",\n      aliases: [\"entangle\", \"entangling\"],\n      name: \"PF1.Condition.entangled\",\n      texture: \"icons/svg/net.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.oxmugd8SoxVjvRRl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Tag any spellcasting to hint at potential need to roll concentration\n      },\n    },\n    {\n      _id: \"exhausted\",\n      aliases: [\"exhaust\", \"exhausting\"],\n      name: \"PF1.Condition.exhausted\",\n      texture: \"systems/pf1/icons/conditions/exhausted.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ITxxh53qgl74wWcE\",\n      mechanics: {\n        changes: [\n          {\n            formula: -6,\n            target: \"strPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -6,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"fatigued\",\n      aliases: [\"fatigue\", \"fatiguing\"],\n      name: \"PF1.Condition.fatigued\",\n      texture: \"icons/svg/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.AVaxTNildXRzYnQm\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"strPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"flatFooted\",\n      aliases: [\"flatfooted\"],\n      name: \"PF1.Condition.flatFooted\",\n      texture: \"systems/pf1/icons/conditions/flat-footed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eSvkrrl3US7RJTai\",\n      mechanics: {\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"frightened\",\n      aliases: [\"frighten\", \"frightening\"],\n      name: \"PF1.Condition.frightened\",\n      texture: \"systems/pf1/icons/conditions/frightened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.uqpJ7ZMnWF5qjOTl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Include in any card\n      },\n      track: \"fear\",\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"grappled\",\n      aliases: [\"grapple\", \"grappling\"],\n      name: \"PF1.Condition.grappled\",\n      texture: \"systems/pf1/icons/conditions/grappled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.i4gHNAVajJWs4cFI\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Display on spellcasting\n        // TODO: Display on using two-handed actions\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"helpless\",\n      name: \"PF1.Condition.helpless\",\n      texture: \"systems/pf1/icons/conditions/helpless.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.6dtCytJsNkO8Hwq4\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"incorporeal\",\n      name: \"PF1.Condition.incorporeal\",\n      texture: \"systems/pf1/icons/conditions/incorporeal.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.acqGBiMxTbXZ47zU\",\n      mechanics: {\n        changes: [\n          {\n            formula: 0,\n            target: \"nac\",\n            type: \"base\",\n            operator: \"set\",\n            priority: -10,\n          },\n          {\n            formula: \"max(1, @abilities.cha.mod)\",\n            operator: \"add\",\n            target: \"ac\",\n            type: \"deflection\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"invisible\",\n      name: \"PF1.Condition.invisible\",\n      texture: \"icons/svg/invisible.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.Wr2ZWUZcyVWQ4GtX\",\n      // TODO: Display in attack card for potential contextual +2 that was missed\n      showInDefense: false,\n    },\n    {\n      _id: \"nauseated\",\n      aliases: [\"nausea\", \"nauseating\"],\n      name: \"PF1.Condition.nauseated\",\n      texture: \"systems/pf1/icons/conditions/nauseated.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ySiyyK1BMAyKPY4I\",\n      // TODO: Display on any more strenuous action than move action\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"panicked\",\n      aliases: [\"panic\", \"panicking\"],\n      name: \"PF1.Condition.panicked\",\n      texture: \"icons/svg/terror.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.nGTsTfpWcJTTU3rk\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      // TODO: Display in any attack card as the condition denies attacking but we don't enforce that\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"paralyzed\",\n      aliases: [\"paralyze\", \"paralyzing\"],\n      statuses: [\"helpless\"], // Secondary statuses\n      name: \"PF1.Condition.paralyzed\",\n      texture: \"systems/pf1/icons/conditions/paralyzed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.24p2Koq4FFCLDKnj\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n          {\n            ...this.SET_TO_ZERO,\n            target: \"str\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"petrified\",\n      aliases: [\"petrify\", \"petrifying\"],\n      statuses: [\"helpless\", \"unconscious\"], // Secondary statuses\n      name: \"PF1.Condition.petrified\",\n      texture: \"systems/pf1/icons/conditions/petrified.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ayGQWwbrhAc99pkH\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"pinned\",\n      aliases: [\"pin\", \"pinning\"],\n      name: \"PF1.Condition.pinned\",\n      texture: \"systems/pf1/icons/conditions/pinned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.poCq8gXdDi5leaMT\",\n      mechanics: {\n        changes: [\n          {\n            formula: \"min(0, @abilities.dex.mod)\",\n            target: \"dexMod\",\n            type: \"untyped\",\n            operator: \"set\",\n            priority: 1001,\n            continuous: true,\n          },\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"cmd\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      // TODO: Display in spellcasting actions\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"prone\",\n      name: \"PF1.Condition.prone\",\n      texture: \"icons/svg/falling.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.VbagnIPQS523dwxa\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"mattack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"shaken\",\n      aliases: [\"shaking\"],\n      name: \"PF1.Condition.shaken\",\n      texture: \"systems/pf1/icons/conditions/shaken.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.XxLUswkCuXnXmA5T\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"sickened\",\n      aliases: [\"sick\", \"sickening\"],\n      name: \"PF1.Condition.sickened\",\n      texture: \"systems/pf1/icons/conditions/sickened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.7LwCMwrX3tchvrjW\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"wdamage\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"sleep\",\n      aliases: [\"sleeping\"],\n      statuses: [\"helpless\", \"unconscious\"], // Secondary statuses\n      name: \"PF1.Condition.sleep\",\n      texture: \"icons/svg/sleep.svg\",\n      journal: null,\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"squeezing\",\n      aliases: [\"squeeze\"],\n      name: \"PF1.Condition.squeezing\",\n      texture: \"systems/pf1/icons/conditions/squeezing.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.jzeZ0Uf31CAMZra9\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"stable\",\n      aliases: [\"stabilize\", \"stabilized\"],\n      name: \"PF1.Condition.stable\",\n      texture: \"systems/pf1/icons/conditions/stable.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.krgVb43Vd62dqpYr\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"staggered\",\n      aliases: [\"stagger\", \"staggering\"],\n      name: \"PF1.Condition.staggered\",\n      texture: \"systems/pf1/icons/conditions/staggered.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.TTp8q9Vb2PNAujWu\",\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"stunned\",\n      aliases: [\"stun\", \"stunning\"],\n      name: \"PF1.Condition.stunned\",\n      texture: \"icons/svg/stoned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ZgsBPY0uVCVl6SGh\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"unconscious\",\n      name: \"PF1.Condition.unconscious\",\n      statuses: [\"helpless\"], // Secondary statuses\n      texture: \"systems/pf1/icons/conditions/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.kHwbZ38VHCa1wkUF\",\n      mechanics: {\n        // TODO: Cause helpless secondary condition instead\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"burrow\",\n      aliases: [\"burrowing\", \"burrowed\"],\n      name: \"EFFECT.StatusBurrow\",\n      texture: \"icons/svg/mole.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"fly\",\n      aliases: [\"flying\"],\n      name: \"EFFECT.StatusFlying\",\n      texture: \"icons/svg/wing.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"hover\",\n      aliases: [\"hovering\"],\n      name: \"EFFECT.StatusHover\",\n      texture: \"icons/svg/wingfoot.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"swim\",\n      aliases: [\"swimming\"],\n      name: \"EFFECT.StatusSwim\",\n      texture: \"systems/pf1/icons/actions/swim.svg\",\n      track: \"movement\",\n    },\n  ];\n\n  /**\n   * Get condition by ID, including any that have it as alias.\n   *\n   * @experimental\n   * @param {string} id\n   * @returns {Condition|void}\n   */\n  getAliased(id) {\n    // TODO: Cache alias-to-condition mapping?\n    return this.get(id) ?? this.find((entry) => entry.aliases.has(id));\n  }\n\n  /**\n   * Get all conditions that have belong to a given track\n   *\n   * @param {string} track - The given track to check for\n   * @returns {string[]} - An array of all conditions in the given track\n   */\n  conditionsInTrack(track) {\n    return this.contents.filter((condition) => condition.track === track).map((condition) => condition.id);\n  }\n\n  /**\n   * Get all tracks and their conditions\n   *\n   * @returns {string[][]} - Condition tracks\n   */\n  trackedConditions() {\n    return this.tracks.map((track) => this.conditionsInTrack(track));\n  }\n\n  /**\n   * The allowed tracks.\n   *\n   * @see {@link Conditions.TRACKS}\n   *\n   * @type {string[]}\n   */\n  get tracks() {\n    return this.constructor.TRACKS;\n  }\n}\n\n/**\n * {@inheritDoc Conditions}\n *\n * @group Conditions\n * @type {Conditions}\n */\nexport let conditions;\n","import { Registry } from \"./base-registry.mjs\";\nimport { RegistryEntry } from \"./base-registry.mjs\";\n\n// Notes\n// PPC = Player Companion\n// PRG is in rare cases used to refer to core rulebook, but also sometimes to refer to the game in its entirety\n// PCh = Pathfinder Chronicles\n\nclass URLField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (!/^https?:\\/\\/[\\w\\d.]+\\.\\w+/.test(value)) throw new Error(\"Must be a valid URL\");\n  }\n}\n\nclass DateField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (value && Number.isNaN(Date.parse(value))) {\n      throw new Error(\"Must be valid date in YYYY-MM-DD format.\");\n    }\n  }\n}\n\nexport class Source extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const optionalString = (options = {}) =>\n      new fields.StringField({ required: false, nullable: true, blank: true, initial: undefined, ...options });\n\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({ nullable: false, blank: false, required: true }),\n      abbr: new fields.StringField({ nullable: false, blank: false, required: false, initial: undefined }), // Add constraints\n      date: new DateField({ required: false, nullable: true, blank: false, initial: undefined }),\n      pages: new fields.NumberField({\n        required: false,\n        integer: true,\n        min: 1,\n        initial: undefined,\n        label: \"Page count\",\n      }),\n      isbn: optionalString(), // TODO: Validate ISBN\n      publisher: new fields.StringField({ required: false, blank: false, nullable: false, initial: \"Paizo\" }), // Assume Paizo\n      level: new fields.NumberField({\n        required: false,\n        min: 1,\n        integer: true,\n        initial: undefined,\n        label: \"Starting level\",\n      }),\n      tieIn: optionalString(),\n      url: new URLField({ required: false, nullable: true, blank: true, initial: undefined }),\n      legacy: new fields.BooleanField({ required: false, initial: false, label: \"D&D 3.5 Material\" }),\n      type: optionalString({ choices: () => this.TYPES }),\n    };\n  }\n\n  /**\n   * An array of allowed types of sources.\n   *\n   * core: Core book\n   * companion: Player companion\n   * setting: Campaign setting book\n   * ap: Adventure path\n   * pg: Adventure path - player guide\n   * comic: Comic\n   * pfs: Pathfinder Society\n   * module: Module\n   *\n   * @internal\n   */\n  static TYPES = /** @type {const} */ ([\"core\", \"setting\", \"ap\", \"module\", \"companion\", \"pg\", \"comic\", \"pfs\"]);\n}\n\n/**\n * The singleton registry of sources.\n *\n * At runtime this registry is accessible as `pf1.registry.sources`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Source}\n * @augments {Registry<Source>}\n */\nexport class Sources extends Registry {\n  /** @inheritDoc */\n  static model = Source;\n\n  /**\n   * Book type prefix\n   *\n   * @internal\n   */\n  static PREFIXES = /** @type {const} */ ({\n    companion: \"PPC\", // Pathfinder Player Companion\n  });\n\n  /** @inheritDoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"PZO1110\",\n      name: \"Core Rulebook\",\n      abbr: \"CRB\",\n      date: \"2009-08-13\",\n      pages: 576,\n      isbn: \"978-1-60125-150-3\",\n      url: \"https://paizo.com/products/btpy88yj\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1114\",\n      name: \"GameMastery Guide\",\n      abbr: \"GMG\",\n      date: \"2010-06-23\",\n      pages: 320,\n      isbn: \"978-1-60125-217-3\",\n      url: \"https://paizo.com/products/btpy8ffn\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1112\",\n      name: \"Bestiary [1]\",\n      date: \"2009-10-21\",\n      pages: 320,\n      isbn: \"978-1-60125-183-1\",\n      url: \"https://paizo.com/products/btpy8auu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1116\",\n      name: \"Bestiary 2\",\n      date: \"2010-12-29\",\n      pages: 320,\n      isbn: \"978-1-60125-268-5\",\n      url: \"https://paizo.com/products/btpy8hif\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1120\",\n      name: \"Bestiary 3\",\n      date: \"2011-12-21\",\n      pages: 320,\n      isbn: \"978-1-60125-378-1\",\n      url: \"https://paizo.com/products/btpy8odu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1127\",\n      name: \"Bestiary 4\",\n      date: \"2013-10-30\",\n      pages: 320,\n      isbn: \"978-1-60125-575-4\",\n      url: \"https://paizo.com/products/btpy91ds\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1133\",\n      name: \"Bestiary 5\",\n      date: \"2015-11-18\",\n      pages: 320,\n      isbn: \"978-1-60125-792-5\",\n      url: \"https://paizo.com/products/btpy9g9x\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1137\",\n      name: \"Bestiary 6\",\n      date: \"2017-04-26\",\n      pages: 320,\n      isbn: \"978-1-60125-931-8\",\n      url: \"https://paizo.com/products/btpy9r1y\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1129\",\n      name: \"Advanced Class Guide\",\n      abbr: \"ACG\",\n      date: \"2015-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-671-3\",\n      url: \"https://paizo.com/products/btpy978v\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1115\",\n      name: \"Advanced Player's Guide\",\n      abbr: \"APG\",\n      date: \"2010-08-05\",\n      pages: 320,\n      isbn: \"978-1-60125-246-3\",\n      url: \"https://paizo.com/products/btpy8fo1\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1121\",\n      name: \"Advanced Race Guide\",\n      abbr: \"ARG\",\n      date: \"2012-06-20\",\n      pages: 256,\n      isbn: \"978-1-60125-390-3\",\n      url: \"https://paizo.com/products/btpy8rv2\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1138\",\n      name: \"Adventurer's Guide\",\n      date: \"2017-05-24\",\n      pages: 192,\n      isbn: \"978-1-60125-938-7\",\n      url: \"https://paizo.com/products/btpy9sjo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1128\",\n      name: \"Strategy Guide\",\n      date: \"2015-03-25\",\n      pages: 160,\n      isbn: \"978-1-60125-626-3\",\n      url: \"https://paizo.com/products/btpy99sk\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1132\",\n      name: \"Occult Adventures\",\n      abbr: \"OA\",\n      date: \"2015-07-29\",\n      pages: 272,\n      isbn: \"978-1-60125-762-8\",\n      url: \"https://paizo.com/products/btpy9egu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1131\",\n      name: \"Pathfinder Unchained\",\n      date: \"2015-04-29\",\n      pages: 256,\n      isbn: \"978-1-60125-715-4\",\n      url: \"https://paizo.com/products/btpy9c25\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1136\",\n      name: \"Villain Codex\",\n      date: \"2016-11-16\",\n      pages: 256,\n      isbn: \"978-1-60125-906-6\",\n      url: \"https://paizo.com/products/btpy9oo7\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1130\",\n      name: \"Monster Codex\",\n      abbr: \"MC\",\n      date: \"2014-10-22\",\n      pages: 256,\n      isbn: \"978-1-60125-686-7\",\n      url: \"https://paizo.com/products/btpy9926\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1135\",\n      name: \"Horror Adventures\",\n      date: \"2016-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-849-6\",\n      url: \"https://paizo.com/products/btpy9n5a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1126\",\n      name: \"Mythic Adventures\",\n      date: \"2013-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-549-5\",\n      url: \"https://paizo.com/products/btpy8ywe\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1124\",\n      name: \"NPC Codex\",\n      date: \"2012-11-21\",\n      pages: 320,\n      isbn: \"978-1-60125-467-2\",\n      url: \"https://paizo.com/products/btpy8v3a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1125\",\n      name: \"Ultimate Campaign\",\n      date: \"2013-05-29\",\n      pages: 256,\n      isbn: \"978-1-60125-498-6\",\n      url: \"https://paizo.com/products/btpy8x64\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1118\",\n      name: \"Ultimate Combat\",\n      abbr: \"UC\",\n      date: \"2011-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-359-0\",\n      url: \"https://paizo.com/products/btpy8mcz\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1123\",\n      name: \"Ultimate Equipment\",\n      abbr: \"UE\",\n      date: \"2012-08-16\",\n      pages: 400,\n      isbn: \"978-1-60125-449-8\",\n      url: \"https://paizo.com/products/btpy8tmc\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1134\",\n      name: \"Ultimate Intrigue\",\n      abbr: \"UI\",\n      date: \"2016-03-30\",\n      pages: 256,\n      isbn: \"978-1-60125-826-7\",\n      url: \"https://paizo.com/products/btpy9j6p\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1117\",\n      name: \"Ultimate Magic\",\n      abbr: \"UM\",\n      date: \"2011-05-08\",\n      pages: 256,\n      isbn: \"978-1-60125-299-9\",\n      url: \"https://paizo.com/products/btpy8k8r\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1139\",\n      name: \"Book of the Damned\",\n      date: \"2017-09-27\",\n      pages: 258,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9tok\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1140\",\n      name: \"Ultimate Wilderness\",\n      abbr: \"UW\",\n      date: \"2017-11-15\",\n      pages: 288,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9ujo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1141\",\n      name: \"Planar Adventures\",\n      abbr: \"PA\",\n      date: \"2018-06-27\",\n      pages: 192,\n      isbn: \"978-1-64078-044-6\",\n      url: \"https://paizo.com/products/btpya1am\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Player's Guide\",\n      date: \"2007-09-01\",\n      pages: 16,\n      isbn: \"978-1-60125-059-9\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8bd9\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9001\",\n      name: \"Rise of the Runelords #1: Burnt Offerings\",\n      abbr: \"RotR-1\",\n      date: \"2007-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-035-3\",\n      url: \"https://paizo.com/products/btpy7zkr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9002\",\n      name: \"Rise of the Runelords #2: The Skinsaw Murders\",\n      abbr: \"RotR-2\",\n      date: \"2007-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-037-7\",\n      url: \"https://paizo.com/products/btpy8029\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9003\",\n      name: \"Rise of the Runelords #3: The Hook Mountain Massacre\",\n      abbr: \"RotR-3\",\n      date: \"2007-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-038-4\",\n      url: \"https://paizo.com/products/btpy80e8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9004\",\n      name: \"Rise of the Runelords #4: Fortress of the Stone Giants\",\n      abbr: \"RotR-4\",\n      date: \"2007-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-039-1\",\n      url: \"https://paizo.com/products/btpy80hm\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9005\",\n      name: \"Rise of the Runelords #5: Sins of the Saviors\",\n      abbr: \"RotR-5\",\n      date: \"2007-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-040-7\",\n      url: \"https://paizo.com/products/btpy815p\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9006\",\n      name: \"Rise of the Runelords #6: Spires of Xin-Shalast\",\n      abbr: \"RotR-6\",\n      date: \"2008-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-041-4\",\n      url: \"https://paizo.com/products/btpy817c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-2S\",\n      name: \"Curse of the Crimson Throne Player's Guide\",\n      date: \"2008-02-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy806v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1021\",\n      name: \"Curse of the Crimson Throne\",\n      date: \"2016-10-01\",\n      pages: 480,\n      isbn: \"978-1-60125-890-8\",\n      url: \"https://paizo.com/products/btpy9nme\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9007\",\n      name: \"Curse of the Crimson Throne #1: Edge of Anarchy\",\n      abbr: \"CotCT-1\",\n      date: \"2008-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-088-9\",\n      url: \"https://paizo.com/products/btpy81xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9008\",\n      name: \"Curse of the Crimson Throne #2: Seven Days to the Grave\",\n      abbr: \"CotCT-2\",\n      date: \"2008-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-091-9\",\n      url: \"https://paizo.com/products/btpy82qy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9009\",\n      name: \"Curse of the Crimson Throne #3: Escape From Old Korvosa\",\n      abbr: \"CotCT-3\",\n      date: \"2008-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-092-6\",\n      url: \"https://paizo.com/products/btpy82t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9010\",\n      name: \"Curse of the Crimson Throne #4: A History of Ashes\",\n      abbr: \"CotCT-4\",\n      date: \"2008-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-093-3\",\n      url: \"https://paizo.com/products/btpy82u9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9011\",\n      name: \"Curse of the Crimson Throne #5: Skeletons of Scarwall\",\n      abbr: \"CotCT-5\",\n      date: \"2008-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-099-5\",\n      url: \"https://paizo.com/products/btpy83yw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9012\",\n      name: \"Curse of the Crimson Throne #6: Crown of Fangs\",\n      abbr: \"CotCT-6\",\n      date: \"2008-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-109-1\",\n      url: \"https://paizo.com/products/btpy84el\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9401\",\n      name: \"Second Darkness Player's Guide\",\n      date: \"2008-08-01\",\n      pages: 32,\n      isbn: \"978-1-60125-142-8\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy84en\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9013\",\n      name: \"Second Darkness #1: Shadow in the Sky\",\n      date: \"2008-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-115-2\",\n      url: \"https://paizo.com/products/btpy84em\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9014\",\n      name: \"Second Darkness #2: Children of the Void\",\n      date: \"2008-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-127-5\",\n      url: \"https://paizo.com/products/btpy85ed\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9015\",\n      name: \"Second Darkness #3: The Armageddon Echo\",\n      date: \"2008-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-128-2\",\n      url: \"https://paizo.com/products/btpy85ep\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9016\",\n      name: \"Second Darkness #4: Endless Night\",\n      date: \"2008-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-129-9\",\n      url: \"https://paizo.com/products/btpy85er\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9017\",\n      name: \"Second Darkness #5: A Memory of Darkness\",\n      date: \"2008-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-130-5\",\n      url: \"https://paizo.com/products/btpy86j6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9018\",\n      name: \"Second Darkness #6: Descent into Midnight\",\n      date: \"2009-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-131-2\",\n      url: \"https://paizo.com/products/btpy86v1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9404\",\n      name: \"Legacy of Fire Player's Guide\",\n      date: \"2009-03-01\",\n      pages: 32,\n      isbn: \"978-1-60125-168-8\",\n      tieIn: \"Legacy of Fire\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8737\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9019\",\n      name: \"Legacy of Fire #1: Howl of the Carrion King\",\n      abbr: \"LoF-1\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-159-6\",\n      url: \"https://paizo.com/products/btpy8735\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9020\",\n      name: \"Legacy of Fire #2: House of the Beast\",\n      abbr: \"LoF-2\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-160-2\",\n      url: \"https://paizo.com/products/btpy86xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9021\",\n      name: \"Legacy of Fire #3: The Jackal's Price\",\n      abbr: \"LoF-3\",\n      date: \"2009-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-161-9\",\n      url: \"https://paizo.com/products/btpy87uv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9022\",\n      name: \"Legacy of Fire #4: The End of Eternity\",\n      abbr: \"LoF-4\",\n      date: \"2009-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-173-2\",\n      url: \"https://paizo.com/products/btpy87ux\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9023\",\n      name: \"Legacy of Fire #5: The Impossible Eye\",\n      abbr: \"LoF-5\",\n      date: \"2009-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-179-4\",\n      url: \"https://paizo.com/products/btpy88tp\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9024\",\n      name: \"Legacy of Fire #6: The Final Wish\",\n      abbr: \"LoF-6\",\n      date: \"2009-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-185-5\",\n      url: \"https://paizo.com/products/btpy89a2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-5E\",\n      name: \"Council of Thieves Player's Guide\",\n      date: \"2009-08-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy89m7\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9025\",\n      name: \"Council of Thieves #1: The Bastards of Erebus\",\n      abbr: \"CoT-1\",\n      date: \"2009-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-190-9\",\n      url: \"https://paizo.com/products/btpy89a4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9026\",\n      name: \"Council of Thieves #2: The Sixfold Trial\",\n      abbr: \"CoT-2\",\n      date: \"2009-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-196-1\",\n      url: \"https://paizo.com/products/btpy89vw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9027\",\n      name: \"Council of Thieves #3: What Lies in Dust\",\n      abbr: \"CoT-3\",\n      date: \"2009-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-197-8\",\n      url: \"https://paizo.com/products/btpy8b8h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9028\",\n      name: \"Council of Thieves #4: The Infernal Syndrom\",\n      abbr: \"CoT-4\",\n      date: \"2009-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-198-5\",\n      url: \"https://paizo.com/products/btpy8b9h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9029\",\n      name: \"Council of Thieves #5: Mother of Flies\",\n      abbr: \"CoT-5\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-199-2\",\n      url: \"https://paizo.com/products/btpy8bc1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9030\",\n      name: \"Council of Thieves #6: The Twice-Damned Prince\",\n      abbr: \"CoT-6\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-226-5\",\n      url: \"https://paizo.com/products/btpy8d54\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-6E\",\n      name: \"Kingmaker Player's Guide\",\n      date: \"2010-03-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy8dqh\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9031\",\n      name: \"Kingmaker #1: Stolen Land\",\n      date: \"2010-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-229-6\",\n      url: \"https://paizo.com/products/btpy8dhc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9032\",\n      name: \"Kingmaker #2: Rivers Run Red\",\n      date: \"2010-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-233-3\",\n      url: \"https://paizo.com/products/btpy8dml\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9033\",\n      name: \"Kingmaker #3: The Varnhold Vanishing\",\n      date: \"2010-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-234-0\",\n      url: \"https://paizo.com/products/btpy8e7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9034\",\n      name: \"Kingmaker #4: Blood for Blood\",\n      date: \"2010-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-251-7\",\n      url: \"https://paizo.com/products/btpy8b7w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9035\",\n      name: \"Kingmaker #5: War of the River Kings\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-252-4\",\n      url: \"https://paizo.com/products/btpy8b7u\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9036\",\n      name: \"Kingmaker #6: Sound of a Thousand Screams\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-253-1\",\n      url: \"https://paizo.com/products/btpy8b7x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-7E\",\n      name: \"Serpent's Skull Player's Guide\",\n      date: \"2010-07-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy8g6d\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9037\",\n      name: \"Serpent's Skull #1: Soul for Smuggler's Shiv\",\n      date: \"2010-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-254-8\",\n      url: \"https://paizo.com/products/btpy8b7v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9038\",\n      name: \"Serpent's Skull #2: Racing to Ruin\",\n      date: \"2010-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-273-9\",\n      url: \"https://paizo.com/products/btpy8ddc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9039\",\n      name: \"Serpent's Skull #3: City of Seven Spears\",\n      date: \"2010-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-274-6\",\n      url: \"https://paizo.com/products/btpy8h6h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9040\",\n      name: \"Serpent's Skull #4: Vaults of Madness\",\n      date: \"2010-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-275-3\",\n      url: \"https://paizo.com/products/btpy8dde\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9041\",\n      name: \"Serpent's Skull #5: The Thousand Fangs Below\",\n      date: \"2011-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-276-0\",\n      url: \"https://paizo.com/products/btpy8ddf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9042\",\n      name: \"Serpent's Skull #6: Sanctum of the Serpent God\",\n      date: \"2011-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-307-1\",\n      url: \"https://paizo.com/products/btpy8g3i\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-8E\",\n      name: \"Carrion Crown Player's Guide\",\n      date: \"2011-03-01\",\n      pages: 15,\n      url: \"https://paizo.com/products/btpy8j0q\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9043\",\n      name: \"Carrion Crown #1: The Haunting of Harrowstone\",\n      abbr: \"CC-1\",\n      date: \"2011-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-308-8\",\n      url: \"https://paizo.com/products/btpy8g7a\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9044\",\n      name: \"Carrion Crown #2: Trial of the Beast\",\n      abbr: \"CC-2\",\n      date: \"2011-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-309-5\",\n      url: \"https://paizo.com/products/btpy8g7b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9045\",\n      name: \"Carrion Crown #3: Broken Moon\",\n      abbr: \"CC-3\",\n      date: \"2011-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-310-1\",\n      url: \"https://paizo.com/products/btpy8g7c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9046\",\n      name: \"Carrion Crown #4: Wake of the Watcher\",\n      abbr: \"CC-4\",\n      date: \"2011-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-311-8\",\n      url: \"https://paizo.com/products/btpy8g7d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9047\",\n      name: \"Carrion Crown #5: Ashes at Dawn\",\n      abbr: \"CC-5\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-312-5\",\n      url: \"https://paizo.com/products/btpy8g7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9048\",\n      name: \"Carrion Crown #6: Shadows of Gallowspire\",\n      abbr: \"CC-6\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-313-2\",\n      url: \"https://paizo.com/products/btpy8g7t\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-9E\",\n      name: \"Jade Regent Player's Guide\",\n      date: \"2011-07-27\",\n      pages: 28,\n      url: \"https://paizo.com/products/btpy8mh3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9049\",\n      name: \"Jade Regent #1: The Brinewall Legacy\",\n      date: \"2011-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-361-3\",\n      url: \"https://paizo.com/products/btpy8j35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9050\",\n      name: \"Jade Regent #2: Night of Frozen Shadows\",\n      date: \"2011-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-366-8\",\n      url: \"https://paizo.com/products/btpy8jrr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9051\",\n      name: \"Jade Regent #3: The Hungry Storm\",\n      date: \"2011-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-374-3\",\n      url: \"https://paizo.com/products/btpy8kgv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9052\",\n      name: \"Jade Regent #4: Forest of Spirits\",\n      date: \"2011-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-380-4\",\n      url: \"https://paizo.com/products/btpy8l2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9053\",\n      name: \"Jade Regent #5: Tide of Honor\",\n      date: \"2012-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-385-9\",\n      url: \"https://paizo.com/products/btpy8mh0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9054\",\n      name: \"Jade Regent #6: The Empty Throne\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-400-9\",\n      url: \"https://paizo.com/products/btpy8mh1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-10E\",\n      name: \"Skull and Shackles Player's Guide\",\n      date: \"2012-02-01\",\n      pages: 30,\n      url: \"https://paizo.com/products/btpy8rwc\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9055\",\n      name: \"Skull & Shackles #1: The Wormwood Mutiny\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-404-7\",\n      url: \"https://paizo.com/products/btpy8mh2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9056\",\n      name: \"Skull & Shackles #2: Raiders of the Fever Sea\",\n      date: \"2012-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-409-2\",\n      url: \"https://paizo.com/products/btpy8moe\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9057\",\n      name: \"Skull & Shackles #3: Tempest Rising\",\n      date: \"2012-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-413-9\",\n      url: \"https://paizo.com/products/btpy8mof\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9058\",\n      name: \"Skull & Shackles #4: Island of Empty Eyes\",\n      date: \"2012-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-416-0\",\n      url: \"https://paizo.com/products/btpy8mog\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9059\",\n      name: \"Skull & Shackles #5: The Price of Infamy\",\n      date: \"2012-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-421-4\",\n      url: \"https://paizo.com/products/btpy8moh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9060\",\n      name: \"Skull & Shackles #6: From Hell's Heart\",\n      date: \"2012-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-422-1\",\n      url: \"https://paizo.com/products/btpy8moi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Anniversary Edition Player's Guide\",\n      date: \"2012-07-01\",\n      pages: 17,\n      url: \"https://paizo.com/products/btpy8tgl\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1002\",\n      name: \"Rise of the Runelords Anniversary Edition\",\n      abbr: \"RotRAE\",\n      date: \"2012-07-01\",\n      pages: 432,\n      isbn: \"978-1-60125-436-8\",\n      url: \"https://paizo.com/products/btpy8tc0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-11E\",\n      name: \"Shattered Star Player's Guide\",\n      date: \"2012-08-01\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy8txj\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9061\",\n      name: \"Shattered Star #1: Shards of Sin\",\n      date: \"2012-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-452-8\",\n      url: \"https://paizo.com/products/btpy8tmh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9062\",\n      name: \"Shattered Star #2: Curse of the Lady's Light\",\n      date: \"2012-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-459-7\",\n      url: \"https://paizo.com/products/btpy8run\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9063\",\n      name: \"Shattered Star #3: The Asylum Stone\",\n      date: \"2012-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-469-6\",\n      url: \"https://paizo.com/products/btpy8sds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9064\",\n      name: \"Shattered Star #4: Beyond the Doomsday Door\",\n      date: \"2012-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-474-0\",\n      url: \"https://paizo.com/products/btpy8t35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9065\",\n      name: \"Shattered Star #5: Into the Nightmare Rift\",\n      date: \"2012-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-487-0\",\n      url: \"https://paizo.com/products/btpy8tdh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9066\",\n      name: \"Shattered Star #6: The Dead Heart of Xin\",\n      date: \"2013-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-491-7\",\n      url: \"https://paizo.com/products/btpy8tvr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-12E\",\n      name: \"Reign of Winter Player's Guide\",\n      date: \"2013-02-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy8x1t\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9067\",\n      name: \"Reign of Winter #1: The Snows of Summer\",\n      date: \"2013-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-492-4\",\n      url: \"https://paizo.com/products/btpy8ubg\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9068\",\n      name: \"Reign of Winter #2: The Shackled Hut\",\n      date: \"2013-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-493-1\",\n      url: \"https://paizo.com/products/btpy8uwz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9069\",\n      name: \"Reign of Winter #3: Maiden, Mother, Crone\",\n      date: \"2013-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-494-8\",\n      url: \"https://paizo.com/products/btpy8xbz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9070\",\n      name: \"Reign of Winter #4: The Frozen Stars\",\n      date: \"2013-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-495-5\",\n      url: \"https://paizo.com/products/btpy8vss\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9071\",\n      name: \"Reign of Winter #5: Rasputin Must Die!\",\n      date: \"2013-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-496-2\",\n      url: \"https://paizo.com/products/btpy8wbv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9072\",\n      name: \"Reign of Winter #6: The Witch Queen's Revenge\",\n      date: \"2013-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-497-9\",\n      url: \"https://paizo.com/products/btpy8wve\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-13E\",\n      name: \"Wrath of the Righteous Player's Guide\",\n      date: \"2013-08-09\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy919c\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9073\",\n      name: \"Wrath of the Righteous #1: The Worldwound Incursion\",\n      date: \"2013-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-553-2\",\n      url: \"https://paizo.com/products/btpy8x8e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9074\",\n      name: \"Wrath of the Righteous #2: Sword of Valor\",\n      date: \"2013-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-568-6\",\n      url: \"https://paizo.com/products/btpy8xsi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9075\",\n      name: \"Wrath of the Righteous #3: Demon's Heresy\",\n      date: \"2013-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-577-8\",\n      url: \"https://paizo.com/products/btpy8yor\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9076\",\n      name: \"Wrath of the Righteous #4: The Midnight Isles\",\n      date: \"2013-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-585-3\",\n      url: \"https://paizo.com/products/btpy8z6x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9077\",\n      name: \"Wrath of the Righteous #5: Herald of the Ivory Labyrinth\",\n      date: \"2014-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-586-0\",\n      url: \"https://paizo.com/products/btpy909v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9078\",\n      name: \"Wrath of the Righteous #6: City of Locusts\",\n      date: \"2014-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-587-7\",\n      url: \"https://paizo.com/products/btpy921g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-14E\",\n      name: \"Mummy's Mask Player's Guide\",\n      date: \"2014-03-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy94z3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9079\",\n      name: \"Mummy's Mask #1: The Half-Dead City\",\n      date: \"2014-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-588-4\",\n      url: \"https://paizo.com/products/btpy94qz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9080\",\n      name: \"Mummy's Mask #2: Empty Graves\",\n      date: \"2014-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-589-1\",\n      url: \"https://paizo.com/products/btpy94vv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9081\",\n      name: \"Mummy's Mask #3: Shifting Sands\",\n      date: \"2014-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-590-7\",\n      url: \"https://paizo.com/products/btpy94qb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9082\",\n      name: \"Mummy's Mask #4: Secrets of the Sphinx\",\n      date: \"2014-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-591-4\",\n      url: \"https://paizo.com/products/btpy9386\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9083\",\n      name: \"Mummy's Mask #5: The Slave Trenches of Hakotep\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-592-1\",\n      url: \"https://paizo.com/products/btpy97at\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9084\",\n      name: \"Mummy's Mask #6: Pyramid of the Sky Pharaoh\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-593-8\",\n      url: \"https://paizo.com/products/btpy97av\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-15E\",\n      name: \"Iron Gods Player's Guide\",\n      date: \"2014-08-05\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy98lf\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9085\",\n      name: \"Iron Gods #1: Fires of Creation\",\n      date: \"2014-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-673-7\",\n      url: \"https://paizo.com/products/btpy95br\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9086\",\n      name: \"Iron Gods #2: Lords of Rust\",\n      date: \"2014-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-678-2\",\n      url: \"https://paizo.com/products/btpy95bs\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9087\",\n      name: \"Iron Gods #3: The Choking Tower\",\n      date: \"2014-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-688-1\",\n      url: \"https://paizo.com/products/btpy95bt\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9088\",\n      name: \"Iron Gods #4: Valley of the Brain Collectors\",\n      date: \"2014-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-704-8\",\n      url: \"https://paizo.com/products/btpy95bu\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9089\",\n      name: \"Iron Gods #5: Palace of Fallen Stars\",\n      date: \"2014-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-711-6\",\n      url: \"https://paizo.com/products/btpy95bv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9090\",\n      name: \"Iron Gods #6: The Divinity Drive\",\n      date: \"2015-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-724-6\",\n      url: \"https://paizo.com/products/btpy95bw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-16E\",\n      name: \"Giantslayer Player's Guide\",\n      date: \"2015-01-25\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9bsv\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9091\",\n      name: \"Giantslayer #1: Battle of Bloodmarch Hill\",\n      date: \"2015-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-725-3\",\n      url: \"https://paizo.com/products/btpy96ps\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9092\",\n      name: \"Giantslayer #2: The Hill Giant's Pledge\",\n      date: \"2015-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-726-0\",\n      url: \"https://paizo.com/products/btpy98t4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9093\",\n      name: \"Giantslayer #3: Forge of the Giant God\",\n      date: \"2015-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-727-7\",\n      url: \"https://paizo.com/products/btpy98t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9094\",\n      name: \"Giantslayer #4: Ice Tomb of the Giant Queen\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-728-4\",\n      url: \"https://paizo.com/products/btpy98t6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9095\",\n      name: \"Giantslayer #5: Anvil of Fire\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-729-1\",\n      url: \"https://paizo.com/products/btpy98t7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9096\",\n      name: \"Giantslayer #6: Shadow of the Storm Tyrant\",\n      date: \"2015-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-730-7\",\n      url: \"https://paizo.com/products/btpy98t8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-17E\",\n      name: \"Hell's Rebels Player's Guide\",\n      date: \"2015-08-12\",\n      pages: 34,\n      url: \"https://paizo.com/products/btpy9g44\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9097\",\n      name: \"Hell's Rebels #1: In Hell's Bright Shadow\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-768-0\",\n      url: \"https://paizo.com/products/btpy98t9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9098\",\n      name: \"Hell's Rebels #2: Turn of the Torrent\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-784-0\",\n      url: \"https://paizo.com/products/btpy98ta\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9099\",\n      name: \"Hell's Rebels #3: Dance of the Damned\",\n      date: \"2015-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-788-8\",\n      url: \"https://paizo.com/products/btpy98tb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90100\",\n      name: \"Hell's Rebels #4: A Song of Silver\",\n      date: \"2015-12-01\",\n      pages: 128,\n      isbn: \"978-1-60125-795-6\",\n      url: \"https://paizo.com/products/btpy98tf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90101\",\n      name: \"Hell's Rebels #5: The Kintargo Contract\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-800-7\",\n      url: \"https://paizo.com/products/btpy98td\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90102\",\n      name: \"Hell's Rebels #6: Breaking the Bones of Hell\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-808-3\",\n      url: \"https://paizo.com/products/btpy9i8d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-18E\",\n      name: \"Hell's Vengeance Player's Guide\",\n      date: \"2016-02-25\",\n      pages: 20,\n      url: \"https://paizo.com/products/btpy9jva\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90103\",\n      name: \"Hell's Vengeance #1: The Hellfire Compact\",\n      date: \"2016-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-818-2\",\n      url: \"https://paizo.com/products/btpy9gds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90104\",\n      name: \"Hell's Vengeance #2: Wrath of Thrune\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-824-3\",\n      url: \"https://paizo.com/products/btpy9h32\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90105\",\n      name: \"Hell's Vengeance #3: The Inferno Gate\",\n      date: \"2016-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-827-4\",\n      url: \"https://paizo.com/products/btpy9hj9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90106\",\n      name: \"Hell's Vengeance #4: For Queen & Empire\",\n      date: \"2016-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-836-6\",\n      url: \"https://paizo.com/products/btpy9ics\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90107\",\n      name: \"Hell's Vengeance #5: Scourge of the Godclaw\",\n      date: \"2016-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-842-7\",\n      url: \"https://paizo.com/products/btpy9ips\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90108\",\n      name: \"Hell's Vengeance #6: Hell Comes to Westcrown\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-851-9\",\n      url: \"https://paizo.com/products/btpy9jd0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-19E\",\n      name: \"Strange Aeons Player's Guide\",\n      date: \"2016-08-17\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9nrw\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90109\",\n      name: \"Strange Aeons #1: In Search of Sanity\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-882-3\",\n      url: \"https://paizo.com/products/btpy9k5o\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90110\",\n      name: \"Strange Aeons #2: The Thrushmoor Terror\",\n      date: \"2016-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-892-2\",\n      url: \"https://paizo.com/products/btpy9l3g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90111\",\n      name: \"Strange Aeons #3: Dreams of the Yellow King\",\n      date: \"2016-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-899-1\",\n      url: \"https://paizo.com/products/btpy9mbj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90112\",\n      name: \"Strange Aeons #4: The Whisper Out of Time\",\n      date: \"2016-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-908-0\",\n      url: \"https://paizo.com/products/btpy9n12\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90113\",\n      name: \"Strange Aeons #5: What Grows Within\",\n      date: \"2017-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-913-4\",\n      url: \"https://paizo.com/products/btpy9nd3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90114\",\n      name: \"Strange Aeons #6: Black Stars Beckon\",\n      date: \"2017-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-919-6\",\n      url: \"https://paizo.com/products/btpy9nd9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-20E\",\n      name: \"Ironfang Invasion Player's Guide\",\n      date: \"2017-03-16\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9sc5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90115\",\n      name: \"Ironfang Invasion #1: Trail of the Hunted\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-926-4\",\n      url: \"https://paizo.com/products/btpy9npj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90116\",\n      name: \"Ironfang Invasion #2: Fangs of War\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-932-5\",\n      url: \"https://paizo.com/products/btpy9npk\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90117\",\n      name: \"Ironfang Invasion #3: Assault on Longshadow\",\n      date: \"2017-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-935-6\",\n      url: \"https://paizo.com/products/btpy9p1h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #4: Siege of Stone\",\n      date: \"2017-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-940-0\",\n      url: \"https://paizo.com/products/btpy9pn4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #5: Prisoners of the Blight\",\n      date: \"2017-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-943-1\",\n      url: \"https://paizo.com/products/btpy9npn\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90120\",\n      name: \"Ironfang Invasion #6: Vault of the Onyx Citadel\",\n      date: \"2017-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-952-3\",\n      url: \"https://paizo.com/products/btpy9pno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-21E\",\n      name: \"Ruins of Azlant Player's Guide\",\n      date: \"2017-08-03\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9uir\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90121\",\n      name: \"Ruins of Azlant #1: The Lost Outpost\",\n      date: \"2017-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-964-6\",\n      url: \"https://paizo.com/products/btpy9qya\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90122\",\n      name: \"Ruins of Azlant #2: Into the Shattered Continent\",\n      date: \"2017-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-972-1\",\n      url: \"https://paizo.com/products/btpy9uk0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90123\",\n      name: \"Ruins of Azlant #3: The Flooded Cathedral\",\n      date: \"2017-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-981-3\",\n      url: \"https://paizo.com/products/btpy9uk2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90124\",\n      name: \"Ruins of Azlant #4: City in the Deep\",\n      date: \"2017-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-988-2\",\n      url: \"https://paizo.com/products/btpy9x2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90125\",\n      name: \"Ruins of Azlant #5: Tower of the Drowned Dead\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-998-1\",\n      url: \"https://paizo.com/products/btpy9xa1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90126\",\n      name: \"Ruins of Azlant #6: Beyond the Veiled Past\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-009-5\",\n      url: \"https://paizo.com/products/btpy9xf0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-22E\",\n      name: \"War for the Crown Player's Guide\",\n      date: \"2018-03-22\",\n      pages: 18,\n      url: \"https://paizo.com/products/btpya08v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90127\",\n      name: \"War for the Crown #1: Crownfall\",\n      date: \"2018-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-015-6\",\n      url: \"https://paizo.com/products/btpy9zk7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90128\",\n      name: \"War for the Crown #2: Songbird, Scion, Saboteur\",\n      date: \"2018-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-025-5\",\n      url: \"https://paizo.com/products/btpya04x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90129\",\n      name: \"War for the Crown #3: The Twilight Child\",\n      date: \"2018-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-032-3\",\n      url: \"https://paizo.com/products/btpya0fi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90130\",\n      name: \"War for the Crown #4: City in the Lion's Eye\",\n      date: \"2018-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-037-8\",\n      url: \"https://paizo.com/products/btpy9wmy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90131\",\n      name: \"War for the Crown #5: The Reaper's Right Hand\",\n      date: \"2018-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-045-3\",\n      url: \"https://paizo.com/products/btpy9x04\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90132\",\n      name: \"War for the Crown #6: The Six-Legend Soul\",\n      date: \"2018-07-01\",\n      pages: 96,\n      isbn: \"978-1-64078-052-1\",\n      url: \"https://paizo.com/products/btpy9xdq\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-23E\",\n      name: \"Return of the Runelords Player's Guide\",\n      date: \"2018-09-05\",\n      pages: 14,\n      url: \"https://paizo.com/products/btq01su5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90133\",\n      name: \"Return of the Runelords #1: Secrets of Roderic's Cove\",\n      date: \"2018-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-062-0\",\n      url: \"https://paizo.com/products/btpy9y26\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90134\",\n      name: \"Return of the Runelords #2: It Came from Hollow Mountain\",\n      date: \"2018-09-01\",\n      pages: 96,\n      isbn: \"978-1-64078-070-5\",\n      url: \"https://paizo.com/products/btpy9z14\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90135\",\n      name: \"Return of the Runelords #3: Runeplague\",\n      date: \"2018-10-01\",\n      pages: 96,\n      isbn: \"978-1-64078-079-8\",\n      url: \"https://paizo.com/products/btpy9zsl\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90136\",\n      name: \"Return of the Runelords #4: Temple of the Peacock Spirit\",\n      date: \"2018-11-01\",\n      pages: 96,\n      isbn: \"978-1-64078-091-0\",\n      url: \"https://paizo.com/products/btpya0b5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90137\",\n      name: \"Return of the Runelords #5: The City Outside of Time\",\n      date: \"2018-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-098-9\",\n      url: \"https://paizo.com/products/btq01vak\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90138\",\n      name: \"Return of the Runelords #6: Rise of New Thassilon\",\n      date: \"2019-01-01\",\n      pages: 96,\n      isbn: \"978-1-64078-106-1\",\n      url: \"https://paizo.com/products/btq01w1w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-24E\",\n      name: \"Tyrant's Grasp Player's Guide\",\n      date: \"2019-02-08\",\n      pages: 9,\n      url: \"https://paizo.com/products/btq01xdp\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90139\",\n      name: \"Tyrant's Grasp #1: The Dead Roads\",\n      date: \"2019-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-111-5\",\n      url: \"https://paizo.com/products/btq01ws3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90140\",\n      name: \"Tyrant's Grasp #2: Eulogy for Roslar's Coffer\",\n      date: \"2019-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-119-1\",\n      url: \"https://paizo.com/products/btq01x4b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90141\",\n      name: \"Tyrant's Grasp #3: Last Watch\",\n      date: \"2019-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-126-9\",\n      url: \"https://paizo.com/products/btq01x4f\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90142\",\n      name: \"Tyrant's Grasp #4: Gardens of Gallowspire\",\n      date: \"2019-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-134-4\",\n      url: \"https://paizo.com/products/btq01xj6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90143\",\n      name: \"Tyrant's Grasp #5: Borne by the Sun's Grace\",\n      date: \"2019-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-140-5\",\n      url: \"https://paizo.com/products/btq01znj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90144\",\n      name: \"Tyrant's Grasp #6: Midwives to Death\",\n      date: \"2019-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-144-3\",\n      url: \"https://paizo.com/products/btq01zno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9500\",\n      name: \"Hollow's Last Hope\",\n      date: \"2007-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9501\",\n      name: \"Crown of the Kobold King\",\n      date: \"2007-06-01\",\n      pages: 32,\n      level: 2,\n      isbn: \"978-1-60125-048-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9502\",\n      name: \"Conquest of Bloodsworn Vale\",\n      date: \"2007-07-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-049-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9503\",\n      name: \"Seven Swords of Sin\",\n      date: \"2007-08-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-050-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9504\",\n      name: \"Gallery of Evil\",\n      date: \"2007-09-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-051-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9505\",\n      name: \"Entombed with the Pharaohs\",\n      date: \"2007-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-052-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-TC1\",\n      name: \"Into the Haunted Forest\",\n      date: \"2007-11-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-108-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9506\",\n      name: \"Carnival of Tears\",\n      date: \"2007-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-055-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9507\",\n      name: \"Guardians of Dragonfall\",\n      date: \"2007-12-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-056-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9508\",\n      name: \"Hangman's Noose\",\n      date: \"2008-01-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-073-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9509\",\n      name: \"Crucible of Chaos\",\n      date: \"2008-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-074-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9510\",\n      name: \"River into Darkness\",\n      date: \"2008-03-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-075-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9511\",\n      name: \"The Demon Within\",\n      date: \"2008-04-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-076-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9512\",\n      name: \"Flight of the Red Raven\",\n      date: \"2008-05-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-101-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-2\",\n      name: \"Revenge of the Kobold King\",\n      date: \"2008-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9513\",\n      name: \"Tower of the Last Baron\",\n      date: \"2008-06-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-102-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9514\",\n      name: \"Treasure of Chimera Cove\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-119-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9515\",\n      name: \"Hungry Are the Dead\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-120-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9516\",\n      name: \"The Pact Stone Pyramid\",\n      date: \"2008-11-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-145-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9517\",\n      name: \"Clash of the Kingslayers\",\n      date: \"2009-01-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-125-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9518\",\n      name: \"Blood of Dragonscar\",\n      date: \"2009-03-01\",\n      pages: 32,\n      level: 15,\n      isbn: \"978-1-60125-170-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9519\",\n      name: \"Beyond the Vault of Souls\",\n      date: \"2009-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-174-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9520NM\",\n      name: \"Crypt of the Everflame\",\n      date: \"2009-08-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-186-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9521\",\n      name: \"Carrion Hill\",\n      date: \"2009-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-206-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9522\",\n      name: \"Masks of the Living God\",\n      date: \"2009-12-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-207-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9523\",\n      name: \"Realm of the Fellnight Queen\",\n      date: \"2010-02-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-224-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9524\",\n      name: \"City of Golden Death\",\n      date: \"2010-04-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-225-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9525\",\n      name: \"From Shore to Sea\",\n      date: \"2010-06-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-257-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-4\",\n      name: \"Master of the Fallen Fortress\",\n      date: \"2010-06-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-365-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9526\",\n      name: \"Curse of the Riven Sky\",\n      date: \"2010-07-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-258-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9527\",\n      name: \"The Witchwar Legacy\",\n      date: \"2010-09-01\",\n      pages: 32,\n      level: 17,\n      isbn: \"978-1-60125-279-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9528\",\n      name: \"The Godsmouth Heresy\",\n      date: \"2010-12-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-280-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9529\",\n      name: \"Cult of the Ebon Destroyers\",\n      date: \"2011-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-317-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9530\",\n      name: \"Tomb of the Iron Medusa\",\n      date: \"2011-04-01\",\n      pages: 32,\n      level: 14,\n      isbn: \"978-1-60125-318-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9531\",\n      name: \"Academy of Secrets\",\n      date: \"2011-06-01\",\n      pages: 32,\n      level: 13,\n      isbn: \"978-1-60125-343-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-5\",\n      name: \"We Be Goblins!\",\n      date: \"2011-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9532\",\n      name: \"The Harrowing\",\n      date: \"2011-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-355-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9533\",\n      name: \"Feast of Ravenmoor\",\n      date: \"2011-09-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-367-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9534\",\n      name: \"The Ruby Phoenix Tournament\",\n      date: \"2012-01-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-381-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9535\",\n      name: \"The Midnight Mirror\",\n      date: \"2012-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-401-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9536\",\n      name: \"No Response from Deepmar\",\n      date: \"2012-05-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-410-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-6\",\n      name: \"Dawn of the Scarlet Sun\",\n      date: \"2012-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9537\",\n      name: \"The Moonscar\",\n      date: \"2012-08-01\",\n      pages: 32,\n      level: 16,\n      isbn: \"978-1-60125-426-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9538\",\n      name: \"Murder's Mark\",\n      date: \"2012-10-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-447-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9539\",\n      name: \"Broken Chains\",\n      date: \"2013-03-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-461-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9540\",\n      name: \"Fangwood Keep\",\n      date: \"2013-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-476-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9541\",\n      name: \"Doom Comes to Dustpawn\",\n      date: \"2013-05-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-504-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-7\",\n      name: \"We Be Goblins Too!\",\n      date: \"2013-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9542\",\n      name: \"The Dragon's Demand\",\n      date: \"2013-07-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-527-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9543\",\n      name: \"Wardens of the Reborn Forge\",\n      date: \"2013-12-01\",\n      pages: 64,\n      level: 12,\n      isbn: \"978-1-60125-555-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9544\",\n      name: \"Tears at Bitter Manor\",\n      date: \"2014-03-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-613-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-8\",\n      name: \"Risen from the Sands\",\n      date: \"2014-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9545\",\n      name: \"The Emerald Spire Superdungeon\",\n      date: \"2014-06-01\",\n      pages: 160,\n      level: 1,\n      isbn: \"978-1-60125-655-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9546\",\n      name: \"Plunder & Peril\",\n      date: \"2014-11-01\",\n      pages: 64,\n      level: 4,\n      isbn: \"978-1-60125-680-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9547\",\n      name: \"Daughters of Fury\",\n      date: \"2015-02-01\",\n      pages: 64,\n      level: 3,\n      isbn: \"978-1-60125-706-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-9\",\n      name: \"We Be Goblins Free!\",\n      date: \"2015-06-01\",\n      pages: 16,\n      level: 4,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9548\",\n      name: \"Feast of Dust\",\n      date: \"2015-11-01\",\n      pages: 64,\n      level: 11,\n      isbn: \"978-1-60125-735-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9549\",\n      name: \"The House on Hook Street\",\n      date: \"2015-12-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-790-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9550\",\n      name: \"Down the Blighted Path\",\n      date: \"2016-02-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-815-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9551\",\n      name: \"Ire of the Storm\",\n      date: \"2016-05-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-830-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-10\",\n      name: \"We B4 Goblins!\",\n      date: \"2016-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9552\",\n      name: \"Gallows of Madness\",\n      date: \"2016-08-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-854-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9553\",\n      name: \"Seers of the Drowned City\",\n      date: \"2016-11-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-902-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGENA001\",\n      name: \"Heroes for Highdelve\",\n      date: \"2017-08-01\",\n      pages: 20,\n      level: 1,\n      isbn: \"978-1-64078-002-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGAUNTLET\",\n      name: \"The Gauntlet\",\n      date: \"2018-05-01\",\n      pages: 16,\n      level: 8,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-12\",\n      name: \"We Be 5uper Goblins!\",\n      date: \"2018-06-01\",\n      pages: 16,\n      level: 6,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9554\",\n      name: \"Cradle of Night\",\n      date: \"2018-12-01\",\n      pages: 64,\n      level: 8,\n      isbn: \"978-1-60125-991-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-14\",\n      name: \"We Be Heroes?\",\n      date: \"2019-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9402\",\n      name: \"Elves of Golarion\",\n      date: \"2008-10-01\",\n      isbn: \"978-1-60125-143-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9403\",\n      name: \"Osirion, Land of Pharaohs\",\n      date: \"2008-12-01\",\n      isbn: \"978-1-60125-144-2\",\n      url: \"https://paizo.com/products/btpy86j7\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9405\",\n      name: \"Taldor, Echoes of Glory\",\n      date: \"2009-04-01\",\n      isbn: \"978-1-60125-169-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9406\",\n      name: \"Qadira, Gateway to the East\",\n      date: \"2009-06-01\",\n      isbn: \"978-1-60125-180-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9407\",\n      name: \"Cheliax, Empire of Devils\",\n      date: \"2009-08-01\",\n      isbn: \"978-1-60125-191-6\",\n      tieIn: \"Council of Thieves\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9408\",\n      name: \"Dwarves of Golarion\",\n      date: \"2009-12-01\",\n      isbn: \"978-1-60125-204-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9409\",\n      name: \"Andoran, Spirit of Liberty\",\n      date: \"2010-01-01\",\n      isbn: \"978-1-60125-205-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9410\",\n      name: \"Adventurer's Armory\",\n      abbr: \"AA\",\n      date: \"2010-04-01\",\n      isbn: \"978-1-60125-222-7\",\n      tieIn: \"Kingmaker\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9411\",\n      name: \"Gnomes of Golarion\",\n      date: \"2010-05-01\",\n      isbn: \"978-1-60125-223-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9412\",\n      name: \"Sargava, the Lost Colony\",\n      date: \"2010-06-01\",\n      isbn: \"978-1-60125-255-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9413\",\n      name: \"Orcs of Golarion\",\n      date: \"2010-08-01\",\n      isbn: \"978-1-60125-256-2\",\n      tieIn: \"Serpent's Skull\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9414\",\n      name: \"Inner Sea Primer\",\n      date: \"2010-11-01\",\n      isbn: \"978-1-60125-277-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9415\",\n      name: \"Halflings of Golarion\",\n      date: \"2011-01-01\",\n      isbn: \"978-1-60125-278-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9416\",\n      name: \"Faiths of Purity\",\n      date: \"2011-04-01\",\n      isbn: \"978-1-60125-314-9\",\n      tieIn: \"Carrion Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9417\",\n      name: \"Humans of Golarion\",\n      date: \"2011-06-01\",\n      isbn: \"978-1-60125-315-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9418\",\n      name: \"Faiths of Balance\",\n      date: \"2011-07-01\",\n      isbn: \"978-1-60125-316-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9419\",\n      name: \"Goblins of Golarion\",\n      date: \"2011-08-01\",\n      isbn: \"978-1-60125-362-0\",\n      tieIn: \"Jade Regent\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9420\",\n      name: \"Faiths of Corruption\",\n      date: \"2011-10-01\",\n      isbn: \"978-1-60125-375-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9421\",\n      name: \"Dragon Empires Primer\",\n      date: \"2012-01-01\",\n      isbn: \"978-1-60125-386-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9422\",\n      name: \"Pirates of the Inner Sea\",\n      abbr: \"PotIS\",\n      date: \"2012-02-01\",\n      isbn: \"978-1-60125-405-4\",\n      tieIn: \"Skull & Shackles\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9423\",\n      name: \"Blood of Fiends\",\n      date: \"2012-04-01\",\n      isbn: \"978-1-60125-423-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9424\",\n      name: \"Blood of Angels\",\n      date: \"2012-07-01\",\n      isbn: \"978-1-60125-438-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9425\",\n      name: \"Varisia, Birthplace of Legends\",\n      date: \"2012-08-02\",\n      isbn: \"978-1-60125-453-5\",\n      tieIn: \"Shattered Star\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9426\",\n      name: \"Knights of the Inner Sea\",\n      date: \"2012-09-01\",\n      isbn: \"978-1-60125-460-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9427\",\n      name: \"Blood of the Night\",\n      date: \"2012-12-06\",\n      isbn: \"978-1-60125-470-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9428\",\n      name: \"People of the North\",\n      date: \"2013-01-22\",\n      isbn: \"978-1-60125-475-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9429\",\n      name: \"Animal Archive\",\n      date: \"2013-02-13\",\n      isbn: \"978-1-60125-488-7\",\n      tieIn: \"Reign of Winter\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9430\",\n      name: \"Dungeoneer's Handbook\",\n      abbr: \"DHB\",\n      date: \"2013-03-08\",\n      isbn: \"978-1-60125-510-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9431\",\n      name: \"Champions of Purity\",\n      date: \"2013-04-16\",\n      isbn: \"978-1-60125-511-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9432\",\n      name: \"Kobolds of Golarion\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-512-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9433\",\n      name: \"Quests & Campaigns\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-513-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9434\",\n      name: \"Dragonslayer's Handbook\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-526-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9435\",\n      name: \"Pathfinder Society Primer\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-534-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9436\",\n      name: \"Faiths & Philosophies\",\n      date: \"2013-08-19\",\n      isbn: \"978-1-60125-543-3\",\n      tieIn: \"Wrath of the Righteous\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9437\",\n      name: \"Demon Hunter's Handbook\",\n      date: \"2013-08-17\",\n      isbn: \"978-1-60125-554-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9438\",\n      name: \"Mythic Origins\",\n      date: \"2013-09-25\",\n      isbn: \"978-1-60125-569-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9439\",\n      name: \"Blood of the Moon\",\n      date: \"2013-10-21\",\n      isbn: \"978-1-60125-578-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9440\",\n      name: \"Magical Marketplace\",\n      abbr: \"MM\",\n      date: \"2013-12-11\",\n      isbn: \"978-1-60125-600-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9441\",\n      name: \"People of the Sands\",\n      date: \"2014-01-09\",\n      isbn: \"978-1-60125-601-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9442\",\n      name: \"Bastards of Golarion\",\n      date: \"2014-02-06\",\n      isbn: \"978-1-60125-602-7\",\n      tieIn: \"Mummy's Mask\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9443\",\n      name: \"Champions of Balance\",\n      date: \"2014-03-25\",\n      isbn: \"978-1-60125-603-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9444\",\n      name: \"Undead Slayer's Handbook\",\n      abbr: \"USH\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-604-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9445\",\n      name: \"Alchemy Manual\",\n      abbr: \"AM\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-605-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9446\",\n      name: \"The Harrow Handbook\",\n      date: \"2014-05-28\",\n      isbn: \"978-1-60125-650-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9447\",\n      name: \"Blood of the Elements\",\n      date: \"2014-06-25\",\n      isbn: \"978-1-60125-654-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9448\",\n      name: \"People of the River\",\n      date: \"2014-07-25\",\n      isbn: \"978-1-60125-666-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9449\",\n      name: \"People of the Stars\",\n      date: \"2014-08-14\",\n      isbn: \"978-1-60125-674-4\",\n      tieIn: \"Iron Gods\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9450\",\n      name: \"Champions of Corruption\",\n      date: \"2014-09-10\",\n      isbn: \"978-1-60125-679-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9451\",\n      name: \"Advanced Class Origins\",\n      date: \"2014-10-22\",\n      isbn: \"978-1-60125-689-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9452\",\n      name: \"Ranged Tactics Toolbox\",\n      date: \"2014-11-24\",\n      isbn: \"978-1-60125-705-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9453\",\n      name: \"Giant Hunter's Handbook\",\n      date: \"2014-12-17\",\n      isbn: \"978-1-60125-712-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9454\",\n      name: \"Familiar Folio\",\n      abbr: \"FF\",\n      date: \"2015-01-28\",\n      isbn: \"978-1-60125-731-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9455\",\n      name: \"Melee Tactics Toolbox\",\n      date: \"2015-03-25\",\n      isbn: \"978-1-60125-732-1\",\n      tieIn: \"Giant Slayer\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9456\",\n      name: \"Heroes of the Wild\",\n      date: \"2015-04-29\",\n      isbn: \"978-1-60125-733-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9457\",\n      name: \"Cohorts and Companions\",\n      date: \"2015-05-27\",\n      isbn: \"978-1-60125-734-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9458\",\n      name: \"Monster Summoner's Handbook\",\n      date: \"2015-06-24\",\n      isbn: \"978-1-60125-758-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9459\",\n      name: \"Dirty Tactics Toolbox\",\n      date: \"2015-09-02\",\n      isbn: \"978-1-60125-763-5\",\n      tieIn: \"Hell's Rebels\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9460\",\n      name: \"Heroes of the Streets\",\n      date: \"2015-09-30\",\n      isbn: \"978-1-60125-769-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9461\",\n      name: \"Occult Origins\",\n      abbr: \"OO\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-785-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9462\",\n      name: \"Black Markets\",\n      abbr: \"BM\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-789-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9463\",\n      name: \"Weapon Master's Handbook\",\n      date: \"2015-11-18\",\n      isbn: \"978-1-60125-796-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9464\",\n      name: \"Agents of Evil\",\n      date: \"2015-12-16\",\n      isbn: \"978-1-60125-801-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9465\",\n      name: \"Arcane Anthology\",\n      abbr: \"AA\",\n      date: \"2016-01-27\",\n      isbn: \"978-1-60125-814-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9466\",\n      name: \"Blood of Shadows\",\n      date: \"2016-02-24\",\n      isbn: \"978-1-60125-820-5\",\n      tieIn: \"Hell's Vengeance\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9467\",\n      name: \"Armor Master's Handbook\",\n      date: \"2016-04-27\",\n      isbn: \"978-1-60125-829-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9468\",\n      name: \"Magic Tactics Toolbox\",\n      date: \"2016-05-25\",\n      isbn: \"978-1-60125-838-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9469\",\n      name: \"Spymaster's Handbook\",\n      date: \"2016-06-29\",\n      isbn: \"978-1-60125-844-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9470\",\n      name: \"Legacy of Dragons\",\n      date: \"2016-08-04\",\n      isbn: \"978-1-60125-853-3\",\n      tieIn: \"Strange Aeons\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9471\",\n      name: \"Haunted Heroes Handbook\",\n      date: \"2016-08-31\",\n      isbn: \"978-1-60125-884-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9472\",\n      name: \"Divine Anthology\",\n      date: \"2016-09-28\",\n      isbn: \"978-1-60125-894-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9473\",\n      name: \"Blood of the Beast\",\n      date: \"2016-11-16\",\n      isbn: \"978-1-60125-901-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9474\",\n      name: \"Paths of the Righteous\",\n      date: \"2016-12-14\",\n      isbn: \"978-1-60125-910-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9475\",\n      name: \"Healer's Handbook\",\n      abbr: \"HH\",\n      date: \"2017-01-25\",\n      isbn: \"978-1-60125-914-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9476\",\n      name: \"Heroes of the High Court\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-920-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9477\",\n      name: \"Psychic Anthology\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-928-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9478\",\n      name: \"Monster Hunter's Handbook\",\n      date: \"2017-03-29\",\n      isbn: \"978-1-60125-933-2\",\n      tieIn: \"Ironfang Invasion\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9479\",\n      name: \"Heroes of the Darklands\",\n      date: \"2017-04-26\",\n      isbn: \"978-1-60125-936-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9480\",\n      name: \"Legacy of the First World\",\n      date: \"2017-05-31\",\n      isbn: \"978-1-60125-941-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9481\",\n      name: \"Adventurer's Armory 2\",\n      abbr: \"AA2\",\n      date: \"2017-06-28\",\n      isbn: \"978-1-60125-945-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9482\",\n      name: \"Blood of the Sea\",\n      date: \"2017-07-26\",\n      isbn: \"978-1-60125-955-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9483\",\n      name: \"Elemental Master's Handbook\",\n      date: \"2017-08-17\",\n      isbn: \"978-1-60125-965-3\",\n      tieIn: \"Ruins of Azlant\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9484\",\n      name: \"Antihero's Handbook\",\n      date: \"2017-09-20\",\n      isbn: \"978-1-60125-973-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9485\",\n      name: \"Blood of the Coven\",\n      date: \"2017-10-18\",\n      isbn: \"978-1-60125-982-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9486\",\n      name: \"People of the Wastes\",\n      date: \"2017-11-15\",\n      isbn: \"978-1-60125-990-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9487\",\n      name: \"Potions & Poisons\",\n      abbr: \"P&P\",\n      date: \"2017-12-13\",\n      isbn: \"978-1-64078-000-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9488\",\n      name: \"Disciple's Doctrine\",\n      date: \"2018-01-31\",\n      isbn: \"978-1-64078-011-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9489\",\n      name: \"Merchant's Manifest\",\n      date: \"2018-03-28\",\n      isbn: \"978-1-64078-026-2\",\n      tieIn: \"War for the Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9490\",\n      name: \"Blood of the Ancients\",\n      date: \"2018-05-30\",\n      isbn: \"978-1-64078-038-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9491\",\n      name: \"Heroes from the Fringe\",\n      date: \"2018-08-29\",\n      isbn: \"978-1-64078-053-8\",\n      tieIn: \"Return of the Runelords\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9492\",\n      name: \"Plane-Hopper's Handbook\",\n      date: \"2018-09-19\",\n      isbn: \"978-1-64078-071-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9493\",\n      name: \"Martial Arts Handbook\",\n      date: \"2018-11-14\",\n      isbn: \"978-1-64078-092-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9494\",\n      name: \"Wilderness Origins\",\n      date: \"2019-01-30\",\n      isbn: \"978-1-64078-107-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9495\",\n      name: \"Heroes of Golarion\",\n      date: \"2019-03-27\",\n      isbn: \"978-1-64078-120-7\",\n      tieIn: \"Tyrant's Grasp\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9496\",\n      name: \"Chronicle of Legends\",\n      date: \"2019-05-29\",\n      isbn: \"978-1-64078-136-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO1106\",\n      name: \"Pathfinder Chronicles: Guide to Korvosa\",\n      date: \"2008-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-078-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1105\",\n      name: \"Pathfinder Chronicles: Gazetteer\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-077-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1107\",\n      name: \"Pathfinder Chronicles: Classic Monsters Revisited\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-079-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1108\",\n      name: \"Pathfinder Chronicles: Guide to Darkmoon Vale\",\n      date: \"2008-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-100-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1111\",\n      name: \"Pathfinder Chronicles: Campaign Setting\",\n      date: \"2008-08-01\",\n      pages: 256,\n      isbn: \"978-1-60125-112-1\",\n      url: \"https://paizo.com/products/btpy84eo\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9202\",\n      name: \"Pathfinder Chronicles: Gods and Magic\",\n      date: \"2008-10-01\",\n      pages: 32,\n      isbn: \"978-1-60125-139-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9204\",\n      name: \"Pathfinder Chronicles: Into the Darklands\",\n      date: \"2008-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-140-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9205\",\n      name: \"Pathfinder Chronicles: Guide to Absalom\",\n      date: \"2008-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-141-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9207\",\n      name: \"Pathfinder Chronicles: Dragons Revisited\",\n      date: \"2009-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-165-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9208\",\n      name: \"Pathfinder Chronicles: Dark Markets: A Guide to Katapesh\",\n      date: \"2009-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-166-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9209\",\n      name: \"Pathfinder Chronicles: The Great Beyond\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-167-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9210\",\n      name: \"Pathfinder Chronicles: Dungeon Denizens Revisited\",\n      abbr: \"DDR\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-172-5\",\n      type: \"setting\",\n      legacy: true,\n    },\n    {\n      _id: \"PZO9211\",\n      name: \"Pathfinder Chronicles: Seekers of Secrets\",\n      abbr: \"SoS\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9213\",\n      name: \"Pathfinder Chronicles: Princes of Darkness\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-189-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9214\",\n      name: \"Pathfinder Chronicles: Cities of Golarion\",\n      date: \"2009-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9216\",\n      name: \"Pathfinder Chronicles: Classic Horrors Revisited\",\n      date: \"2010-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-202-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9217E\",\n      name: \"Pathfinder Chronicles: Guide to the River Kingdoms\",\n      date: \"2010-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-203-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9219\",\n      name: \"Pathfinder Chronicles: NPC Guide\",\n      date: \"2010-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-219-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9220\",\n      name: \"Pathfinder Chronicles: Classic Treasures Revisited\",\n      date: \"2010-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-220-3\",\n      type: \"setting\",\n      url: \"https://paizo.com/products/btpy8dmn\",\n    },\n    {\n      _id: \"PZO9221\",\n      name: \"Pathfinder Chronicles: Faction Guide\",\n      abbr: \"FG\", //  PCh:FG\n      date: \"2010-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-221-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9222\",\n      name: \"Pathfinder Chronicles: Heart of the Jungle\",\n      date: \"2010-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-247-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9223\",\n      name: \"Pathfinder Chronicles: City of Strangers\",\n      date: \"2010-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-248-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9227\",\n      name: \"Misfit Monsters Redeemed\",\n      date: \"2010-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-270-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9225\",\n      name: \"Lords of Chaos\",\n      date: \"2010-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-250-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9229\",\n      name: \"Lost Cities of Golarion\",\n      date: \"2011-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-272-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9226\",\n      name: \"The Inner Sea World Guide\",\n      abbr: \"ISWG\",\n      date: \"2011-03-01\",\n      pages: 320,\n      isbn: \"978-1-60125-269-2\",\n      url: \"https://paizo.com/products/btpy8ief\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9231\",\n      name: \"Rule of Fear\",\n      date: \"2011-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-301-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9232\",\n      name: \"Rival Guide\",\n      date: \"2011-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-302-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9233\",\n      name: \"Undead Revisited\",\n      date: \"2011-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-303-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9234\",\n      name: \"Dungeons of Golarion\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-304-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9235\",\n      name: \"Pathfinder Society Field Guide\",\n      abbr: \"PSFG\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-305-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9237\",\n      name: \"Inner Sea Magic\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-360-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9238\",\n      name: \"Lands of the Linnorm Kings\",\n      date: \"2011-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-365-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9239\",\n      name: \"Horsemen of the Apocalypse\",\n      date: \"2011-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-373-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9240\",\n      name: \"Dragon Empires Gazetteer\",\n      date: \"2011-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-379-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9241\",\n      name: \"Mythical Monsters Revisited\",\n      date: \"2012-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-384-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9243\",\n      name: \"Distant Worlds\",\n      date: \"2012-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-403-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9244\",\n      name: \"Isles of the Shackles\",\n      date: \"2012-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-408-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9245\",\n      name: \"Giants Revisited\",\n      date: \"2012-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-412-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9246\",\n      name: \"Lost Kingdoms\",\n      date: \"2012-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-415-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9248\",\n      name: \"Magnimar, City of Monuments\",\n      date: \"2012-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-446-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9249\",\n      name: \"Paths of Prestige\",\n      date: \"2012-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-451-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9250\",\n      name: \"Artifacts & Legends\",\n      date: \"2012-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-458-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9251\",\n      name: \"Inner Sea Bestiary\",\n      abbr: \"ISB\",\n      date: \"2012-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-468-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9252\",\n      name: \"Mystery Monsters Revisited\",\n      date: \"2012-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-473-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9253\",\n      name: \"Irrisen, Land of Eternal Winter\",\n      date: \"2013-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-486-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9255\",\n      name: \"Chronicle of the Righteous\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-506-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9256\",\n      name: \"Fey Revisited\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-507-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9257\",\n      name: \"Castles of the Inner Sea\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-508-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9258\",\n      name: \"Dragons Unleashed\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-525-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9259\",\n      name: \"The Worldwound\",\n      date: \"2013-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-532-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9261\",\n      name: \"Demons Revisited\",\n      date: \"2013-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-552-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9262\",\n      name: \"Mythic Realms\",\n      date: \"2013-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-567-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9263\",\n      name: \"Towns of the Inner Sea\",\n      date: \"2013-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-576-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9264\",\n      name: \"Inner Sea NPC Codex\",\n      date: \"2013-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-594-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9265\",\n      name: \"Osirion, Legacy of Pharaohs\",\n      date: \"2014-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-595-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9267\",\n      name: \"Inner Sea Gods\",\n      abbr: \"ISG\",\n      date: \"2014-04-01\",\n      pages: 320,\n      isbn: \"978-1-60125-597-6\",\n      url: \"https://paizo.com/products/btpy94wj\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9268\",\n      name: \"Inner Sea Combat\",\n      abbr: \"ISC\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-598-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9269\",\n      name: \"Occult Mysteries\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-649-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9270\",\n      name: \"Numeria, Land of Fallen Stars\",\n      abbr: \"NLFS\",\n      date: \"2014-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-653-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9272\",\n      name: \"Technology Guide\",\n      abbr: \"TG\",\n      date: \"2014-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-672-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9273\",\n      name: \"Undead Unleashed\",\n      date: \"2014-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-677-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9274\",\n      name: \"Ships of the Inner Sea\",\n      date: \"2014-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-702-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9275\",\n      name: \"Lost Treasures\",\n      date: \"2014-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-703-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9276\",\n      name: \"Belkzen, Hold of the Orc Hordes\",\n      date: \"2015-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-710-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9278\",\n      name: \"Tombs of Golarion\",\n      date: \"2015-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-720-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9279\",\n      name: \"Andoran, Birthplace of Freedom\",\n      date: \"2015-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-721-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9283\",\n      name: \"Inner Sea Monster Codex\",\n      date: \"2015-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-752-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9281\",\n      name: \"Hell Unleashed\",\n      date: \"2015-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-757-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9284\",\n      name: \"Occult Bestiary\",\n      date: \"2015-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-767-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9280\",\n      name: \"Inner Sea Races\",\n      abbr: \"ISR\",\n      date: \"2015-09-01\",\n      pages: 256,\n      isbn: \"978-1-60125-722-2\",\n      url: \"https://paizo.com/products/btpy9g9v\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9285\",\n      name: \"Distant Shores\",\n      date: \"2015-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-787-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9286\",\n      name: \"Occult Realms\",\n      date: \"2015-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-794-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9287\",\n      name: \"Cheliax, The Infernal Empire\",\n      date: \"2015-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-799-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9289\",\n      name: \"Darklands Revisited\",\n      date: \"2016-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-819-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9290\",\n      name: \"Inner Sea Faiths\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-825-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9291\",\n      name: \"Heaven Unleashed\",\n      date: \"2016-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-828-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9292\",\n      name: \"Inner Sea Intrigue\",\n      date: \"2016-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-837-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9293\",\n      name: \"Path of the Hellknight\",\n      date: \"2016-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-843-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9295\",\n      name: \"Planes of Power\",\n      date: \"2016-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-883-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9296\",\n      name: \"Inner Sea Temples\",\n      date: \"2016-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-893-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9297\",\n      name: \"Horror Realms\",\n      date: \"2016-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-900-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9298\",\n      name: \"The First World, Realm of the Fey\",\n      date: \"2016-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-909-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9299\",\n      name: \"Qadira, Jewel of the East\",\n      date: \"2017-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-912-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92101\",\n      name: \"Lands of Conflict\",\n      date: \"2017-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-927-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92102\",\n      name: \"Aquatic Adventures\",\n      date: \"2017-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-944-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92105\",\n      name: \"Taldor, the First Empire\",\n      date: \"2017-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-999-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92107\",\n      name: \"Inner Sea Taverns\",\n      date: \"2018-02-01\",\n      pages: 64,\n      isbn: \"978-1-64078-016-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92108\",\n      name: \"Nidal, Land of Shadows\",\n      date: \"2018-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-033-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92109\",\n      name: \"Distant Realms\",\n      date: \"2018-06-01\",\n      pages: 64,\n      isbn: \"978-1-64078-046-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92111\",\n      name: \"Sandpoint, Light of the Lost Coast\",\n      date: \"2018-10-01\",\n      pages: 64,\n      isbn: \"978-1-64078-080-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92104\",\n      name: \"Construct Handbook\",\n      date: \"2018-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-989-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92112\",\n      name: \"Faiths of Golarion\",\n      date: \"2018-12-01\",\n      pages: 64,\n      isbn: \"978-1-64078-099-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92114\",\n      name: \"Concordance of Rivals\",\n      date: \"2019-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-127-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92116\",\n      name: \"Druma, Profit and Prophecy\",\n      date: \"2019-08-01\",\n      pages: 64,\n      isbn: \"978-1-64078-141-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"DYN0031-E\",\n      name: \"Worldscape #1\",\n      date: \"2016-10-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oco\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0032-E\",\n      name: \"Worldscape #2\",\n      date: \"2016-11-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oza\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0033-E\",\n      name: \"Worldscape #3\",\n      date: \"2016-12-21\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcq\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0034-E\",\n      name: \"Worldscape #4\",\n      date: \"2017-01-25\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcu\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0035-E\",\n      name: \"Worldscape #5\",\n      date: \"2017-02-22\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcy\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0036-E\",\n      name: \"Worldscape #6\",\n      date: \"2017-04-05\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9sgk\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0046-HC\",\n      name: \"Spiral of Bones\",\n      date: \"2019-02-09\",\n      pages: 136,\n      type: \"comic\",\n      isbn: \"978-1-5241-0738-3\",\n      url: \"https://paizo.com/products/btq01x8j\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0010-A\",\n      name: \"Pathfinder Comics #10\",\n      date: \"2013-10-23\",\n      pages: 32,\n      type: \"comic\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"PZOPSS0310E\",\n      name: \"Pathfinder Society Scenario #3–10: The Immortal Conundrum\",\n      date: \"2011-11-01\",\n      pages: 24,\n      type: \"pfs\",\n    },\n    {\n      _id: \"PZOPSS0000E\",\n      name: \"Pathfinder Society Roleplaying Guild Guide\",\n      date: \"2019-08-09\",\n      pages: 44,\n      type: \"pfs\",\n    },\n  ]);\n}\n\n/**\n * @type {Sources}\n */\nexport let sources;\n","/**\n * Migration category tracker for {@link MigrationState}\n */\nexport class MigrationCategory {\n  /** @type {import(\"./migration-state.mjs\").MigrationState} */\n  state;\n\n  id;\n  label;\n  isNumber = false;\n  processed = 0;\n  invalid = 0;\n  errors = [];\n  current = null;\n  total = null;\n  ignored = 0;\n  completed = false;\n\n  /**\n   *\n   * @param {string} id - Category ID\n   * @param {string} label - Label\n   * @param {boolean} isNumber - Is numeric\n   * @param {MigrationState} state - State tracker instance\n   */\n  constructor(id, label, isNumber, state) {\n    this.state = state;\n    this.id = id;\n    this.label = game.i18n.localize(label);\n    this.isNumber = isNumber;\n    if (isNumber) {\n      //this.total = 0;\n      this.processed = 0;\n    }\n  }\n\n  get progress() {\n    return this.ignored + this.invalid + this.processed;\n  }\n\n  get percentage() {\n    if (this.total === 0) return 1;\n    return this.progress / this.total;\n  }\n\n  get hasTotal() {\n    return this.total !== null;\n  }\n\n  get progressLabel() {\n    return `${pf1.utils.limitPrecision(this.percentage * 100, 1)} %`;\n  }\n\n  /**\n   * Signal that an entry has started processing.\n   *\n   * @param {any} entry - Whatever was started processing.\n   */\n  startEntry(entry) {\n    this.current = entry;\n    this.state.emit(this, { entry, action: \"process\", actionState: \"start\", processing: this.processed + 1 });\n  }\n\n  /**\n   * Signal that an entry has finished processing.\n   *\n   * @param {any} entry - Whatever was finished processing with.\n   */\n  finishEntry(entry) {\n    this.current = null;\n    this.processed += 1;\n    this.state.emit(this, { entry, action: \"process\", actionState: \"finish\", processed: this.processed });\n  }\n\n  recordError(entry, error) {\n    this.errors.push({ entry, error });\n  }\n\n  /**\n   * Signal that a specific entry was ignored.\n   *\n   * @param {any} entry - Whatever was ignored.\n   */\n  ignoreEntry(entry) {\n    this.ignored += 1;\n    this.state.emit(this, { entry, action: \"ignore\" });\n  }\n\n  /**\n   * Add unspecific ignored entries.\n   *\n   * @param {number} ignored - Number of ignored entries\n   */\n  addIgnored(ignored) {\n    this.ignored += ignored;\n    this.state.emit(this, { action: \"info\", ignored, total: this.total, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of items in this category.\n   *\n   * @param {number} total - Total number of entries in category\n   */\n  setTotal(total) {\n    this.total = total;\n    this.state.emit(this, { action: \"info\", total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of invalid items in this category.\n   *\n   * @param {number} total - Total number of invalid entries in the category\n   */\n  setInvalid(total) {\n    this.invalid = total;\n    this.state.emit(this, { action: \"info\", total: this.total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  setProgress(value) {\n    this.current = null;\n    this.processed = value;\n  }\n\n  /**\n   * Signal the start of processing this category.\n   */\n  start() {\n    this.completed = false;\n    this.state.emit(this, { action: \"start\" });\n  }\n\n  /**\n   * Signal the finishing of processing this category.\n   */\n  finish() {\n    this.completed = true;\n    this.state.emit(this, { action: \"finish\" });\n  }\n\n  /**\n   * Return name of currently processed entry.\n   *\n   * @remarks\n   * - Null if no entry is being processed currently.\n   *\n   * @type {string|null}\n   */\n  get currentName() {\n    const current = this.current;\n    if (!current) return null;\n\n    if (current instanceof ChatMessage) return `${current.timestamp} [${current.id}]`;\n    if (current instanceof foundry.abstract.Document) return current.name;\n    if (current instanceof CompendiumCollection) {\n      if (game.i18n.has(current.metadata.label)) return game.i18n.localize(current.metadata.label);\n      return current.metadata.label;\n    }\n    return null;\n  }\n\n  getInvalidEntries() {\n    let collection;\n    switch (this.id) {\n      case \"actors\":\n      case \"items\":\n      case \"scenes\":\n        collection = game[this.id];\n        break;\n      default:\n        return [];\n    }\n\n    const results = [];\n    for (const id of collection.invalidDocumentIds) {\n      results.push({ id, entry: collection.getInvalid(id) });\n    }\n\n    return results;\n  }\n\n  getErrorEntries() {\n    return this.errors;\n  }\n}\n","import { MigrationCategory } from \"./migration-category.mjs\";\n\n/**\n * State object for tracking migration progress.\n */\nexport class MigrationState {\n  /**\n   * Display label\n   *\n   * @type {string}\n   */\n  label;\n\n  /**\n   * @type {Record<number, Function>}\n   */\n  callbacks = {};\n\n  /**\n   * @type {Record<string, MigrationCategory>}\n   */\n  categories = {};\n\n  completed = false;\n\n  /**\n   * Compendium unlocking state\n   *\n   * @type {boolean}\n   */\n  unlock = false;\n\n  constructor(label) {\n    if (label) label = game.i18n.localize(label);\n    this.label = label;\n  }\n\n  /**\n   * @param {string} category - Category ID\n   * @param {string} label - Display label\n   * @param {boolean} isNumber - Does the category track a number\n   * @returns {MigrationCategory} - Created category\n   */\n  createCategory(category, label, isNumber) {\n    if (!this.categories[category]) {\n      this.categories[category] = new MigrationCategory(category, label, isNumber, this);\n      this.emit(this.categories[category], { action: \"new\" });\n    }\n    return this.categories[category];\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} category - Category or the overall state\n   * @param {object} info - Category or state specific data\n   */\n  emit(category, info) {\n    for (const callback of Object.values(this.callbacks)) {\n      try {\n        callback(this, category, info);\n      } catch (err) {\n        console.error(err, callback);\n      }\n    }\n  }\n\n  start() {\n    this.completed = false;\n    this.emit(this, { action: \"start\" });\n  }\n\n  finish() {\n    this.completed = true;\n    this.emit(this, { action: \"finish\" });\n  }\n\n  get errors() {\n    return Object.values(this.categories).reduce((total, c) => total + c.errors.length, 0);\n  }\n\n  get invalid() {\n    return Object.values(this.categories).reduce((total, c) => total + c.invalid, 0);\n  }\n\n  get ignored() {\n    return Object.values(this.categories).reduce((total, c) => total + c.ignored, 0);\n  }\n}\n","export class MigrationIssuesDialog extends Dialog {\n  /**\n   * Present simple dialog with issues within a migration category.\n   *\n   * @param {MigrationCategory} category\n   */\n  static async open(category) {\n    const templateData = {\n      errors: category.getErrorEntries(),\n      invalid: category.getInvalidEntries(),\n    };\n\n    return this.prompt({\n      title: game.i18n.localize(\"PF1.Migration.Dialog.Issues\") + \" – \" + category.label,\n      content: await renderTemplate(\"systems/pf1/templates/apps/migration-issues.hbs\", templateData),\n      rejectClose: false,\n      options: {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"migration-issues\"],\n        jQuery: false,\n        width: 620,\n        height: \"auto\",\n        resizable: true,\n      },\n    });\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Copy ID/UUID to clipboard\n    jq.on(\"click\", \".issue .id a\", (ev) => {\n      const el = ev.target;\n      const { id, uuid } = el.dataset;\n      game.clipboard.copyPlainText(uuid || id);\n      const type = uuid ? \"UUID\" : \"ID\";\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label: \"\", type, id: uuid || id }));\n    });\n  }\n}\n","import { MigrationState } from \"../../migration/migration-state.mjs\";\nimport { MigrationIssuesDialog } from \"./migration-issues-dialog.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Migration progress tracking dialog\n */\nexport class MigrationDialog extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Migration state object.\n   *\n   * @type {MigrationState}\n   */\n  migrationState;\n  /**\n   * Autoclose migration dialog once done\n   *\n   * @type {boolean}\n   */\n  autoClose;\n  /**\n   * Ignore documents with appropriate migration marker.\n   *\n   * @type {boolean}\n   */\n  fastMigration;\n\n  constructor(options) {\n    super(options);\n\n    this.migrationState = options.stateTracker;\n\n    this.autoClose = options.autoClose ?? false;\n    this.fastMigration = options.fast ?? true;\n\n    this.migrationState.callbacks[this.appId] = this._onMigration.bind(this);\n  }\n\n  get title() {\n    const label = game.i18n.localize(\"PF1.Migration.Dialog.Title\");\n    if (this.migrationState.label) return `${label}: ${this.migrationState.label}`;\n    return label;\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"migration\"],\n    window: {\n      resizable: true,\n    },\n    position: {\n      top: 200,\n      width: \"auto\",\n      height: \"auto\",\n    },\n    actions: {\n      \"show-details\": this._showDetails,\n      \"reload-all\": this._reloadClients,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/migration-progress.hbs\",\n    },\n    status: {\n      template: \"systems/pf1/templates/apps/migration-status.hbs\",\n    },\n  };\n\n  /**\n   * @override\n   * @param {object} options\n   */\n  async _prepareContext(options) {\n    await super._prepareContext(options);\n\n    return this.migrationState;\n  }\n\n  /** @override */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    if (this.migrationState.completed && this.migrationState.typeChanges !== true && this.autoClose) {\n      setTimeout(() => this.close(), 5_000);\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @param {HTMLElement} target\n   * @this {MigrationDialog}\n   */\n  static _reloadClients(event) {\n    event.preventDefault();\n\n    game.socket.emit(\"reload\");\n    foundry.utils.debouncedReload();\n  }\n\n  /**\n   * @param { Event } event\n   * @param { HTMLElement } target\n   * @this {MigrationDialog}\n   */\n  static _showDetails(event) {\n    event.preventDefault();\n\n    const el = event.target.closest(\".category\");\n    const categoryId = el.dataset.category;\n    const category = this.migrationState.categories[categoryId];\n\n    MigrationIssuesDialog.open(category);\n  }\n\n  _lastProcessUpdate = 0;\n  /**\n   * @param {MigrationState} state\n   * @param {MigrationCategory} category\n   * @param {object} info\n   */\n  _onMigration(state, category, info) {\n    const parts = [\"form\"];\n    switch (info.action) {\n      case \"finish\":\n        if (state.completed) parts.push(\"status\");\n        break;\n      case \"process\": {\n        // Ignore process updates if they come too frequently\n        const t0 = performance.now();\n        if (t0 - this._lastProcessUpdate < 200 && this.state !== this.constructor.RENDER_STATES.RENDERED) return;\n        this._lastProcessUpdate = t0;\n        break;\n      }\n    }\n    this.render({ parts });\n  }\n\n  /**\n   * @override\n   * @param {object} options\n   */\n  async _preClose(options) {\n    await super._preClose(options);\n\n    delete this.migrationState.callbacks[this.appId];\n  }\n\n  /**\n   * Initialize migration dialog and migration state tracker if necessary.\n   *\n   * @param {MigrationState} [state] - Existing state tracker if any\n   * @param {string} [label] - Label associated with the tracker\n   * @param {object} [dialogOptions={}] - Dialog options\n   * @returns {Promise<MigrationDialog>} - Active state tracker\n   */\n  static async initialize(state, label, dialogOptions = {}) {\n    state ??= new MigrationState(label);\n    state.label ||= label;\n\n    const app = new this({ stateTracker: state, autoClose: dialogOptions.autoClose ?? false });\n    await app.render({ dialogOptions, force: true });\n\n    return app;\n  }\n}\n","export const movedAssets = {\n  \"systems/pf1/icons/conditions/bleed.png\": \"systems/pf1/icons/conditions/bleed.svg\",\n  \"systems/pf1/icons/conditions/confused.png\": \"systems/pf1/icons/conditions/confused.svg\",\n  \"systems/pf1/icons/conditions/cowering.png\": \"systems/pf1/icons/conditions/cowering.svg\",\n  \"systems/pf1/icons/conditions/dazed.png\": \"systems/pf1/icons/conditions/dazed.svg\",\n  \"systems/pf1/icons/conditions/dazzled.png\": \"systems/pf1/icons/conditions/dazzled.svg\",\n  \"systems/pf1/icons/conditions/exhausted.png\": \"systems/pf1/icons/conditions/exhausted.svg\",\n  \"systems/pf1/icons/conditions/frightened.png\": \"systems/pf1/icons/conditions/frightened.svg\",\n  \"systems/pf1/icons/conditions/grappled.png\": \"systems/pf1/icons/conditions/grappled.svg\",\n  \"systems/pf1/icons/conditions/helpless.png\": \"systems/pf1/icons/conditions/helpless.svg\",\n  \"systems/pf1/icons/conditions/incorporeal.png\": \"systems/pf1/icons/conditions/incorporeal.svg\",\n  \"systems/pf1/icons/conditions/nauseated.png\": \"systems/pf1/icons/conditions/nauseated.svg\",\n  \"systems/pf1/icons/conditions/paralyzed.png\": \"systems/pf1/icons/conditions/paralyzed.svg\",\n  \"systems/pf1/icons/conditions/pinned.png\": \"systems/pf1/icons/conditions/pinned.svg\",\n  \"systems/pf1/icons/conditions/shaken.png\": \"systems/pf1/icons/conditions/shaken.svg\",\n  \"systems/pf1/icons/conditions/sickened.png\": \"systems/pf1/icons/conditions/sickened.svg\",\n  \"systems/pf1/icons/conditions/squeezing.png\": \"systems/pf1/icons/conditions/squeezing.svg\",\n  \"systems/pf1/icons/conditions/staggered.png\": \"systems/pf1/icons/conditions/staggered.svg\",\n  \"systems/pf1/icons/conditions/screaming.png\": \"systems/pf1/icons/conditions/cowering.svg\",\n  // Duplicated from Core\n  \"systems/pf1/icons/conditions/entangled.png\": \"icons/svg/net.svg\",\n  \"systems/pf1/icons/conditions/fear.png\": \"icons/svg/terror.svg\",\n  \"systems/pf1/icons/conditions/prone.png\": \"icons/svg/falling.svg\",\n  \"systems/pf1/icons/conditions/sleep.png\": \"icons/svg/sleep.svg\",\n  \"systems/pf1/icons/conditions/stunned.png\": \"icons/svg/stoned.svg\",\n};\n","import { MigrationDialog } from \"@app/migration/migration-dialog.mjs\";\nimport { MigrationState } from \"./migration/migration-state.mjs\";\n\nexport { movedAssets as assets } from \"./migration/asset-moves.mjs\";\n\nexport const UPDATE_CHUNK_SIZE = 50;\n\n/**\n * Moved compendium content.\n */\nexport const moved = /** @type {const} */ ({\n  // Trapfinding (v10)\n  \"Compendium.pf1.class-abilities.Item.OhHKCLQXoMlYNodk\": \"Compendium.pf1.class-abilities.Item.pEODJDoTk7uhCZY7\",\n  // Trap Sense (v10)\n  \"Compendium.pf1.class-abilities.Item.fb00TzBa32sSisGb\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n  // Danger Sense (v10)\n  \"Compendium.pf1.class-abilities.Item.4bcGnKYf9beV0nfa\": \"Compendium.pf1.class-abilities.Item.sTlu3zgAEDdJnER5\",\n  // Fast Movement (v10)\n  \"Compendium.pf1.class-abilities.Item.dvQdP8QfrDA9Lxzk\": \"Compendium.pf1.class-abilities.Item.9EX00obqhGHcrOdp\",\n  // A Thousand Faces (v11)\n  \"Compendium.pf1.class-abilities.Item.cBwQdqQ4KmVBck3t\": \"Compendium.pf1.class-abilities.Item.MXj2WoyW7vLxiVYw\",\n  // Poison Use (v11)\n  \"Compendium.pf1.class-abilities.Item.kKaz5A6XbuxgVvhO\": \"Compendium.pf1.class-abilities.Item.A54sLfcyoR5HGNbP\",\n  \"Compendium.pf1.class-abilities.Item.AmsnoKelAxLttUbj\": \"Compendium.pf1.class-abilities.Item.A54sLfcyoR5HGNbP\",\n  // Trap Sense (V11)\n  \"Compendium.pf1.class-abilities.Item.KbhRBQE5ZyYedJo6\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n});\n\nexport const compendiumRenames = /** @type {const}*/ ({\n  racialhd: \"racial-hd\",\n  commonbuffs: \"buffs\",\n  mythicpaths: \"mythic-paths\",\n  \"pf1e-rules\": \"rules\",\n  \"sample-macros\": \"macros\",\n});\n\nexport function registerRedirects() {\n  for (const [oldUuid, newUuid] of Object.entries(moved)) {\n    CONFIG.compendium.uuidRedirects[oldUuid] = newUuid;\n  }\n\n  const prefix = `Compendium.${game.system.id}`;\n  for (const [oldName, newName] of Object.entries(compendiumRenames)) {\n    CONFIG.compendium.uuidRedirects[`${prefix}.${oldName}`] = `${prefix}.${newName}`;\n  }\n}\n\n/**\n * Material ID changes done with v10.5\n */\nconst materialChanges = {\n  nexavarianSteel: \"nexavaranSteel\",\n  alchemicalsilver: \"alchemicalSilver\",\n  angelskin: \"angelSkin\",\n  bloodcrystal: \"bloodCrystal\",\n  coldiron: \"coldIron\",\n  darkleafcloth: \"darkleafCloth\",\n  eelhide: \"eelHide\",\n  elysianbronze: \"elysianBronze\",\n  fireforgedsteel: \"fireForgedSteel\",\n  frostforgedsteel: \"frostForgedSteel\",\n  griffonmane: \"griffonMane\",\n  liquidglass: \"liquidGlass\",\n  livingsteel: \"livingSteel\",\n  singingsteel: \"singingSteel\",\n  spiresteel: \"spireSteel\",\n};\n\nconst contextMarker = () => ({ pf1: { action: \"migration\" } });\n\n/**\n * An indicator for whether the system is currently migrating the world.\n *\n * @type {boolean}\n */\n// As the `pf1` global does not use this ES module but a cloned copy, this value\n// only exists for the documentation. Always use `pf1.migrations.isMigrating` instead!\nexport let isMigrating = false; // eslint-disable-line prefer-const -- pf1.migrations.isMigrating is changed at runtime\n\n/**\n * Test if provided document has been migrated to current version.\n *\n * @remarks\n * - This only tests migration flag. If the document has been updated with outdated data since, this will return false positive.\n *\n * @param {foundry.abstract.Document} doc - Any document to test\n * @returns {boolean} - Migration matches current version\n */\nexport function isMigrated(doc) {\n  const migration = doc.flags?.pf1?.migration; // No getFlag() to support pack index entries\n  if (migration) {\n    const v = pf1.utils.SemanticVersion.fromString(migration);\n    return !v.isLowerThan(pf1.utils.SemanticVersion.fromString(game.system.version));\n  }\n  return false;\n}\n\n/**\n * Initialize {@link MigrationState} and {@link MigrationDialog}\n *\n * @param {MigrationState} [state] - State tracker\n * @param {string} [label] - Label\n * @param {object} [dialog=null] - If falsy, disable dialog. Otherwise options for the dialog.\n * @returns {MigrationState} - Original state or newly initialized one.\n */\nasync function initializeStateAndDialog(state, label, dialog = null) {\n  state ??= new MigrationState(label);\n  if (dialog) await MigrationDialog.initialize(state, label, dialog);\n\n  return state;\n}\n\n/**\n * Perform a system migration for the entire World,\n * applying migrations for Actors, Items, Scenes, Tokens and Compendium packs\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.systemPacks=false] - Migrate system packs.\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog={}] - Progress dialog options. Set to falsy to disable the dialog.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @returns {Promise<void>} - A Promise which resolves once the migration is completed\n */\nexport async function migrateWorld({ unlock = false, fast = true, systemPacks = false, state, dialog = {} } = {}) {\n  const isGM = game.user.isGM;\n\n  if (systemPacks) {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.migrations.migrateWorld() systemPacks parameter is deprecated in favor of pf1.migrations.migrateSystem()\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n  }\n\n  // Deny migration if migration is in progress and there's an active GM,\n  // otherwise assume it's an error and allow migration to start anew.\n  // Don't check for the setting to avoid migration state getting stuck, only trust the in-memory state\n  if (pf1.migrations.isMigrating && game.users.activeGM) {\n    return void ui.notifications.error(game.i18n.localize(\"PF1.Migration.InProgress\"));\n  }\n\n  if (isGM) await game.settings.set(\"pf1\", \"migrating\", true);\n\n  pf1.migrations.isMigrating = true;\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"world\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.World\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n\n  const startMessage = game.i18n.format(\"PF1.Migration.Start\", { version: game.system.version });\n  const smsgId = ui.notifications.info(startMessage, { permanent: true, console: false });\n  console.log(\"PF1 | Migration | Starting...\");\n\n  if (isGM) {\n    await _migrateWorldSettings();\n  }\n\n  // Pre-register  migration categories so they all show on the dialog immediately\n  if (dialog) {\n    state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n    state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n    state.createCategory(\"chat\", \"PF1.Migration.Category.Chat\", true);\n    state.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n    state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n    // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n    await new Promise((resolve) => setTimeout(resolve, 100));\n  }\n\n  // Migrate World Actors\n  const actorMigration = migrateActors({ state, fast, noHooks: true });\n\n  // Migrate World Items\n  const itemMigration = migrateItems({ state, fast, noHooks: true });\n\n  let packMigration = Promise.resolve(),\n    chatMigration = Promise.resolve();\n\n  if (isGM) {\n    // Migrate chat messages\n    chatMigration = migrateMessages({ state, fast, noHooks: true });\n\n    // Migrate Compendium Packs\n    const packs = game.packs.filter((p) => {\n      const source = p.metadata.packageType;\n      // Ignore modules, adventures, etc.\n      if (![\"world\", \"system\"].includes(source)) return false;\n      // Ignore system packs unless configured to include them\n      if (source === \"system\" && !systemPacks) return false;\n      // Ignore unsupported pack types\n      return [\"Actor\", \"Item\", \"Scene\"].includes(p.metadata.type);\n    });\n\n    packMigration = migrateCompendiums(packs, { unlock, fast, state, noHooks: true });\n  }\n\n  // Migrate Unlinked Actors\n  await actorMigration; // Base actors must be migrated before unlinked actors are migrated\n  const sceneMigration = migrateScenes({ state, fast, noHooks: true });\n\n  // Wait for migrations to finish\n  await Promise.allSettled([itemMigration, packMigration, sceneMigration, chatMigration]);\n\n  // Remove start message\n  ui.notifications.remove(smsgId);\n\n  // Remove migration notification\n  ui.notifications.info(game.i18n.format(\"PF1.Migration.End\", { version: game.system.version }), { console: false });\n  console.log(\"PF1 | Migration | Completed!\");\n\n  if (isGM) {\n    // Set the migration as complete\n    await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n\n    await game.settings.set(\"pf1\", \"migrating\", false);\n  }\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"world\" });\n}\n\n/**\n * Migrate actors directory.\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast] - If true, skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @returns {Promise<void>}\n */\nexport async function migrateActors({ fast, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"actors\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Actors\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n\n  console.log(\"PF1 | Migration | Actors directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.actors.size);\n  tracker.setInvalid(game.actors.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const actor of game.actors) {\n    if (!actor.isOwner || (fast && isMigrated(actor))) {\n      tracker.ignoreEntry(actor);\n      continue;\n    }\n\n    tracker.startEntry(actor);\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), undefined, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Actor: ${actor.name} | Applying updates`);\n        await actor.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker.recordError(actor, err);\n      console.error(`PF1 | Migration | Actor: ${actor.name} | Error`, err);\n    }\n    tracker.finishEntry(actor);\n  }\n\n  console.log(\"PF1 | Migration | Actors directory complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"actors\" });\n}\n\n/**\n * Migrate items directory.\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state] - Internal only.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @returns {Promise<void>}\n */\nexport async function migrateItems({ fast = true, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"items\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Items\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n\n  console.log(\"PF1 | Migration | Items directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.items.size);\n  tracker.setInvalid(game.items.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const item of game.items) {\n    if (!item.isOwner || (fast && isMigrated(item))) {\n      tracker.ignoreEntry(item);\n      continue;\n    }\n\n    tracker.startEntry(item);\n\n    try {\n      const updateData = await migrateItemData(item.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Item: ${item.name} | Applying updates`);\n        await item.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker.recordError(item, err);\n      console.error(`PF1 | Migration | Item: ${item.name} | Error`, err);\n    }\n    tracker.finishEntry(item);\n  }\n\n  tracker.finish();\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Items directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"items\" });\n}\n\n/**\n * Migrate all scenes.\n *\n * @see {@link migrateScene}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast=true] - Skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @returns {Promise<void>}\n */\nexport async function migrateScenes({ fast, state, noHooks = false, dialog = null } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"scenes\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Scenes\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n  console.log(\"PF1 | Migration | Scene directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.scenes.size);\n  tracker.setInvalid(game.scenes.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const scene of game.scenes) {\n    tracker.startEntry(scene);\n    await migrateScene(scene, { fast, state, tracker });\n    tracker.finishEntry(scene);\n  }\n\n  tracker.finish();\n\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Scene directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"scenes\" });\n}\n\n/**\n * Migrate compendiums.\n *\n * @see {@link migrateCompendium}\n *\n * @param {Array<string|WorldCollection>|null} [packs=null] - Array of pack IDs or packs to migrate. If null, all packs will be migrated.\n * @param {object} [options={}] - Additional options to pass along.\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog=null] - Display migration dialog. Falsy disables.\n * @returns {Promise<void>} - Promise that resolves once all migrations are complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendiums(\n  packs = null,\n  { unlock = false, fast = true, state, noHooks = false, dialog = null } = {}\n) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"packs\", packs: foundry.utils.deepClone(packs) });\n\n  if (packs === null) packs = [...game.packs];\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Packs\", dialog);\n  if (state) {\n    state.unlock = unlock;\n    state.fast = fast;\n  }\n\n  if (localState) state?.start();\n\n  const tracker = state?.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n\n  tracker?.start();\n  tracker?.setTotal(packs.length);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const pack of packs) {\n    if (!unlock && pack.locked) {\n      tracker?.ignoreEntry(pack);\n      continue;\n    }\n\n    tracker?.startEntry(pack);\n\n    try {\n      await migrateCompendium(pack, { unlock, fast, noHooks: true, tracker });\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error\\n`, err);\n      tracker?.recordError({ name: game.i18n.localize(pack.metadata.label), uuid: pack.metadata.id }, err);\n    }\n\n    tracker?.finishEntry(pack);\n  }\n\n  tracker?.finish();\n  if (localState) state?.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"packs\", packs: foundry.utils.deepClone(packs) });\n}\n\n/**\n * Migrate system compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {boolean} [options.fast=false] - Skip unmigrated documents.\n * @param {boolean} [options.server] - Call server-side migration on data. Developers only.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {object} [options.dialog={}] - Migration dialog options. Falsy disables the dialog.\n * @returns {Promise<void>}\n */\nexport async function migrateSystem({ unlock = true, fast = false, server = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"system\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.System\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n  console.debug(\"PF1 | Migration | System migration starting...\");\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"system\");\n\n  await migrateCompendiums(packs, { unlock, fast, server, state, dialog: false, noHooks: true });\n\n  console.debug(\"PF1 | Migration | System migration complete!\");\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"system\" });\n}\n\n/**\n * Migrate module compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.server=true] - Call server-side migration. Developers only.\n * @param {object} [options.dialog={}] - Dialog options. Falsy disables the dialog.\n * @param {MigrationState} [options.state] - Internal only. State tracker instance.\n * @returns {Promise<void>}\n */\nexport async function migrateModules({ unlock = true, server = true, fast = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"modules\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Modules\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n  console.debug(\"PF1 | Migration | Module migration starting...\");\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"module\");\n  await migrateCompendiums(packs, { unlock, fast, server, state, noHooks: true });\n\n  console.debug(\"PF1 | Migration | Module migration complete!\");\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"modules\" });\n}\n\n/* -------------------------------------------- */\n\n/**\n * Apply migration rules to all Documents within a single Compendium pack\n *\n * @param {CompendiumCollection|string} pack - Compendium (or its ID) to migrate\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendium will be ignored.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {MigrationCategory} [options.tracker] - Internal only. Tracker instance.\n * @param {boolean} [options.marker=true] - Add migration marker to migrated documents.\n * @param {boolean} [options.server=false] - Call server-side migration. Developers only.\n * @returns {Promise<void>} - Promise that resolves once migration is complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendium(\n  pack,\n  { unlock = false, fast = true, server = false, marker = true, noHooks = false, tracker } = {}\n) {\n  if (typeof pack === \"string\") {\n    pack = game.packs.get(pack);\n    if (!pack) throw new Error(`Compendium \"${pack}\" not found.`);\n  }\n\n  if (pack.locked && !unlock) return;\n\n  const docType = pack.metadata.type;\n  if (![\"Actor\", \"Item\", \"Scene\", \"RollTable\", \"Macro\"].includes(docType)) return;\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"pack\", collection: pack });\n\n  // Iterate over compendium entries - applying fine-tuned migration functions\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Starting...`);\n\n  const wasLocked = pack.locked;\n\n  // Server-side migration; only useful for development\n  if (server) {\n    if (wasLocked) await pack.configure({ locked: false });\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Server-side migration starting...`);\n    await pack.migrate();\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Server-side migration done!`);\n    ui.notifications.clear(); // Do aggressive clearing\n  }\n\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Fetching ${pack.index.size} document(s)`);\n\n  /** @type {Actor[]|JournalEntry[]|Item[]} */\n  const documents = await pack.getDocuments();\n\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Building update data...`);\n\n  // Collect updates\n  const updates = [];\n\n  async function applyUpdates() {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Applying update(s) to ${updates.length} document(s)`);\n\n    if (pack.locked) await pack.configure({ locked: false });\n\n    // Commit updates\n    try {\n      await getDocumentClass(docType).updateDocuments(updates, { pack: pack.collection, ...contextMarker() });\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error:`, err);\n      tracker?.recordError({ name: game.i18n.localize(pack.metadata.label), uuid: pack.metadata.id }, err);\n    }\n  }\n\n  while (documents.length) {\n    const document = documents.shift();\n    if (fast && isMigrated(document)) continue;\n\n    try {\n      let updateData;\n      switch (docType) {\n        case \"Item\":\n          updateData = await migrateItemData(document.toObject(), undefined, { item: document });\n          break;\n        case \"Actor\":\n          updateData = await migrateActorData(document.toObject(), undefined, { actor: document });\n          break;\n        case \"Scene\": {\n          await migrateScene(document);\n          break;\n        }\n      }\n\n      if (updateData && !foundry.utils.isEmpty(updateData)) {\n        updateData._id = document.id;\n        updates.push(updateData);\n      }\n    } catch (err) {\n      tracker?.recordError(document, err);\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error!`, err);\n    }\n\n    if (updates.length >= pf1.migrations.UPDATE_CHUNK_SIZE) {\n      await applyUpdates();\n      updates.length = 0; // Clear update array\n    }\n  }\n\n  if (updates.length) {\n    await applyUpdates();\n  } else {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | No updates needed`);\n  }\n\n  if (wasLocked) await pack.configure({ locked: true });\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"pack\", collection: pack });\n\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Complete!`);\n}\n\n/**\n * Migrates world settings.\n */\nasync function _migrateWorldSettings() {}\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers               */\n/* -------------------------------------------- */\n\n/**\n * Migrate data in tokens that is no longer used.\n *\n * @param {object} tokenData Token data\n * @param {object} [options] - Additional options\n * @param {TokenDocument} [options.token] - Token document\n * @param {boolean} [options.marker=true] - Add migration marker\n */\nexport async function migrateTokenData(tokenData, { token, marker = true }) {\n  const flags = tokenData.flags?.pf1 ?? {};\n\n  const updateData = {};\n\n  // Remove obsolete flags\n  if (flags.lowLightVision !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVision\"] = null;\n  }\n  if (flags.lowLightVisionMultiplier !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplier\"] = null;\n  }\n  if (flags.lowLightVisionMultiplierBright !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplierBright\"] = null;\n  }\n\n  // Remove disabled but still in use flags\n  if (flags.disableLowLight === false) {\n    updateData[\"flags.pf1.-=disableLowLight\"] = null;\n  }\n  if (flags.staticSize === false) {\n    updateData[\"flags.pf1.-=staticSize\"] = null;\n  }\n  if (flags.customVisionRules === false) {\n    updateData[\"flags.pf1.-=customVisionRules\"] = null;\n  }\n\n  // Remove data from v9 vision handling\n  // Added with PF1 v9.4\n  if (!flags.customVisionRules) {\n    let visionMode, range;\n    // Attempt to preserve vision range after migration\n    if (tokenData.sight.visionMode !== \"basic\") {\n      if (tokenData.sight.range !== 0) range = 0;\n      visionMode = \"basic\";\n    }\n\n    // HACK: Foundry V13 does not allow deleting these to reset them, so we reset them via temporary document\n    const { saturation, brightness, attenuation, contrast } = new TokenDocument().toObject().sight;\n    updateData.sight = { saturation, brightness, attenuation, contrast, range, visionMode };\n\n    if (tokenData.detectionModes?.length) updateData[\"detectionModes\"] = [];\n  }\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return updateData;\n}\n\n/**\n * Migrate token.\n *\n * @param {TokenDocument} token - Token to migrate\n * @returns {Promise<TokenDocument|null>} - Promise to updated document,. or null if no update was done.\n */\nexport async function migrateToken(token) {\n  const tokenData = token.toObject();\n  const updateData = await migrateTokenData(tokenData, { token });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return token.update(foundry.utils.expandObject(updateData), contextMarker());\n  }\n}\n\n/**\n * Migrate singular actor document.\n *\n * @param {Actor} actor - Actor to migrate.\n * @returns {Promise<void>}\n */\nexport async function migrateActor(actor) {\n  console.debug(\"PF1 | Migration | Starting |\", actor.name, actor.uuid);\n\n  const updateData = await migrateActorData(actor.toObject(), actor.token, { actor });\n  if (!foundry.utils.isEmpty(updateData)) {\n    await actor.update(updateData, contextMarker());\n  }\n\n  await migrateActiveEffectsToItems(actor);\n\n  console.debug(\"PF1 | Migration | Finished |\", actor.name, actor.uuid);\n}\n\n/**\n * Migrate active effects from actor to items that should own them instead.\n *\n * Added with PF1 v10\n *\n * @param {ActorPF} actor\n */\nexport async function migrateActiveEffectsToItems(actor) {\n  const p = [];\n\n  for (const ae of actor.effects) {\n    // Ignore all cases that would indicate this is not the old tracker AE\n    // Essentially verify the AE does absolutely nothing on its own, as the old AEs had no good markers.\n    if (ae.statuses.size > 0) continue;\n    if (ae.transfer) continue;\n    if (ae.disabled) continue;\n    if (ae.type !== \"base\") continue;\n    if (!ae.origin) continue;\n    if (ae.changes.length !== 0) continue;\n    if (ae.description.length > 0) continue;\n    if (Object.keys(ae.flags).some((k) => ![\"pf1\"].includes(k))) continue; // Non-PF1 flags\n\n    const item = await fromUuid(ae.origin, { relative: actor });\n    if (!item) continue;\n    if (item.name !== ae.name) continue;\n\n    // Transfer tracker AE to item\n    if (item.effect?.type !== \"buff\") {\n      const aeData = ae.toObject();\n      aeData.transfer = true;\n      aeData.type = \"buff\";\n\n      const p0 = ActiveEffect.implementation.create(aeData, { parent: item });\n      p.push(p0);\n    }\n\n    // Delete old in all cases.\n    // CAUTION: This is technically destructive as the above criteria is NOT foolproof.\n    p.push(ae.delete());\n  }\n\n  await Promise.all(p);\n}\n\n/**\n * Migrate a single Actor document to incorporate latest data model changes\n * Return an Object of updateData to be applied\n *\n * @param {ActorData} actorData   The actor data to derive an update from\n * @param {TokenDocument} token\n * @param {object} [options] - Additional options\n * @param {Actor} [options.actor] - Associated actor document\n * @param {boolean} [options.marker=true] - Add migration marker\n * @returns {object} - The updateData to apply\n */\nexport async function migrateActorData(actorData, token, { actor, marker = true } = {}) {\n  // Ignore module introduced types\n  if (actorData.type.indexOf(\".\") !== -1) return {};\n\n  const updateData = {};\n\n  _migrateActorEncumbrance(actorData, updateData);\n  _migrateActorNoteArrays(actorData, updateData);\n  _migrateActorSpeed(actorData, updateData);\n  _migrateActorSpellbookCL(actorData, updateData);\n  _migrateActorSpellbookSlots(actorData, updateData);\n  _migrateActorSpellbookPrep(actorData, updateData);\n  _migrateActorSpellbookKind(actorData, updateData, actor);\n  _migrateActorConcentration(actorData, updateData);\n  _migrateActorBaseStats(actorData, updateData);\n  _migrateUnusedActorCreatureType(actorData, updateData);\n  _migrateActorSpellbookDCFormula(actorData, updateData);\n  _migrateActorHPAbility(actorData, updateData);\n  _migrateActorCR(actorData, updateData);\n  _migrateAttackAbility(actorData, updateData);\n  _migrateActorDefenseAbility(actorData, updateData);\n  _migrateActorSpellbookUsage(actorData, updateData);\n  _migrateActorNullValues(actorData, updateData);\n  _migrateActorSpellbookDomainSlots(actorData, updateData);\n  _migrateActorStatures(actorData, updateData);\n  _migrateActorInitAbility(actorData, updateData);\n  _migrateActorChangeRevamp(actorData, updateData);\n  _migrateActorCMBRevamp(actorData, updateData);\n  _migrateCarryBonus(actorData, updateData);\n  _migrateBuggedValues(actorData, updateData);\n  _migrateSpellbookUsage(actorData, updateData);\n  _migrateActorHP(actorData, updateData);\n  _migrateActorSenses(actorData, updateData, token);\n  _migrateActorInvaliddSkills(actorData, updateData);\n  _migrateActorSkillRanks(actorData, updateData);\n  _migrateActorSkillJournals(actorData, updateData);\n  _migrateActorSubskillData(actorData, updateData);\n  _migrateActorDRandER(actorData, updateData);\n  _migrateActorTraits(actorData, updateData);\n  _migrateActorProficiencies(actorData, updateData);\n  _migrateActorFlags(actorData, updateData);\n  _migrateActorUnusedData(actorData, updateData);\n\n  // Migrate Owned Items\n  const items = [];\n  for (const item of actorData.items ?? []) {\n    // Migrate the Owned Item\n    const itemData = item instanceof Item ? item.toObject() : item;\n    const itemDoc = actor?.items.get(itemData._id);\n    try {\n      const itemUpdate = await migrateItemData(itemData, actor, { item: itemDoc });\n\n      // Update the Owned Item\n      if (!foundry.utils.isEmpty(itemUpdate)) {\n        itemUpdate._id = itemData._id;\n        items.push(foundry.utils.expandObject(itemUpdate));\n      }\n    } catch (err) {\n      console.error(\n        `Error migrating Item \"${item.name}\" [${itemDoc?.uuid ?? itemData._id}] on actor \"${actorData.name}\" [${\n          actor?.uuid ?? actorData._id\n        }]`\n      );\n      throw new Error(`Item \"${item.name}\" [${itemData._id}] failed migration: ${err.message}`, { cause: err });\n    }\n  }\n  if (items.length > 0) updateData.items = items;\n\n  // Active Effects\n  await _migrateActorActiveEffects(actorData, updateData, actor);\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return foundry.utils.expandObject(updateData);\n}\n\n/* -------------------------------------------- */\n\n/**\n *  Migrate singular item document.\n *\n * @param {Item} item - Item document to update.\n * @returns {Promise<Item|null>} - Promise to updated item document, or null if no update was performed.\n */\nexport async function migrateItem(item) {\n  let updated = false;\n  const updateData = await migrateItemData(item.toObject(), item.actor, { item });\n  if (!foundry.utils.isEmpty(updateData)) {\n    updated = true;\n    await item.update(updateData, contextMarker());\n  }\n\n  await migrateItemActiveEffects(item);\n\n  return updated ? item : null;\n}\n\n/**\n * Migrate active effects on an item.\n *\n * @param {Item} item\n * @returns {Promise<ActiveEffect[]|null>} - Updated active effects, or null if no updates were needed.\n */\nexport async function migrateItemActiveEffects(item) {\n  const itemData = item.toObject();\n\n  const updateData = {};\n  await migrateItemDataActiveEffects(itemData, updateData);\n\n  if (updateData.effects?.length) {\n    return item.updateEmbeddedDocuments(\"ActiveEffect\", updateData.effects);\n  }\n\n  return null;\n}\n\n/**\n * Migrate active effects in item data\n *\n * @param {object} itemData - Item data\n * @param {object} updateData - Object to hold update data\n */\nasync function migrateItemDataActiveEffects(itemData, updateData) {\n  const { effects = [] } = itemData;\n\n  const updates = [];\n  for (const effect of effects) {\n    const updateData = {};\n\n    // Convert method of tracker identification\n    if (itemData.type === \"buff\") {\n      if (effect.flags?.pf1?.tracker && effect.type === \"base\") {\n        updateData.type = \"buff\";\n        updateData[\"flags.pf1.-=tracker\"] = null;\n      }\n    }\n\n    const duration = effect.flags?.pf1?.duration;\n    if (duration) {\n      // Transfer initiative value to system data\n      const init = effect.flags?.pf1?.duration?.initiative;\n      if (init !== undefined) {\n        if (effect.system?.initiative === undefined) updateData[\"system.initiative\"] = init;\n      }\n\n      // End timing\n      const endTiminig = effect.flags?.pf1?.duration?.end;\n      if (endTiminig !== undefined) {\n        if (!effect.system?.end) updateData[\"system.end\"] = endTiminig;\n      }\n\n      updateData[\"flags.pf1.-=duration\"] = null;\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      updateData._id = effect._id;\n      updates.push(updateData);\n    }\n  }\n\n  if (updates.length) {\n    updateData.effects = updates;\n  }\n}\n\n/**\n * Migrate a single Item document to incorporate latest data model changes\n *\n * @param {object} itemData    The item data to derive an update from\n * @param {Actor} actor - Parent actor document\n * @param {object} [options] - Additional options\n * @param {number} [options._depth=0] - Internal only. Recursion depth tracking.\n * @param {Item} [options.item] - Item document\n * @param {boolean} [options.marker=true] - Add migration marker\n * @returns {object} - The updateData to apply\n */\nexport async function migrateItemData(itemData, actor = null, { item, _depth = 0, marker = true } = {}) {\n  const updateData = {};\n\n  // Migrate data to system\n  if (itemData.system == null && itemData.data != null) {\n    itemData = foundry.utils.deepClone(itemData);\n    itemData.system = itemData.data;\n    delete itemData.data;\n  }\n\n  // Ignore module introduced types\n  if (!Object.keys(game.system.documentTypes.Item).includes(itemData.type)) return {};\n\n  _migrateItemFlags(itemData, updateData);\n  _migrateItemArrayTypes(itemData, updateData);\n  _migrateFlagsArrayToObject(itemData, updateData);\n  _migrateWeaponImprovised(itemData, updateData);\n  _migrateItemSpellDescription(itemData, updateData);\n  _migrateClassDynamics(itemData, updateData);\n  _migrateClassType(itemData, updateData);\n  _migrateClassCasting(itemData, updateData);\n  _migrateSpellDivineFocus(itemData, updateData);\n  _migrateWeaponCategories(itemData, updateData);\n  _migrateArmorCategories(itemData, updateData);\n  _migrateArmorMaxDex(itemData, updateData);\n  _migrateArmorACP(itemData, updateData);\n  _migrateItemSize(itemData, updateData);\n  _migrateItemFeatAbilityTypes(itemData, updateData);\n  _migrateClassLevels(itemData, updateData);\n  _migrateSavingThrowTypes(itemData, updateData);\n  _migrateCR(itemData, updateData);\n  _migrateItemChanges(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemContextNotes(itemData, updateData);\n  _migrateEquipmentSize(itemData, updateData);\n  _migrateSpellCosts(itemData, updateData);\n  _migrateSpellPreparation(itemData, updateData, { item });\n  _migrateLootEquip(itemData, updateData);\n  await _migrateItemLinks(itemData, updateData, { item, actor });\n  _migrateItemProficiencies(itemData, updateData);\n  _migrateItemNotes(itemData, updateData);\n  _migrateScriptCalls(itemData, updateData);\n  _migrateItemActionToActions(itemData, updateData, { item, actor });\n  _migrateItemChargeCost(itemData, updateData);\n  _migrateItemLimitedUses(itemData, updateData);\n  _migrateItemWeight(itemData, updateData);\n  _migrateItemHealth(itemData, updateData);\n  _migrateContainerReduction(itemData, updateData);\n  _migrateContainerPrice(itemData, updateData);\n  _migrateItemType(itemData, updateData);\n  _migrateItemLearnedAt(itemData, updateData);\n  _migrateItemTuples(itemData, updateData);\n  _migrateEquipmentCategories(itemData, updateData);\n  _migrateSpellDescriptors(itemData, updateData);\n  _migrateItemTraits(itemData, updateData);\n  _migrateRaceItemCreatureType(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemMaterials(itemData, updateData);\n  _migrateSpellSubschool(itemData, updateData);\n  _migrateItemDefaultAmmo(itemData, updateData);\n  _migrateItemDurability(itemData, updateData);\n  _migrateItemHeld(itemData, updateData);\n  _migrateItemUnusedData(itemData, updateData);\n\n  // Migrate action data\n  const alreadyHasActions = itemData.system.actions instanceof Array && itemData.system.actions.length > 0;\n  const itemActionData = alreadyHasActions ? itemData.system.actions : updateData[\"system.actions\"];\n  if (itemActionData instanceof Array) {\n    const newActionData = itemActionData.map((action) => migrateItemActionData(action, updateData, { itemData, item }));\n\n    const additions = foundry.utils.diffObject(itemActionData, newActionData);\n    const deletions = foundry.utils.diffObject(newActionData, itemActionData);\n    // Update only if something changed. Bi-directional testing for detecting deletions.\n    if (!foundry.utils.isEmpty(additions) || !foundry.utils.isEmpty(deletions)) {\n      updateData[\"system.actions\"] = newActionData;\n    }\n  }\n\n  // Migrate container .inventoryItems array to .items map\n  // Introduced with PF1 v10\n  if (itemData.system?.inventoryItems instanceof Array) {\n    updateData[\"system.items\"] = {};\n    for (const sitem of itemData.system.inventoryItems) {\n      sitem._id ||= foundry.utils.randomID(16);\n\n      // Deal with corrupt items or v9 or older items\n      sitem.system ??= {};\n      try {\n        if (\"data\" in sitem) {\n          sitem.system = foundry.utils.mergeObject(sitem.data, sitem.system, { inplace: false });\n          delete sitem.data;\n        }\n\n        const subItem = new Item.implementation(sitem);\n\n        const itemUpdateData = await migrateItemData(subItem.toObject(), actor, { _depth: _depth + 1 });\n        subItem.updateSource(itemUpdateData);\n\n        updateData[\"system.items\"][sitem._id] = subItem.toObject();\n      } catch (err) {\n        console.error(\"Failed to migrate container content:\", { item: sitem, parent: item, actor });\n      }\n    }\n\n    updateData[\"system.-=inventoryItems\"] = null;\n  }\n\n  // Migrate container items\n  const migrateContainerItems = async (items) => {\n    if (!items) return;\n    for (const [itemId, itemData] of Object.entries(items)) {\n      try {\n        // Basic validation\n        const subItem = new Item.implementation(itemData);\n\n        // Migrate\n        const subUpdate = await migrateItemData(subItem.toObject(), actor, { item: subItem, _depth: _depth + 1 });\n\n        if (!foundry.utils.isEmpty(subUpdate)) {\n          const diff = subItem.updateSource(subUpdate);\n          updateData[\"system.items\"] ??= {};\n          updateData[\"system.items\"][itemId] = diff;\n        }\n      } catch (err) {\n        console.error(\"PF1 | Migration | Error\", err, item);\n      }\n    }\n  };\n\n  await migrateContainerItems(itemData.system.items);\n\n  await migrateItemDataActiveEffects(itemData, updateData);\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  // Return the migrated update data\n  return updateData;\n}\n\n// Added with PF1 v10\nfunction _migrateActionLimitedUses(action, itemData) {\n  // Only physical items can be single use\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (action.uses?.self?.per === \"single\") {\n      action.uses.self.per = \"charges\";\n      action.uses.self.maxFormula = \"1\";\n    }\n  }\n}\n\n/**\n * Migrates a single action within an item.\n *\n * @param {object} actionData - The action's data, which also serves as the update data to pass on.\n * @param {object} updateData - Item update data\n * @param {object} [options] - Additional options\n * @param {Item} [options.item=null] - Parent item document this action is in.\n * @param {object} options.itemData - Parent item data\n * @returns {object} The resulting action data.\n */\nexport function migrateItemActionData(actionData, updateData, { itemData, item = null } = {}) {\n  actionData = foundry.utils.deepClone(actionData);\n\n  const action = item?.actions?.get(actionData._id);\n\n  // Migrations that must be done before datamodel cleans the needed data out\n  _migrateActionDamageType(actionData, itemData);\n  _migrateActionLimitedUses(actionData, itemData);\n  _migrateActionExtraAttacks(actionData, itemData);\n  _migrateActionAmmunitionUsage(actionData, itemData, updateData);\n  _migrateActionDuration(actionData, itemData);\n  _migrateActionMaterials(actionData, itemData);\n\n  actionData = new pf1.components.ItemAction(actionData).toObject(true, true);\n\n  _migrateActionConditionals(actionData, itemData, { action });\n\n  // Return the migrated update data\n  return actionData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate singular scene document.\n *\n * @param {Scene} scene - Scene document to update.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @param {boolean} [options.fast] - Skip already migrated\n * @returns {Promise<void>}\n */\nexport async function migrateScene(scene, { fast = true, state, tracker } = {}) {\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Starting...`);\n  try {\n    await migrateSceneTokens(scene, { fast, state, tracker });\n    await migrateSceneActors(scene, { fast, state, tracker });\n\n    // Mark last migrated version\n    if (game.user.isGM) await scene.setFlag(\"pf1\", \"migration\", game.system.version);\n  } catch (err) {\n    tracker?.recordError(scene, err);\n    console.error(`PF1 | Migration | Scene: ${scene.name} | Error`, err);\n  }\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Complete!`);\n}\n\n/**\n * Migrate tokens in a single scene.\n *\n * @param {Scene} scene - The Scene to Update\n * @param {object} [options] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n */\nexport async function migrateSceneTokens(scene, { fast = true, state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (!token.isOwner) continue;\n\n    if (fast && isMigrated(token)) continue;\n\n    try {\n      await migrateToken(token);\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/**\n * Migrate unlinked actors on a single scene.\n *\n * @param {Scene} scene - Scene to migrate actors in.\n * @param {object} [options] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateSceneActors(scene, { fast = true, state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (token.isLinked) continue;\n    const actor = token.actor;\n    if (!actor?.isOwner) continue;\n\n    if (fast && isMigrated(actor)) continue;\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), token, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        if (!(updateData.items?.length > 0)) delete updateData.items;\n        if (!(updateData.effects?.length > 0)) delete updateData.effects;\n        if (!foundry.utils.isEmpty(updateData)) await actor.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/* -------------------------------------------- */\n\nfunction _migrateActorEncumbrance(ent, updateData) {\n  const arr = {\n    \"system.attributes.encumbrance.level\": \"attributes.encumbrance.-=level\",\n    \"system.attributes.encumbrance.levels.light\": \"attributes.encumbrance.levels.-=light\",\n    \"system.attributes.encumbrance.levels.medium\": \"attributes.encumbrance.levels.-=medium\",\n    \"system.attributes.encumbrance.levels.heavy\": \"attributes.encumbrance.levels.-=heavy\",\n    \"system.attributes.encumbrance.levels.carry\": \"attributes.encumbrance.levels.-=carry\",\n    \"system.attributes.encumbrance.levels.drag\": \"attributes.encumbrance.levels.-=drag\",\n    \"system.attributes.encumbrance.carriedWeight\": \"attributes.encumbrance.-=carriedWeight\",\n  };\n  for (const [key, updateKey] of Object.entries(arr)) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (value !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  }\n}\n\n/**\n * Convert array based flags into object.\n *\n * @param ent\n * @param updateData\n */\nfunction _migrateFlagsArrayToObject(ent, updateData) {\n  const flags = ent.system.flags;\n  if (!flags) return;\n  const bflags = flags.boolean,\n    dflags = flags.dictionary;\n\n  if (Array.isArray(bflags)) {\n    // Compatibility with old data: Convert old array into actual dictionary.\n    updateData[\"system.flags.boolean\"] = bflags.reduce((flags, flag) => {\n      flags[flag] = true;\n      return flags;\n    }, {});\n  }\n\n  if (Array.isArray(dflags)) {\n    updateData[\"system.flags.dictionary\"] = dflags.reduce((flags, [key, value]) => {\n      flags[key] = value;\n      return flags;\n    }, {});\n  }\n}\n\nfunction _migrateActorNoteArrays(ent, updateData) {\n  const list = [\"system.attributes.acNotes\", \"system.attributes.cmdNotes\", \"system.attributes.srNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && value instanceof Array) {\n      updateData[k] = value.join(\"\\n\");\n    }\n  }\n}\n\nfunction _migrateActorSpeed(ent, updateData) {\n  const arr = [\n    \"attributes.speed.land\",\n    \"attributes.speed.climb\",\n    \"attributes.speed.swim\",\n    \"attributes.speed.fly\",\n    \"attributes.speed.burrow\",\n  ];\n  for (const k of arr) {\n    let value = foundry.utils.getProperty(ent.system, k);\n    if (typeof value === \"string\") value = parseInt(value);\n    if (typeof value === \"number\") {\n      updateData[`system.${k}.base`] = value;\n    } else if (value === null) {\n      updateData[`system.${k}.base`] = 0;\n    } else if (value?.total !== undefined) {\n      // Delete derived data\n      updateData[`system.${k}.-=total`] = null;\n    }\n\n    // Add maneuverability\n    if (k === \"attributes.speed.fly\" && foundry.utils.getProperty(ent.system, `${k}.maneuverability`) === undefined) {\n      updateData[`system.${k}.maneuverability`] = \"average\";\n    }\n  }\n\n  // Remove bad fly maneuverability entry if it exists\n  if (ent.system.attributes?.speed?.flyManeuverability !== undefined) {\n    updateData[\"system.attributes.speed.-=flyManeuverability\"] = null;\n  }\n}\n\nfunction _migrateActorSpellbookSlots(ent, updateData) {\n  for (const spellbookSlot of Object.keys(\n    foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (\n      foundry.utils.getProperty(ent.system, `attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`) == null\n    ) {\n      updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`] = true;\n    }\n\n    for (let a = 0; a < 10; a++) {\n      const baseKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.base`;\n      const base = foundry.utils.getProperty(ent, baseKey);\n\n      if (base === undefined) {\n        const maxKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.max`;\n        const max = foundry.utils.getProperty(ent, maxKey);\n        if (typeof max === \"number\" && max > 0) {\n          updateData[baseKey] = max.toString();\n        }\n      } else {\n        const newBase = parseInt(base);\n        if (newBase > 0) {\n          if (newBase !== base) updateData[baseKey] = newBase;\n        } else {\n          // Remove pointless default value not present in new actors either\n          updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.-=base`] = null;\n        }\n      }\n    }\n  }\n}\n\n// Remove inconsistently used .spontaneous permanently recorded boolean\n// Added with PF1 v10\nfunction _migrateActorSpellbookPrep(actorData, updateData) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    const wasSpontaneous = book.spontaneous;\n    if (wasSpontaneous === undefined) continue;\n\n    const usesAuto = book.autoSpellLevelCalculation ?? false;\n    const usesSpellpoints = book.spellPoints.useSystem === true;\n    if (!usesAuto && !usesSpellpoints) {\n      // Set prep type to match old spontaneous toggle\n      updateData[`system.attributes.spells.spellbooks.${bookId}.spellPreparationMode`] = wasSpontaneous\n        ? \"spontaneous\"\n        : \"prepared\";\n\n      // Set progression type to high to match old behaviour\n      updateData[`system.attributes.spells.spellbooks.${bookId}.casterType`] = \"high\";\n    }\n\n    updateData[`system.attributes.spells.spellbooks.${bookId}.-=spontaneous`] = null;\n  }\n}\n\n/**\n * Migrate spellbook kind (arcane, divine, psychic, ...)\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} actor - Actor document\n */\nfunction _migrateActorSpellbookKind(actorData, updateData, actor) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (book.kind === undefined && book.inUse) {\n      // Attempt to get data from class\n      const castingClass =\n        !!book.class && book.class !== \"_hd\" ? actor.itemTypes.class.find((i) => i.system.tag === book.class) : null;\n      let kind = castingClass?.system.casting?.spells;\n\n      if (!kind) {\n        // Attempt to determine kind without access to source class\n        kind = \"arcane\"; // Default to arcane if all else fails\n        if (book.arcaneSpellFailure) kind = \"arcane\";\n        else if (book.psychic) kind = \"psychic\";\n        else if (book.spellPreparationMode === \"prepared\" && book.ability === \"int\") kind = \"alchemy\";\n        else if (book.class !== \"_hd\") kind = \"divine\";\n      }\n\n      updateData[`system.attributes.spells.spellbooks.${bookId}.kind`] = kind;\n    }\n  }\n}\n\nfunction _migrateActorBaseStats(actorData, updateData) {\n  const deleteEntries = {\n    \"system.attributes.hd.base\": \"system.attributes.hd.-=base\",\n    \"system.attributes.savingThrows.fort.value\": \"system.attributes.savingThrows.fort.-=value\",\n    \"system.attributes.savingThrows.ref.value\": \"system.attributes.savingThrows.ref.-=value\",\n    \"system.attributes.savingThrows.will.value\": \"system.attributes.savingThrows.will.-=value\",\n  };\n\n  for (const [path, dPath] of Object.entries(deleteEntries)) {\n    if (foundry.utils.getProperty(actorData, path) !== undefined) {\n      updateData[dPath] = null;\n    }\n  }\n\n  // Delete HP base if it's not non-zero or actor has any classes\n  if (actorData.system.attributes?.hp?.base !== undefined) {\n    if (!(actorData.system.attributes?.hp?.base > 0) || actorData.items.some((i) => i.type === \"class\")) {\n      updateData[\"system.attributes.hp.-=base\"] = null;\n    }\n  }\n}\n\nfunction _migrateUnusedActorCreatureType(ent, updateData) {\n  const type = foundry.utils.getProperty(ent.system, \"attributes.creatureType\");\n  if (type != undefined) updateData[\"system.attributes.-=creatureType\"] = null;\n}\n\nfunction _migrateActorSpellbookDCFormula(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.baseDCFormula`;\n    const curFormula = foundry.utils.getProperty(ent, key);\n    if (!curFormula) updateData[key] = \"10 + @sl + @ablMod\";\n  }\n}\n\nfunction _migrateActorSpellbookName(ent, updateData) {\n  const spellbooks = Object.entries(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const [bookId, book] of spellbooks) {\n    if (book.altName !== undefined) {\n      const key = `system.attributes.spells.spellbooks.${bookId}`;\n      updateData[`${key}.-=altName`] = null;\n      if (book.altName.length) updateData[`${key}.name`] = book.altName;\n    }\n  }\n}\n\nfunction _migrateActorSpellbookCL(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.cl`;\n    const curBase = parseInt(foundry.utils.getProperty(ent, key + \".base\"));\n    const curFormula = foundry.utils.getProperty(ent, key + \".formula\");\n    if (curBase > 0) {\n      if (curFormula.length > 0) updateData[`${key}.formula`] = curFormula + \" + \" + curBase;\n      else updateData[`${key}.formula`] = curFormula + curBase;\n      updateData[`${key}.base`] = 0;\n    }\n  }\n}\n\nfunction _migrateActorConcentration(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const k of spellbooks) {\n    // Delete unused .concentration from old actors\n    const key = `system.attributes.spells.spellbooks.${k}`;\n    const oldValue = foundry.utils.getProperty(ent, `${key}.concentration`);\n    const isString = typeof oldValue === \"string\";\n    if (Number.isFinite(oldValue) || isString) updateData[`${key}.-=concentration`] = null;\n    if (isString) {\n      // Assume erroneous bonus formula location and combine it with existing bonus formula.\n      const formulaKey = `${key}.concentrationFormula`;\n      const formula = [oldValue];\n      formula.push(foundry.utils.getProperty(ent, formulaKey) || \"\");\n      updateData[formulaKey] = formula.filter((f) => f !== 0 && f?.toString().trim().length).join(\" + \");\n    }\n  }\n}\n\nfunction _migrateActorHPAbility(ent, updateData) {\n  // Set HP ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.hpAbility\") === undefined) {\n    updateData[\"system.attributes.hpAbility\"] = \"con\";\n  }\n\n  // Set Fortitude save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.fort.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.fort.ability\"] = \"con\";\n  }\n\n  // Set Reflex save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.ref.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.ref.ability\"] = \"dex\";\n  }\n\n  // Set Will save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.will.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.will.ability\"] = \"wis\";\n  }\n}\n\nfunction _migrateItemArrayTypes(ent, updateData) {\n  const conditionals = ent.system.conditionals;\n  if (conditionals != null && !(conditionals instanceof Array)) {\n    updateData[\"system.conditionals\"] = [];\n  }\n\n  const contextNotes = ent.system.contextNotes;\n  if (contextNotes != null && !(contextNotes instanceof Array)) {\n    if (contextNotes instanceof Object) updateData[\"system.contextNotes\"] = Object.values(contextNotes);\n    else updateData[\"system.contextNotes\"] = [];\n  }\n}\n\nfunction _migrateWeaponImprovised(ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  const value = foundry.utils.getProperty(ent.system, \"weaponType\");\n  if (value === \"improv\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.properties.imp\"] = true;\n  }\n}\n\n// Migrates the weird .shortDescription back to .description.value\n// Added with PF1 v10\nfunction _migrateItemSpellDescription(itemData, updateData) {\n  if (itemData.type !== \"spell\") return;\n\n  if (itemData.system.shortDescription) {\n    updateData[\"system.-=shortDescription\"] = null;\n\n    // If description.value exists, it's the older oversized pre-rendered version that is unwanted\n    updateData[\"system.description.value\"] = itemData.system.shortDescription;\n  }\n}\n\nfunction _migrateSpellDivineFocus(item, updateData) {\n  if (item.type !== \"spell\") return;\n\n  const df = foundry.utils.getProperty(item.system, \"components.divineFocus\");\n  if (typeof df === \"boolean\") updateData[\"system.components.divineFocus\"] = Number(df);\n}\n\nfunction _migrateClassDynamics(ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  const bab = ent.system.bab;\n  if (typeof bab === \"number\") updateData[\"system.bab\"] = \"low\";\n\n  const stKeys = [\"system.savingThrows.fort.value\", \"system.savingThrows.ref.value\", \"system.savingThrows.will.value\"];\n  for (const key of stKeys) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (typeof value === \"number\") updateData[key] = \"low\";\n  }\n}\n\nfunction _migrateClassType(ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  if (ent.system.classType !== undefined && ent.system.subType === undefined) {\n    updateData[\"system.subType\"] = \"base\";\n  }\n}\n\n// Added with PF1 v10\nfunction _migrateClassCasting(itemData, updateData) {\n  const casting = itemData.system?.casting;\n  if (!casting) return;\n\n  if (!casting.type) {\n    updateData[\"system.-=casting\"] = null;\n    return;\n  }\n\n  // domainSlots -> domain\n  if (casting.domainSlots !== undefined) {\n    updateData[\"system.casting.domain\"] = casting.domain ?? casting.domainSlots ?? 1;\n    updateData[\"system.casting.-=domainSlots\"] = null;\n  }\n}\n\nfunction _migrateWeaponCategories(ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  // Change category\n  const type = ent.system.weaponType;\n  if (type === \"misc\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"other\";\n  } else if (type === \"splash\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"splash\";\n  }\n\n  const changeProp = [\"simple\", \"martial\", \"exotic\"].includes(type);\n  if (changeProp && ent.system.weaponSubtype == null) {\n    updateData[\"system.weaponSubtype\"] = \"1h\";\n  }\n\n  // Change light property\n  const lgt = foundry.utils.getProperty(ent.system, \"properties.lgt\");\n  if (lgt != null) {\n    updateData[\"system.properties.-=lgt\"] = null;\n    if (lgt === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"light\";\n    }\n  }\n\n  // Change two-handed property\n  const two = foundry.utils.getProperty(ent.system, \"properties.two\");\n  if (two != null) {\n    updateData[\"system.properties.-=two\"] = null;\n    if (two === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"2h\";\n    }\n  }\n\n  // Change melee property\n  const melee = foundry.utils.getProperty(ent.system, \"weaponData.isMelee\");\n  if (melee != null) {\n    updateData[\"system.weaponData.-=isMelee\"] = null;\n    if (melee === false && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"ranged\";\n    }\n  }\n}\n\nfunction _migrateArmorCategories(ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const oldType = foundry.utils.getProperty(ent.system, \"armor.type\");\n  if (oldType == null) return;\n\n  if (oldType === \"clothing\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"clothing\";\n  } else if (oldType === \"shield\") {\n    updateData[\"system.equipmentType\"] = \"shield\";\n    updateData[\"system.equipmentSubtype\"] = \"lightShield\";\n  } else if (oldType === \"misc\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"wondrous\";\n  } else if ([\"light\", \"medium\", \"heavy\"].includes(oldType)) {\n    updateData[\"system.equipmentType\"] = \"armor\";\n    updateData[\"system.equipmentSubtype\"] = `${oldType}Armor`;\n  }\n\n  updateData[\"system.armor.-=type\"] = null;\n}\n\n/**\n * Convert string armor max dex to number.\n *\n * Introduced with PF1 v10\n *\n * @param item\n * @param updateData\n */\nfunction _migrateArmorMaxDex(item, updateData) {\n  if (item.type !== \"equipment\") return;\n\n  let maxDex = item.system.armor?.dex;\n  // Skip valid states\n  if (maxDex === undefined || maxDex === null) return;\n  if (typeof maxDex === \"number\") return;\n\n  // Convert string to number\n  maxDex = parseInt(maxDex);\n  if (Number.isInteger(maxDex)) {\n    updateData[\"system.armor.dex\"] = maxDex;\n  }\n  // Assume corrupt value otherwise\n  else {\n    updateData[\"system.armor.-=dex\"] = null;\n  }\n}\n\n// Introduced with PF1 v11.4\nfunction _migrateArmorACP(item, updateData) {\n  const acp = parseInt(item.system.armor?.acp ?? 0);\n\n  // Fix negative ACP\n  if (acp < 0) {\n    updateData[\"system.armor.acp\"] = Math.floor(Math.abs(acp));\n  }\n}\n\nfunction _migrateEquipmentCategories(item, updateData) {\n  if (item.type !== \"equipment\") return;\n\n  const subtype = updateData[\"system.subType\"] ?? item.system.subType;\n  if (subtype !== \"misc\") return;\n\n  switch (item.system.equipmentSubtype) {\n    case \"wondrous\":\n      updateData[\"system.subType\"] = \"wondrous\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"clothing\":\n      updateData[\"system.subType\"] = \"clothing\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"other\":\n      updateData[\"system.subType\"] = \"other\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n  }\n}\n\nfunction _migrateSpellDescriptors(item, updateData) {\n  if (item.type !== \"spell\" || item.system.types === undefined) return;\n\n  const current = item.system.types\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .filter((x) => x)\n    .map((x) => x.trim());\n\n  const value = [];\n  const custom = [];\n  const entries = Object.entries(pf1.config.spellDescriptors);\n  current.forEach((c) => {\n    const exists = entries.find(([k, v]) => c.toLowerCase() === k.toLowerCase() || c.toLowerCase() === v.toLowerCase());\n    if (exists) {\n      value.push(exists[0]);\n    } else {\n      custom.push(c);\n    }\n  });\n\n  updateData[\"system.-=types\"] = null;\n  updateData[\"system.descriptors.value\"] = value;\n  updateData[\"system.descriptors.custom\"] = custom.join(\"; \");\n}\n\nfunction _migrateSpellSubschool(item, updateData) {\n  if (item.type !== \"spell\" || item.system.subschool === undefined || typeof item.system.subschool !== \"string\") return;\n\n  // Split current custom string into options\n  const customSubschools = item.system.subschool\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .map((x) => x.trim())\n    .filter((x) => x);\n\n  // Attempt to parse custom entries\n  const values = [];\n  const entries = Object.entries(pf1.config.spellSubschools);\n  ssLoop: for (const subschool of customSubschools) {\n    for (const [ssId, ssLabel] of entries) {\n      if (subschool in pf1.config.spellSubschools) {\n        values.push(ssId);\n        continue ssLoop;\n      }\n      const re = new RegExp(ssLabel, \"i\");\n      if (re.test(subschool)) {\n        values.push(ssId);\n        continue ssLoop;\n      }\n    }\n    values.push(subschool);\n  }\n\n  updateData[\"system.subschool\"] = values;\n}\n\nfunction _migrateItemDefaultAmmo(itemData, updateData) {\n  const ammoId = itemData.flags?.pf1?.defaultAmmo;\n  if (!ammoId) return;\n  if (!itemData.system?.ammo?.default) {\n    updateData[\"system.ammo.default\"] = ammoId;\n  }\n  updateData[\"flags.pf1.-=defaultAmmo\"] = null;\n}\n\nfunction _migrateRaceItemCreatureType(itemData, updateData) {\n  if (itemData.type !== \"race\") return;\n\n  if (itemData.system.creatureType) {\n    if (!itemData.system.creatureTypes?.length) updateData[\"system.creatureTypes\"] = [itemData.system.creatureType];\n    updateData[\"system.-=creatureType\"] = null;\n  }\n\n  if (Array.isArray(itemData.system.subTypes)) {\n    const subtypes = [];\n    const oldTypes = itemData.system.subTypes.flat();\n    for (const subtype of oldTypes) {\n      if (!subtype) continue; // Should not happen\n      const lowerCaseKey = subtype.charAt(0).toLowerCase() + subtype.slice(1).replace(\" \", \"\");\n      if (lowerCaseKey in pf1.config.creatureSubtypes) {\n        subtypes.push(lowerCaseKey);\n      } else {\n        subtypes.push(subtype);\n      }\n    }\n    if (!itemData.system.creatureSubtypes?.length) updateData[\"system.creatureSubtypes\"] = subtypes;\n    updateData[\"system.-=subTypes\"] = null;\n  }\n}\n\nfunction _migrateItemDurability(itemData, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) return;\n\n  const max = itemData.system?.hp?.max;\n  if (max !== undefined) {\n    if (itemData.system?.hp?.base === undefined) {\n      updateData[\"system.hp.base\"] = Number(max ?? 10);\n    }\n    updateData[\"system.hp.-=max\"] = null;\n  }\n  const value = itemData.system?.hp?.value;\n  if (value !== undefined) {\n    if (itemData.system?.hp?.offset === undefined) {\n      // Attempt to provide offset from old data\n      updateData[\"system.hp.offset\"] = max > 0 ? value - max : 0;\n    }\n    updateData[\"system.hp.-=value\"] = null;\n  }\n}\n\nfunction _migrateItemSize(ent, updateData) {\n  // Convert custom sizing in weapons\n  if (ent.type === \"weapon\") {\n    const wdSize = foundry.utils.getProperty(ent.system, \"weaponData.size\");\n    if (wdSize) {\n      // Move old\n      updateData[\"system.size\"] = wdSize;\n      updateData[\"system.weaponData.-=size\"] = null;\n      return;\n    }\n  }\n\n  const oldSize = ent.system.size;\n  if ([\"spell\", \"class\", \"buff\", \"feat\"].includes(ent.type)) {\n    // Remove size from abstract items\n    if (oldSize !== undefined) {\n      updateData[\"system.-=size\"] = null;\n    }\n  } else {\n    // Add default size to everything else if not present\n    if (oldSize === undefined) {\n      updateData[\"system.size\"] = \"med\";\n    }\n  }\n}\n\nfunction _migrateItemFeatAbilityTypes(itemData, updateData) {\n  if (itemData.type !== \"feat\") return;\n\n  const type = itemData.system.abilityType;\n  // Convert \"none\" and other invalid values (e.g. null or \"n/a\") to \"na\"\n  // Added with PF1 v10\n  if (pf1.config.abilityTypes[type] === undefined) {\n    updateData[\"system.abilityType\"] = \"na\";\n  }\n}\n\nfunction _migrateClassLevels(ent, updateData) {\n  const level = ent.system.levels;\n  if (typeof level === \"number\" && ent.system.level == null) {\n    updateData[\"system.level\"] = level;\n    updateData[\"system.-=levels\"] = null;\n  }\n}\n\nfunction _migrateSavingThrowTypes(ent, updateData) {\n  if (\n    foundry.utils.getProperty(ent.system, \"save.type\") == null &&\n    typeof foundry.utils.getProperty(ent.system, \"save.description\") === \"string\"\n  ) {\n    const desc = foundry.utils.getProperty(ent.system, \"save.description\");\n    if (desc.match(/REF/i)) updateData[\"system.save.type\"] = \"ref\";\n    else if (desc.match(/FORT/i)) updateData[\"system.save.type\"] = \"fort\";\n    else if (desc.match(/WILL/i)) updateData[\"system.save.type\"] = \"will\";\n  }\n}\n\nfunction _migrateCR(ent, updateData) {\n  // Migrate CR offset\n  const crOffset = ent.system.crOffset;\n  if (typeof crOffset === \"number\") {\n    updateData[\"system.crOffset\"] = crOffset.toString();\n  }\n}\n\nfunction _migrateItemChanges(itemData, updateData) {\n  // Migrate changes\n  const changes = itemData.system.changes;\n  if (Array.isArray(changes)) {\n    const newChanges = [];\n    for (const c of changes) {\n      let cd;\n      if (Array.isArray(c)) {\n        cd = {\n          formula: c[0],\n          target: c[1],\n          subTarget: c[2],\n          type: c[3],\n        };\n      } else {\n        cd = foundry.utils.deepClone(c); // Avoid mutating source data so diff works properly\n      }\n      // Value should not exist, yet it was added previously by using derived data for updates.\n      delete cd.value;\n\n      newChanges.push(new pf1.components.ItemChange(cd).toObject());\n    }\n\n    // Alter the changes list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(changes, newChanges)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newChanges, changes))\n    ) {\n      updateData[\"system.changes\"] = newChanges;\n    }\n  }\n\n  const oldChanges = updateData[\"system.changes\"] ?? itemData.system?.changes ?? [];\n  const newChanges = [];\n  let updateChanges = false;\n  for (const change of oldChanges) {\n    const cd = new pf1.components.ItemChange(foundry.utils.deepClone(change)).toObject(true, true);\n    const diff = foundry.utils.diffObject(change, cd);\n    if (!foundry.utils.isEmpty(diff)) {\n      updateChanges = true;\n    }\n\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/\\.subSkills\\./.test(cd.target)) {\n      cd.target = cd.target.replace(\".subSkills.\", \".\");\n      updateChanges = true;\n    }\n    // Remove use of penalty bonus type\n    // @since PF1 v10\n    if (cd.type === \"penalty\") {\n      // Convert the special ability score case to specific target\n      if ([\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"].includes(cd.target)) {\n        cd.target = `${cd.target}Pen`;\n      }\n      // Convert all to untyped changes\n      cd.type = \"untyped\";\n      updateChanges = true;\n    }\n    newChanges.push(cd);\n  }\n  if (updateChanges) {\n    updateData[\"system.changes\"] = newChanges;\n  }\n}\n\nfunction _migrateItemContextNotes(itemData, updateData) {\n  // Migrate context notes\n  const oldNotes = itemData.system.contextNotes;\n  if (Array.isArray(oldNotes) && oldNotes?.length > 0) {\n    const newNotes = [];\n\n    for (const oldNote of oldNotes) {\n      let newNote = foundry.utils.deepClone(oldNote);\n\n      // Transform old tuple.\n      if (Array.isArray(oldNote)) {\n        newNote = { text: oldNote[0], target: oldNote[1], subTarget: oldNote[2] };\n      }\n\n      newNote = new pf1.components.ContextNote(newNote).toObject();\n\n      newNotes.push(newNote);\n    }\n\n    // Alter the context note list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(oldNotes, newNotes)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newNotes, oldNotes))\n    ) {\n      updateData[\"system.contextNotes\"] = newNotes;\n    }\n  }\n\n  const notes = updateData[\"system.contextNotes\"] ?? oldNotes ?? [];\n  let updateNotes = false;\n  const newNotes = [];\n  for (const note of notes) {\n    const newNote = { ...note };\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/^skill\\..+\\.subSkills\\..+$/.test(note.target)) {\n      newNote.target = note.target.replace(\".subSkills.\", \".\");\n      updateNotes = true;\n    }\n    newNotes.push(newNote);\n  }\n  if (updateNotes) {\n    updateData[\"system.contextNotes\"] = newNotes;\n  }\n}\n\nfunction _migrateItemChangeFlags(item, updateData) {\n  const flags = item.system?.changeFlags;\n  if (!flags) return;\n\n  // Dwarf-like encumbrance to distinct no medium/heavy encumbrance\n  if (flags.noEncumbrance !== undefined) {\n    if (flags.noEncumbrance === true) {\n      updateData[\"system.changeFlags.noMediumEncumbrance\"] = true;\n      updateData[\"system.changeFlags.noHeavyEncumbrance\"] = true;\n    }\n    updateData[\"system.changeFlags.-=noEncumbrance\"] = null;\n  }\n}\n\nfunction _migrateEquipmentSize(ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const size = ent.system.size;\n  if (!size) {\n    updateData[\"system.size\"] = \"med\";\n  }\n}\n\n// Migrate .weight number to .weight.value\n// Migrate .baseWeight that was briefly introduced in 0.81\nfunction _migrateItemWeight(ent, updateData) {\n  const baseWeight = ent.system.baseWeight,\n    weight = ent.system.weight;\n\n  // Skip items of inappropriate type\n  const isPhysical = CONFIG.Item.documentClasses[ent.type]?.isPhysical;\n  if (!isPhysical) {\n    if (weight !== undefined) {\n      // Ensure inappropriate items don't have spurious weight, which breaks data prep\n      updateData[\"system.-=weight\"] = null;\n    }\n    return;\n  }\n\n  if (Number.isFinite(weight)) {\n    updateData[\"system.weight.value\"] = weight;\n  } else if (weight == null || typeof weight !== \"object\") {\n    // Convert any other values to just 0 weight, e.g. null\n    updateData[\"system.weight.value\"] = 0;\n  }\n\n  // If baseWeight exists and looks reasonable, use it for base weight instead\n  if (baseWeight !== undefined) {\n    if (Number.isFinite(baseWeight) && baseWeight > 0) {\n      updateData[\"system.weight.value\"] = baseWeight;\n    }\n    updateData[\"system.-=baseWeight\"] = null;\n  }\n}\n\nfunction _migrateItemHealth(item, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[item.type]?.isPhysical;\n\n  const hp = item.system.hp;\n  if (isPhysical) {\n    if (hp) {\n      // Fix invalid data type\n      if (typeof hp.max === \"string\") updateData[\"system.hp.max\"] = parseInt(hp.max);\n      if (typeof hp.value === \"string\") updateData[\"system.hp.value\"] = parseInt(hp.value);\n    } else {\n      // Restore missing HP data\n      updateData[\"system.hp.value\"] = 10;\n      updateData[\"system.hp.max\"] = 10;\n    }\n  } else if (item.type !== \"class\" && hp !== undefined) {\n    updateData[\"system.-=hp\"] = null;\n  }\n}\n\nfunction _migrateSpellCosts(ent, updateData) {\n  if (ent.type !== \"spell\") return;\n\n  const spellPointCost = foundry.utils.getProperty(ent.system, \"spellPoints.cost\");\n  if (spellPointCost == null) {\n    updateData[\"system.spellPoints.cost\"] = \"1 + @sl\";\n  }\n\n  const slotCost = ent.system.slotCost;\n  if (slotCost == null) {\n    updateData[\"system.slotCost\"] = 1;\n  }\n\n  const autoDeduct = ent.system.preparation?.autoDeductCharges;\n  if (autoDeduct !== undefined) {\n    if (autoDeduct === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.preparation.-=autoDeductCharges\"] = null;\n  }\n}\n\n/**\n * Migrate spell preparation\n *\n * Added with PF1 v10\n *\n * @param {object} itemData\n * @param {object} updateData\n * @param {object} context\n * @param {Item} [context.item=null]\n */\nfunction _migrateSpellPreparation(itemData, updateData, { item = null } = {}) {\n  if (itemData.type !== \"spell\") return;\n\n  const spellbook = item?.spellbook;\n  const prepMode = spellbook?.spellPreparationMode || \"prepared\";\n  const usesSpellPoints = spellbook?.spellPoints?.useSystem ?? false;\n  const isPrepared = usesSpellPoints ? false : prepMode === \"prepared\";\n\n  const prep = itemData.system.preparation ?? {};\n  if (prep.maxAmount !== undefined) {\n    if (!(prep.max > 0)) {\n      // Migrate even older non number max amount\n      if (typeof prep.maxAmount !== \"number\") prep.maxAmount = 0;\n      updateData[\"system.preparation.max\"] = prep.maxAmount ?? 0;\n    }\n    updateData[\"system.preparation.-=maxAmount\"] = null;\n  }\n  if (prep.spontaneousPrepared !== undefined) {\n    if (!(prep.value > 0) && !isPrepared) {\n      updateData[\"system.preparation.value\"] = prep.spontaneousPrepared ? 1 : 0;\n    }\n    updateData[\"system.preparation.-=spontaneousPrepared\"] = null;\n  }\n  if (prep.preparedAmount !== undefined) {\n    if (!(prep.value > 0) && isPrepared) {\n      updateData[\"system.preparation.value\"] = Math.max(\n        prep.preparedAmount,\n        updateData[\"system.preparation.value\"] || 0\n      );\n    }\n    updateData[\"system.preparation.-=preparedAmount\"] = null;\n  }\n}\n\nfunction _migrateLootEquip(ent, updateData) {\n  if (ent.type === \"loot\" && typeof ent.system.equipped !== \"boolean\") {\n    updateData[\"system.equipped\"] = false;\n  }\n}\n\nconst _migrateItemLinks = async function (itemData, updateData, { item, actor }) {\n  const linkData = itemData.system.links ?? {};\n  for (const [linkType, oldLinks] of Object.entries(linkData)) {\n    let updated = false;\n    const links = foundry.utils.deepClone(oldLinks);\n    for (const link of links) {\n      const type = link.dataType;\n      if (type !== undefined) {\n        if (type === \"data\") {\n          delete link.dataType;\n        } else if (type === \"world\") {\n          // Reconstruct world item UUID\n          link.uuid = link.id.replace(/^world\\./, \"Item.\");\n          delete link.id;\n          delete link.dataType;\n        } else if (type === \"compendium\") {\n          // Reconstruct compendium UUID\n          link.uuid = `Compendium.${link.id}`;\n          delete link.id;\n          delete link.dataType;\n        }\n        delete link.img;\n        updated = true;\n      }\n\n      // Convert ID to relative UUID\n      if (link.id !== undefined && actor) {\n        link.uuid = actor.items?.get(link.id)?.getRelativeUUID(actor);\n        if (link.uuid) {\n          delete link.id;\n          updated = true;\n        }\n      }\n\n      if (actor && link.uuid) {\n        let linked = await fromUuid(link.uuid, { relative: actor });\n        // Attempt to recover bad links to other actors\n        if (linked?.actor) {\n          // Attempt to adjust owned item\n          if (linked.actor !== actor) linked = actor.items.get(linked.id);\n          const newLink = linked?.getRelativeUUID(actor);\n          // Successful recovery?\n          if (linked && newLink !== link.uuid) {\n            link.uuid = newLink;\n            updated = true;\n          }\n        }\n      }\n\n      // Transform non-relative UUIDs to new format\n      if (link.uuid?.[0] !== \".\" && link.uuid) {\n        const uuid = pf1.utils.internal.uniformUuid(link.uuid, actor);\n        if (link.uuid !== uuid) {\n          link.uuid = uuid;\n          updated = true;\n        }\n      }\n\n      // Handle moved compendium content\n      if (link.uuid) {\n        const movedUuid = moved[link.uuid];\n        if (movedUuid) {\n          link.uuid = movedUuid;\n          updated = true;\n        }\n      }\n\n      // Remove unused data\n      if (link._index !== undefined || link.hiddenLinks !== undefined) {\n        delete link._index;\n        delete link.hiddenLinks;\n        updated = true;\n      }\n\n      // Clear out invalid links with just a name or no info at all\n      const keys = Object.keys(link);\n      if (keys.length < 1 || (keys.length === 1 && keys.includes(\"name\"))) {\n        link._delete = true;\n        updated = true;\n      }\n    }\n\n    if (updated) {\n      updateData[`system.links.${linkType}`] = links.filter((i) => i._delete !== true);\n    }\n  }\n};\n\nfunction _migrateItemProficiencies(item, updateData) {\n  // Added with PF1 v10\n  // Migrate sim/mar to simple/martial\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (item.system.weaponProf?.value?.some((p) => oldKeys.includes(p))) {\n    const nwprof = item.system.weaponProf.value.map((p) => wprofmap[p] || p);\n    updateData[\"system.weaponProf.value\"] = nwprof;\n  }\n}\n\nfunction _migrateItemNotes(ent, updateData) {\n  const list = [\"system.attackNotes\", \"system.effectNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && !(value instanceof Array)) {\n      updateData[k] = [];\n      if (typeof value === \"string\" && value.length > 0) {\n        updateData[k] = value.trim().split(/[\\n\\r]/);\n      }\n    }\n  }\n}\n\nfunction _migrateItemActionToActions(itemData, updateData, { actor, item }) {\n  const hasOldAction =\n    !!itemData.system.actionType || !!itemData.system.activation?.type || !!itemData.system.measureTemplate;\n\n  // Cleanup old data\n  if (itemData.system.actionType !== undefined) updateData[\"system.-=actionType\"] = null;\n  if (itemData.system.activation !== undefined) updateData[\"system.-=activation\"] = null;\n  if (itemData.system.measureTemplate !== undefined) updateData[\"system.-=measureTemplate\"] = null;\n\n  // Already has actions\n  if (itemData.system.actions?.length) return;\n\n  // Proceed with old action cleanup\n\n  // The following is very blunt force migration that includes lots of bad data that shouldn't be incldued\n  if (!hasOldAction) return;\n\n  // Transfer data to an action\n  const actionData = {};\n  for (const k of Object.keys(itemData.system)) {\n    actionData[k] = itemData.system[k];\n  }\n\n  // Transfer name and image\n  if ([\"weapon\", \"attack\"].includes(itemData.type)) {\n    actionData.name = game.i18n.localize(\"PF1.Attack\");\n  } else {\n    actionData.name = game.i18n.localize(\"PF1.Use\");\n  }\n\n  // Clear description\n  delete actionData.description;\n\n  // Add spell data\n  // Make sure it has an activation type\n  actionData.activation ??= {};\n  actionData.activation.type ||= \"standard\";\n  actionData.activation.unchained ??= {};\n  actionData.activation.unchained.type ||= \"action\";\n  actionData.activation.unchained.cost ??= 2;\n\n  if (itemData.type === \"spell\") {\n    // Transfer spell duration\n    actionData.duration ??= {};\n    actionData.duration.value = itemData.system.spellDuration;\n\n    // Transfer spell point cost\n    if (actor) {\n      const spellbookKey = itemData.system.spellbook;\n      const spellbook = actor.system.attributes?.spells?.spellbooks?.[spellbookKey];\n      if (spellbook.spellPoints?.useSystem) {\n        const oldSpellPointCostFormula = itemData.system.spellPoints?.cost;\n        if (oldSpellPointCostFormula) actionData.uses.autoDeductChargesCost = oldSpellPointCostFormula;\n      }\n    }\n  }\n\n  // Fix power attack multiplier being non-number\n  const paMult = actionData.powerAttack?.multiplier;\n  if (typeof paMult === \"string\") {\n    if (paMult === \"\") delete actionData.powerAttack.multiplier;\n    else actionData.powerAttack.multiplier = parseInt(paMult);\n  }\n\n  // Clean out old attack and effect notes\n  updateData[\"system.attackNotes\"] = [];\n  updateData[\"system.effectNotes\"] = [];\n\n  updateData[\"system.actions\"] = [new pf1.components.ItemAction(actionData).toObject()];\n}\n\nfunction _migrateScriptCalls(item, updateData) {\n  if (!(item.system.scriptCalls?.length > 0)) return;\n  let updated = false;\n\n  // Clear out unused name and image for linked macros.\n  const scripts = foundry.utils.deepClone(item.system.scriptCalls);\n  for (const script of scripts) {\n    if (script.type == \"macro\") {\n      if (script.name || script.img) {\n        script.name = \"\";\n        script.img = \"\";\n        updated = true;\n      }\n    }\n  }\n\n  if (updated) {\n    updateData[\"system.scriptCalls\"] = scripts;\n  }\n}\n\n/**\n * Convert tuple learnedAt values into key:value pairs directly in the object.\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemLearnedAt(item, updateData) {\n  const learnedAt = item.system.learnedAt ?? {};\n  for (const [category, value] of Object.entries(learnedAt)) {\n    if (Array.isArray(value)) {\n      updateData[`system.learnedAt.${category}`] = value.reduce((learned, [classId, level]) => {\n        // Skip invalid entries\n        if (typeof classId !== \"string\" || classId.length == 0) return learned;\n        // Split combined entries and transform them to object format\n        for (let clsId of classId.split(\"/\")) {\n          clsId = clsId.trim().replace(\".\", \"-\"); // Sanitize\n          if (clsId) learned[clsId] = level;\n        }\n        return learned;\n      }, {});\n    }\n  }\n}\n\n/**\n * Migrate action..\n * - ... usesAmmo boolean away\n * - ... ammoType to item.system.ammo.type\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n * @param {object} updateData - Item update data\n */\nfunction _migrateActionAmmunitionUsage(action, itemData, updateData) {\n  if (action.usesAmmo === false) {\n    delete action.ammoType;\n  }\n  if (action.usesAmmo === true) {\n    if (!itemData.system.ammo?.type && !updateData[\"system.ammo.type\"]) {\n      updateData[\"system.ammo.type\"] = action.ammoType;\n      action.ammoType = \"\"; // Inherit from item\n    }\n\n    // Same as base item\n    if (itemData.system.ammo?.type == action.ammoType) delete action.ammoType;\n  }\n\n  // Migrate .ammoType to .ammo.type\n  if (action.ammoType) {\n    action.ammo ??= {};\n    action.ammo.type = action.ammoType;\n  }\n  delete action.ammoType;\n\n  // Delete empty ammo type (inherited)\n  if (action.ammo && !action.ammo.type) {\n    delete action.ammo.type;\n  }\n\n  // Uses ammo is no longer used\n  delete action.usesAmmo;\n}\n\n// Action duration\n// Added with PF1 v10\nfunction _migrateActionDuration(action, itemData) {\n  action.duration ??= {};\n\n  // Something has caused \"null\" string durations for some people, this clears it.\n  if (action.duration.value === \"null\") action.duration.value = \"\";\n\n  // Swap units to \"special\" if undefined and formula exists\n  if (!action.duration.units && !!action.duration.value) {\n    action.duration.units = \"spec\";\n  }\n\n  // Swap \"instantaneous\" formula to instantaneous unit\n  if (action.duration.value === \"instantaneous\") {\n    delete action.duration.value;\n    action.duration.units = \"inst\";\n  }\n\n  // Convert easy special values to actual duration info\n  if (action.duration.units === \"spec\") {\n    const value = action.duration.value || \"\";\n\n    switch (value) {\n      case \"1 round\":\n      case \"1 full round\":\n        action.duration.value = \"1\";\n        action.duration.units = \"round\";\n        break;\n      case \"1 min.\":\n      case \"1 minute\":\n        action.duration.value = \"1\";\n        action.duration.units = \"minute\";\n        break;\n      case \"1 hour\":\n        action.duration.value = \"1\";\n        action.duration.units = \"hour\";\n        break;\n      case \"8 hours\":\n        action.duration.value = \"8\";\n        action.duration.units = \"hour\";\n        break;\n      case \"24 hours\":\n        action.duration.value = \"24\";\n        action.duration.units = \"hour\";\n        break;\n      case \"1 day\":\n        action.duration.value = \"1\";\n        action.duration.units = \"day\";\n        break;\n      case \"permanent\":\n        delete action.duration.value;\n        action.duration.units = \"perm\";\n        break;\n      case \"see below\":\n      case \"see text\":\n        delete action.duration.value;\n        action.duration.units = \"seeText\";\n        break;\n    }\n  }\n}\n\nfunction _migrateActionMaterials(action, itemData) {\n  let addons = action.material?.addon;\n  if (addons) {\n    // Since PF1 v10.5\n    if (addons.some((ma) => !!materialChanges[ma])) {\n      action.material.addon = action.material.addon.map((ma) => materialChanges[ma] || ma);\n      addons = action.material.addon; // Ensure following code gets updated addons\n    }\n\n    // Convert Throneglass into non-addon material\n    // Since PF1 v10.3\n    const tg = \"throneglass\";\n    if (addons.includes(tg)) {\n      action.material.addon = action.material.addon.filter((ma) => ma !== tg);\n      action.material.normal.value ||= tg;\n    }\n  }\n\n  // Since PF1 v10.5\n  const newMat = materialChanges[action.material?.normal?.value];\n  if (newMat) action.material.normal.value = newMat;\n}\n\n/**\n * Added with PF1 v10\n *\n * @param {object} action\n * @param {object} itemData\n */\nfunction _migrateActionExtraAttacks(action, itemData) {\n  // Convert tuples into objects\n  if (action.attackParts?.length) {\n    const parts = action.attackParts ?? [];\n    if (parts.some((p) => Array.isArray(p))) {\n      action.attackParts = parts.map((part) => (Array.isArray(part) ? { formula: part[0], name: part[1] } : part));\n    }\n\n    // Ensure formulas are strings\n    for (const part of action.attackParts) part.formula = `${part.formula}`;\n  }\n\n  // Unify extra attacks structure\n  action.extraAttacks ??= {};\n\n  if (action.attackParts !== undefined) {\n    action.extraAttacks.manual = action.attackParts ?? [];\n    delete action.attackParts;\n  }\n\n  if (action.formulaicAttacks !== undefined) {\n    action.extraAttacks.formula ??= {};\n    action.extraAttacks.formula.count = action.formulaicAttacks?.count?.formula || \"\";\n    action.extraAttacks.formula.bonus = action.formulaicAttacks?.bonus?.formula || \"\";\n    action.extraAttacks.formula.label = action.formulaicAttacks?.label || \"\";\n    delete action.formulaicAttacks;\n  }\n\n  if (!action.extraAttacks.type) {\n    // Convert existing formulas to standard options\n    if (\n      action.extraAttacks.formula?.count === \"min(3, ceil(@attributes.bab.total / 5) - 1)\" &&\n      action.extraAttacks.formula?.bonus === \"@formulaicAttack * -5\"\n    ) {\n      action.extraAttacks.type = \"standard\";\n      delete action.extraAttacks.formula.count;\n      delete action.extraAttacks.formula.bonus;\n      delete action.extraAttacks.formula.label;\n\n      if (action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"advanced\";\n      } else {\n        delete action.extraAttacks.manual;\n      }\n    } else {\n      if (action.extraAttacks.formula?.count?.length || action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"custom\";\n      }\n    }\n\n    // Delete unused data\n    if (!action.extraAttacks.formula?.count) delete action.extraAttacks?.formula?.count;\n    if (!action.extraAttacks.formula?.bonus) delete action.extraAttacks?.formula?.bonus;\n    if (!action.extraAttacks.formula?.label) delete action.extraAttacks?.formula?.label;\n    if (!(action.extraAttacks.manual?.length > 0)) delete action.extraAttacks?.manual;\n  }\n\n  if (foundry.utils.isEmpty(action.extraAttacks.formula)) {\n    delete action.extraAttacks.formula;\n  }\n}\n\nfunction _migrateItemChargeCost(item, updateData) {\n  const toggle = item.system.uses?.autoDeductCharges;\n  if (toggle !== undefined) {\n    // Mimic old setting by setting cost to 0\n    if (toggle === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.uses.-=autoDeductCharges\"] = null;\n  }\n  // Special handling for cantrips if the above didn't match\n  else if (item.system.level === 0 && item.system.uses?.autoDeductChargesCost === undefined) {\n    const defaultAction = item.system.actions?.[0];\n    // Check for presence of obsoleted autoDeductCharges in first action\n    if (\n      defaultAction?.uses?.autoDeductCharges === true &&\n      updateData[\"system.uses.autoDeductChargesCost\"] === undefined\n    ) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n  }\n}\n\n// Added with PF1 v10\nfunction _migrateItemLimitedUses(itemData, updateData) {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (itemData.system.uses?.per === \"unlimited\") {\n    updateData[\"system.uses.per\"] = \"\";\n  }\n\n  // Only physical items have single use, convert use cases to 1 charge\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (itemData.system.uses?.per === \"single\") {\n      updateData[\"system.uses.per\"] = \"charges\";\n      updateData[\"system.uses.maxFormula\"] = \"1\";\n    }\n  }\n}\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nfunction _migrateActionDamageType(action, itemData) {\n  if (!action.damage) return;\n\n  // Determine data paths using damage types\n  const damageGroupPaths = [\"parts\", \"critParts\", \"nonCritParts\"];\n  for (const damageGroupKey of damageGroupPaths) {\n    if (!action.damage[damageGroupKey]) continue;\n\n    // v9 migration of array damage format\n    action.damage[damageGroupKey] = action.damage[damageGroupKey].map((part) => {\n      if (Array.isArray(part)) {\n        const [formula, type] = part;\n        return { formula, type };\n      }\n      return part;\n    });\n\n    // Other old data format changes\n    const damageGroup = action.damage[damageGroupKey];\n    for (const damagePart of damageGroup) {\n      const damageType = damagePart.type;\n      if (!damageType) continue;\n\n      // Convert damage types\n      if (typeof damageType === \"string\") {\n        damagePart.types = _Action_ConvertDamageType(damageType);\n        if (!damagePart.types.length) damagePart.types = damageType.split(\";\");\n        delete damagePart.type;\n      }\n      // Move existing array\n      else if (damageType instanceof Array) {\n        damagePart.types = damageType;\n        delete damagePart.type;\n      }\n    }\n  }\n}\n\n/**\n * @param {object} actionData - Action data\n * @param {object} itemData - Parent item data\n * @param {object} options\n * @param {pf1.components.ItemAction} [options.action]\n */\nfunction _migrateActionConditionals(actionData, itemData, { action } = {}) {\n  for (const conditional of actionData.conditionals ?? []) {\n    // Create conditional ID\n    conditional._id ??= foundry.utils.randomID(16);\n\n    conditional.modifiers ??= [];\n    if (!Array.isArray(conditional.modifiers)) {\n      conditional.modifiers = Object.values(conditional.modifiers);\n    }\n\n    for (const modifier of conditional.modifiers) {\n      // Create modifier ID\n      modifier._id ??= foundry.utils.randomID(16);\n\n      let reResult;\n      // Convert modifier subtarget\n      if ((reResult = modifier.subTarget?.match(/^attack\\.([0-9]+)/))) {\n        modifier.subTarget = `attack_${reResult[1]}`;\n      }\n\n      // Remove excess sheet data that was previously incorrectly added\n      delete modifier.targets;\n      delete modifier.subTargets;\n      delete modifier.conditionalModifierTypes;\n      delete modifier.conditionalCritical;\n\n      // Convert modifier damage type\n      if (modifier.target === \"damage\" && !modifier.damageType?.length && modifier.type) {\n        modifier.damageType = _Action_ConvertDamageType(modifier.type);\n        if (!modifier.damageType.length) modifier.damageType = modifier.type.split(\";\");\n        modifier.type = \"\";\n      }\n\n      pf1.components.ItemConditionalModifier.pruneData(modifier);\n    }\n  }\n\n  // Filter through the datamodel\n  if (actionData.conditionals?.length) {\n    actionData.conditionals = actionData.conditionals.map((c) =>\n      new pf1.components.ItemConditional(c).toObject(true, true)\n    );\n  }\n}\n\nfunction _migrateActorCR(ent, updateData) {\n  // Migrate base CR\n  const cr = foundry.utils.getProperty(ent.system, \"details.cr\");\n  if (typeof cr === \"number\") {\n    updateData[\"system.details.cr.base\"] = cr;\n  } else if (cr == null) {\n    updateData[\"system.details.cr.base\"] = 1;\n  }\n\n  // Remove derived data if present\n  if (foundry.utils.getProperty(ent.system, \"details.cr.total\") !== undefined) {\n    updateData[\"system.details.cr.-=total\"] = null;\n  }\n}\n\nfunction _migrateAttackAbility(ent, updateData) {\n  const cmbAbl = foundry.utils.getProperty(ent.system, \"attributes.cmbAbility\");\n  if (cmbAbl === undefined) updateData[\"system.attributes.cmbAbility\"] = \"str\";\n\n  const meleeAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.meleeAbility\");\n  if (meleeAbl === undefined) updateData[\"system.attributes.attack.meleeAbility\"] = \"str\";\n\n  const rangedAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.rangedAbility\");\n  if (rangedAbl === undefined) updateData[\"system.attributes.attack.rangedAbility\"] = \"dex\";\n}\n\nfunction _migrateActorSpellbookUsage(ent, updateData) {\n  const spellbookUsage = foundry.utils.getProperty(ent.system, \"attributes.spells.usedSpellbooks\");\n  if (spellbookUsage !== undefined) {\n    updateData[\"system.attributes.spells.-=usedSpellbooks\"] = null;\n  }\n}\n\nfunction _migrateActorNullValues(ent, updateData) {\n  // Prepare test data\n  const entries = { \"system.attributes.energyDrain\": foundry.utils.getProperty(ent.system, \"attributes.energyDrain\") };\n  for (const [k, a] of Object.entries(ent.system.abilities || {})) {\n    entries[`system.abilities.${k}.damage`] = a.damage;\n    entries[`system.abilities.${k}.drain`] = a.drain;\n    entries[`system.abilities.${k}.penalty`] = a.penalty;\n  }\n\n  // Set null values to 0\n  for (const [k, v] of Object.entries(entries)) {\n    if (v === null) {\n      updateData[k] = 0;\n    }\n  }\n}\n\nfunction _migrateActorSpellbookDomainSlots(ent, updateData) {\n  const spellbooks = foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {};\n\n  for (const [k, b] of Object.entries(spellbooks)) {\n    if (b.domainSlotValue !== undefined) continue;\n    const key = `system.attributes.spells.spellbooks.${k}.domainSlotValue`;\n    updateData[key] = 1;\n  }\n}\n\nfunction _migrateActorStatures(ent, updateData) {\n  const stature = foundry.utils.getProperty(ent.system, \"traits.stature\");\n\n  if (stature === undefined) {\n    updateData[\"system.traits.stature\"] = \"tall\";\n  }\n}\n\n// Migrate weapon proficiencies\n// Converts sim and mar to simple and martial\n// Added with PF1 v10\nfunction _migrateActorProficiencies(actorData, updateData) {\n  const wprofs = updateData[\"system.traits.weaponProf\"] ?? actorData.system.traits?.weaponProf;\n  if (!wprofs?.length) return;\n\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  if (wprofs.some((p) => !!wprofmap[p])) {\n    const nwprofs = wprofs.map((p) => wprofmap[p] || p);\n    updateData[\"system.traits.weaponProf\"] = nwprofs;\n  }\n}\n\nfunction _migrateActorDefenseAbility(ent, updateData) {\n  const normalACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.normal.ability\");\n  if (normalACAbl === undefined) updateData[\"system.attributes.ac.normal.ability\"] = \"dex\";\n  const touchACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.touch.ability\");\n  if (touchACAbl === undefined) updateData[\"system.attributes.ac.touch.ability\"] = \"dex\";\n\n  // CMD\n  const cmdDexAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.dexAbility\");\n  if (cmdDexAbl === undefined) updateData[\"system.attributes.cmd.dexAbility\"] = \"dex\";\n  const cmdStrAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.strAbility\");\n  if (cmdStrAbl === undefined) updateData[\"system.attributes.cmd.strAbility\"] = \"str\";\n}\n\nfunction _migrateActorInitAbility(ent, updateData) {\n  const abl = foundry.utils.getProperty(ent.system, \"attributes.init.ability\");\n\n  if (abl === undefined) {\n    updateData[\"system.attributes.init.ability\"] = \"dex\";\n  }\n}\n\nfunction _migrateActorCMBRevamp(ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"attributes.cmb.total\") !== undefined) {\n    updateData[\"system.attributes.cmb.-=total\"] = null;\n  }\n}\n\nfunction _migrateActorChangeRevamp(ent, updateData) {\n  // Skills\n  Object.keys(ent.system.skills ?? {}).forEach((s) => {\n    const path = `system.skills.${s}.`;\n    if (foundry.utils.getProperty(ent, path + \"changeBonus\") !== undefined) {\n      updateData[path + \"-=changeBonus\"] = null;\n    }\n\n    // Check for subskill\n    Object.keys(foundry.utils.getProperty(ent, `system.skills.${s}.subSkills`) ?? {}).forEach((s2) => {\n      const subPath = `system.skills.${s}.subSkills.${s2}.`;\n      if (foundry.utils.getProperty(ent, subPath + \"changeBonus\") !== undefined) {\n        updateData[subPath + \"-=changeBonus\"] = null;\n      }\n    });\n  });\n\n  // Remove derived data\n  const derivedKeys = {\n    \"system.attributes.hp.max\": \"attributes.hp.-=max\",\n    \"system.attributes.ac.normal.total\": \"attributes.ac.normal.-=total\",\n    \"system.attributes.ac.touch.total\": \"attributes.ac.touch.-=total\",\n    \"system.attributes.ac.flatFooted.total\": \"attributes.ac.flatFooted.-=total\",\n    \"system.attributes.cmd.total\": \"attributes.cmd.-=total\",\n    \"system.attributes.cmd.flatFootedTotal\": \"attributes.cmd.-=flatFootedTotal\",\n    \"system.attributes.sr.total\": \"attributes.sr.-=total\",\n    \"system.attributes.init.total\": \"attributes.init.-=total\",\n  };\n\n  Object.entries(derivedKeys).forEach(([key, updateKey]) => {\n    if (foundry.utils.getProperty(ent, key) !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  });\n}\n\nfunction _migrateActorInvaliddSkills(actor, updateData) {\n  const skills = actor.system.skills;\n  if (!skills) return;\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) {\n      updateData[`system.skills.-=${key}`] = null;\n      continue;\n    }\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) {\n        updateData[`system.skills.${key}.subSkills.-=${subKey}`] = null;\n      }\n    }\n  }\n}\n\n/**\n * Migrate abnormal skill rank values to 0.\n * Primarily changing nulls to 0 to match new actors.\n *\n * @param ent\n * @param updateData\n */\nfunction _migrateActorSkillRanks(ent, updateData) {\n  const skills = ent.system.skills;\n  if (!skills) return; // Unlinked with no skill overrides of any kind\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) continue;\n    if (!Number.isFinite(sklData.rank)) updateData[`system.skills.${key}.rank`] = 0;\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (!Number.isFinite(subSklData.rank)) updateData[`system.skills.${key}.subSkills.${subKey}.rank`] = 0;\n    }\n  }\n}\n\nfunction _migrateCarryBonus(ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.bonus.user\") === undefined) {\n    let bonus = foundry.utils.getProperty(ent.system, \"abilities.str.carryBonus\");\n    if (bonus !== undefined) {\n      bonus = bonus || 0;\n      updateData[\"system.details.carryCapacity.bonus.user\"] = bonus;\n    }\n    updateData[\"system.abilities.str.-=carryBonus\"] = null;\n  }\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.multiplier.user\") === undefined) {\n    let mult = foundry.utils.getProperty(ent.system, \"abilities.str.carryMultiplier\");\n    if (mult !== undefined) {\n      mult = mult || 1;\n      updateData[\"system.details.carryCapacity.multiplier.user\"] = mult - 1;\n    }\n    updateData[\"system.abilities.str.-=carryMultiplier\"] = null;\n  }\n}\n\nfunction _migrateBuggedValues(ent, updateData) {\n  // Convert to integers\n  const convertToInt = [\n    \"system.details.xp.value\",\n    \"system.currency.pp\",\n    \"system.currency.gp\",\n    \"system.currency.sp\",\n    \"system.currency.cp\",\n    \"system.altCurrency.pp\",\n    \"system.altCurrency.gp\",\n    \"system.altCurrency.sp\",\n    \"system.altCurrency.cp\",\n  ];\n  for (const key of convertToInt) {\n    const oldValue = foundry.utils.getProperty(ent, key),\n      value = parseInt(oldValue ?? 0);\n    if (oldValue !== value) {\n      updateData[key] = value;\n    }\n  }\n}\n\nfunction _migrateSpellbookUsage(ent, updateData) {\n  const usedSpellbooks = ent.items\n    .filter((i) => i.type === \"spell\")\n    .reduce((cur, i) => {\n      if (!i.system.spellbook) return cur;\n      if (cur.includes(i.system.spellbook)) return cur;\n      cur.push(i.system.spellbook);\n      return cur;\n    }, []);\n\n  for (const bookKey of usedSpellbooks) {\n    const path = `system.attributes.spells.spellbooks.${bookKey}.inUse`;\n    if (foundry.utils.getProperty(ent, path) !== true) {\n      updateData[path] = true;\n    }\n  }\n}\n\nfunction _migrateActorHP(ent, updateData) {\n  // Migrate HP, Wounds and Vigor values from absolutes to relatives, which is a change in 0.80.16\n  for (const k of [\"system.attributes.hp\", \"system.attributes.wounds\", \"system.attributes.vigor\"]) {\n    const value = foundry.utils.getProperty(ent, `${k}.value`);\n\n    // Fill offset if missing\n    if (foundry.utils.getProperty(ent, `${k}.offset`) == null) {\n      const max = foundry.utils.getProperty(ent, `${k}.max`) ?? 0;\n      updateData[`${k}.offset`] = (value ?? 0) - max;\n    }\n    // Value is no longer used if it exists\n\n    if (value !== undefined) {\n      updateData[`${k}.-=value`] = null;\n    }\n  }\n}\n\nfunction _migrateActorSenses(ent, updateData, token) {\n  const oldSenses = ent.system.traits?.senses;\n\n  if (!oldSenses) return;\n\n  if (typeof oldSenses === \"string\") {\n    const tokenData = token ?? ent.prototypeToken;\n\n    updateData[\"system.traits.senses\"] = {\n      dv: { value: tokenData.brightSight },\n      ts: { value: 0 },\n      bs: { value: 0 },\n      bse: { value: 0 },\n      ll: {\n        enabled: tokenData.flags?.pf1?.lowLightVision,\n        multiplier: {\n          dim: tokenData.flags?.pf1?.lowLightVisionMultiplier ?? 2,\n          bright: tokenData.flags?.pf1?.lowLightVisionMultiplierBright ?? 2,\n        },\n      },\n      sid: false,\n      tr: { value: 0 },\n      si: false,\n      sc: { value: 0 },\n      custom: oldSenses,\n    };\n  }\n\n  // Migrate boolean Scent sense to number\n  if (typeof oldSenses?.sc === \"boolean\") {\n    updateData[\"system.traits.senses.sc\"] = { value: oldSenses.sc ? 30 : 0 };\n  }\n\n  // Migrate boolean true seeing to number\n  if (typeof oldSenses?.tr === \"boolean\") {\n    updateData[\"system.traits.senses.tr\"] = { value: oldSenses.tr ? 120 : 0 };\n  }\n\n  for (const id of [\"dv\", \"ts\", \"ls\", \"bs\", \"bse\", \"sc\", \"tr\"]) {\n    const sense = oldSenses?.[id];\n    if (foundry.utils.getType(sense) !== \"Object\") {\n      updateData[`system.traits.senses.${id}`] = { value: sense || 0 };\n    }\n  }\n}\n\nfunction _migrateActorSkillJournals(ent, updateData) {\n  const reOldJournalFormat = /^[a-zA-Z0-9]+$/;\n  for (const [skillKey, sklData] of Object.entries(ent.system.skills ?? {})) {\n    if (!sklData) continue;\n    for (const [subSkillKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (subSklData.journal?.match(reOldJournalFormat)) {\n        updateData[`system.skills.${skillKey}.subSkills.${subSkillKey}.journal`] = `JournalEntry.${subSklData.journal}`;\n      }\n    }\n\n    if (sklData.journal?.match(reOldJournalFormat)) {\n      updateData[`system.skills.${skillKey}.journal`] = `JournalEntry.${sklData.journal}`;\n    }\n  }\n}\n\nfunction _migrateActorSubskillData(actor, updateData) {\n  for (const [skillId, skillData] of Object.entries(actor.system.skills ?? {})) {\n    if (!skillData) continue;\n    for (const [subSkillId, subSkillData] of Object.entries(skillData.subSkills ?? {})) {\n      if (!subSkillData) continue;\n      if (subSkillData.mod !== undefined) {\n        // Remove permanently stored .mod which is derived value\n        // Added with PF1 v9\n        updateData[`system.skills.${skillId}.subSkills.${subSkillId}.-=mod`] = null;\n      }\n    }\n  }\n}\n\nfunction _migrateActorDRandER(ent, updateData) {\n  const oldDR = ent.system.traits?.dr;\n  const oldER = ent.system.traits?.eres;\n\n  if (typeof oldDR === \"string\") {\n    updateData[\"system.traits.dr\"] = {\n      value: [],\n      custom: oldDR,\n    };\n  }\n\n  if (typeof oldER === \"string\") {\n    updateData[\"system.traits.eres\"] = {\n      value: [],\n      custom: oldER,\n    };\n  }\n}\n\n/**\n * @param trait\n * @since PF1 v11\n */\nfunction _migrateAnyTrait(trait) {\n  if (!trait) return null; // Missing\n  if (Array.isArray(trait)) return null; // Already in final format\n\n  const all = new Set();\n\n  // Pull standard choices\n  if (Array.isArray(trait.value) && trait.value.length) {\n    trait.value.forEach((v) => all.add(v));\n  }\n  // Convert older plain string custom traits to array\n  if (typeof trait.custom == \"string\") {\n    trait.custom =\n      trait.custom\n        ?.split(pf1.config.re.traitSeparator)\n        .map((x) => x.trim())\n        .filter((x) => x) ?? [];\n  }\n  // Pull custom choices\n  if (Array.isArray(trait.custom) && trait.custom.length) {\n    trait.custom.forEach((v) => all.add(v));\n  }\n\n  return [...all];\n}\n\nfunction _migrateActorTraits(actor, updateData) {\n  const keys = [\"di\", \"dv\", \"ci\", \"languages\", \"armorProf\", \"weaponProf\"];\n\n  for (const key of keys) {\n    const trait = actor.system.traits?.[key];\n    if (!trait) continue; // Missing\n    if (Array.isArray(trait)) continue; // Already in final format\n\n    const selections = _migrateAnyTrait(trait);\n    if (selections) updateData[`system.traits.${key}`] = selections;\n  }\n}\n\n/**\n * @param itemData\n * @param updateData\n */\nfunction _migrateItemTraits(itemData, updateData) {\n  const keys = [\n    \"armorProf\",\n    \"descriptors\",\n    \"subschool\",\n    \"languages\",\n    \"weaponGroups\",\n    \"weaponProf\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"conditions\",\n  ];\n\n  for (const key of keys) {\n    const trait = itemData.system?.[key];\n    if (!trait) continue; // Missing\n    if (Array.isArray(trait)) continue; // Already in final format\n\n    const selections = _migrateAnyTrait(trait);\n    if (selections) updateData[`system.${key}`] = selections;\n  }\n}\n\n/**\n * @param actorData\n * @param updateData\n * @since PF1 v10\n */\nfunction _migrateActorFlags(actorData, updateData) {\n  const flags = actorData.flags?.pf1;\n  if (!flags) return;\n\n  const getUniformValue = (v) => {\n    if (v === \"true\" || v === \"yes\" || v === true) return true;\n    if (v === \"false\" || v === \"no\" || v === false) return false;\n    return null;\n  };\n\n  // visionPermission to visionSharing\n  if (flags.visionPermission) {\n    updateData[\"flags.pf1.visionSharing.default\"] = getUniformValue(flags.visionPermission.default);\n    updateData[\"flags.pf1.visionSharing.users\"] = Object.fromEntries(\n      Object.entries(flags.visionPermission?.users ?? {}).map(([uid, data]) => [uid, getUniformValue(data.level)])\n    );\n\n    // Cleanup pointless users\n    for (const [uid, shared] of Object.entries(updateData[\"flags.pf1.visionSharing.users\"])) {\n      if (shared === null) {\n        delete updateData[\"flags.pf1.visionSharing.users\"][uid];\n      }\n    }\n    if (foundry.utils.isEmpty(updateData[\"flags.pf1.visionSharing.users\"])) {\n      delete updateData[\"flags.pf1.visionSharing.users\"];\n    }\n\n    // Cleanup pointless default\n    if (updateData[\"flags.pf1.visionSharing.default\"] !== true) {\n      delete updateData[\"flags.pf1.visionSharing.default\"];\n    }\n\n    updateData[\"flags.pf1.-=visionPermission\"] = null;\n  }\n\n  // Cleanup vision sharing\n  // Added with PF1 v11.4\n  if (flags.visionSharing) {\n    let noDefault = false,\n      noUsers = false;\n\n    updateData[\"flags.pf1.visionSharing\"] ??= {};\n    updateData[\"flags.pf1.visionSharing\"].users ??= {};\n\n    if (flags.visionSharing.default !== undefined) {\n      const _default = getUniformValue(flags.visionSharing.default);\n      // Remove redundant value\n      if (_default !== true) {\n        updateData[\"flags.pf1.visionSharing\"][\"-=default\"] = null;\n        noDefault = true;\n      }\n      // Fix value\n      else if (_default !== flags.visionSharing.default) {\n        updateData[\"flags.pf1.visionSharing\"][\"default\"] = _default;\n      }\n    }\n\n    let users = 0; // Count retained users\n    for (const [uid, _enabled] of Object.entries(flags.visionSharing.users ?? {})) {\n      users++;\n      const enabled = getUniformValue(_enabled);\n      // Remove redundant value\n      if (enabled === null || !game.users.get(uid)) {\n        updateData[\"flags.pf1.visionSharing\"].users[`-=${uid}`] = null;\n        users--;\n      }\n      // Fix value\n      else if (_enabled !== enabled) {\n        updateData[\"flags.pf1.visionSharing\"].users[uid] = enabled;\n      }\n    }\n\n    // Delete users if no user configs remain\n    if (!users) {\n      delete updateData[\"flags.pf1.visionSharing\"]?.users;\n      updateData[\"flags.pf1.visionSharing\"] ??= {};\n      updateData[\"flags.pf1.visionSharing\"][\"-=users\"] = null;\n      noUsers = true;\n    }\n\n    // Delete flags if nothing is left\n    if (noDefault && noUsers) {\n      delete updateData[\"flags.pf1.visionSharing\"];\n      updateData[\"flags.pf1.-=visionSharing\"] = null;\n    }\n  }\n}\n\nfunction _Action_ConvertDamageType(damageTypeString) {\n  const separator = /(?:\\s*\\/\\s*|\\s+and\\s+|\\s+or\\s+)/i;\n  const damageTypeList = [\n    {\n      tests: [\"b\", \"blunt\", \"bludgeoning\"],\n      result: \"bludgeoning\",\n    },\n    {\n      tests: [\"p\", \"pierce\", \"piercing\"],\n      result: \"piercing\",\n    },\n    {\n      tests: [\"s\", \"slash\", \"slashing\"],\n      result: \"slashing\",\n    },\n    {\n      tests: [\"f\", \"fire\"],\n      result: \"fire\",\n    },\n    {\n      tests: [\"cold\", \"c\"],\n      result: \"cold\",\n    },\n    {\n      tests: [\"e\", \"electric\", \"electricity\", \"electrical\"],\n      result: \"electric\",\n    },\n    {\n      tests: [\"a\", \"acid\"],\n      result: \"acid\",\n    },\n    {\n      tests: [\"sonic\"],\n      result: \"sonic\",\n    },\n    {\n      tests: [\"force\"],\n      result: \"force\",\n    },\n    {\n      tests: [\"neg\", \"negative\"],\n      result: \"negative\",\n    },\n    {\n      tests: [\"pos\", \"positive\"],\n      result: \"positive\",\n    },\n    {\n      tests: [\"u\", \"untyped\", \"untype\"],\n      result: \"untyped\",\n    },\n  ];\n\n  const damageTypes = damageTypeString.split(separator).map((o) => o.toLowerCase());\n  const result = [];\n  for (const damageTest of damageTypeList) {\n    for (const testString of damageTest.tests) {\n      if (damageTypes.includes(testString)) {\n        result.push(damageTest.result);\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction _migrateContainerPrice(item, updateData) {\n  if (item.type !== \"container\") return;\n\n  // .basePrice was merged into .price with PF1 v9\n  if (item.system.basePrice !== undefined) {\n    updateData[\"system.price\"] = item.system.basePrice;\n    updateData[\"system.-=basePrice\"] = null;\n  }\n  if (item.system.unidentified?.basePrice !== undefined) {\n    updateData[\"system.unidentified.price\"] = item.system.unidentified.basePrice;\n    updateData[\"system.unidentified.-=basePrice\"] = null;\n  }\n}\n\nfunction _migrateContainerReduction(item, updateData) {\n  if (item.type !== \"container\") return;\n  if (item.system.weightReduction !== undefined) {\n    updateData[\"system.weight.reduction.percent\"] = item.system.weightReduction;\n    updateData[\"system.-=weightReduction\"] = null;\n  }\n}\n\nfunction _migrateItemType(ent, updateData) {\n  const type = ent.type;\n  const oldType = ent.system[`${type}Type`];\n  if (oldType == null) return;\n  updateData[\"system.subType\"] = oldType;\n  updateData[`system.-=${type}Type`] = null;\n}\n\n/**\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v10\n */\nfunction _migrateItemFlags(itemData, updateData) {\n  if (!itemData.flags?.pf1) return;\n\n  if (itemData.flags.pf1.abundant !== undefined) {\n    if (itemData.system.abundant === undefined) {\n      updateData[\"system.abundant\"] = Boolean(itemData.flags.pf1.abundant);\n    }\n    updateData[\"flags.pf1.-=abundant\"] = null;\n  }\n}\n\nfunction _migrateItemMaterials(itemData, updateData) {\n  for (const materialPath of [\"material\", \"armor.material\"]) {\n    const material = foundry.utils.getProperty(itemData.system, materialPath);\n    if (!material) continue;\n\n    // Convert incorrect material addon data\n    const tg = \"throneglass\";\n    // Weapon\n    if (material?.addon) {\n      let addon = material.addon;\n      if (!Array.isArray(addon)) {\n        updateData[`system.${material}.addon`] = Object.entries(addon)\n          .filter(([_, chosen]) => chosen)\n          .map(([key]) => key);\n        addon = updateData[`system.${materialPath}.addon`];\n      }\n      // Convert Throneglass into main material\n      // Since PF1 v10.3\n      if (addon.includes(tg)) {\n        updateData[`system.${materialPath}.addon`] = addon.filter((ma) => ma !== tg);\n        if (!itemData.system.material?.normal?.value) {\n          updateData[`system.${materialPath}.normal.value`] = tg;\n        }\n      }\n    }\n\n    // Convert material IDs\n    // Since PF1 v10.5\n    const addons = updateData[`system.${materialPath}.addon`] ?? material?.addon ?? [];\n    if (addons?.some((ma) => !!materialChanges[ma])) {\n      updateData[`system.${materialPath}.addon`] = addons.map((ma) => materialChanges[ma] ?? ma);\n    }\n\n    const newMat = materialChanges[material?.normal?.value];\n    if (newMat) updateData[`system.${materialPath}.normal.value`] = newMat;\n  }\n}\n\n/**\n * Migrate item held option.\n *\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v11\n */\nfunction _migrateItemHeld(itemData, updateData) {\n  if (itemData.system.held === \"normal\") {\n    updateData[\"system.held\"] = \"1h\";\n  }\n}\n\n/**\n * Removes data that the system has added to items that is now unused with no new location.\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemUnusedData(item, updateData) {\n  // .priceUnits was never used, removal added with PF1 v9\n  if (item.system.priceUnits !== undefined) {\n    updateData[\"system.-=priceUnits\"] = null;\n  }\n\n  // .description.chat was never used\n  if (item.system.description?.chat !== undefined) {\n    updateData[\"system.description.-=chat\"] = null;\n  }\n\n  // .identifiedName was made obsolete with PF1 v9\n  if (item.system.identifiedName !== undefined) {\n    updateData[\"system.-=identifiedName\"] = null;\n  }\n\n  // Creating items in containers added typeName for no reason (in 0.82.5 and older)\n  if (item.system.typeName !== undefined) {\n    updateData[\"system.-=typeName\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.weaponData !== undefined) {\n    updateData[\"system.-=weaponData\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.range !== undefined) {\n    updateData[\"system.-=range\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.primaryAttack !== undefined) {\n    updateData[\"system.-=primaryAttack\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.activation !== undefined) {\n    updateData[\"system.-=activation\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.unchainedAction !== undefined) {\n    updateData[\"system.-=unchainedAction\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.measureTemplate !== undefined) {\n    updateData[\"system.-=measureTemplate\"] = null;\n  }\n\n  // useCustomTag not used since PF1 v10\n  if (item.system.useCustomTag !== undefined) {\n    updateData[\"system.-=useCustomTag\"] = null;\n    if (item.system.useCustomTag === false && item.system.tag !== undefined) {\n      updateData[\"system.-=tag\"] = null;\n    }\n  }\n\n  // ammoType seems to have never been actually used, but it was stored in items\n  if (item.system.ammoType !== undefined) {\n    updateData[\"system.-=ammoType\"] = null;\n    // Move it anyway just in case, if missing\n    if (!item.system.ammo?.type && item.system.ammoType) {\n      updateData[\"system.ammo.type\"] = item.system.ammoType;\n    }\n  }\n}\n\n/**\n * Migrate Active Effect data.\n * - Removes pf1_ status ID prefixes.\n *\n * Added with PF1 v10\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} [actor] - Actor document\n * @param actor\n */\nconst _migrateActorActiveEffects = async (actorData, updateData, actor) => {\n  // Migate Active Effects\n  const effects = [];\n  for (const ae of actorData.effects ?? []) {\n    const aeUpdate = await migrateActiveEffectData(ae, actor);\n    if (!foundry.utils.isEmpty(aeUpdate)) {\n      aeUpdate._id = ae._id;\n      effects.push(aeUpdate);\n    }\n  }\n\n  if (effects.length) updateData.effects = effects;\n};\n\nfunction _migrateActorUnusedData(actor, updateData) {\n  // Obsolete vision\n  if (foundry.utils.getProperty(actor.system, \"attributes.vision\") !== undefined) {\n    updateData[\"system.attributes.-=vision\"] = null;\n  }\n\n  if (foundry.utils.getProperty(actor.prototypeToken, \"flags.pf1.lowLightVision\") !== undefined) {\n    updateData[\"prototypeToken.flags.pf1.-=lowLightVision\"] = null;\n  }\n\n  // XP max is purely derived value\n  if (actor.system.details?.xp?.max !== undefined) {\n    updateData[\"system.details.xp.-=max\"] = null;\n  }\n\n  // Actor resources have always been derived data\n  if (actor.system.resources !== undefined) {\n    updateData[\"system.-=resources\"] = null;\n  }\n\n  // Conditions no longer are permanently stored in actor data (since PF1 v10)\n  if (actor.system.attributes?.conditions !== undefined) {\n    updateData[\"system.attributes.-=conditions\"] = null;\n  }\n\n  // details.level is derived data\n  if (actor.system.details?.level !== undefined) {\n    updateData[\"system.details.-=level\"] = null;\n  }\n\n  // details.tooltip was for old token tooltip (removed with v11) actor overrides\n  if (actor.system.details?.tooltip) {\n    updateData[\"system.details.-=tooltip\"] = null;\n  }\n}\n\n/**\n * Flatten item tuple arrays\n * Since PF1 v9\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemTuples(item, updateData) {\n  // Race subtypes\n  if (item.type === \"race\") {\n    if (item.system.subTypes?.length) {\n      if (typeof item.system.subTypes[0] !== \"string\") {\n        updateData[\"system.subTypes\"] = item.system.subTypes.flat();\n      }\n    }\n  }\n\n  // Tags\n  if (item.system.tags?.length) {\n    if (typeof item.system.tags[0] !== \"string\") {\n      updateData[\"system.tags\"] = item.system.tags.flat();\n    }\n  }\n\n  // Feat class associations\n  const classAssociations = item.system.associations?.classes;\n  if (classAssociations?.length) {\n    if (typeof classAssociations[0] !== \"string\") {\n      updateData[\"system.associations.classes\"] = classAssociations.flat();\n    }\n  }\n}\n\n/**\n * Migrate Active Effect data\n *\n * @param {object} ae Active Effect data\n * @param {Actor} actor Actor\n */\nconst migrateActiveEffectData = async (ae, actor) => {\n  if (!actor) return;\n\n  const updateData = {};\n\n  // Fix broken AE\n  if (!ae.name) updateData.name = \"No Name\";\n\n  /**\n   * @param {string} origin Origin string\n   * @returns {string|undefined} Relative UUID, if origin was found\n   */\n  const getNewRelativeOrigin = async (origin) => {\n    if (typeof origin !== \"string\") return; // Invalid origin type, recorded by SBC?\n    const newOrigin = await fromUuid(origin, { relative: actor });\n    if (newOrigin instanceof Item && actor && newOrigin.actor === actor) {\n      return newOrigin.getRelativeUUID(actor);\n    }\n  };\n\n  // Convert no longer used flags.pf1.prigin to origin, if no origin is present\n  const originFlag = ae.flags?.pf1?.origin;\n  if (originFlag) {\n    if (!ae.origin) {\n      const newOrigin = await getNewRelativeOrigin(originFlag);\n      if (newOrigin) updateData.origin = newOrigin;\n    }\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=origin\"] = null;\n  }\n\n  // Convert origin to relative origin\n  if (ae.origin) {\n    const newOrigin = await getNewRelativeOrigin(ae.origin);\n    // Avoid empty updates\n    if (newOrigin && ae.origin !== newOrigin) {\n      updateData.origin = newOrigin;\n    }\n  }\n\n  // Remove pf1_ prefix from status effects\n  if (ae.statuses.some((s) => s.startsWith(\"pf1_\"))) {\n    updateData.statuses = Array.from(new Set(ae.statuses.map((s) => s.replace(/^pf1_/, \"\"))));\n  }\n\n  return updateData;\n};\n\n/**\n * Migrate Roll JSON\n *\n * Creates clone of the roll object.\n *\n * @param {object} roll JSON\n * @param {boolean} inplace - Update in-place, modifying the original object\n * @returns {object|void} - Updated roll object or undefined if nothing was changed\n */\nexport function migrateRollData(roll, inplace = false) {\n  roll = inplace ? roll : foundry.utils.deepClone(roll);\n  let updated = false;\n\n  // Fix corrupt roll class\n  if ([\"RollPF2\", \"RollPF$1\"].includes(roll.class)) {\n    roll.class = \"RollPF\";\n    updated = true;\n  }\n\n  // Delve deeper into the roll object\n  for (const term of roll.terms ?? []) {\n    // _number used in Die terms\n    if (typeof term._number === \"object\" && \"class\" in term._number && \"terms\" in term._number) {\n      const updatedRoll = migrateRollData(term._number, true);\n      if (updatedRoll) updated = true;\n    }\n    // roll used in parenthetical terms\n    if (typeof term.roll === \"object\" && \"class\" in term.roll && \"terms\" in term.roll) {\n      const updatedRoll = migrateRollData(term.roll, true);\n      if (updatedRoll) updated = true;\n    }\n  }\n\n  return updated ? roll : undefined;\n}\n\n/**\n * Migrate Chat Message data\n *\n * @param {object} cmData - Chat message data (such as result of msg.toObject())\n * @returns {object} - Update data\n */\nexport function migrateMessageData(cmData) {\n  const updateData = {};\n\n  const flags = cmData.flags?.pf1;\n\n  const metadata = flags?.metadata;\n  if (metadata) {\n    updateData.type = \"action\";\n\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=metadata\"] = null;\n    updateData.system = metadata;\n\n    if (typeof updateData.system.item !== \"object\") updateData.system.item = { id: updateData.system.item };\n    if (typeof updateData.system.action !== \"object\") updateData.system.action = { id: updateData.system.action };\n  }\n\n  const ident = flags?.identifiedInfo;\n  if (ident) {\n    updateData.system ??= {};\n    updateData.system.item ??= {};\n    updateData.system.item.identified = ident.identified ?? true;\n    updateData.system.item.name = ident.name;\n    updateData.system.item.description = ident.description;\n    updateData.system.action ??= {};\n    updateData.system.action.name = ident.actionName;\n    updateData.system.action.description = ident.actionDescription;\n\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=identifiedInfo\"] = null;\n  }\n\n  // Speed is moved to config\n  if (metadata?.speed) {\n    updateData.system ??= {};\n    updateData.system.config ??= {};\n    updateData.system.config.speed = metadata.speed;\n  }\n\n  // Skill rank reference is moved to config\n  if (metadata?.skill) {\n    updateData.system ??= {};\n    updateData.system.config ??= {};\n    updateData.system.config.rank = metadata.skill.rank;\n  }\n\n  if (flags?.subject) {\n    updateData.system ??= {};\n    updateData.system.subject = flags.subject;\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=subject\"] = null;\n  }\n\n  if (typeof updateData.system?.subject === \"string\") {\n    updateData.system.subject = { info: updateData.system.subject };\n  }\n\n  // Migrate rolls\n  if (cmData.rolls?.length) {\n    let updated = false;\n    const newRolls = [];\n    for (let roll of cmData.rolls) {\n      if (typeof roll !== \"string\") break; // Fail if the data is not in expected format\n      roll = JSON.parse(roll);\n      const newRoll = migrateRollData(roll);\n      if (newRoll) {\n        roll = newRoll;\n        updated = true;\n      }\n      newRolls.push(JSON.stringify(roll));\n    }\n    if (updated) {\n      updateData.rolls = newRolls;\n    }\n  }\n\n  // TODO: System rolls\n  /*\n  if (cmData.system?.rolls) {\n    for (const atk of cmData.system.rolls.attacks ?? []) {\n      const updateData = migrateRollJson(atk.attack); // D20RollPF\n      if (atk.damage) {\n        for (const dmg of atk.damage) {\n          const updateData = migrateRollJson(dmg); // DamageRoll\n        }\n      }\n    }\n  }\n  */\n\n  return updateData;\n}\n\n/**\n *\n * @param {ChatMessage} cm - Chat Message document\n * @param {object} [options] - Additional options\n * @param {boolean} [options.commit=true] - If false, no update is performed. Returns update data instead.\n * @param {MigrationState} [options.state] - State tragger. Internal use only.\n * @returns {Promise<ChatMessage|object|null>} - Returns null if no update is needed, promise if commit is true, object otherwise.\n */\nexport async function migrateMessage(cm, { commit = true, state } = {}) {\n  const updateData = migrateMessageData(cm.toObject());\n\n  if (!!updateData.type && updateData.type !== cm.type) {\n    if (state) {\n      state.typeChanges = true;\n    } else console.warn(\"Document type changed! Refresh required!\");\n  }\n\n  if (foundry.utils.isEmpty(updateData)) return null;\n\n  if (commit) return cm.update(updateData);\n  return updateData;\n}\n\n/**\n * Migrate chat messages.\n *\n * @param {object} options - Additional options\n * @param {boolean} [options.fast=true] - Skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {*} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false]\n */\nexport async function migrateMessages({ fast, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"chat\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Chat\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"chat\", \"PF1.Migration.Category.Chat\", true);\n\n  console.log(\"PF1 | Migration | Chat log starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.messages.size);\n  tracker.setInvalid(game.messages.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  const updates = [];\n\n  const applyUpdates = async () => {\n    try {\n      console.debug(\"PF1 | Migration | Chat Log | Applying updates to\", updates.length, \"chat message(s)\");\n      await ChatMessage.updateDocuments(updates);\n    } catch (err) {\n      console.error(\"Error migrating chat messages\\n\", err, \"\\n\", { updates });\n    }\n    updates.length = 0;\n\n    // HACK: Yield to keep UI somewhat responsive, without this it can become completely unresponsive for a long period of time\n    // This issue probably can happen with the other document types, but is especially prone to happening with messages\n    await new Promise((resolve) => setTimeout(resolve, 0));\n  };\n\n  // Do actual migration\n  // One by one migration, this is slow but works\n  for (const msg of game.messages) {\n    if (fast && isMigrated(msg)) {\n      tracker.ignoreEntry(msg);\n      continue;\n    }\n\n    tracker.startEntry(msg);\n    try {\n      const updateData = migrateMessageData(msg.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        updateData._id = msg.id;\n        updates.push(updateData);\n\n        if (state && updateData.type && updateData.type !== msg.type) {\n          state.typeChanges = true;\n        }\n      }\n    } catch (err) {\n      console.error(err, msg);\n      tracker.recordError(msg, err);\n    }\n    tracker.finishEntry(msg);\n\n    if (updates.length >= pf1.migrations.UPDATE_CHUNK_SIZE) await applyUpdates();\n  }\n\n  if (updates.length) await applyUpdates();\n\n  // Migration complete\n  console.log(\"PF1 | Migration | Chat log complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"chat\" });\n}\n","/**\n * The core API provided by the system, available via the global `pf1`.\n *\n * @module\n */\n\n// Imports for side effects\nimport \"./less/pf1.less\";\nimport \"./module/hmr.mjs\";\nimport \"./module/patch-core.mjs\";\nimport \"module/compendium-directory.mjs\";\nimport \"./module/chatlog.mjs\";\n\n// Import Modules\nimport { moduleToObject } from \"./module/utils/internal.mjs\";\nimport { initializeSocket } from \"./module/socket.mjs\";\nimport { SemanticVersion } from \"./module/utils/semver.mjs\";\nimport * as macros from \"./module/documents/macros.mjs\";\nimport * as chatUtils from \"./module/utils/chat.mjs\";\nimport { initializeModuleIntegration } from \"./module/modules.mjs\";\nimport { ActorPFProxy } from \"@actor/actor-proxy.mjs\";\nimport { ItemPFProxy } from \"@item/item-proxy.mjs\";\nimport * as tours from \"module/tours.mjs\";\n\n// New API\nimport * as PF1 from \"./module/config.mjs\";\nimport * as PF1CONST from \"./module/const.mjs\";\nimport * as applications from \"./module/applications/_module.mjs\";\nimport * as documents from \"./module/documents/_module.mjs\";\nimport * as models from \"./module/models/_module.mjs\";\nimport * as actionUse from \"./module/action-use/_module.mjs\";\nimport * as chat from \"./module/chat/_module.mjs\";\nimport * as _canvas from \"./module/canvas/_module.mjs\";\nimport * as dice from \"./module/dice/_module.mjs\";\nimport * as components from \"./module/components/_module.mjs\";\nimport * as utils from \"./module/utils/_module.mjs\";\nimport * as registry from \"./module/registry/_module.mjs\";\nimport * as migrations from \"./module/migration.mjs\";\nimport * as calendar from \"./module/calendar.mjs\";\n\nimport { registerTokenRuler } from \"./module/canvas/token-ruler.mjs\";\n\n// ESM exports, to be kept in sync with globalThis.pf1\nexport {\n  actionUse,\n  applications,\n  _canvas as canvas,\n  components,\n  PF1 as config,\n  PF1CONST as const,\n  dice,\n  documents,\n  models,\n  migrations,\n  registry,\n  tours,\n  utils,\n  chat,\n};\n\nglobalThis.pf1 = moduleToObject({\n  actionUse,\n  applications,\n  canvas: _canvas,\n  components,\n  config: PF1,\n  const: PF1CONST,\n  dice,\n  documents,\n  models,\n  migrations,\n  registry,\n  utils,\n  chat,\n  // Initialize skip confirm prompt value\n  skipConfirmPrompt: false,\n});\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\nHooks.once(\"init\", function () {\n  console.log(`PF1 | Initializing Pathfinder 1 System`);\n\n  migrations.registerRedirects();\n\n  // Temp store\n  Object.defineProperty(pf1, \"_temp\", {\n    value: {},\n    enumerable: false,\n    writable: false,\n  });\n\n  // Global exports\n  globalThis.RollPF = dice.RollPF;\n\n  // Record Configuration Values\n  CONFIG.PF1 = pf1.config;\n\n  // Canvas\n  CONFIG.Canvas.layers.templates.layerClass = _canvas.TemplateLayerPF;\n\n  // Measured Template\n  CONFIG.MeasuredTemplate.objectClass = _canvas.MeasuredTemplatePF;\n  CONFIG.MeasuredTemplate.defaults.originalAngle = CONFIG.MeasuredTemplate.defaults.angle;\n  CONFIG.MeasuredTemplate.defaults.angle = 90; // PF1 uses 90 degree angles\n\n  // Token\n  CONFIG.Token.objectClass = _canvas.TokenPF;\n  CONFIG.Token.hudClass = _canvas.TokenHUDPF;\n  CONFIG.Token.documentClass = documents.TokenDocumentPF;\n\n  // Document classes\n  CONFIG.Actor.documentClass = ActorPFProxy;\n  CONFIG.Actor.documentClasses = {\n    character: documents.actor.ActorCharacterPF,\n    npc: documents.actor.ActorNPCPF,\n    haunt: documents.actor.ActorHauntPF,\n    trap: documents.actor.ActorTrapPF,\n    vehicle: documents.actor.ActorVehiclePF,\n  };\n  CONFIG.Actor.dataModels.haunt = models.actor.HauntModel;\n  CONFIG.Actor.dataModels.trap = models.actor.TrapModel;\n  CONFIG.Actor.dataModels.vehicle = models.actor.VehicleModel;\n\n  CONFIG.Item.documentClass = ItemPFProxy;\n  CONFIG.Item.documentClasses = {\n    attack: documents.item.ItemAttackPF,\n    buff: documents.item.ItemBuffPF,\n    class: documents.item.ItemClassPF,\n    consumable: documents.item.ItemConsumablePF,\n    container: documents.item.ItemContainerPF,\n    equipment: documents.item.ItemEquipmentPF,\n    feat: documents.item.ItemFeatPF,\n    loot: documents.item.ItemLootPF,\n    race: documents.item.ItemRacePF,\n    spell: documents.item.ItemSpellPF,\n    weapon: documents.item.ItemWeaponPF,\n    implant: documents.item.ItemImplantPF,\n  };\n\n  // Active Effects\n  CONFIG.ActiveEffect.documentClass = documents.ActiveEffectPF;\n  CONFIG.ActiveEffect.legacyTransferral = false; // TODO: Remove once legacy transferral is no longer default.\n  CONFIG.ActiveEffect.dataModels.base = models.ae.AEBaseModel;\n  CONFIG.ActiveEffect.dataModels.buff = models.ae.AEBuffModel;\n\n  // Combat\n  CONFIG.Combat.documentClass = documents.CombatPF;\n  CONFIG.Combatant.documentClass = documents.CombatantPF;\n\n  // Chat\n  CONFIG.ChatMessage.documentClass = documents.ChatMessagePF;\n\n  CONFIG.ChatMessage.dataModels.base = models.chat.BaseMessageModel;\n  CONFIG.ChatMessage.dataModels.item = models.chat.ItemMessageModel;\n  CONFIG.ChatMessage.dataModels.action = models.chat.ActionMessageModel;\n  CONFIG.ChatMessage.dataModels.check = models.chat.CheckMessageModel;\n\n  // UI classes\n  CONFIG.ui.items = applications.ItemDirectoryPF;\n\n  // Dice config\n  CONFIG.Dice.rolls.unshift(dice.RollPF);\n\n  CONFIG.Dice.rolls.push(dice.D20RollPF);\n  CONFIG.Dice.rolls.push(dice.DamageRoll);\n\n  // Replace core terms to provide custom functionality\n  CONFIG.Dice.termTypes.FunctionTerm = pf1.dice.terms.FunctionTermPF;\n  CONFIG.Dice.termTypes.StringTerm = pf1.dice.terms.StringTermPF;\n\n  // Roll functions\n  for (const [key, fn] of Object.entries(pf1.utils.roll.functions)) {\n    CONFIG.Dice.functions[key] = fn;\n  }\n\n  // Combat time progression\n  CONFIG.time.roundTime = 6;\n\n  // Low-Light Vision mixin\n  CONFIG.AmbientLight.objectClass = _canvas.lowLightVision.LLVMixin(CONFIG.AmbientLight.objectClass);\n  CONFIG.Token.objectClass = _canvas.lowLightVision.LLVMixin(CONFIG.Token.objectClass);\n\n  // Register System Settings\n  documents.settings.registerSystemSettings();\n  pf1.utils.internal.setDefaultSceneScaling();\n\n  // Preload Handlebars Templates\n  utils.handlebars.preload();\n  // Register helpers\n  utils.handlebars.helpers.register();\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFCharacter, {\n    label: \"PF1.Sheet.PC\",\n    types: [\"character\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPC, {\n    label: \"PF1.Sheet.NPC\",\n    types: [\"npc\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLite, {\n    label: \"PF1.Sheet.NPCLite\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLoot, {\n    label: \"PF1.Sheet.NPCLoot\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFHaunt, {\n    label: \"PF1.Sheet.Haunt\",\n    types: [\"haunt\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFTrap, {\n    label: \"PF1.Sheet.Trap\",\n    types: [\"trap\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFVehicle, {\n    label: \"PF1.Sheet.Vehicle\",\n    types: [\"vehicle\"],\n    makeDefault: true,\n  });\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF, {\n    label: \"PF1.Sheet.Item\",\n    types: [\"class\", \"feat\", \"spell\", \"consumable\", \"equipment\", \"loot\", \"weapon\", \"buff\", \"attack\", \"race\", \"implant\"],\n    makeDefault: true,\n  });\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF_Container, {\n    label: \"PF1.Sheet.Container\",\n    types: [\"container\"],\n    makeDefault: true,\n  });\n\n  DocumentSheetConfig.registerSheet(JournalEntryPage, \"pf1\", applications.journal.JournalTextPageSheetPF1, {\n    types: [\"text\"],\n    makeDefault: false,\n    label: \"PF1.Sheet.TextPage\",\n  });\n\n  applications.journal.registerV13PageSheet();\n\n  // Register detection modes\n  for (const mode of Object.values(pf1.canvas.detectionModes)) {\n    CONFIG.Canvas.detectionModes[mode.ID] = new mode({\n      id: mode.ID,\n      label: mode.LABEL,\n      type: mode.DETECTION_TYPE ?? DetectionMode.DETECTION_TYPES.SIGHT,\n    });\n  }\n\n  // Register vision modes\n  CONFIG.Canvas.visionModes.darkvision = pf1.canvas.visionModes.darkvision;\n\n  // Initialize socket listener\n  initializeSocket();\n\n  // Initialize module integrations\n  initializeModuleIntegration();\n\n  // Initialize registries with initial/built-in data\n  const registries = /** @type {const} */ ([\n    [\"damageTypes\", registry.DamageTypes],\n    [\"materials\", registry.Materials],\n    [\"scriptCalls\", registry.ScriptCalls],\n    [\"conditions\", registry.Conditions],\n    [\"sources\", registry.Sources],\n  ]);\n\n  for (const [registryName, registryClass] of registries) {\n    pf1.registry[registryName] = new registryClass();\n  }\n\n  Object.defineProperty(pf1.documents, \"customRolls\", {\n    value: function (message, speaker, rollData) {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.documents.customRolls() is deprecated in favor of pf1.chat.command()\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      const re = /^\\/(?<command>h|heal|d|damage)\\s+(?<formula>.*?)(\\s*#\\s*(?<comment>.*))?$/i.exec(message);\n      if (!re) throw new Error(`Failed to parse message: ${message}`);\n\n      const { command, formula, comment } = re.groups;\n      return pf1.chat.command(command, formula, comment, { speaker, rollData });\n    },\n  });\n\n  Object.defineProperty(pf1.registry, \"materialTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.registry.materialTypes has been moved to pf1.registry.materials.\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      return pf1.registry.materials;\n    },\n  });\n\n  // @deprecated - pf1.config.measureTemplateTypes to CONFIG.MeasuredTemplate.types\n  Object.defineProperty(pf1.config, \"measureTemplateTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.config.measureTemplateTypes is deprecated in favor of CONFIG.MeasuredTemplate.types\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      return pf1.utils.internal.getTemplateTypes();\n    },\n  });\n\n  //Calculate conditions for world\n  CONFIG.statusEffects = pf1.utils.init.getConditions();\n  // Add swim as special condition\n  CONFIG.specialStatusEffects.SWIM = \"swim\";\n\n  // Register controls\n  documents.controls.registerSystemControls();\n\n  // Register compendium browsers\n  pf1.applications.compendiumBrowser.CompendiumBrowser.registerDefault();\n\n  // Delay pack preparation after babele is ready if it is in use\n  if (game.modules.get(\"babele\")?.active && game.settings.get(\"pf1\", \"integration\").babele)\n    Hooks.once(\"babele.ready\", preparePacks);\n  else Hooks.once(\"ready\", preparePacks);\n\n  // Register token ruler without breaking v12 support\n  registerTokenRuler();\n\n  calendar.register();\n\n  // Call post-init hook\n  Hooks.callAll(\"pf1PostInit\");\n});\n\n/**\n * Prepare pack related data.\n */\nfunction preparePacks() {\n  // Pre-load class ID map for better UX\n  console.debug(\"PF1 | Pre-caching class ID map\");\n  pf1.utils.packs.getClassIDMap();\n}\n\n// Load Quench test in development environment\nif (import.meta.env.DEV) {\n  await import(\"./module/test/index.mjs\");\n}\n\n/* -------------------------------------------- */\n/*  Foundry VTT Setup                           */\n/* -------------------------------------------- */\n\n// Pre-translation passes\nHooks.once(\"i18nInit\", function () {\n  // Localize pf1.config objects once up-front\n  const toLocalize = [\n    \"abilities\",\n    \"abilitiesShort\",\n    \"alignments\",\n    \"alignmentsShort\",\n    \"currencies\",\n    \"distanceUnits\",\n    \"itemActionTypes\",\n    \"senses\",\n    \"skills\",\n    \"timePeriods\",\n    \"timePeriodsShort\",\n    \"durationEndEvents\",\n    \"savingThrows\",\n    \"ac\",\n    \"featTypes\",\n    \"featTypesPlurals\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"raceTypes\",\n    \"conditionTypes\",\n    \"lootTypes\",\n    \"flyManeuverabilities\",\n    \"favouredClassBonuses\",\n    \"abilityTypes\",\n    \"weaponGroups\",\n    \"weaponTypes\",\n    \"weaponProperties\",\n    \"spellComponents\",\n    \"spellDescriptors\",\n    \"spellSchools\",\n    \"spellSubschools\",\n    \"spellLevels\",\n    \"spellcasting\",\n    \"armorProficiencies\",\n    \"weaponProficiencies\",\n    \"actorSizes\",\n    \"abilityActivationTypes\",\n    \"abilityActivationTypesPlurals\",\n    \"limitedUsePeriods\",\n    \"equipmentTypes\",\n    \"equipmentSlots\",\n    \"implantSlots\",\n    \"implantTypes\",\n    \"consumableTypes\",\n    \"attackTypes\",\n    \"buffTypes\",\n    \"divineFocus\",\n    \"classSavingThrows\",\n    \"classBAB\",\n    \"classTypes\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"measureUnits\",\n    \"measureUnitsShort\",\n    \"weightUnitsShort\",\n    \"languages\",\n    \"weaponHoldTypes\",\n    \"auraStrengths\",\n    \"conditionalTargets\",\n    \"bonusTypes\",\n    \"abilityActivationTypes_unchained\",\n    \"abilityActivationTypesPlurals_unchained\",\n    \"actorStatures\",\n    \"ammoTypes\",\n    \"damageResistances\",\n    \"vehicles\",\n    \"woundThresholdConditions\",\n    \"changeFlags\",\n    \"hauntTemplateLabels\",\n    \"traps\",\n  ];\n\n  // Localize pf1.const objects\n  const toLocalizeConst = [\"messageVisibility\"];\n\n  // Config (sub-)objects to be sorted\n  const toSort = [\n    \"bonusTypes\",\n    \"skills\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"conditionTypes\",\n    \"consumableTypes\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"featTypes\",\n    \"weaponProperties\",\n    \"spellSchools\",\n    \"languages\",\n  ];\n\n  /**\n   * Helper function to recursively localize object entries\n   *\n   * @param {object} obj - The object to be localized\n   * @param {string} cat - The object's name\n   * @returns {object} The localized object\n   */\n  const doLocalize = (obj, cat) => {\n    // Create tuples of (key, localized object/string)\n    const localized = Object.entries(obj).reduce((arr, [key, value]) => {\n      if (typeof value === \"string\") arr.push([key, game.i18n.localize(value)]);\n      else if (typeof value === \"object\") arr.push([key, doLocalize(value, `${cat}.${key}`)]);\n      return arr;\n    }, []);\n\n    if (toSort.includes(cat)) {\n      // Sort simple strings, fall back to sorting by label for objects/categories\n      localized.sort(([akey, aval], [bkey, bval]) => {\n        // Move misc to bottom of every list\n        if (akey === \"misc\") return 1;\n        else if (bkey === \"misc\") return -1;\n\n        // Regular sorting of localized strings\n        const localA = typeof aval === \"string\" ? aval : aval._label;\n        const localB = typeof bval === \"string\" ? bval : bval._label;\n        return localA.localeCompare(localB);\n      });\n    }\n\n    // Get the localized and sorted object out of tuple\n    return localized.reduce((obj, [key, value]) => {\n      obj[key] = value;\n      return obj;\n    }, {});\n  };\n\n  const doLocalizePaths = (obj, paths = []) => {\n    for (const path of paths) {\n      const value = foundry.utils.getProperty(obj, path);\n      if (value) {\n        foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n      }\n    }\n  };\n\n  const doLocalizeKeys = (obj, keys = []) => {\n    for (const path of Object.keys(foundry.utils.flattenObject(obj))) {\n      const key = path.split(\".\").at(-1);\n      if (keys.includes(key)) {\n        const value = foundry.utils.getProperty(obj, path);\n        if (value) {\n          foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n        }\n      }\n    }\n  };\n\n  // Localize and sort CONFIG objects\n  for (const o of toLocalize) {\n    pf1.config[o] = doLocalize(pf1.config[o], o);\n  }\n\n  for (const o of toLocalizeConst) {\n    pf1.const[o] = doLocalize(pf1.const[o], o);\n  }\n\n  // Localize buff targets\n  const localizeLabels = [\n    \"buffTargets\",\n    \"buffTargetCategories\",\n    \"contextNoteTargets\",\n    \"contextNoteCategories\",\n    \"ageCategories\",\n    \"vehicleMaterials\",\n  ];\n  for (const l of localizeLabels) {\n    for (const [k, v] of Object.entries(pf1.config[l])) {\n      pf1.config[l][k].label = game.i18n.localize(v.label);\n    }\n  }\n\n  // Extra attack structure\n  doLocalizeKeys(pf1.config.extraAttacks, [\"label\", \"flavor\"]);\n\n  // Level-up data\n  doLocalizePaths(pf1.config.levelAbilityScoreFeature, [\"name\", \"system.description.value\"]);\n\n  // Point buy data\n  doLocalizeKeys(pf1.config.pointBuy, [\"label\"]);\n\n  // Caster type labels\n  doLocalizeKeys(pf1.config.caster.type, [\"label\"]);\n  doLocalizeKeys(pf1.config.caster.progression, [\"label\", \"hint\"]);\n\n  // Localize registry data\n  for (const registry of Object.values(pf1.registry)) {\n    if (registry instanceof pf1.registry.Registry) registry.localize();\n  }\n\n  calendar.localize();\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so documents exist\n */\nHooks.once(\"setup\", () => {\n  calendar.finalize();\n\n  Hooks.callAll(\"pf1PostSetup\");\n});\n\n/* -------------------------------------------- */\n\n/**\n * Once the entire VTT framework is initialized, check to see if we should perform a data migration\n */\nHooks.once(\"ready\", async function () {\n  // Migrate data\n  const NEEDS_MIGRATION_VERSION = \"11.5\";\n  let PREVIOUS_MIGRATION_VERSION = game.settings.get(\"pf1\", \"systemMigrationVersion\");\n  if (typeof PREVIOUS_MIGRATION_VERSION === \"number\") {\n    PREVIOUS_MIGRATION_VERSION = PREVIOUS_MIGRATION_VERSION.toString() + \".0\";\n  } else if (\n    typeof PREVIOUS_MIGRATION_VERSION === \"string\" &&\n    PREVIOUS_MIGRATION_VERSION.match(/^([0-9]+)\\.([0-9]+)$/)\n  ) {\n    PREVIOUS_MIGRATION_VERSION = `${PREVIOUS_MIGRATION_VERSION}.0`;\n  }\n  const needMigration = SemanticVersion.fromString(NEEDS_MIGRATION_VERSION).isHigherThan(\n    SemanticVersion.fromString(PREVIOUS_MIGRATION_VERSION)\n  );\n\n  if (needMigration) {\n    const options = {};\n    // Omit dialog for new worlds with presumably nothing to migrate\n    if (PREVIOUS_MIGRATION_VERSION === \"0.0.0\") options.dialog = false;\n    else console.debug(\"PF1 | Migration |\", PREVIOUS_MIGRATION_VERSION, \"to\", game.system.version);\n\n    // Use lack of actors and items as soft block against new world migration\n    if (game.actors.size || game.items.size) {\n      await pf1.migrations.migrateWorld(options);\n    } else {\n      if (game.user.isGM) {\n        // Set the migration as complete\n        await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n      }\n    }\n  }\n\n  // Inform users who aren't running migration\n  if (!game.user.isGM && game.settings.get(\"pf1\", \"migrating\")) {\n    ui.notifications.warn(\"PF1.Migration.InProgress\", { localize: true });\n  }\n\n  // Migrate system settings\n  await documents.settings.migrateSystemSettings();\n\n  // Populate `pf1.applications.compendiums`\n  pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers();\n\n  // Show changelog\n  if (!game.settings.get(\"pf1\", \"dontShowChangelog\")) {\n    const v = game.settings.get(\"pf1\", \"changelogVersion\");\n    const changelogVersion = SemanticVersion.fromString(v);\n    const curVersion = SemanticVersion.fromString(game.system.version);\n\n    if (curVersion.isHigherThan(changelogVersion)) {\n      const app = new pf1.applications.ChangeLogWindow(true);\n      app.render(true, { focus: true });\n      game.settings.set(\"pf1\", \"changelogVersion\", curVersion.toString());\n    }\n  }\n\n  Hooks.callAll(\"pf1PostReady\");\n});\n\n/* -------------------------------------------- */\n/*  Other Hooks                                 */\n/* -------------------------------------------- */\n\nHooks.on(\n  \"renderChatMessage\",\n  /**\n   * @param {ChatMessage} cm - Chat message instance\n   * @param {JQuery<HTMLElement>} jq - JQuery instance\n   * @param {object} options - Render options\n   */\n  (cm, jq, options) => {\n    const html = jq[0];\n\n    // Hide roll info\n    chatUtils.hideRollInfo(cm, jq, options);\n\n    // Hide GM sensitive info\n    chatUtils.hideGMSensitiveInfo(cm, html, options);\n\n    // Display placeholder if no description is present.\n    const desc = html.querySelector(\".card-content .item-description\");\n    if (desc && !desc.textContent.trim()) {\n      desc.append(game.i18n.localize(\"PF1.NoDescription\"));\n    }\n\n    // Hide non-visible targets for players\n    if (!game.user.isGM) chatUtils.hideInvisibleTargets(cm, html);\n\n    // Create target callbacks\n    chatUtils.addTargetCallbacks(cm, jq);\n\n    // Alter target defense options\n    chatUtils.alterTargetDefense(cm, jq);\n\n    // Optionally collapse the content\n    if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) {\n      html.querySelector(\".card-content\")?.classList.add(\"hidden\");\n    }\n\n    // Optionally hide chat buttons\n    if (game.settings.get(\"pf1\", \"hideChatButtons\")) {\n      for (const button of html.querySelectorAll(\".card-buttons\")) button.remove();\n    }\n\n    // Alter ammo recovery options\n    chatUtils.alterAmmoRecovery(cm, jq);\n  }\n);\n\nHooks.on(\"renderChatMessage\", (cm, [html]) => pf1.utils.chat.addListeners(cm, html));\nHooks.on(\"renderChatMessage\", (_, html) => _canvas.attackReach.addReachListeners(html));\n\nHooks.on(\"renderActorDirectory\", (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n  for (const li of html.querySelectorAll(\"li.actor\")) {\n    li.addEventListener(\n      \"drop\",\n      pf1.applications.CurrencyTransfer._directoryDrop.bind(undefined, li.dataset.documentId || li.dataset.entryId)\n    );\n  }\n});\n\nHooks.on(\"renderItemDirectory\", (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n  for (const li of html.querySelectorAll(\"li.item\")) {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.dataset.documentId || li.dataset.entryId)\n    );\n  }\n});\n\nHooks.on(\"dropActorSheetData\", (act, sheet, data) => {\n  if (data.type === \"Currency\") {\n    sheet._onDropCurrency(event, data);\n    return false;\n  }\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n// Delay hotbarDrop handler registration to allow modules to override it.\nHooks.once(\"ready\", () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\n    let macro;\n    const { type, uuid } = data;\n    switch (type) {\n      case \"Item\":\n        macro = macros.createItemMacro(uuid, slot);\n        break;\n      case \"pf1Action\":\n        macro = macros.createActionMacro(uuid, slot);\n        break;\n      case \"skill\":\n        macro = macros.createSkillMacro(data.skill, uuid, slot);\n        break;\n      case \"save\":\n        macro = macros.createSaveMacro(data.save, uuid, slot);\n        break;\n      case \"defenses\":\n      case \"cmb\":\n      case \"concentration\":\n      case \"cl\":\n      case \"attack\":\n      case \"abilityScore\":\n      case \"initiative\":\n      case \"bab\":\n        macro = macros.createMiscActorMacro(type, uuid, slot, data);\n        break;\n      default:\n        return true;\n    }\n\n    if (macro == null || macro instanceof Promise) return false;\n  });\n});\n\n// Render TokenConfig\nHooks.on(\n  \"renderTokenConfig\",\n  /**\n   * @param {TokenConfig} app - Config application\n   * @param {JQuery<HTMLElement>} html - HTML element\n   */\n  async (app, html) => {\n    // Add vision inputs\n    let token = app.document ?? app.object;\n    // Prototype token\n    if (token instanceof Actor) token = token.prototypeToken;\n\n    const flags = token.flags?.pf1 ?? {};\n\n    // Add static size checkbox\n    const sizingTemplateData = { flags, appId: app.id };\n    const sizeContent = await renderTemplate(\n      \"systems/pf1/templates/foundry/token/token-sizing.hbs\",\n      sizingTemplateData\n    );\n\n    const systemVision = game.settings.get(\"pf1\", \"systemVision\");\n\n    /** @type {HTMLElement} */\n    html = html instanceof jQuery ? html[0] : html;\n\n    html\n      .querySelector('.tab[data-tab=\"appearance\"] input[name=\"width\"]')\n      .closest(\".form-group\")\n      .insertAdjacentHTML(\"afterEnd\", sizeContent);\n\n    const visionTab = html.querySelector(`.tab[data-tab=\"vision\"]`);\n\n    // Disable vision elements if custom vision is disabled\n    const enableCustomVision = flags.customVisionRules === true || !systemVision;\n\n    const toggleCustomVision = (enabled) => {\n      // Disable vision mode selection\n      visionTab.querySelector(\"select[name='sight.visionMode']\").disabled = !enabled;\n\n      // Disable detection mode tab\n      let dmTab;\n      if (game.release.generation >= 13)\n        dmTab = visionTab.querySelector(\".detection-mode\").parentElement; // V12 and prior\n      else dmTab = visionTab.querySelector(\".tab[data-tab='detection']\");\n\n      for (const el of dmTab.querySelectorAll(\"input,select\")) {\n        if (el.name === \"flags.pf1.customVisionRules\") continue;\n        el.disabled = !enabled;\n      }\n\n      // Disable detection mode tab buttons via CSS\n      // TODO: Apply inert property instead\n      dmTab.classList.toggle(\"disabled\", !enabled);\n    };\n\n    if (!enableCustomVision) toggleCustomVision(enableCustomVision);\n\n    const visionContent = await renderTemplate(\"systems/pf1/templates/foundry/token/custom-vision.hbs\", {\n      enabled: enableCustomVision || !systemVision,\n      noSystemVision: !systemVision,\n      appId: app.id,\n    });\n\n    visionTab.insertAdjacentHTML(\"beforeEnd\", visionContent);\n\n    // Add listener for custom vision rules checkbox\n    // Soft toggle to work nicer with Foundry's preview behaviour\n    visionTab.querySelector(`input[name=\"flags.pf1.customVisionRules\"]`).addEventListener(\"change\", async (event) => {\n      toggleCustomVision(event.target.checked);\n    });\n\n    // Resize windows\n    app.setPosition();\n  }\n);\n\n// V13\nHooks.on(\"renderSettings\", (app, html) => {\n  if (!(game.release.generation >= 13)) return;\n  if (!(app instanceof CONFIG.ui.settings)) return;\n\n  const template = document.createElement(\"template\");\n  template.innerHTML = `<section class=\"flexcol\" id=\"pf1-details\">\n    <h4 class=\"divider\">${game.i18n.localize(\"PF1.Title\")}</h4>\n    <button type=\"button\" data-action=\"pf1-changelog\">\n      <i class=\"fa-solid fa-receipt\" inert></i>\n      ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-documentation\">\n      <i class=\"fa-solid fa-book\" inert></i>\n      ${game.i18n.localize(\"PF1.Help.Label\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-troubleshooter\">\n      <i class=\"fa-solid fa-screwdriver-wrench\" inert></i>\n      ${game.i18n.localize(\"PF1.Troubleshooter.Button\")}\n    </button>\n  </section>`;\n\n  Object.assign(app.options.actions, {\n    \"pf1-changelog\": () => {\n      const chlog =\n        Object.values(ui.windows).find((app) => app instanceof applications.ChangeLogWindow) ??\n        new applications.ChangeLogWindow();\n      chlog.render(true, { focus: true });\n    },\n    \"pf1-documentation\": () => pf1.applications.helpBrowser.openUrl(\"Help/Home\"),\n    \"pf1-troubleshooter\": () => pf1.applications.Troubleshooter.open(),\n  });\n\n  const details = html.querySelector(\"section.info\");\n  details.after(template.content);\n});\n\n// Render Sidebar (V12 and prior)\nHooks.on(\"renderSidebarTab\", (app, html) => {\n  if (!(app instanceof Settings)) return;\n\n  const details = document.getElementById(\"game-details\");\n\n  const template = document.createElement(\"template\");\n  template.innerHTML = `<h2>${game.i18n.localize(\"PF1.Title\")}</h2>\n  <div id='pf1-details'>\n    <button type=\"button\" data-action=\"pf1-changelog\">\n      <i class=\"fa-solid fa-receipt\" inert></i>\n      ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-documentation\">\n      <i class=\"fa-solid fa-book\" inert></i>\n      ${game.i18n.localize(\"PF1.Help.Label\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-troubleshooter\">\n      <i class=\"fa-solid fa-screwdriver-wrench\" inert></i>\n      ${game.i18n.localize(\"PF1.Troubleshooter.Button\")}\n    </button>\n  </div>`;\n\n  for (const button of template.content.querySelectorAll(\"button\")) {\n    switch (button.dataset.action) {\n      case \"pf1-changelog\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          const chlog =\n            Object.values(ui.windows).find((app) => app instanceof applications.ChangeLogWindow) ??\n            new applications.ChangeLogWindow();\n          chlog.render(true, { focus: true });\n        });\n        break;\n      case \"pf1-documentation\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n        });\n        break;\n      case \"pf1-troubleshooter\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          pf1.applications.Troubleshooter.open();\n        });\n        break;\n    }\n  }\n\n  details.after(template.content);\n});\n\nHooks.on(\"controlToken\", () => {\n  // Refresh lighting to (un)apply low-light vision parameters to them\n  canvas.perception.update(\n    {\n      initializeLighting: true,\n    },\n    true\n  );\n});\n\n/* ------------------------------- */\n/* Expire active effects\n/* ------------------------------- */\n\n/**\n * Expire Active Effects from Tokens\n *\n * Triggers duration end handling of active effects on currently viewed scene.\n *\n * Called with `updateWorldTime` and `canvasReady` events.\n */\nfunction expireFromTokens() {\n  if (!game.users.activeGM?.isSelf) return;\n\n  for (const t of canvas.tokens.placeables) {\n    if (!t.actor) continue;\n\n    // Skip tokens in combat to avoid too early expiration\n    if (t.combatant?.combat?.started) continue;\n\n    try {\n      t.actor.expireActiveEffects();\n    } catch (err) {\n      console.error(`PF1 | Failed to expire active effects from token: ${t.name} [${t.document?.uuid}]\\n`, err);\n    }\n  }\n}\n\n// On game time change\nHooks.on(\"updateWorldTime\", () => expireFromTokens());\n\n// On canvas render\nHooks.on(\"canvasReady\", () => expireFromTokens());\n\n// Ensure correct token sizing\nHooks.on(\"canvasReady\", async (canvas) => {\n  if (!game.user.isGM) return;\n\n  /** @type {TokenDocument[]} */\n  const tokens = canvas.scene?.tokens.filter((t) => t.actor);\n  if (!tokens.length) return;\n\n  console.debug(\"PF1 | Ensuring correct sizing of\", tokens.length, \"tokens(s)...\");\n  for (const token of tokens) {\n    const actor = token.actor;\n\n    try {\n      actor._updateTokenSize?.();\n    } catch (err) {\n      console.error(\"PF1 | Failed to adjust token size for\", token.name, \"\\n\", actor, \"\\n\", err);\n    }\n  }\n});\n\n// Refresh skip state (alleviates sticky modifier issue #1572)\nwindow.addEventListener(\"focus\", () => (pf1.skipConfirmPrompt = false), { passive: true });\n","/**\n * Initialize module compatibility/integration code.\n *\n * Currently integrated modules:\n * - Drag Ruler\n * - DSN (scattered game.dice3d usage)\n */\nexport function initializeModuleIntegration() {\n  const integration = game.settings.get(\"pf1\", \"integration\");\n  // Drag Ruler <https://foundryvtt.com/packages/drag-ruler>\n  if (game.modules.get(\"drag-ruler\")?.active && integration.dragRuler) {\n    Hooks.once(\"dragRuler.ready\", (SpeedProvider) => {\n      class Pf1SpeedProvider extends SpeedProvider {\n        get colors() {\n          return [\n            { id: \"walk\", default: 0x00ff00, name: \"PF1.SETTINGS.DragRulerWalk\" },\n            { id: \"dash\", default: 0xffff00, name: \"PF1.SETTINGS.DragRulerDash\" },\n            { id: \"run\", default: 0xff8000, name: \"PF1.SETTINGS.DragRulerRun\" },\n          ];\n        }\n\n        getRanges(token) {\n          const baseSpeed = pf1.utils.convertDistance(this.getBaseSpeed(token))[0];\n          const rollData = token.actor.getRollData(),\n            inHeavyArmor = rollData.armor.type >= pf1.config.armorTypes.heavy,\n            inHeavyLoad = rollData.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy;\n\n          let runMultiplier = 4;\n          if (inHeavyArmor || inHeavyLoad) runMultiplier = 3;\n          return [\n            { range: baseSpeed, color: \"walk\" },\n            { range: baseSpeed * 2, color: \"dash\" },\n            { range: baseSpeed * runMultiplier, color: \"run\" },\n          ];\n        }\n\n        getBaseSpeed(token) {\n          //const { i: x, j: y } = canvas.grid.getOffset(token);\n          const useElevation = this.getSetting(\"useElevation\");\n          const speeds = token.actor.system.attributes.speed;\n\n          if (useElevation && token.document.elevation > 0) {\n            const flySpeed = speeds.fly.total;\n            if (flySpeed > 0) {\n              return flySpeed;\n            }\n          }\n\n          if (useElevation && token.document.elevation < 0) {\n            const burrowSpeed = speeds.burrow.total;\n            if (burrowSpeed > 0) {\n              return burrowSpeed;\n            }\n          }\n\n          return speeds.land.total;\n        }\n\n        get settings() {\n          return [\n            {\n              id: \"useElevation\",\n              name: \"PF1.SETTINGS.DragRulerUseElevationName\",\n              hint: \"PF1.SETTINGS.DragRulerUseElevationHint\",\n              scope: \"world\",\n              type: Boolean,\n              default: true,\n            },\n          ];\n        }\n      }\n\n      /* global dragRuler */\n      dragRuler.registerSystem(\"pf1\", Pf1SpeedProvider);\n    });\n  }\n}\n","/**\n * Wrapper to register Token Ruler for Foundry v13 in a way that does not break v12 support.\n *\n * TODO:\n * - Refactor after v12 support is removed\n */\nexport function registerTokenRuler() {\n  if (!(game.release.generation >= 13)) return;\n\n  class TokenRulerPF extends CONFIG.Token.rulerClass {\n    //    static WAYPOINT_LABEL_TEMPLATE = \"systems/pf1/templates/hud/waypoint-label.hbs\";\n\n    /** @override */\n    /*\n    _getWaypointLabelContext(waypoints) {\n      const data = super._getWaypointLabelContext(waypoints);\n\n      const tokenDoc = this.token.document;\n      const actor = tokenDoc?.actor;\n      if (!actor) return data;\n\n      const scale = this.token.scene.grid.distance;\n\n      for (const wpd of data) {\n        this.applyWaypointSpeedData(wpd.waypoint, wpd.waypoint.measurement.cost / scale);\n      }\n\n      return data;\n    }\n    */\n\n    /**\n     * @experimental\n     * @param {string} type\n     * @returns {MovementInfo|undefined}\n     */\n    getMovement(type) {\n      /** @type {TokenDocumentPF} */\n      const tokenDoc = this.token.document;\n      /** @type {ActorPF} */\n      const actor = tokenDoc?.actor;\n\n      const move = actor.getMovement(type);\n      if (!move) return;\n\n      // Adjust speed to be in steps\n      move.speed /= pf1.const.step;\n\n      // TODO: Homebrew for run speed modifier\n      //actor.changeFlags.noHeavyEncumbrance\n      //actor.changeFlags.heavyArmorFullSpeed\n\n      return move;\n    }\n\n    /**\n     * @internal\n     * @param {object} wp - Waypoint\n     * @param {number} cost - Steps\n     */\n    applyWaypointSpeedData(wp, cost) {\n      const move = this.getMovement(wp.action);\n      const baseSpeed = move.speed;\n\n      // TODO: Metric support\n      let factor = baseSpeed > 0 ? Math.ceil(cost / baseSpeed) : 10;\n      // Explicit max speed\n      if (factor > move.max) factor = 10;\n      // Factor jumps, ignore max speed since these are for formatting\n      if (move.factors) factor = move.factors[factor] ?? factor;\n\n      wp.speed = {\n        step: cost <= 5,\n        factor,\n        factorBound: Math.clamp(factor, 0, move.max),\n        factorBase: Math.ceil(cost / baseSpeed),\n        singleMove: factor <= 1,\n        doubleMove: factor <= 2 && factor > 1,\n        running: factor > 2,\n        runningFar: factor > 4, // Run feat\n        exceedMovement: factor > 5, // Exceeding move speed limits\n      };\n    }\n\n    /** @override */\n    /*\n    _getSegmentStyle(waypoint) {\n      const { width, color, alpha } = super._getSegmentStyle(waypoint);\n\n      return { width, color, alpha };\n    }\n    */\n\n    /** @override */\n    _getGridHighlightStyle(waypoint, offset) {\n      if (!this.token.actor) return super._getGridHighlightStyle(waypoint, offset);\n\n      // TODO: Fall back to default if scene config is weird\n      // return super._getGridHighlightStyle(waypoint, offset);\n\n      const move = this.getMovement(waypoint.action);\n      if (!move) return super._getGridHighlightStyle(waypoint, offset);\n\n      const totalCost = waypoint.measurement.cost;\n      const scale = this.token.scene.grid.distance;\n      const scaledCost = totalCost / scale;\n\n      if (totalCost == 0) {\n        // TODO: Detect immobility by other means than lacking move speed\n        if (move.speed == 0) return pf1.config.tokenRuler.grid.immobile;\n        return pf1.config.tokenRuler.grid.start;\n      }\n\n      this.applyWaypointSpeedData(waypoint, scaledCost);\n\n      const factor = scaledCost <= 1 && move.speed > 0 && move.step ? 0 : waypoint.speed.factor;\n\n      switch (factor) {\n        case 0:\n          return pf1.config.tokenRuler.grid.step;\n        case 1: // Single move\n          return pf1.config.tokenRuler.grid.move;\n        case 2: // Double move\n          return pf1.config.tokenRuler.grid.move2;\n        case 3: // Run\n          return pf1.config.tokenRuler.grid.move3;\n        case 4: // Run\n          return pf1.config.tokenRuler.grid.run;\n        case 5: // Run feat\n          return pf1.config.tokenRuler.grid.run2;\n        default: // Exceed movement\n          return pf1.config.tokenRuler.grid.exceed;\n      }\n    }\n  }\n\n  CONFIG.Token.rulerClass = TokenRulerPF;\n\n  // Movement action details\n  // Foundry defaults climb, crawl and jump to use double movement\n  CONFIG.Token.movement.actions.climb.getCostFunction = () => (cost) => cost;\n  CONFIG.Token.movement.actions.crawl.getCostFunction = () => (cost) => cost;\n  CONFIG.Token.movement.actions.jump.getCostFunction = () => (cost) => cost;\n}\n","/**\n * `init` hook handler.\n */\nexport function register() {\n  if (game.release.generation < 13) return;\n\n  // Golarian calendar is largely identical to Gregorian calendar\n  // Source: https://paizo.com/community/blog/v5748dyo5la5m?Time-on-GolarionDays-of-the-Week\n  const gregorian = CONFIG.time.earthCalendarConfig;\n  const calendar = foundry.utils.deepClone(gregorian);\n\n  calendar.name = \"PF1.Calendar.Label\";\n  delete calendar.description;\n\n  calendar.days.values = calendar.days.values.map((day) => ({\n    ...day, // Copy Gregorian data\n    name: `PF1.Calendar.Days.${day.ordinal}.Name`,\n    abbreviation: undefined, // `PF1.Calendar.Days.${i}.Abbr`, // No official abbreviations\n  }));\n\n  calendar.months.values = calendar.months.values.map((month) => ({\n    ...month, // Copy Gregorian data\n    name: `PF1.Calendar.Months.${month.ordinal}.Name`,\n    abbreviation: undefined, // `PF1.Calendar.Months.${i}.Abbr`, // No official abbreviations\n  }));\n\n  // Defined inline to support v12\n  class GolarianCalendarData extends foundry.data.CalendarData {\n    /**\n     * Earth year offset\n     */\n    static YEAR_OFFSET = 2700;\n\n    /**\n     * Set world time based on Earth time\n     *\n     * @example\n     * Set current date\n     * ```js\n     * const d = new Date();\n     * const day = d.getDate();\n     * const year = d.getFullYear();\n     * const month = d.getMonth();\n     * game.time.calendar.set({ day, year, month, hour:12, minute:0, second:0 });\n     * ```\n     *\n     * @experimental\n     * @param {object} components - Components as accepted by `game.time.set()`\n     * @returns {Promise<*>} - Result from `game.time.set(...)`\n     */\n    async setEarthTime(components = {}) {\n      if (\"year\" in components) components.year += this.constructor.YEAR_OFFSET;\n      return game.time.set(components);\n    }\n\n    /**\n     * Synchronizes world time with canonical time in terms of Earth-Golarion equivalency.\n     *\n     * Hours, minutes and seconds are preserved from current world time unless explicitly given.\n     *\n     * @param {object} [options] - Additional options\n     * @param {number} [options.hour] - Exact hours\n     * @param {number} [options.minute] - Exact minutes\n     * @param {number} [options.second] - Exact seconds\n     * @experimental\n     * @returns {Promise<*>} - Result from `game.time.set(...)`\n     */\n    async syncCanonical({ hour, minute, second } = {}) {\n      // Preserve part of old time if undefined\n      const oldtime = game.time.components;\n      hour ??= oldtime.hour;\n      minute ??= oldtime.minute;\n      second ??= oldtime.second;\n\n      // Determine new world time in format Foundry expects\n      const d = new Date();\n      const year = d.getFullYear();\n      const gregorian = game.time.earthCalendar;\n      const isLeapYear = gregorian.isLeapYear(year);\n      const month = d.getMonth();\n      // Foundry tracks days from start of year, months are untracked in data form\n      let day = d.getDate(); // Day of current month\n      const months = gregorian.months.values;\n      for (let i = 0; i < month; i++) {\n        if (isLeapYear) day += months[i].leapDays ?? months[i].days;\n        else day += months[i].days;\n      }\n\n      return this.setEarthTime({ day, year, hour, minute, second });\n    }\n  }\n\n  CONFIG.time.golarianCalendarConfig = calendar;\n  CONFIG.time.golarianCalendarClass = GolarianCalendarData;\n\n  // Register as active world calendar as expected by Foundry\n  CONFIG.time.worldCalendarConfig = calendar;\n  CONFIG.time.worldCalendarClass = GolarianCalendarData;\n\n  console.debug(\"PF1 | Golarian calendar registered\");\n}\n\n/**\n * `i18nInit` hook handler to localize calendar strings\n */\nexport function localize() {\n  if (!CONFIG.time.golarianCalendarConfig) return; // In case registering failed or was disabled for some reason\n\n  const calendar = CONFIG.time.golarianCalendarConfig;\n\n  calendar.name = game.i18n.localize(calendar.name);\n  calendar.description = game.i18n.localize(calendar.description);\n\n  /*\n  // Core calendar does not actually have the following localized\n  for (const month of calendar.months.values) {\n    month.name = game.i18n.localize(month.name);\n    if (month.abbreviation) month.abbreviation = game.i18n.localize(month.abbreviation);\n  }\n  for (const day of calendar.days.values) {\n    day.name = game.i18n.localize(day.name);\n    if (day.abbreviation) day.abbreviation = game.i18n.localize(day.abbreviation);\n  }\n  */\n}\n\n/**\n * `setup` hook handler, when `game.time` has been initialized.\n */\nexport function finalize() {\n  if (!CONFIG.time.golarianCalendarConfig) return; // In case registering failed or was disabled for some reason\n\n  // Provide initialized golarian calendar even if something overrides world calendar\n  game.time.golarianCalendar = new CONFIG.time.golarianCalendarClass(CONFIG.time.golarianCalendarConfig, {\n    strict: true,\n  });\n}\n"],"names":["origFunc","TextEditor","_createContentLink","async","match","relativeTo","name","a","call","this","indexOf","args","split","label","pop","length","forEach","o","key","value","firstChild","className","classList","add","setAttribute","lastChild","textContent","Roll","fromData","data","includes","class","original_handleShareImage","ImagePopout","_handleShareImage","image","title","caption","uuid","showTitle","doc","fromUuid","Item","KeyboardManager","prototype","_onFocusIn","event","formElements","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","target","isContentEditable","some","cls","releaseKeys","Object","defineProperty","get","selector","map","el","join","document","querySelectorAll","buttons","spells","items","bestiary","feats","classes","races","buffs","wide","compendiumButtonClick","preventDefault","type","dataset","category","pf1","applications","compendiums","_render","focus","toggleCompendiumVisibility","html","entries","unshift","game","i18n","localize","icon","condition","li","jQuery","pack","packs","config","disabled","callback","configure","Hooks","on","app","querySelector","element","release","generation","createElement","append","info","button","innerText","addEventListener","displayCompendiumVisibility","hiddenIcon","tooltip","ariaLabel","prepend","getMessage","messages","messageId","isOwnedSpellCard","msg","item","itemSource","isOwner","actor","spellCardContextMenu","id","fromUuidSync","system","reference","ChatMessage","closest","parentElement","scrollIntoView","block","rollConcentration","spellbook","rollCL","isValidChangeTarget","filters","valid","ar","include","exclude","fn","ir","getBuffTargets","buffTargets","foundry","utils","deepClone","contextNotes","contextNoteTargets","allowSkills","buffTargetCategories","skills","skillTargets","_skillTargets","s","skillId","slice","startsWith","skill","getSkillInfo","fullName","allowSpells","spell","books","attributes","spellbooks","primary","secondary","tertiary","spelllike","spellTargets","_spellbookTargets","schoolId","keys","spellSchools","push","re","exec","subKey","groups","subLabel","fullKey","mainLabel","concn","moduleToObject","module","result","toString","initialValue","cmdStr","maxValue","clearValue","op","operator","abs","rawValue","isAbsolute","isNegative","parseInt","parseFloat","Number","isFinite","Math","min","isNaN","console","warn","initial","command","createInlineFormula","rollData","_options","formula","closing","_createInlineRoll","rollCls","defaultImplementation","resolvedFormula","replaceFormulaData","trim","pLabel","roll","isDeterministic","evaluateSync","total","simplify","innerHTML","parent","relative","parseUuid","embedded","itemId","Error","getBuffTargetDictionary","targetCategories","contextNoteCategories","categories","values","reduce","cur","options","validity","naturalSort","getTemplateTypes","fromEntries","CONST","MEASURED_TEMPLATE_TYPES","CONFIG","MeasuredTemplate","types","keepUpdateArray","sourceObj","targetObj","keepPath","newValue","getProperty","Array","isArray","newArray","getType","subData","expandObject","mergeObject","setProperty","setDefaultSceneScaling","scaling","units","getDistanceSystem","grid","distance","defaults","width","inputArr","elem","toLocaleLowerCase","numeric","ignorePunctuation","uniformUuid","runSocketFunction","senderId","isFirstGM","users","activeGM","isSelf","sender","eventType","source","sourceActor","dest","destActor","sourceContainer","destContainer","amount","CurrencyTransfer","transfer","sourceAlt","destAlt","alterChatTargetAttribute","message","contentHTML","$","content","save","valueElem","find","targetUuid","isFailure","addClass","removeClass","isSuccess","update","prop","testUserPermission","targetActor","itemData","toObject","implementation","create","deleteEmbeddedDocuments","hasPermission","USER_PERMISSIONS","SETTINGS_MODIFY","refreshActors","renderOnly","err","log","SemanticVersion","static","constructor","major","minor","patch","preRelease","buildMetaData","fromString","str","RegExp","$1","$2","$3","$4","$5","isHigherThan","otherVersion","isLowerThan","isSame","findOldMacro","macros","m","canExecute","visible","isAuthor","createItemMacro","slot","macro","Macro","img","flags","displaySheet","user","assignHotbarMacro","createActionMacro","_slot","action","logCompatibilityWarning","since","until","actions","ui","notifications","error","format","actionMacro","createSkillMacro","skillInfo","createSaveMacro","saveId","saveName","capitalize","createMiscActorMacro","getBookLabel","bookId","book","attack","isMelee","ability","abilities","hideRollInfo","cm","jq","whisper","isBlind","blind","text","addExtraGMInfo","isGM","metadata","identified","cardContent","insertAdjacentHTML","getIdentifiedBlock","hasUniqueActionName","renderTemplate","hideGMSensitiveInfo","gmSensitiveUuid","obj","Token","TokenDocument","remove","showDCs","settings","getSpeakerActor","speaker","DOCUMENT_OWNERSHIP_LEVELS","OBSERVER","node","childNodes","nodeName","children","sensitiveLabel","gmSensitiveInner","inlineEls","fromJSON","unescape","nroll","safeRollSync","escape","JSON","stringify","results","rollEls","replaceChildren","filter","contains","tagName","detailEls","alterAmmoRecovery","recoveryData","getFlag","each","attackIndex","index","ammoId","recovered","i","ia","alterTargetDefense","defenseData","targetEl","targetDefense","saveEl","savingThrow","hideInvisibleTargets","recursive","targetsElem","canvas","ready","once","targetElems","targets","from","hasVisible","t","token","object","isVisible","isObserver","isSecret","getTokenByUuid","addTargetCallbacks","_mouseEnterCallback","_onHoverIn","hoverOutOthers","_mouseLeaveCallback","_onHoverOut","_imageClickCallback","toggle","shiftKey","controlled","chat","panToToken","control","releaseOthers","imgElem","ev","passive","targetACClick","targetSavingThrowClick","addListeners","onToggleDescription","onButton","currentTarget","buttonActionId","getLinkedItem","asNonlethal","nonlethal","attackType","systemRolls","attacks","isCritical","instances","addInstances","damageRolls","dmg","d","models","DamagePartModel","damageType","damage","critDamage","documents","ActorPF","applyDamage","critMult","ammoItem","ammoQuantity","ammoRecovery","failed","chance","recoverChance","random","promises","addCharges","setFlag","Promise","all","count","as","dc","actors","tokens","character","noSound","errored","rollSavingThrow","catch","cause","getConcentrationDC","compendiumEntry","openJournal","desc","_collapsedDescription","popout","windows","appid","setPosition","duration","animatePan","center","_event","displayDefenseCard","rollMode","ActorBasePF","Actor","getDefaultArtwork","actorData","super","defaultIcons","texture","src","reset","_itemTypes","_rollData","_initialized","_initialize","getItemByTag","tag","itemTypes","base","getName","defineProperties","getId","identifier","activeOwner","u","active","sort","b","getCombatants","combat","combatants","c","sharesVision","visionFlag","default","_effectsWithDuration","effects","effect","allApplicableEffects","_hasDuration","toggleStatusEffect","statusId","overlay","_","buffId","buff","isActive","state","setActive","getConditionImmunities","ci","traits","list","Set","condToImmMap","confuse","daze","dazzle","fatigue","fear","registry","conditions","conditionsInTrack","sicken","paralyze","petrify","stun","has","cond","getInitiativeOptions","expireActiveEffects","getMovement","ActorPFProxy","Proxy","construct","documentClasses","ItemBasePF","createDialog","createOptions","folders","template","context","renderOptions","dialogOptions","applicationOptions","top","left","height","scale","zIndex","k","v","dialogOption","CreateDialog","waitPrompt","defaultName","subType","documentName","collection","getEmbeddedCollection","collections","takenNames","baseNameKey","hasTypeData","typeNameKey","subtypeName","typeLabels","baseName","_onCreateOperation","operation","syntheticActor","_id","casting","bookData","p","createSpellbook","level","_onLevelChange","_updateTrackingEffect","speeds","speedUpdates","const","movementKeys","fly","maneuverability","flyManeuverability","_pf1NoSupplements","_createSupplements","_onUpdateOperation","changed","updates","oldLevel","newLevel","_pf1SizeChanged","size","_onDeleteOperation","prevLevel","usedBook","inUse","race","allSupplements","Collection","t0","performance","now","collect","classLink","_depth","supplements","links","t1","debug","newItemData","supplement","extraItem","fromCompendium","clearFolder","old","set","newItem","lastSortOrder","createData","isPhysical","quantity","oldItemsOfSameType","max","MIN_SAFE_INTEGER","SORT_INTEGER_DENSITY","newItems","createEmbeddedDocuments","render","allItems","internal","si","getRelativeUUID","updateEmbeddedDocuments","forcePlayerPerspective","activeState","canUse","getEmbeddedDocument","embeddedName","components","ItemAction","ItemChange","changes","ItemPFProxy","PF1Tour","Tour","apps","previousStep","hasPrevious","steps","stepIndex","sheetInDisplay","ActorSheet","StepsEnum","step","replaceAll","toUpperCase","getStepIndexById","findIndex","openCompendiumBrowser","compendium","comp","openCompendium","strict","compApp","applicationClass","closeCompendium","compApps","compendiumBrowser","CompendiumBrowser","Compendium","_debug","close","_log","loglevel","namespace","currentStep","_warn","expandCompendiumFolder","folder","clickFolder","expanded","folderEl","click","_preStep","sheetTab","tabName","group","activateTab","PF1ActorSheetTour","openSheet","compendiumId","getDocument","actorId","sheet","start","sidebar","tabs","activate","previous","GO_TO_BASIC_MONSTERS","_postStep","HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM","exit","HIGHLIGHT_SHEET","SPELLBOOKS_CONFIGURATION","targetElement","complete","registerPF1Tours","tours","register","costlessActivation","currency","rate","pp","gp","sp","standard","standardRate","casterProgression","castsPerDay","prepared","low","med","high","spontaneous","hybrid","prestige","spellsPreparedPerDay","spellSubschools","calling","charm","compulsion","creation","figment","glamer","haunted","healing","pattern","phantasm","polymorph","scrying","shadow","summoning","teleportation","spellSubschoolsMap","abj","con","div","enc","evo","ill","nec","trs","uni","misc","acpA","acpS","mDexA","mDexS","dex","int","wis","cha","strMod","dexMod","conMod","intMod","wisMod","chaMod","strPen","dexPen","conPen","intPen","wisPen","chaPen","carryStr","carryMult","simple","reach","ageCategory","ageCategoryPhysical","ageCategoryMental","deferred","unskills","strSkills","dexSkills","conSkills","intSkills","wisSkills","chaSkills","allChecks","strChecks","dexChecks","conChecks","intChecks","wisChecks","chaChecks","landSpeed","climbSpeed","swimSpeed","burrowSpeed","flySpeed","allSpeeds","ac","aac","sac","nac","tac","ffac","bab","wattack","sattack","mattack","nattack","rattack","tattack","wdamage","mwdamage","rwdamage","twdamage","rdamage","mdamage","ndamage","sdamage","critConfirm","allSavingThrows","fort","ref","will","cmb","cmd","ffcmd","init","mhp","wounds","vigor","spellResist","bonusFeats","bonusSkillRanks","concentration","cl","sensedv","sensets","sensebse","sensebs","sensels","sensesc","sensetr","defense","savingThrows","abilityChecks","health","speed","senses","sheetSections","interface","browse","classType","weapon","hideEmpty","weaponLike","subTypes","proficient","natural","classFeat","feat","racial","racialAbility","equipment","consumable","inventory","equip","armor","slots","equipmentType","equipmentSubtype","implants","labels","gear","unequippableLoot","ammo","lootType","tradeGoods","container","features","featType","trait","buffType","perm","temp","school","combatlite","catKey","sectKey","section","path","iface","slow","medium","fast","nonaction","free","swift","immediate","move","full","aoo","round","minute","hour","special","reaction","oh","na","long","short","ex","su","normal","touch","flatFooted","fine","dim","tiny","sm","lg","huge","grg","col","tall","young","modifiers","adult","middleAge","venerable","ng","cg","ln","tn","cn","le","ne","ce","arrow","bolt","repeatingBolt","slingBullet","gunBullet","dragoonBullet","dart","siege","humanoid","nonhumanoid","lgt","hvy","shl","twr","none","light","heavy","untyped","untypedPerm","enh","dodge","haste","inherent","deflection","morale","luck","sacred","insight","resist","profane","competence","circumstance","alchemical","progression","lowLightVision","seeInDarkness","seeInvisibility","immuneToMorale","loseDexToAC","noMediumEncumbrance","noHeavyEncumbrance","mediumArmorFullSpeed","heavyArmorFullSpeed","custom","sorcerer","wizard","cleric","oracle","druid","psychic","shaman","witch","alchemist","bard","hunter","inquisitor","investigator","magus","mesmerist","occultist","skald","spiritualist","summoner","summonerUnchained","antipaladin","bloodrager","paladin","ranger","goodSaveBonus","goodSave","npc","mythic","bleed","deaf","deathEffects","disease","energyDrain","exhausted","moraleEffects","mindAffecting","poison","sleep","_label","allAttack","hasteAttack","rapidShotAttack","allDamage","hasteDamage","rapidShotDamage","potion","drug","scroll","wand","rod","staff","pharmaceutical","critical","melee","meleeWeapon","meleeSpell","ranged","rangedWeapon","rangedSpell","spellEffect","sr","adlet","aeon","aether","agathion","air","android","angel","aquatic","archon","astomoi","asura","augmented","azata","behemoth","blight","catfolk","changeling","chaotic","clockwork","cold","colossus","daemon","darkFolk","deepOne","demodand","demon","derro","devil","dwarf","earth","elemental","elf","evil","extraplanar","fire","giant","gnome","goblinoid","good","gray","greatOldOne","grippli","halfling","hive","herald","human","incorporeal","inevitable","kaiju","kami","kasatha","kitsune","kyton","lawful","leshy","manasaputra","mortic","munavri","native","nightshade","oni","orc","phantom","protean","psychopomp","qlippoth","rakshasa","ratfolk","reptilian","robot","sahkil","samsaran","sasquatch","shapechanger","skinwalker","spawnOfRovagug","swarm","troop","vanara","vishkanya","water","wayang","wildHunt","aberration","animal","dragon","fey","magicalBeast","monstrousHumanoid","ooze","outsider","plant","undead","vermin","cp","loot","haunt","basic","trap","vehicle","personal","ft","mi","spec","seeText","unlimited","turnStart","initiative","turnEnd","quadruped","shield","wondrous","slotless","head","headband","eyes","shoulders","neck","chest","body","belt","wrists","hands","ring","feet","clothing","other","lightArmor","mediumArmor","heavyArmor","lightShield","heavyShield","towerShield","iteratives","manual","advanced","flurry","bonus","attackName","flavor","modToAll","unflurry","hp","alt","deltas","positive","negative","abilityScore","clumsy","poor","average","perfect","belligerent","itemBound","chained","elusive","freeRoaming","increasedArea","latent","persistent","possessing","spiteful","tenacious","unyielding","vaporous","variant","cr","crBonus","crBonusTag","cybertech","arm","brain","ears","legs","mwak","rwak","twak","msak","rsak","mcman","rcman","spellsave","heal","hardness","aboleth","abyssal","aklo","ancientosiriani","androffan","aquan","auran","azlanti","boggard","celestial","common","cyclops","dark","draconic","drowsign","druidic","dwarven","dziriak","elven","gnoll","goblin","hallit","ib","ignan","infernal","jistka","kelish","kuru","lashunta","necril","orvian","osiriani","polyglot","reptoid","rougarou","shadowtongue","shoanti","sphinx","strix","sylvan","syrinx","taldane","tekritanin","tengu","terran","thassilonian","tien","treant","triaxian","undercommon","vanaran","varisian","vegepygmy","vudrani","yaddithian","description","single","day","week","charges","tool","food","herb","adventuring","animalGear","reagent","remedy","treasure","entertainment","power","km","penalty","overlandSpeed","imperial","per","out","unit","metric","rounded","exact","hours","double","points","epic","monstrous","featSkills","magical","movement","offense","weakness","traitSeparator","bs","bse","dv","ts","tr","ll","ls","sid","sc","tower","acr","apr","art","blf","clm","crf","dip","dev","dis","esc","han","hea","kar","kdu","ken","kge","khi","klo","kna","kno","kpl","kre","lin","lor","prf","pro","rid","sen","slt","spl","ste","sur","swm","umd","verbal","somatic","thought","emotion","material","divineFocus","acid","curse","darkness","death","electricity","force","languageDependent","meditative","pain","ruse","sonic","arcane","divine","alchemy","inst","turn","month","year","immobile","color","alpha","move2","move3","run","run2","exceed","swimSkill","factors","climbSkill","crawl","w","h","minChoicesForSearch","magic","faith","social","campaign","cosmic","exemplar","faction","family","mount","region","religion","drawback","electricEyes","sound","vision","arcaneEye","clairvoyance","trueSeeing","bypass","lock","hiddenSwitch","hiddenLock","automatic","repair","trigger","genetic","location","proximity","timed","visual","mechanical","darkvision","leather","wood","stone","metal","space","land","sea","axes","bladesHeavy","bladesLight","bows","crossbows","firearms","flails","hammers","monk","polearms","siegeEngines","spears","thrown","tribal","martial","firearm","ato","blc","brc","dea","dst","dbl","fin","frg","grp","imp","mnk","nnl","rch","sct","sma","slf","snd","spc","thr","trp","exotic","assault","indirect","direct","splash","kg","lbs","publicroll","gmroll","blindroll","selfroll","BaseFilter","choices","randomID","writable","configurable","registerIndexFields","handledTypes","choice","activeChoiceCount","indexField","compendiumIndexFields","setup","prepareChoices","hasChoices","number","applyFilter","entry","getData","TEMPLATE","localizeLabel","activeCount","contents","field","activateListeners","root","UMD","prepare","prepareLowerInfo","new_result","_targetLower","_lower","_targetLowerCodes","lowerCodes","_bitflags","bitflags","Result","_indexes","len","indexes","open","targetLen","highlighted","matchI","indexesI","opened","parts","char","substr","highlight","normalizeScore","_score","score","denormalizeScore","KeysResult","NULL","NEGATIVE_INFINITY","_nextBeginningIndexes","E","normalizedScore","pow","prepareSearch","search","spaceSearches","containsSpace","searches","_info","toLowerCase","getPrepared","targetPrepared","preparedCache","getPreparedSearch","searchPrepared","preparedSearchCache","limit","INFINITY","getValue","isPrepared","objResults","keyI","noTarget","algorithm","preparedSearch","allowSpaces","allowPartialMatch","algorithmSpaces","searchLower","searchLowerCodes","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","prepareNextBeginningIndexes","backtrackCount","lastMatch","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","calculateScore","matches","extraMatchGroupCount","uniqueBeginningIndexes","matchesBest","seen_indexes","first_seen_index_last_search","searchesLen","changeslen","resetNextBeginningIndexes","nextBeginningIndexesChanges","hasAtLeast1Match","allowPartialMatchScores","indexesIsConsecutiveSubstring","newBeginningIndex","toReplace","j","allowSpacesResult","remove_accents","replace","normalize","strLen","lower","lowerCode","charCodeAt","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","prepareBeginningIndexes","lastIsBeginning","lastIsBeginningI","Map","keysSpacesBestScores","tmpTargets","tmpResults","tmp","segs","x","Infinity","noResults","e","q","r","f","poll","peek","replaceTop","searchBitflags","go","threshold","resultsLen","limitedCount","targetsLen","push_result","keysLen","outer","keysBitflags","scoreFn","cleanup","clear","exports","Application","expandedFilters","_query","_loadingInfo","initialize","_debouncedRender","debounce","defaultOptions","window","innerHeight","resizable","scrollY","dragDrop","dragSelector","dropSelector","registerDefault","BROWSERS","ItemBrowser","FeatBrowser","SpellBrowser","ClassBrowser","RaceBrowser","CreatureBrowser","BuffBrowser","initializeBrowsers","getIndexes","packNames","resultPromise","indexingPromises","getIndex","finally","delete","_mapEntry","model","inplace","__pack","__packLabel","__uuid","getUuid","__name","fuzzysort","_renderEntries","ENTRY_TEMPLATE","typeName","filterClasses","isPackIncluded","indexCount","entryCount","acc","_activateFilterQueue","filterQueue","idToFilter","tags","filterId","filterName","_queueFilters","unorderedEntries","loadPackIndex","flat","indexed","onError","getFilteredEntries","activeFilters","every","collator","Intl","Collator","compare","selectionStart","input","_element","Function","selectionEnd","query","collapsed","_entries","itemCount","filteredItemCount","loading","loadingInfo","_refocus","_priorState","RENDER_STATES","NONE","_initLazyScrolling","filterContent","_onClickEntry","_onReload","_onClearFilters","header","_onFilterHeaderClick","_onCustomSearchFilter","_onAction","bind","ContextMenu","_getEntryContextOptions","then","stopPropagation","editable","locked","getDocumentClass","canUserCreate","importFromCompendium","renderSheet","clipboard","copyPlainText","_canDragStart","_onDragStart","dataTransfer","setData","setTimeout","filterContents","listEnd","IntersectionObserver","observer","isIntersecting","currentCount","newEntries","unobserve","newHtml","_dragDrop","rootMargin","observe","NoAutocomplete","Base","_renderFrame","frame","autocomplete","DocumentSheetV2","HandlebarsApplicationMixin","api","ActorTraitSelector","form","handler","_updateDocument","submitOnClose","submitOnChange","closeOnSubmit","minimizable","position","sheetConfig","scrollable","footer","_searchFilter","_collator","lang","subject","attribute","searchIndex","_name","_searchIndex","_preparePartContext","partId","isEditable","chosen","cssClass","hideSearch","traitSelector","hasCustom","splitCustom","_onRender","_onSearch","customInput","_onCustomInput","_onActiveCustomInput","_deleteCustomTag","attrib","checked","indeterminate","test","_onChangeForm","isComposing","repeat","last","customTag","SEARCH_INCLUDE_ID","els","formConfig","formData","FormData","appId","updateData","union","DragDropApplicationMixin","BaseApplication","DragDropApplication","createDragDropHandlers","permissions","dragstart","drop","_canDragDrop","callbacks","dragover","_onDragOver","_onDrop","DragDrop","AbstractListSelector","_save","addEntry","_onAddEntry","deleteEntry","_onDeleteEntry","dragDropHighlightTimeout","dragDropType","row","dragData","setDragImage","_temp","dragDropData","clearDragHighlights","clearTimeout","dragEventData","getDragEventData","moveToBeforeId","movedId","splice","fields","dtypes","dataCount","_getNewEntry","_getUpdateData","DamageResistanceSelector","isDR","resistances","originalEntries","damageOBJ","damageTypes","dType","isModifier","damages","damageResistances","materials","dr","treatedAs","allowed","lightBlade","oneHandBlade","twoHandBlade","shortName","operators","true","false","_initializeApplicationOptions","rv","_onResistanceCustomChange","_onResistanceChange","index2","updateValue","dtype","val","floor","String","ActorRestDialog","_rest","_prepareContext","performRest","PointBuyCalculator","_onAbilityControl","ablValues","abilityCost","usedPoints","spentPoints","pointBuy","limitsArr","ldata","l","limits","invalidPoints","ablKey","abl","Widget_ItemPicker","columns","_items","parentElem","rootElem","parseHTML","rowElem","itemElem","widthRate","css","offsetLeft","offsetBottom","_onClickItem","_cancelCallback","_onCancel","parentNode","cancel","attr","removeEventListener","ApplicationV2","AbstractSettingsApplication","resetForm","_onFormReset","phraseKey","configKey","assign","activeTab","tabGroups","schema","tab","updateSource","RollPF","totalHalved","safeRoll","suppressError","evalOpts","evaluate","warning","cleanFlavor","getTermTooltipData","term","getTooltipData","expression","getTooltip","dice","numericParts","terms","idx","arr","DiceTerm","FunctionTerm","ttdata","prior","NumericTerm","OperatorTerm","CHAT_TEMPLATE","isPrivate","_evaluated","allowInteractive","templateData","details","limitPrecision","hasDetails","FormulaField","StringField","_toInput","parse","ExperienceConfigModel","abstract","DataModel","defineSchema","disable","BooleanField","track","SchemaField","openDistributor","migrateData","disableExperienceTracking","openXpDistributor","progressionOptions","ExperienceConfig","enabled","hasCustomFormula","HealthConfigModel","auto","NumberField","maximized","variantRules","useWoundsAndVigor","useWoundThresholds","woundThresholdOptions","pc","rules","integer","rounding","blank","nullable","healthRoundingOptions","continuous","getClassHD","actorType","getActorConfig","continuity","hitdice","PC","NPC","Racial","variants","up","nearest","down","healthContinuityOptions","prepareDerivedData","HealthConfig","templates","showWoundsVigorWarning","hdId","hdData","IntegrationConfigModel","diceSoNice","dragRuler","babele","IntegrationConfig","dsnFound","modules","drFound","bFound","PerformanceConfigModel","reachLimit","PerformanceConfig","registerSystemSettings","scope","Boolean","onChange","migrations","isMigrating","registerMenu","hint","restricted","requiresReload","LIMITED","OWNER","perception","initializeLighting","initializeVision","refreshLighting","refreshVision","FRIENDLY","NEUTRAL","HOSTILE","TokenConfig","refreshSheets","placeables","_applyRenderFlags","redrawEffects","migrateSystemSettings","storage","removeItem","getSkipActionPrompt","skipConfirmPrompt","LevelUpForm","FormApplication","simulacra","mold","fcb","unavailable","available","visibility","new","used","useBackgroundSkills","isMythic","levelUp","hd","upgrades","added","isEnhanced","isNull","isValid","isAvailable","isModified","hasPlayerOwner","DICE_ROLL_MODES","PRIVATE","_initData","_initChoices","createTag","isLevelUp","isNewClass","increaseLevel","resolve","addClassWizard","_prepareAssociations","associations","assocs","classAssociations","hpOptions","fc","icons","ICONS","visibilityOptions","messageVisibility","tier","tierAbilityScores","levelAbilityScores","delta","raw","ranks","adv","next","_getNextAbilityScoreLandmark","isReady","table","hdt","gained","_getDefaultHealthOption","_getDefaultHitPoints","ceil","_prepareHealthData","hpConfig","clsConf","hitDie","dieHealth","newHD","oldHD","hpAbl","hpAbility","hpMod","mod","cfg","isFavouredClass","getLevelData","totalHD","mythicTier","totalMythicTier","oldSaves","newSaves","bg","tempActor","isMindless","advSkillRanks","bgSkillRanks","hitDice","perLevel","skillsPerLevel","backgroundSkillClasses","bgranks","backgroundSkillsPerLevel","bonusSkillRankFormula","getRollData","getFeatCount","babBase","favoredClassTypes","_updateObject","_onClickAbilityScoreOperator","_openItemSheet","_onCommit","_onSkip","itemUuid","_adjustAbilityScore","_adjustAbilityScoreValue","abls","cost","_adjustAbilityScoreCost","tierAbilityScoreMult","levelAbilityScoreMult","_initFCBChoices","_initHPChoices","highest","maxLeft","_getHealthFormula","dieSize","_spoofHealthRoll","toJSON","_getHealthRoll","_disableSheet","cardData","newFeatures","toAnchor","outerHTML","hpValue","fcKey","oldFeatCount","itemUpdates","ablUpdate","_updateAbilityScore","extra","featCount","createChatMessage","style","cursor","change","prevValue","levelAbilityScoreFeature","rolls","messageData","CHAT_MESSAGE_STYLES","OOC","getSpeaker","SELF","applyRollMode","altCurrency","notification","order","_curRange","_calcTotal","formField","amounts","_failed","i18nKey","_directoryDrop","docDestId","destDoc","actorUuid","containerId","sourceDoc","allowConversion","sourceCurrency","destCurrency","originalSource","totalAmount","totalSource","newSource","convert","socket","emit","minRequired","inCopper","templatePaths","preload","loadTemplates","renderCachedTemplate","Handlebars","partials","allowProtoMethodsByDefault","allowProtoPropertiesByDefault","preventIndent","ActorSheetPF","_filters","sections","searchCompositioning","searchRefresh","searchDelay","searchDelayEvent","effectiveSearch","_itemUpdates","_hiddenElems","_skillsLocked","_expandedItems","_activeEdits","navSelector","contentSelector","currentPrimaryTab","_tabs","currentSpellbookKey","isMetricDist","owner","limited","isCharacter","hasHD","usesAnySpellbook","sourceData","skillsLocked","weight","getWeightSystem","weightUnitsShort","tactical","measureUnitsShort","overland","unchainedActions","caster","casterPreparation","inCharacterGeneration","hasProficiencies","numAttacks","iterativeExtraAttacks","iters","fromRange","attackCount","iterativeAttackModifier","hasCurrency","hasAltCurrency","enrichHTMLOptions","secrets","bio","biography","pBio","enrichHTMLUnrolled","biographyHTML","notes","pNotes","notesHTML","_prepareItem","getLabels","sizeModifier","sizeMods","baseBonus","shared","general","meleeAbility","rangedAbility","genericAttacks","abilityMod","modifier","cpValue","calculateTotalItemValue","inLowestDenomination","totalValue","pad","totalLabel","arbitrary","arbitrarySkills","skillCompendiumEntries","journal","untrained","rt","rank","subSkills","subSkillId","subSkill","issues","missing","excess","_prepareTraits","_prepareSenseLabels","parseResistances","eres","_prepareItems","encumbrance","_computeEncumbrance","_prepareSkillsets","_prepareSkills","healthConfig","_prepareHiddenElements","hiddenElems","magicItems","unidentified","carried","aura","unidentifiedName","strength","auraStrengths","auraStrength","identifyDC","dataFilters","firstClass","browser","inheritedEffects","appliedEffects","ae","statuses","condImmunities","creatureSubtypes","showInBuffsTab","immune","inherited","_editorState","restoreEditState","isPhysicalLike","isQuasiPhysical","isSingleUse","isCharged","hasResource","maxCharges","noMaxCharges","hasUses","defaultAction","actionId","hasAction","getScriptCalls","hasAttack","hasMultiAttack","hasDamage","hasRange","hasEffect","_canShowRange","range","getRange","getAttacks","conditionals","bonuses","attackBonuses","atk","attackArray","attackSummary","usesAmmo","ammoRemaining","showUnidentifiedData","isEmpty","isStack","destroyed","isBroken","uncharged","equipped","implanted","typeLabel","xpUnbound","_prepareItemForSection","price","sellValue","stack","di","conditionTypes","languages","armorProf","armorProficiencies","weaponProf","weaponProficiencies","creatureTypes","selected","svalue","converted","convertDistance","_prepareSpellbook","bookKey","hasCantrips","autoSpellLevelCalculation","autoSpellLevelTotal","spellPreparationMode","casterType","spellLevel","usesSlots","canPrepare","spellLevels","uses","hasIssues","lowAbilityScore","lowLevel","known","preparation","invalidSlots","mismatchSlots","invalidKnown","mismatchKnown","domain","isSchool","invalidLevelData","levelData","sets","adventure","background","localeCompare","skl","backgroundOnlySkills","skillsets","useBGSkills","skillRanks","bgAllowed","bgUsed","sentToBG","subSkl","carriedWeight","load","levels","carryLabel","pct","clamp","encumbered","encumbranceLevels","aboveHead","overhead","offGround","carry","dragPush","drag","filterLists","_initializeFilterItemList","_onToggleFilter","sb","_searchFilterChange","_searchFilterCompositioning","_onItemSummary","_onItemEdit","contextmenu","_hideShowElement","_onOpenCompendiumEntry","_onOpenCompendiumBrowser","_activateExtendedTooltip","deactivate","_onSpanTextInput","_adjustActorPropertyBySpan","_onInputText","originalEvent","_selectOnClick","_onRollAbilityTest","_onRollBAB","_onRollAttack","_onRollInitiative","_onRollSavingThrow","_onArbitrarySkillCreate","_onSkillCreate","_onSkillEdit","_onSkillDelete","_itemActivationControl","_onRollSkillCheck","_onTraitSelector","_onResistanceSelector","_onRest","_onPointBuyCalculator","_onControlAlignment","_onSensesSelector","_onItemCreate","_onItemDelete","_onItemGive","_onItemSplit","_onItemCard","_quickChangeItemQuantity","_quickEquipItem","_quickCarryItem","_quickIdentifyItem","_itemPreparedToggle","_duplicateItem","_quickAction","_convertCurrency","_setItemUses","el0","direction","TooltipManager","TOOLTIP_DIRECTIONS","LEFT","_onLevelUp","_setSpellUses","_setMaxSpellUses","_onRollConcentration","_onRollCL","off","_setItemActive","_setBuffLevel","_onToggleCondition","_onEditCondition","_onToggleSkillLock","tooltipExtended","bonusTypes","_getTooltipContext","sources","paths","callAll","tooltipDirection","fullId","lazy","_cache","getNotes","getContextNotesParsed","n","subHeader","detail","NaN","CR","fromNumber","offset","getSourceDetails","mode","tD","tB","tR","unhindered","tU","oD","oU","sizeSpecialMods","cmbAbility","hasAbility","sign","drain","undrained","baseMod","unmod","acp","mdex","maxDexBonus","asfSources","itemASF","spellFailure","implant","physical","mental","stature","signed","empty","isBoolean","unlevel","formatter","NumberFormat","signDisplay","attackSources","dmgSources","names","nonCritParts","isNatural","ablMax","dmgAblBaseMod","held","ablDmgMult","damageMult","abilityDamageHeldMultipliers","naturalAttack","dmgAblMod","allDamageSources","maxIncrements","mu","carryCapacity","multiplier","bonusMults","isQuadruped","smult","encumbranceMultipliers","decimals","featSources","skillSources","isBG","fcSkills","fullSkillId","skillIdParts","mainId","shift","subTarget","ablMod","spellPoints","subschool","descriptors","isNumber","newEl","noCap","getAttribute","endsWith","maxName","forbiddenClasses","allowRelative","replaceChild","adjustNumberByStringCommand","readOnly","select","_onDragSkillStart","skillElem","mainSkill","_onDragMiscStart","_onDragSaveStart","_i","ul","verbose","bringToFront","displayCard","_mouseWheelAdd","isInput","WheelEvent","ctrlKey","increase","deltaY","wheelStep","MouseEvent","_commitItemUsesBound","_commitItemUses","setItemUpdate","_updateItems","curValue","oldEl","toNearest","_getSubmitData","for","hasClass","hide","slideDown","slideUp","conditionId","toggleCondition","relevantAEs","bottom","getBoundingClientRect","rounds","dialog","getNumber","seconds","time","roundTime","setCondition","cat0","cat1","part","clsId","spellbookKey","openItemSummary","instant","listEl","expandedId","summary","inert","getChatData","chatcard","firstElementChild","origValue","wheelEvent","getSelection","anchorNode","removeAllRanges","keyHandler","_onSubmit","parents","mainSkillData","skillData","cs","_editSkill","isBackground","baseTag","allowUnderScore","SkillEditor","addCallback","mainSkillId","confirm","DialogV2","rejectClose","modal","deleteSkill","SensesSelector","alignmentsShort","alignment","use","curQuantity","newQuantity","property","_prepareDuplicateItem","rename","original","_stats","duplicateSource","relatedItems","searchUnusedName","existingNames","newName","iter","identNames","unidentNames","currencyType","convertCurrency","categoryId","sectionId","_sortNewItem","oldItems","oldItem","isItemSameSubGroup","linked","findAllLinks","getLinkedItemsSync","targetActorId","getActor","clickEl","renderOpts","SplitStack","wait","keep","createDocuments","rollAbilityTest","rollBAB","maneuver","rollAttack","rollInitiative","createCombatants","rerollInitiative","savingthrow","_applySectionFilter","hasASF","hasSpellbooks","spellbookSections","spellbookSpells","classId","arcaneSpellFailure","asf","allClasses","_0","_1","ct","findSplice","cat","featureSections","ablType","abilityType","typelabel","abilityTypes","found","discrepancy","buffSections","attackSections","cweapons","showInCombat","cspells","cfeat","classfeat","racefeat","cequipment","cconsumables","classSections","_filterSection","spellbookData","quickActions","getQuickActions","_preparedOnly","_hideEmpty","inFilters","_hidden","rollSkill","_searchFilterCommit","show","saveEditState","_renderInner","listId","preventClose","preventRender","_onDropCurrency","_onDropItem","sourceItem","fromDropData","sameActor","keepId","clearSort","_onSortItem","altKey","_alterDropItemData","_onDropItemCreate","deleteContainerContent","fromActor","fromItemsDir","isClass","_source","_adjustNewItem","itemDatas","creationData","specifier","getItem","spellType","kind","resultData","ItemSpellPF","toConsumablePrompt","allowSpell","_focusTabByItem","tabId","isAlt","denomination","calculateSellItemValue","sellMultiplier","_disableFields","getElementsByTagName","ActorSheetPFCharacter","xpSettings","disableExperience","showXpBar","minimumExperience","getLevelExp","hasClasses","xp","xpTrack","CHARACTER_EXP_LEVELS","ActorSheetPFNPC","_adjustCR","ActorSheetPFNPCLite","ActorSheetPFNPCLoot","itemValueDenomination","isLootSheet","baseCurrency","getTotalCurrency","cpSellValue","noEquip","ActorSheetPFHaunt","measureTemplateTypes","alignments","noDesc","destruction","pDestruction","destructionHTML","pEffect","effectHTML","pTemplates","hauntTemplates","enrichHTML","templateLinks","link","hauntTemplateLabels","broken","area","convertDistanceBack","ActorSheetPFTrap","getPerceptionModifier","traps","trapTypes","hasTriggerRange","hasTriggerTime","hasPerceptionTrigger","disarm","rollPerception","ActorSheetPFVehicle","vehicleSizes","vehicles","pDesc","descriptionHTML","driver","_computeDriverData","driverSkill","skillBonus","stopped","acceleration","currentSpeed","speedOverland","currentSpeedOverland","maxSpeed","maxSpeedOverland","_ev","invCat","convertibleKeys","driverId","allSkills","SpeedEditor","isMetric","isNumeric","Widget_CategorizedItemPicker","hidden","categoryItems","hasVisibleChoices","_onFirstRender","behaviour","FlagSelector","valueObject","decimalPlaces","ItemSheetPF","ItemSheet","_actionUpdates","isolated","itemType","owned","canClassLink","inContainer","isWeapon","isAttack","isWeaponLike","isNaturalAttack","isSpell","isImplant","isEquipment","hasClassLink","classTag","classData","hitDieSizes","wealth","maximize","minimize","inheritCharges","defaultChargeFormula","getDefaultChargeFormula","limitedUsePeriods","isRechargeable","limitedUsePeriodOrder","isActivatable","showBothDescriptions","showIdentified","isIdentified","showIdentifiedData","unchainedActionEconomy","identify","strengthLabel","spellcasting","hasSpellbook","descriptionAttributes","isRelative","constraints","fakeValue","inputValue","priceDecimals","forceUnidentified","fakeName","isRange","current","disableEquipping","canEquip","masterwork","isClassFeature","isTemplate","classSkills","skilldata","isCS","materialCategories","_prepareMaterialsAndAddons","alignmentTypes","_prepareAlignments","addon","materialAddons","wsubtype","weaponSubtype","isRanged","properties","weaponCategories","weaponTypes","equipmentCategories","equipmentTypes","equipmentSlots","hasMultipleSlots","hasSlots","hasSubCategory","variableHands","topDescription","implantTypes","isCybertech","implantSlots","isSpontaneousLike","useSystem","isPreparedSpell","usesSpellpoints","isAtWill","atWill","spellbookChoices","n0","n1","getDescriptionData","dfVariants","MDF","FDF","df","noDurationTiming","isMythicPath","favouredClassBonuses","isBaselikeClass","isRacialHD","isNPCClass","isPCClass","hasSpellType","canUseAmmo","defaultAmmo","invalidDefaultAmmo","extraType","traitsMap","spellDescriptors","weaponGroups","traitKey","showPriority","ch","chData","isDeferred","isCustom","isSimple","isAdd","isSet","isValidType","priority","changePriority","noteTargets","causedConditions","distanceUnits","attackNotes","_prepareItemFlags","distanceUnit","raceCreatureTypes","raceCreatureSubtypes","descriptor","_prepareContentSource","getDescription","enrichOptions","pIdentDesc","unidentDesc","pUnidentDesc","pTopDesc","instrDesc","instructions","pInstrDesc","pScripts","_prepareScriptCalls","pLinks","_prepareLinks","EDIT_TRACKING","_getContentSources","main","_selectContentSource","bookSources","extras","datestamp","publisher","date","abbr","edition","Date","materialList","addonList","basicList","isAllowed","addons","basics","alignmentChoices","help","linkData","linkedItem","boolean","dictionary","scriptCalls","oldData","oldLinks","linkType","typedLinks","targetName","relativeInput","setCustomValidity","convertWeight","convertWeightBack","getWeightMultiplier","reduction","relativeKeys","nHpVal","hpVal","nHpBase","hpBase","realMax","maxFormula","_onHoverTooltip","tooltipType","_onHoverWeightTooltip","_onHoverPriceTooltip","mValue","inline","_validateFormula","hasActor","RIGHT","_onActionEdit","_onActionSummary","_onActionControl","_onOpenTextEditor","_openHelpBrowser","_onEntrySelector","_onFlagSelector","ContentSourceEditor","isProficient","proficiency","_onScriptCallEdit","_onScriptCallControl","_openLinkedItem","_onNoteControl","_onNoteTargetControl","_onCreateChange","_onCardNoteControl","_onLinkControl","_onTextAreaDrop","_onOpenChangeMenu","_onEditChange","_createAttack","_createSpellbook","_onItemSelector","_onSpeedEdit","_setActionUses","_onScriptCallDrop","setActionUpdate","_updateActions","script","newScripts","ItemScriptCall","edit","eventData","getContentLink","helpBrowser","openUrl","url","changeId","pf1Link","dropData","srcDoc","actionData","parentItem","targetActionId","prevActions","targetIdx","srcIdx","_onChangeDrop","_onLinksDrop","origin","osrc","targetItem","extraData","createItemLink","targetChangeId","removed","curr","actionDescription","getUniqueActionName","act","newActionData","HTMLEditor","_onDuplicateChange","_onDeleteChange","dismissLockedTooltip","ChangeEditor","ContextNote","note","noteIndex","sortable","part1","deleted","displayValue","attackItem","ItemAttackPF","fromItem","showInQuickbar","newAttack","flag","EntrySelector","filterFunc","ItemSheetPF_Container","_prepareContents","usystem","coinage","merge","itemValue","_openItemSummary","animation","_onItemTake","_quickItemActionControl","createContainerContent","nextElementSibling","droppedItem","rootItem","containerItems","dropTarget","targetId","siblings","siblingId","SortingHelpers","performIntegerSort","updateContainerContents","ItemCreateDialog","moved","_updateCreationData","getDefaultName","FormDataExtended","initialData","getSubtypes","classTypes","attackTypes","featTypes","consumableTypes","lootTypes","buffTypes","_prepareFormContext","_formatFolderSelectOptions","subtypes","_key0","label0","_key1","label1","subtype","defaultType","documentTypes","first","promise","_onClose","ItemActionSheet","actionType","isHealing","isCombatManeuver","canCrit","critRange","hasCritDamage","critParts","hasNonCritDamage","isSelfCharged","chargedUsePeriods","showMaxChargeFormula","self","canInputRange","canInputMinRange","minUnits","canInputDuration","itemName","itemEnh","usesSpellPoints","parentOwned","activation","hasActivationType","abilityActivationTypes","abilityActivationTypes_unchained","showMaxRangeIncrements","isWeaponAttack","inheritedAmmoType","inheritedMisfire","misfire","ammoTypes","minRangeAvailable","getConditionalTargets","conditionalTargets","hasConditionalTargets","conditional","targetEntry","subTargets","conditionalModifierTypes","getConditionalModifierTypes","conditionalCritical","getConditionalCritical","addonMaterial","isPureRanged","canHold","inheritedHeld","weaponHoldTypes","heldAbilityMultiplier","hasKeyAbility","keyAbility","keyAbilityLabel","_key","attackAbility","_default","_defaultAttackAbility","damageAbility","_defaultDamageAbility","paMultiplier","getPowerAttackMult","extraAttacksTypes","extraAttacks","extraAttacksConfig","allowCustom","isValidAddon","normalMaterial","trackStaleEditors","_onEditImage","_onAttackControl","_onDamageControl","_onClickDamageType","_onNoteEntryControl","_onConditionalControl","_onAlignmentChecked","ItemConditional","ItemConditionalModifier","k2","k3","damageParts","damagePart","damageIndex","DamageTypeSelector","updateCallback","damageArray","conditionalEl","modifierEl","manualExtraAttacks","attackPart","FilePicker","previousValue","preserveArray","k0","k1","oldConds","oldC","oldM","array","_sheet","_state","_createDocumentIdLink","idLink","_renderOuter","BOOLEAN_OPERATOR","CheckboxFilter","baseFilter.BaseFilter","booleanOperator","_choiceQuery","_debouncedFilterChoices","getChoicesFromConfig","configObject","labelKey","innerSet","innerKey","innerValue","autoSort","sorted","hasControls","MIN_SEARCH_CHOICES","hasSearch","prepareBooleanOperator","fieldData","defaultBooleanOperator","observedValues","flatMap","autoLocalize","localizeChoices","i18nPrefix","localizePrefix","toggleChoice","activeChoices","testMethod","choiceQuery","checkbox","choiceKey","SearchFilter","cleanQuery","matchingChoices","choiceSet","TextFilter","inputs","placeholder","_parseInput","textInput","NumberRangeFilter","parsedInput","ItemTypeFilter","WeaponTypeFilter","WeaponSubtypeFilter","WeaponPropertyFilter","weaponProperties","WeaponGroupFilter","EquipmentTypeFilter","EquipmentSubtypeFilter","ItemSlotFilter","ConsumableTypeFilter","MiscItemTypeFilter","ItemPriceFilter","ItemCasterLevelFilter","PackFilter","usedPacks","orderedPacks","TagFilter","SourceFilter","registrySources","__source","SpellSchoolFilter","SpellSubschoolFilter","configChoices","SpellDescriptorFilter","SpellLearnedByClassFilter","classNames","getClassIDMap","SpellLearnedByDomainFilter","SpellLearnedBySubdomainFilter","SpellLearnedByBloodlineFilter","SpellLevelFilter","activeLearnedAtFilters","activeLevelChoices","learnedAt","learnedAtChoice","learnedAtLevel","levelChoice","FeatTypeFilter","FeatClassFilter","ClassTypeFilter","ClassHitDieFilter","ClassBaseAttackBonusFilter","classBAB","ClassSkillPointsFilter","ClassSavingThrowFilter","classSavingThrows","noneFilterResult","ClassFortitudeFilter","ClassReflexFilter","ClassWillFilter","CreatureTypeFilter","CreatureSubTypeFilter","BuffTypeFilter","CreatureCRFilter","commonFilters.PackFilter","buffFilters.BuffTypeFilter","commonFilters.SourceFilter","commonFilters.TagFilter","classFilters.ClassTypeFilter","classFilters.ClassHitDieFilter","classFilters.ClassBaseAttackBonusFilter","classFilters.ClassSkillPointsFilter","classFilters.ClassFortitudeFilter","classFilters.ClassReflexFilter","classFilters.ClassWillFilter","creatureFilters.CreatureCRFilter","featFilter.FeatTypeFilter","featFilter.FeatClassFilter","itemFilters.ItemTypeFilter","itemFilters.WeaponTypeFilter","itemFilters.WeaponSubtypeFilter","itemFilters.WeaponPropertyFilter","itemFilters.WeaponGroupFilter","itemFilters.EquipmentTypeFilter","itemFilters.EquipmentSubtypeFilter","itemFilters.ItemSlotFilter","itemFilters.ConsumableTypeFilter","itemFilters.MiscItemTypeFilter","itemFilters.ItemPriceFilter","itemFilters.ItemCasterLevelFilter","equipmentSubtypes","at","raceFilters.CreatureTypeFilter","raceFilters.CreatureSubTypeFilter","spellFilter.SpellSchoolFilter","spellFilter.SpellSubschoolFilter","spellFilter.SpellDescriptorFilter","spellFilter.SpellLearnedByClassFilter","spellFilter.SpellLearnedByDomainFilter","spellFilter.SpellLearnedBySubdomainFilter","spellFilter.SpellLearnedByBloodlineFilter","spellFilter.SpellLevelFilter","learnedAtLevels","learnedAtSource","addHeaders","page","maxLevel","JournalEntry","pages","headers","npage","nlevel","JournalTextPageSheetPF1","JournalTextPageSheet","enriched","editor","registerV13PageSheet","unregisterV1Sheet","DocumentSheetConfig","unregisterSheet","JournalEntryPage","registerV2Sheet","sheets","JournalEntryPageProseMirrorSheet","registerSheet","makeDefault","editorToggledState","editors","rendered","renderContext","ProseMirror","dom","serializeString","instance","view","ActionSelector","_onClickAction","ChatAttack","actionUse","hasCritConfirm","AttackDamage","damageRows","hasCards","cards","effectNotes","effectNotesHTML","notesOnly","setAction","setAmmo","setRollData","critCount","ablMult","setEffectNotesHTML","addAttack","noAttack","extraParts","conditionalParts","extraChanges","critConfirmBonus","parsedConfirmResult","getDefenseDC","armorAsDR","method","Dice","fulfillment","methods","d20","baseCritMult","isCrit","critMultBonus","addDamage","repeatCount","rollDamage","totalDamage","addEffectNotes","noteSources","explosionRadius","explode","isNat20","isNat1","_createInlineRolls","inlineRoll","crit","finalize","half","ERR_REQUIREMENT","freeze","NO_ACTOR_PERM","DISABLED","INSUFFICIENT_QUANTITY","INSUFFICIENT_CHARGES","MISSING_AMMO","INSUFFICIENT_AMMO","DISALLOWED_ACTION_TYPE","ActionUse","checkRequirements","noManeuvers","cache","D20RollPF","standardRoll","dcBonus","chargeCost","chargeCostBonus","createAttackDialog","AttackDialog","alterRollData","useOptions","powerAttack","primaryAttack","clCheck","measureTemplate","manyshot","rapidShot","pointBlankShot","abilityMult","flanking","highGround","charge","fullAttack","atkBonus","attackBonus","dmgBonus","damageBonus","manyShot","useMeasureTemplate","abilityDamageMultOverride","basePowerAttackBonus","powerAttackBonus","paMult","powerAttackPenalty","condId","naturalAttacks","casterLevelCheck","concentrationCheck","generateAttacks","forceFullAttack","allAttacks","ActionUseAttack","ammos","getAmmo","ammoCost","abundant","autoSelectAmmo","ammoType","availableAmmo","_filterAmmo","isDefault","subtractAmmo","ammoUsage","usage","updateAmmoUsage","chatAtk","chatAttack","remaining","handleConditionals","rollDataConds","modKey","conditionalRoll","partString","partID","flavoredFormula","conditionalPartsCommon","checkAttackRequirements","generateChatAttacks","addAttacks","addEmptyAttack","hasAmmo","saveDC","getDC","_getConditionalParts","conditionalTemplates","addPart","templateKey","templateStr","parsedStr","powerAttackCritBonus","critMultiplier","chatAttacks","addFootnotes","typeMap","footnotes","promptMeasureTemplate","mt","dist","distancePixels","scene","dimensions","maxDist","maximum","AbilityTemplate","actorSheet","sheetRendered","drawPreview","place","handleDiceSoNice","dice3d","isEnabled","chatData","mergeRolls","skipRolls","showRoll","pools","pool","showForRoll","attackPool","PoolTerm","critPool","getMessageData","OTHER","soundEffect","sounds","extraText","enrichNotes","itemChatData","formatTextNotes","commonProperties","addGenericPropertyLabels","combatProps","addCombatPropertyLabels","clNotes","dcSchoolNotes","clSchoolNotes","tokenUuid","identifiedDescription","unidentifiedDescription","hasSave","gmSensitiveLabel","rangeUnits","rangeLabel","spellFailureRoll","spellFailureSuccess","generateChatMetadata","totalChargeCost","useSpellPoints","showInAction","materialKey","normalMaterialAction","normalMaterialItem","baseMaterialItem","addonMaterialAction","addonMaterialItem","materialAddonNames","actionAlignments","itemAlignments","attackPenalty","woundThresholds","woundThresholdConditions","sl","attackRolls","damageRoll","executeScriptCalls","scriptData","postMessage","chatTemplate","chatMessage","hideChat","getTargets","getTokensWithin","combatant","isDefeated","_getDefenseDCParts","check","babIdent","prepareChargeCost","baseCostRoll","getChargeCost","process","skipDialog","measureResult","reqErr","code","perAttack","reject","premessage_promises","totalCost","updateTokenTargets","broadcastActivity","appOptions","initAmmoUsage","initAttacks","isPrimaryAttack","_toggleExtraAttack","allAmmo","validAmmoChoices","setAttackAmmo","rollModes","hasDamageAbility","isThrown","isMeleeWeaponAttackAction","isRangedWeaponAttackAction","isFeat","hasTemplate","canConfigureHeld","inheritable","mult","_onToggleFlag","_onChangeAttribute","_onSelectChange","_onToggleConditional","_onAmmoSelectClick","_onAmmoControlClick","_onAmmoClick","_unfocusElements","_hideExtraAttacks","_showExtraAttacks","resolveAttack","selectedIndex","cancelable","translationString","attackBonusTotal","listElem","defaultAmmoId","ammoData","oldAbundant","ChangeLogWindow","lastVersion","autoDisplay","dontShowAgain","xhr","XMLHttpRequest","onload","status","_processChangelog","response","statusText","responseURL","send","changelog","md","converter","showdown","Converter","latestVersion","version","latestMajor","latest","majorPatches","legacy","currentVersion","lines","line","makeHtml","patches","toggleDamageType","_toggleDamageType","customTypes","allTypes","standardTypes","categoryOrder","dt","sortOrder","dm","categoryObj","o2","idxA","idxB","AbstractDocumentSelector","delay","compositioning","_getSections","searchTerm","showSectionHeaders","searchInput","_onSearchComposition","_resolveResult","ItemSelector","itemList","HelpBrowserPF","forward","_forwardInHistory","back","_backInHistory","home","_home","_backwardHistory","_forwardHistory","_currentPage","extensions","defaultExtensions","noHeaderId","ghCompatibleHeaderId","prefixHeaderId","currentUrl","hasHistoryBack","hasHistoryForward","pageContent","slugify","getCurrentHistoryObject","contentElement","scrollTop","headerElement","getElementById","href","removeAttribute","stopImmediatePropagation","regex","_offset","_string","foundrySrc","getRoute","ScriptEditor","_promises","submit","awaitResult","resolved","resolvePromises","_onSave","convertKeys","noSystemVision","prototypeToken","gridUnits","isToken","DocumentSheet","_callbacks","skillName","isSubSkill","isStaticSkill","skillTag","documentType","skillCoreUpdateData","allowUpperCase","camelCase","newData","oldSubSkillId","oldSkillId","tagChanged","msgOpts","documentClass","_openCompendiumEntry","_onCompendiumControls","reportValidity","canAdd","stub","_getHeaderButtons","sidx","_onDropContentSource","dropIndex","addVisionSharingContextMenu","entryId","documentId","visionSharingSheet","offsetTop","innerWidth","VisionSharingSheet","_onReset","_getUniformValue","_config","players","userId","oldUsers","userUpdateKeys","unsetFlag","_html","ExperienceDistributor","_doSplitReward","_doFullReward","_bonusXP","_actors","getActorData","characters","npcs","totalExperience","toLocaleString","splitExperience","bonusXP","isNPC","actorID","_giveExperience","splitEvenly","isSafeInteger","updateDocuments","getXP","getCR","_shouldActorBeSelected","xpLabel","fromCombat","copyUuid","onCopyUuid","uniqueId","getID","defaultPriority","earlyPriority","latePriority","early","late","isValidOp","_onChangeTargetControl","inParent","oldOptions","ItemDirectoryPF","renderUpdateKeys","Troubleshooter","migrate","_runMigration","_openHelp","unlock","reprocess","migrating","world","unlockPacks","report","kb","discord","channel","faq","helpmodule","migrateWorld","migrateModules","migrationButtons","ActorSelector","ownership","actorList","splitValue","valueAsNumber","slider","oldStack","newStack","HTMLField","_processSubmitData","submitData","ApplyDamage","asWounds","damageOptions","dualHeal","enumerable","woundsAndVigor","_prepareInstances","_prepareTargets","apply","_onApply","hasPhysical","hasEnergy","multiTarget","_updateTarget","y","prev","equals","unknownTypes","hpconfig","ratio","getResistances","visibleDR","visibleER","reductionChoices","reductions","haveDIV","haveDER","resistanceType","res","_parseResistanceEntry","enrichResistance","typeIds","type0","type1","hasGeneric","rdata","reduceAll","baseReduction","updated","applyDamageOpts","_getTargetDamageOptions","targetCount","subtitle","isFlag","isFlat","newKeys","ActiveEffectPF","ActiveEffect","_preCreate","isTemporary","isTracker","hideFromToken","turns","isSuppressed","ChatMessagePF","identifiedInfo","_initRollObject","maybeRollObject","actionSource","hasItemSource","templateId","targetIds","prepareBaseData","_setTitle","alias","actionName","getHTML","isRoll","events","renderChatMessagePF","renderHTML","clean","pruneData","_onCreate","_onCreateCheck","sceneId","tokenId","scenes","refMsg","addCombatTrackerContextOptions","duplicateCombatantInitiativeDialog","combatantId","duplicateWithData","messageHookPriorityHack","CombatPF","Combat","ids","updateTurn","messageOptions","currentId","roller","rollerName","opts","dialogData","showInitiativeDialog","getInitiativeRoll","cRollMode","PUBLIC","toMessage","core","chatTemplateData","_onUpdate","worldTime","_onNewTurn","_preUpdate","diff","_isForwardTime","skipped","_detectSkippedTurns","_handleSkippedTurns","_processEndTurn","_processTurnStart","_processInitiative","r0","rd","roundChange","currentTurn","timeOffset","advanceTime","turnTimeOffset","rechargeItems","period","_onDelete","started","xpCfg","CombatantPF","Combatant","updateResource","resource","_getInitiativeFormula","defaultParts","SHIFT_KEYS","registerSystemControls","keybindings","uneditable","onDown","onUp","TokenDocumentPF","_preCreateSetSize","deleteFlags","sizeKey","sizeConf","tokenSizes","scaleX","scaleY","_getTrackedAttributesFromObject","bar","hpPart","getBarAttribute","barName","alternative","_syncSenses","detectionModes","baseRange","sight","visionMode","basicMode","DetectionMode","BASIC_MODE_ID","blindsight","blackAndWhite","trueseeing","trr","_sortDetectionModes","visionDefaults","Canvas","visionModes","fieldName","_detectMode","PRIORITY","allowedMovement","movementModes","movementId","applyChanges","changeOverrides","changeTargetData","getSortChangePriority","targetA","targetB","typeA","typeB","prioA","_sortChanges","changeFlags","chflagItems","hasChanges","getSourceInfo","sourceInfo","refreshDerivedData","continuousChanges","flats","createOverride","_safeApplyChange","applySourceInfo","cc","skillBasePrio","aSort","bSort","getChangeFlat","modifierType","subskill","speedKey","schoolDC","schoolCL","concnMatch","bookCL","sklKey","spread","subSklKey","pf1GetChangeFlat","setSourceInfoByName","srcInfo","getHighestChanges","ignoreTarget","highestTemplate","highestID","stackingBonusTypes","addDefaultChanges","Spellbook","addSpell","SpellbookLevel","SpellbookSlots","domainMax","domainUnused","SpellRanges","calculateRange","SpellbookMode","isSpontaneous","isSemiSpontaneous","Resource","_configure","itemFlags","_visionSharingSheet","_getSourceLabel","bFlags","dFlags","dEntries","_prepareChanges","_prepareTypeChanges","applyActiveEffects","prepareConditions","expiredEffects","startTime","startRound","aeInit","end","disableActiveEffects","deleteActiveEffects","disableBuffs","reason","deleteAEContext","disableAEContext","shieldTypes","armorTypes","resources","_resetInherentTotals","pf1PrepareBaseActorData","userPenalty","refreshAbilityModifiers","fractionalToString","_prepareSenses","_prepareClassSkills","_finalizeTraits","_prepareCreatureType","creatureType","living","senseId","sense","_prepareNaturalReach","getReach","skillSet","csSources","csItem","classSkillName","isClassSkill","skillKey","hasArmorProficiency","aprof","baseArmorProficiency","baseTypes","hasWeaponProficiency","override","wprof","_updateSpellBook","domainSlots","domainSlotValue","casts","unused","castsPerDayTables","hasProgressionChoices","preparedForLevelTables","bookClassId","bookClass","refresh","_generateSpellbookCache","bookInfo","spellbookAbility","spellSlotAbilityScoreBonus","spellSlotAbilityBonusFormula","spellSlotAbilityScore","spellSlotAbilityMod","getAbilityModifier","clTotal","classLevelTotal","autoFormula","autoSpellLevelCalculationFormula","autoBonus","autoTotal","clBonus","woundThresholdChangeTargets","newCL","woundPenalty","concFormula","concentrationFormula","formulaRoll","rollBonus","classAbilityMod","getAbilityBonus","getSpellSlotIncrease","useAuto","autoSpellLevels","isPure","isHybrid","pure","classLevel","castsForLevels","preparedForLevels","castsModAllLevelsFormula","castPerDayAllOffsetFormula","castsModAllLevels","prepModAllLevelsFormula","preparedAllOffsetFormula","prepModAllLevels","castsOffsetFormula","castPerDayOffsetFormula","castsOffset","prepOffsetFormula","preparedOffsetFormula","prepOffset","abilityBonusSlots","preparedForLevel","maxSlots","prep","maxLevelByAblScore","noAbilityLimit","levelSpells","lvlSlots","slotCost","isDomain","domainRemaining","domainSlotsRemaining","bookKeys","allSpells","updateSpellbookInfo","maxBonus","encPen","gearPen","_applyArmorPenalties","acpSkill","prepareItemLinks","_prepareDependentData","updateItemResources","natReach","prepareSpecificDerivedData","prepareCMB","_prepareOverlandSpeeds","warnOnDuplicate","shrAtk","genAtk","cmbAbl","cmbAblMod","pf1PrepareDerivedActorData","totalAtk","updateWoundThreshold","backgroundSkills","acAbl","acTouchAbl","cmdDexAbl","dexAbility","acAblMod","acTouchAblMod","cmdDexAblMod","maxDex","acAblKey","flatFootedTotal","reducedSpeed","sInfo","encLevel","encLevels","eqData","_prepareArmorData","speedValue","getReducedMovementSpeed","encACPPenalty","encMaxDex","encLabel","maxDexLabel","attackACPPenalty","eqType","isShieldOrArmor","itemACP","bsInfo","getProficiency","mDex","itemMDex","ignoreNull","sInfoA","brokenId","totalACP","prepareLinks","sourceDetails","dexDenied","changeGrp","sourceGroups","typeBonuses","srcValue","isDistance","isAC","stacking","_getInherentTotalsKeys","armorBonus","shieldBonus","skillKeys","_getBaseValueFillKeys","getTokenDocument","sizeValue","staticSize","maxSizeIndex","sizeChart","sizeIndex","maxVigor","excessVigorDamage","absoluteKeys","ablData","absKey","cbooks","prepMode","prog","progs","_detectHealthChange","updateVision","visionUpdate","getActiveTokens","debouncedLightSourceReInit","sourceUser","hasProperty","visionSharing","_updateTokenSize","_onCreateDescendantDocuments","arguments","updateConditionTracks","_handleConditionTracks","previousConditions","tracks","trackedConditions","conditionGroup","disableConditionId","_conditionToggleNotify","setConditions","_onDeleteDescendantDocuments","updatedConditions","_cleanItemLinksTo","toRemove","_enumChildren","child","removeItemLink","commit","oldBook","cantrips","filterJoin","parentSkill","haveParentSkill","skillDataPathPart","conds","_getContextConditions","props","swim","climb","rollOptions","d20Roll","atkData","atkAbl","unchained","reverse","wt","wT","getWoundThresholdData","describePart","getDefenseHeaders","damageVulnerabilities","reSplit","cres","initiativeOptions","toCreate","inCombat","untokened","savingThrowId","changeBonus","abilityId","dataPathCheck","acNotes","cmdNotes","srNotes","saveNotes","drNotes","erNotes","immunity","vulnerability","showInDefense","wTlabel","saves","fastHealing","regen","canPopout","aeData","TypeError","newTrackState","disableTrackEntries","toDelete","immunities","oldAe","autoDelete","deleteContext","trender","createContext","hasCondition","mechanics","contexts","counter","type2","typeId","isER","typeId0","typeId1","type0name","type1name","currentHealth","woundAdjust","newHP","nld","newHp","forceDialog","reductionDefault","addTempHP","curTHP","newTHP","getWoundThresholdMultiplier","woundMult","woundLevel","hpActorConfig","penaltyBase","curHP","tempHP","maxHP","wtMult","wtMod","changeFlatKeys","fk","allNotes","getContainerContents","getContextNotes","string","noteSource","saveKey","subId","spellbookNotes","concentrationNotes","noteObjects","enrichContextNotes","noteObj","subnote","getCarryCapacity","getCarriedWeight","_calculateCoinWeight","divisor","coins","carryMultiplier","encumbranceLoads","multiplierCount","getCurrency","currencies","armorData","skipRefresh","addStatic","temporaryRollDataFields","combats","viewed","hpKey","sizes","maxAgeOffset","ageCategories","negLevels","parseAlignment","effectiveSize","reachStruct","qi","haveAnyCharges","maxCharge","getChargeCostSync","getDefaultChargeCost","recharging","newMod","bonusRoll","bonusFeatFormula","hasItemBooleanFlag","flagName","resetSpellbookUsage","restorePoints","restoreFormula","restoreRoll","rechargeOptions","itemUpdate","recharge","_restingHeal","longTermCare","restoreHealth","restoreDailyUses","healUpdate","spellbookUpdates","restOptions","modifyTokenAttribute","isDelta","isBar","isResource","BaseCharacterPF","hpData","oldHpData","oldAblData","_onDeltaUpdates","deltaLabels","feedback","conf","dmgKey","ablName","fontSize","textData","anchor","TEXT_ANCHOR_POINTS","CENTER","TOP","BOTTOM","fill","stroke","strokeThickness","jitter","sinceLast","createScrollingText","baseSize","baseAge","ageValue","tempChanges","pf1AddDefaultChanges","_calculateMaxHealth","useFractional","hasGoodSave","goodSaveFormula","classFractionalSavingThrowFormulas","addSKillChanges","classSkillBonus","strAbl","strAbility","fortAbl","refAbl","willAbl","liteValues","valfn","trget","naturalAC","normalAC","enhAC","armorTarget","baseAC","enhACEffective","brokenAdjust","flyKey","flyValue","flyManeuverabilityValues","sizeStealthMods","sizeFlyMods","lookupStatement","changeData","changeObj","pcClasses","npcClasses","racialHD","actorHealthConfig","pushHealth","manualHealth","autoHealth","hpPerHD","hpPerTier","tiers","maxedHD","computeHealth","baseLabel","ablRE","actorHpConfig","wtData","canon","validItems","itemTrait","hasInfo","traitId","ActorCharacterPF","tokenUpdate","actorLink","disposition","TOKEN_DISPOSITIONS","_updateExp","xpData","isInteger","totalXP","maxExp","curXp","prone","moveInfo","tokenRuler","burrow","ActorNPCPF","_prepareCR","newXP","crTotal","crOffset","getCRExp","ActorHauntPF","_prepareTemplates","prepareHealth","crDetail","ActorTrapPF","triggerType","visionType","trapPerceptionModifiers","ActorVehiclePF","sizeMod","sizeModSpecial","stoppedTotal","vehicleMaterials","magicallyHardened","squares","_prepareDriverData","driverBase","szCMBMod","abilityDamage","abilityDrain","ItemPF","hasActions","hasIdentifier","adjustsSize","adjustedSize","adjustedVision","adjustsVision","_preUpdateNumericValueGuard","keepPaths","_chargePreUpdate","memoryVariables","baseMaterial","firstAction","hasFiniteCharges","autoDeductCharges","autoDeductChargesCost","_rechargeUses","actionUpdate","_rechargeActions","rechargeFormula","changedActions","fullDescription","fullInfo","firstDamage","actorSizes","parsed","capacity","actionTypes","final","_updateMaxUses","_prepareActions","_prepareIdentifier","adjustContained","noAction","isPassive","_updateInheritedCharges","replaceSource","extraParams","scripts","execute","_transformContainerUpdateData","memorizeVariables","containerItem","baseUpdate","_memoryVariables","memKeys","_hasSizeUpdate","_hasVisionUpdate","activeChanged","_activeStateChange","_onMemorizedUpdate","iuses","getRawEffectData","altChatData","isVersatile","extended","interactive","childTypeDistinct","childType","distanceValues","saveDesc","timePeriods","enhBonus","getTypeChatData","harmless","usesPer","descriptionOnly","_result","getConditionalSubTargets","getContextChanges","getContextStack","resizing","_addTypeRollData","_canCreateItemLink","deeptarget","_generateLinkData","packageType","getLinkedItems","includeLinkData","_results","getAllLinkedItems","linkItems","getChangeTargets","actorSkills","s2","skl2","addItemBooleanFlag","removeItemBooleanFlag","getItemBooleanFlags","setItemDictionaryFlag","removeItemDictionaryFlag","getItemDictionaryFlag","getItemDictionaryFlags","getAttackSources","isManeuver","sizeBonus","effectiveChanges","ic","virtualEnh","enhancementBonus","isRng","getAllDamageSources","srcData","timeworn","cursed","artifact","wcat","wtype","ItemBuffPF","oldEffect","_preDelete","timePeriodsShort","getDuration","endTiming","ItemClassPF","classLinks","curLevel","newAssociations","itemsCreationData","_typeSorting","compendiumSource","itemIds","deleteDocuments","saveFormulas","classSavingThrowFormulas","saveData","saveType","babFormulas","classFractionalBABFormulas","classBABFormulas","babType","babFormula","_registerOnActor","classHpConfig","isBaseClass","isBase","customHD","hasFCB","ItemPhysicalPF","oldBase","_resetChargesOnQuantityUpdate","oldQuantity","oldUses","prepareDurability","prepareWeight","itemEnhancementMods","_sizeAdjustedHealth","itemSize","baseWeight","_getArmorWeightMultiplier","actorSize","armorWeight","identical","maxChargesValue","remainingCharges","getActualValue","pricePerUse","hpMax","checkYes","checkNo","ItemConsumablePF","ItemContainerPF","_containedItemUpdate","dryRun","fallback","weightReduction","percent","_prepareInventory","weightMult","currencyWeight","reductionFlat","itemsData","itemOptions","actuallyCreated","noHook","coreVersion","systemVersion","createdTime","lastModifiedBy","createContained","created","actuallyDeleted","removeContained","actuallyUpdated","modifiedTime","updateContained","fullOptions","ItemEquipmentPF","slotType","slotTypes","eType","typeKeys","eSubtype","subtypeKeys","isArmor","isOrdinary","subtypeLabels","armorValue","armorValueEffective","acpEffective","applyEquippedEffects","shieldType","armorType","ItemFeatPF","traitType","traitTypes","raceType","raceTypes","traitCategory","racialTraitCategories","abilityTypeLong","ItemLootPF","ItemRacePF","oldRace","newSize","oldSize","_preparationPreUpdate","getSpellComponents","compact","spellAbility","casterLevel","getMinimumCasterLevelBySpellData","curUses","getSpellUses","newCharges","actorUpdateData","slOffset","clOffset","maxPrepared","srcComponents","srcMaterials","isDivine","spellComponents","tc","classCasterType","_replaceConsumableConversionString","toConsumable","origData","isWand","isPotion","isScroll","minLevel","minCl","materialPrice","gpValue","xsrc","convertNotes","arrKey","exAtk","bAtk","dmgPart","oldSaveDC","charcard","getFormData","createConsumable","headerContent","bodyContent","separator","savingThrowDescription","useDCandSR","ItemWeaponPF","newWeaponType","wType","wSubtype","ItemImplantPF","IDField","_defaults","required","readonly","_validateType","PreparedModel","_safePrepareData","prepareData","DocumentLikeModel","AEBaseModel","TypeDataModel","durationEndEvents","AEBuffModel","CompactingMixin","SetField","ExtraAttackModel","ReplaceableSourceMixin","BaseMessageModel","ObjectField","sv","ItemMessageModel","ActionMessageModel","ArrayField","CheckMessageModel","HauntModel","notice","TrapModel","technology","VehicleModel","crew","passengers","decks","drivingCheck","drivingDevice","drivingSpace","forwardFacing","propulsion","affirmative","findItem","enrichers","matchItem","packTypePriority","PF1TextEnricher","enricher","global","setIcon","parseDuration","unitLabel","draggable","setElementOptions","tooltipClass","getSpeakerData","getRelevantActors","asSpeaker","asSheet","getSheetActor","tokenActors","generateTooltip","card","option","onSave","staticRoll","onAbility","onDraw","ident","draw","displayChat","onSkill","onUse","actionIdent","itemAction","actionTag","onAction","msgId","onHealth","vars","dual","speakerData","targetRollData","isHeal","tname","onBrowse","onCondition","getAliased","enableConfig","onApply","activationData","onToggle","enable","displayAction","NL","mainlabel","isDual","sourceMetric","sourceImperial","swapWeight","kgl","lbsl","swapDistance","ml","ftl","aliases","tables","tips","onEnrichedInteraction","handleChatInput","comment","chatOptions","withinRect","point","rect","TemplateLayerPF","TemplateLayer","_onDragLeftMove","interaction","interactionData","snapToGrid","snapMode","GRID_SNAPPING_MODES","EDGE_MIDPOINT","CORNER","destination","getSnappedPoint","preview","ray","Ray","measurePath","halfAngle","angle","baseDirection","normalizeDegrees","toDegrees","renderFlags","refreshShape","MeasuredTemplatePF","_getTemplateSnapCoordinates","isSquare","_setElementOffsets","snapX","snapY","offsetX","offsetY","ruler","dx","dy","_refreshRulerText","_refreshPosition","_refreshTemplate","_getGridHighlightPositions","templateType","isHexagonal","ox","oy","originInCenter","bounds","shape","getBounds","fit","positions","i0","j0","i1","j1","getOffsetRange","cx","cy","getCenterPoint","angleDiff","atan2","PI","docAngle","getTopLeftPoint","gridSizePx","gridSizeUnits","ticker","addOnce","PIXI","UPDATE_PRIORITY","LOW","tCenter","getCenter","maxDistance","relevantTokens","sizeErrorMargin","isLargeToken","withinCone","minAngle","maxAngle","rayAngle","rayWithinAngle","raySceneLength","getOccupiedCells","GRID_TYPES","GRIDLESS","cells","mapCoordsToCell","highlightSquares","cell","getHighlightLayer","highlightId","rangeColor","Color","border","multiply","reachColor","SquareHighlight","fillColor","borderColor","_squares","layer","addHighlightLayer","addSquare","gridSize","hlname","ig","highlightPosition","AttackHighlightBase","clearHighlight","renderHighlight","GridlessHighlight","rangeStops","tw","th","rangeKey","minRange","rangeMeasurements","rangeIncrements","tokenOffset","hl","removeChildren","circle","Graphics","stops","inner","beginFill","drawCircle","beginHole","endHole","endFill","addChild","SquareGridHighlight","currentHighlight","isFeet","useReachRule","getReachSquares","ftDistance","userLimit","maxSquareRange","squaresExtra","SQUARE","gridDist","tokenSquares","tokenRect","getClosestTokenSquare","pos","lowest","square","sqrt","squareRange","wMax","hMax","tl","closestSquare","shouldAddReachSquare","closestTokenSquare","p0","p1","dist2","SquareGrid","diagonals","GRID_DIAGONALS","EQUIDISTANT","reachRuleRange","attackReachHighlight","showAttackReach","addReachListeners","_onMouseEnterReach","_onMouseLeaveReach","_getTokenByUuid","LLVMixin","_getLightSourceData","bright","getRadius","hasSystemVision","requiresSelection","tokenDoc","lowLightTokens","actorVision","lowLight","tokenVision","lowLightMultiplier","lowLightMultiplierBright","reinitLightSources","lightSources","initializeLightSource","addLowLightVisionToLightConfig","toFormGroup","legend","TokenPF","toggleEffect","effectId","disableLowLight","_onControl","_onRelease","_isVisionSource","hasSight","guarantee","_getBarBoost","_getBarUnderline","_drawBar","boost","underline","boostlessMax","boostlessPct","fromRGBvalues","lineStyle","drawRoundedRect","posY","wr","hr","x0","y0","DetectionModeInvisibilityPF","DetectionModeInvisibility","_testPoint","visionSource","_testLOS","_testRange","lightSource","DetectionModeBlindSensePF","DETECTION_TYPES","walls","getDetectionFilter","_detectionFilter","OutlineOverlayFilter","outlineColor","knockout","wave","ID","_canDetect","DetectionModeBlindSightPF","DetectionModeLifesensePF","DetectionModeTremorPF","DetectionModeTremor","MOVE","hasStatusEffect","specialStatusEffects","SWIM","lighting","VisionMode","LIGHTING_LEVELS","DIM","TokenHUDPF","TokenHUD","_getStatusEffectChoices","isOverlay","addQuickActions","fragment","addQuickActionListeners","after","showReach","originalAngle","initialLayer","activeLayer","activatePreviewListeners","pfStyle","_onConfirm","_onMove","rotate","_onRotate","controlIcon","removeAllListeners","stage","lastMove","RENDER_THROTTLE","getLocalPosition","_onFinish","MeasuredTemplateDocument","snap","_onClickRight","_onDragLeftCancel","_applyStaticRoll","isDie","Die","_formula","isStatic","die","faces","evaluated","TEN","TWENTY","isCheck","overBy5","isMisfire","isNonRoll","isNormal","getFormula","bonusTerms","promptDialog","DIALOG_TEMPLATE","hasDC","editDC","_onDialogSubmit","STATIC_ROLL","_getFormData","baseDice","onDemand","precision","isAbnormal","abnormalTooltip","compendiumEntryType","_evaluate","_applyBonus","_evaluateSync","addBonus","DamageRoll","enableFlavorColorset","appearance","NORMAL","CRITICAL","NON_CRITICAL","TYPES","FunctionTermPF","termTypes","propagateFlavor","_evaluateAsync","json","StringTermPF","StringTerm","_conditionals","blankToNull","FilePathField","dismiss","minValue","spellPointCost","ColorField","EmbeddedDataField","unchainedAction","spellArea","customColor","customTexture","FALLBACK_IMAGE","_prepareConditionals","maxUses","updateContext","dataObj","_total","rangeIncrement","maxRange","rangeType","singleIncrementRange","baseDCFormula","dcSchoolBonus","universalDCBonus","dcFormula","damageSources","actionTypeToContext","mods","fakeCondChanges","allChanges","condData","chatDataOptions","isUnchainedActionEconomy","activationTypes","activationTypesPlural","abilityActivationTypesPlurals_unchained","abilityActivationTypesPlurals","activationType","durationFormula","variableDuration","minroll","maxroll","unflair","compress","totalDC","rangeUnit","rangeValue","lrange","itemActionTypes","proficiencyPenalty","isNaturalSecondary","secondaryPenalty","hightest","applyChange","addParts","isExtra","ablDamage","ablLabel","rollParts","firstDie","nonCrit","exAtkCfg","bonusToAll","unnamedAttack","unnamedAttackNames","getUniqueName","replaceSpecificRollData","attackSetCount","formulaicAttack","unchainedEconomy","parseAttacks","countFormula","bonusFormula","bonusLabel","exAtkCount","minimized","alabel","formulaCfg","condBonuses","totalBonus","diffObject","component","defaultData","defaultDamageType","hasSound","updateTime","oldChangeData","newIds","newChangeData","targetData","getSourceInfoTargets","msgSourceReference","errorMessage","errorData","overrides","modifierChanger","abilityTarget","sourceInfoTargets","infoEntry","sourceInfoGroup","infoTarget","doAdd","sumValue","existingInfoEntry","hasSameParent","isEnh","hasSameTarget","hasHighestValue","isSameModifier","isSameTarget","hasHigherValue","oldEntry","prune","_modifiers","_prepareModifiers","newScriptCallData","getDelegate","scriptEditor","scriptCall","scm","actionRange","rng","simplifyRange","actionDamage","hash","combine","numberFormatAlt","fraction","helpers","registerHelper","measureDistances","segments","renderCallback","rates","maxRate","copper","omit","isSimpleTerm","FormulaPart","_number","ParentheticalTerm","iformula","triTermOps","simpleOnly","eterms","right","replaceZeroDice","RollTerm","negativeTerms","nterms","nt","stringTerms","handleFormula","newformula","handleParts","dmgAbl","semiFinal","sizeRoll","origCount","origSides","targetSize","initialSize","_getSizeIndex","currentDie","sizeDie","shifted","sides","d6Index","d8Index","sizeOffset","curSize","sizeReach","ifelse","ifTrue","ifFalse","sizeRollFn","fromTerms","lookup","if","_if","eq","lt","lte","gt","gte","and","or","xor","not","getConditions","statusEffects","sys","toStatusEffect","oldKey","newKey","deadCond","numberFormat","strings","ListFormat","classIDMap","PartyRestConfig","restConfig","_prepareActors","_calculateHours","rest","_onToggleCategory","_onOpenSheet","restoreUses","conscious","_isConscious","watch","nowatch","watches","duo","solo","partyRest","watchTime","isWatch","_el","pf1NoRender","_onSubmitForm","_performRest","people","cancelled","allSettled","advance","quickRest","binarySearch","searchArr","compare_fn","cmp","uniquePermutations","concat","TextEditor_replaceTextNode","replacement","replaceParent","splitText","replaceWith","calculateRangeFormula","spellRangeFormulas","diffObjectAndArray","keepLength","isDifferent","difference","_difference","v0","v1","d2","_deepClone","Document","DisplayObject","clone","CR_EXP_LEVELS","allowInitialNumbers","substring","embeds","pcontent","TextEditor_getTextNodes","walk","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","currentNode","rgx","TextEditor_replaceTextContent","func","replaced","matchAll","docType","fuzzyIndex","sortArrayByName","filteredIndex","it","searchMutations","mut","getActors","unlinked","User","testUsers","sceneList","Scene","isLinked","item0","item1","ms","lastCall","diagonalRule","gs","nx","ny","nDiagonal","nStraight","nd10","propertyKey","propA","propB","pageId","align","neutral","renderForEveryone","renderApplications","systemOnly","throttle","timeoutId","Registry","_defaultData","unregister","registryObject","RegistryEntry","DamageType","DamageTypes","CATEGORIES","colorset","Material","intrinsic","primitive","hardnessMultiplier","healthPerInch","healthBonus","healthMultiplier","buckler","incompatible","perPound","ammunition","lightWeapon","oneHandWeapon","twoHandWeapon","rangedOneHandWeapon","rangedTwoHandWeapon","enhancement","bonusPerPound","Materials","ScriptCallCategory","ScriptCalls","omitFields","StatusHudModel","actorTypes","Condition","Conditions","TRACKS","hud","HUD_EXCLUDE_INANIMATE","SET_TO_ZERO","URLField","DateField","Source","optionalString","isbn","tieIn","Sources","companion","MigrationCategory","processed","invalid","errors","ignored","completed","progress","percentage","hasTotal","progressLabel","startEntry","actionState","processing","finishEntry","recordError","ignoreEntry","addIgnored","setTotal","setInvalid","setProgress","finish","currentName","timestamp","CompendiumCollection","getInvalidEntries","invalidDocumentIds","getInvalid","getErrorEntries","MigrationState","createCategory","MigrationIssuesDialog","Dialog","prompt","MigrationDialog","migrationState","autoClose","fastMigration","stateTracker","_onMigration","_showDetails","_reloadClients","typeChanges","debouncedReload","_lastProcessUpdate","RENDERED","_preClose","compendiumRenames","racialhd","commonbuffs","mythicpaths","registerRedirects","oldUuid","newUuid","uuidRedirects","prefix","oldName","materialChanges","nexavarianSteel","alchemicalsilver","angelskin","bloodcrystal","coldiron","darkleafcloth","eelhide","elysianbronze","fireforgedsteel","frostforgedsteel","griffonmane","liquidglass","livingsteel","singingsteel","spiresteel","isMigrated","migration","initializeStateAndDialog","migrateActors","noHooks","localState","tracker","migrateActorData","migrateItems","migrateItemData","migrateScenes","migrateScene","migrateCompendiums","migrateCompendium","server","marker","wasLocked","getDocuments","applyUpdates","UPDATE_CHUNK_SIZE","migrateTokenData","tokenData","lowLightVisionMultiplier","lowLightVisionMultiplierBright","customVisionRules","saturation","brightness","attenuation","contrast","migrateToken","migrateActiveEffectsToItems","_migrateActorEncumbrance","ent","updateKey","_migrateActorNoteArrays","_migrateActorSpeed","_migrateActorSpellbookCL","curBase","curFormula","_migrateActorSpellbookSlots","spellbookSlot","baseKey","maxKey","newBase","_migrateActorSpellbookPrep","wasSpontaneous","usesAuto","_migrateActorSpellbookKind","castingClass","_migrateActorConcentration","oldValue","isString","formulaKey","_migrateActorBaseStats","deleteEntries","dPath","_migrateUnusedActorCreatureType","_migrateActorSpellbookDCFormula","_migrateActorHPAbility","_migrateActorCR","_migrateAttackAbility","_migrateActorDefenseAbility","_migrateActorSpellbookUsage","_migrateActorNullValues","_migrateActorSpellbookDomainSlots","_migrateActorStatures","_migrateActorInitAbility","_migrateActorChangeRevamp","subPath","_migrateActorCMBRevamp","_migrateCarryBonus","_migrateBuggedValues","convertToInt","_migrateSpellbookUsage","usedSpellbooks","_migrateActorHP","_migrateActorSenses","oldSenses","brightSight","_migrateActorInvaliddSkills","sklData","subSklData","_migrateActorSkillRanks","_migrateActorSkillJournals","reOldJournalFormat","subSkillKey","_migrateActorSubskillData","subSkillData","_migrateActorDRandER","oldDR","oldER","_migrateActorTraits","selections","_migrateAnyTrait","_migrateActorProficiencies","wprofs","wprofmap","sim","mar","nwprofs","_migrateActorFlags","getUniformValue","visionPermission","uid","noDefault","noUsers","_enabled","_migrateActorUnusedData","itemDoc","_migrateActorActiveEffects","migrateItemActiveEffects","migrateItemDataActiveEffects","endTiminig","_migrateItemFlags","_migrateItemArrayTypes","_migrateFlagsArrayToObject","bflags","dflags","_migrateWeaponImprovised","_migrateItemSpellDescription","shortDescription","_migrateClassDynamics","stKeys","_migrateClassType","_migrateClassCasting","_migrateSpellDivineFocus","_migrateWeaponCategories","weaponType","changeProp","two","_migrateArmorCategories","oldType","_migrateArmorMaxDex","_migrateArmorACP","_migrateItemSize","wdSize","_migrateItemFeatAbilityTypes","_migrateClassLevels","_migrateSavingThrowTypes","_migrateCR","_migrateItemChanges","newChanges","cd","oldChanges","updateChanges","_migrateItemChangeFlags","_migrateItemContextNotes","oldNotes","newNotes","oldNote","newNote","updateNotes","_migrateEquipmentSize","_migrateSpellCosts","autoDeduct","_migrateSpellPreparation","maxAmount","spontaneousPrepared","preparedAmount","_migrateLootEquip","_migrateItemLinks","_migrateItemProficiencies","oldKeys","nwprof","_migrateItemNotes","_migrateScriptCalls","_migrateItemActionToActions","hasOldAction","spellDuration","oldSpellPointCostFormula","_migrateItemChargeCost","_migrateItemLimitedUses","_migrateItemWeight","_migrateItemHealth","_migrateContainerReduction","_migrateContainerPrice","basePrice","_migrateItemType","_migrateItemLearnedAt","learned","_migrateItemTuples","_migrateEquipmentCategories","_migrateSpellDescriptors","exists","_migrateItemTraits","_migrateRaceItemCreatureType","oldTypes","lowerCaseKey","charAt","_migrateItemMaterials","materialPath","tg","ma","newMat","_migrateSpellSubschool","customSubschools","ssLoop","ssId","ssLabel","_migrateItemDefaultAmmo","_migrateItemDurability","_migrateItemHeld","_migrateItemUnusedData","priceUnits","identifiedName","weaponData","useCustomTag","itemActionData","migrateItemActionData","additions","deletions","inventoryItems","sitem","subItem","itemUpdateData","subUpdate","migrateContainerItems","_migrateActionDamageType","damageGroupPaths","damageGroupKey","damageGroup","_Action_ConvertDamageType","_migrateActionLimitedUses","_migrateActionExtraAttacks","attackParts","formulaicAttacks","_migrateActionAmmunitionUsage","_migrateActionDuration","_migrateActionMaterials","_migrateActionConditionals","reResult","migrateSceneTokens","migrateSceneActors","noEncumbrance","dataType","newLink","movedUuid","_index","hiddenLinks","_delete","damageTypeString","damageTypeList","tests","damageTest","testString","aeUpdate","migrateActiveEffectData","getNewRelativeOrigin","newOrigin","originFlag","migrateRollData","migrateMessageData","cmData","newRolls","newRoll","migrateMessages","migrateActor","migrateItem","migrateMessage","migrateSystem","systemPacks","startMessage","smsgId","permanent","_migrateWorldSettings","actorMigration","itemMigration","packMigration","chatMigration","sceneMigration","preparePacks","expireFromTokens","globalThis","_canvas","PF1","PF1CONST","dice.RollPF","layers","layerClass","_canvas.TemplateLayerPF","objectClass","_canvas.MeasuredTemplatePF","_canvas.TokenPF","hudClass","_canvas.TokenHUDPF","documents.TokenDocumentPF","documents.actor.ActorCharacterPF","documents.actor.ActorNPCPF","documents.actor.ActorHauntPF","documents.actor.ActorTrapPF","documents.actor.ActorVehiclePF","dataModels","models.actor.HauntModel","models.actor.TrapModel","models.actor.VehicleModel","documents.item.ItemAttackPF","documents.item.ItemBuffPF","documents.item.ItemClassPF","documents.item.ItemConsumablePF","documents.item.ItemContainerPF","documents.item.ItemEquipmentPF","documents.item.ItemFeatPF","documents.item.ItemLootPF","documents.item.ItemRacePF","documents.item.ItemSpellPF","documents.item.ItemWeaponPF","documents.item.ItemImplantPF","documents.ActiveEffectPF","legacyTransferral","models.ae.AEBaseModel","models.ae.AEBuffModel","documents.CombatPF","documents.CombatantPF","documents.ChatMessagePF","models.chat.BaseMessageModel","models.chat.ItemMessageModel","models.chat.ActionMessageModel","models.chat.CheckMessageModel","applications.ItemDirectoryPF","dice.D20RollPF","dice.DamageRoll","functions","AmbientLight","_canvas.lowLightVision.LLVMixin","register$1","Actors","applications.actor.ActorSheetPFCharacter","applications.actor.ActorSheetPFNPC","applications.actor.ActorSheetPFNPCLite","applications.actor.ActorSheetPFNPCLoot","applications.actor.ActorSheetPFHaunt","applications.actor.ActorSheetPFTrap","applications.actor.ActorSheetPFVehicle","Items","applications.item.ItemSheetPF","applications.item.ItemSheetPF_Container","applications.journal.JournalTextPageSheetPF1","LABEL","DETECTION_TYPE","SIGHT","initializeSocket","initializeModuleIntegration","integration","SpeedProvider","registerSystem","Pf1SpeedProvider","colors","getRanges","baseSpeed","getBaseSpeed","inHeavyArmor","inHeavyLoad","runMultiplier","useElevation","getSetting","elevation","registries","registry.DamageTypes","registry.Materials","registry.ScriptCalls","registry.Conditions","registry.Sources","registryName","registryClass","registerTokenRuler","TokenRulerPF","rulerClass","applyWaypointSpeedData","wp","factor","factorBound","factorBase","singleMove","doubleMove","running","runningFar","exceedMovement","_getGridHighlightStyle","waypoint","measurement","scaledCost","getCostFunction","jump","gregorian","earthCalendarConfig","calendar","days","ordinal","abbreviation","months","GolarianCalendarData","CalendarData","setEarthTime","YEAR_OFFSET","syncCanonical","second","oldtime","getFullYear","earthCalendar","isLeapYear","getMonth","getDate","leapDays","golarianCalendarConfig","golarianCalendarClass","worldCalendarConfig","worldCalendarClass","toLocalize","toLocalizeConst","toSort","doLocalize","localized","akey","aval","bkey","bval","localA","localB","doLocalizeKeys","flattenObject","localizeLabels","doLocalizePaths","golarianCalendar","PREVIOUS_MIGRATION_VERSION","documents.settings.migrateSystemSettings","changelogVersion","curVersion","chatUtils.hideRollInfo","chatUtils.hideGMSensitiveInfo","chatUtils.hideInvisibleTargets","chatUtils.addTargetCallbacks","chatUtils.alterTargetDefense","chatUtils.alterAmmoRecovery","_canvas.attackReach.addReachListeners","applications.CurrencyTransfer","macros.createItemMacro","macros.createActionMacro","macros.createSkillMacro","macros.createSaveMacro","macros.createMiscActorMacro","sizingTemplateData","sizeContent","systemVision","visionTab","enableCustomVision","toggleCustomVision","dmTab","visionContent","applications.ChangeLogWindow","Settings"],"mappings":"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AM,QAASuD,OAAQ,CAAE21B,OAAQ,UAI/CC,WAAY,CACVte,QAAS,CACP7e,MAAO,oBACPkI,QAAS,CAAC,CAAElE,KAAM,WAClB+2B,UAAW,CACTvnB,QAAQ,EACRpE,OAAO,GAEToE,OAAQ,CAAExP,KAAM,SAAUuD,OAAQ,CAAE0gB,QAAS,SAAUqT,YAAY,MAIvE5G,KAAM,CACJ9J,KAAM,CACJpX,OAAQ,CAAExP,KAAM,WA2DtByB,MAAM2W,KAAK,SAAS,KAClB,IAAA,MAAYghB,EAAQl5B,KAAatB,OAAO8B,QAAQo2B,GAC9C,IAAA,MAAYuC,EAASC,KAAY16B,OAAO8B,QAAQR,GAAW,CACzDo5B,EAAQp5B,SAAWk5B,EACnBE,EAAQj2B,GAAKg2B,EACbC,EAAQC,KAAO,GAAGH,KAAUC,IAE5BC,EAAQt9B,MAAQ4E,KAAKC,KAAKC,SAASw4B,EAAQt9B,OAE3C,MAAMw9B,EAAQF,EAAQvC,UACM,mBAAjByC,GAAOzB,QACVyB,EAAAzB,MAAQyB,EAAMzB,QAE5B,CACA,qFA/rBa,CACX0B,KAAM,CACJ,EACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,OAEFC,OAAQ,CACN,EACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MAEFC,KAAM,CACJ,EACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,KACA,MACA,MACA,IACA,KACA,KACA,KACA,qBAQS,CACX,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,mBApkGW,CACXjpB,IAAK,iBACLqgB,IAAK,iBACLb,IAAK,iBACLc,IAAK,iBACLC,IAAK,iBACLC,IAAK,iCAMM,CACXxgB,IAAK,sBACLqgB,IAAK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IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,eACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,aACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,aACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,aACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,aACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,aACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,uBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,0BACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,sBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,gBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,YACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,kBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,qBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,iBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,sBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,QAER,CACEglB,IAAK,cACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNl7D,QAAQ,EACRxpB,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uDACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yDACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kDACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kDACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0DACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0DACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,qDACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wDACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,iDACNgoG,KAAM,UACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNl7D,QAAQ,EACRxpB,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNC,MAAO,iBACPn7D,QAAQ,EACRxpB,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8CACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,oCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8CACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,iDACNgoG,KAAM,QACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,qCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,iDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,aACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,sCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,2DACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACNgoG,KAAM,SACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,sCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,sDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,2DACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,sCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,iDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,qCACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,sCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,qCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,kDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,mDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,kDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,+CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,wDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,2DACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,yCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,2DACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,oDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,cACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,EACP/U,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,8CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,WACLvpB,KAAM,uCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,MAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,cACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,eACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,gCACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,eACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,IACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,YACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,GACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,aACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,aACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,cACLvpB,KAAM,eACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,aACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACP8nK,KAAM,oBACNntL,KAAM,UAER,CACEglB,IAAK,aACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPn4F,MAAO,EACPrlB,KAAM,UAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACN2pF,KAAM,oBACNl7D,QAAQ,EACRjyH,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACN2pF,KAAM,oBACN1kF,IAAK,sCACLwpB,QAAQ,EACRjyH,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNl7D,QAAQ,EACRjyH,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,qBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNC,MAAO,YACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,kBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,gBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,cACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACNgoG,KAAM,QACND,KAAM,aACN2pF,KAAM,oBACNC,MAAO,mBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iCACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,iBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,kBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACNgoG,KAAM,MACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,yBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,eACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACNgoG,KAAM,MACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,YACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,eACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,gBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,gBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,mBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,gBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,KACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,oBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACNgoG,KAAM,MACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,kBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,oBACNgoG,KAAM,MACND,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,oBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,0BACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACN2pF,KAAM,oBACNC,MAAO,iBACPptL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACN2pF,KAAM,oBACNntL,KAAM,aAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,wCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2DACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,0CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oDACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,UACNiyH,QAAQ,GAEV,CACEjtG,IAAK,UACLvpB,KAAM,4CACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,4CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,qDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,qDACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,UACNyoG,IAAK,uCAEP,CACEzjF,IAAK,UACLvpB,KAAM,uCACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2CACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,4BACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,eACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,cACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,uBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,wBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,qBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,8BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gCACNgoG,KAAM,OACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACNgoG,KAAM,KACND,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,0BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kBACNgoG,KAAM,MACND,KAAM,aACNga,MAAO,IACP2vE,KAAM,oBACN1kF,IAAK,sCACLzoG,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,+BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,sBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,mBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,kBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,oCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,UACLvpB,KAAM,4BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,2BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,oBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,yBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,iBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,qCACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,qBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,wBACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,WACLvpB,KAAM,6BACN+nG,KAAM,aACNga,MAAO,GACP2vE,KAAM,oBACNntL,KAAM,WAER,CACEglB,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sCACLlF,UAAW,0BAEb,CACEv+E,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sCACLlF,UAAW,0BAEb,CACEv+E,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sCACLlF,UAAW,0BAEb,CACEv+E,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sCACLlF,UAAW,0BAEb,CACEv+E,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sCACLlF,UAAW,0BAEb,CACEv+E,IAAK,YACLvpB,KAAM,gBACN+nG,KAAM,aACNga,MAAO,GACPx9G,KAAM,QACNyoG,IAAK,sC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","x_google_ignoreList":[18]}