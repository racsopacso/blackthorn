{"version":3,"file":"pf1.js","sources":["module/patch-core.mjs","module/compendium-directory.mjs","module/chatlog.mjs","module/utils/internal.mjs","module/socket.mjs","module/utils/semver.mjs","module/documents/macros.mjs","module/utils/chat.mjs","module/documents/actor/actor-base.mjs","module/documents/actor/actor-proxy.mjs","module/documents/item/item-base.mjs","module/documents/item/item-proxy.mjs","module/tours/base-tours.mjs","module/tours/actor-sheet-tour.mjs","module/tours.mjs","module/config.mjs","module/const.mjs","module/applications/compendium-browser/filters/base.mjs","node_modules/fuzzysort/fuzzysort.js","module/applications/compendium-browser/compendium-browser.mjs","module/applications/mixins/no-autocomplete.mjs","module/applications/trait-selector.mjs","module/applications/mixins/drag-drop.mjs","module/applications/abstract-list-selector.mjs","module/applications/damage-resistance-selector.mjs","module/applications/actor/actor-rest.mjs","module/applications/point-buy-calculator.mjs","module/applications/item-picker.mjs","module/applications/settings/abstract-settings.mjs","module/dice/roll.mjs","module/models/fields/formula-field.mjs","module/applications/settings/experience.mjs","module/applications/settings/health.mjs","module/applications/settings/integration.mjs","module/applications/settings/performance.mjs","module/documents/settings.mjs","module/applications/level-up.mjs","module/applications/currency-transfer.mjs","module/utils/handlebars/templates.mjs","module/applications/actor/actor-sheet.mjs","module/applications/actor/character-sheet.mjs","module/applications/actor/npc-sheet.mjs","module/applications/actor/npc-lite-sheet.mjs","module/applications/actor/npc-loot-sheet.mjs","module/applications/actor/haunt-sheet.mjs","module/applications/actor/trap-sheet.mjs","module/applications/actor/vehicle-sheet.mjs","module/applications/speed-editor.mjs","module/applications/categorized-item-picker.mjs","module/applications/flag-selector.mjs","module/applications/item/item-sheet.mjs","module/applications/item/container-sheet.mjs","module/applications/item/item-create.mjs","module/applications/component/action-sheet.mjs","module/applications/compendium-browser/filters/checkbox.mjs","module/applications/compendium-browser/filters/text.mjs","module/applications/compendium-browser/filters/number-range.mjs","module/applications/compendium-browser/filters/item.mjs","module/applications/compendium-browser/filters/common.mjs","module/applications/compendium-browser/filters/spell.mjs","module/applications/compendium-browser/filters/feat.mjs","module/applications/compendium-browser/filters/class.mjs","module/applications/compendium-browser/filters/race.mjs","module/applications/compendium-browser/filters/buff.mjs","module/applications/compendium-browser/filters/creature.mjs","module/applications/compendium-browser/buff-browser.mjs","module/applications/compendium-browser/class-browser.mjs","module/applications/compendium-browser/creature-browser.mjs","module/applications/compendium-browser/feat-browser.mjs","module/applications/compendium-browser/item-browser.mjs","module/applications/compendium-browser/race-browser.mjs","module/applications/compendium-browser/spell-browser.mjs","module/applications/journal/journal-text-sheet.mjs","module/applications/utils/co-edit.mjs","module/applications/action-selector.mjs","module/action-use/chat-attack.mjs","module/action-use/action-use.mjs","module/applications/attack-dialog.mjs","module/applications/change-log.mjs","module/applications/damage-type-selector.mjs","module/applications/abstract-document-selector.mjs","module/applications/item-selector.mjs","module/applications/help-browser.mjs","module/applications/script-editor.mjs","module/applications/senses-selector.mjs","module/applications/skill-editor.mjs","module/applications/content-source-editor.mjs","module/applications/vision-sharing.mjs","module/applications/experience-distributor.mjs","module/applications/change-editor.mjs","module/applications/sidebar/items-directory.mjs","module/applications/troubleshooter.mjs","module/applications/actor-selector.mjs","module/applications/split-stack.mjs","module/applications/html-editor.mjs","module/applications/apply-damage.mjs","module/applications/_module.mjs","module/applications/entry-selector.mjs","module/documents/active-effect.mjs","module/documents/chat-message.mjs","module/documents/combat.mjs","module/documents/combatant.mjs","module/documents/controls.mjs","module/documents/token.mjs","module/documents/actor/utils/apply-changes.mjs","module/documents/actor/utils/spellbook.mjs","module/documents/actor/components/resource.mjs","module/documents/actor/actor-pf.mjs","module/documents/actor/abstract/base-character.mjs","module/documents/actor/actor-character.mjs","module/documents/actor/actor-npc.mjs","module/documents/actor/actor-haunt.mjs","module/documents/actor/actor-trap.mjs","module/documents/actor/actor-vehicle.mjs","module/documents/item/item-pf.mjs","module/documents/item/item-attack.mjs","module/documents/item/item-buff.mjs","module/documents/item/item-class.mjs","module/documents/item/item-physical.mjs","module/documents/item/item-consumable.mjs","module/documents/item/item-container.mjs","module/documents/item/item-equipment.mjs","module/documents/item/item-feat.mjs","module/documents/item/item-loot.mjs","module/documents/item/item-race.mjs","module/documents/item/item-spell.mjs","module/documents/item/item-weapon.mjs","module/documents/item/item-implant.mjs","module/models/fields/id-field.mjs","module/models/abstract/prepared-model.mjs","module/models/abstract/document-like-model.mjs","module/models/ae/ae-base.mjs","module/models/ae/ae-buff.mjs","module/models/mixins/compacting-mixin.mjs","module/models/action/damage-part-model.mjs","module/models/action/extra-attack-model.mjs","module/models/mixins/replaceable-source.mjs","module/models/chat/base-message.mjs","module/models/chat/item-message.mjs","module/models/chat/action-message.mjs","module/models/chat/check-message.mjs","module/models/actor/haunt-model.mjs","module/models/actor/trap-model.mjs","module/models/actor/vehicle-model.mjs","module/chat/text-enrichers.mjs","module/chat/chat-commands.mjs","module/canvas/measure.mjs","module/canvas/attack-reach.mjs","module/canvas/low-light-vision.mjs","module/canvas/token.mjs","module/canvas/detection-modes.mjs","module/canvas/vision-modes.mjs","module/canvas/token-hud.mjs","module/canvas/ability-template.mjs","module/dice/d20roll.mjs","module/dice/damage-roll.mjs","module/dice/terms/function-term.mjs","module/dice/terms/string-term.mjs","module/components/action.mjs","module/components/change.mjs","module/components/conditionals.mjs","module/components/script-call.mjs","module/components/context-note.mjs","module/utils/handlebars/helpers.mjs","module/utils/canvas.mjs","module/utils/dialog.mjs","module/utils/currency.mjs","module/utils/formulas.mjs","module/utils/roll-functions.mjs","module/utils/initialization.mjs","module/utils/roll-data.mjs","module/utils/i18n.mjs","module/utils/packs.mjs","module/utils/party.mjs","module/utils/lib.mjs","module/registry/base-registry.mjs","module/registry/damage-types.mjs","module/registry/materials.mjs","module/registry/script-call.mjs","module/registry/conditions.mjs","module/registry/sources.mjs","module/migration/migration-category.mjs","module/migration/migration-state.mjs","module/applications/migration/migration-issues-dialog.mjs","module/applications/migration/migration-dialog.mjs","module/migration/asset-moves.mjs","module/migration.mjs","pf1.mjs","module/modules.mjs","module/canvas/token-ruler.mjs","module/calendar.mjs"],"sourcesContent":["// Document link attribute stuffing\n{\n  const origFunc = TextEditor._createContentLink;\n  TextEditor._createContentLink = async function (match, { relativeTo } = {}) {\n    const name = match[4];\n    const a = await origFunc.call(this, match, { relativeTo });\n    if (name?.indexOf(\"::\") > -1) {\n      const args = name.split(\"::\"),\n        label = args.pop();\n      if (args.length) {\n        args.forEach((o) => {\n          let [key, value] = o.split(/(?<!\\\\):/);\n          if (!(key && value)) {\n            value = key;\n            key = \"extra\";\n          }\n          switch (key) {\n            case \"icon\":\n              a.firstChild.className = \"fa-solid fa-\" + value;\n              break;\n            case \"class\":\n              a.classList.add(...value.split(\" \"));\n              break;\n            default:\n              a.setAttribute(\"data-\" + key, value);\n          }\n        });\n        a.lastChild.textContent = label;\n      }\n    }\n    return a;\n  };\n}\n\n// Patch the `fromData` method used by Foundry to allow rolls from builds with a renamed roll class\n// to still be created from JSON for tooltips etc.\n// Introduced in v0.81.1 for Foundry v9.269\n// RollPF2 added with PF1 v11.1 for Foundry v12.331\n{\n  const origFunc = Roll.fromData;\n  Roll.fromData = function (data, ...args) {\n    if ([\"RollPF$1\", \"RollPF2\"].includes(data.class)) data.class = \"RollPF\";\n    return origFunc.call(this, data, ...args);\n  };\n}\n\n/**\n * Patch ImagePopout image share handling function to respect identified status of items\n *\n * Synchronized with Foundry VTT v12.331\n *\n * HACK: This breaks Foundry API by turning it into async function, but since this is a socket handler, that should not matter.\n *\n * @see https://github.com/foundryvtt/foundryvtt/issues/8953\n */\n{\n  const original_handleShareImage = ImagePopout._handleShareImage;\n  ImagePopout._handleShareImage = async function ({ image, title, caption, uuid, showTitle } = {}) {\n    const doc = await fromUuid(uuid);\n    if (doc instanceof Item) {\n      title = doc.name;\n    }\n\n    return original_handleShareImage.call(this, { image, title, caption, uuid, showTitle });\n  };\n}\n\n/**\n * Stop releasing modifiers on HTMLButtonElement. Check again on proper support of popouts. How blur is handled will have to be reevaluated\n *\n * Introduced Foundry VTT v10.291\n * Still needed with v12.331\n */\n{\n  KeyboardManager.prototype._onFocusIn = function (event) {\n    const formElements = [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLOptionElement];\n\n    if (event.target.isContentEditable || formElements.some((cls) => event.target instanceof cls)) {\n      this.releaseKeys();\n    }\n  };\n\n  Object.defineProperty(KeyboardManager.prototype, \"hasFocus\", {\n    get() {\n      // Pulled from https://www.w3schools.com/html/html_form_elements.asp\n      const formElements = [\"input\", \"select\", \"textarea\", \"option\", \"[contenteditable]\"];\n      const selector = formElements.map((el) => `${el}:focus`).join(\", \");\n      return document.querySelectorAll(selector).length > 0;\n    },\n  });\n}\n","const buttons = {\n  spells: { label: \"PF1.BrowseSpells\" },\n  items: { label: \"PF1.BrowseItems\" },\n  bestiary: { label: \"PF1.BrowseBestiary\" },\n  feats: { label: \"PF1.BrowseFeats\" },\n  classes: { label: \"PF1.BrowseClasses\" },\n  races: { label: \"PF1.BrowseRaces\" },\n  buffs: { label: \"PF1.BrowseBuffs\", wide: true },\n};\n\n/**\n * @param {Event} event - Triggering event\n */\nfunction compendiumButtonClick(event) {\n  event.preventDefault();\n  const type = event.target.dataset.category;\n  pf1.applications.compendiums[type]._render(true, { focus: true });\n}\n\n/**\n * Render compendium browser buttons.\n *\n * @param {CompendiumDirectory} app\n * @param {HTMLElement|JQuery} html\n * @param {object} options\n */\nHooks.on(\"renderCompendiumDirectory\", async (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n\n  if (html.querySelector(\"section.pf1.action-buttons\")) return; // Avoid duplicating the buttons\n\n  let element;\n  if (game.release.generation >= 13) {\n    element = document.createElement(\"section\");\n    html.append(element);\n  } else {\n    element = html.querySelector(\"footer.directory-footer\");\n  }\n  element.classList.add(\"pf1\", \"action-buttons\");\n  if (game.release.generation >= 13) element.classList.add(\"v13\");\n\n  for (const [category, info] of Object.entries(buttons)) {\n    const button = document.createElement(\"button\");\n    button.type = \"button\";\n    button.dataset.category = category;\n    button.classList.add(\"compendium\", category);\n    button.innerText = game.i18n.localize(info.label);\n    if (info.wide) button.classList.add(\"colspan-2\");\n    element.append(button);\n    button.addEventListener(\"click\", compendiumButtonClick);\n  }\n});\n\n// Add compendium sidebar context options\nfunction toggleCompendiumVisibility(html, entries) {\n  // Add option to enable & disable pack\n  entries.unshift(\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.HidePack\"),\n      icon: '<i class=\"fa-solid fa-low-vision\"></i>',\n      condition: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled !== true;\n      },\n      callback: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: true } });\n      },\n    },\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.ShowPack\"),\n      icon: '<i class=\"fa-solid fa-eye\"></i>',\n      condition: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled === true;\n      },\n      callback: (li) => {\n        if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: false } });\n      },\n    }\n  );\n}\n\n/**\n * @param {CompendiumDirectory} app\n * @param {HTMLElement} html\n */\nfunction displayCompendiumVisibility(app, html) {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n\n  for (const li of html.querySelectorAll(\"li[data-pack]\")) {\n    const pack = game.packs.get(li.dataset.pack);\n    const hidden = pack.config.pf1?.disabled === true;\n    if (!hidden) continue;\n\n    const el = li.querySelector(\".status-icons\");\n    const hiddenIcon = document.createElement(\"i\");\n    hiddenIcon.classList.add(\"fa-solid\", \"fa-filter-circle-xmark\");\n    hiddenIcon.dataset.tooltip = \"PF1.Hidden\"; // TODO: Add better tooltip\n    hiddenIcon.ariaLabel = game.i18n.localize(\"PF1.Hidden\");\n    el.prepend(hiddenIcon);\n  }\n}\n\nHooks.on(\"getCompendiumDirectoryEntryContext\", toggleCompendiumVisibility); // v12\nHooks.on(\"getCompendiumContextOptions\", toggleCompendiumVisibility); // v13\nHooks.on(\"renderCompendiumDirectory\", displayCompendiumVisibility);\n","const getMessage = (html) => game.messages.get(html.dataset.messageId);\nconst isOwnedSpellCard = (msg) => {\n  const item = msg.itemSource;\n  return item && item.type === \"spell\" && item.isOwner && !!item.actor;\n};\n\n/**\n * @param {ChatLog} app\n * @param {object[]} entries - Context menu entries\n */\nfunction spellCardContextMenu(app, entries) {\n  entries.unshift(\n    {\n      name: \"PF1.Chat.FocusReference\",\n      id: \"pf1-focus-reference\", // made up ID field so modules can recognize this\n      icon: '<i class=\"fa-solid fa-magnifying-glass context-icon pf1 focus-reference\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        return fromUuidSync(getMessage(html)?.system.reference) instanceof ChatMessage;\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        /** @type {ChatMessage} */\n        const msg = fromUuidSync(getMessage(html).system.reference);\n        /** @type {HTMLElement} */\n        const log = html.closest(\".chat-message[data-message-id]\").parentElement;\n        log.querySelector(`.chat-message[data-message-id='${msg.id}']`).scrollIntoView({ block: \"start\" });\n      },\n    },\n    {\n      name: \"PF1.ConcentrationCheck\",\n      id: \"pf1-roll-concentration\",\n      icon: '<i class=\"fa-solid fa-brain context-icon pf1 concentration\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        isOwnedSpellCard(getMessage(html));\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollConcentration(item.system.spellbook, { messageId: msg.id, reference: msg.uuid });\n      },\n    },\n    {\n      name: \"PF1.CasterLevelCheck\",\n      id: \"pf1-roll-caster-level\",\n      icon: '<i class=\"fa-solid fa-wand-magic-sparkles context-icon pf1 caster-level\"></i>',\n      condition: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        return isOwnedSpellCard(getMessage(html));\n      },\n      callback: (html) => {\n        if (html instanceof jQuery) html = html[0]; // v12/v13 cross-compatibility\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollCL(item.system.spellbook, { messageId: msg.id, reference: msg.uuid });\n      },\n    }\n    // TODO: Roll ASF option\n  );\n}\n\nHooks.on(\"getChatLogEntryContext\", spellCardContextMenu); // V12 and prior\nHooks.on(\"getChatMessageContextOptions\", spellCardContextMenu); // V13\n","/**\n * Adjusts a string to a number, allowing relative adjustments.\n *\n * @internal\n * @param {number} initialValue - The initial number to use for relative operations.\n * @param {string} cmdStr - The exact string inputted by the user.\n * @param {number} [maxValue=null] - The maximum allowed value for this variable.\n * @param {number} [clearValue=null] - What to change the variable to if the user simply erased the value.\n * @returns {number} The resulting new value.\n */\nexport const adjustNumberByStringCommand = (initialValue, cmdStr, maxValue = null, clearValue = null) => {\n  let result = initialValue;\n  const re = cmdStr.match(/(?<abs>=)?(?<op>[+-]+)?(?<value>\\d+)/);\n  if (re) {\n    const { op: operator, abs, value: rawValue } = re.groups;\n    const isAbsolute = abs == \"=\" || [\"--\", \"++\"].includes(operator) || (!abs && !operator);\n    const isNegative = [\"-\", \"--\"].includes(operator);\n    let value = parseInt(rawValue);\n    if (isNegative) value = -value;\n    result = isAbsolute ? value : initialValue + value;\n  } else if (cmdStr === \"\" && clearValue !== null) {\n    result = clearValue;\n  } else {\n    result = parseFloat(cmdStr || \"0\");\n  }\n\n  if (Number.isFinite(maxValue)) result = Math.min(result, maxValue);\n\n  if (Number.isNaN(result)) {\n    console.warn(\"Input resulted in NaN\", { initial: initialValue, command: cmdStr });\n    result = initialValue;\n  }\n\n  return result;\n};\n\n/**\n * Determine if buff target or buff target category is valid for the defined actor and item.\n *\n * @internal\n * @param {object} data - Buff target or category data\n * @param {object} options - Additional options\n * @param {Actor} [options.actor] - Actor to test\n * @param {Item} [options.item] - Item to test\n * @returns {{actor:boolean,item:boolean,valid:boolean}} - Validity statement\n */\nexport function isValidChangeTarget(data, { actor, item } = {}) {\n  const { filters } = data;\n  if (!filters) return { actor: true, item: true, valid: true };\n\n  let ar = true;\n  if (filters.actor && actor) {\n    const { include, exclude, fn } = filters.actor;\n    if (exclude && exclude.includes(actor.type)) ar = false;\n    else if (include && !include.includes(actor.type)) ar = false;\n    else if (typeof fn === \"function\") ar = fn(data, { actor, item });\n  }\n\n  let ir = true;\n  if (filters.item && item) {\n    const { include, exclude, fn } = filters.item;\n    if (exclude && exclude.includes(item.type)) ir = false;\n    else if (include && !include.includes(item.type)) ir = false;\n    else if (typeof fn === \"function\") ir = fn(data, { actor, item });\n  }\n\n  return {\n    actor: actor ? ar : undefined,\n    item: item ? ir : undefined,\n    valid: ar && ir,\n  };\n}\n\n/**\n * @typedef {object} BuffTargetItem\n * @property {string} [label] - The buff target's label.\n * @property {string} category - The buff target's category.\n * @property {string} [icon] - The URL to an icon.\n */\n/**\n * Assembles an array of all possible buff targets.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to fetch\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Record<string, BuffTargetItem>} The resulting array of buff targets.\n */\nexport function getBuffTargets(type, { actor, item } = {}) {\n  const buffTargets = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargets,\n      contextNotes: pf1.config.contextNoteTargets,\n    }[type]\n  );\n\n  // Append individual skills to buff targets\n  const allowSkills = isValidChangeTarget(pf1.config.buffTargetCategories.skills, { actor, item }).valid;\n\n  if (actor) {\n    const skillTargets = actor._skillTargets ?? [];\n    for (const s of skillTargets) {\n      const skillId = s.split(\".\").slice(1).join(\".\");\n      if (skillId.startsWith(\"~\")) continue; // Skip secondary targets that affect only the parent skill\n      const skill = actor.getSkillInfo(skillId);\n      buffTargets[s] = { label: skill.fullName, category: \"skill\", valid: allowSkills };\n    }\n  } else {\n    for (const [key, label] of Object.entries(pf1.config.skills)) {\n      buffTargets[`skill.${key}`] = { label, category: \"skill\", valid: allowSkills };\n    }\n  }\n\n  // Append spell targets\n  const allowSpells = isValidChangeTarget(pf1.config.buffTargetCategories.spell, { actor, item }).valid;\n\n  const books = actor?.system.attributes?.spells?.spellbooks ?? {\n    primary: { label: game.i18n.localize(\"PF1.SpellBookPrimary\") },\n    secondary: { label: game.i18n.localize(\"PF1.SpellBookSecondary\") },\n    tertiary: { label: game.i18n.localize(\"PF1.SpellBookTertiary\") },\n    spelllike: { label: game.i18n.localize(\"PF1.SpellBookSpelllike\") },\n  };\n\n  // Get actor specific spell targets\n  const spellTargets = actor?._spellbookTargets ?? [];\n\n  // Add spell school DCs and CLs\n  for (const schoolId of Object.keys(pf1.config.spellSchools)) {\n    spellTargets.push(`dc.school.${schoolId}`, `cl.school.${schoolId}`);\n  }\n\n  for (const s of spellTargets) {\n    const re = /^(?<key>\\w+)(?:\\.(?<category>\\w+))?\\.(?<subKey>\\w+)$/.exec(s);\n    if (!re) continue;\n    const { key, category, subKey } = re.groups;\n\n    let subLabel;\n    if (category === \"school\") subLabel = pf1.config.spellSchools[subKey];\n    else subLabel = books[subKey]?.label || subKey;\n\n    const fullKey = category ? `${key}.${category}` : key;\n    const mainLabel = game.i18n.localize(\n      {\n        \"dc.school\": \"PF1.DC\",\n        concn: \"PF1.Concentration\",\n        \"cl.book\": \"PF1.CasterLevel\",\n        \"cl.school\": \"PF1.CasterLevelAbbr\",\n      }[fullKey]\n    );\n\n    buffTargets[s] = {\n      label: `${mainLabel} (${subLabel})`,\n      category: \"spell\",\n      valid: allowSpells,\n    };\n  }\n\n  return buffTargets;\n}\n\n/**\n * @typedef {object} BuffTargetCategory\n * @property {string} label - The category's label.\n */\n/**\n * Assembles an array of buff targets and their categories, ready to be inserted into a Widget_CategorizedItemPicker.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to retrieve\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Widget_CategorizedItemPicker~Category[]}\n */\nexport function getBuffTargetDictionary(type = \"buffs\", { actor, item } = {}) {\n  const buffTargets = getBuffTargets(type, { actor, item });\n\n  // Assemble initial categories and items\n  const targetCategories = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargetCategories,\n      contextNotes: pf1.config.contextNoteCategories,\n    }[type]\n  );\n\n  const categories = Object.values(\n    Object.entries(buffTargets).reduce((cur, [key, { label, category, icon, ...options }]) => {\n      if (!key.startsWith(\"~\")) {\n        cur[category] ??= {\n          key: category,\n          label: targetCategories[category].label,\n          items: [],\n          validity: isValidChangeTarget(targetCategories[category], { actor, item }),\n        };\n\n        cur[category].items.push({\n          key,\n          label,\n          icon,\n          validity: isValidChangeTarget({ key, label, category, icon, ...options }, { actor, item }),\n        });\n      }\n      return cur;\n    }, {})\n  );\n\n  pf1.utils.naturalSort(categories, \"label\");\n\n  // Return result\n  return categories;\n}\n\n/**\n * A locale-safe insertion sort of an Array of Objects, not in place. Ignores punctuation and capitalization.\n * `name` properties in objects will be lowercased.\n *\n * @internal\n * @template T\n * @param {Array.<T & {name: string}>} inputArr - Array to be sorted. Each element must have a name property set\n * @returns {T[]} - New sorted Array\n */\nexport const sortArrayByName = (inputArr) => {\n  inputArr = foundry.utils.deepClone(inputArr);\n  for (const elem of inputArr) {\n    elem.name = elem.name.toLocaleLowerCase();\n  }\n  return pf1.utils.naturalSort(inputArr, \"name\", { numeric: true, ignorePunctuation: true });\n};\n\n/**\n * Variant of TextEditor._createInlineRoll for creating unrolled inline rolls.\n *\n * Synchronized with Foundry VTT v12.331\n *\n * {@inheritDoc TextEditor._createInlineRoll}\n *\n * @internal\n * @experimental\n * @param {string[]} match - RegExp match\n * @param {object} rollData - Roll data\n * @param {object} _options - Parser options\n */\nexport function createInlineFormula(match, rollData, _options) {\n  let [command, formula, closing, label] = match.slice(1, 5);\n\n  if (command) return TextEditor._createInlineRoll(match, rollData);\n\n  // Handle the possibility of the roll formula ending with a closing bracket\n  if (closing.length === 3) formula += \"]\";\n\n  const rollCls = Roll.defaultImplementation;\n\n  // Extract components of the matched command\n  const resolvedFormula = rollCls.replaceFormulaData(formula.trim() || \"0\", rollData || {});\n\n  let pLabel;\n  if (!label) {\n    /** @type {pf1.dice.RollPF} */\n    const roll = new rollCls(resolvedFormula);\n    if (roll.isDeterministic) {\n      roll.evaluateSync();\n      pLabel = `${roll.total}`;\n    } else {\n      pLabel = pf1.utils.formula.simplify(resolvedFormula);\n    }\n  }\n\n  // Construct the roll element\n  const a = document.createElement(\"a\");\n  a.classList.add(\"inline-preroll\", \"inline-formula\");\n  a.dataset.formula = resolvedFormula;\n  a.dataset.tooltip = formula;\n  a.innerHTML = `<i class=\"fa-solid fa-dice-d20\"></i>${label || pLabel || resolvedFormula}`;\n\n  return a;\n}\n\n/**\n * Recursively transforms an ES module to a regular, writable object.\n *\n * @internal\n * @template T\n * @param {T} module - The ES module to transform.\n * @returns {T} The transformed module.\n */\nexport function moduleToObject(module) {\n  const result = {};\n  for (const key in module) {\n    if (Object.prototype.toString.call(module[key]) === \"[object Module]\") {\n      result[key] = moduleToObject(module[key]);\n    } else {\n      result[key] = module[key];\n    }\n  }\n  return result;\n}\n\n/**\n * Set default scene scaling and default template scaling in scenes.\n *\n * `imperial` sets scaling to 5 ft, `metric` sets scaling to 1.5 m\n *\n * @internal\n * @param {UnitSystem | undefined} [system] System of units. Pull current setting if undefined.\n */\nexport function setDefaultSceneScaling(system) {\n  system ??= pf1.utils.getDistanceSystem();\n\n  let scaling, units;\n  if (system == \"metric\") {\n    units = \"m\";\n    scaling = 1.5;\n  } else {\n    units = \"ft\";\n    scaling = 5;\n  }\n\n  game.system.grid.units = units;\n  game.system.grid.distance = scaling;\n  CONFIG.MeasuredTemplate.defaults.width = scaling;\n}\n\n/**\n * Turns dictionaries with numbered keys into arrays.\n *\n * @internal\n * @param {object} sourceObj The source object which contains the full array in the same path as targetObj.\n * @param {object} targetObj The target object to alter. The array doesn't have to be immediately in this object.\n * @param {string} keepPath A path to the array to keep, separated with dots. e.g. \"system.damageParts\".\n */\nexport function keepUpdateArray(sourceObj, targetObj, keepPath) {\n  const newValue = foundry.utils.getProperty(targetObj, keepPath);\n  if (newValue == null) return;\n  if (Array.isArray(newValue)) return;\n\n  const newArray = foundry.utils.deepClone(foundry.utils.getProperty(sourceObj, keepPath) || []);\n\n  for (const [key, value] of Object.entries(newValue)) {\n    if (foundry.utils.getType(value) === \"Object\") {\n      const subData = foundry.utils.expandObject(value);\n      newArray[key] = foundry.utils.mergeObject(newArray[key], subData);\n    } else {\n      newArray[key] = value;\n    }\n  }\n\n  foundry.utils.setProperty(targetObj, keepPath, newArray);\n}\n\n/**\n * Resolve UUID by fastest means possible\n *\n * This is partial implementation to sidestep fromUuidSync() not supporting items embedded in compendium actors that you have document for.\n *\n * @remarks\n * - Does not support retrieval of other than Item documents\n * - May or may not return an actual document.\n *\n * @internal\n * @param {string} uuid - UUID\n * @param {Actor} [parent] - Parent actor\n * @returns {object|Item}\n */\nexport function fromUuid(uuid, parent) {\n  if (!parent?.pack) return fromUuidSync(uuid, { relative: parent });\n  const result = foundry.utils.parseUuid(uuid, { relative: parent });\n  if (result.embedded.length) {\n    const [type, itemId] = result.embedded;\n    if (type === \"Item\") return parent.items.get(itemId);\n    throw new Error(`Unsupported embedded document type \"${type}\" for UUID: ${uuid}`);\n  }\n  return fromUuidSync(uuid, { relative: parent });\n}\n\n/**\n * Transform UUID into its long form\n *\n * Converts relative UUIDs to full and old format UUIDs to current format.\n *\n * @param {string} uuid - UUID\n * @param {Actor|Item} [parent] - Parent document\n * @returns {string} - Long for UUID\n */\nexport function uniformUuid(uuid, parent) {\n  return foundry.utils.parseUuid(uuid, { relative: parent }).uuid;\n}\n\n/**\n * Return map of template ID to label.\n *\n * @internal\n * @returns {Record<string,string>}\n */\nexport function getTemplateTypes() {\n  if (game.release.generation >= 13)\n    return Object.fromEntries(\n      Object.values(CONST.MEASURED_TEMPLATE_TYPES).map((id) => [id, game.i18n.localize(`TEMPLATE.TYPES.${id}`)])\n    );\n  else return CONFIG.MeasuredTemplate.types;\n}\n","export function initializeSocket() {\n  game.socket.on(\"system.pf1\", runSocketFunction);\n}\n\n/**\n * Handle socket message\n *\n * @param {object} msg - Message data\n * @param {string} senderId - User ID\n */\nasync function runSocketFunction(msg, senderId) {\n  const isFirstGM = game.users.activeGM?.isSelf;\n  const sender = game.users.get(senderId);\n  try {\n    switch (msg.eventType) {\n      case \"currencyTransfer\": {\n        if (!isFirstGM) return;\n        let source = await fromUuid(msg.data.sourceActor);\n        let dest = await fromUuid(msg.data.destActor);\n\n        if (msg.data.sourceContainer) source = source.items.get(msg.data.sourceContainer);\n        if (msg.data.destContainer) dest = dest.items.get(msg.data.destContainer);\n        const amount = msg.data.amount;\n\n        pf1.applications.CurrencyTransfer.transfer(source, dest, amount, msg.data.sourceAlt, msg.data.destAlt, false);\n        break;\n      }\n      case \"alterChatTargetAttribute\":\n        if (isFirstGM) alterChatTargetAttribute(msg);\n        break;\n      case \"giveItem\": {\n        if (!isFirstGM) return;\n        const item = await fromUuid(msg.item);\n        const sourceActor = item.actor;\n        if (!sourceActor.testUserPermission(sender, \"OWNER\")) return;\n        const targetActor = await fromUuid(msg.targetActor);\n        const itemData = item.toObject();\n        const newItem = await Item.implementation.create(itemData, { parent: targetActor });\n        if (newItem) {\n          await sourceActor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n        }\n        break;\n      }\n      case \"refreshActorSheets\":\n        if (sender.hasPermission(CONST.USER_PERMISSIONS.SETTINGS_MODIFY)) {\n          pf1.utils.refreshActors({ renderOnly: true });\n        }\n        break;\n    }\n  } catch (err) {\n    console.log(\"PF1 | Socket Error:\", err);\n  }\n}\n\nexport function alterChatTargetAttribute(args) {\n  const message = game.messages.get(args.message);\n  const contentHTML = $(message.content);\n\n  // Alter saving throw\n  if (args.save != null) {\n    const targetElem = contentHTML.find(\n      `div.attack-targets .target[data-uuid=\"${args.targetUuid}\"] .saving-throws .${args.save}`\n    );\n    const valueElem = targetElem.find(\".value\");\n    valueElem.html(`${args.value}`);\n\n    // Add classes based off extra data\n    if (args.isFailure) valueElem.addClass(\"failure\");\n    else valueElem.removeClass(\"failure\");\n    if (args.isSuccess) valueElem.addClass(\"success\");\n    else valueElem.removeClass(\"success\");\n\n    return message.update({\n      content: contentHTML.prop(\"outerHTML\"),\n    });\n  }\n}\n","export class SemanticVersion {\n  static re = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)?$/\n\n  constructor() {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.preRelease = \"\";\n    this.buildMetaData = \"\";\n  }\n\n  static fromString(str) {\n    if (str.match(this.re)) {\n      const result = new this();\n      result.major = parseInt(RegExp.$1);\n      result.minor = parseInt(RegExp.$2);\n      result.patch = parseInt(RegExp.$3 || 0);\n      result.preRelease = RegExp.$4 || \"\";\n      result.buildMetaData = RegExp.$5 || \"\";\n      return result;\n    }\n    return null;\n  }\n\n  toString() {\n    return `${this.major}.${this.minor}.${this.patch}`;\n  }\n\n  isHigherThan(otherVersion) {\n    if (this.major > otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor > otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch > otherVersion.patch) return true;\n    return false;\n  }\n\n  isLowerThan(otherVersion) {\n    if (this.major < otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor < otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch < otherVersion.patch) return true;\n    return false;\n  }\n\n  isSame(otherVersion) {\n    return this.major == otherVersion.major && this.minor == otherVersion.minor && this.patch == otherVersion.patch;\n  }\n}\n","/**\n * Finds old macro with same name and command that user can execute and see.\n *\n * @param {string} name - Macro name\n * @param {string} command - Macro command\n * @returns {Macro|undefined} - Old macro\n */\nfunction findOldMacro(name, command) {\n  return game.macros.find((m) => m.name === name && m.command === command && m.canExecute && m.visible && m.isAuthor);\n}\n\n/**\n * Various functions dealing with the creation and usage of macros.\n *\n * @module macros\n */\n\n/**\n * Create a Macro from an Item drop, or get an existing one.\n *\n * @param {object} uuid - UUID\n * @param {number} slot The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createItemMacro = async (uuid, slot) => {\n  const item = fromUuidSync(uuid);\n  const command = `fromUuidSync(\"${uuid}\").use();`;\n  let macro = findOldMacro(item.name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: item.name,\n        type: \"script\",\n        img: item.img,\n        command,\n        flags: { \"pf1.itemMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create action use macro from dropped action.\n *\n * @param {string} actionId Action ID\n * @param {string} uuid UUID to parent item\n * @param {number} slot Hotbar slot to assign to\n * @param _slot\n * @returns {Promise<User>} The updated User\n */\nexport const createActionMacro = async (uuid, slot, _slot) => {\n  /** @type {pf1.components.ItemAction} */\n  let action;\n  // @deprecated\n  if (typeof _slot === \"number\") {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.documents.macros.createActionMacro() parameters have changed to (uuid, slot).\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    const item = fromUuidSync(slot);\n    action = item?.actions.get(uuid);\n    uuid = action.uuid;\n    slot = _slot;\n  } else {\n    action = fromUuidSync(uuid);\n  }\n\n  if (!action) return void ui.notifications.error(game.i18n.format(\"PF1.Error.UUIDNotFound\", { uuid }));\n\n  /** @type {ItemPF} */\n  const item = action.parent;\n\n  const command = `fromUuidSync(\"${uuid}\")\\n\\t.use();`;\n\n  const name = `${action.name} (${item.name})`;\n\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: action.img,\n        command,\n        flags: { pf1: { actionMacro: { uuid: action.uuid } } },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from skill data to roll an actor's skill, or get an existing one.\n *\n * @param {string} skillId - The skill's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSkillMacro = async (skillId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const skillInfo = actor.getSkillInfo(skillId);\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSkill(\"${skillId}\");`;\n  const name = game.i18n.format(\"PF1.RollSkillMacroName\", { actor: actor.name, skill: skillInfo.fullName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command,\n        flags: { \"pf1.skillMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from save data to roll an actor's save, or get an existing one.\n *\n * @param {string} saveId - The save's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSaveMacro = async (saveId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const saveName = game.i18n.localize(\"PF1.SavingThrow\" + saveId.capitalize());\n\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSavingThrow(\"${saveId}\");`;\n  const name = game.i18n.format(\"PF1.RollSaveMacroName\", { actor: actor.name, type: saveName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command,\n        flags: { \"pf1.saveMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro to roll one of various checks for an actor\n *\n * @param {string} type The type of macro to create\n * @param {string} uuid The actor's UUID\n * @param {number} slot The hotbar slot to use\n * @param {object} [data] Additional context data\n * @returns {Promise<User|void>} The updated User, if an update is triggered\n */\nexport const createMiscActorMacro = async (type, uuid, slot, data) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const getBookLabel = (bookId) => actor.system.attributes?.spells?.spellbooks?.[bookId]?.label;\n\n  let name,\n    img,\n    command = `fromUuidSync(\"${actor.uuid}\")\\n\\t`;\n  switch (type) {\n    case \"defenses\":\n      command += `.displayDefenseCard();`;\n      name = game.i18n.format(\"PF1.DisplayDefensesMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/items/armor/shield-light-metal.png\";\n      break;\n    case \"cmb\":\n      command += `.rollAttack({maneuver:true});`;\n      name = game.i18n.format(\"PF1.RollCMBMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/feats/improved-grapple.jpg\";\n      break;\n    case \"cl\": {\n      const { bookId } = data;\n      command += `.rollCL(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollCLMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/spells/wind-grasp-eerie-3.jpg\";\n      break;\n    }\n    case \"concentration\": {\n      const { bookId } = data;\n      command += `.rollConcentration(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollConcentrationMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/skills/light_01.jpg\";\n      break;\n    }\n    case \"bab\":\n      command += `.rollBAB();`;\n      name = game.i18n.format(\"PF1.RollBABMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/yellow_08.jpg\";\n      break;\n    case \"initiative\":\n      command += \".rollInitiative({ createCombatants: true });\";\n      name = game.i18n.format(\"PF1.RollInitiativeMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/weapon_41.jpg\";\n      break;\n    case \"attack\": {\n      const { attack } = data;\n      const isMelee = attack === \"melee\";\n      command += `.rollAttack({ ranged: ${isMelee ? \"false\" : \"true\"}});`;\n      name = game.i18n.format(isMelee ? \"PF1.RollMeleeMacroName\" : \"PF1.RollRangedMacroName\", { actor: actor.name });\n      img = isMelee ? \"systems/pf1/icons/skills/weapon_23.jpg\" : \"systems/pf1/icons/skills/arrow_07.jpg\";\n      break;\n    }\n    case \"abilityScore\": {\n      const { ability } = data;\n      command += `.rollAbilityTest(\"${ability}\");`;\n      name = game.i18n.format(\"PF1.RollAbilityMacroName\", {\n        actor: actor.name,\n        ability: pf1.config.abilities[ability],\n      });\n      img = \"systems/pf1/icons/skills/blue_35.jpg\";\n      break;\n    }\n  }\n\n  if (!name) return;\n\n  let macro = findOldMacro(name, command);\n  macro ??= await Macro.create(\n    {\n      name,\n      type: \"script\",\n      img,\n      command,\n      flags: { pf1: { type, actor: uuid } },\n    },\n    { displaySheet: false }\n  );\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n","/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function hideRollInfo(cm, jq) {\n  const whisper = cm.whisper || [];\n  const isBlind = whisper.length && cm.blind;\n  const isVisible = whisper.length ? whisper.includes(game.user.id) || (cm.isAuthor && !isBlind) : true;\n  if (!isVisible) {\n    jq.find(\".dice-formula\").text(\"???\");\n    jq.find(\".dice-total\").text(\"?\");\n    jq.find(\".dice\").text(\"\");\n    jq.find(\".success\").removeClass(\"success\");\n    jq.find(\".failure\").removeClass(\"failure\");\n  }\n}\n\n/**\n * @deprecated\n * @typedef {object} ChatMessagePFIdentifiedInfo\n * @property {boolean} identified - True if item was identified when rolled.\n * @property {string} name - Name of the identified item.\n * @property {string} description - Description of the identified item.\n * @property {string} [actionName] - Name of the action that was used\n * @property {string} [actionDescription] - Description of the action that was used\n */\n\n/**\n * Generates an info block containing an item's identified info for GMs\n *\n * @remarks This HTML has to be generated in a synchronous way, as adding to a rendered chat message's content\n *          will cause erratic scrolling behaviour.\n * @param {ChatMessagePFIdentifiedInfo} info - An object containing the item's identified info\n * @returns {string} HTML string containing the info block\n */\nfunction getIdentifiedBlock(info) {\n  const hasUniqueActionName = info.action?.name && info.item.name !== info.action?.name;\n  return renderTemplate(\"systems/pf1/templates/chat/parts/gm-description.hbs\", { ...info, hasUniqueActionName });\n}\n\nexport async function addExtraGMInfo(cm, html) {\n  if (!game.user.isGM) return;\n\n  if (![\"item\", \"action\"].includes(cm.type)) return;\n\n  // Show identified info box for GM if item was unidentified when rolled\n  const metadata = cm.system;\n  const { identified, id: itemId } = metadata.item;\n\n  if (identified === false && itemId) {\n    const cardContent = html.querySelector(\".card-content\");\n    if (!cardContent) return;\n    cardContent.insertAdjacentHTML(\"beforeEnd\", await getIdentifiedBlock(metadata));\n  }\n}\n\n/**\n * Add GM-sensitive info for GMs and hide GM-sensitive info for players\n *\n * @param {ChatMessagePF} cm - Chat message\n * @param {HTMLElement} html - Chat message content\n */\nexport function hideGMSensitiveInfo(cm, html) {\n  // Handle adding of GM-sensitive info. No other processing for GM\n  if (game.user.isGM) return addExtraGMInfo(cm, html);\n\n  // Hide info about unowned tokens\n  for (const elem of html.querySelectorAll(\"[data-gm-sensitive-uuid]\")) {\n    // Quickly hide element\n    elem.classList.add(\"hidden\");\n\n    // Then check for stuff\n    const uuid = elem.dataset.gmSensitiveUuid;\n    if (!uuid) continue;\n\n    let obj = fromUuidSync(uuid);\n    // If token or token document, get actor for testing user permissions\n    // TODO: This should no longer be necessary with Foundry v11, unlinked actors give actor directly.\n    if (obj instanceof Token || obj instanceof TokenDocument) obj = obj.actor;\n\n    //  Show element again, since we have permission\n    if (obj?.testUserPermission && obj.testUserPermission(game.user, \"OBSERVER\")) {\n      elem.classList.remove(\"hidden\");\n    }\n    // Remove element completely, since we don't have permission\n    else {\n      elem.remove();\n    }\n  }\n\n  const showDCs = !game.settings.get(\"pf1\", \"obscureSaveDCs\");\n  if (!showDCs) for (const elem of html.querySelectorAll(\".difficulty-class .threshold.sensitive\")) elem.remove();\n\n  // Message author, regardless of actor ownership, sees the rest\n  if (cm.isAuthor) return;\n\n  const actor = ChatMessage.getSpeakerActor(cm.speaker);\n  // Exit if allowed to see, followup is for hiding info\n  if (actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n  // Hide text enricher DCs\n  for (const elem of html.querySelectorAll(\".pf1-link[data-dc][data-sensitive-label]\")) {\n    for (const node of elem.childNodes) if (node.nodeName === \"#text\") node.remove();\n    if (elem.children.length) elem.append(\" \");\n    elem.append(elem.dataset.sensitiveLabel);\n    delete elem.dataset.sensitiveLabel;\n  }\n\n  // Hide info\n  for (const elem of html.querySelectorAll(\".gm-sensitive\")) elem.remove();\n\n  // Alter GM inner texts\n  for (const elem of html.querySelectorAll(\"[data-gm-sensitive-inner]\")) {\n    if (showDCs && elem.dataset.action === \"save\") continue;\n\n    elem.textContent = elem.dataset.gmSensitiveInner;\n    delete elem.dataset[\"gm-sensitive-inner\"];\n  }\n\n  if (game.settings.get(\"pf1\", \"obscureInlineRolls\")) {\n    // Turn rolls into raw strings\n    /** @type {HTMLElement[]} */\n    const inlineEls = html.querySelectorAll(\".inline-roll\");\n    for (const elem of inlineEls) {\n      if (!elem.dataset.roll) continue;\n\n      let roll;\n      try {\n        roll = Roll.fromJSON(unescape(elem.dataset.roll));\n      } catch (err) {\n        console.error(`Inline roll in chat message ${cm.id} had invalid data`, err);\n        continue;\n      }\n\n      const nroll = Roll.defaultImplementation.safeRollSync(`${roll.total}`);\n      elem.dataset.roll = escape(JSON.stringify(nroll));\n      delete elem.dataset.tooltip;\n      elem.classList.add(\"obfuscated\");\n    }\n\n    /** @type {HTMLElement[]} */\n    const results = html.querySelectorAll(\".dice-roll .dice-result\");\n    for (const result of results) {\n      // Hide natural roll and bonus, leaving only total\n      /** @type {HTMLElement[]} */\n      const rollEls = result.querySelectorAll(\".roll-total\");\n      for (const elem of rollEls) {\n        elem.replaceChildren(\n          ...[...elem.children].filter((el) => el.classList.contains(\"total\") || el.tagName === \"I\")\n        );\n        elem.classList.add(\"obfuscated\");\n        elem.classList.remove(\"has-details\");\n        delete elem.dataset.tooltip;\n      }\n\n      /** @type {HTMLElement[]} */\n      const detailEls = result.querySelectorAll(\".dice-tooltip\");\n      for (const elem of detailEls) {\n        elem.remove();\n      }\n    }\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterAmmoRecovery(cm, jq) {\n  const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n  if (!recoveryData) return;\n\n  jq.find(\".chat-attack .ammo[data-ammo-id]\").each((a, el) => {\n    const attackIndex = el.closest(\".chat-attack\").dataset.index;\n    const ammoId = el.dataset.ammoId;\n    const data = recoveryData[attackIndex]?.[ammoId];\n    if (!data) return;\n    const { recovered } = data;\n    $(el)\n      .find(\".inline-action\")\n      .each((i, ia) => {\n        // TODO: Disable button & track proper quantities\n        // TODO: Mark partial recovery\n        if (recovered === undefined) return;\n        else if (recovered > 0) ia.classList.add(\"recovered\");\n        else ia.classList.add(\"recovery-failed\");\n      });\n  });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterTargetDefense(cm, jq) {\n  const defenseData = cm.getFlag(\"pf1\", \"targetDefense\");\n  if (!defenseData) return;\n\n  const html = jq[0];\n\n  for (const targetEl of html.querySelectorAll(\".attack-targets .target[data-uuid]\")) {\n    const uuid = targetEl.dataset.uuid;\n    const targetDefense = foundry.utils.getProperty(defenseData, uuid)?.save;\n    if (!targetDefense) continue;\n\n    // data-saving-throw is obsolete\n    for (const saveEl of targetEl.querySelectorAll(\"[data-save],[data-saving-throw]\")) {\n      const save = saveEl.dataset.save || saveEl.dataset.savingThrow;\n      const value = targetDefense[save];\n      if (Number.isFinite(value)) {\n        saveEl.querySelector(\".value\").textContent = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {HTMLElement} html - HTML element\n * @param {boolean} recursive - Is this recursive call?\n */\nexport function hideInvisibleTargets(cm, html, recursive = false) {\n  const targetsElem = html.querySelector(\".pf1.chat-card .attack-targets\");\n  if (!targetsElem) return; // No targets\n\n  // Delay until canvas ready if it's not yet so.\n  if (!canvas.ready) {\n    if (recursive) return;\n    targetsElem.classList.add(\"hidden\");\n    if (!game.settings.get(\"core\", \"noCanvas\")) {\n      Hooks.once(\"canvasReady\", () => hideInvisibleTargets(cm, html, true));\n    } else {\n      // Canvas disabled, remove targets\n      targetsElem.remove();\n    }\n    return;\n  }\n\n  const targetElems = targetsElem.querySelectorAll(\".target\");\n  const targets = Array.from(targetElems).map((elem) => ({ uuid: elem.dataset.uuid, elem }));\n\n  let hasVisible = false;\n  for (const t of targets) {\n    /** @type {TokenDocumentPF} */\n    const token = fromUuidSync(t.uuid);\n    if (!token) continue;\n    t.token = token.object;\n\n    const isVisible = t.token?.isVisible;\n    const isObserver = token.actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER) ?? false;\n\n    // Hide if token invisible and user isn't observer of token\n    if ((!isVisible && !isObserver) || token.isSecret) t.elem.remove();\n    else hasVisible = true;\n  }\n\n  // Hide targets if there's none visible to not reveal presence of invisible targets\n  if (!hasVisible) targetsElem.remove();\n  else targetsElem.classList.remove(\"hidden\");\n}\n\nconst getTokenByUuid = (uuid) => fromUuidSync(uuid)?.object;\n\n/**\n * Pan to defined token\n *\n * Provided here to allow overriding the behaviour.\n *\n * @internal\n * @param {Token} token - Token to pan to\n * @param {number} [duration=250] - Animation duration\n */\nexport function panToToken(token, duration = 250) {\n  canvas.animatePan({ ...token.center, duration });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function addTargetCallbacks(cm, jq) {\n  const targetElems = jq[0].querySelectorAll(\".attack-targets .target[data-uuid]\");\n\n  const _mouseEnterCallback = (event, uuid) => getTokenByUuid(uuid)?._onHoverIn(event, { hoverOutOthers: false });\n\n  const _mouseLeaveCallback = (event, uuid) => getTokenByUuid(uuid)?._onHoverOut(event);\n\n  const _imageClickCallback = (event, uuid) => {\n    event.preventDefault();\n\n    const token = getTokenByUuid(uuid);\n    if (!token?.actor.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n    const toggle = event.shiftKey;\n\n    if (!toggle || (!token.controlled && toggle)) pf1.utils.chat.panToToken(token);\n\n    if (token.actor.isOwner) {\n      if (token.controlled) {\n        if (toggle) token.release();\n      } else {\n        token.control({ releaseOthers: !toggle });\n      }\n    }\n  };\n\n  // Add callbacks\n  for (let elem of targetElems) {\n    const uuid = elem.dataset.uuid;\n    const t = fromUuidSync(uuid);\n    if (!t) continue;\n\n    // Image element events\n    const imgElem = elem.querySelector(\".target-image\");\n    imgElem.addEventListener(\"pointerenter\", (ev) => _mouseEnterCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"pointerleave\", (ev) => _mouseLeaveCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"click\", (ev) => _imageClickCallback(ev, uuid));\n\n    // Misc element events\n    elem = $(elem);\n    elem.find(\".ac\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetACClick(cm, jq, t.actor, event);\n    });\n\n    elem.find(\".saving-throws .click\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetSavingThrowClick(cm, jq, t, t.actor, event);\n    });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} _event - Triggering event\n */\nexport async function targetACClick(cm, jq, actor, _event) {\n  try {\n    await actor.displayDefenseCard({ rollMode: \"selfroll\" });\n  } catch (err) {\n    ui.notifications.error(\"PF1.Error.NoDefenseCard\", { localize: true, console: false });\n    throw new Error(\"Could not display defense card\", { cause: err });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Token} token - Target token\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetSavingThrowClick(cm, jq, token, actor, event) {\n  const elem = event.currentTarget;\n  const save = elem.dataset.save || elem.dataset.savingThrow;\n  const dc = cm.system.save?.dc;\n\n  actor.rollSavingThrow(save, { event, dc, reference: cm.uuid });\n}\n\n/* Card Listeners */\n\n/**\n * @internal\n * @param {ChatMessagePF} cm\n * @param {HTMLElement} html\n */\nexport function addListeners(cm, html) {\n  // Header click to expand description\n  html.querySelector(\".item-name\")?.addEventListener(\"click\", (event) => pf1.utils.chat.onToggleDescription(cm, event));\n\n  for (const elem of html.querySelectorAll(\"button[data-action], a[data-action]\")) {\n    elem.addEventListener(\"click\", (event) => pf1.utils.chat.onButton(cm, event));\n  }\n}\n\n/**\n * Handle toggling the visibility of chat card content when the name is clicked\n *\n * @internal\n * @param {ChatMessagePF} cm - Chat message\n * @param {Event} event - Triggering event\n */\nexport function onToggleDescription(cm, event) {\n  event.preventDefault();\n\n  /** @type {HTMLElement} */\n  const content = event.currentTarget.closest(\".message-content\");\n  const desc = content.querySelector(\".card-content\");\n  cm._collapsedDescription = desc.classList.toggle(\"hidden\");\n\n  // Update chat popout size\n  const popout = content.closest(\".chat-popout\");\n  ui.windows[popout?.dataset.appid]?.setPosition();\n}\n\n/**\n * Handle `<a data-action>` buttons.\n *\n * @internal\n * @param {ChatMessagePF} cm\n * @param {Event} event - Button event\n */\nexport async function onButton(cm, event) {\n  event.preventDefault();\n\n  // Extract card data\n  const button = event.currentTarget;\n  const buttonActionId = button.dataset.action;\n\n  const getLinkedItem = () => {\n    const item = cm.itemSource;\n    if (!item) throw new Error(\"Associated item not found\");\n    return item;\n  };\n\n  switch (buttonActionId) {\n    case \"applyDamage\": {\n      let asNonlethal;\n      if (cm.system.config?.nonlethal) asNonlethal = true;\n\n      const value = parseInt(button.dataset.value);\n      if (isNaN(value)) return void console.warn(\"Invalid damage value:\", value, { button });\n\n      const attackIndex = parseInt(button.closest(\"[data-index]\")?.dataset.index);\n      const attackType = button.dataset.type;\n\n      const attack = cm.systemRolls?.attacks?.[attackIndex];\n      const isCritical = attackType === \"critical\";\n\n      const instances = [];\n      const addInstances = (damageRolls) => {\n        if (!damageRolls) return;\n        for (const dmg of damageRolls) {\n          const d = new pf1.models.action.DamagePartModel(dmg.damageType.toObject());\n          d.value = dmg.total;\n          instances.push(d);\n        }\n      };\n\n      if (attack) {\n        addInstances(attack.damage);\n        if (isCritical) addInstances(attack.critDamage);\n      }\n\n      const item = cm.itemSource;\n      const action = cm.actionSource;\n\n      /** @type {ApplyDamageOptions} */\n      const applyDamageOptions = {\n        asNonlethal,\n        event,\n        element: button,\n        message: cm,\n        item,\n        action,\n        attackIndex,\n        reference: cm.uuid,\n        isCritical,\n        critMult: isCritical ? (cm.system.config.critMult ?? 0) : 0,\n        instances,\n        interactive: true,\n      };\n\n      pf1.documents.actor.ActorPF.applyDamage(value, applyDamageOptions);\n      button.disabled = false;\n      break;\n    }\n    // Recover ammunition\n    case \"recoverAmmo\":\n    case \"forceRecoverAmmo\": {\n      const item = cm.itemSource;\n      if (!item?.isOwner) return;\n\n      // Check for recovery state\n      const attackIndex = button.closest(\".chat-attack\").dataset.index;\n      if (!attackIndex) throw new Error(\"Attack index not found\");\n\n      // Find ammo item\n      const ammoId = button.dataset.ammoId || button.closest(\".ammo\")?.dataset.ammoId;\n      const ammoItem = item.actor.items.get(ammoId);\n      if (!ammoItem) return void ui.notifications.error(game.i18n.format(\"PF1.Error.ItemNotFound\", { id: ammoId }));\n      if (ammoItem.getFlag(\"pf1\", \"abundant\")) return; // Abundant is unrecoverable\n\n      const ammoQuantity = button.dataset.ammoQuantity || button.closest(\".ammo\")?.dataset.ammoQuantity || 1;\n      if (ammoQuantity == 0) return; // Zero ammo used\n      const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n      const ammoRecovery = recoveryData?.[attackIndex]?.[ammoId];\n      // Backwards compatibility (PF1 v10) with old messages\n      if (ammoRecovery?.failed === true) return;\n      // Recovered is the number recovered, the rest failed\n      if (ammoRecovery?.recovered !== undefined) return;\n\n      let chance = 100; // Force recover\n      if (buttonActionId === \"recoverAmmo\") {\n        chance = ammoItem.system.recoverChance ?? 50;\n      }\n\n      // (Try to) recover ammo\n      let recovered = 0;\n      if (chance > 0) {\n        for (let i = 0; i < ammoQuantity; i++) {\n          const rngResult = Math.random() * 100;\n          if (rngResult <= chance) {\n            recovered += 1;\n          }\n        }\n      }\n\n      const promises = [];\n\n      // Update ammo if any were recovered\n      if (recovered > 0) promises.push(ammoItem.addCharges(recovered));\n\n      // Update chat card\n      promises.push(cm.setFlag(\"pf1\", \"ammoRecovery\", { [attackIndex]: { [ammoId]: { recovered } } }));\n\n      await Promise.all(promises);\n\n      ui.notifications.info(game.i18n.format(\"PF1.RecoveredAmmo\", { count: recovered }));\n\n      return true;\n    }\n    case \"save\": {\n      // .dataset.type is deprecated\n      const saveId = button.dataset.save || button.dataset.type;\n      const as = button.dataset.as;\n      const dc = cm.system.save?.dc ?? (button.dataset.dc ? parseInt(button.dataset.dc) : undefined);\n\n      /** @type {ActorPF[]} */\n      let actors;\n      // Defense cards want only speaker\n      if (as === \"speaker\") actors = [ChatMessage.getSpeakerActor(cm.speaker)];\n      // Otherwise use controlled or configured actor\n      else {\n        actors = canvas.tokens.controlled.map((t) => t.actor);\n        if (actors.length == 0 && game.user.character) actors = [game.user.character];\n      }\n      actors = actors.filter((t) => !!t);\n\n      if (!actors.length) return void ui.notifications.warn(\"PF1.Warning.NoActorSelected\", { localize: true });\n\n      let noSound = false,\n        errored = false;\n      for (const actor of actors) {\n        actor?.rollSavingThrow(saveId, { event, noSound, dc, reference: cm.uuid }).catch((err) => {\n          if (!errored) {\n            ui.notifications.error(\"PF1.Error.NoSave\", { localize: true, console: false });\n            errored = true;\n          }\n          throw new Error(\"Failed to roll saving throw\", { cause: err });\n        });\n        // TODO: Update card targets if they exist\n        noSound = true;\n      }\n      break;\n    }\n    case \"concentration\": {\n      const item = getLinkedItem();\n      // TODO: Apply bonuses on card if any\n      item.actor.rollConcentration(item.system.spellbook, {\n        item,\n        reference: cm.uuid,\n        dc: item.getConcentrationDC(\"defensive\"),\n      });\n      break;\n    }\n    case \"caster-level-check\": {\n      const item = getLinkedItem();\n      // TODO: Apply bonuses on card (e.g. CL increase in dialog, conditional modifiers, etc.)\n      item.actor.rollCL(item.system.spellbook, { item, reference: cm.uuid });\n      break;\n    }\n    // Show journal entry\n    case \"journal\":\n    case \"open-compendium-entry\": {\n      // .dataset.compendiumEntry is deprecated\n      const uuid = button.dataset.uuid || button.dataset.compendiumEntry;\n      // .dataset.type is defined sometimes, but we only use journals\n      pf1.utils.openJournal(uuid);\n      break;\n    }\n  }\n}\n","/**\n * Base actor class with minimal functionality.\n *\n * Provides only caching of .itemTypes and nothing else.\n */\nexport class ActorBasePF extends Actor {\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.actors}\n   *\n   * @internal\n   * @override\n   * @param {object} [actorData] - Actor data to guide creation if any\n   * @returns {object} - Resulting data alterations\n   */\n  static getDefaultArtwork(actorData) {\n    const result = super.getDefaultArtwork(actorData);\n    const image = pf1.config.defaultIcons.actors[actorData?.type];\n    if (image) {\n      result.img = image;\n      result.texture.src = image;\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  reset() {\n    // Reset item types cache\n    this._itemTypes = null;\n    // Reset roll data cache if it exists.\n    this._rollData = null;\n\n    this._initialized = false; // For preventing items initializing certain data too early\n\n    super.reset();\n  }\n\n  /** @override */\n  _initialize(options) {\n    super._initialize(options);\n    this._initialized = true;\n  }\n\n  /**\n   * Get item by its identifier tag.\n   *\n   * @param {string} tag - Desired tag.\n   * @returns {Item|undefined} - Matching item or undefined if no item is found.\n   */\n  getItemByTag(tag) {\n    return this.items.find((o) => o.system.tag === tag);\n  }\n\n  /**\n   * Cached result of .itemTypes\n   *\n   * @internal\n   * @type {ItemTypesMap}\n   */\n  _itemTypes;\n\n  /**\n   * Cached override\n   *\n   * @override\n   * @type {ItemTypesMap}\n   */\n  get itemTypes() {\n    // Return cache\n    if (this._itemTypes) return this._itemTypes;\n\n    // Generate new copy (or fetch Foundry cached copy in v13+)\n    this._itemTypes = super.itemTypes;\n\n    // HACK: Avoids errors in v13 due to Foundry having its own cache\n    if (this._itemTypes.base.getName) return this._itemTypes;\n\n    // Enrich the arrays with getName() and getId()\n    for (const items of Object.values(this._itemTypes)) {\n      Object.defineProperties(items, {\n        getName: {\n          value: function (name) {\n            return this.find((i) => i.name === name);\n          },\n        },\n        getId: {\n          value: function (identifier) {\n            return this.find((i) => i.system.tag === identifier);\n          },\n        },\n      });\n    }\n\n    return this._itemTypes;\n  }\n\n  /**\n   * Returns first active owner, favoring players and GM as fallback.\n   *\n   * @type {User|null}\n   */\n  get activeOwner() {\n    const firstOwner =\n      game.users\n        .filter((u) => u.active && !u.isGM)\n        .filter((u) => this.testUserPermission(u, \"OWNER\"))\n        .sort((a, b) => (a.id > b.id ? 1 : -1))[0] ?? null;\n\n    return firstOwner ?? game.users.activeGM;\n  }\n\n  /**\n   * Get related combatants.\n   *\n   * @param {Combat} [combat=game.combat] Combat instance\n   * @returns {Combatant[]} Related combatants.\n   */\n  getCombatants(combat = game.combat) {\n    return combat?.combatants.filter((c) => c.actor === this) ?? [];\n  }\n\n  /**\n   * Whether current user can see through this actor.\n   *\n   * @type {boolean}\n   */\n  get sharesVision() {\n    const visionFlag = this.getFlag(\"pf1\", \"visionSharing\");\n    if (!visionFlag) return false;\n\n    return visionFlag.users?.[game.user.id] ?? visionFlag.default ?? false;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 where visibility of AE no longer controls if it's temporary.\n   *\n   * @internal\n   * @returns {ActiveEffectPF[]}\n   */\n  get _effectsWithDuration() {\n    const effects = [];\n    for (const effect of this.allApplicableEffects()) {\n      if (effect.active && effect._hasDuration) effects.push(effect);\n    }\n    return effects;\n  }\n\n  /**\n   * Override to support toggling buffs and operating the system's condition tracks\n   *\n   * Called by {@link pf1.canvas.TokenHUDPF TokenHUD}\n   *\n   * @todo Add separate listener for buffs\n   * @override\n   * @param {string} statusId - Status/condition ID\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.active] - Force active state\n   * @param {boolean} [options.overlay=false] - Overlay effect\n   * @param {boolean} [options.interaction=true] - Nonstandard. Is this triggered by user interaction?\n   * @returns {Promise<ActiveEffect|boolean|undefined>}\n   *\n   * Synced with Foundry v12.331 & v13.342\n   */\n  async toggleStatusEffect(statusId, { active, overlay = false, interaction } = {}) {\n    // Copy of Foundry identification of static ID\n    const status = CONFIG.statusEffects.find((e) => e.id === statusId);\n    if (status?._id) return super.toggleStatusEffect(statusId, { active, overlay });\n\n    // Support toggling buffs via token HUD\n    const [_, buffId] = statusId?.split(\"buff-\") ?? [];\n    if (buffId) {\n      const buff = this.items.get(buffId);\n      if (!buff) throw new Error(`Buff not found to toggle: ${buffId}`);\n      const isActive = buff.activeState;\n      const state = active ?? !isActive;\n      if (state === isActive) return;\n\n      await buff.setActive(state);\n      // Slight deviation from API, we do not return created AE here (we don't know if one was created or re-used).\n      return state;\n    }\n\n    // TODO: Check if this is primary condition, deny modification if not\n\n    // TODO: When disabling, consider if the condition is granted by something else and thus don't touch it here?\n    const condition = pf1.registry.conditions.get(statusId);\n    // TODO: Move condition handling API from ActorPF to ActorBasePF\n    if (condition && this.setCondition) {\n      let aeData = active;\n      const isActive = this.statuses.has(statusId); // Get current state\n      if (overlay && !isActive) aeData = { flags: { core: { overlay: true } } };\n      if (aeData !== undefined) return this.setCondition(statusId, aeData);\n      return this.toggleCondition(statusId);\n    }\n\n    return super.toggleStatusEffect(statusId, { active, overlay });\n  }\n\n  /**\n   * Condition immunities\n   *\n   * @internal\n   * @returns {Set<string>} - Set of immunity IDs.\n   */\n  getConditionImmunities() {\n    const ci = this.system.traits?.ci?.total ?? [];\n    const list = new Set([...ci]);\n\n    // Map immunities to actual conditions\n    // TODO: Unify the IDs where possible\n    const condToImmMap = {\n      confuse: [\"confused\"],\n      daze: [\"dazed\"],\n      dazzle: [\"dazzled\"],\n      fatigue: [\"fatigued\"],\n      fear: pf1.registry.conditions.conditionsInTrack(\"fear\"),\n      sicken: [\"sickened\"],\n      paralyze: [\"paralyzed\"],\n      petrify: [\"petrified\"],\n      stun: [\"stunned\"],\n    };\n    for (const [key, conditions] of Object.entries(condToImmMap)) {\n      if (list.has(key)) {\n        for (const cond of conditions) list.add(cond);\n      }\n    }\n\n    return list;\n  }\n\n  /**\n   * Per-actor type initiative options\n   *\n   * @abstract\n   * @returns {object} - Options object\n   */\n  getInitiativeOptions() {\n    // TODO: Pull these from system model if possible\n    return {};\n  }\n\n  /**\n   * @abstract\n   */\n  expireActiveEffects() {}\n\n  /**\n   * Movement details for current movement\n   *\n   * @abstract\n   * @param {MovementType} type\n   * @returns {MovementInfo|undefined}\n   */\n\n  getMovement(type) {\n    return this.system.getMovement?.(type);\n  }\n}\n\n/**\n * All items sorted by type.\n *\n * Also includes any module introduced types.\n *\n * @typedef ItemTypesMap\n * @property {ItemAttackPF[]} attack - Attacks\n * @property {ItemBuffPF[]} buff - Buffs\n * @property {ItemClassPF[]} class - Classes\n * @property {ItemConsumablePF[]} consumable - Consumables\n * @property {ItemContainerPF[]} container - Containers\n * @property {ItemEquipmentPF[]} equipment - Equipment\n * @property {ItemImplantPF[]} implant - Implants\n * @property {ItemFeatPF[]} feat - Features\n * @property {ItemLootPF[]} loot - Loot\n * @property {ItemRacePF[]} race - Race\n * @property {ItemSpellPF[]} spell - Spells\n * @property {ItemWeaponPF[]} weapon - Weapons\n */\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\nconst actorHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Actor.documentClasses[type] ?? ActorBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ActorPFProxy = new Proxy(ActorBasePF, actorHandler);\n","/**\n * Base item\n *\n * From which all other item documents inherit from.\n */\nexport class ItemBasePF extends Item {\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.items}\n   *\n   * @internal\n   * @override\n   * @param {object} [itemData] - Item data\n   * @returns {{img:string}} - Default image\n   */\n  static getDefaultArtwork(itemData) {\n    const result = super.getDefaultArtwork(itemData);\n    const image = pf1.config.defaultIcons.items[itemData?.type];\n    if (image) result.img = image;\n    return result;\n  }\n\n  /**\n   * Item create dialog.\n   *\n   * @override\n   * @param {object} data Initial form data\n   * @param {object} [context] Additional options.\n   * @param {Actor|null} [context.parent=null] Parent parameter passed to Item.create() options\n   * @param {string|null} [context.pack=null] Pack ID parameter passed to Item.create() options\n   * @param {Array<string>} [context.types] Item types to limit creation choices to.\n   * @param {object} [context.options] Dialog context options.\n   * @returns {Promise<Item|null>}\n   *\n   * Synchronized with Foundry VTT v12.331\n   */\n  static async createDialog(\n    data = {},\n    createOptions = {},\n    { folders, types, template, context, renderOptions, ...dialogOptions } = {}\n  ) {\n    // Copy of Foundry's deprecation code\n    const applicationOptions = {\n      top: \"position\",\n      left: \"position\",\n      width: \"position\",\n      height: \"position\",\n      scale: \"position\",\n      zIndex: \"position\",\n      title: \"window\",\n      id: \"\",\n      classes: \"\",\n      jQuery: \"\",\n    };\n\n    for (const [k, v] of Object.entries(createOptions)) {\n      if (k in applicationOptions) {\n        if (game.release.generation >= 13) {\n          foundry.utils.logCompatibilityWarning(\n            \"The ClientDocument.createDialog signature has changed. \" +\n              \"It now accepts database operation options in its second parameter, \" +\n              \"and options for DialogV2.prompt in its third parameter.\",\n            { since: 13, until: 15, once: true }\n          );\n        }\n        const dialogOption = applicationOptions[k];\n        if (dialogOption) foundry.utils.setProperty(dialogOptions, `${dialogOption}.${k}`, v);\n        else dialogOptions[k] = v;\n        delete createOptions[k];\n      }\n    }\n\n    // Build new options\n    template ??= \"systems/pf1/templates/widgets/item-create.hbs\"; // Not actually used yet\n\n    dialogOptions = {\n      creationData: data,\n      folders,\n      context, // Not used yet\n      types,\n      template,\n      ...dialogOptions,\n      createOptions,\n    };\n\n    return pf1.applications.item.CreateDialog.waitPrompt(dialogOptions, renderOptions);\n  }\n\n  /**\n   * Override to provide naming by subType potential.\n   *\n   * @override\n   * @param {object} context - Context where the name would be used\n   * @param {string} [context.type] - Type\n   * @param {string} [context.subType] - Document subtype. Nonstandard option.\n   * @param {Document|null} [context.parent] - Parent document\n   * @param {string|null} [context.pack] - Pack this would be within\n   * @returns {string}\n   * Synced with Foundry v12.331\n   */\n  static defaultName({ type, subType, parent, pack } = {}) {\n    const documentName = this.metadata.name;\n    let collection;\n    if (parent) collection = parent.getEmbeddedCollection(documentName);\n    else if (pack) collection = game.packs.get(pack);\n    else collection = game.collections.get(documentName);\n    const takenNames = new Set();\n    for (const document of collection) takenNames.add(document.name);\n    let baseNameKey = this.metadata.label;\n    if (type && this.hasTypeData) {\n      let typeNameKey;\n      if (subType && CONFIG.Item.documentClasses[type]?.system?.subtypeName) {\n        const key = `PF1.Subtypes.Item.${type}.${subType}.Single`;\n        if (game.i18n.has(key)) typeNameKey = key;\n      }\n      typeNameKey ||= CONFIG[documentName].typeLabels?.[type];\n      if (typeNameKey && game.i18n.has(typeNameKey)) baseNameKey = typeNameKey;\n    }\n    const baseName = game.i18n.localize(baseNameKey);\n    let name = baseName;\n    let index = 1;\n    while (takenNames.has(name)) name = `${baseName} (${++index})`;\n    return name;\n  }\n\n  /**\n   * On-Create Operation\n   *\n   * Post-create processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onCreateOperation(documents, operation, user) {\n    await super._onCreateOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    // Create spellbook if the class has spellcasting defined\n    const promises = [];\n\n    for (const item of documents) {\n      // Creation data\n      const data = operation.data.find((i) => i._id === item.id);\n      if (!data) continue; // Shouldn't happen\n\n      // Class added\n      switch (item.type) {\n        case \"class\": {\n          // Has casting\n          if (item.system.casting?.type) {\n            // Create spellbook entry\n            const bookData = { ...item.system.casting, class: item.system.tag };\n            const p = actor.createSpellbook(bookData);\n            promises.push(p);\n          }\n\n          // Adjust associations if any exist\n          const level = item.system.level ?? 0;\n          if (level > 0) {\n            const p = item._onLevelChange(0, level, { event: \"create\" });\n            promises.push(p);\n          }\n          break;\n        }\n        case \"buff\": {\n          if (item.isActive) {\n            const p = item._updateTrackingEffect(data);\n            promises.push(p);\n          }\n          break;\n        }\n        case \"race\": {\n          // Update owning actor speed to match racial speed.\n          // TODO: Make this derived data on the actor instead, eliminating the update.\n          if (item.system.speeds) {\n            const speedUpdates = {};\n            for (const key of pf1.const.movementKeys) {\n              speedUpdates[key] = { base: item.system.speeds[key] ?? null };\n            }\n            if (speedUpdates.fly) {\n              speedUpdates.fly.maneuverability = item.system.speeds.flyManeuverability || \"average\";\n            }\n            const p = actor.update({ \"system.attributes.speed\": speedUpdates });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    // Supplements\n    if (operation._pf1NoSupplements !== true) {\n      const p = this._createSupplements(documents, actor);\n      promises.push(p);\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * On-Update Operation\n   *\n   * Post-update processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onUpdateOperation(documents, operation, user) {\n    await super._onUpdateOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    const promises = [];\n\n    for (const item of documents) {\n      const changed = operation.updates.find((i) => i._id === item.id);\n      if (!changed) continue; // Shouldn't happen\n\n      switch (item.type) {\n        case \"class\": {\n          // Update class associations if level changed\n          const oldLevel = operation.pf1?.item?.[item.id]?.oldLevel ?? 0;\n          const newLevel = changed.system?.level ?? 0;\n          if (newLevel !== oldLevel) {\n            const p = item._onLevelChange(oldLevel, newLevel, { event: \"update\" });\n            promises.push(p);\n          }\n          break;\n        }\n        case \"buff\": {\n          const p = item._updateTrackingEffect(changed);\n          promises.push(p);\n          break;\n        }\n        case \"race\": {\n          // Change actor size if the old size is same as old race size.\n          if (operation._pf1SizeChanged) {\n            const p = actor.update({ \"system.traits.size\": item.system.size });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * On-Delete Operation\n   *\n   * Post-delete processing so awaiting the original operation has all secondary updates completed when it returns.\n   *\n   * @override\n   * @param {Document[]} documents - Documents\n   * @param {*} operation  - Operations and context data\n   * @param {User} user - Triggering user\n   */\n  static async _onDeleteOperation(documents, operation, user) {\n    await super._onDeleteOperation(documents, operation, user);\n\n    if (!user.isSelf) return;\n\n    // Operation parent can be ActorDelta, so we try to get the synthetic actor if it exists.\n    /** @type {Actor} */\n    const actor = operation.parent?.syntheticActor ?? operation.parent;\n    if (!(actor instanceof Actor)) return;\n\n    const promises = [];\n\n    for (const item of documents) {\n      switch (item.type) {\n        case \"class\": {\n          // Adjust associations if any exist\n          const prevLevel = item.system.level ?? 0;\n          if (prevLevel > 0) {\n            const p = item._onLevelChange(prevLevel, 0, { event: \"delete\" });\n            promises.push(p);\n          }\n\n          // Disable spellbook associated with this class, if it has spellcasting defined\n          const tag = item.system.tag;\n          if (!tag || !item.system.casting?.type) continue;\n\n          const books = actor.system.attributes.spells.spellbooks ?? {};\n          const usedBook = Object.entries(books).find(([_, book]) => !!book.class && book.class === tag);\n          if (usedBook === undefined) continue;\n\n          const [bookId, book] = usedBook;\n          if (!book.inUse) continue;\n\n          const p = actor.update({ [`system.attributes.spells.spellbooks.${bookId}.inUse`]: false });\n          promises.push(p);\n          break;\n        }\n        case \"race\": {\n          if (actor.itemTypes.race.length === 0) {\n            // Reset some race dependant details\n            // TODO: Make this derived data\n            const p = actor.update({\n              \"system.attributes.speed\": {\n                \"land.base\": 30,\n                \"fly.base\": 0,\n                \"fly.maneuverability\": \"average\",\n                \"swim.base\": 0,\n                \"climb.base\": 0,\n                \"burrow.base\": 0,\n              },\n            });\n            promises.push(p);\n          }\n          break;\n        }\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  /**\n   * Collect Data on supplements\n   *\n   * @internal\n   * @param {Array<Item>} items - Array of items to draw supplemental data from\n   * @param {Actor} actor - Owner\n   */\n  static async _createSupplements(items, actor) {\n    const allSupplements = new Collection();\n\n    let t0 = performance.now();\n    const collect = async (item, classLink, _depth = 0) => {\n      const supplements = item.system.links?.supplements ?? [];\n      classLink ??= item.system.class;\n\n      // Log slow fetches occasionally\n      const t1 = performance.now();\n      if (t1 - t0 >= 2_000) {\n        console.debug(\"Fetching\", supplements.length, \"supplements for\", item.name);\n        t0 = t1;\n      }\n\n      // Collect supplements\n      const newItemData = [];\n      for (const supplement of supplements) {\n        const { uuid } = supplement;\n        if (!uuid) continue; // Erroneous supplement data\n        const extraItem = await fromUuid(uuid);\n        if (!extraItem) {\n          // TODO: Display notification instead when this is from UI interaction.\n          console.warn(\"Supplement\", uuid, \"not found for\", item.name, item);\n          continue;\n        }\n\n        const itemData = game.items.fromCompendium(extraItem, { clearFolder: true });\n        foundry.utils.setProperty(itemData, \"flags.pf1.source\", uuid);\n\n        const old = allSupplements.get(uuid);\n        if (old) old.count += 1;\n        else {\n          allSupplements.set(uuid, { parent: item, item: extraItem, data: itemData, count: 1, classLink, uuid });\n          newItemData.push(itemData);\n        }\n      }\n\n      if (!newItemData.length) return;\n\n      // TODO: Make the limits here configurable?\n      if (_depth > 3) {\n        return void console.warn(\"Stopping collecting supplements deeper than 3 layers\");\n      }\n      if (allSupplements.size > 100 && newItemData.length) {\n        return void console.warn(`Too many supplements (${allSupplements.size}), stopping collecting more`);\n      }\n\n      for (const newItem of newItemData) {\n        // TODO: Somehow add child relation to the children\n        await collect(newItem, classLink, _depth + 1);\n      }\n    };\n\n    // Collect supplements for all items\n    for (const item of items) {\n      await collect(item);\n    }\n\n    // Do additional preparation on collected data\n    const lastSortOrder = {};\n\n    const createData = [];\n    for (const supplement of allSupplements) {\n      const { item, data: itemData, count } = supplement;\n\n      // Adjust quantity of physical items if more than one was added of the same item\n      if (item.isPhysical && itemData.system.quantity > 0) {\n        itemData.system.quantity *= count;\n      }\n      // Inherit class link\n      if (supplement.classLink && item.type === \"feat\" && item.system.subType === \"classFeat\") {\n        itemData.system.class = supplement.classLink;\n      }\n\n      // Sort to end of the item list of their type\n      const oldItemsOfSameType = actor.itemTypes[itemData.type] ?? [];\n      lastSortOrder[itemData.type] ??= oldItemsOfSameType.length\n        ? oldItemsOfSameType.reduce((max, i) => Math.max(i.sort || 0, max), -Number.MIN_SAFE_INTEGER) +\n          CONST.SORT_INTEGER_DENSITY\n        : 0;\n      itemData.sort = lastSortOrder[itemData.type];\n      lastSortOrder[itemData.type] += CONST.SORT_INTEGER_DENSITY;\n\n      // Create item\n      createData.push(itemData);\n    }\n\n    // Create supplements\n    const newItems = await actor.createEmbeddedDocuments(\"Item\", createData, {\n      _pf1NoSupplements: true,\n      render: false, // Following child link creation causes render again\n    });\n\n    // Add child links\n    const updates = new Collection();\n    const allItems = [...items, ...newItems];\n\n    /** @type {Collection<Item>} */\n    for (const item of newItems) {\n      const source = pf1.utils.internal.uniformUuid(item.getFlag(\"pf1\", \"source\"));\n      const parent = allItems.find((i) =>\n        i.system.links?.supplements?.some((si) => pf1.utils.internal.uniformUuid(si.uuid) === source)\n      );\n      if (!parent) {\n        console.warn(item.name, \"parent not found!\", source, allItems);\n        continue;\n      }\n\n      let update = updates.get(parent.id);\n      if (!update) {\n        update = { system: { links: { children: [] } } };\n        update._id = parent.id;\n        updates.set(parent.id, update);\n      }\n      update.system.links.children.push({ uuid: item.getRelativeUUID(actor) });\n    }\n\n    await actor.updateEmbeddedDocuments(\"Item\", Array.from(updates));\n  }\n\n  /**\n   * Item name\n   *\n   * @param {boolean} [forcePlayerPerspective=false] - If true, return value players see.\n   * @returns {string} - Item name\n   */\n  // eslint-disable-next-line no-unused-vars\n  getName(forcePlayerPerspective = false) {\n    return this.name;\n  }\n\n  /**\n   * Is the item is fully functional.\n   *\n   * This returns composite result of if the item is equipped, has quantity, is not disabled, is not out of charges, etc.\n   * and is not representative if the item can be set active or not via {@link setActive}.\n   *\n   * @see {@link activeState}\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get isActive() {\n    return true;\n  }\n\n  /**\n   * If the item can be activated via {@link setActive}.\n   *\n   * {@link isActive} can return variable state independent of the toggle that {@link setActive} controls, this returns .\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get activeState() {\n    return this.isActive;\n  }\n\n  /**\n   * Set item's active state.\n   *\n   * @abstract\n   * @param {boolean} active - Active state\n   * @param {object} [context] - Optional update context\n   * @returns {Promise<this>} - Update promise if item type supports the operation.\n   * @throws {Error} - If item does not support the operation.\n   */\n  // eslint-disable-next-line no-unused-vars\n  async setActive(active, context) {\n    throw new Error(`Item type ${this.type} does not support ItemBasePF#setActive`);\n  }\n\n  /**\n   * Is this item usable at base level, disregarding per-action details.\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get canUse() {\n    return this.isActive;\n  }\n\n  /**\n   * For supporting actions and changes in fromUuid()\n   *\n   * @override\n   *\n   * Synced with Foundry v12.331\n   */\n  getEmbeddedDocument(embeddedName, id, options) {\n    switch (embeddedName) {\n      case pf1.components.ItemAction.metadata.name:\n        return this.actions?.get(id);\n      case pf1.components.ItemChange.metadata.name:\n        return this.changes?.get(id);\n    }\n\n    return super.getEmbeddedDocument(embeddedName, id, options);\n  }\n}\n","import { ItemBasePF } from \"./item-base.mjs\";\n\nconst itemHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Item.documentClasses[type] ?? ItemBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ItemPFProxy = new Proxy(ItemBasePF, itemHandler);\n","export class PF1Tour extends Tour {\n  /**\n   * {@link Application}s that are currently open.\n   *\n   * This needs manual tracking from the classes that inherit from `PF1Tour` and\n   * render the applications themselves.\n   *\n   * @type {Map<Application|ApplicationV2>}\n   */\n  apps = new Map();\n\n  /**\n   * @returns {TourStep} The previous step.\n   */\n  get previousStep() {\n    return this.hasPrevious ? this.steps[this.stepIndex - 1] : undefined;\n  }\n\n  /**\n   * Based on the `steps` variable, it returns an object with the normalized step IDs as keys and the step IDs as values.\n   * The formatting will take `step-1` and return `STEP_1`.\n   *\n   * @returns {Record<string, string>} An object with the normalized step IDs as keys and the step IDs as values.\n   */\n  get StepsEnum() {\n    return this.steps.reduce((steps, step) => {\n      const stepKey = step.id.replaceAll(/-/g, \"_\").toUpperCase();\n      steps[stepKey] = step.id;\n      return steps;\n    }, {});\n  }\n\n  /**\n   * Given the ID of a step, returns the step index associated with it.\n   *\n   * @param {string} id The ID of the step.\n   * @returns {number} The step index with the given ID (-1 if not found).\n   */\n  getStepIndexById(id) {\n    return this.steps.findIndex((step) => step.id === id);\n  }\n\n  /**\n   * In many steps we might need an specific {@link pf1.applications.compendiumBrowser.CompendiumBrowser} to be opened\n   * to continue. This function opens the given type of compendium and stores it for later closing or referencing.\n   *\n   * @param {string} compendium - The compendium to open.\n   * @param {object} [options={}] - Additional options to pass to the render function.\n   * @see {@link pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers}\n   * @see {@link Application._render}\n   *\n   * @returns {Promise<pf1.applications.compendiumBrowser.CompendiumBrowser>} The opened compendium.\n   */\n  async openCompendiumBrowser(compendium, options = {}) {\n    // Open compendium\n    const comp = pf1.applications.compendiums[compendium];\n    if (!comp) {\n      throw new Error(`Compendium \"${compendium}\" not found`);\n    }\n    // Set current compendium\n    await comp._render(true, { focus: true, ...options });\n    // Add CompendiumBrowser to apps\n    this.apps.set(comp.id, comp);\n\n    return comp;\n  }\n\n  /**\n   * Same as {@link openCompendiumBrowser} but for {@link CompendiumCollection}.\n   *\n   * @param {string} compendium - The compendium to open.\n   * @param {object} [options={}] - Additional options to pass to the render function.\n   * @see {@link openCompendiumBrowser}\n   * @see {@link Application._render}\n   * @see {@link Compendium}\n   *\n   * @returns {Promise<CompendiumCollection>} The opened compendium.\n   */\n  async openCompendium(compendium, options = {}) {\n    /** @type {CompendiumCollection} */\n    const comp = game.packs.get(compendium, { strict: true });\n\n    const app = comp.apps.find((app) => app instanceof comp.applicationClass);\n\n    if (game.release.generation >= 13) {\n      await app.render({ ...options, force: true });\n    } else {\n      await app._render(true, { focus: true, ...options });\n    }\n\n    this.apps.set(app.id, app);\n    return comp;\n  }\n\n  /**\n   * Closes the currently opened {@link pf1.applications.compendiumBrowser.CompendiumBrowser} or {@link Compendium} either\n   * by referencing the variable or checking if the active window is the compendium.\n   *\n   * @see {@link openCompendiumBrowser}\n   * @see {@link Application.close}\n   *\n   * @returns {Promise<void>}\n   */\n  async closeCompendium() {\n    const compApps = this.apps\n      .values()\n      .filter(\n        (app) => app instanceof pf1.applications.compendiumBrowser.CompendiumBrowser || app instanceof Compendium\n      );\n\n    for (const app of compApps) {\n      this._debug(`Closing \\`${app.constructor.name}\\` ${app.id}`);\n      this.apps.delete(app.id);\n      await app.close();\n    }\n  }\n\n  /**\n   * This log functions outputs the given text to the console with Tour ID in the log message.\n   *\n   * @param {string} text The text to log.\n   * @param {\"log\"|\"debug\"|\"warn\"} loglevel The log level to use.\n   * @param {...any} args Extra arguments to pass to {@link console.info}.\n   */\n  _log(text, loglevel = \"log\", ...args) {\n    console[loglevel](`PF1 | Tour | ${this.namespace}.${this.id}.${this.currentStep?.id} |`, text, ...args);\n  }\n\n  /**\n   * @param {string} text The text to log.\n   * @param  {...any} args Extra arguments to pass to {@link console.info}.\n   * @see {@link _log}\n   */\n  _debug(text, ...args) {\n    this._log(text, \"debug\", ...args);\n  }\n\n  /**\n   * @param {string} text The text to log.\n   * @param  {...any} args Extra arguments to pass to {@link console.info}.\n   * @see {@link _log}\n   */\n  _warn(text, ...args) {\n    this._log(text, \"warn\", ...args);\n  }\n\n  /**\n   * Expands a compendium folder and parent folders if found in the Compendium tab.\n   * Ultimately returns the direct compendium folder.\n   *\n   * @param {string} pack - The name of the compendium from which to get the folder.\n   *\n   * @returns {Folder | null} The actors folder.\n   */\n  expandCompendiumFolder(pack) {\n    // We'll retrieve the element based on the ID and for that we'll need the folder object from compendium\n    const compendium = game.packs.get(pack, { strict: true });\n    /** @type {Folder} */\n    const folder = compendium.folder;\n\n    if (!folder) {\n      this._debug(\n        \"Couldn't find the folder ID for the Basic Monsters compendium. It could be that the compendium isn't in a folder.\"\n      );\n      return null;\n    }\n\n    /**\n     * Given a folder it removes the `collapse` tag expanding it and searches for a parent folder in order to to the same.\n     *\n     * @param {Folder} folder - The folder to expand.\n     */\n    const clickFolder = (folder) => {\n      if (!folder.expanded) {\n        /** @type {HTMLLIElement | null} */\n        const folderEl = document.querySelector(`li.directory-item.folder[data-uuid=\"Folder.${folder.id}\"]`);\n        // The one that triggers the click is the header\n        folderEl?.querySelector(\"header\")?.click();\n      }\n\n      // If this folder is child of another folder we want to expand it as well\n      if (folder.folder) {\n        clickFolder(folder.folder);\n      }\n    };\n\n    clickFolder(folder);\n\n    return folder;\n  }\n\n  /** @override */\n  exit() {\n    this.closeApps();\n    return super.exit();\n  }\n\n  /** @override */\n  async complete() {\n    this.closeApps();\n    return super.complete();\n  }\n\n  /**\n   * Close any apps opened by this tour.\n   */\n  closeApps() {\n    const apps = [...this.apps.entries()];\n    for (const [appId, app] of apps) {\n      app.close();\n      this.apps.delete(appId);\n    }\n  }\n}\n","import { PF1Tour } from \"./base-tours.mjs\";\n\nexport class PF1ActorSheetTour extends PF1Tour {\n  /**\n   * @type {Application|foundry.applications.api.ApplicationV2}\n   */\n  activeSheet = null;\n\n  /**\n   * Opens the sheet of the actor used for the tour and assigns it to `this.activeSheet`.\n   *\n   * @param {object} [options={}] - Options to pass to the render function.\n   *\n   * @returns {Promise<ActorSheet>} The opened sheet.\n   */\n  async openSheet(options = {}) {\n    const comp = game.packs.get(this.config.compendiumId, { strict: true });\n\n    /** @type {pf1.documents.actor.ActorPF | undefined} */\n    const actor = await comp.getDocument(this.config.actorId);\n    if (!actor) {\n      throw new Error(`Actor with ID ${this.config.actorId} not found in compendium ${this.config.compendiumId}`);\n    }\n\n    /** @type {ActorSheet | undefined} */\n    const sheet = actor.sheet;\n    if (sheet instanceof foundry.applications.api.ApplicationV2) {\n      await sheet.render({ ...options, force: true, focus: true });\n    } else {\n      await sheet._render(true, { focus: true, ...options });\n    }\n\n    this.activeSheet = sheet;\n\n    // Add sheet to apps\n    this.apps.set(sheet.id, sheet);\n    return sheet;\n  }\n\n  /** @override */\n  async start() {\n    ui.sidebar.activateTab(\"compendium\"); // Deprecated in v13\n    //ui.sidebar.changeTab(\"compendium\"); // New method, doesn't work in v12\n\n    await super.start();\n  }\n\n  /** @override */\n  async previous() {\n    switch (this.previousStep?.id) {\n      // Returning to the Compendium tab after opening the compendium\n      case this.StepsEnum.GO_TO_BASIC_MONSTERS:\n        this._debug(`(previous) Closing Basic Monsters compendium to return to the compendium tab`);\n        await this.closeCompendium();\n        // FIXME: Tear down sticky instructions. Seems like a Foundry bug.\n        await this._postStep();\n        break;\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        this._debug(`(previous) Closing sheet to return to the compendium`);\n        await this.activeSheet?.close();\n        break;\n      default:\n        if (!this.previousStep) {\n          this._warn(`(previous) The previous step to ${this.currentStep?.id} doesn't seem exist.`);\n        }\n        break;\n    }\n\n    await super.previous();\n  }\n\n  /** @override */\n  async _preStep() {\n    // Based on the current step index we'll know if the character sheet needs to be opened\n    // From HIGHLIGHT_SHEET onwards we'll be overseeing the character sheet\n    if (this.stepIndex >= this.getStepIndexById(this.StepsEnum.HIGHLIGHT_SHEET)) {\n      this._debug(`(${this._preStep.name}) Opening character sheet for overview`);\n      await this.openSheet(this.config.actorId);\n    }\n\n    if (this.currentStep.tabs) {\n      let tabs = this.currentStep.tabs;\n      if (!Array.isArray(this.currentStep.tabs)) tabs = [tabs];\n      const sheet = this.activeSheet;\n      if (sheet) {\n        for (const tab of tabs) {\n          if (tab.setting && !game.settings.get(\"pf1\", tab.setting)) continue;\n          this._debug(`(_preStep) Activating ${tab.id} (${tab.group}) tab`);\n          sheet.activateTab(tab.id, { group: tab.group });\n        }\n      }\n    }\n\n    // Actions for *specific* steps\n    switch (this.currentStep?.id) {\n      case this.StepsEnum.GO_TO_BASIC_MONSTERS:\n        // We need to expand the Actors folder for the selector of this step to work\n        this._debug(`(_preStep) Expanding Actors folder`);\n        this.expandCompendiumFolder(this.config.compendiumId);\n        break;\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        // We need to open the Basic Monsters compendium\n        this._debug(`(_preStep) Rendering Basic Monsters compendium`);\n        await this.openCompendium(this.config.compendiumId);\n        break;\n      case this.StepsEnum.SPELLBOOKS_CONFIGURATION:\n        // Expand the Configuration section\n        this._debug(`(_preStep) Opening primary spellbook configuration`);\n        // At this point we don't have a targetElement so we need to find it by selector\n        document.querySelector(this.currentStep?.selector)?.click();\n        break;\n      default:\n        if (!this.currentStep?.id) {\n          this._warn(`(_preStep) The current step doesn't seem to have an ID.`);\n          return;\n        }\n        break;\n    }\n\n    await super._preStep();\n  }\n\n  /** @override */\n  async _postStep() {\n    await super._postStep();\n\n    switch (this.currentStep?.id) {\n      // After highlighting the entry in the compendium, we need to open the sheet\n      case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:\n        this._debug(`(_postStep) Closing Basic Monsters compendium`);\n        this.closeCompendium(); // TODO: Make this more general and controlled by base tours\n        break;\n      case this.StepsEnum.SPELLBOOKS_CONFIGURATION:\n        this._debug(`(_postStep) Closing primary spellbook configuration`);\n        this.targetElement?.click();\n        break;\n      default:\n        if (!this.currentStep?.id) {\n          this._warn(`(_postStep) The current step doesn't seem to have an ID.`);\n          return;\n        }\n        break;\n    }\n  }\n}\n","import { PF1ActorSheetTour } from \"./tours/actor-sheet-tour.mjs\";\n\nHooks.once(\"ready\", async function registerPF1Tours() {\n  // Actor Sheet Tour\n  game.tours.register(\"pf1\", \"actorSheet\", await PF1ActorSheetTour.fromJSON(\"systems/pf1/tours/actor-sheet-tour.json\"));\n});\n","/**\n * PF1 Configuration Values\n *\n * A dictionary of dictionaries providing configuration data like formulae,\n * translation keys, and other configuration values. Translations keys are\n * assumed to get replaced by their proper translation when the system is loaded.\n *\n * These may be adjusted to influence the system's behaviour during runtime.\n * It is available as `pf1.config` as well as through `CONFIG.PF1`.\n *\n * @module\n */\n\n/**\n * @internal\n */\nexport const re = {\n  traitSeparator: /\\s*[;]\\s*/g,\n};\n\n/**\n * The set of Ability Scores used within the system\n *\n * @enum {string}\n */\nexport const abilities = /** @type {const} */ ({\n  str: \"PF1.AbilityStr\",\n  dex: \"PF1.AbilityDex\",\n  con: \"PF1.AbilityCon\",\n  int: \"PF1.AbilityInt\",\n  wis: \"PF1.AbilityWis\",\n  cha: \"PF1.AbilityCha\",\n});\n\n/**\n * The set of Ability Scores used within the system in short form\n */\nexport const abilitiesShort = /** @type {const} */ ({\n  str: \"PF1.AbilityShortStr\",\n  dex: \"PF1.AbilityShortDex\",\n  con: \"PF1.AbilityShortCon\",\n  int: \"PF1.AbilityShortInt\",\n  wis: \"PF1.AbilityShortWis\",\n  cha: \"PF1.AbilityShortCha\",\n});\n\n/**\n * The point cost to increase an ability score using Point Buy\n */\nexport const abilityCost = /** @type {const} */ ({\n  7: -4,\n  8: -2,\n  9: -1,\n  10: 0,\n  11: 1,\n  12: 2,\n  13: 3,\n  14: 5,\n  15: 7,\n  16: 10,\n  17: 13,\n  18: 17,\n});\n\n/**\n * Point buy calculator.\n */\nexport const pointBuy = /** @type {const} */ ({\n  low: { label: \"PF1.Application.PointBuy.Type.low\", points: 10 },\n  standard: { label: \"PF1.Application.PointBuy.Type.standard\", points: 15 },\n  high: { label: \"PF1.Application.PointBuy.Type.high\", points: 20 },\n  epic: { label: \"PF1.Application.PointBuy.Type.epic\", points: 25 },\n});\n\n/**\n * At which levels you receive how many new ability points.\n */\nexport const levelAbilityScores = /** @type {const} */ ({\n  4: 1,\n  8: 1,\n  12: 1,\n  16: 1,\n  20: 1,\n});\n\n/**\n * How many points are assigned per choice.\n *\n * For homebrew support.\n *\n * @type {number}\n */\nexport const levelAbilityScoreMult = 1;\n\n/**\n * At which mythic tiers you receive how many new ability points.\n */\nexport const tierAbilityScores = /** @type {const} */ ({\n  2: 2,\n  4: 2,\n  6: 2,\n  8: 2,\n  10: 2,\n});\n\n/**\n * How many points are assigned per choice.\n *\n * @type {number}\n */\nexport const tierAbilityScoreMult = 2;\n\n/**\n * Valid hit die sizes.\n */\nexport const hitDieSizes = /** @type {const} */ ([6, 8, 10, 12]);\n\n/**\n * Item data for the feature associated with ability scores gained from leveling.\n */\nexport const levelAbilityScoreFeature = /** @type {const} */ ({\n  img: \"systems/pf1/icons/skills/affliction_10.jpg\",\n  name: \"PF1.LevelUp.AbilityScore.Item.Name\",\n  system: {\n    description: {\n      value: \"PF1.LevelUp.AbilityScore.Item.Desc\",\n    },\n    subType: \"misc\",\n  },\n  type: \"feat\",\n});\n\n/**\n * The set of Saving Throws\n */\nexport const savingThrows = /** @type {const} */ ({\n  fort: \"PF1.SavingThrowFort\",\n  ref: \"PF1.SavingThrowRef\",\n  will: \"PF1.SavingThrowWill\",\n});\n\n/**\n * The types of classes\n */\nexport const classTypes = /** @type {const} */ ({\n  base: \"PF1.Subtypes.Item.class.base.Single\",\n  prestige: \"PF1.Subtypes.Item.class.prestige.Single\",\n  npc: \"PF1.Subtypes.Item.class.npc.Single\",\n  racial: \"PF1.Subtypes.Item.class.racial.Single\",\n  mythic: \"PF1.Subtypes.Item.class.mythic.Single\",\n});\n\n/**\n * Valid options for a class's BAB progression\n */\nexport const classBAB = /** @type {const} */ ({\n  low: \"PF1.Low\",\n  med: \"PF1.Medium\",\n  high: \"PF1.High\",\n  custom: \"PF1.Custom\",\n});\n\n/**\n * Valid options for a class's saving throw bonus progression\n */\nexport const classSavingThrows = /** @type {const} */ ({\n  low: \"PF1.Poor\",\n  high: \"PF1.Good\",\n  custom: \"PF1.Custom\",\n});\n\n/**\n * The formulae for BAB progressions\n */\nexport const classBABFormulas = /** @type {const} */ ({\n  low: \"floor(@hitDice * 0.5)\",\n  med: \"floor(@hitDice * 0.75)\",\n  high: \"@hitDice\",\n  custom: \"0\",\n});\n\nexport const classFractionalBABFormulas = /** @type {const} */ ({\n  low: \"@hitDice * 0.5\", // 1/2\n  med: \"@hitDice * 0.75\", // 3/4\n  high: \"@hitDice\", // 1/1\n  custom: \"0\",\n});\n\n/**\n * The formulae for saving throw progressions by class type\n *\n * Due to need to resolve these very early on, only special `@hitDice` and `@level` variables are available for these formulas, and these refer to the class item solely, not total.\n *\n * {@link pf1.documents.item.ItemClassPF ItemClassPF} is responsible for calculating these and applying the results.\n */\nexport const classSavingThrowFormulas = /** @type {const} */ ({\n  base: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  prestige: {\n    low: \"floor((1 + @hitDice) / 3)\",\n    high: \"floor((1 + @hitDice) / 2)\",\n  },\n  npc: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  racial: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n});\n\n/**\n * Saving throw formulae used with Fractional Base Bonuses.\n *\n * @see {@link classSavingThrowFormulas}\n */\nexport const classFractionalSavingThrowFormulas = /** @type {const} */ ({\n  goodSaveBonus: \"2\",\n  base: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  prestige: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  npc: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  racial: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n});\n\n/**\n * Item types that can have class associations.\n *\n * @todo\n * - Move this to item metadata.\n */\nexport const classAssociations = /** @type {const} */ ([\"feat\", \"attack\"]);\n\n/**\n * The choices available for favoured class bonuses\n */\nexport const favouredClassBonuses = /** @type {const} */ ({\n  hp: \"PF1.FavouredClass.Bonuses.hp\",\n  skill: \"PF1.FavouredClass.Bonuses.skill\",\n  alt: \"PF1.FavouredClass.Bonuses.alt\",\n});\n\n/**\n * Icons used for favoured class bonus choices\n */\nexport const favouredClassBonusIcons = /** @type {const} */ ({\n  hp: \"fa-heartbeat\",\n  skill: \"fa-wrench\",\n  alt: \"fa-tag\",\n});\n\n/**\n * The set of Armor Classes\n */\nexport const ac = /** @type {const} */ ({\n  normal: \"PF1.ACNormal\",\n  touch: \"PF1.ACTouch\",\n  flatFooted: \"PF1.ACFlatFooted\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Character alignment options\n */\nexport const alignments = /** @type {const} */ ({\n  lg: \"PF1.Alignments.lg\",\n  ng: \"PF1.Alignments.ng\",\n  cg: \"PF1.Alignments.cg\",\n  ln: \"PF1.Alignments.ln\",\n  tn: \"PF1.Alignments.tn\",\n  cn: \"PF1.Alignments.cn\",\n  le: \"PF1.Alignments.le\",\n  ne: \"PF1.Alignments.ne\",\n  ce: \"PF1.Alignments.ce\",\n});\n\n/**\n * Character alignment options in their short form\n */\nexport const alignmentsShort = /** @type {const} */ ({\n  lg: \"PF1.Alignments.Short.lg\",\n  ng: \"PF1.Alignments.Short.ng\",\n  cg: \"PF1.Alignments.Short.cg\",\n  ln: \"PF1.Alignments.Short.ln\",\n  tn: \"PF1.Alignments.Short.tn\",\n  cn: \"PF1.Alignments.Short.cn\",\n  le: \"PF1.Alignments.Short.le\",\n  ne: \"PF1.Alignments.Short.ne\",\n  ce: \"PF1.Alignments.Short.ce\",\n});\n\n/**\n * Extra damage reduction types\n *\n * @alpha\n */\nexport const damageResistances = /** @type {const} */ ({\n  lawful: \"PF1.Alignments.l\",\n  chaotic: \"PF1.Alignments.c\",\n  good: \"PF1.Alignments.g\",\n  evil: \"PF1.Alignments.e\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The set of Armor Proficiencies which a character may have\n */\nexport const armorProficiencies = /** @type {const} */ ({\n  lgt: \"PF1.Proficiency.Armor.light\",\n  med: \"PF1.Proficiency.Armor.medium\",\n  hvy: \"PF1.Proficiency.Armor.heavy\",\n  shl: \"PF1.Proficiency.Armor.shield\",\n  twr: \"PF1.Proficiency.Armor.tower\",\n});\n\n/**\n * The set of broad Weapon Proficiencies a character may have\n */\nexport const weaponProficiencies = /** @type {const} */ ({\n  simple: \"PF1.Proficiency.Weapon.simple\",\n  martial: \"PF1.Proficiency.Weapon.martial\",\n  firearm: \"PF1.Proficiency.Weapon.firearm\",\n  siege: \"PF1.Proficiency.Weapon.siege\",\n  heavy: \"PF1.Proficiency.Weapon.heavy\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * This describes the ways that an ability can be activated.\n */\nexport const abilityActivationTypes = /** @type {const} */ ({\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  swift: \"PF1.Activation.swift.Single\",\n  immediate: \"PF1.Activation.immediate.Single\",\n  move: \"PF1.Activation.move.Single\",\n  standard: \"PF1.Activation.standard.Single\",\n  full: \"PF1.Activation.fullRound.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  round: \"PF1.Activation.round.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n});\n\n/**\n * This describes plurals for activation types.\n */\nexport const abilityActivationTypesPlurals = /** @type {const} */ ({\n  free: \"PF1.Activation.free.Plural\",\n  swift: \"PF1.Activation.swift.Plural\",\n  immediate: \"PF1.Activation.immediate.Plural\",\n  move: \"PF1.Activation.move.Plural\",\n  standard: \"PF1.Activation.standard.Plural\",\n  full: \"PF1.Activation.fullRound.Plural\",\n  attack: \"PF1.Activation.attack.Plural\",\n  round: \"PF1.Activation.round.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n});\n\n/**\n * This describes the ways that an ability can be activated when using\n * Unchained rules.\n */\nexport const abilityActivationTypes_unchained = /** @type {const} */ ({\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  reaction: \"PF1.Activation.reaction.Single\",\n  action: \"PF1.Activation.action.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n});\n\n/**\n * This describes plurals for the ways that an ability can be activated when\n * using Unchained rules.\n */\nexport const abilityActivationTypesPlurals_unchained = /** @type {const} */ ({\n  passive: \"PF1.Activation.passive.Plural\",\n  free: \"PF1.Activation.free.Plural\",\n  reaction: \"PF1.Activation.reaction.Plural\",\n  action: \"PF1.Activation.action.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n  special: \"PF1.Activation.special.Plural\",\n});\n\n/**\n * Activation types that have no meaningful cost\n */\nexport const costlessActivation = /** @type {const} */ (\n  new Set([\n    \"special\",\n    \"free\",\n    \"aoo\",\n    \"attack\",\n    \"move\",\n    \"nonaction\",\n    \"passive\",\n    \"standard\",\n    \"swift\",\n    \"reaction\",\n    \"immediate\",\n  ])\n);\n\n/**\n * The possible conditions when using Wound Threshold rules\n */\nexport const woundThresholdConditions = /** @type {const} */ ({\n  0: \"PF1.WoundLevel.healthy\",\n  1: \"PF1.WoundLevel.grazed\",\n  2: \"PF1.WoundLevel.wounded\",\n  3: \"PF1.WoundLevel.critical\",\n});\n\n/**\n * Change targets affected by Wound Thresholds.\n */\nexport const woundThresholdChangeTargets = /** @type {const} */ ([\n  \"~attackCore\",\n  \"cl\",\n  \"allSavingThrows\",\n  \"ac\",\n  //\"cmd\", // valid target but is inherited from \"ac\"\n  \"skills\",\n  \"allChecks\",\n  //\"init\", // inherited from allChecks\n  //\"abilityChecks\", // inherited from allChecks\n]);\n\nexport const divineFocus = /** @type {const} */ ({\n  0: \"\",\n  1: \"PF1.SpellComponents.DFVariants.DF\",\n  2: \"PF1.SpellComponents.DFVariants.MDF\",\n  3: \"PF1.SpellComponents.DFVariants.FDF\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The possible creature sizes\n */\nexport const actorSizes = /** @type {const} */ ({\n  fine: \"PF1.ActorSize.fine\",\n  dim: \"PF1.ActorSize.dim\",\n  tiny: \"PF1.ActorSize.tiny\",\n  sm: \"PF1.ActorSize.sm\",\n  med: \"PF1.ActorSize.med\",\n  lg: \"PF1.ActorSize.lg\",\n  huge: \"PF1.ActorSize.huge\",\n  grg: \"PF1.ActorSize.grg\",\n  col: \"PF1.ActorSize.col\",\n});\n\n/**\n * Possible creature age categories\n */\nexport const ageCategories = /** @type {const} */ ({\n  young: {\n    label: \"PF1.AgeCategories.young\",\n    modifiers: { str: -2, dex: 2, con: -2, int: 0, wis: -2, cha: 0 },\n  },\n  adult: {\n    label: \"PF1.AgeCategories.adult\",\n    modifiers: { str: 0, dex: 0, con: 0, int: 0, wis: 0, cha: 0 },\n  },\n  middleAge: {\n    label: \"PF1.AgeCategories.middleAge\",\n    modifiers: { str: -1, dex: -1, con: -1, int: 1, wis: 1, cha: 1 },\n  },\n  old: {\n    label: \"PF1.AgeCategories.old\",\n    modifiers: { str: -3, dex: -3, con: -3, int: 2, wis: 2, cha: 2 },\n  },\n  venerable: {\n    label: \"PF1.AgeCategories.venerable\",\n    modifiers: { str: -6, dex: -6, con: -6, int: 3, wis: 3, cha: 3 },\n  },\n});\n\n/**\n * Armor & shield cost multipliers for different creature sizes.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorCost = /** @type {const} */ ({\n  humanoid: {\n    fine: 0.5,\n    dim: 0.5,\n    tiny: 0.5,\n    sm: 1,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  nonhumanoid: {\n    fine: 1,\n    dim: 1,\n    tiny: 1,\n    sm: 2,\n    med: 2,\n    lg: 4,\n    huge: 8,\n    grg: 16,\n    col: 32,\n  },\n});\n\n/**\n * Armor weight multipliers for different creature sizes.\n *\n * The values are same for both humanoid and non-humanoid.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorWeight = /** @type {const} */ ({\n  fine: 0.1,\n  dim: 0.1,\n  tiny: 0.1,\n  sm: 0.5,\n  med: 1,\n  lg: 2,\n  huge: 5,\n  grg: 8,\n  col: 12,\n});\n\nexport const costMultipliers = /** @type {const} */ ({\n  /** Broken */\n  broken: 0.75,\n  /** Regular timeworn item */\n  timeworn: 0.5,\n  /** Depleted timeworn item */\n  depleted: 0.01,\n});\n\n/**\n * The possible creature sizes in their one-letter form\n */\nexport const sizeChart = /** @type {const} */ ({\n  fine: \"F\",\n  dim: \"D\",\n  tiny: \"T\",\n  sm: \"S\",\n  med: \"M\",\n  lg: \"L\",\n  huge: \"H\",\n  grg: \"G\",\n  col: \"C\",\n});\n\n/**\n * @typedef {object} TokenSize\n * @property {number} w - Width, in cells\n * @property {number} h - Height, in cells\n * @property {number} scale - Scale ratio\n */\n\n/**\n * The size values for Tokens according to the creature's size\n *\n * @type {Record<string,TokenSize>}\n */\nexport const tokenSizes = /** @type {const} */ ({\n  fine: { w: 1, h: 1, scale: 0.25 },\n  dim: { w: 1, h: 1, scale: 0.4 },\n  tiny: { w: 1, h: 1, scale: 0.55 },\n  sm: { w: 1, h: 1, scale: 0.75 },\n  med: { w: 1, h: 1, scale: 1 },\n  lg: { w: 2, h: 2, scale: 1 },\n  huge: { w: 3, h: 3, scale: 1 },\n  grg: { w: 4, h: 4, scale: 1 },\n  col: { w: 6, h: 6, scale: 1 },\n});\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeMods = /** @type {const} */ ({\n  fine: 8,\n  dim: 4,\n  tiny: 2,\n  sm: 1,\n  med: 0,\n  lg: -1,\n  huge: -2,\n  grg: -4,\n  col: -8,\n});\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeSpecialMods = /** @type {const} */ ({\n  fine: -8,\n  dim: -4,\n  tiny: -2,\n  sm: -1,\n  med: 0,\n  lg: 1,\n  huge: 2,\n  grg: 4,\n  col: 8,\n});\n\n/**\n * The size modifier applied to fly checks of creatures not of medium size\n */\nexport const sizeFlyMods = /** @type {const} */ ({\n  fine: 8,\n  dim: 6,\n  tiny: 4,\n  sm: 2,\n  med: 0,\n  lg: -2,\n  huge: -4,\n  grg: -6,\n  col: -8,\n});\n\n/**\n * The size modifier applied to stealth checks of creatures not of medium size\n */\nexport const sizeStealthMods = /** @type {const} */ ({\n  fine: 16,\n  dim: 12,\n  tiny: 8,\n  sm: 4,\n  med: 0,\n  lg: -4,\n  huge: -8,\n  grg: -12,\n  col: -16,\n});\n\n/**\n * Vehicle properties based on size and type\n */\nexport const vehicles = /** @type {const} */ ({\n  size: {\n    lg: {\n      label: \"PF1.ActorSize.lg\",\n      space: \"PF1.Vehicles.Space.Large\",\n    },\n    huge: {\n      label: \"PF1.ActorSize.huge\",\n      space: \"PF1.Vehicles.Space.Huge\",\n    },\n    grg: {\n      label: \"PF1.ActorSize.grg\",\n      space: \"PF1.Vehicles.Space.Gargantuan\",\n    },\n    col: {\n      label: \"PF1.ActorSize.col\",\n      space: \"PF1.Vehicles.Space.Colossal\",\n    },\n  },\n  type: {\n    land: \"PF1.Vehicles.Types.Land\",\n    sea: \"PF1.Vehicles.Types.Sea\",\n    air: \"PF1.Vehicles.Types.Air\",\n  },\n});\n\nexport const vehicleMaterials = /** @type {const} */ ({\n  leather: {\n    label: \"PF1.Materials.Types.leather\",\n    hp: 10,\n    hardness: 0,\n  },\n  wood: {\n    label: \"PF1.Materials.Types.wood\",\n    hp: 15,\n    hardness: 5,\n  },\n  stone: {\n    label: \"PF1.Materials.Types.stone\",\n    hp: 20,\n    hardness: 8,\n  },\n  metal: {\n    label: \"PF1.Vehicles.Metal\",\n    hp: 20,\n    hardness: 10,\n  },\n});\n\n/**\n * Haunt templates with CR and journal link\n */\nexport const hauntTemplates = /** @type {const} */ ({\n  belligerent: {\n    cr: 3,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.ViD7x7D2AEIUp2dQ\",\n  },\n  itemBound: {\n    cr: -1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.GgK76mqrJm8iPitI\",\n  },\n  chained: {\n    cr: -1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.xRk4w3d0k9a3XfoR\",\n  },\n  elusive: {\n    cr: 1,\n    crBonus: 1,\n    crBonusTag: \"persistent\",\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.FeZDtjPSyxxqtvSP\",\n  },\n  fast: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.gOUBR4eNOqKZrQbe\",\n  },\n  freeRoaming: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.70TeCwEEWNTqet9j\",\n  },\n  increasedArea: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.7bujYFyTIngbWcC7\",\n  },\n  latent: {\n    cr: 0,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.LBvgVviZKigP49TT\",\n  },\n  persistent: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.UJplPnsAXORwc0wG\",\n  },\n  possessing: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.POoYy22lWnkNtlrG\",\n  },\n  spiteful: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.bt61t3hOagcnoXzF\",\n  },\n  tenacious: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.NQsW2HGccyOeVFt0\",\n  },\n  unyielding: {\n    cr: 2,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.F9mLugVUBaIUtU0g\",\n  },\n  vaporous: {\n    cr: 1,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.eEur8JYjiDBCcpv6\",\n  },\n  variant: {\n    cr: 0,\n    uuid: \"Compendium.pf1.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.wo4WlQIj0hd4zYgn\",\n  },\n});\n\n/**\n * Haunt template labels\n */\nexport const hauntTemplateLabels = /** @type {const} */ ({\n  belligerent: \"PF1.Haunt.Template.belligerent\",\n  itemBound: \"PF1.Haunt.Template.itemBound\",\n  chained: \"PF1.Haunt.Template.chained\",\n  elusive: \"PF1.Haunt.Template.elusive\",\n  fast: \"PF1.Haunt.Template.fast\",\n  freeRoaming: \"PF1.Haunt.Template.freeRoaming\",\n  increasedArea: \"PF1.Haunt.Template.increasedArea\",\n  latent: \"PF1.Haunt.Template.latent\",\n  persistent: \"PF1.Haunt.Template.persistent\",\n  possessing: \"PF1.Haunt.Template.possessing\",\n  spiteful: \"PF1.Haunt.Template.spiteful\",\n  tenacious: \"PF1.Haunt.Template.tenacious\",\n  unyielding: \"PF1.Haunt.Template.unyielding\",\n  vaporous: \"PF1.Haunt.Template.vaporous\",\n  variant: \"PF1.Haunt.Template.variant\",\n});\n\n/**\n * Trap properties with labels\n */\nexport const traps = /** @type {const} */ ({\n  bypass: {\n    lock: \"PF1.Trap.Bypass.Lock\",\n    hiddenSwitch: \"PF1.Trap.Bypass.HiddenSwitch\",\n    hiddenLock: \"PF1.Trap.Bypass.HiddenLock\",\n  },\n  reset: {\n    automatic: \"PF1.Trap.Reset.Automatic\",\n    manual: \"PF1.Trap.Reset.Manual\",\n    repair: \"PF1.Trap.Reset.Repair\",\n  },\n  trigger: {\n    electricEyes: \"PF1.Trap.Triggers.ElectricEyes\",\n    genetic: \"PF1.Trap.Triggers.Genetic\",\n    location: \"PF1.Trap.Triggers.Location\",\n    manual: \"PF1.Trap.Triggers.Manual\",\n    proximity: \"PF1.Trap.Triggers.Proximity\",\n    sound: \"PF1.Trap.Triggers.Sound\",\n    spell: \"PF1.Trap.Triggers.Spell\",\n    timed: \"PF1.Trap.Triggers.Timed\",\n    touch: \"PF1.Trap.Triggers.Touch\",\n    visual: \"PF1.Trap.Triggers.Visual\",\n  },\n  types: {\n    magic: \"PF1.Trap.Types.Magic\",\n    mechanical: \"PF1.Trap.Types.Mechanical\",\n  },\n  vision: {\n    arcaneEye: \"PF1.Trap.Vision.ArcaneEye\",\n    clairvoyance: \"PF1.Trap.Vision.Clairvoyance\",\n    darkvision: \"PF1.Sense.darkvision\",\n    seeInDarkness: \"PF1.Sense.seeInDark\",\n    trueSeeing: \"PF1.Trap.Vision.TrueSeeing\",\n  },\n});\n\n/**\n * Perception Modifiers for Trap's trigger detections\n */\nexport const trapPerceptionModifiers = /** @type {const} */ ({\n  electricEyes: 15,\n  sound: 15,\n  vision: {\n    arcaneEye: 20,\n    clairvoyance: 15,\n    trueSeeing: 30,\n  },\n});\n\n/**\n * The possible options for a creature's flight maneuverability\n */\nexport const flyManeuverabilities = /** @type {const} */ ({\n  clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n  poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n  average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n  good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n  perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n});\n\n/**\n * The bonus values for a creature's maneuverability\n */\nexport const flyManeuverabilityValues = /** @type {const} */ ({\n  clumsy: -8,\n  poor: -4,\n  average: 0,\n  good: 4,\n  perfect: 8,\n});\n\n/**\n * Overland speeds\n */\nexport const overlandSpeed = /** @type {const} */ ({\n  imperial: {\n    // Default\n    // 1 mi per 10 ft\n    default: {\n      per: 10,\n      out: 1,\n      unit: \"mi\",\n    },\n  },\n  metric: {\n    // Metric system, used by German translation\n    // 1.5 km per 3 m\n    rounded: {\n      per: 3,\n      out: 1.5,\n      unit: \"km\",\n    },\n    // Exact metric system, used by Spanish translation\n    // 1.6 km per 3 m\n    exact: {\n      per: 3,\n      out: 1.6,\n      unit: \"km\",\n    },\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * An array of maximum carry capacities, where the index is the ability/strength score.\n */\n// prettier-ignore\nexport const encumbranceLoads = /** @type {const} */ ([\n  0,\n  10,\n  20,\n  30,\n  40,\n  50,\n  60,\n  70,\n  80,\n  90,\n  100,\n  115,\n  130,\n  150,\n  175,\n  200,\n  230,\n  260,\n  300,\n  350,\n  400,\n  460,\n  520,\n  600,\n  700,\n  800,\n  920,\n  1040,\n  1200,\n  1400,\n  1600,\n]);\n\n/**\n * Encumbrance levels for light, medium, and heavy loads.\n *\n * @see {@link ActorPF._computeEncumbrance ActorPF.system.encumbrance.level}\n * @readonly\n * @enum {number}\n */\nexport const encumbranceLevels = /** @type {const} */ ({\n  light: 0,\n  medium: 1,\n  heavy: 2,\n});\n\n/**\n * Encumbrance multipliers applied due to a creature's size for bi- and\n * quadrupedal creatures.\n */\nexport const encumbranceMultipliers = /** @type {const} */ ({\n  normal: {\n    fine: 0.125,\n    dim: 0.25,\n    tiny: 0.5,\n    sm: 0.75,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  quadruped: {\n    fine: 0.25,\n    dim: 0.5,\n    tiny: 0.75,\n    sm: 1,\n    med: 1.5,\n    lg: 3,\n    huge: 6,\n    grg: 12,\n    col: 24,\n  },\n});\n\n/**\n * Item Modifiers based on their enhancement bonus\n */\nexport const itemEnhancementMods = /** @type {const} */ ({\n  hp: 10,\n  hardness: 2,\n});\n\n/**\n * Material equivalency of enhancement bonuses\n *\n * @internal\n * @experimental\n *\n * @todo\n * - Merge this info to material registry?\n */\nexport const enhancementMaterialPenetration = /** @type {const} */ ({\n  1: [\"magic\"],\n  3: [\"coldIron\", \"alchemicalSilver\"],\n  4: [\"adamantine\"],\n  5: [\"evil\", \"good\", \"lawful\", \"chaotic\"],\n});\n\n/**\n * Group Resting information\n *\n * Hours declares how many hours total rest are needed with single person watching.\n *\n * Double is for same as hours, but with two people watching at the same time.\n */\nexport const partyRest = /** @type {const} */ ({\n  1: {\n    hours: 8, // No watches\n    double: null,\n  },\n  2: {\n    hours: 16,\n    double: null,\n  },\n  3: {\n    hours: 12,\n    double: null,\n  },\n  4: {\n    hours: 10.667,\n    double: 16,\n  },\n  5: {\n    hours: 10,\n    double: 16,\n  },\n  6: {\n    hours: 9.6,\n    double: 12,\n  },\n  7: {\n    hours: 9.332,\n    double: 12,\n  },\n  8: {\n    hours: 9,\n    double: 10.667,\n  },\n  // Higher party numbers do not reduce total rest time but can reduce watch time or allow more people to watch\n});\n\n/**\n * Damage multipliers from ability score.\n */\nexport const abilityDamageMultipliers = /** @type {const} */ ([\n  { value: 0.5, label: \"×0.5\" },\n  { value: 1, label: \"×1\" },\n  { value: 1.5, label: \"×1.5\" },\n  { value: 2, label: \"×2\" },\n  { value: 2.5, label: \"×2.5\" },\n]);\n\n/**\n * Ability damage multipliers inherited from held options\n */\nexport const abilityDamageHeldMultipliers = /** @type {const} */ ({\n  oh: 0.5,\n  \"1h\": 1,\n  \"2h\": 1.5,\n});\n\n/**\n * Weapon hold types\n */\nexport const weaponHoldTypes = /** @type {const} */ ({\n  \"1h\": \"PF1.WeaponHoldTypeOneHanded\",\n  \"2h\": \"PF1.WeaponHoldTypeTwoHanded\",\n  oh: \"PF1.WeaponHoldTypeOffhand\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Classification types for item action types\n */\nexport const itemActionTypes = /** @type {const} */ ({\n  mwak: \"PF1.ActionTypes.mwak\",\n  rwak: \"PF1.ActionTypes.rwak\",\n  twak: \"PF1.ActionTypes.twak\",\n  msak: \"PF1.ActionTypes.msak\",\n  rsak: \"PF1.ActionTypes.rsak\",\n  mcman: \"PF1.ActionTypes.mcman\",\n  rcman: \"PF1.ActionTypes.rcman\",\n  spellsave: \"PF1.ActionTypes.spellSave\",\n  save: \"PF1.ActionTypes.save\",\n  heal: \"PF1.ActionTypes.heal\",\n  other: \"PF1.ActionTypes.other\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the lengths of time over which an item can have limited use ability\n */\nexport const limitedUsePeriods = /** @type {const} */ ({\n  single: \"PF1.LimitedUses.Periods.single\",\n  round: \"PF1.LimitedUses.Periods.round\",\n  minute: \"PF1.LimitedUses.Periods.minute\",\n  hour: \"PF1.LimitedUses.Periods.hour\",\n  day: \"PF1.LimitedUses.Periods.day\",\n  week: \"PF1.LimitedUses.Periods.week\",\n  charges: \"PF1.LimitedUses.Periods.charges\",\n});\n\n/**\n * Order of limited use periods from smallest to biggest, omitting periods with no relation to time.\n */\nexport const limitedUsePeriodOrder = /** @type {const} */ ([\"round\", \"minute\", \"hour\", \"day\", \"week\"]);\n\n/* -------------------------------------------- */\n\n/**\n * The various equipment types and their subtypes\n */\nexport const equipmentTypes = /** @type {const} */ ({\n  armor: {\n    _label: \"PF1.Subtypes.Item.equipment.armor.Single\",\n    lightArmor: \"PF1.Subtypes.Item.equipment.armor.Types.light\",\n    mediumArmor: \"PF1.Subtypes.Item.equipment.armor.Types.medium\",\n    heavyArmor: \"PF1.Subtypes.Item.equipment.armor.Types.heavy\",\n  },\n  shield: {\n    _label: \"PF1.Subtypes.Item.equipment.shield.Single\",\n    lightShield: \"PF1.Subtypes.Item.equipment.shield.Types.light\",\n    heavyShield: \"PF1.Subtypes.Item.equipment.shield.Types.heavy\",\n    towerShield: \"PF1.Subtypes.Item.equipment.shield.Types.tower\",\n    other: \"PF1.Subtypes.Item.equipment.shield.Types.misc\",\n  },\n  wondrous: {\n    _label: \"PF1.Subtypes.Item.equipment.wondrous.Single\",\n  },\n  clothing: {\n    _label: \"PF1.Subtypes.Item.equipment.clothing.Single\",\n  },\n  other: {\n    _label: \"PF1.Other\",\n  },\n});\n\n/**\n * The slots equipment can occupy, sorted by category\n */\nexport const equipmentSlots = /** @type {const} */ ({\n  armor: {\n    armor: \"PF1.EquipSlots.armor\",\n  },\n  shield: {\n    shield: \"PF1.EquipSlots.shield\",\n  },\n  wondrous: {\n    slotless: \"PF1.EquipSlots.none\",\n    head: \"PF1.EquipSlots.head\",\n    headband: \"PF1.EquipSlots.headband\",\n    eyes: \"PF1.EquipSlots.eyes\",\n    shoulders: \"PF1.EquipSlots.shoulders\",\n    neck: \"PF1.EquipSlots.neck\",\n    chest: \"PF1.EquipSlots.chest\",\n    body: \"PF1.EquipSlots.body\",\n    belt: \"PF1.EquipSlots.belt\",\n    wrists: \"PF1.EquipSlots.wrists\",\n    hands: \"PF1.EquipSlots.hands\",\n    ring: \"PF1.EquipSlots.ring\",\n    feet: \"PF1.EquipSlots.feet\",\n  },\n  clothing: {\n    clothing: \"PF1.EquipSlots.clothing\",\n  },\n  other: {\n    other: \"PF1.Other\",\n  },\n});\n\nexport const implantTypes = /** @type {const} */ ({\n  cybertech: \"PF1.Subtypes.Item.implant.cybertech.Single\",\n});\n\n/**\n * The slots implants can occupy.\n */\nexport const implantSlots = /** @type {const} */ ({\n  cybertech: {\n    none: \"PF1.Cybertech.Slots.none\",\n    arm: \"PF1.Cybertech.Slots.arm\",\n    body: \"PF1.Cybertech.Slots.body\",\n    brain: \"PF1.Cybertech.Slots.brain\",\n    ears: \"PF1.Cybertech.Slots.ears\",\n    eyes: \"PF1.Cybertech.Slots.eyes\",\n    head: \"PF1.Cybertech.Slots.head\",\n    legs: \"PF1.Cybertech.Slots.legs\",\n  },\n});\n\n/**\n * The subtypes for loot items\n */\nexport const lootTypes = /** @type {const} */ ({\n  gear: \"PF1.Subtypes.Item.loot.gear.Plural\",\n  tool: \"PF1.Subtypes.Item.loot.tool.Plural\",\n  ammo: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n  food: \"PF1.Subtypes.Item.loot.food.Plural\",\n  herb: \"PF1.Subtypes.Item.loot.herb.Plural\",\n  adventuring: \"PF1.Subtypes.Item.loot.adventuring.Plural\",\n  animal: \"PF1.Subtypes.Item.loot.animal.Plural\",\n  animalGear: \"PF1.Subtypes.Item.loot.animalGear.Plural\",\n  reagent: \"PF1.Subtypes.Item.loot.reagent.Plural\",\n  remedy: \"PF1.Subtypes.Item.loot.remedy.Plural\",\n  treasure: \"PF1.Subtypes.Item.loot.treasure.Plural\",\n  tradeGoods: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n  vehicle: \"PF1.Subtypes.Item.loot.vehicle.Plural\",\n  entertainment: \"PF1.Subtypes.Item.loot.entertainment.Plural\",\n  misc: \"PF1.Subtypes.Item.loot.misc.Plural\",\n});\n\n/**\n * Loot subtypes that should not be equippable.\n */\nexport const unequippableLoot = /** @type {const} */ ([\n  \"food\",\n  \"herb\",\n  \"reagent\",\n  \"treasure\",\n  \"tradeGoods\",\n  \"vehicle\",\n  \"entertainment\",\n  \"ammo\",\n]);\n\n/**\n * The subtypes for ammo type loot items\n */\nexport const ammoTypes = /** @type {const} */ ({\n  arrow: \"PF1.AmmoType.arrow\",\n  bolt: \"PF1.AmmoType.bolt\",\n  repeatingBolt: \"PF1.AmmoType.repeatingBolt\",\n  slingBullet: \"PF1.AmmoType.slingBullet\",\n  gunBullet: \"PF1.AmmoType.gunBullet\",\n  dragoonBullet: \"PF1.AmmoType.dragoonBullet\",\n  dart: \"PF1.AmmoType.dart\",\n  siege: \"PF1.AmmoType.siege\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the valid consumable types which are recognized by the system\n */\nexport const consumableTypes = /** @type {const} */ ({\n  potion: \"PF1.Subtypes.Item.consumable.potion.Single\",\n  poison: \"PF1.Subtypes.Item.consumable.poison.Single\",\n  drug: \"PF1.Subtypes.Item.consumable.drug.Single\",\n  scroll: \"PF1.Subtypes.Item.consumable.scroll.Single\",\n  wand: \"PF1.Subtypes.Item.consumable.wand.Single\",\n  rod: \"PF1.Subtypes.Item.consumable.rod.Single\",\n  staff: \"PF1.Subtypes.Item.consumable.staff.Single\",\n  pharmaceutical: \"PF1.Subtypes.Item.consumable.pharmaceutical.Single\",\n  misc: \"PF1.Misc\",\n});\n\nexport const attackTypes = /** @type {const} */ ({\n  weapon: \"PF1.Subtypes.Item.attack.weapon.Single\",\n  natural: \"PF1.Subtypes.Item.attack.natural.Single\",\n  ability: \"PF1.Subtypes.Item.attack.ability.Single\",\n  racialAbility: \"PF1.Subtypes.Item.attack.racialAbility.Single\",\n  item: \"PF1.Item\",\n  misc: \"PF1.Misc\",\n});\n\nexport const featTypes = /** @type {const} */ ({\n  feat: \"PF1.Subtypes.Item.feat.feat.Single\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Single\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Single\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Single\",\n  misc: \"PF1.Misc\",\n  template: \"PF1.Subtypes.Item.feat.template.Single\",\n});\n\nexport const featTypesPlurals = /** @type {const} */ ({\n  feat: \"PF1.Subtypes.Item.feat.feat.Plural\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Plural\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Plural\",\n  template: \"PF1.Subtypes.Item.feat.template.Plural\",\n});\n\nexport const traitTypes = /** @type {const} */ ({\n  combat: \"PF1.Trait.combat\",\n  magic: \"PF1.Trait.magic\",\n  faith: \"PF1.Trait.faith\",\n  social: \"PF1.Trait.social\",\n  campaign: \"PF1.Trait.campaign\",\n  cosmic: \"PF1.Trait.cosmic\",\n  equipment: \"PF1.Trait.equipment\",\n  exemplar: \"PF1.Trait.exemplar\",\n  faction: \"PF1.Trait.faction\",\n  family: \"PF1.Trait.family\",\n  mount: \"PF1.Trait.mount\",\n  race: \"PF1.Trait.race\",\n  region: \"PF1.Trait.region\",\n  religion: \"PF1.Trait.religion\",\n  drawback: \"PF1.Trait.drawback\",\n});\n\nexport const racialTraitCategories = /** @type {const} */ ({\n  defense: \"PF1.RacialTraitCategories.defense\",\n  featSkills: \"PF1.RacialTraitCategories.featSkills\",\n  magical: \"PF1.RacialTraitCategories.magical\",\n  movement: \"PF1.RacialTraitCategories.movement\",\n  senses: \"PF1.RacialTraitCategories.senses\",\n  offense: \"PF1.RacialTraitCategories.offense\",\n  other: \"PF1.RacialTraitCategories.other\",\n  weakness: \"PF1.RacialTraitCategories.weakness\",\n});\n\nexport const raceTypes = /** @type {const} */ ({\n  standard: \"PF1.RaceTypes.standard\",\n  advanced: \"PF1.RaceTypes.advanced\",\n  monstrous: \"PF1.RaceTypes.monstrous\",\n});\n\n/**\n * Ability types, each with their short and their long form\n */\nexport const abilityTypes = /** @type {const} */ ({\n  na: {\n    long: \"PF1.AbilityTypes.na.Label\",\n    short: \"PF1.AbilityTypes.na.Short\",\n  },\n  ex: {\n    long: \"PF1.AbilityTypes.ex.Label\",\n    short: \"PF1.AbilityTypes.ex.Short\",\n  },\n  su: {\n    long: \"PF1.AbilityTypes.su.Label\",\n    short: \"PF1.AbilityTypes.su.Short\",\n  },\n  sp: {\n    long: \"PF1.AbilityTypes.sp.Label\",\n    short: \"PF1.AbilityTypes.sp.Short\",\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * The valid currency denominations supported by the game system\n */\nexport const currencies = /** @type {const} */ ({\n  pp: \"PF1.Currency.Abbr.pp\",\n  gp: \"PF1.Currency.Abbr.gp\",\n  sp: \"PF1.Currency.Abbr.sp\",\n  cp: \"PF1.Currency.Abbr.cp\",\n});\n\n/**\n * Currency\n */\nexport const currency = /** @type {const} */ ({\n  /**\n   * Conversion rates in relation to {@link currency.base base currency}.\n   */\n  rate: {\n    pp: 1_000,\n    gp: 100,\n    sp: 10,\n  },\n\n  /**\n   * Standard currency.\n   *\n   * Most things are valued in this unit.\n   */\n  standard: \"gp\",\n\n  /**\n   * Baseline currency.\n   *\n   * This should always be the lowest valued and most compatible currency, as otherwise rounding errors are likely to occur.\n   */\n  base: \"cp\",\n\n  /**\n   * Standard rate.\n   *\n   * @remarks\n   * - Equivalent of `rate[standard] || 1`\n   *\n   * @type {number}\n   */\n  get standardRate() {\n    return this.rate[this.standard] || 1;\n  },\n});\n\n/**\n * Resultant armor types for an actor's worn armor as per their roll data\n *\n * @see {@link ActorPF.getRollData ActorRollData.armor.type}\n * @readonly\n * @enum {number}\n */\nexport const armorTypes = /** @type {const} */ ({\n  none: 0,\n  light: 1,\n  medium: 2,\n  heavy: 3,\n});\n\n/**\n * Resultant shield types for an actor's worn shield\n *\n * @see {@link ActorPF.getRollData ActorRollData.shield.type}\n * @readonly\n * @enum {number}\n */\nexport const shieldTypes = /** @type {const} */ ({\n  none: 0,\n  other: 1, // buckler\n  light: 2,\n  heavy: 3,\n  tower: 4,\n});\n\n/**\n * The types of bonus modifiers\n */\nexport const bonusTypes = /** @type {const} */ ({\n  untyped: \"PF1.ModifierType.untyped\",\n  untypedPerm: \"PF1.ModifierType.untypedPerm\",\n  base: \"PF1.ModifierType.base\",\n  enh: \"PF1.ModifierType.enhancement\",\n  dodge: \"PF1.ModifierType.dodge\",\n  haste: \"PF1.ModifierType.haste\",\n  inherent: \"PF1.ModifierType.inherent\",\n  deflection: \"PF1.ModifierType.deflection\",\n  morale: \"PF1.ModifierType.morale\",\n  luck: \"PF1.ModifierType.luck\",\n  sacred: \"PF1.ModifierType.sacred\",\n  insight: \"PF1.ModifierType.insight\",\n  resist: \"PF1.ModifierType.resistance\",\n  profane: \"PF1.ModifierType.profane\",\n  trait: \"PF1.ModifierType.trait\",\n  racial: \"PF1.ModifierType.racial\",\n  size: \"PF1.ModifierType.size\",\n  competence: \"PF1.ModifierType.competence\",\n  circumstance: \"PF1.ModifierType.circumstance\",\n  alchemical: \"PF1.ModifierType.alchemical\",\n});\n\n/**\n * An array of stacking bonus types by their keys for {@link bonusTypes}\n */\nexport const stackingBonusTypes = /** @type {const} */ ([\"untyped\", \"untypedPerm\", \"dodge\", \"racial\", \"circumstance\"]);\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n/**\n * Valid options for the range of abilities and spells\n */\nexport const distanceUnits = /** @type {const} */ ({\n  none: \"PF1.None\",\n  personal: \"PF1.Distance.personal\",\n  touch: \"PF1.Distance.touch\",\n  melee: \"PF1.Distance.melee\",\n  reach: \"PF1.Distance.reach\",\n  close: \"PF1.Distance.close\",\n  medium: \"PF1.Distance.medium\",\n  long: \"PF1.Distance.long\",\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  spec: \"PF1.Special\",\n  seeText: \"PF1.SeeText\",\n  unlimited: \"PF1.Unlimited\",\n});\n\nexport const measureUnits = /** @type {const} */ ({\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  m: \"PF1.Distance.m\",\n  km: \"PF1.Distance.km\",\n});\n\nexport const measureUnitsShort = /** @type {const} */ ({\n  ft: \"PF1.Distance.ftShort\",\n  mi: \"PF1.Distance.miShort\",\n  m: \"PF1.Distance.mShort\",\n  km: \"PF1.Distance.kmShort\",\n});\n\n/**\n * Weight units\n */\nexport const weightUnitsShort = {\n  kg: \"PF1.Kgs\",\n  lbs: \"PF1.Lbs\",\n};\n\nexport const actorStatures = /** @type {const} */ ({\n  tall: \"PF1.StatureTall\",\n  long: \"PF1.StatureLong\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * This Object defines the various lengths of time which can occur in PF1\n */\nexport const timePeriods = /** @type {const} */ ({\n  inst: \"PF1.Time.Period.inst.Label\",\n  turn: \"PF1.Time.Period.turn.Label\",\n  round: \"PF1.Time.Period.round.Label\",\n  minute: \"PF1.Time.Period.minute.Label\",\n  hour: \"PF1.Time.Period.hour.Label\",\n  day: \"PF1.Time.Period.day.Label\",\n  month: \"PF1.Time.Period.month.Label\",\n  year: \"PF1.Time.Period.year.Label\",\n  perm: \"PF1.Time.Period.perm.Label\",\n  seeText: \"PF1.SeeText\",\n  spec: \"PF1.Special\",\n});\n\n/**\n * Short form labels for time periods, and valid options for buff durations.\n */\nexport const timePeriodsShort = /** @type {const} */ ({\n  turn: \"PF1.Time.Period.turn.Short\",\n  round: \"PF1.Time.Period.round.Short\",\n  minute: \"PF1.Time.Period.minute.Short\",\n  hour: \"PF1.Time.Period.hour.Short\",\n});\n\n/**\n * Duration end events\n *\n * Used by buffs to decide when exactly their duration ends.\n */\nexport const durationEndEvents = /** @type {const} */ ({\n  turnStart: \"PF1.Time.Turn.Start\",\n  initiative: \"PF1.Initiative\",\n  turnEnd: \"PF1.Time.Turn.End\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Caster types.\n *\n * Keys match options in {@link casterProgression}\n */\nexport const caster = /** @type {const} */ ({\n  /**\n   * Preparation types.\n   */\n  type: {\n    prepared: {\n      label: \"PF1.SpellPrepPrepared\",\n      spontaneous: false,\n      prepared: true,\n    },\n    spontaneous: {\n      label: \"PF1.SpellPrepSpontaneous\",\n      spontaneous: true,\n      prepared: false,\n    },\n    hybrid: {\n      label: \"PF1.Arcanist\",\n      spontaneous: true,\n      prepared: true,\n    },\n    prestige: {\n      label: \"PF1.RedMantisAssassin\",\n      spontaneous: true,\n      prepared: false,\n    },\n  },\n  /**\n   * Progression choices.\n   */\n  progression: {\n    high: {\n      label: \"PF1.High\",\n    },\n    med: {\n      label: \"PF1.Medium\",\n    },\n    low: {\n      label: \"PF1.Low\",\n    },\n  },\n});\n\n/**\n * This Object determines spells gained and cast per level\n */\nexport const casterProgression = /** @type {const} */ ({\n  castsPerDay: {\n    prepared: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 0],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 0],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2],\n        [Number.POSITIVE_INFINITY, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 5],\n        [Number.POSITIVE_INFINITY, 6, 3],\n        [Number.POSITIVE_INFINITY, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n      ],\n    },\n    hybrid: {\n      high: [\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    prestige: {\n      low: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n      ],\n    },\n  },\n  spellsPreparedPerDay: {\n    prepared: {\n      low: [\n        [null],\n        [null],\n        [null],\n        [null, 0],\n        [null, 1],\n        [null, 1],\n        [null, 1, 0],\n        [null, 1, 1],\n        [null, 2, 1],\n        [null, 2, 1, 0],\n        [null, 2, 1, 1],\n        [null, 2, 2, 1],\n        [null, 3, 2, 1, 0],\n        [null, 3, 2, 1, 1],\n        [null, 3, 2, 2, 1],\n        [null, 3, 3, 2, 1],\n        [null, 4, 3, 2, 1],\n        [null, 4, 3, 2, 2],\n        [null, 4, 3, 3, 2],\n        [null, 4, 4, 3, 3],\n      ],\n      med: [\n        [3, 1],\n        [4, 2],\n        [4, 3],\n        [4, 3, 1],\n        [4, 4, 2],\n        [5, 4, 3],\n        [5, 4, 3, 1],\n        [5, 4, 4, 2],\n        [5, 5, 4, 3],\n        [5, 5, 4, 3, 1],\n        [5, 5, 4, 4, 2],\n        [5, 5, 5, 4, 3],\n        [5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 5, 5, 4],\n        [5, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [3, 1],\n        [4, 2],\n        [4, 2, 1],\n        [4, 3, 2],\n        [4, 3, 2, 1],\n        [4, 3, 3, 2],\n        [4, 4, 3, 2, 1],\n        [4, 4, 3, 3, 2],\n        [4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [2],\n        [3],\n        [4],\n        [4, 2],\n        [5, 3],\n        [5, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 5, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 6, 5, 4],\n        [6, 6, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n      ],\n      med: [\n        [4, 2],\n        [5, 3],\n        [6, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 4, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 5, 4, 4],\n        [6, 5, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 5, 4, 4],\n        [6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 6, 5, 5, 4],\n        [6, 6, 6, 6, 6, 5, 5],\n      ],\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    hybrid: {\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    prestige: {\n      low: [\n        [null, 2],\n        [null, 3],\n        [null, 4],\n        [null, 4, 2],\n        [null, 4, 3],\n        [null, 4, 4],\n        [null, 5, 4, 2],\n        [null, 5, 4, 3],\n        [null, 5, 4, 4],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n      ],\n    },\n  },\n});\n\n/* -------------------------------------------- */\n\n/**\n * Character senses options\n */\nexport const senses = /** @type {const} */ ({\n  bs: \"PF1.Sense.blindsight\",\n  bse: \"PF1.Sense.blindsense\",\n  dv: \"PF1.Sense.darkvision\",\n  ts: \"PF1.Sense.tremorsense\",\n  tr: \"PF1.Sense.trueseeing\",\n  ll: \"PF1.Sense.lowlight\",\n  ls: \"PF1.Sense.lifesense\",\n  si: \"PF1.Sense.seeInvis\",\n  sid: \"PF1.Sense.seeInDark\",\n  sc: \"PF1.Sense.scent\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * The set of skill which can be trained in PF1\n */\nexport const skills = /** @type {const} */ ({\n  acr: \"PF1.SkillAcr\",\n  apr: \"PF1.SkillApr\",\n  art: \"PF1.SkillArt\",\n  blf: \"PF1.SkillBlf\",\n  clm: \"PF1.SkillClm\",\n  crf: \"PF1.SkillCrf\",\n  dip: \"PF1.SkillDip\",\n  dev: \"PF1.SkillDev\",\n  dis: \"PF1.SkillDis\",\n  esc: \"PF1.SkillEsc\",\n  fly: \"PF1.SkillFly\",\n  han: \"PF1.SkillHan\",\n  hea: \"PF1.SkillHea\",\n  int: \"PF1.SkillInt\",\n  kar: \"PF1.SkillKAr\",\n  kdu: \"PF1.SkillKDu\",\n  ken: \"PF1.SkillKEn\",\n  kge: \"PF1.SkillKGe\",\n  khi: \"PF1.SkillKHi\",\n  klo: \"PF1.SkillKLo\",\n  kna: \"PF1.SkillKNa\",\n  kno: \"PF1.SkillKNo\",\n  kpl: \"PF1.SkillKPl\",\n  kre: \"PF1.SkillKRe\",\n  lin: \"PF1.SkillLin\",\n  lor: \"PF1.SkillLor\",\n  per: \"PF1.SkillPer\",\n  prf: \"PF1.SkillPrf\",\n  pro: \"PF1.SkillPro\",\n  rid: \"PF1.SkillRid\",\n  sen: \"PF1.SkillSen\",\n  slt: \"PF1.SkillSlt\",\n  spl: \"PF1.SkillSpl\",\n  ste: \"PF1.SkillSte\",\n  sur: \"PF1.SkillSur\",\n  swm: \"PF1.SkillSwm\",\n  umd: \"PF1.SkillUMD\",\n});\n\n/**\n * Compendium journal entries containing details about {@link skills}\n */\nexport const skillCompendiumEntries = /** @type {const} */ ({\n  acr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.gGfJO90ZuRT4sZ9X\",\n  apr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.QGxoGsSIAOoe5dTW\",\n  art: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.vH2PLto0QPzkG4io\",\n  blf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.kRK5XwVBvcMi35w2\",\n  clm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ZAwjVOTwsBpZRgw4\",\n  crf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.3E8pxbjI8MD3JbfQ\",\n  dip: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.uB9Fy36RUjibxqvt\",\n  dev: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.cSdUATLHBFfw3v4s\",\n  dis: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xg25z3GIpS590NDW\",\n  esc: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DTNlXXg77s3178WJ\",\n  fly: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.iH69GIwm8BjecrPN\",\n  han: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.IrVgSeMcAM8rAh2B\",\n  hea: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.nHbYSOoe1SzqEO9w\",\n  int: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.KNn8uxHu23phKC0y\",\n  kar: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kdu: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  ken: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kge: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  khi: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  klo: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kna: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kno: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kpl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kre: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  lin: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.SqLm3Deag2FpP8ty\",\n  lor: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.rExcBHs5GTiWLlo8\",\n  per: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.2h6hz5AkTDxKPFxr\",\n  prf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.emzBKDFNkNnC7N8u\",\n  pro: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.224EaK0K72NhCeRi\",\n  rid: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xQbTtefpEfEaOYo7\",\n  sen: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ka0VQGItdrWw3paO\",\n  slt: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.joza8kAIiImrPft7\",\n  spl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.VRD7jxiIAxKPt6EF\",\n  ste: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.wRWHk7tCUHR99PzD\",\n  sur: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.pLdYavy4nssLEoGV\",\n  swm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xhmDhOXuBbfVcD0Q\",\n  umd: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.A8j7nF6qHwuGEC2E\",\n});\n\n/**\n * An array of {@link skills} that can have arbitrary subskills\n */\nexport const arbitrarySkills = /** @type {const} */ ([\"art\", \"crf\", \"lor\", \"prf\", \"pro\"]);\n\n/**\n * An array of {@link skills} that are considered background skills.\n */\nexport const backgroundSkills = /** @type {const} */ ([\n  \"apr\",\n  \"art\",\n  \"crf\",\n  \"han\",\n  \"ken\",\n  \"kge\",\n  \"khi\",\n  \"kno\",\n  \"lin\",\n  \"lor\",\n  \"prf\",\n  \"pro\",\n  \"slt\",\n]);\n\n/**\n * Array of skills that are only shown with background skills optional rule enabled.\n */\nexport const backgroundOnlySkills = /** @type {const} */ ([\"lor\", \"art\"]);\n\n/**\n * Number of background skills per level gained from valid classes.\n *\n * @type {number}\n */\nexport const backgroundSkillsPerLevel = 2;\n\n/**\n * Valid class types to grant background skills.\n */\nexport const backgroundSkillClasses = /** @type {const} */ ([\"base\", \"prestige\"]);\n\n/**\n * Valid class types to grant favored class bonuses.\n *\n * @remarks\n * - Prestige is included due to Favored Prestige Class feat.\n * - NPC is also valid as it is not omitted by any rules about favored class.\n * - Only mythic paths and racial HD are omitted.\n * @see https://www.aonprd.com/Rules.aspx?ID=344\n */\nexport const favoredClassTypes = /** @type {const} */ ([\"base\", \"prestige\", \"npc\"]);\n\n/**\n * Bonus modifier granted to class skills.\n *\n * @type {number}\n */\nexport const classSkillBonus = 3;\n\n/* -------------------------------------------- */\n\nexport const classCasterType = /** @type {const} */ ({\n  sorcerer: \"high\",\n  wizard: \"high\",\n  cleric: \"high\",\n  oracle: \"high\",\n  druid: \"high\",\n  psychic: \"high\",\n  shaman: \"high\",\n  witch: \"high\",\n  alchemist: \"med\",\n  bard: \"med\",\n  hunter: \"med\",\n  inquisitor: \"med\",\n  investigator: \"med\",\n  magus: \"med\",\n  mesmerist: \"med\",\n  occultist: \"med\",\n  skald: \"med\",\n  spiritualist: \"med\",\n  summoner: \"med\",\n  summonerUnchained: \"med\",\n  antipaladin: \"low\",\n  bloodrager: \"low\",\n  medium: \"low\",\n  paladin: \"low\",\n  ranger: \"low\",\n});\n\nexport const spellcasting = /** @type {const} */ ({\n  type: {\n    spontaneous: \"PF1.SpellPrepSpontaneous\",\n    prepared: \"PF1.SpellPrepPrepared\",\n    hybrid: \"PF1.Arcanist\",\n  },\n  spells: {\n    arcane: \"PF1.Spellcasting.Type.Arcane\",\n    divine: \"PF1.Spellcasting.Type.Divine\",\n    psychic: \"PF1.Spellcasting.Type.Psychic\",\n    alchemy: \"PF1.Spellcasting.Type.Alchemy\",\n  },\n});\n\nexport const spellDescriptors = /** @type {const} */ ({\n  acid: \"PF1.SpellDescriptors.acid\",\n  air: \"PF1.SpellDescriptors.air\",\n  chaotic: \"PF1.SpellDescriptors.chaotic\",\n  cold: \"PF1.SpellDescriptors.cold\",\n  curse: \"PF1.SpellDescriptors.curse\",\n  darkness: \"PF1.SpellDescriptors.darkness\",\n  death: \"PF1.SpellDescriptors.death\",\n  disease: \"PF1.SpellDescriptors.disease\",\n  draconic: \"PF1.SpellDescriptors.draconic\",\n  earth: \"PF1.SpellDescriptors.earth\",\n  electricity: \"PF1.SpellDescriptors.electricity\",\n  emotion: \"PF1.SpellDescriptors.emotion\",\n  evil: \"PF1.SpellDescriptors.evil\",\n  fear: \"PF1.SpellDescriptors.fear\",\n  fire: \"PF1.SpellDescriptors.fire\",\n  force: \"PF1.SpellDescriptors.force\",\n  good: \"PF1.SpellDescriptors.good\",\n  languageDependent: \"PF1.SpellDescriptors.languageDependent\",\n  lawful: \"PF1.SpellDescriptors.lawful\",\n  light: \"PF1.SpellDescriptors.light\",\n  meditative: \"PF1.SpellDescriptors.meditative\",\n  mindAffecting: \"PF1.SpellDescriptors.mindAffecting\",\n  pain: \"PF1.SpellDescriptors.pain\",\n  poison: \"PF1.SpellDescriptors.poison\",\n  ruse: \"PF1.SpellDescriptors.ruse\",\n  shadow: \"PF1.SpellDescriptors.shadow\",\n  sonic: \"PF1.SpellDescriptors.sonic\",\n  water: \"PF1.SpellDescriptors.water\",\n});\n\nexport const magicAuraByLevel = /** @type {const} */ ({\n  spell: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 4 },\n    { power: \"strong\", level: 7 },\n    { power: \"overwhelming\", level: 10 },\n  ],\n  item: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 6 },\n    { power: \"strong\", level: 12 },\n    { power: \"overwhelming\", level: 21 },\n  ],\n});\n\nexport const auraStrengths = /** @type {const} */ ({\n  1: \"PF1.Aura.Strength.faint\",\n  2: \"PF1.Aura.Strength.moderate\",\n  3: \"PF1.Aura.Strength.strong\",\n  4: \"PF1.Aura.Strength.overwhelming\",\n});\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n// Weapon Types\nexport const weaponTypes = /** @type {const} */ ({\n  simple: {\n    _label: \"PF1.Subtypes.Item.weapon.simple.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  martial: {\n    _label: \"PF1.Subtypes.Item.weapon.martial.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  exotic: {\n    _label: \"PF1.Subtypes.Item.weapon.exotic.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  firearm: {\n    _label: \"PF1.Subtypes.Item.weapon.firearm.Single\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  siege: {\n    _label: \"PF1.Subtypes.Item.weapon.siege.Single\",\n    assault: \"PF1.WeaponSubtypeAssault\",\n    indirect: \"PF1.WeaponSubtypeIndirect\",\n    direct: \"PF1.WeaponSubtypeDirect\",\n  },\n  heavy: {\n    _label: \"PF1.Subtypes.Item.weapon.heavy.Single\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  misc: {\n    _label: \"PF1.Subtypes.Item.weapon.misc.Single\",\n    splash: \"PF1.WeaponTypeSplash\",\n    other: \"PF1.Other\",\n  },\n});\n\n/**\n * Weapon groups that a weapon can belong to\n */\nexport const weaponGroups = /** @type {const} */ ({\n  axes: \"PF1.WeaponGroup.axes\",\n  bladesHeavy: \"PF1.WeaponGroup.bladesHeavy\",\n  bladesLight: \"PF1.WeaponGroup.bladesLight\",\n  bows: \"PF1.WeaponGroup.bows\",\n  close: \"PF1.WeaponGroup.close\",\n  crossbows: \"PF1.WeaponGroup.crossbows\",\n  double: \"PF1.WeaponGroup.double\",\n  firearms: \"PF1.WeaponGroup.firearms\",\n  flails: \"PF1.WeaponGroup.flails\",\n  hammers: \"PF1.WeaponGroup.hammers\",\n  monk: \"PF1.WeaponGroup.monk\",\n  natural: \"PF1.WeaponGroup.natural\",\n  polearms: \"PF1.WeaponGroup.polearms\",\n  siegeEngines: \"PF1.WeaponGroup.siegeEngines\",\n  spears: \"PF1.WeaponGroup.spears\",\n  thrown: \"PF1.WeaponGroup.thrown\",\n  tribal: \"PF1.WeaponGroup.tribal\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Define the set of weapon property flags which can exist on a weapon\n */\nexport const weaponProperties = /** @type {const} */ ({\n  ato: \"PF1.WeaponProperty.Automatic\",\n  blc: \"PF1.WeaponProperty.Blocking\",\n  brc: \"PF1.WeaponProperty.Brace\",\n  dea: \"PF1.WeaponProperty.Deadly\",\n  dst: \"PF1.WeaponProperty.Distracting\",\n  dbl: \"PF1.WeaponProperty.Double\",\n  dis: \"PF1.WeaponProperty.Disarm\",\n  fin: \"PF1.WeaponProperty.Finesse\",\n  frg: \"PF1.WeaponProperty.Fragile\",\n  grp: \"PF1.WeaponProperty.Grapple\",\n  imp: \"PF1.WeaponProperty.Improvised\",\n  mnk: \"PF1.WeaponProperty.Monk\",\n  nnl: \"PF1.WeaponProperty.NonLethal\",\n  prf: \"PF1.WeaponProperty.Performance\",\n  rch: \"PF1.WeaponProperty.Reach\",\n  sct: \"PF1.WeaponProperty.Scatter\",\n  sma: \"PF1.WeaponProperty.SemiAutomatic\",\n  slf: \"PF1.WeaponProperty.SlowFiring\",\n  snd: \"PF1.WeaponProperty.Sunder\",\n  spc: \"PF1.WeaponProperty.Special\",\n  thr: \"PF1.WeaponProperty.Thrown\",\n  trp: \"PF1.WeaponProperty.Trip\",\n});\n\n/**\n * The components required for casting a spell\n */\nexport const spellComponents = /** @type {const} */ ({\n  verbal: \"PF1.SpellComponents.Type.verbal.Abbr\",\n  somatic: \"PF1.SpellComponents.Type.somatic.Abbr\",\n  thought: \"PF1.SpellComponents.Type.thought.Abbr\",\n  emotion: \"PF1.SpellComponents.Type.emotion.Abbr\",\n  material: \"PF1.SpellComponents.Type.material.Abbr\",\n  focus: \"PF1.SpellComponents.Type.focus.Abbr\",\n  divineFocus: \"PF1.SpellComponents.Type.divineFocus.Abbr\",\n});\n\n/**\n * Spell schools\n */\nexport const spellSchools = /** @type {const} */ ({\n  abj: \"PF1.SpellSchools.abj\",\n  con: \"PF1.SpellSchools.con\",\n  div: \"PF1.SpellSchools.div\",\n  enc: \"PF1.SpellSchools.enc\",\n  evo: \"PF1.SpellSchools.evo\",\n  ill: \"PF1.SpellSchools.ill\",\n  nec: \"PF1.SpellSchools.nec\",\n  trs: \"PF1.SpellSchools.tra\",\n  uni: \"PF1.SpellSchools.uni\",\n  misc: \"PF1.Misc\",\n});\n\n/**\n * Spell subschools\n */\nexport const spellSubschools = /** @type {const} */ ({\n  calling: \"PF1.SpellSubschools.calling\",\n  charm: \"PF1.SpellSubschools.charm\",\n  compulsion: \"PF1.SpellSubschools.compulsion\",\n  creation: \"PF1.SpellSubschools.creation\",\n  figment: \"PF1.SpellSubschools.figment\",\n  glamer: \"PF1.SpellSubschools.glamer\",\n  haunted: \"PF1.SpellSubschools.haunted\",\n  healing: \"PF1.SpellSubschools.healing\",\n  pattern: \"PF1.SpellSubschools.pattern\",\n  phantasm: \"PF1.SpellSubschools.phantasm\",\n  polymorph: \"PF1.SpellSubschools.polymorph\",\n  scrying: \"PF1.SpellSubschools.scrying\",\n  shadow: \"PF1.SpellSubschools.shadow\",\n  summoning: \"PF1.SpellSubschools.summoning\",\n  teleportation: \"PF1.SpellSubschools.teleportation\",\n});\n\n/**\n * Dictionary of subschools per shool\n *\n * @satisfies {Record<keyof typeof spellSchools, Array<keyof typeof spellSubschools>>}\n */\nexport const spellSubschoolsMap = /** @type {const} */ ({\n  abj: [],\n  con: [\"calling\", \"creation\", \"healing\", \"summoning\", \"teleportation\"],\n  div: [\"scrying\"],\n  enc: [\"charm\", \"compulsion\"],\n  evo: [],\n  ill: [\"figment\", \"glamer\", \"pattern\", \"phantasm\", \"shadow\"],\n  nec: [\"haunted\"],\n  trs: [\"polymorph\"],\n  uni: [],\n  misc: Object.keys(spellSubschools),\n});\n\n/**\n * Spell levels\n */\nexport const spellLevels = /** @type {const} */ ({\n  0: \"PF1.SpellLevels.0\",\n  1: \"PF1.SpellLevels.1\",\n  2: \"PF1.SpellLevels.2\",\n  3: \"PF1.SpellLevels.3\",\n  4: \"PF1.SpellLevels.4\",\n  5: \"PF1.SpellLevels.5\",\n  6: \"PF1.SpellLevels.6\",\n  7: \"PF1.SpellLevels.7\",\n  8: \"PF1.SpellLevels.8\",\n  9: \"PF1.SpellLevels.9\",\n});\n\n/* -------------------------------------------- */\n\n/**\n * Condition types for condition immunities and resistances selection\n */\nexport const conditionTypes = /** @type {const} */ ({\n  bleed: \"PF1.Condition.bleed\",\n  blind: \"PF1.Condition.blind\",\n  confuse: \"PF1.Condition.confused\",\n  curse: \"PF1.Condition.curse\",\n  daze: \"PF1.Condition.dazed\",\n  dazzle: \"PF1.Condition.dazzled\",\n  deaf: \"PF1.Condition.deaf\",\n  deathEffects: \"PF1.Condition.deathEffects\",\n  disease: \"PF1.Condition.disease\",\n  energyDrain: \"PF1.Condition.energyDrain\",\n  exhausted: \"PF1.Condition.exhausted\",\n  fatigue: \"PF1.Condition.fatigued\",\n  fear: \"PF1.Condition.fear\",\n  moraleEffects: \"PF1.Condition.moraleEffects\",\n  mindAffecting: \"PF1.Condition.mindAffecting\",\n  poison: \"PF1.Condition.poison\",\n  sicken: \"PF1.Condition.sickened\",\n  paralyze: \"PF1.Condition.paralyzed\",\n  petrify: \"PF1.Condition.petrified\",\n  polymorph: \"PF1.Condition.polymorph\",\n  stun: \"PF1.Condition.stunned\",\n  sleep: \"PF1.Condition.sleep\",\n});\n\nexport const buffTypes = /** @type {const} */ ({\n  temp: \"PF1.Subtypes.Item.buff.temp.Single\",\n  spell: \"PF1.Subtypes.Item.buff.spell.Single\",\n  feat: \"PF1.Subtypes.Item.buff.feat.Single\",\n  perm: \"PF1.Subtypes.Item.buff.perm.Single\",\n  item: \"PF1.Subtypes.Item.buff.item.Single\",\n  misc: \"PF1.Subtypes.Item.buff.misc.Single\",\n});\n\n/**\n * Formula for determining extra attacks for BAB iteratives\n *\n * @type {string}\n */\nexport const iterativeExtraAttacks = \"min(3, ceil(@bab / 5) - 1)\";\n\n/**\n * Formula for determining attack modifier for BAB iteratives\n *\n * @type {string}\n */\nexport const iterativeAttackModifier = \"@attackCount * -5\";\n\n/**\n * Natural attack configuration.\n *\n * @todo Move more hardcoded definitions here.\n */\nexport const naturalAttacks = /** @type {const} */ ({\n  secondary: {\n    penalty: \"-5\",\n  },\n});\n\n/**\n * Extra Attacks configurations\n *\n * @example\n * Custom additional option\n * ```js\n * pf1.config.extraAttacks.turboMonk = {\n *   label: \"Turbo Monk\",\n *   iteratives: true,\n *   count: \"floor(@bab / 3)\",\n *   bonus: \"@attackCount * -2\",\n *   manual: true,\n * };\n * ```\n */\nexport const extraAttacks = /** @type {const} */ ({\n  // Standard: BAB iteratives\n  standard: {\n    label: \"PF1.ExtraAttacks.Standard\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Advanced: BAB iteratives + manual extra attacks and custom formula\n  advanced: {\n    label: \"PF1.ExtraAttacks.Advanced\",\n    iteratives: true,\n    manual: true,\n    formula: true,\n  },\n  // Chained Monk's Flurry of Blows\n  // Requires BAB override and class association\n  flurry: {\n    label: \"PF1.ExtraAttacks.Flurry\",\n    count: \"ceil(@class.level / 7)\",\n    bonus: \"-(@attackSetCount * 5)\",\n    attackName: \"PF1.ExtraAttacks.FlurryAttack\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    modToAll: \"-(@fullAttack * 2)\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Unchained Monk's Flurry of Blows\n  // Requires class association\n  unflurry: {\n    label: \"PF1.ExtraAttacks.UnFlurry\",\n    count: \"floor((@class.level + 9) / 10)\",\n    //bonus: \"0\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    attackName: \"PF1.ExtraAttacks.FlurryAttack\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Custom: No BAB iteratives but with manual extra attacks and custom formula\n  custom: {\n    label: \"PF1.ExtraAttacks.Custom\",\n    iteratives: false,\n    manual: true,\n    formula: true,\n  },\n});\n\n/**\n * Conditional modifier targets\n *\n * Dictionaries of conditional modifier targets, each with a label and sub-categories\n */\nexport const conditionalTargets = /** @type {const} */ ({\n  attack: {\n    _label: \"PF1.AttackRollPlural\",\n    allAttack: \"PF1.All\",\n    hasteAttack: \"PF1.Haste\",\n    rapidShotAttack: \"PF1.RapidShot\",\n  },\n  damage: {\n    _label: \"PF1.Damage\",\n    allDamage: \"PF1.All\",\n    hasteDamage: \"PF1.Haste\",\n    rapidShotDamage: \"PF1.RapidShot\",\n  },\n  size: {\n    _label: \"PF1.Size\",\n  },\n  critMult: {\n    _label: \"PF1.CriticalMultiplier\",\n  },\n  effect: {\n    _label: \"PF1.Effects\",\n  },\n  misc: {\n    _label: \"PF1.MiscShort\",\n  },\n});\n\n// Default filters to exclude secondary actors\nconst baseActorFilters = () => ({ actor: { exclude: [\"haunt\", \"vehicle\", \"trap\"] } });\n\n/**\n * Change targets\n *\n * Dictionaries of change/buff targets, each with a label and a category it belongs to,\n * as well as a sort value that determines this buffTarget's priority when Changes are applied.\n */\nexport const buffTargets = /** @type {const} */ ({\n  acpA: { label: \"PF1.ACPArmor\", category: \"misc\", sort: 10000, filters: { ...baseActorFilters() } },\n  acpS: { label: \"PF1.ACPShield\", category: \"misc\", sort: 11000, filters: { ...baseActorFilters() } },\n  mDexA: { label: \"PF1.MaxDexArmor\", category: \"misc\", sort: 20000 },\n  mDexS: { label: \"PF1.MaxDexShield\", category: \"misc\", sort: 21000 },\n  // Ability scores\n  str: { label: \"PF1.AbilityStr\", category: \"ability\", sort: 30000 },\n  dex: { label: \"PF1.AbilityDex\", category: \"ability\", sort: 31000 },\n  con: { label: \"PF1.AbilityCon\", category: \"ability\", sort: 32000 },\n  int: { label: \"PF1.AbilityInt\", category: \"ability\", sort: 33000 },\n  wis: { label: \"PF1.AbilityWis\", category: \"ability\", sort: 34000 },\n  cha: { label: \"PF1.AbilityCha\", category: \"ability\", sort: 35000 },\n  strMod: { label: \"PF1.AbilityStrMod\", category: \"ability\", sort: 40000 },\n  dexMod: { label: \"PF1.AbilityDexMod\", category: \"ability\", sort: 41000 },\n  conMod: { label: \"PF1.AbilityConMod\", category: \"ability\", sort: 42000 },\n  intMod: { label: \"PF1.AbilityIntMod\", category: \"ability\", sort: 43000 },\n  wisMod: { label: \"PF1.AbilityWisMod\", category: \"ability\", sort: 44000 },\n  chaMod: { label: \"PF1.AbilityChaMod\", category: \"ability\", sort: 45000 },\n  strPen: { label: \"PF1.AbilityStrPen\", category: \"ability\", sort: 50000 },\n  dexPen: { label: \"PF1.AbilityDexPen\", category: \"ability\", sort: 51000 },\n  conPen: { label: \"PF1.AbilityConPen\", category: \"ability\", sort: 52000 },\n  intPen: { label: \"PF1.AbilityIntPen\", category: \"ability\", sort: 53000 },\n  wisPen: { label: \"PF1.AbilityWisPen\", category: \"ability\", sort: 54000 },\n  chaPen: { label: \"PF1.AbilityChaPen\", category: \"ability\", sort: 55000 },\n  // Carrying\n  carryStr: { label: \"PF1.CarryStrength\", category: \"misc\", sort: 60000, filters: { ...baseActorFilters() } },\n  carryMult: { label: \"PF1.CarryMultiplier\", category: \"misc\", sort: 61000, filters: { ...baseActorFilters() } },\n  // Size\n  size: { label: \"PF1.Size\", category: \"misc\", sort: 63000, filters: { ...baseActorFilters() }, simple: true },\n  reach: { label: \"PF1.BuffTarReach\", category: \"misc\", sort: 65000 },\n  // Age\n  ageCategory: { label: \"PF1.AgeCategory.Base\", category: \"misc\", sort: 62000, filters: { ...baseActorFilters() } },\n  ageCategoryPhysical: {\n    label: \"PF1.AgeCategory.Physical\",\n    category: \"misc\",\n    sort: 62250,\n    filters: { ...baseActorFilters() },\n  },\n  ageCategoryMental: {\n    label: \"PF1.AgeCategory.Mental\",\n    category: \"misc\",\n    sort: 62500,\n    filters: { ...baseActorFilters() },\n  },\n  // Skills\n  skills: {\n    label: \"PF1.BuffTarAllSkills\",\n    category: \"skills\",\n    sort: 75_000, // Specific skills inherit this number and go up from there\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  unskills: {\n    label: \"PF1.BuffTarUntrainedSkills\",\n    category: \"skills\",\n    sort: 75_010,\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  // Ability skills\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\", sort: 80_100, deferred: true },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\", sort: 80_200, deferred: true },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\", sort: 80_300, deferred: true },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\", sort: 80_400, deferred: true },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\", sort: 80_500, deferred: true },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\", sort: 80_600, deferred: true },\n  // Ability checks\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\", sort: 81_000, deferred: true },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\", sort: 81_100, deferred: true },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\", sort: 81_200, deferred: true },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\", sort: 81_300, deferred: true },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\", sort: 81_400, deferred: true },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\", sort: 81_500, deferred: true },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\", sort: 81_600, deferred: true },\n  // Movement\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\", sort: 90000 },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\", sort: 91000 },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\", sort: 92000 },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\", sort: 93000 },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\", sort: 94000 },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\", sort: 95000 },\n  // Defenses\n  ac: { label: \"PF1.BuffTarACGeneric\", category: \"defense\", sort: 100000 },\n  aac: { label: \"PF1.BuffTarACArmor\", category: \"defense\", sort: 101000 },\n  sac: { label: \"PF1.BuffTarACShield\", category: \"defense\", sort: 102000 },\n  nac: { label: \"PF1.BuffTarACNatural\", category: \"defense\", sort: 103000 },\n  tac: { label: \"PF1.BuffTarACTouch\", category: \"defense\", sort: 104000 },\n  ffac: { label: \"PF1.BuffTarACFlatFooted\", category: \"defense\", sort: 105000 },\n  // Offense\n  bab: { label: \"PF1.BAB\", category: \"attack\", sort: 111000 },\n  \"~attackCore\": { label: \"\", category: \"attack\", sort: 112000 },\n  attack: { label: \"PF1.BuffTarAllAttackRolls\", category: \"attack\", sort: 110000, deferred: true },\n  wattack: { label: \"PF1.BuffTarWeaponAttack\", category: \"attack\", sort: 111000, deferred: true },\n  sattack: { label: \"PF1.BuffTarSpellAttack\", category: \"attack\", sort: 112000, deferred: true },\n  mattack: { label: \"PF1.BuffTarMeleeAttack\", category: \"attack\", sort: 113000, deferred: true },\n  nattack: { label: \"PF1.BuffTarNaturalAttack\", category: \"attack\", sort: 114000, deferred: true },\n  rattack: { label: \"PF1.BuffTarRangedAttack\", category: \"attack\", sort: 115000, deferred: true },\n  tattack: { label: \"PF1.BuffTarThrownAttack\", category: \"attack\", sort: 116000, deferred: true },\n  // Damage\n  damage: { label: \"PF1.BuffTarAllDamageRolls\", category: \"damage\", sort: 120000, deferred: true },\n  wdamage: { label: \"PF1.WeaponDamage\", category: \"damage\", sort: 121000, deferred: true },\n  mwdamage: { label: \"PF1.MeleeWeaponDamage\", category: \"damage\", sort: 121100, deferred: true },\n  rwdamage: { label: \"PF1.RangedWeaponDamage\", category: \"damage\", sort: 121200, deferred: true },\n  twdamage: { label: \"PF1.ThrownWeaponDamage\", category: \"damage\", sort: 121300, deferred: true },\n  rdamage: { label: \"PF1.AllRangedDamage\", category: \"damage\", sort: 122100, deferred: true },\n  mdamage: { label: \"PF1.AllMeleeDamage\", category: \"damage\", sort: 122200, deferred: true },\n  ndamage: { label: \"PF1.NaturalAttackDamage\", category: \"damage\", sort: 123000, deferred: true },\n  sdamage: { label: \"PF1.SpellDamage\", category: \"damage\", sort: 124000, deferred: true },\n  critConfirm: { label: \"PF1.CriticalConfirmation\", category: \"attack\", sort: 130000, deferred: true },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\", sort: 140000, deferred: true },\n  // Saves\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\", sort: 141000, deferred: true },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\", sort: 142000, deferred: true },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\", sort: 143000, deferred: true },\n  // Misc\n  cmb: { label: \"PF1.CMB\", category: \"attack\", sort: 150000 },\n  cmd: { label: \"PF1.CMD\", category: \"defense\", sort: 151000 },\n  ffcmd: { label: \"PF1.CMDFlatFooted\", category: \"defense\", sort: 152000 },\n  init: { label: \"PF1.Initiative\", category: \"misc\", sort: 160000 }, // TODO: Should be deferred\n  mhp: { label: \"PF1.HitPoints\", category: \"health\", sort: 170000 },\n  wounds: { label: \"PF1.Wounds\", category: \"health\", sort: 180000, filters: { ...baseActorFilters() } },\n  vigor: { label: \"PF1.Vigor\", category: \"health\", sort: 181000, filters: { ...baseActorFilters() } },\n  spellResist: { label: \"PF1.SpellResistance\", category: \"defense\", sort: 190000 },\n  bonusFeats: { label: \"PF1.BuffTarBonusFeats\", category: \"misc\", sort: 200000, filters: { ...baseActorFilters() } },\n  bonusSkillRanks: {\n    label: \"PF1.BuffTarBonusSkillRanks\",\n    category: \"skills\",\n    sort: 210000,\n    filters: { ...baseActorFilters() },\n  },\n  concentration: {\n    label: \"PF1.Concentration\",\n    category: \"spell\",\n    sort: 220000,\n    deferred: true,\n    filters: { ...baseActorFilters() },\n  },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\", sort: 230000 },\n  dc: { label: \"PF1.SpellDC\", category: \"spell\", sort: 240000 },\n  // Senses\n  sensedv: { label: \"PF1.Sense.darkvision\", category: \"senses\", sort: 250000 },\n  sensets: { label: \"PF1.Sense.tremorsense\", category: \"senses\", sort: 250100 },\n  sensebse: { label: \"PF1.Sense.blindsense\", category: \"senses\", sort: 250200 },\n  sensebs: { label: \"PF1.Sense.blindsight\", category: \"senses\", sort: 250300 },\n  sensels: { label: \"PF1.Sense.lifesense\", category: \"senses\", sort: 250400 },\n  sensesc: { label: \"PF1.Sense.scent\", category: \"senses\", sort: 250500 },\n  sensetr: { label: \"PF1.Sense.trueseeing\", category: \"senses\", sort: 250600 },\n});\n\n/**\n * Change target categories\n *\n * Categories grouping related {@link BuffTarget change targets} in the selector UI.\n */\nexport const buffTargetCategories = /** @type {const} */ ({\n  defense: { label: \"PF1.Defense\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  attack: { label: \"PF1.Attack\" },\n  damage: { label: \"PF1.Damage\" },\n  ability: { label: \"PF1.AbilityScore\", filters: { ...baseActorFilters() } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\", filters: { ...baseActorFilters() } },\n  health: { label: \"PF1.Health\", filters: { ...baseActorFilters() } },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters() } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters() } },\n  speed: { label: \"PF1.Movement.Speed\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters() } },\n  misc: { label: \"PF1.Misc\" },\n  senses: { label: \"PF1.Senses\" },\n});\n\n/**\n * Context Note targets\n */\nexport const contextNoteTargets = /** @type {const} */ ({\n  attack: { label: \"PF1.AttackRollPlural\", category: \"attacks\" },\n  critical: { label: \"PF1.CriticalHitPlural\", category: \"attacks\" },\n  effect: { label: \"PF1.Effects\", category: \"attacks\" },\n  melee: { label: \"PF1.Melee\", category: \"attacks\" },\n  meleeWeapon: { label: \"PF1.MeleeWeapon\", category: \"attacks\" },\n  meleeSpell: { label: \"PF1.MeleeSpell\", category: \"attacks\" },\n  ranged: { label: \"PF1.Ranged\", category: \"attacks\" },\n  rangedWeapon: { label: \"PF1.RangedWeapon\", category: \"attacks\" },\n  rangedSpell: { label: \"PF1.RangedSpell\", category: \"attacks\" },\n  cmb: { label: \"PF1.CMB\", category: \"attacks\" },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\" },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\" },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\" },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\" },\n  skills: { label: \"PF1.BuffTarAllSkills\", category: \"skills\" },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\" },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\" },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\" },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\" },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\" },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\" },\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\" },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\" },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\" },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\" },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\" },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\" },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\" },\n  spellEffect: { label: \"PF1.BuffTarSpellEffect\", category: \"spell\" },\n  concentration: { label: \"PF1.Concentration\", category: \"spell\" },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\" },\n  ac: { label: \"PF1.ACNormal\", category: \"defense\" },\n  cmd: { label: \"PF1.CMD\", category: \"defense\" },\n  sr: { label: \"PF1.SpellResistance\", category: \"defense\" },\n  init: { label: \"PF1.Initiative\", category: \"misc\" },\n  // Speeds\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\" },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\" },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\" },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\" },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\" },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\" },\n});\n\n/**\n * Context Note categories\n */\nexport const contextNoteCategories = /** @type {const} */ ({\n  attacks: { label: \"PF1.Attacks\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters() } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters() } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters() } },\n  defense: { label: \"PF1.Defense\" },\n  speed: { label: \"PF1.Movement.Speed\" },\n  misc: { label: \"PF1.Misc\" },\n});\n\n/**\n * Change Flag labels\n */\nexport const changeFlags = /** @type {const} */ ({\n  lowLightVision: \"PF1.ChangeFlags.LowLightVision\",\n  seeInDarkness: \"PF1.ChangeFlags.SeeInDarkness\",\n  seeInvisibility: \"PF1.ChangeFlags.SeeInvisibility\",\n  immuneToMorale: \"PF1.ChangeFlags.ImmuneToMoraleEffects\",\n  loseDexToAC: \"PF1.ChangeFlags.LoseDexToAC\",\n  noMediumEncumbrance: \"PF1.ChangeFlags.NoMediumEncumbrance\",\n  noHeavyEncumbrance: \"PF1.ChangeFlags.NoHeavyEncumbrance\",\n  mediumArmorFullSpeed: \"PF1.ChangeFlags.MediumArmorFullSpeed\",\n  heavyArmorFullSpeed: \"PF1.ChangeFlags.HeavyArmorFullSpeed\",\n});\n\n/**\n * A list of Golarion's languages\n */\nexport const languages = /** @type {const} */ ({\n  aboleth: \"PF1.Language.aboleth\",\n  abyssal: \"PF1.Language.abyssal\",\n  aklo: \"PF1.Language.aklo\",\n  ancientosiriani: \"PF1.Language.ancientosiriani\",\n  androffan: \"PF1.Language.androffan\",\n  aquan: \"PF1.Language.aquan\",\n  auran: \"PF1.Language.auran\",\n  azlanti: \"PF1.Language.azlanti\",\n  boggard: \"PF1.Language.boggard\",\n  catfolk: \"PF1.Language.catfolk\",\n  celestial: \"PF1.Language.celestial\",\n  common: \"PF1.Language.common\",\n  cyclops: \"PF1.Language.cyclops\",\n  dark: \"PF1.Language.dark\",\n  draconic: \"PF1.Language.draconic\",\n  drowsign: \"PF1.Language.drowsign\",\n  druidic: \"PF1.Language.druidic\",\n  dwarven: \"PF1.Language.dwarven\",\n  dziriak: \"PF1.Language.dziriak\",\n  elven: \"PF1.Language.elven\",\n  giant: \"PF1.Language.giant\",\n  gnoll: \"PF1.Language.gnoll\",\n  gnome: \"PF1.Language.gnome\",\n  goblin: \"PF1.Language.goblin\",\n  grippli: \"PF1.Language.grippli\",\n  halfling: \"PF1.Language.halfling\",\n  hallit: \"PF1.Language.hallit\",\n  ib: \"PF1.Language.ib\",\n  ignan: \"PF1.Language.ignan\",\n  infernal: \"PF1.Language.infernal\",\n  jistka: \"PF1.Language.jistka\",\n  kasatha: \"PF1.Language.kasatha\",\n  kelish: \"PF1.Language.kelish\",\n  kuru: \"PF1.Language.kuru\",\n  lashunta: \"PF1.Language.lashunta\",\n  munavri: \"PF1.Language.munavri\",\n  necril: \"PF1.Language.necril\",\n  orc: \"PF1.Language.orc\",\n  orvian: \"PF1.Language.orvian\",\n  osiriani: \"PF1.Language.osiriani\",\n  polyglot: \"PF1.Language.polyglot\",\n  protean: \"PF1.Language.protean\",\n  reptoid: \"PF1.Language.reptoid\",\n  rougarou: \"PF1.Language.rougarou\",\n  samsaran: \"PF1.Language.samsaran\",\n  sasquatch: \"PF1.Language.sasquatch\",\n  shadowtongue: \"PF1.Language.shadowtongue\",\n  shoanti: \"PF1.Language.shoanti\",\n  skald: \"PF1.Language.skald\",\n  sphinx: \"PF1.Language.sphinx\",\n  strix: \"PF1.Language.strix\",\n  sylvan: \"PF1.Language.sylvan\",\n  syrinx: \"PF1.Language.syrinx\",\n  taldane: \"PF1.Language.taldane\",\n  tekritanin: \"PF1.Language.tekritanin\",\n  tengu: \"PF1.Language.tengu\",\n  terran: \"PF1.Language.terran\",\n  thassilonian: \"PF1.Language.thassilonian\",\n  tien: \"PF1.Language.tien\",\n  treant: \"PF1.Language.treant\",\n  triaxian: \"PF1.Language.triaxian\",\n  undercommon: \"PF1.Language.undercommon\",\n  vanaran: \"PF1.Language.vanaran\",\n  varisian: \"PF1.Language.varisian\",\n  vegepygmy: \"PF1.Language.vegepygmy\",\n  vishkanya: \"PF1.Language.vishkanya\",\n  vudrani: \"PF1.Language.vudrani\",\n  yaddithian: \"PF1.Language.yaddithian\",\n});\n\n/**\n * Creature types\n *\n * @type {Record<type, string>}\n */\nexport const creatureTypes = /** @type {const} */ ({\n  aberration: \"PF1.CreatureTypes.aberration\",\n  animal: \"PF1.CreatureTypes.animal\",\n  construct: \"PF1.CreatureTypes.construct\",\n  dragon: \"PF1.CreatureTypes.dragon\",\n  fey: \"PF1.CreatureTypes.fey\",\n  humanoid: \"PF1.CreatureTypes.humanoid\",\n  magicalBeast: \"PF1.CreatureTypes.magicalBeast\",\n  monstrousHumanoid: \"PF1.CreatureTypes.monstrousHumanoid\",\n  ooze: \"PF1.CreatureTypes.ooze\",\n  outsider: \"PF1.CreatureTypes.outsider\",\n  plant: \"PF1.CreatureTypes.plant\",\n  undead: \"PF1.CreatureTypes.undead\",\n  vermin: \"PF1.CreatureTypes.vermin\",\n});\n\n/**\n * Creature subtypes\n *\n * @type {Record<subtype, string>}\n */\nexport const creatureSubtypes = /** @type {const} */ ({\n  adlet: \"PF1.CreatureSubTypes.adlet\",\n  aeon: \"PF1.CreatureSubTypes.aeon\",\n  aether: \"PF1.CreatureSubTypes.aether\",\n  agathion: \"PF1.CreatureSubTypes.agathion\",\n  air: \"PF1.CreatureSubTypes.air\",\n  android: \"PF1.CreatureSubTypes.android\",\n  angel: \"PF1.CreatureSubTypes.angel\",\n  aquatic: \"PF1.CreatureSubTypes.aquatic\",\n  archon: \"PF1.CreatureSubTypes.archon\",\n  astomoi: \"PF1.CreatureSubTypes.astomoi\",\n  asura: \"PF1.CreatureSubTypes.asura\",\n  augmented: \"PF1.CreatureSubTypes.augmented\",\n  azata: \"PF1.CreatureSubTypes.azata\",\n  behemoth: \"PF1.CreatureSubTypes.behemoth\",\n  blight: \"PF1.CreatureSubTypes.blight\",\n  catfolk: \"PF1.CreatureSubTypes.catfolk\",\n  changeling: \"PF1.CreatureSubTypes.changeling\",\n  chaotic: \"PF1.CreatureSubTypes.chaotic\",\n  clockwork: \"PF1.CreatureSubTypes.clockwork\",\n  cold: \"PF1.CreatureSubTypes.cold\",\n  colossus: \"PF1.CreatureSubTypes.colossus\",\n  daemon: \"PF1.CreatureSubTypes.daemon\",\n  darkFolk: \"PF1.CreatureSubTypes.darkFolk\",\n  deepOne: \"PF1.CreatureSubTypes.deepOne\",\n  demodand: \"PF1.CreatureSubTypes.demodand\",\n  demon: \"PF1.CreatureSubTypes.demon\",\n  derro: \"PF1.CreatureSubTypes.derro\",\n  devil: \"PF1.CreatureSubTypes.devil\",\n  div: \"PF1.CreatureSubTypes.div\",\n  dwarf: \"PF1.CreatureSubTypes.dwarf\",\n  earth: \"PF1.CreatureSubTypes.earth\",\n  elemental: \"PF1.CreatureSubTypes.elemental\",\n  elf: \"PF1.CreatureSubTypes.elf\",\n  evil: \"PF1.CreatureSubTypes.evil\",\n  extraplanar: \"PF1.CreatureSubTypes.extraplanar\",\n  fire: \"PF1.CreatureSubTypes.fire\",\n  giant: \"PF1.CreatureSubTypes.giant\",\n  gnome: \"PF1.CreatureSubTypes.gnome\",\n  goblinoid: \"PF1.CreatureSubTypes.goblinoid\",\n  good: \"PF1.CreatureSubTypes.good\",\n  gray: \"PF1.CreatureSubTypes.gray\",\n  greatOldOne: \"PF1.CreatureSubTypes.greatOldOne\",\n  grippli: \"PF1.CreatureSubTypes.grippli\",\n  halfling: \"PF1.CreatureSubTypes.halfling\",\n  hive: \"PF1.CreatureSubTypes.hive\",\n  herald: \"PF1.CreatureSubTypes.herald\",\n  human: \"PF1.CreatureSubTypes.human\",\n  incorporeal: \"PF1.CreatureSubTypes.incorporeal\",\n  inevitable: \"PF1.CreatureSubTypes.inevitable\",\n  kaiju: \"PF1.CreatureSubTypes.kaiju\",\n  kami: \"PF1.CreatureSubTypes.kami\",\n  kasatha: \"PF1.CreatureSubTypes.kasatha\",\n  kitsune: \"PF1.CreatureSubTypes.kitsune\",\n  kyton: \"PF1.CreatureSubTypes.kyton\",\n  lawful: \"PF1.CreatureSubTypes.lawful\",\n  leshy: \"PF1.CreatureSubTypes.leshy\",\n  manasaputra: \"PF1.CreatureSubTypes.manasaputra\",\n  mortic: \"PF1.CreatureSubTypes.mortic\",\n  munavri: \"PF1.CreatureSubTypes.munavri\",\n  mythic: \"PF1.CreatureSubTypes.mythic\",\n  native: \"PF1.CreatureSubTypes.native\",\n  nightshade: \"PF1.CreatureSubTypes.nightshade\",\n  oni: \"PF1.CreatureSubTypes.oni\",\n  orc: \"PF1.CreatureSubTypes.orc\",\n  phantom: \"PF1.CreatureSubTypes.phantom\",\n  protean: \"PF1.CreatureSubTypes.protean\",\n  psychopomp: \"PF1.CreatureSubTypes.psychopomp\",\n  qlippoth: \"PF1.CreatureSubTypes.qlippoth\",\n  rakshasa: \"PF1.CreatureSubTypes.rakshasa\",\n  ratfolk: \"PF1.CreatureSubTypes.ratfolk\",\n  reptilian: \"PF1.CreatureSubTypes.reptilian\",\n  robot: \"PF1.CreatureSubTypes.robot\",\n  sahkil: \"PF1.CreatureSubTypes.sahkil\",\n  samsaran: \"PF1.CreatureSubTypes.samsaran\",\n  sasquatch: \"PF1.CreatureSubTypes.sasquatch\",\n  shapechanger: \"PF1.CreatureSubTypes.shapechanger\",\n  skinwalker: \"PF1.CreatureSubTypes.skinwalker\",\n  spawnOfRovagug: \"PF1.CreatureSubTypes.spawnOfRovagug\",\n  swarm: \"PF1.CreatureSubTypes.swarm\",\n  troop: \"PF1.CreatureSubTypes.troop\",\n  vanara: \"PF1.CreatureSubTypes.vanara\",\n  vishkanya: \"PF1.CreatureSubTypes.vishkanya\",\n  water: \"PF1.CreatureSubTypes.water\",\n  wayang: \"PF1.CreatureSubTypes.wayang\",\n  wildHunt: \"PF1.CreatureSubTypes.wildHunt\",\n});\n\nexport const spellRangeFormulas = /** @type {const} */ ({\n  close: \"25 + floor(@cl / 2) * 5\",\n  medium: \"100 + @cl * 10\",\n  long: \"400 + @cl * 40\",\n});\n\n/**\n * An array containing the damage dice progression for size adjustments\n *\n * @see {@link pf1.utils.roll.sizeRoll sizeRoll} function.\n */\nexport const sizeDie = /** @type {const} */ ([\n  \"1\",\n  \"1d2\",\n  \"1d3\",\n  \"1d4\",\n  \"1d6\",\n  \"1d8\",\n  \"1d10\",\n  \"2d6\",\n  \"2d8\",\n  \"3d6\",\n  \"3d8\",\n  \"4d6\",\n  \"4d8\",\n  \"6d6\",\n  \"6d8\",\n  \"8d6\",\n  \"8d8\",\n  \"12d6\",\n  \"12d8\",\n  \"16d6\",\n  \"16d8\",\n]);\n\n/**\n * Arrays of Character Level XP Requirements by XP track\n */\n// prettier-ignore\nexport const CHARACTER_EXP_LEVELS = /** @type {const} */ ({\n  slow: [\n    0,\n    3000,\n    7500,\n    14000,\n    23000,\n    35000,\n    53000,\n    77000,\n    115000,\n    160000,\n    235000,\n    330000,\n    475000,\n    665000,\n    955000,\n    1350000,\n    1900000,\n    2700000,\n    3850000,\n    5350000,\n  ],\n  medium: [\n    0,\n    2000,\n    5000,\n    9000,\n    15000,\n    23000,\n    35000,\n    51000,\n    75000,\n    105000,\n    155000,\n    220000,\n    315000,\n    445000,\n    635000,\n    890000,\n    1300000,\n    1800000,\n    2550000,\n    3600000,\n  ],\n  fast: [\n    0,\n    1300,\n    3300,\n    6000,\n    10000,\n    15000,\n    23000,\n    34000,\n    50000,\n    71000,\n    105000,\n    145000,\n    210000,\n    295000,\n    425000,\n    600000,\n    850000,\n    1200000,\n    1700000,\n    2400000,\n  ],\n});\n\n/**\n * An array of Challenge Rating XP Levels\n */\n// prettier-ignore\nexport const CR_EXP_LEVELS = /** @type {const} */ ([\n  200,\n  400,\n  600,\n  800,\n  1200,\n  1600,\n  2400,\n  3200,\n  4800,\n  6400,\n  9600,\n  12800,\n  19200,\n  25600,\n  38400,\n  51200,\n  76800,\n  102400,\n  153600,\n  204800,\n  307200,\n  409600,\n  614400,\n  819200,\n  1228800,\n  1638400,\n  2457600,\n  3276800,\n  4915200,\n  6553600,\n  9830400,\n]);\n\nexport const temporaryRollDataFields = /** @type {const} */ ({\n  actor: [\n    \"d20\",\n    \"attackBonus\",\n    \"attackCount\",\n    \"formulaicAttack\",\n    \"damageBonus\",\n    \"pointBlankBonus\",\n    \"rapidShotPenalty\",\n    \"powerAttackBonus\",\n    \"powerAttackPenalty\",\n    \"conditionals\",\n    \"concentrationBonus\",\n    \"formulaBonus\",\n    \"dcBonus\",\n    \"chargeCostBonus\",\n    \"chargeCost\",\n    \"sizeBonus\",\n    \"bonus\",\n    \"critMult\",\n    \"ablMult\",\n    \"ablDamage\",\n    \"cl\",\n    \"sl\",\n    \"class\",\n    \"ablMod\",\n    \"item\",\n    \"action\",\n    \"level\",\n    \"mod\",\n  ],\n});\n\nexport const traitSelector = /** @type {const} */ ({\n  minChoicesForSearch: 6,\n});\n\n/**\n * Default Item and Actor icons\n *\n * These are returned by `Document.getDefaultArtwork()`\n */\nexport const defaultIcons = /** @type {const} */ ({\n  items: {\n    attack: \"icons/svg/explosion.svg\",\n    buff: \"icons/svg/ice-aura.svg\",\n    class: \"icons/svg/paralysis.svg\",\n    consumable: \"icons/svg/tankard.svg\",\n    container: \"icons/svg/barrel.svg\",\n    equipment: \"icons/svg/combat.svg\",\n    feat: \"icons/svg/book.svg\",\n    loot: \"icons/svg/item-bag.svg\",\n    race: \"icons/svg/wing.svg\",\n    spell: \"icons/svg/daze.svg\",\n    weapon: \"icons/svg/sword.svg\",\n  },\n  actors: {\n    character: \"icons/svg/mystery-man.svg\",\n    npc: \"icons/svg/terror.svg\",\n    haunt: \"icons/svg/stoned.svg\",\n    basic: \"icons/svg/castle.svg\",\n    trap: \"icons/svg/net.svg\",\n    vehicle: \"icons/svg/stone-path.svg\",\n  },\n});\n\n/**\n * Feedback configuration\n *\n * @todo Move this into an actual setting.\n */\nexport const feedback = {\n  /**\n   * Deltas\n   */\n  deltas: {\n    // Hit Points\n    hp: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Temporary HP and Temp. Vigor\n    temp: {\n      positive: \"#55FF00\",\n      negative: \"#FF3300\",\n    },\n    // Nonlethal\n    nonlethal: {\n      positive: \"#AA0077\",\n      negative: \"#00AA33\",\n    },\n    // Vigor\n    vigor: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Wounds\n    wounds: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // Negative Levels\n    energyDrain: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n    // All ability score changes\n    abilityScore: {\n      positive: \"#00FF00\",\n      negative: \"#FF0000\",\n    },\n  },\n};\n\n/**\n * Sheet item section configuration.\n */\nexport const sheetSections = /** @type {const} */ ({\n  classes: {\n    class: {\n      label: \"PF1.ClassPlural\",\n      filters: [{ type: \"class\" }],\n      interface: {\n        types: true,\n        level: true,\n        create: true,\n      },\n      browse: { category: \"classes\", classType: \"base\" },\n      create: { type: \"class\", system: { subType: \"base\" } },\n      sort: 1_000,\n    },\n  },\n  combat: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      hideEmpty: true,\n      sort: 1_000,\n    },\n    weaponLike: {\n      label: \"PF1.Subtypes.Item.attack.weapon.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"weapon\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n      sort: 1_100,\n    },\n    natural: {\n      label: \"PF1.Subtypes.Item.attack.natural.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"natural\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"natural\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      hideEmpty: true,\n      sort: 3_000,\n    },\n    ability: {\n      label: \"PF1.Subtypes.Item.attack.ability.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"ability\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"ability\" } },\n      sort: 3_100,\n    },\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      hideEmpty: true,\n      sort: 3_200,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      hideEmpty: true,\n      sort: 4_000,\n    },\n    racialAbility: {\n      label: \"PF1.Subtypes.Item.attack.racialAbility.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"racialAbility\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"racialAbility\" } },\n      sort: 4_100,\n    },\n    spell: {\n      label: \"PF1.Spells\",\n      hideEmpty: true,\n      sort: 8_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.attack.item.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"item\" } },\n      sort: 10_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      hideEmpty: true,\n      sort: 10_500,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      hideEmpty: true,\n      sort: 10_700,\n    },\n    miscFeat: {\n      label: \"PF1.Features\", // \"PF1.FeaturesSubtypes.Item.feat.misc.Plural\", // BUG: Identical label with English to the following\n      hideEmpty: true,\n      sort: 15_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.attack.misc.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"misc\" } },\n      sort: 16_000,\n    },\n  },\n  inventory: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      filters: [{ type: \"weapon\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n      },\n      browse: { category: \"items\", type: \"weapon\" },\n      create: { type: \"weapon\", system: { subType: \"simple\" } },\n      sort: 1_000,\n    },\n    armor: {\n      label: \"PF1.ArmorOrShield\",\n      filters: [{ type: \"equipment\", subTypes: [\"armor\", \"shield\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      browse: { category: \"items\", type: \"equipment\", equipmentType: [\"armor\", \"shield\"] },\n      create: { type: \"equipment\", system: { subType: \"armor\", equipmentSubtype: \"lightArmor\", slot: \"\" } },\n      sort: 2_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      filters: [{ type: \"equipment\", subTypes: [\"wondrous\", \"other\", \"clothing\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      browse: { category: \"items\", type: \"equipment\", equipmentType: [\"wondrous\"] },\n      create: { type: \"equipment\", system: { subType: \"wondrous\", slot: \"slotless\" } },\n      sort: 3_000,\n    },\n    implants: {\n      label: \"PF1.InventoryImplants\",\n      filters: [{ type: \"implant\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      labels: {\n        equip: \"PF1.Implanted\",\n      },\n      browse: { category: \"items\", type: \"implant\" },\n      create: { type: \"implant\", system: { subType: \"cybertech\" } },\n      sort: 4_000,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      filters: [{ type: \"consumable\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: false,\n      },\n      browse: { category: \"items\", type: \"consumable\" },\n      create: { type: \"consumable\" },\n      sort: 5_000,\n    },\n    gear: {\n      label: \"PF1.Subtypes.Item.loot.gear.Plural\",\n      filters: [\n        {\n          type: \"loot\",\n          subTypes: [\"gear\", \"adventuring\", \"tool\", \"reagent\", \"remedy\", \"herb\", \"animal\", \"animalGear\"],\n        },\n      ],\n      interface: {\n        create: true,\n        actions: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"gear\"),\n      },\n      browse: { category: \"items\", type: \"loot\" },\n      create: { type: \"loot\", system: { subType: \"gear\" } },\n      sort: 6_000,\n    },\n    ammo: {\n      label: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"ammo\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"ammo\"),\n      },\n      browse: { category: \"items\", type: \"loot\", lootType: [\"ammo\"] },\n      create: { type: \"loot\", system: { subType: \"ammo\" } },\n      sort: 8_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.loot.misc.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"misc\", \"food\", \"entertainment\", \"vehicle\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true, // Misc covers more than just misc loot\n      },\n      browse: { category: \"items\", type: \"loot\" },\n      create: { type: \"loot\", system: { subType: \"misc\" } },\n      sort: 9_000,\n    },\n    tradeGoods: {\n      label: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"tradeGoods\", \"treasure\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        value: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"tradeGoods\"),\n      },\n      browse: { category: \"items\", type: \"loot\", lootType: [\"tradeGoods\"] },\n      create: { type: \"loot\", system: { subType: \"tradeGoods\" } },\n      sort: 15_000,\n    },\n    container: {\n      label: \"PF1.InventoryContainers\",\n      filters: [{ type: \"container\" }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true,\n      },\n      browse: { category: \"items\", type: \"container\" },\n      create: { type: \"container\" },\n      sort: 20_000,\n    },\n  },\n  features: {\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"feat\"] },\n      create: { type: \"feat\", system: { subType: \"feat\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"classFeat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"classFeat\"] },\n      create: { type: \"feat\", system: { subType: \"classFeat\" } },\n      sort: 1_000,\n    },\n    trait: {\n      label: \"PF1.Subtypes.Item.feat.trait.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"trait\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"trait\"] },\n      create: { type: \"feat\", system: { subType: \"trait\" } },\n      sort: 3_000,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"racial\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"racial\"] },\n      create: { type: \"feat\", system: { subType: \"racial\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.feat.misc.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      browse: { category: \"feats\", featType: [\"misc\"] },\n      create: { type: \"feat\", system: { subType: \"misc\" } },\n      sort: 15_000,\n    },\n    template: {\n      label: \"PF1.Subtypes.Item.feat.template.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"template\"] }],\n      interface: {\n        create: true,\n        actions: false,\n      },\n      browse: { category: \"feats\", featType: [\"template\"] },\n      create: { type: \"feat\", system: { subType: \"template\" } },\n      sort: 6_000,\n    },\n  },\n  buffs: {\n    feat: {\n      label: \"PF1.Subtypes.Item.buff.feat.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"feat\"] },\n      create: { type: \"buff\", system: { subType: \"feat\" } },\n      sort: 5_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.buff.item.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"item\"] },\n      create: { type: \"buff\", system: { subType: \"item\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.buff.misc.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", subTypes: [\"misc\"] },\n      create: { type: \"buff\", system: { subType: \"misc\" } },\n      sort: 10_000,\n    },\n    perm: {\n      label: \"PF1.Subtypes.Item.buff.perm.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"perm\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"perm\"] },\n      create: { type: \"buff\", system: { subType: \"perm\" } },\n      sort: 6_000,\n    },\n    spell: {\n      label: \"PF1.Subtypes.Item.buff.spell.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"spell\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"spell\"] },\n      create: { type: \"buff\", system: { subType: \"spell\" } },\n      sort: 2_000,\n    },\n    temp: {\n      label: \"PF1.Subtypes.Item.buff.temp.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"temp\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      browse: { category: \"buffs\", buffType: [\"temp\"] },\n      create: { type: \"buff\", system: { subType: \"temp\" } },\n      sort: 1_000,\n    },\n  },\n  // Spells section is not used quite like the others\n  spells: {\n    spell: {\n      interface: {\n        create: true,\n      },\n      browse: { category: \"spells\", level: true },\n      create: { type: \"spell\", system: { school: \"abj\" } },\n    },\n  },\n  // Lite sheet and secondary sheet items\n  combatlite: {\n    attacks: {\n      label: \"PF1.AbilityPlural\",\n      filters: [{ type: \"attack\" }],\n      interface: {\n        create: true,\n        types: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n    },\n  },\n  // Misc section is only informal for sheet handling of special cases\n  misc: {\n    race: {\n      create: { type: \"race\" },\n    },\n  },\n});\n\n/**\n * Strict feat counting. If disabled, issues will be ignored.\n *\n * @experimental\n */\nexport const featCount = true;\n\n/**\n * Token ruler configuration.\n *\n * @experimental\n */\nexport const tokenRuler = /** @type {const} */ ({\n  grid: {\n    immobile: { color: 0xff0000 }, // Immobile\n    start: { color: 0x00ff00, alpha: 0.2 }, // Start square\n    step: { color: 0x00aa00 }, // 5-foot step\n    move: { color: 0x009900 }, // Single move\n    move2: { color: 0x559900 }, // Double move\n    move3: { color: 0x777700 }, // Triple move (run in heavy load/armor)\n    run: { color: 0xaaaa00 }, // Normal run\n    run2: { color: 0xbb5500 }, // Run feat\n    exceed: { color: 0x990000 }, // Exceeding move limits\n  },\n  movement: {\n    default: {\n      max: 5,\n      run: true,\n      step: true,\n    },\n    // Special configuration for using swim skill instead of natural swim speed\n    swimSkill: {\n      factors: { 2: 4, 3: 5, 4: 5 },\n      max: 2,\n      run: false,\n      step: false,\n    },\n    // Special configuration for using climb skill instead of natural climb speed\n    climbSkill: {\n      factors: { 2: 4, 3: 5, 4: 5 },\n      max: 2,\n      run: false,\n      step: false,\n    },\n    crawl: {\n      max: 1,\n      run: false,\n      step: false,\n    },\n  },\n});\n\n// Prepare sheet sections with data available later\n// ... allowing module modification also.\nHooks.once(\"setup\", () => {\n  for (const [catKey, category] of Object.entries(sheetSections)) {\n    for (const [sectKey, section] of Object.entries(category)) {\n      section.category = catKey;\n      section.id = sectKey;\n      section.path = `${catKey}.${sectKey}`;\n\n      section.label = game.i18n.localize(section.label);\n\n      const iface = section.interface;\n      if (typeof iface?.equip === \"function\") {\n        iface.equip = iface.equip();\n      }\n    }\n  }\n});\n","/**\n * Action type to change context mapping.\n *\n * @see {@link pf1.documents.item.ItemPF.prototype.getContextChanges}\n */\nexport const actionTypeToContext = /** @type {const} */ ({\n  mwak: \"mwdamage\",\n  twak: \"twdamage\",\n  rwak: \"rwdamage\",\n  msak: \"sdamage\",\n  rsak: \"sdamage\",\n  spellsave: \"sdamage\",\n});\n\n/**\n * Message visibility\n *\n * Message visibility mode (roll mode) to non-roll message mapping.\n *\n * This will be obsoleted by Foundry ~v13\n */\nexport const messageVisibility = /** @type {const} */ ({\n  publicroll: \"PF1.Chat.Visibility.Public\",\n  gmroll: \"PF1.Chat.Visibility.Private\",\n  blindroll: \"PF1.Chat.Visibility.Blind\",\n  selfroll: \"PF1.Chat.Visibility.Self\",\n});\n\n/**\n * Movement speed keys\n */\nexport const movementKeys = /** @type {const} */ ([\"land\", \"swim\", \"fly\", \"climb\", \"burrow\"]);\n\n/**\n * Step distance in internal units (ft).\n */\nexport const step = 5;\n","/**\n * @typedef {object} FilterChoice\n * @property {string} label - The label for this choice visible to the user; will be localized\n * @property {string} key - The key for this choice used to identify it\n * @property {boolean} [active] - Whether this choice is currently active\n */\n\n/**\n * A basic filter class containing common functionality for all filters.\n *\n * Inheriting classes should define the following static properties: {@link label}, {@link indexField}.\n * Inheriting classes may define the following static properties: {@link type}.\n *\n * @abstract\n */\nexport class BaseFilter {\n  /**\n   * Auto-localize choices.\n   *\n   * Defaults to false due to pre-translation.\n   *\n   * @type {boolean}\n   */\n  static localizeChoices = false;\n\n  /**\n   * Auto-localize filter label\n   *\n   * @type {boolean}\n   */\n  static localizeLabel = true;\n\n  /**\n   * Prefix to add to choices before localization.\n   *\n   * @type {string}\n   */\n  static localizePrefix = \"\";\n\n  /**\n   * The label for this filter visible to the user.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static label = \"\";\n\n  /**\n   * The field this filter checks against its choices.\n   * Will also be added to the `compendiumIndexFields` of the document's `CONFIG` object.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static indexField = \"\";\n\n  /**\n   * A convenience property to define a single `type` this filter applies to.\n   *\n   * @see {@link types}\n   * @see {@link handledTypes}\n   */\n  static type = \"\";\n\n  /**\n   * The `type`s of document this filter applies to.\n   *\n   * @see {Actor#type}\n   * @see {Item#type}\n   * @see {@link handledTypes}\n   * @type {string[]}\n   */\n  static types = [];\n\n  /**\n   * The handlebars template used to render this filter.\n   *\n   * @type {string}\n   */\n  static TEMPLATE = \"\";\n\n  /**\n   * The ID of this filter used to identify it in its browser's filters.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * A {@link Collection} of {@link FilterChoice}s for this filter.\n   *\n   * @type {Collection<FilterChoice> | null}\n   */\n  choices = null;\n\n  /**\n   * A reference to the {@link CompendiumBrowser} this filter is used in.\n   *\n   * @type {pf1.applications.compendiumBrowser.CompendiumBrowser | null}\n   */\n  compendiumBrowser = null;\n\n  /**\n   * @param {pf1.applications.compendiumBrowser.CompendiumBrowser} compendiumBrowser - The compendium browser this filter is used in.\n   */\n  constructor(compendiumBrowser) {\n    this.compendiumBrowser = compendiumBrowser;\n    Object.defineProperty(this, \"id\", { value: foundry.utils.randomID(), writable: false, configurable: false });\n    this.registerIndexFields();\n  }\n\n  /**\n   * The authoritative `Set` of `type`s this filter applies to.\n   *\n   * @type {Set<string>}\n   */\n  static get handledTypes() {\n    return new Set([this.type, ...this.types].filter((type) => type));\n  }\n\n  /**\n   * Whether this filter has any active choices.\n   *\n   * @type {boolean}\n   */\n  get active() {\n    return this.choices?.some((choice) => choice.active) ?? false;\n  }\n\n  /**\n   * The number of active choices.\n   *\n   * @type {number}\n   */\n  get activeChoiceCount() {\n    return this.choices?.filter((choice) => choice.active).length ?? 0;\n  }\n\n  /**\n   * Adds the index fields checked by this filter to the document's `CONFIG` object,\n   * so that {@link CompendiumCollection#getIndex} will include them.\n   */\n  registerIndexFields() {\n    if (!this.compendiumBrowser) return;\n    const documentName = this.compendiumBrowser.constructor.documentName;\n\n    // Fields with double underscore are added in the mapping process and not part of Foundry's index\n    if (this.constructor.indexField.startsWith(\"__\")) return;\n\n    const compendiumIndexFields = CONFIG[documentName]?.compendiumIndexFields;\n    if (\n      compendiumIndexFields &&\n      this.constructor.indexField &&\n      !compendiumIndexFields.includes(this.constructor.indexField)\n    ) {\n      compendiumIndexFields?.push(this.constructor.indexField);\n    }\n  }\n\n  /**\n   * Prepare the filter for use.\n   * This step expects the compendium browser to have gathered its entries.\n   */\n  async setup() {\n    await this.prepareChoices();\n  }\n\n  /**\n   * Prepare the choices for this filter. This is called after the compendium browser has gathered its entries.\n   * By default, this will generate a list of choices from the index field of all entries in the compendium.\n   */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection();\n  }\n\n  /**\n   * Returns whether this filter has _more than_ the given number of choices.\n   * Defaults to 1, as a single choice allows for no real filtering.\n   *\n   * @param {number} [number=1] - The number of choices to check for\n   * @returns {boolean} - Whether this filter has more than the given number of choices\n   */\n  hasChoices(number = 1) {\n    return this.choices?.size > number;\n  }\n\n  /**\n   * Reset all choices and controls to their default state (inactive)\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Check whether an entry matches this filter.\n   * If the filter is not active, this will always return true.\n   *\n   * @abstract\n   * @param {object} entry - The entry to check against this filter\n   * @returns {boolean} - Whether the entry matches this filter\n   */\n  applyFilter(entry) {}\n\n  /**\n   * Provide data necessary to render this filter.\n   * The data object generated by {@link BaseFilter#getData} contains the minimum data not only required\n   * by the filter itself, but also by the rendering {@link CompendiumBrowser}.\n   *\n   * @returns {object}} The data object for this filter\n   */\n  getData() {\n    return {\n      id: this.id,\n      template: this.constructor.TEMPLATE,\n      label: this.constructor.localizeLabel ? game.i18n.localize(this.constructor.label) : this.constructor.label,\n      active: this.active,\n      activeCount: this.activeChoiceCount,\n      choices: this.choices?.contents ?? [],\n      field: this.constructor.indexField,\n    };\n  }\n\n  /**\n   * Activate event listeners for this filter.\n   *\n   * @abstract\n   * @param {HTMLElement} html - The rendered HTML element for this filter only\n   */\n  activateListeners(html) {}\n}\n","// https://github.com/farzher/fuzzysort v3.0.2\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;((root, UMD) => {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root['fuzzysort'] = UMD()\r\n})(this, _ => {\r\n  'use strict'\r\n\r\n  var single = (search, target) => {\r\n    if(!search || !target) return NULL\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n    var searchBitflags = preparedSearch.bitflags\r\n    if((searchBitflags & target._bitflags) !== searchBitflags) return NULL\r\n\r\n    return algorithm(preparedSearch, target)\r\n  }\r\n\r\n  var go = (search, targets, options) => {\r\n    if(!search) return options?.all ? all(targets, options) : noResults\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    var searchBitflags = preparedSearch.bitflags\r\n    var containsSpace  = preparedSearch.containsSpace\r\n\r\n    var threshold = denormalizeScore( options?.threshold || 0 )\r\n    var limit     = options?.limit || INFINITY\r\n\r\n    var resultsLen = 0; var limitedCount = 0\r\n    var targetsLen = targets.length\r\n\r\n    function push_result(result) {\r\n      if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n      else {\r\n        ++limitedCount\r\n        if(result._score > q.peek()._score) q.replaceTop(result)\r\n      }\r\n    }\r\n\r\n    // This code is copy/pasted 3 times for performance reasons [options.key, options.keys, no keys]\r\n\r\n    // options.key\r\n    if(options?.key) {\r\n      var key = options.key\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var target = getValue(obj, key)\r\n        if(!target) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result._score < threshold) continue\r\n\r\n        result.obj = obj\r\n        push_result(result)\r\n      }\r\n\r\n    // options.keys\r\n    } else if(options?.keys) {\r\n      var keys = options.keys\r\n      var keysLen = keys.length\r\n\r\n      outer: for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n\r\n        { // early out based on bitflags\r\n          var keysBitflags = 0\r\n          for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n            var key = keys[keyI]\r\n            var target = getValue(obj, key)\r\n            if(!target) { tmpTargets[keyI] = noTarget; continue }\r\n            if(!isPrepared(target)) target = getPrepared(target)\r\n            tmpTargets[keyI] = target\r\n\r\n            keysBitflags |= target._bitflags\r\n          }\r\n\r\n          if((searchBitflags & keysBitflags) !== searchBitflags) continue\r\n        }\r\n\r\n        if(containsSpace) for(let i=0; i<preparedSearch.spaceSearches.length; i++) keysSpacesBestScores[i] = NEGATIVE_INFINITY\r\n\r\n        for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n          target = tmpTargets[keyI]\r\n          if(target === noTarget) { tmpResults[keyI] = noTarget; continue }\r\n\r\n          tmpResults[keyI] = algorithm(preparedSearch, target, /*allowSpaces=*/false, /*allowPartialMatch=*/containsSpace)\r\n          if(tmpResults[keyI] === NULL) { tmpResults[keyI] = noTarget; continue }\r\n\r\n          // todo: this seems weird and wrong. like what if our first match wasn't good. this should just replace it instead of averaging with it\r\n          // if our second match isn't good we ignore it instead of averaging with it\r\n          if(containsSpace) for(let i=0; i<preparedSearch.spaceSearches.length; i++) {\r\n            if(allowPartialMatchScores[i] > -1000) {\r\n              if(keysSpacesBestScores[i] > NEGATIVE_INFINITY) {\r\n                var tmp = (keysSpacesBestScores[i] + allowPartialMatchScores[i]) / 4/*bonus score for having multiple matches*/\r\n                if(tmp > keysSpacesBestScores[i]) keysSpacesBestScores[i] = tmp\r\n              }\r\n            }\r\n            if(allowPartialMatchScores[i] > keysSpacesBestScores[i]) keysSpacesBestScores[i] = allowPartialMatchScores[i]\r\n          }\r\n        }\r\n\r\n        if(containsSpace) {\r\n          for(let i=0; i<preparedSearch.spaceSearches.length; i++) { if(keysSpacesBestScores[i] === NEGATIVE_INFINITY) continue outer }\r\n        } else {\r\n          var hasAtLeast1Match = false\r\n          for(let i=0; i < keysLen; i++) { if(tmpResults[i]._score !== NEGATIVE_INFINITY) { hasAtLeast1Match = true; break } }\r\n          if(!hasAtLeast1Match) continue\r\n        }\r\n\r\n        var objResults = new KeysResult(keysLen)\r\n        for(let i=0; i < keysLen; i++) { objResults[i] = tmpResults[i] }\r\n\r\n        if(containsSpace) {\r\n          var score = 0\r\n          for(let i=0; i<preparedSearch.spaceSearches.length; i++) score += keysSpacesBestScores[i]\r\n        } else {\r\n          // todo could rewrite this scoring to be more similar to when there's spaces\r\n          // if we match multiple keys give us bonus points\r\n          var score = NEGATIVE_INFINITY\r\n          for(let i=0; i<keysLen; i++) {\r\n            var result = objResults[i]\r\n            if(result._score > -1000) {\r\n              if(score > NEGATIVE_INFINITY) {\r\n                var tmp = (score + result._score) / 4/*bonus score for having multiple matches*/\r\n                if(tmp > score) score = tmp\r\n              }\r\n            }\r\n            if(result._score > score) score = result._score\r\n          }\r\n        }\r\n\r\n        objResults.obj = obj\r\n        objResults._score = score\r\n        if(options?.scoreFn) {\r\n          score = options.scoreFn(objResults)\r\n          if(!score) continue\r\n          score = denormalizeScore(score)\r\n          objResults._score = score\r\n        }\r\n\r\n        if(score < threshold) continue\r\n        push_result(objResults)\r\n      }\r\n\r\n    // no keys\r\n    } else {\r\n      for(var i = 0; i < targetsLen; ++i) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result._score < threshold) continue\r\n\r\n        push_result(result)\r\n      }\r\n    }\r\n\r\n    if(resultsLen === 0) return noResults\r\n    var results = new Array(resultsLen)\r\n    for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n    results.total = resultsLen + limitedCount\r\n    return results\r\n  }\r\n\r\n\r\n  // this is written as 1 function instead of 2 for minification. perf seems fine ...\r\n  // except when minified. the perf is very slow\r\n  var highlight = (result, open='<b>', close='</b>') => {\r\n    var callback = typeof open === 'function' ? open : undefined\r\n\r\n    var target      = result.target\r\n    var targetLen   = target.length\r\n    var indexes     = result.indexes\r\n    var highlighted = ''\r\n    var matchI      = 0\r\n    var indexesI    = 0\r\n    var opened      = false\r\n    var parts       = []\r\n\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[indexesI] === i) {\r\n        ++indexesI\r\n        if(!opened) { opened = true\r\n          if(callback) {\r\n            parts.push(highlighted); highlighted = ''\r\n          } else {\r\n            highlighted += open\r\n          }\r\n        }\r\n\r\n        if(indexesI === indexes.length) {\r\n          if(callback) {\r\n            highlighted += char\r\n            parts.push(callback(highlighted, matchI++)); highlighted = ''\r\n            parts.push(target.substr(i+1))\r\n          } else {\r\n            highlighted += char + close + target.substr(i+1)\r\n          }\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          if(callback) {\r\n            parts.push(callback(highlighted, matchI++)); highlighted = ''\r\n          } else {\r\n            highlighted += close\r\n          }\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n\r\n    return callback ? parts : highlighted\r\n  }\r\n\r\n\r\n  var prepare = (target) => {\r\n    if(typeof target === 'number') target = ''+target\r\n    else if(typeof target !== 'string') target = ''\r\n    var info = prepareLowerInfo(target)\r\n    return new_result(target, {_targetLower:info._lower, _targetLowerCodes:info.lowerCodes, _bitflags:info.bitflags})\r\n  }\r\n\r\n  var cleanup = () => { preparedCache.clear(); preparedSearchCache.clear() }\r\n\r\n\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n\r\n\r\n  class Result {\r\n    get ['indexes']() { return this._indexes.slice(0, this._indexes.len).sort((a,b)=>a-b) }\r\n    set ['indexes'](indexes) { return this._indexes = indexes }\r\n    ['highlight'](open, close) { return highlight(this, open, close) }\r\n    get ['score']() { return normalizeScore(this._score) }\r\n    set ['score'](score) { this._score = denormalizeScore(score) }\r\n  }\r\n\r\n  class KeysResult extends Array {\r\n    get ['score']() { return normalizeScore(this._score) }\r\n    set ['score'](score) { this._score = denormalizeScore(score) }\r\n  }\r\n\r\n  var new_result = (target, options) => {\r\n    const result = new Result()\r\n    result['target']             = target\r\n    result['obj']                = options.obj                   ?? NULL\r\n    result._score                = options._score                ?? NEGATIVE_INFINITY\r\n    result._indexes              = options._indexes              ?? []\r\n    result._targetLower          = options._targetLower          ?? ''\r\n    result._targetLowerCodes     = options._targetLowerCodes     ?? NULL\r\n    result._nextBeginningIndexes = options._nextBeginningIndexes ?? NULL\r\n    result._bitflags             = options._bitflags             ?? 0\r\n    return result\r\n  }\r\n\r\n\r\n  var normalizeScore = score => {\r\n    if(score === NEGATIVE_INFINITY) return 0\r\n    if(score > 1) return score\r\n    return Math.E ** ( ((-score + 1)**.04307 - 1) * -2)\r\n  }\r\n  var denormalizeScore = normalizedScore => {\r\n    if(normalizedScore === 0) return NEGATIVE_INFINITY\r\n    if(normalizedScore > 1) return normalizedScore\r\n    return 1 - Math.pow((Math.log(normalizedScore) / -2 + 1), 1 / 0.04307)\r\n  }\r\n\r\n\r\n  var prepareSearch = (search) => {\r\n    if(typeof search === 'number') search = ''+search\r\n    else if(typeof search !== 'string') search = ''\r\n    search = search.trim()\r\n    var info = prepareLowerInfo(search)\r\n\r\n    var spaceSearches = []\r\n    if(info.containsSpace) {\r\n      var searches = search.split(/\\s+/)\r\n      searches = [...new Set(searches)] // distinct\r\n      for(var i=0; i<searches.length; i++) {\r\n        if(searches[i] === '') continue\r\n        var _info = prepareLowerInfo(searches[i])\r\n        spaceSearches.push({lowerCodes:_info.lowerCodes, _lower:searches[i].toLowerCase(), containsSpace:false})\r\n      }\r\n    }\r\n\r\n    return {lowerCodes: info.lowerCodes, _lower: info._lower, containsSpace: info.containsSpace, bitflags: info.bitflags, spaceSearches: spaceSearches}\r\n  }\r\n\r\n\r\n\r\n  var getPrepared = (target) => {\r\n    if(target.length > 999) return prepare(target) // don't cache huge targets\r\n    var targetPrepared = preparedCache.get(target)\r\n    if(targetPrepared !== undefined) return targetPrepared\r\n    targetPrepared = prepare(target)\r\n    preparedCache.set(target, targetPrepared)\r\n    return targetPrepared\r\n  }\r\n  var getPreparedSearch = (search) => {\r\n    if(search.length > 999) return prepareSearch(search) // don't cache huge searches\r\n    var searchPrepared = preparedSearchCache.get(search)\r\n    if(searchPrepared !== undefined) return searchPrepared\r\n    searchPrepared = prepareSearch(search)\r\n    preparedSearchCache.set(search, searchPrepared)\r\n    return searchPrepared\r\n  }\r\n\r\n\r\n  var all = (targets, options) => {\r\n    var results = []; results.total = targets.length // this total can be wrong if some targets are skipped\r\n\r\n    var limit = options?.limit || INFINITY\r\n\r\n    if(options?.key) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var target = getValue(obj, options.key)\r\n        if(target == NULL) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n        var result = new_result(target.target, {_score: target._score, obj: obj})\r\n        results.push(result); if(results.length >= limit) return results\r\n      }\r\n    } else if(options?.keys) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var objResults = new KeysResult(options.keys.length)\r\n        for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n          var target = getValue(obj, options.keys[keyI])\r\n          if(!target) { objResults[keyI] = noTarget; continue }\r\n          if(!isPrepared(target)) target = getPrepared(target)\r\n          target._score = NEGATIVE_INFINITY\r\n          target._indexes.len = 0\r\n          objResults[keyI] = target\r\n        }\r\n        objResults.obj = obj\r\n        objResults._score = NEGATIVE_INFINITY\r\n        results.push(objResults); if(results.length >= limit) return results\r\n      }\r\n    } else {\r\n      for(var i=0;i<targets.length;i++) { var target = targets[i]\r\n        if(target == NULL) continue\r\n        if(!isPrepared(target)) target = getPrepared(target)\r\n        target._score = NEGATIVE_INFINITY\r\n        target._indexes.len = 0\r\n        results.push(target); if(results.length >= limit) return results\r\n      }\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  var algorithm = (preparedSearch, prepared, allowSpaces=false, allowPartialMatch=false) => {\r\n    if(allowSpaces===false && preparedSearch.containsSpace) return algorithmSpaces(preparedSearch, prepared, allowPartialMatch)\r\n\r\n    var searchLower      = preparedSearch._lower\r\n    var searchLowerCodes = preparedSearch.lowerCodes\r\n    var searchLowerCode  = searchLowerCodes[0]\r\n    var targetLowerCodes = prepared._targetLowerCodes\r\n    var searchLen        = searchLowerCodes.length\r\n    var targetLen        = targetLowerCodes.length\r\n    var searchI          = 0 // where we at\r\n    var targetI          = 0 // where you at\r\n    var matchesSimpleLen = 0\r\n\r\n    // very basic fuzzy match; to remove non-matching targets ASAP!\r\n    // walk through target. find sequential matches.\r\n    // if all chars aren't found then exit\r\n    for(;;) {\r\n      var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n      if(isMatch) {\r\n        matchesSimple[matchesSimpleLen++] = targetI\r\n        ++searchI; if(searchI === searchLen) break\r\n        searchLowerCode = searchLowerCodes[searchI]\r\n      }\r\n      ++targetI; if(targetI >= targetLen) return NULL // Failed to find searchI\r\n    }\r\n\r\n    var searchI = 0\r\n    var successStrict = false\r\n    var matchesStrictLen = 0\r\n\r\n    var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n    if(nextBeginningIndexes === NULL) nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target)\r\n    targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n    // Our target string successfully matched all characters in sequence!\r\n    // Let's try a more advanced and strict test to improve the score\r\n    // only count it as a match if it's consecutive or a beginning character!\r\n    var backtrackCount = 0\r\n    if(targetI !== targetLen) for(;;) {\r\n      if(targetI >= targetLen) {\r\n        // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n        if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n        ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n        --searchI\r\n        var lastMatch = matchesStrict[--matchesStrictLen]\r\n        targetI = nextBeginningIndexes[lastMatch]\r\n\r\n      } else {\r\n        var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesStrict[matchesStrictLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n          ++targetI\r\n        } else {\r\n          targetI = nextBeginningIndexes[targetI]\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if it's a substring match\r\n    var substringIndex = searchLen <= 1 ? -1 : prepared._targetLower.indexOf(searchLower, matchesSimple[0]) // perf: this is slow\r\n    var isSubstring = !!~substringIndex\r\n    var isSubstringBeginning = !isSubstring ? false : substringIndex===0 || prepared._nextBeginningIndexes[substringIndex-1] === substringIndex\r\n\r\n    // if it's a substring match but not at a beginning index, let's try to find a substring starting at a beginning index for a better score\r\n    if(isSubstring && !isSubstringBeginning) {\r\n      for(var i=0; i<nextBeginningIndexes.length; i=nextBeginningIndexes[i]) {\r\n        if(i <= substringIndex) continue\r\n\r\n        for(var s=0; s<searchLen; s++) if(searchLowerCodes[s] !== prepared._targetLowerCodes[i+s]) break\r\n        if(s === searchLen) { substringIndex = i; isSubstringBeginning = true; break }\r\n      }\r\n    }\r\n\r\n    // tally up the score & keep track of matches for highlighting later\r\n    // if it's a simple match, we'll switch to a substring match if a substring exists\r\n    // if it's a strict match, we'll switch to a substring match only if that's a better score\r\n\r\n    var calculateScore = matches => {\r\n      var score = 0\r\n\r\n      var extraMatchGroupCount = 0\r\n      for(var i = 1; i < searchLen; ++i) {\r\n        if(matches[i] - matches[i-1] !== 1) {score -= matches[i]; ++extraMatchGroupCount}\r\n      }\r\n      var unmatchedDistance = matches[searchLen-1] - matches[0] - (searchLen-1)\r\n\r\n      score -= (12+unmatchedDistance) * extraMatchGroupCount // penality for more groups\r\n\r\n      if(matches[0] !== 0) score -= matches[0]*matches[0]*.2 // penality for not starting near the beginning\r\n\r\n      if(!successStrict) {\r\n        score *= 1000\r\n      } else {\r\n        // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n        var uniqueBeginningIndexes = 1\r\n        for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes\r\n\r\n        if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10 // quite arbitrary numbers here ...\r\n      }\r\n\r\n      score -= (targetLen - searchLen)/2 // penality for longer targets\r\n\r\n      if(isSubstring)          score /= 1+searchLen*searchLen*1 // bonus for being a full substring\r\n      if(isSubstringBeginning) score /= 1+searchLen*searchLen*1 // bonus for substring starting on a beginningIndex\r\n\r\n      score -= (targetLen - searchLen)/2 // penality for longer targets\r\n\r\n      return score\r\n    }\r\n\r\n    if(!successStrict) {\r\n      if(isSubstring) for(var i=0; i<searchLen; ++i) matchesSimple[i] = substringIndex+i // at this point it's safe to overwrite matchehsSimple with substr matches\r\n      var matchesBest = matchesSimple\r\n      var score = calculateScore(matchesBest)\r\n    } else {\r\n      if(isSubstringBeginning) {\r\n        for(var i=0; i<searchLen; ++i) matchesSimple[i] = substringIndex+i // at this point it's safe to overwrite matchehsSimple with substr matches\r\n        var matchesBest = matchesSimple\r\n        var score = calculateScore(matchesSimple)\r\n      } else {\r\n        var matchesBest = matchesStrict\r\n        var score = calculateScore(matchesStrict)\r\n      }\r\n    }\r\n\r\n    prepared._score = score\r\n\r\n    for(var i = 0; i < searchLen; ++i) prepared._indexes[i] = matchesBest[i]\r\n    prepared._indexes.len = searchLen\r\n\r\n    const result    = new Result()\r\n    result.target   = prepared.target\r\n    result._score   = prepared._score\r\n    result._indexes = prepared._indexes\r\n    return result\r\n  }\r\n  var algorithmSpaces = (preparedSearch, target, allowPartialMatch) => {\r\n    var seen_indexes = new Set()\r\n    var score = 0\r\n    var result = NULL\r\n\r\n    var first_seen_index_last_search = 0\r\n    var searches = preparedSearch.spaceSearches\r\n    var searchesLen = searches.length\r\n    var changeslen = 0\r\n\r\n    // Return _nextBeginningIndexes back to its normal state\r\n    var resetNextBeginningIndexes = () => {\r\n      for(let i=changeslen-1; i>=0; i--) target._nextBeginningIndexes[nextBeginningIndexesChanges[i*2 + 0]] = nextBeginningIndexesChanges[i*2 + 1]\r\n    }\r\n\r\n    var hasAtLeast1Match = false\r\n    for(var i=0; i<searchesLen; ++i) {\r\n      allowPartialMatchScores[i] = NEGATIVE_INFINITY\r\n      var search = searches[i]\r\n\r\n      result = algorithm(search, target)\r\n      if(allowPartialMatch) {\r\n        if(result === NULL) continue\r\n        hasAtLeast1Match = true\r\n      } else {\r\n        if(result === NULL) {resetNextBeginningIndexes(); return NULL}\r\n      }\r\n\r\n      // if not the last search, we need to mutate _nextBeginningIndexes for the next search\r\n      var isTheLastSearch = i === searchesLen - 1\r\n      if(!isTheLastSearch) {\r\n        var indexes = result._indexes\r\n\r\n        var indexesIsConsecutiveSubstring = true\r\n        for(let i=0; i<indexes.len-1; i++) {\r\n          if(indexes[i+1] - indexes[i] !== 1) {\r\n            indexesIsConsecutiveSubstring = false; break;\r\n          }\r\n        }\r\n\r\n        if(indexesIsConsecutiveSubstring) {\r\n          var newBeginningIndex = indexes[indexes.len-1] + 1\r\n          var toReplace = target._nextBeginningIndexes[newBeginningIndex-1]\r\n          for(let i=newBeginningIndex-1; i>=0; i--) {\r\n            if(toReplace !== target._nextBeginningIndexes[i]) break\r\n            target._nextBeginningIndexes[i] = newBeginningIndex\r\n            nextBeginningIndexesChanges[changeslen*2 + 0] = i\r\n            nextBeginningIndexesChanges[changeslen*2 + 1] = toReplace\r\n            changeslen++\r\n          }\r\n        }\r\n      }\r\n\r\n      score += result._score / searchesLen\r\n      allowPartialMatchScores[i] = result._score / searchesLen\r\n\r\n      // dock points based on order otherwise \"c man\" returns Manifest.cpp instead of CheatManager.h\r\n      if(result._indexes[0] < first_seen_index_last_search) {\r\n        score -= (first_seen_index_last_search - result._indexes[0]) * 2\r\n      }\r\n      first_seen_index_last_search = result._indexes[0]\r\n\r\n      for(var j=0; j<result._indexes.len; ++j) seen_indexes.add(result._indexes[j])\r\n    }\r\n\r\n    if(allowPartialMatch && !hasAtLeast1Match) return NULL\r\n\r\n    resetNextBeginningIndexes()\r\n\r\n    // allows a search with spaces that's an exact substring to score well\r\n    var allowSpacesResult = algorithm(preparedSearch, target, /*allowSpaces=*/true)\r\n    if(allowSpacesResult !== NULL && allowSpacesResult._score > score) {\r\n      if(allowPartialMatch) {\r\n        for(var i=0; i<searchesLen; ++i) {\r\n          allowPartialMatchScores[i] = allowSpacesResult._score / searchesLen\r\n        }\r\n      }\r\n      return allowSpacesResult\r\n    }\r\n\r\n    if(allowPartialMatch) result = target\r\n    result._score = score\r\n\r\n    var i = 0\r\n    for (let index of seen_indexes) result._indexes[i++] = index\r\n    result._indexes.len = i\r\n\r\n    return result\r\n  }\r\n\r\n  // we use this instead of just .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') because that screws with japanese characters\r\n  var remove_accents = (str) => str.replace(/\\p{Script=Latin}+/gu, match => match.normalize('NFD')).replace(/[\\u0300-\\u036f]/g, '')\r\n\r\n  var prepareLowerInfo = (str) => {\r\n    str = remove_accents(str)\r\n    var strLen = str.length\r\n    var lower = str.toLowerCase()\r\n    var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n    var bitflags = 0\r\n    var containsSpace = false // space isn't stored in bitflags because of how searching with a space works\r\n\r\n    for(var i = 0; i < strLen; ++i) {\r\n      var lowerCode = lowerCodes[i] = lower.charCodeAt(i)\r\n\r\n      if(lowerCode === 32) {\r\n        containsSpace = true\r\n        continue // it's important that we don't set any bitflags for space\r\n      }\r\n\r\n      var bit = lowerCode>=97&&lowerCode<=122 ? lowerCode-97 // alphabet\r\n              : lowerCode>=48&&lowerCode<=57  ? 26           // numbers\r\n                                                             // 3 bits available\r\n              : lowerCode<=127                ? 30           // other ascii\r\n              :                                 31           // other utf8\r\n      bitflags |= 1<<bit\r\n    }\r\n\r\n    return {lowerCodes:lowerCodes, bitflags:bitflags, containsSpace:containsSpace, _lower:lower}\r\n  }\r\n  var prepareBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = []; var beginningIndexesLen = 0\r\n    var wasUpper = false\r\n    var wasAlphanum = false\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      var targetCode = target.charCodeAt(i)\r\n      var isUpper = targetCode>=65&&targetCode<=90\r\n      var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n      var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n      wasUpper = isUpper\r\n      wasAlphanum = isAlphanum\r\n      if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n    }\r\n    return beginningIndexes\r\n  }\r\n  var prepareNextBeginningIndexes = (target) => {\r\n    target = remove_accents(target)\r\n    var targetLen = target.length\r\n    var beginningIndexes = prepareBeginningIndexes(target)\r\n    var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n    var lastIsBeginning = beginningIndexes[0]\r\n    var lastIsBeginningI = 0\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      if(lastIsBeginning > i) {\r\n        nextBeginningIndexes[i] = lastIsBeginning\r\n      } else {\r\n        lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n        nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n      }\r\n    }\r\n    return nextBeginningIndexes\r\n  }\r\n\r\n  var preparedCache       = new Map()\r\n  var preparedSearchCache = new Map()\r\n\r\n  // the theory behind these being globals is to reduce garbage collection by not making new arrays\r\n  var matchesSimple = []; var matchesStrict = []\r\n  var nextBeginningIndexesChanges = [] // allows straw berry to match strawberry well, by modifying the end of a substring to be considered a beginning index for the rest of the search\r\n  var keysSpacesBestScores = []; var allowPartialMatchScores = []\r\n  var tmpTargets = []; var tmpResults = []\r\n\r\n  // prop = 'key'                  2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'            10ms\r\n  // prop = ['key1', 'key2']       27ms\r\n  // prop = obj => obj.tags.join() ??ms\r\n  var getValue = (obj, prop) => {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    if(typeof prop === 'function') return prop(obj) // this should run first. but that makes string props slower\r\n    var segs = prop\r\n    if(!Array.isArray(prop)) segs = prop.split('.')\r\n    var len = segs.length\r\n    var i = -1\r\n    while (obj && (++i < len)) obj = obj[segs[i]]\r\n    return obj\r\n  }\r\n\r\n  var isPrepared = (x) => { return typeof x === 'object' && typeof x._bitflags === 'number' }\r\n  var INFINITY = Infinity; var NEGATIVE_INFINITY = -INFINITY\r\n  var noResults = []; noResults.total = 0\r\n  var NULL = null\r\n\r\n  var noTarget = prepare('')\r\n\r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=r=>{var e=[],o=0,a={},v=r=>{for(var a=0,v=e[a],c=1;c<o;){var s=c+1;a=c,s<o&&e[s]._score<e[c]._score&&(a=s),e[a-1>>1]=e[a],c=1+(a<<1)}for(var f=a-1>>1;a>0&&v._score<e[f]._score;f=(a=f)-1>>1)e[a]=e[f];e[a]=v};return a.add=(r=>{var a=o;e[o++]=r;for(var v=a-1>>1;a>0&&r._score<e[v]._score;v=(a=v)-1>>1)e[a]=e[v];e[a]=r}),a.poll=(r=>{if(0!==o){var a=e[0];return e[0]=e[--o],v(),a}}),a.peek=(r=>{if(0!==o)return e[0]}),a.replaceTop=(r=>{e[0]=r,v()}),a}\r\n  var q = fastpriorityqueue() // reuse this\r\n\r\n  // fuzzysort is written this way for minification. all names are mangeled unless quoted\r\n  return {'single':single, 'go':go, 'prepare':prepare, 'cleanup':cleanup}\r\n}) // UMD\r\n","import { BaseFilter } from \"./filters/base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/**\n * The basic compendium browser class allowing the browsing of compendiums by utilising their indexes.\n *\n * Extending classes must define the following static properties if the browser is not meant to browse Item documents: {@link documentName}.\n * Extending classes should define the following static properties: {@link typeName}, {@link filterClasses}.\n *\n * @abstract\n */\nexport class CompendiumBrowser extends Application {\n  /**\n   * The document name of entries this browser displays.\n   *\n   * @abstract\n   * @type {\"Actor\" | \"Item\"}\n   */\n  static documentName = \"Item\";\n\n  /**\n   * A localisation string used in the browser's title.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static typeName;\n\n  /**\n   * An array of classes extending {@link BaseFilter} that should be used for this browser.\n   *\n   * @type {Array<typeof BaseFilter>}\n   */\n  static filterClasses = [];\n\n  /**\n   * The template used to render individual entries in the browser.\n   *\n   * @type {string}\n   */\n  static ENTRY_TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/entries.hbs\";\n\n  /**\n   * A `Promise` that resolves once all pack indexes have been loaded.\n   *\n   * @internal\n   * @type {Map<string, Promise<void>>}\n   */\n  static #indexingPromises = new Map();\n\n  /**\n   * The set of filters to apply to the compendium index.\n   *\n   * @type {Collection<BaseFilter>}\n   */\n  filters = new foundry.utils.Collection();\n\n  /**\n   * The types of entries this browser handles, as per a document's `type` property.\n   *\n   * @type {Set<string>}\n   */\n  handledTypes = new Set();\n\n  /**\n   * Compendium packs this browser gets entries from.\n   *\n   * @type {CompendiumCollection[]}\n   */\n  packs = [];\n\n  /**\n   * A set of filters that were expanded by the user, and should stay expanded upon re-render.\n   *\n   * @type {Set<string>}\n   */\n  expandedFilters = new Set();\n\n  /**\n   * The {@link Collection} of index entries this browser is aware of.\n   *\n   * @readonly\n   * @type {Collection<IndexEntry>}\n   */\n  entries;\n\n  /**\n   * The current search query entered by the user.\n   *\n   * @private\n   * @type {string}\n   */\n  _query = \"\";\n\n  /**\n   * An object containing data used to render the loading spinner and related text.\n   *\n   * @private\n   * @type {object | null}\n   */\n  _loadingInfo = null;\n\n  /**\n   * Whether the browser and its data have been set up using {@link CompendiumBrowser.setup}.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  #setup = false;\n\n  constructor(options = {}) {\n    super(options);\n    /**\n     * All index entries this compendium browser is aware of.\n     *\n     * @type {Collection<object>}\n     */\n    Object.defineProperty(this, \"entries\", { value: new Collection() });\n    this.initialize();\n    this._debouncedRender = foundry.utils.debounce(this.render, 300);\n\n    this._boundResetDragHide = this._resetDragHide.bind(this);\n\n    this._startGlobalListenerts();\n  }\n\n  /** @override */\n  async close(...args) {\n    this._stopGlobalListeners();\n    return super.close(...args);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: \"systems/pf1/templates/apps/compendium-browser/compendium-browser.hbs\",\n      classes: [\"pf1\", \"app\", \"compendium-browser\"],\n      id: `pf1-compendium-browser-${this.name}`,\n      width: 800,\n      height: window.innerHeight - 60,\n      top: 30,\n      left: 40,\n      resizable: true,\n      scrollY: [\".filter-container\"],\n      dragDrop: [{ dragSelector: \".directory-item\", dropSelector: null }],\n    });\n  }\n\n  /**\n   * Known browsers.\n   *\n   * Initialized in {@link initializeBrowsers}\n   *\n   * @internal\n   */\n  static BROWSERS = {};\n\n  /**\n   * Fill {@link BROWSERS}\n   *\n   * Called in `init` hook.\n   *\n   * @internal\n   */\n  static registerDefault() {\n    this.BROWSERS.items = pf1.applications.compendiumBrowser.ItemBrowser;\n    this.BROWSERS.feats = pf1.applications.compendiumBrowser.FeatBrowser;\n    this.BROWSERS.spells = pf1.applications.compendiumBrowser.SpellBrowser;\n    this.BROWSERS.classes = pf1.applications.compendiumBrowser.ClassBrowser;\n    this.BROWSERS.races = pf1.applications.compendiumBrowser.RaceBrowser;\n    this.BROWSERS.bestiary = pf1.applications.compendiumBrowser.CreatureBrowser;\n    this.BROWSERS.buffs = pf1.applications.compendiumBrowser.BuffBrowser;\n  }\n\n  /**\n   * Initialize all {@link CompendiumBrowser}s found in {@link pf1.applications.compendiumBrowser}\n   * and register them in {@link pf1.applications.compendiums}.\n   */\n  static initializeBrowsers() {\n    const compendiums = pf1.applications.compendiums;\n    for (const [id, cls] of Object.entries(this.BROWSERS)) {\n      compendiums[id] = new cls();\n    }\n  }\n\n  /**\n   * Request indexes of all packs of a document type to be loaded.\n   * This method should only ever be called as {@link CompendiumBrowser.getIndexes} to ensure Promises are properly bundled.\n   *\n   * @param {string[]} packNames - The names of the packs to load indexes for\n   * @see {@link CompendiumBrowser.#indexingPromise}\n   * @returns {Promise<void>} A `Promise` that resolves once all indexes have been loaded\n   */\n  static getIndexes(packNames = []) {\n    const packs = packNames.map((name) => game.packs.get(name));\n    const resultPromise = [];\n    for (const pack of packs) {\n      if (!this.#indexingPromises.has(pack.collection)) {\n        this.#indexingPromises.set(pack.collection, pack.getIndex());\n      }\n      resultPromise.push(this.#indexingPromises.get(pack.collection));\n    }\n    return Promise.all(resultPromise).finally(() => {\n      for (const pack of packs) {\n        this.#indexingPromises.delete(pack.collection);\n      }\n    });\n  }\n\n  /**\n   * Map an entry from a compendium to the format used by the browser.\n   *\n   * @param {object} entry - The entry to map\n   * @param {CompendiumCollection} pack - The compendium the entry is from\n   * @returns {IndexEntry} The mapped entry\n   */\n  static _mapEntry(entry, pack) {\n    // NOTE: This decouples the entry from the compendium; it will no longer be refreshed automatically, but changes will stick\n    const result = foundry.utils.deepClone(entry);\n    // Add default `system` data for the entry's type, as pruned compendium data omits default values\n    result.system = foundry.utils.mergeObject(game.model[this.documentName][entry.type], result.system, {\n      inplace: false,\n    });\n    // Add `pack` related fields to allow filtering by pack and label display\n    result.__pack = pack.collection;\n    result.__packLabel = pack.metadata.label;\n\n    result.__uuid = pack.getUuid(entry._id);\n    // Prepare `__name` field for fuzzy search optimisation\n    result.__name = fuzzysort.prepare(entry.name.normalize(\"NFKD\"));\n\n    return result;\n  }\n\n  /**\n   * Renders an array of {@link IndexEntry} objects into HTML.\n   *\n   * @private\n   * @param {IndexEntry[]} entries - The entries to render\n   * @returns {Promise<string>} The rendered HTML\n   */\n  static async _renderEntries(entries) {\n    return renderTemplate(this.ENTRY_TEMPLATE, { entries });\n  }\n\n  /** @inheritDoc */\n  get title() {\n    return game.i18n.format(\"PF1.CompendiumBrowserTitle\", { type: game.i18n.localize(this.constructor.typeName) });\n  }\n\n  /**\n   * Perform minimal preparation steps to initialize the compendium browser.\n   * Add filters and determine which compendiums include data relevant to this browser.\n   *\n   * @protected\n   */\n  initialize() {\n    this.filters?.clear();\n    for (const cls of this.constructor.filterClasses) {\n      if (!(cls.prototype instanceof BaseFilter)) {\n        throw new Error(`Filter class ${cls.name} does not extend BaseFilter`);\n      }\n      const filter = new cls(this);\n      this.filters.set(filter.id, filter);\n      // Add all types handled by that filter to the browser's list of handled types\n      cls.handledTypes.forEach((type) => this.handledTypes.add(type));\n    }\n    this.packs = game.packs.filter((pack) => this.isPackIncluded(pack));\n    this._loadingInfo = {\n      indexCount: this.packs.length,\n      entryCount: this.packs.reduce(\n        (acc, pack) => acc + pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length,\n        0\n      ),\n    };\n  }\n\n  /**\n   * Enable queued filters\n   *\n   * @internal\n   * @experimental\n   */\n  _activateFilterQueue() {\n    if (!this.#setup) return;\n\n    if (!this.#filterQueue) return;\n\n    // Disable existing filters\n    for (const filter of this.filters) {\n      for (const choice of filter.choices) choice.active = false;\n    }\n\n    const idToFilter = {\n      type: \"ItemTypeFilter\",\n      level: \"SpellLevelFilter\",\n      class: \"SpellLearnedByClassFilter\",\n      classType: \"ClassTypeFilter\",\n      buffType: \"BuffTypeFilter\",\n      featType: \"FeatTypeFilter\",\n      lootType: \"MiscItemTypeFilter\",\n      equipmentType: \"EquipmentTypeFilter\",\n      tags: \"TagFilter\",\n    };\n\n    for (const [filterId, choices] of Object.entries(this.#filterQueue)) {\n      const filterName = idToFilter[filterId];\n      const filter = this.filters.find((f) => f.constructor.name === filterName);\n      if (!filter) {\n        console.warn(`Filter \"${filterId}\" not found.`);\n        continue;\n      }\n\n      for (const [key, choice] of filter.choices.entries()) {\n        choice.active = choices.includes(key);\n        if (choice.active) this.expandedFilters.add(filter.id);\n      }\n    }\n\n    this.#filterQueue = null;\n  }\n\n  #filterQueue;\n  /**\n   * Queue filters to be processed by {@link _activateFilterQueue}\n   *\n   * Only one filter bundle is ever queued.\n   *\n   * @internal\n   * @param {object} filters\n   * @experimental\n   */\n  _queueFilters(filters) {\n    this.#filterQueue = filters;\n  }\n\n  /**\n   * Check whether a compendium should be included in the browser.\n   *\n   * @param {CompendiumCollection} pack - The compendium to test\n   * @returns {boolean} Whether the compendium should be included\n   */\n  isPackIncluded(pack) {\n    // Only include enabled packs with the right document type made for PF1\n    if (pack.config.pf1?.disabled) return false;\n    if (pack.documentName !== this.constructor.documentName) return false;\n    if (pack.metadata.system !== game.system.id) return false;\n\n    // Skip if pack is not visible to current user\n    if (!pack.visible) return false;\n\n    // Avoid unnecessarily adding packs that don't contain any relevant entries\n    if (pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length === 0) return false;\n\n    // Don't skip the compendium\n    return true;\n  }\n\n  /**\n   * Perform the initial setup of the compendium browser.\n   * This includes requesting the index of all relevant compendiums if necessary and preparing the filters.\n   *\n   * @returns {Promise<void>}\n   */\n  async setup() {\n    this.#setup = false;\n    this.entries?.clear();\n    await CompendiumBrowser.getIndexes(this.packs.map((pack) => pack.collection));\n    const unorderedEntries = await Promise.all(this.packs.map((pack) => this.loadPackIndex(pack)));\n    pf1.utils\n      .naturalSort(unorderedEntries.flat(), \"name\")\n      .forEach((entry) => this.entries.set(`${entry.__uuid}`, entry));\n    await Promise.all(this.filters.map((filter) => filter.setup()));\n    this.#setup = true;\n  }\n\n  /**\n   * Load a compendium's index to prepare it for browsing.\n   *\n   * @param {CompendiumCollection} pack - The compendium to load\n   * @returns {Promise<IndexEntry[]>} The loaded index entries\n   */\n  async loadPackIndex(pack) {\n    if (pack.indexed === false) await CompendiumBrowser.getIndexes(pack.collection);\n    const index = pack.index;\n    return index\n      .filter((entry) => this.handledTypes.has(entry.type))\n      .map((entry) => {\n        try {\n          return this.constructor._mapEntry(entry, pack);\n        } catch (err) {\n          Hooks.onError(`CompendiumBrowser#_mapEntry`, err, {\n            msg: `${this.constructor.name} failed to map entry ${entry.name} [${entry._id}] from pack ${pack.collection}`,\n            log: \"error\",\n            entry,\n            pack,\n          });\n          return null;\n        }\n      })\n      .filter((entry) => entry !== null);\n  }\n\n  /**\n   * Get the current set of entries allowed by the filters.\n   *\n   * @returns {IndexEntry[]} The filtered entries\n   */\n  getFilteredEntries() {\n    let entries = this.entries.contents;\n\n    const activeFilters = this.filters.filter((filter) => filter.active);\n    if (activeFilters.length)\n      entries = entries.filter((entry) => activeFilters.every((filter) => filter.applyFilter(entry)));\n\n    if (this._query) {\n      const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), {\n        numeric: true,\n        ignorePunctuation: true,\n      });\n      entries = fuzzysort\n        .go(this._query.normalize(\"NFKD\"), entries, { key: \"__name\", threshold: -10000 })\n        .sort((a, b) => {\n          // Sort by score first, then alphabetically by name\n          if (a.score !== b.score) return b.score - a.score;\n          else return collator.compare(a.obj.name, b.obj.name);\n        })\n        .map((match) => match.obj);\n    }\n\n    return entries;\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    // Identify the focused element\n    const focus = this.element?.[0]?.querySelector(\":focus\");\n    const selectionStart = focus?.selectionStart;\n\n    // Render the application and restore focus\n    await super._render(force, options);\n    if (focus && focus.name) {\n      const input = this._element[0].querySelector(`[name=\"${focus.name}\"]`);\n      if (input && input.focus instanceof Function) {\n        input.focus();\n        if (selectionStart) input.selectionStart = input.selectionEnd = selectionStart;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  async getData() {\n    const context = await super.getData();\n\n    this._activateFilterQueue();\n\n    context.id = this.options.id;\n    context.query = this._query ?? \"\";\n    context.filters = this.filters\n      .filter((filter) => filter.hasChoices())\n      .map((filter) => ({\n        ...filter.getData(),\n        collapsed: this.expandedFilters.has(filter.id) ? \"\" : \"collapsed\",\n      }));\n\n    if (this.#setup) {\n      // Browser is set up, so we can render the entries\n      this._entries = this.getFilteredEntries();\n      context.entries = this._entries.slice(0, 100);\n      context.itemCount = this.entries.size;\n      context.filteredItemCount = this._entries.length;\n    } else {\n      // Browser is not set up, display a loading spinner\n      context.loading = true;\n      context.loadingInfo = this._loadingInfo;\n    }\n    return context;\n  }\n\n  _refocus = true;\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    /** @type {HTMLElement} */\n    const el = html[0];\n\n    if (this._priorState <= this.constructor.RENDER_STATES.NONE) this._refocus = true;\n\n    // If the browser is not set up yet, start the process and render again once it is done\n    if (!this.#setup) {\n      this.setup().then(() => this.render());\n      // No listeners have to be activated yet, so we can return here\n      return;\n    }\n\n    // Fix autofocus (the above re-render breaks it)\n    if (this._refocus) {\n      el.querySelector(\"[autofocus]\")?.focus();\n      this._refocus = false;\n    }\n\n    this._initLazyScrolling(el);\n\n    // Activate listeners for filters, allowing them to define their own\n    el.querySelectorAll(\".filter-content\").forEach((filterContent) => {\n      const filter = this.filters.get(filterContent.closest(\".filter\").dataset.filterId);\n      filter.activateListeners(filterContent);\n    });\n\n    el.querySelector(\".directory-list\").addEventListener(\"click\", (event) => {\n      this._onClickEntry(event);\n    });\n\n    el.querySelector(\"button.reload\").addEventListener(\"click\", (event) => {\n      this._onReload(event);\n    });\n\n    el.querySelector(\"button.clear-filters\").addEventListener(\"click\", (event) => {\n      this._onClearFilters(event);\n    });\n\n    el.querySelectorAll(\".filter>h3\").forEach((header) => {\n      header.addEventListener(\"click\", (event) => {\n        this._onFilterHeaderClick(event);\n      });\n    });\n\n    el.querySelector(\"input[name=filter]\")?.addEventListener(\"input\", (event) => {\n      this._onCustomSearchFilter(event);\n    });\n\n    for (const a of el.querySelectorAll(\"a[data-action]\")) {\n      a.addEventListener(\"click\", this._onAction.bind(this));\n    }\n\n    ContextMenu.create(this, html, \".directory-item\", this._getEntryContextOptions());\n  }\n\n  /**\n   * @protected\n   * @param {PointerEvent} event\n   */\n  _onAction(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const elem = event.target;\n    const action = elem.dataset.action;\n\n    switch (action) {\n      case \"clear-filter\": {\n        const filterId = elem.closest(\"[data-filter-id]\").dataset.filterId;\n        this.filters.get(filterId).reset();\n        //this.expandedFilters.delete(filterId); // Collapsing the category feels weird\n        this.render();\n        break;\n      }\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n  }\n\n  /**\n   * Store the current search filter query and re-render the application.\n   *\n   * @private\n   * @param {Event} event - The originating change event\n   */\n  _onCustomSearchFilter(event) {\n    event.preventDefault();\n    this._query = event.target.value;\n    this._debouncedRender();\n  }\n\n  /**\n   * Handle a click on an entry in the compendium browser.\n   *\n   * @private\n   * @param {Event} event - The originating click Event\n   */\n  async _onClickEntry(event) {\n    const li = event.target.closest(\".directory-item\");\n    if (!li) return;\n    const { uuid } = li.dataset;\n    const document = await fromUuid(uuid);\n    const collection = game.packs.get(document.pack);\n    return document.sheet.render(true, { editable: game.user.isGM && !collection.locked, focus: true });\n  }\n\n  /**\n   * Get the set of ContextMenu options which should be used for the compendium browser's entries.\n   *\n   * @protected\n   * @returns {object[]} - The Array of ContextMenu options\n   */\n  _getEntryContextOptions() {\n    return [\n      {\n        name: \"COMPENDIUM.ImportEntry\",\n        icon: '<i class=\"fa-solid fa-download\"></i>',\n        condition: () => getDocumentClass(this.constructor.documentName).canUserCreate(game.user),\n        callback: async (li) => {\n          const collection = game.collections.get(this.constructor.documentName);\n          const uuid = li.data(\"uuid\");\n          const entry = this.entries.get(uuid);\n          return collection.importFromCompendium(game.packs.get(entry.__pack), entry._id, {}, { renderSheet: true });\n        },\n      },\n      {\n        name: \"PF1.CopyUuidToClipboard\",\n        icon: '<i class=\"fa-solid fa-id-badge\"></i>',\n        callback: (li) => {\n          const uuid = li.data(\"uuid\");\n          game.clipboard.copyPlainText(uuid);\n          const label = game.i18n.localize(getDocumentClass(this.constructor.documentName).metadata.label);\n          ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: uuid }));\n        },\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _onDragStart(event) {\n    const { uuid } = event.currentTarget.dataset;\n\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        type: this.constructor.documentName,\n        uuid,\n      })\n    );\n\n    const html = this.element[0];\n    // Without the delay the following blocks the drag start\n    setTimeout(() => html.classList.add(\"active-drag\"), 0);\n  }\n\n  /**\n   * Add global listeners\n   *\n   * Comprehensive listeners for ensuring the drag end event is caught.\n   *\n   * @internal\n   */\n  _startGlobalListenerts() {\n    document.addEventListener(\"visibilitychange\", this._boundResetDragHide, { passive: true, capture: true });\n    document.body.addEventListener(\"dragend\", this._boundResetDragHide, { passive: true, capture: true });\n    window.addEventListener(\"pointerup\", this._boundResetDragHide, { passive: true, capture: true });\n  }\n\n  /**\n   * Remove global listeners\n   *\n   * @internal\n   */\n  _stopGlobalListeners() {\n    document.removeEventListener(\"visibilitychange\", this._boundResetDragHide);\n    document.body.removeEventListener(\"dragend\", this._boundResetDragHide);\n    window.removeEventListener(\"pointerup\", this._boundResetDragHide);\n  }\n\n  _resetDragHide() {\n    const html = this.element?.[0];\n    html?.classList.remove(\"active-drag\");\n  }\n\n  /**\n   * Handle a click on the reset filters button, resetting all filters to their default state.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  _onClearFilters(_event) {\n    for (const filter of this.filters) {\n      filter.reset();\n    }\n    this._query = \"\";\n    this.expandedFilters.clear();\n    this.render();\n  }\n\n  /**\n   * Handle a click on the refresh button, re-running the setup process,\n   * and re-rendering the compendium browser afterwards.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  async _onReload(_event) {\n    this.#setup = false;\n    this.initialize();\n    this.render();\n  }\n\n  /**\n   * Handle a click on a filter's title to collapse or expand it.\n   *\n   * @private\n   * @param {Event} event - The originating click event\n   */\n  _onFilterHeaderClick(event) {\n    const { filterId } = event.target.closest(\".filter\").dataset;\n    const filterContents = event.target.closest(\".filter\").querySelector(\".filter-content\");\n    if (this.expandedFilters.has(filterId)) {\n      this.expandedFilters.delete(filterId);\n      filterContents.classList.add(\"collapsed\");\n    } else {\n      this.expandedFilters.add(filterId);\n      filterContents.classList.remove(\"collapsed\");\n    }\n  }\n\n  /**\n   * Initializes lazy loading of entries so that they are only rendered when close-ish to being visible.\n   *\n   * @private\n   * @param {HTMLElement} html - The HTML element to initialize lazy loading for\n   */\n  _initLazyScrolling(html) {\n    const listEnd = html.querySelector(\".directory-bottom\");\n    if (listEnd) {\n      new IntersectionObserver(\n        async ([entry], observer) => {\n          if (entry.isIntersecting) {\n            // Append more entries to the list\n            const currentCount = html.querySelectorAll(\".directory-item\").length;\n            const newEntries = this._entries.slice(currentCount, currentCount + 50);\n            if (newEntries.length === 0) {\n              // No more entries to load with current filters\n              observer.unobserve(listEnd);\n            } else {\n              const newHtml = await this.constructor._renderEntries(newEntries);\n              listEnd.insertAdjacentHTML(\"beforebegin\", newHtml);\n              this._dragDrop[0].bind(html);\n            }\n          }\n        },\n        { root: html.querySelector(\".directory-list\"), rootMargin: \"300px\" }\n      ).observe(listEnd);\n    }\n  }\n}\n\n/**\n * @typedef {object} IndexEntry\n * @property {string} _id - The entry's ID\n * @property {string} name - The entry's name\n * @property {string} type - The entry's type\n * @property {string} img - The entry's image\n * @property {string} __pack - The {@link CompendiumCollection} this entry is from\n * @property {string} __packLabel - The label of the {@link CompendiumCollection} this entry is from\n * @property {string} __uuid - The UUID of this entry\n */\n","/**\n * No Autocomplete mixin\n *\n * Ref: https://github.com/foundryvtt/foundryvtt/issues/12008\n *\n * @todo\n * - Review continued need for this with Foundry v13\n *\n * @param {*} Base\n */\nexport const NoAutocomplete = (Base) =>\n  class extends Base {\n    /** @override */\n    async _renderFrame(options) {\n      const frame = await super._renderFrame(options);\n      frame.autocomplete = \"off\";\n      return frame;\n    }\n  };\n","import fuzzysort from \"fuzzysort\";\nimport { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * A specialized form used to select types.\n *\n * @property {object} attributes - The currently stored values for this trait selector\n * @property {string[]} attributes.standard - Standard choices\n * @property {string[]} attributes.custom - Custom choices\n */\nexport class ActorTraitSelector extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ActorTraitSelector._updateDocument,\n      submitOnClose: false,\n      submitOnChange: false,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"trait-selector\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-list-check\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 320,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/trait-selector.hbs\",\n      scrollable: [\".trait-list\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * Current search filter\n   *\n   * @internal\n   */\n  _searchFilter = \"\";\n\n  /**\n   * Include language agnostic ID in search.\n   *\n   * @type {boolean}\n   */\n  static SEARCH_INCLUDE_ID = true;\n\n  /**\n   * Collator for sorting\n   *\n   * @internal\n   */\n  _collator = new Intl.Collator(game.i18n.lang, {\n    numeric: true,\n    ignorePunctuation: true,\n  });\n\n  constructor(options) {\n    // Ensure uniqueness to target for trait selector\n    options.id ??= `trait-selector-${options.document.uuid.replaceAll(\".\", \"-\")}-${options.subject}`;\n\n    super(options);\n\n    // Enrich dialog identity\n    this.options.classes.push(options.subject);\n\n    // Get current values\n    const keys = foundry.utils.getProperty(options.document.toObject(), this.attribute) ?? [];\n\n    this.attributes = {\n      standard: new Set(),\n      custom: new Set(),\n    };\n\n    if (Array.isArray(keys)) {\n      for (const key of keys) {\n        if (this.options.choices[key]) this.attributes.standard.add(key);\n        else this.attributes.custom.add(key);\n      }\n    }\n\n    const searchIndex = [];\n    for (const [id, label] of Object.entries(this.options.choices)) {\n      searchIndex.push({\n        id,\n        _id: fuzzysort.prepare(id.normalize(\"NFKD\")),\n        _name: fuzzysort.prepare(label.normalize(\"NFKD\")),\n      });\n    }\n    this._searchIndex = searchIndex;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        const { standard, custom } = this.attributes;\n\n        // Populate choices\n        const choices = foundry.utils.deepClone(this.options.choices);\n        for (const [k, v] of Object.entries(choices)) {\n          choices[k] = {\n            label: v,\n            chosen: standard.has(k),\n          };\n        }\n\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          choices,\n          hideSearch: Object.keys(choices).length < pf1.config.traitSelector.minChoicesForSearch,\n          custom: Array.from(new Set(custom)),\n          search: this._searchFilter,\n          hasCustom: this.options.hasCustom,\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {}; // No update button if not editable\n\n        return {\n          buttons: [\n            {\n              type: \"submit\",\n              label: this.document instanceof Actor ? \"PF1.UpdateActor\" : \"PF1.UpdateItem\",\n              icon: \"fa-regular fa-floppy-disk\",\n            },\n          ],\n        };\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the trait selector window\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${this.options.title}: ${this.document.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a reference to the target attribute\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split a given value based on the configured separator\n   *\n   * @param {string} value      The value to split\n   * @returns {string[]}         The split values, with empty values filtered out\n   */\n  splitCustom(value) {\n    return value\n      .split(pf1.config.re.traitSeparator)\n      .map((c) => c.trim())\n      .filter((c) => !!c);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const html = this.element.querySelector(\".window-content\");\n\n    // Search handling\n    const search = html.querySelector(\"input[type='search']\");\n    if (search) {\n      search.addEventListener(\"input\", (ev) => this._onSearch(ev.currentTarget.value), { passive: true });\n      search.addEventListener(\"change\", (ev) => this._onSearch(ev.currentTarget.value), { passive: true });\n      this._onSearch(this._searchFilter);\n    }\n\n    const editable = this.isEditable;\n\n    // Disable form if not editable\n    if (!editable) {\n      for (const el of html.querySelectorAll(\":is(input,button)\")) {\n        el.disabled = true;\n      }\n    }\n\n    // Custom tag handling\n    const customInput = html.querySelector(\"input[name='custom']\");\n    if (customInput && editable) {\n      customInput.addEventListener(\"input\", this._onCustomInput.bind(this), { passive: true });\n      customInput.addEventListener(\"keydown\", this._onActiveCustomInput.bind(this));\n      this.element.querySelectorAll(\".custom-tags .custom-tag > a[data-action='delete']\").forEach((el) => {\n        el.addEventListener(\"click\", this._deleteCustomTag.bind(this), { passive: true });\n      });\n    }\n\n    // Mark choices gained form other sources as indeterminate\n    const attrib = foundry.utils.getProperty(this.options.document, this.attribute);\n    if (attrib?.total) {\n      const keys = new Set(attrib.base ?? []);\n      for (const key of attrib.total) {\n        if (!keys.has(key)) {\n          /** @type {HTMLInputElement} */\n          const el = html.querySelector(`input[name=\"choices.${key}\"]`);\n          if (!el) continue; // Probably custom choice\n          if (!el.checked) el.indeterminate = true;\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for custom field input.\n   *\n   * @internal\n   * @param {Event} event         The originating input event\n   * @returns {void}\n   */\n  _onCustomInput(event) {\n    // Consume input if semicolon is inserted\n    if (/;/.test(event.currentTarget.value)) {\n      this._onChangeForm();\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for active keystrokes on the input field.\n   *\n   * @internal\n   * @param {Event} event         The originating keydown event\n   * @returns {void}\n   */\n  _onActiveCustomInput(event) {\n    if (event.isComposing) return;\n\n    switch (event.key) {\n      case \"Enter\": {\n        event.preventDefault();\n        this._onChangeForm();\n        break;\n      }\n\n      case \"Backspace\": {\n        if (event.currentTarget.value !== \"\") return;\n        if (event.repeat) return; // Ignore when backspace is held down\n\n        const last = this.element.querySelector(\".custom-tags .custom-tag:last-of-type\");\n        if (!last) return;\n\n        if (last.classList.contains(\"pre-delete\")) {\n          const tag = last.dataset.customTag;\n          this.attributes.custom = new Set(this.attributes.custom.filter((t) => t !== tag));\n          this.render();\n        } else {\n          last.classList.add(\"pre-delete\");\n        }\n        break;\n      }\n\n      default:\n        this.element.querySelector(\".custom-tags .custom-tag:last-of-type\")?.classList.remove(\"pre-delete\");\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for deleting a custom tag.\n   *\n   * @internal\n   * @param {Event} event         The originating click event\n   * @returns {void}\n   */\n  _deleteCustomTag(event) {\n    const elem = event.currentTarget;\n    const tag = elem.dataset.customTag;\n    this.attributes.custom.delete(tag);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Run a search on the provided list of options.\n   *\n   * @internal\n   * @param {string} query        The search string\n   * @returns {void}\n   */\n  _onSearch(query) {\n    query = query?.normalize(\"NFKD\");\n    this._searchFilter = query;\n\n    const keys = [\"_name\"];\n    if (this.constructor.SEARCH_INCLUDE_ID) keys.push(\"_id\");\n\n    const matches = query\n      ? fuzzysort\n          .go(query, this._searchIndex, { keys, threshold: -10000 })\n          .sort((a, b) => {\n            // Sort by score first, then alphabetically by name\n            if (a.score !== b.score) return b.score - a.score;\n            else return this._collator.compare(a.obj.name, b.obj.name);\n          })\n          .map((r) => r.obj.id)\n      : null;\n\n    const els = this.element.querySelectorAll(\".trait-list li\");\n    for (const el of els) {\n      el.classList.toggle(\"search-mismatch\", query && !matches.includes(el.dataset.choice));\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const formData = {};\n    new FormData(this.element).forEach((value, key) => (formData[key] = value));\n\n    let { choices, custom, search } = foundry.utils.expandObject(formData);\n    choices ??= {};\n\n    this._searchFilter = search;\n\n    choices = Object.entries(choices)\n      .filter(([_, v]) => v)\n      .map(([k]) => k);\n\n    if (custom?.length) this.attributes.custom.add(...this.splitCustom(custom));\n\n    this.attributes.standard = new Set(choices);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @private\n   * @this {ActorTraitSelector}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   */\n  static async _updateDocument(event, form, formData) {\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n    const { standard, custom } = this.attributes;\n    const updateData = {\n      [this.attribute]: [...standard.union(custom)],\n    };\n    this.document.update(updateData);\n    this.close({ force: true });\n  }\n}\n","export function DragDropApplicationMixin(BaseApplication) {\n  return class DragDropApplication extends BaseApplication {\n    static DEFAULT_OPTIONS = {\n      dragDrop: [],\n    };\n\n    constructor(options = {}) {\n      super(options);\n      this.#dragDrop = this.#createDragDropHandlers();\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Create drag-and-drop workflow handlers for this Application\n     *\n     * @returns {DragDrop[]}     An array of DragDrop handlers\n     * @private\n     */\n    #createDragDropHandlers() {\n      return this.options.dragDrop.map((d) => {\n        d.permissions = {\n          dragstart: this._canDragStart.bind(this),\n          drop: this._canDragDrop.bind(this),\n        };\n        d.callbacks = {\n          dragstart: this._onDragStart.bind(this),\n          dragover: this._onDragOver.bind(this),\n          drop: this._onDrop.bind(this),\n        };\n        return new DragDrop(d);\n      });\n    }\n\n    #dragDrop;\n\n    /* -------------------------------------------- */\n\n    /**\n     * Actions performed after any render of the Application.\n     * Post-render steps are not awaited by the render process.\n     *\n     * @param {ApplicationRenderContext} context      Prepared context data\n     * @param {RenderOptions} options                 Provided render options\n     * @protected\n     */\n    _onRender(context, options) {\n      super._onRender(context, options);\n\n      this.#dragDrop.forEach((d) => d.bind(this.element));\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Define whether a user is able to begin a dragstart workflow for a given drag selector\n     *\n     * @param {string} selector       The candidate HTML selector for dragging\n     * @returns {boolean}             Can the current user drag this selector?\n     * @protected\n     */\n    _canDragStart(selector) {\n      return true;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Define whether a user is able to conclude a drag-and-drop workflow for a given drop selector\n     *\n     * @param {string} selector       The candidate HTML selector for the drop target\n     * @returns {boolean}             Can the current user drop on this selector?\n     * @protected\n     */\n    _canDragDrop(selector) {\n      return true;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur at the beginning of a drag start workflow.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    _onDragStart(event) {}\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur when a dragged element is over a drop target.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    _onDragOver(event) {}\n\n    /* -------------------------------------------- */\n\n    /**\n     * Callback actions which occur when a dragged element is dropped on a target.\n     *\n     * @param {DragEvent} event       The originating DragEvent\n     * @protected\n     */\n    async _onDrop(event) {}\n  };\n}\n","import { DragDropApplicationMixin } from \"@app/mixins/drag-drop.mjs\";\nimport { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Offers a dynamic list selector that allows the user to add new entries and delete existing entries\n *\n * @abstract\n */\nexport class AbstractListSelector extends DragDropApplicationMixin(\n  HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2))\n) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: AbstractListSelector._save,\n      closeOnSubmit: true,\n      submitOnClose: false,\n    },\n    classes: [\"pf1-v2\", \"list-selector\", \"no-padding\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    actions: {\n      addEntry: AbstractListSelector._onAddEntry,\n      deleteEntry: AbstractListSelector._onDeleteEntry,\n    },\n    position: {\n      width: 600,\n    },\n    sheetConfig: false,\n    dragDrop: [{ dragSelector: \"[data-drag]\", dropSelector: \"[data-drop]\" }],\n  };\n\n  constructor(options = {}) {\n    super(options);\n    this.dragDropHighlightTimeout = null;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return the dragdrop element type for this application\n   *\n   * @returns {string}\n   */\n  get dragDropType() {\n    return \"pf1Entry-\" + this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare drag-drop data and highlight dragged element\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n    if (\"link\" in event.target.dataset) return;\n\n    const row = el.closest(\"[data-index]\");\n    const index = row?.dataset?.index;\n    if (index === undefined) return;\n\n    // Extract the data you need\n    const dragData = {\n      type: this.dragDropType,\n      index: Number(index),\n      appId: this.id,\n      entry: this.entries[parseInt(row.dataset.index)],\n    };\n\n    row.classList.add(\"is-dragged\");\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    event.dataTransfer.setDragImage(row, 0, 0);\n\n    pf1._temp.dragDropData = dragData;\n    event.target.addEventListener(\"dragend\", () => delete pf1._temp.dragDropData);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Highlight position that the element will be inserted to on drop\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  _onDragOver(event) {\n    this.clearDragHighlights();\n\n    if (pf1._temp?.dragDropData?.type !== this.dragDropType) return;\n    event.target.closest(\"[data-drop]\").classList.add(\"drag-over\");\n\n    clearTimeout(this.dragDropHighlightTimeout);\n    this.dragDropHighlightTimeout = setTimeout(() => this.clearDragHighlights(), 150);\n  }\n\n  /* -------------------------------------------- */\n\n  clearDragHighlights() {\n    this.element.querySelectorAll(\"[data-drop]\").forEach((el) => el.classList.remove(\"drag-over\", \"is-dragged\"));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject dragged element into its new position\n   *\n   * @param {DragEvent} event       The originating DragEvent\n   * @protected\n   */\n  async _onDrop(event) {\n    const dragEventData = TextEditor.getDragEventData(event);\n    const moveToBeforeId = event.target.closest(\"[data-index]\").dataset.index;\n\n    this.clearDragHighlights();\n    if (dragEventData?.type !== this.dragDropType) return;\n\n    const movedId = dragEventData?.index;\n    if (!movedId) return;\n\n    let entry = dragEventData?.entry;\n    if (dragEventData?.appId === this.id) {\n      entry = this.entries.splice(dragEventData.index, 1)[0];\n    }\n\n    this.entries.splice(moveToBeforeId, 0, entry);\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          document: this.document,\n          id: this.name,\n          entries: this.entries,\n          fields: this.fields,\n          dtypes: this.dtypes,\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {};\n        return {\n          buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n        };\n      }\n    }\n\n    return {};\n  }\n\n  /**\n   * @override\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,button,select)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the name property\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of fields\n   *\n   * @type {string[]}\n   */\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of data types\n   *\n   * @type {string[]}\n   */\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the data entry length\n   *\n   * @type {number}\n   */\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @abstract\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add a new entry to the list\n   *\n   * @internal\n   * @param event\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  static async _onAddEntry(event) {\n    event.preventDefault();\n    this.entries.push(this._getNewEntry(event));\n    return this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Delete an existing entry from the list\n   *\n   * @internal\n   * @param event\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  static async _onDeleteEntry(event) {\n    event.preventDefault();\n    const a = event.target;\n\n    const tr = a.closest(\"tr\");\n    const index = parseInt(tr.dataset.index);\n    this.entries.splice(index, 1);\n    return this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {AbstractListSelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @abstract\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the new data back to the document.\n   *\n   * @internal\n   * @this {AbstractListSelector}\n   * @param {SubmitEvent} event               The originating form submission event\n   * @param {HTMLFormElement} form            The form element that was submitted\n   * @param {FormDataExtended} formData       Processed data for the submitted form\n   * @param {object} formData.object          The object of the form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    this.document.update(this._getUpdateData());\n  }\n}\n","import { AbstractListSelector } from \"@app/abstract-list-selector.mjs\";\n\n/**\n * Extend the FormApplication to handle creating, removing, and editing\n * and Actor's Damage Reduction and Energy Resistances.\n */\nexport class DamageResistanceSelector extends AbstractListSelector {\n  static DEFAULT_OPTIONS = {\n    classes: [\"damage-resistance-selector\"],\n    window: {\n      icon: \"fa-solid fa-shield-halved\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/damage-resistance-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /** @override */\n  constructor(options) {\n    super(options);\n\n    /** Basic properties for handling operations */\n    // Prepare data and convert it into format compatible with the editor\n    this.isDR = options.isDR === true;\n\n    /** Working copy of our trait's data */\n    const resistances = foundry.utils.deepClone(foundry.utils.getProperty(this.document, this.attribute) ?? {});\n\n    /**\n     * Custom user input for damage sources\n     *\n     * @property\n     * @type {string}\n     */\n    this.custom = resistances.custom;\n\n    /**\n     * Original copy of the trait's entries\n     *\n     * @property\n     * @type {Object<string, any>}\n     */\n    this.originalEntries = resistances.value;\n    this.entries = resistances.value;\n\n    /** Processing Damage sources */\n    const damageOBJ = pf1.utils.naturalSort([...pf1.registry.damageTypes], \"name\").filter((dType) => !dType.isModifier);\n    const damages = {};\n\n    // Loop through the registry to filter not-applicable damage sources\n    Object.values(damageOBJ)\n      .sort()\n      .forEach((dType) => {\n        // If we are looking for DR, we want to exclude types that are energy or not untyped\n        if ((dType.category === \"energy\" || dType.category === \"misc\") && this.isDR) {\n          return;\n        }\n\n        // If we are looking for ERES, we want to exclude types that are physical or untyped\n        if ((dType.category === \"physical\" || (dType.category === \"misc\" && dType.id === \"untyped\")) && !this.isDR) {\n          return;\n        }\n\n        damages[dType.id] = dType.name;\n      });\n\n    if (this.isDR) {\n      Object.keys(pf1.config.damageResistances).forEach((dType) => {\n        damages[dType] = pf1.config.damageResistances[dType];\n      });\n\n      pf1.utils.naturalSort([...pf1.registry.materials], \"name\").forEach((material) => {\n        if (\n          material.dr &&\n          !material.treatedAs &&\n          (material.allowed.lightBlade ||\n            material.allowed.oneHandBlade ||\n            material.allowed.twoHandBlade ||\n            material.allowed.rangedWeapon)\n        ) {\n          damages[material.id] = material.shortName || material.name;\n        }\n      });\n    }\n\n    /**\n     * A list of key-value pairs for dropdown damage types\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this.damages = damages;\n\n    /**\n     * A dropdown list of combination types for multiple damage types\n     *\n     * @property\n     * @type {Object<boolean, string>}\n     */\n    this.operators = {\n      true: \"PF1.Application.DamageResistanceSelector.CombinationOr\",\n      false: \"PF1.Application.DamageResistanceSelector.CombinationAnd\",\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    const type = options.isDR ? \"DR\" : \"ER\";\n    options.id = `DamageResistanceSelector-${type}-${options.document.uuid.replaceAll(\".\", \"-\")}`;\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId, context, options) {\n    const rv = await super._preparePartContext(partId, context, options);\n    if (partId === \"form\") {\n      rv.custom = this.custom;\n      rv.damages = this.damages;\n      rv.operators = this.operators;\n      rv.isDR = this.isDR;\n    }\n\n    return rv;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the window to include the Actor name\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.DamageResistanceSelector.\" + (this.isDR ? \"DR\" : \"ER\") + \"Title\")}: ${\n      this.actor.name\n    }`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @override\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    return {\n      amount: 0,\n      types: [this.isDR ? \"\" : \"fire\", \"\"],\n      operator: true,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {EntrySelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    const target = event.target;\n\n    if (target.matches(\"[name=custom]\")) {\n      this._onResistanceCustomChange(event);\n    } else {\n      this._onResistanceChange(event);\n    }\n\n    super._onChangeForm(formConfig, event);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * A triggered operation when any inputs or dropdowns are interacted\n   * with to save the data from UI\n   *\n   * @param {Event} event\n   */\n  async _onResistanceChange(event) {\n    const target = event.target;\n\n    const tr = target.closest(\"tr.resistance\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = target.dataset.index;\n    const value = target.value;\n    let updateValue = null;\n\n    // Sanity-check our updated value\n    if (target.dataset.dtype === \"Number\") {\n      let val = parseFloat(value);\n      if (isNaN(val)) val = 0;\n      updateValue = Math.floor(val * 100) / 100;\n    } else if (target.dataset.dtype === \"Boolean\") updateValue = value === \"true\";\n    else updateValue = value;\n\n    // Process the value into the types array or assign to an entry property\n    switch (index2) {\n      case \"types0\":\n        this.entries[index].types[0] = updateValue;\n        break;\n      case \"types1\":\n        this.entries[index].types[1] = updateValue;\n        break;\n      default:\n        this.entries[index][index2] = updateValue;\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * A triggered operation when the user modifies the custom input section\n   *\n   * @param {Event} event\n   */\n  async _onResistanceCustomChange(event) {\n    const target = event.target;\n    this.custom = target.value;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @override\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    const updateData = {};\n\n    updateData[this.attribute + \".value\"] = this.entries.map((value) => {\n      // Ensure no matter what, we have values\n      value.types[0] ??= \"\";\n      value.types[1] ??= \"\";\n\n      if (value.types[0] === \"\" && value.types[1] !== \"\") {\n        value.types[0] = value.types[1];\n        value.types[1] = \"\";\n      }\n      if (value.types[0] === value.types[1]) {\n        value.types[1] = \"\";\n      }\n\n      // Clear out empty choices\n      value.types = value.types.filter((v) => v);\n\n      // Convert from string key to boolean value\n      value.operator = String(value.operator).toLowerCase() === \"true\";\n      return value;\n    });\n    updateData[this.attribute + \".custom\"] = this.custom;\n\n    return updateData;\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that renders a form to configure the resting behavior of an Actor\n *\n * @param {ActorPF} actor     The Actor instance for which to configure resting\n */\nexport class ActorRestDialog extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ActorRestDialog._rest,\n      submitOnChange: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"actor-rest\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-bed\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 500,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/actor-rest.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      buttons: [{ type: \"submit\", label: \"PF1.Rest\", icon: \"fa-solid fa-bed\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the actor rest window to include the Actor name\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Rest\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Trigger the actor rest with the provided form input as options.\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The resting configuration\n   * @returns {Promise<void>}\n   */\n  static async _rest(event, form, formData) {\n    await this.actor.performRest(formData.object);\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application offering the user an interface to use the point-buy rules\n * described in the Pathfinder CRB to determine their characters ability\n * scores.\n */\nexport class PointBuyCalculator extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  /**\n   * Minimum possible ability score value.\n   */\n  min;\n  /**\n   * Maximum possible ability score value.\n   */\n  max;\n  /**\n   * The actors current ability scores.\n   *\n   * @type {{key: string, name: string, value: number}[]}\n   */\n  abilities;\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: PointBuyCalculator._save,\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"pointbuy-calculator\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-seedling\",\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      control: PointBuyCalculator._onAbilityControl,\n    },\n    position: {\n      width: 320,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/point-buy-calculator.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    super(options);\n\n    const ablValues = Object.keys(pf1.config.abilityCost).map((i) => Number(i));\n\n    this.abilities = Object.entries(pf1.config.abilities).map(([k, name]) => ({\n      key: k,\n      name,\n      value: this.actor.system.abilities[k]?.value ?? 10,\n    }));\n    this.min = Math.min(...ablValues);\n    this.max = Math.max(...ablValues);\n  }\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const usedPoints = this.spentPoints;\n\n    const pointBuy = pf1.config.pointBuy;\n    const limitsArr = Object.entries(pointBuy).map(([key, ldata]) => ({ ...ldata, key }));\n    limitsArr.sort((a, b) => a.points - b.points);\n\n    // Find most relevant category\n    let closest = limitsArr[0].key;\n    for (const l of limitsArr) {\n      const prev = pointBuy[closest].points;\n      if (prev < usedPoints) closest = l.key;\n    }\n\n    return {\n      min: this.min,\n      max: this.max,\n      abilities: this.abilities,\n      points: usedPoints,\n      limits: limitsArr,\n      closest,\n      invalidPoints: pointBuy[closest].points !== usedPoints,\n      buttons: [{ type: \"submit\", label: \"PF1.Confirm\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the point buy calculator window to include the actors name.\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.PointBuy.Title\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the number of points spent on ability scores.\n   *\n   * @type {number}\n   */\n  get spentPoints() {\n    let result = 0;\n\n    for (const a of this.abilities) {\n      result += pf1.config.abilityCost[a.value];\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update ability score value display and remaining points on\n   * subtract/add operations.\n   *\n   * @internal\n   * @param event\n   * @param target\n   * @this {PointBuyCalculator}\n   * @returns {Promise<void>}\n   */\n  static async _onAbilityControl(event, target) {\n    event.preventDefault();\n    const ablKey = target.closest(\".ability\").dataset.ability;\n    const abl = this.abilities.find((o) => o.key === ablKey);\n\n    if (target.classList.contains(\"add\")) {\n      abl.value = Math.min(this.max, abl.value + 1);\n    } else if (target.classList.contains(\"subtract\")) {\n      abl.value = Math.max(this.min, abl.value - 1);\n    }\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the actors ability scores based on the current input values.\n   *\n   * @internal\n   * @this {PointBuyCalculator}\n   * @returns {Promise<void>}\n   */\n  static async _save() {\n    const updateData = {};\n    for (const a of this.abilities) {\n      updateData[`system.abilities.${a.key}.value`] = a.value;\n    }\n    await this.actor.update(updateData);\n  }\n}\n","export class Widget_ItemPicker {\n  constructor(callback, { items, columns = 3 } = {}) {\n    /**\n     * @property\n     * The HTML element that represents this widget.\n     */\n    this.element = null;\n\n    /**\n     * @property\n     * The callback to fire if an item is clicked.\n     */\n    this.callback = callback;\n\n    /**\n     * @typedef Widget_ItemPicker_Item\n     * @type {object}\n     * @property {string} value\n     * @property {string} label\n     */\n    /**\n     * @property\n     * @type Widget_ItemPicker_Item[]\n     * The items in this widget.\n     */\n    this._items = items;\n\n    /**\n     * @property\n     * @type {number}\n     * The maximum amount of columns shown.\n     */\n    this.columns = columns;\n  }\n\n  render(parentElem) {\n    // Generate widget\n    const rootElem = $($.parseHTML('<div class=\"widget item-picker\"></div>'));\n    // Add rows\n    let rowElem;\n    for (let a = 0; a < this._items.length; a++) {\n      const item = this._items[a];\n      if (a % this.columns === 0) {\n        rowElem = $($.parseHTML('<div class=\"row\"></div>'));\n        rootElem.append(rowElem);\n      }\n\n      const itemElem = $($.parseHTML(`<div class=\"item\" value=\"${item.value}\">${item.label}</div>`));\n      const widthRate = Math.floor(10000 / this.columns) / 100;\n      itemElem.css(\"flex\", `0 0 calc(${widthRate}% - 4px)`);\n      rowElem.append(itemElem);\n    }\n\n    // Replace parent element\n    if (!(parentElem instanceof jQuery)) parentElem = $(parentElem);\n    rootElem.css(\"position\", \"absolute\");\n    rootElem.css(\"left\", `${parentElem[0].offsetLeft}px`);\n    rootElem.css(\"position\", `${parentElem[0].offsetBottom}px`);\n    parentElem.parent().append(rootElem);\n\n    this.element = rootElem;\n\n    window.setTimeout(() => {\n      this.activateListeners(rootElem);\n    }, 10);\n  }\n\n  activateListeners(html) {\n    // Click item callback\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Cancel widget\n    this._cancelCallback = this._onCancel.bind(this);\n    document.addEventListener(\"click\", this._cancelCallback);\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    const target = event.target;\n    let node = target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.cancel();\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    this.callback($(a).attr(\"value\"));\n  }\n\n  cancel() {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    this.element.remove();\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * A generic application to render a settings modal.\n *\n * @abstract\n */\nexport class AbstractSettingsApplication extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._save,\n      submitOnChange: false,\n      closeOnSubmit: true,\n      submitOnClose: false,\n    },\n    classes: [\"pf1-v2\", \"settings\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      resetForm: this._onFormReset,\n    },\n    position: {\n      width: 520,\n    },\n    sheetConfig: false,\n  };\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(this.options.phraseKey + \".Title\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * settings app instance and tack on extra class.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    options.id = options.configKey.replace(\"Config\", \"\").toLowerCase() + \"-config\";\n    options.classes = options.classes || [];\n    options.classes.push(options.id);\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _prepareContext() {\n    if (!this.settings) {\n      const settings = game.settings.get(\"pf1\", this.options.configKey);\n      this.settings = new this.options.model(settings.toObject());\n      this.fields = this.settings.fields;\n    }\n\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId - Part ID\n   * @param {ApplicationRenderContext} context - Context\n   */\n  async _preparePartContext(partId, context) {\n    switch (partId) {\n      case \"form\":\n        {\n          Object.assign(context, {\n            activeTab: this.tabGroups.primary,\n            settings: this.settings,\n            fields: this.settings.schema.fields,\n            model: this.options.model,\n            config: pf1.config,\n            const: pf1.const,\n          });\n        }\n        break;\n\n      case \"footer\":\n        {\n          context.buttons = [\n            { type: \"button\", label: \"SETTINGS.Reset\", icon: \"fa-solid fa-arrows-rotate\", action: \"resetForm\" },\n            { type: \"submit\", label: \"SETTINGS.Save\", icon: \"fa-solid fa-floppy-disk\" },\n          ];\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if ([\"form\", \"tabs\"].includes(partId)) {\n      context.tabs = this.tabs?.primary || {};\n      for (const [id, tab] of Object.entries(context.tabs)) {\n        const active = this.tabGroups.primary === id;\n        Object.assign(tab, {\n          id,\n          group: \"primary\",\n          active,\n          cssClass: active ? \"active\" : \"\",\n        });\n      }\n    }\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const input = event.target.closest(\"[name]\");\n    this.settings.updateSource({ [input.name]: input.type === \"checkbox\" ? input.checked : input.value });\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler that is fired when the form is reset to its original values\n   *\n   * @internal\n   * @param {Event} event - The triggering event\n   * @returns {Promise<void>}\n   */\n  static async _onFormReset(event) {\n    this.settings = new this.options.model();\n    ui.notifications.info(game.i18n.localize(this.options.phraseKey + \".Reset\"));\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the game settings with the new configuration\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The form data in object form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n    await game.settings.set(\"pf1\", this.options.configKey, formData);\n  }\n}\n\n/**\n * A generic application to render a settings modal with a \"Player\" and a \"World\" tab.\n *\n * @abstract\n */\nexport class AbstractSplitSettingsApplication extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    form: {\n      handler: this._save,\n    },\n    actions: {\n      resetForm: this._onFormReset,\n    },\n  };\n\n  tabGroups = { primary: \"player\" };\n\n  tabs = {\n    primary: {\n      player: {\n        icon: \"fa-solid fa-user\",\n        label: \"PF1.Application.Settings.Player\",\n      },\n      world: {\n        icon: \"fa-solid fa-globe\",\n        label: \"PF1.Application.Settings.World\",\n      },\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  _configureRenderOptions(options) {\n    super._configureRenderOptions(options);\n    if (!game.user.isGM) {\n      // If we're not a GM, remove the tabs part\n      options.parts.shift();\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    delete context.settings;\n    delete context.model;\n    delete context.fields;\n\n    Object.assign(context, {\n      player: this.playerSettings,\n      playerModel: this.options.playerModel,\n      playerSchema: this.options.playerModel.defineSchema(),\n      world: this.worldSettings,\n      worldModel: this.options.worldModel,\n      worldSchema: this.options.worldModel.defineSchema(),\n      isGM: game.user.isGM,\n    });\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   */\n  async _prepareContext(options) {\n    if (!this.settings) {\n      const playerSettings = game.settings.get(\"pf1\", this.options.configKey);\n      this.playerSettings = new this.options.playerModel(playerSettings.toObject());\n      if (game.user.isGM) {\n        const worldSettings = game.settings.get(\"pf1\", this.options.worldConfigKey);\n        this.worldSettings = new this.options.worldModel(worldSettings.toObject());\n      }\n      this.settings = true;\n    }\n\n    return super._prepareContext(options);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler that is fired when the form is reset to its original values\n   *\n   * @internal\n   * @param {Event} event - The triggering event\n   * @returns {Promise<void>}\n   */\n  async _onFormReset(event) {\n    this.playerSettings = new this.options.playerModel();\n    if (game.user.isGM) {\n      this.worldSettings = new this.options.worldModel();\n    }\n    ui.notifications.info(game.i18n.localize(this.options.phraseKey + \".Reset\"));\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the game settings with the new configuration\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                                     The originating form submission event\n   * @param {HTMLFormElement} form                                  The form element that was submitted\n   * @param {FormDataExtended} formData                             Processed data for the submitted form\n   * @param {Partial<ActorRestOptions>} formData.object             The form data in object form\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n\n    await game.settings.set(\"pf1\", this.options.configKey, formData.player);\n    if (game.user.isGM) {\n      await game.settings.set(\"pf1\", this.options.worldConfigKey, formData.world);\n    }\n  }\n}\n","export class RollPF extends Roll {\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll.hbs\";\n\n  get totalHalved() {\n    foundry.utils.logCompatibilityWarning(\"RollPF.totalHalved is deprecated with no replacement\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return Math.floor(this.total / 2);\n  }\n\n  /**\n   * Synchronous and thrown error consuming roll evaluation.\n   *\n   * @remarks\n   * - Returned roll has `.err` set if an error occurred during evaluation.\n   * - If error occurs, the returned roll will have its formula replaced.\n   * @param {string} formula - Roll formula\n   * @param {object} rollData - Data supplied to roll\n   * @param {object} context - If error occurs, this will be included in the error message.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError=false] - If true, no error will be printed even if one occurs.\n   * @param {object} [evalOpts] - Additional options to pass to Roll.evaluate()\n   * @returns {Promise<RollPF>} - Evaluated roll, or placeholder if error occurred.\n   */\n  static async safeRoll(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    let roll;\n    try {\n      roll = await this.create(formula, rollData).evaluate({ ...evalOpts });\n    } catch (err) {\n      roll = this.create(\"0\", rollData).evaluateSync({ ...evalOpts });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  /**\n   * Synchronous version of {@link safeRoll safeRoll()}\n   *\n   * {@inheritDoc safeRoll}\n   *\n   * @param {string} formula - Formula to evaluate\n   * @param {object} [rollData] - Roll data\n   * @param {*} [context] - Context data to log if error occurs\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError] - If true, no error will be printed\n   * @param {object} [evalOpts] - Options to pass to Roll.evaluate()\n   * @returns {pf1.dice.RollPF} - Evaluated roll\n   */\n  static safeRollSync(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    let roll;\n    try {\n      roll = new this(formula, rollData).evaluateSync({ ...evalOpts });\n    } catch (err) {\n      roll = new this(\"0\", rollData).evaluateSync({ ...evalOpts });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  static cleanFlavor(flavor) {\n    return flavor.replace(/\\[\\];/g, \"\");\n  }\n\n  static getTermTooltipData(term) {\n    if (typeof term.total !== \"number\") return null; // Ignore terms that don't result in numbers\n\n    const ttdata = term.getTooltipData?.() ?? {\n      formula: term.expression,\n      total: term.total,\n      flavor: term.flavor,\n    };\n\n    ttdata.css ??= term.flavor ? \"\" : \"placeholder\";\n\n    return ttdata;\n  }\n\n  /**\n   * Render the tooltip HTML for a RollPF instance\n   *\n   * @returns {Promise<string>} The rendered HTML tooltip as a string\n   */\n  async getTooltip() {\n    const parts = this.dice.filter((d) => d.results.some((r) => r.active)).map(this.constructor.getTermTooltipData);\n    const numericParts = this.terms.reduce((cur, t, idx, arr) => {\n      if (t instanceof foundry.dice.terms.DiceTerm) return cur; // Ignore dice already handled above\n      if (t instanceof foundry.dice.terms.FunctionTerm && t.dice.length) return cur; // Ignore function terms with dice\n\n      const ttdata = this.constructor.getTermTooltipData(t);\n      if (!ttdata) return cur;\n\n      const prior = arr[idx - 1];\n      if (\n        t instanceof foundry.dice.terms.NumericTerm &&\n        prior &&\n        prior instanceof foundry.dice.terms.OperatorTerm &&\n        prior.operator === \"-\"\n      ) {\n        ttdata.total = -ttdata.total;\n      }\n\n      cur.push(ttdata);\n\n      return cur;\n    }, []);\n\n    return renderTemplate(\"systems/pf1/templates/dice/tooltip.hbs\", { parts, numericParts });\n  }\n\n  /**\n   * @override\n   *\n   * Synced with Foundry v12.331\n   */\n  async render({ flavor, template = this.constructor.CHAT_TEMPLATE, isPrivate = false } = {}) {\n    if (!this._evaluated) await this.evaluate({ allowInteractive: !isPrivate });\n\n    const templateData = {\n      formula: isPrivate ? \"???\" : this.formula,\n      flavor: isPrivate ? null : (flavor ?? this.options.flavor),\n      user: game.user.id,\n      details: isPrivate ? \"\" : await this.getTooltip(),\n      get tooltip() {\n        return this.details;\n      },\n      total: isPrivate ? \"?\" : pf1.utils.limitPrecision(this.total, 2),\n      hasDetails: isPrivate ? false : true,\n    };\n\n    return renderTemplate(template, templateData);\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Formula Field\n */\nexport class FormulaField extends foundry.data.fields.StringField {\n  constructor(options = {}, context) {\n    if (options.choices) throw new Error(\"choices is not valid option for FormulaField\");\n    super(options, context);\n  }\n\n  /**\n   * @override\n   * @param {object} config\n   * @returns {HTMLInputElement}\n   */\n  _toInput(config) {\n    /** @type {HTMLInputElement} */\n    const input = super._toInput(config);\n\n    input.classList.add(\"formula\");\n\n    const formula = config?.value;\n    if (formula) {\n      try {\n        RollPF.parse(formula);\n      } catch (err) {\n        console.warn(err.message, { path: config.name, formula });\n        input.classList.add(\"error\");\n      }\n    }\n\n    return input;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\nexport class ExperienceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      track: new fields.StringField({ initial: \"medium\", choices: [\"fast\", \"medium\", \"slow\", \"custom\"] }),\n      custom: new fields.SchemaField({\n        formula: new FormulaField(),\n      }),\n      openDistributor: new fields.BooleanField({ initial: true }),\n    };\n  }\n\n  static migrateData(source) {\n    source.disable ??= source.disableExperienceTracking;\n    if (source.track === \"customFormula\") source.track = \"custom\";\n    source.openDistributor ??= source.openXpDistributor;\n\n    return super.migrateData(source);\n  }\n\n  static get progressionOptions() {\n    return {\n      slow: \"PF1.Application.Settings.Experience.Track.Options.Slow\",\n      medium: \"PF1.Application.Settings.Experience.Track.Options.Medium\",\n      fast: \"PF1.Application.Settings.Experience.Track.Options.Fast\",\n      custom: \"PF1.Application.Settings.Experience.Track.Options.Custom\",\n    };\n  }\n}\n\n/**\n * An application that lets the user configure experience related settings.\n */\nexport class ExperienceConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"experienceConfig\",\n    phraseKey: \"PF1.Application.Settings.Experience\",\n    model: ExperienceConfigModel,\n    window: {\n      icon: \"fa-solid fa-book\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/experience.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      enabled: this.settings.disable !== true,\n      hasCustomFormula: this.settings.track === \"custom\",\n    });\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class HealthConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const classType = (max = false) =>\n      new fields.SchemaField({\n        auto: new fields.BooleanField({ initial: false }),\n        rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1, step: 0.01, min: 0.01 }),\n        maximized: new fields.BooleanField({ initial: max }),\n      });\n\n    const variantRules = () =>\n      new fields.SchemaField({\n        useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n        useWoundThresholds: new fields.NumberField({ initial: 0, choices: () => this.woundThresholdOptions }),\n      });\n\n    return {\n      pc: new fields.SchemaField({\n        classes: new fields.SchemaField({\n          base: classType(true),\n          racial: classType(),\n          npc: classType(),\n        }),\n        rules: variantRules(),\n      }),\n      npc: new fields.SchemaField({\n        classes: new fields.SchemaField({\n          base: classType(true),\n          racial: classType(),\n          npc: classType(),\n        }),\n        rules: variantRules(),\n      }),\n      maximized: new fields.NumberField({ integer: true, min: 0, initial: 1, step: 1 }),\n      rounding: new fields.StringField({\n        blank: false,\n        nullable: false,\n        initial: \"up\",\n        choices: () => this.healthRoundingOptions,\n      }),\n      continuous: new fields.BooleanField({ initial: false }),\n    };\n  }\n\n  /**\n   * Retrieve hit die configuration relevant to given class.\n   *\n   * @param {ItemClassPF} item\n   * @param {string} [actorType] - Actor type. If not provided, will be retrieved from the item parent or fall back to `character`.\n   * @returns {object} -\n   */\n  getClassHD(item, actorType) {\n    actorType ||= item.actor?.type || \"character\";\n\n    const config = this.getActorConfig(actorType);\n\n    switch (item.system.subType) {\n      case \"npc\":\n        return config.classes.npc;\n      case \"racial\":\n        return config.classes.racial;\n      default:\n        return config.classes.base;\n    }\n  }\n\n  /**\n   * Get actor type specific config\n   *\n   * @param {Actor|string} actor - Actor document or type string\n   * @returns {object}\n   */\n  getActorConfig(actor) {\n    const type = actor?.type || actor;\n\n    switch (type) {\n      case \"character\":\n        return this.pc;\n      case \"npc\":\n        return this.npc;\n      default:\n        return {\n          rules: { useWoundThresholds: 0, useWoundsAndVigor: false },\n          get useWoundThresholds() {\n            foundry.utils.logCompatibilityWarning(\"useWoundThresholds is in rules.useWoundThresholds\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return 0;\n          },\n          get useWoundsAndVigor() {\n            foundry.utils.logCompatibilityWarning(\"useWoundsAndVigor is in rules.useWoundsAndVigor\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return false;\n          },\n        };\n    }\n  }\n\n  static migrateData(source) {\n    if (!source) return;\n\n    if (source.continuity) {\n      source.continuous ??= source.continuity === \"continuous\";\n      delete source.continuity;\n    }\n\n    if (source.hitdice) {\n      // PCs\n      source.pc ??= {};\n      source.pc.classes ??= {};\n      source.pc.classes.base ??= source.hitdice.PC;\n      source.pc.classes.npc ??= source.hitdice.NPC;\n      source.pc.classes.racial ??= source.hitdice.Racial;\n\n      // NPCs\n      source.npc ??= {};\n      source.npc.classes ??= {};\n      source.npc.classes.base ??= source.hitdice.PC;\n      source.npc.classes.npc ??= source.hitdice.NPC;\n      source.npc.classes.racial ??= source.hitdice.Racial;\n\n      delete source.hitdice;\n    }\n\n    if (source.variants) {\n      source.pc ??= {};\n      source.pc.rules ??= {};\n      source.pc.rules.useWoundsAndVigor ??= source.variants.pc?.useWoundsAndVigor;\n      source.pc.rules.useWoundThresholds ??= source.variants.pc?.useWoundThresholds;\n\n      source.npc ??= {};\n      source.npc.rules ??= {};\n      source.npc.rules.useWoundsAndVigor ??= source.variants.npc?.useWoundsAndVigor;\n      source.npc.rules.useWoundThresholds ??= source.variants.npc?.useWoundThresholds;\n\n      delete source.variants;\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  get hitdice() {\n    foundry.utils.logCompatibilityWarning(\"HealthConfigModel.hitdice is deprecated with no direct replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    // Hand over PC settings\n    return {\n      PC: this.pc.classes.base,\n      Racial: this.pc.classes.racial,\n      NPC: this.pc.classes.npc,\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  get variants() {\n    foundry.utils.logCompatibilityWarning(\"HealthConfigModel.variants is deprecated with no direct replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    // Collect variant rules\n    return {\n      pc: {\n        useWoundsAndVigor: this.pc.rules.useWoundsAndVigor,\n        useWoundThresholds: this.pc.rules.useWoundThresholds,\n      },\n      npc: {\n        useWoundsAndVigor: this.npc.rules.useWoundsAndVigor,\n        useWoundThresholds: this.npc.rules.useWoundThresholds,\n      },\n    };\n  }\n\n  static get woundThresholdOptions() {\n    return {\n      0: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Disabled\"),\n      1: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Normal\"),\n      2: game.i18n.localize(\"PF1.Application.Settings.Health.WoundThresholds.Gritty\"),\n    };\n  }\n\n  static get healthRoundingOptions() {\n    return {\n      up: \"PF1.Application.Settings.Health.RoundingUp\",\n      nearest: \"PF1.Application.Settings.Health.RoundingNearest\",\n      down: \"PF1.Application.Settings.Health.RoundingDown\",\n    };\n  }\n\n  static get healthContinuityOptions() {\n    return {\n      true: \"PF1.Application.Settings.Health.Continuous\",\n      false: \"PF1.Application.Settings.Health.Discrete\",\n    };\n  }\n\n  prepareDerivedData() {\n    for (const config of [this.pc, this.npc]) {\n      Object.defineProperties(config, {\n        useWoundsAndVigor: {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"useWoundsAndVigor is in rules.useWoundsAndVigor\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return this.rules.useWoundsAndVigor;\n          },\n        },\n        useWoundThresholds: {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"useWoundThresholds is in rules.useWoundThresholds\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n            return this.rules.useWoundThresholds;\n          },\n        },\n      });\n    }\n  }\n}\n\nexport class HealthConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"healthConfig\",\n    phraseKey: \"PF1.Application.Settings.Health\",\n    model: HealthConfigModel,\n    window: {\n      icon: \"fa-solid fa-heartbeat\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/health.hbs\",\n      templates: [\"systems/pf1/templates/settings/health.hbs\", \"templates/generic/tab-navigation.hbs\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  tabGroups = { actor: \"pc\" };\n\n  tabs = {\n    actor: {\n      pc: {\n        icon: \"fa-solid fa-heartbeat\",\n        label: \"PF1.PCs\",\n      },\n      npc: {\n        icon: \"fa-solid fa-prescription-bottle-alt\",\n        label: \"PF1.NPCs\",\n      },\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      showWoundsVigorWarning: {\n        pc: this.settings.pc.rules.useWoundsAndVigor && this.settings.pc.rules.useWoundThresholds !== 0,\n        npc: this.settings.npc.rules.useWoundsAndVigor && this.settings.npc.rules.useWoundThresholds !== 0,\n      },\n    });\n\n    for (const actorType of [\"pc\", \"npc\"]) {\n      for (const [hdId, hdData] of Object.entries(context.settings[actorType].classes)) {\n        hdData.label = `PF1.Application.Settings.Health.Class.${hdId}`;\n        hdData.fields = context.fields[actorType].fields.classes.fields[hdId].fields;\n      }\n    }\n\n    context.settings.pc.label = \"PC\";\n    context.settings.npc.label = \"NPC\";\n\n    // Prepare tabs\n    context.activeTab = this.tabGroups.actor;\n    context.tabs = this.tabs?.actor || {};\n    for (const [id, tab] of Object.entries(context.tabs)) {\n      const active = this.tabGroups.actor === id;\n      Object.assign(tab, {\n        id,\n        group: \"actor\",\n        active,\n        cssClass: active ? \"active\" : \"\",\n      });\n    }\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class IntegrationConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      diceSoNice: new fields.BooleanField({ initial: true }),\n      dragRuler: new fields.BooleanField({ initial: true }),\n      babele: new fields.BooleanField({ initial: true }),\n    };\n  }\n}\n\n/**\n * An application that lets the user configure module integration related settings.\n */\nexport class IntegrationConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"integration\",\n    phraseKey: \"PF1.Application.Settings.Integration\",\n    model: IntegrationConfigModel,\n    window: {\n      icon: \"fa-solid fa-check-to-slot\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/integration.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @protected\n   * @param {string} partId\n   * @param {ApplicationRenderContext} context\n   */\n  async _preparePartContext(partId, context) {\n    context = await super._preparePartContext(partId, context);\n    if (partId !== \"form\") return context;\n\n    Object.assign(context, {\n      dsnFound: game.modules.get(\"dice-so-nice\")?.active,\n      drFound: game.modules.get(\"drag-ruler\")?.active,\n      bFound: game.modules.get(\"babele\")?.active,\n    });\n\n    context.appId = this.id;\n\n    return context;\n  }\n}\n","import { AbstractSettingsApplication } from \"@app/settings/abstract-settings.mjs\";\n\nexport class PerformanceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      reachLimit: new fields.NumberField({ integer: true, min: 0, initial: 60, max: 300, step: 1 }),\n    };\n  }\n}\n\n/**\n * An application that lets the user configure performance-related settings.\n */\nexport class PerformanceConfig extends AbstractSettingsApplication {\n  static DEFAULT_OPTIONS = {\n    configKey: \"performance\",\n    phraseKey: \"PF1.Application.Settings.Performance\",\n    model: PerformanceConfigModel,\n    window: {\n      icon: \"fa-solid fa-gauge\",\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/settings/performance.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n}\n","import {\n  ExperienceConfig,\n  ExperienceConfigModel,\n  HealthConfig,\n  HealthConfigModel,\n  IntegrationConfig,\n  IntegrationConfigModel,\n  PerformanceConfig,\n  PerformanceConfigModel,\n} from \"@app/settings/_module.mjs\";\n\n/**\n * Register System Settings\n */\nexport function registerSystemSettings() {\n  /**\n   * Track the system version upon which point a migration was last applied\n   */\n  game.settings.register(\"pf1\", \"systemMigrationVersion\", {\n    scope: \"world\",\n    config: false,\n    type: String,\n    default: \"0.0.0\",\n  });\n\n  // Migration is in progress\n  game.settings.register(\"pf1\", \"migrating\", {\n    scope: \"world\",\n    config: false,\n    type: Boolean,\n    default: false,\n    onChange: (value) => (pf1.migrations.isMigrating = value),\n  });\n\n  /**\n   * Track when the last changelog was shown\n   */\n  game.settings.register(\"pf1\", \"changelogVersion\", {\n    scope: \"client\",\n    config: false,\n    type: String,\n    default: \"0.74.9\",\n  });\n  /**\n   * Don't automatically show changelog\n   */\n  game.settings.register(\"pf1\", \"dontShowChangelog\", {\n    scope: \"client\",\n    config: false,\n    type: Boolean,\n    default: false,\n  });\n\n  // Health configuration\n  game.settings.registerMenu(\"pf1\", \"healthConfig\", {\n    name: \"PF1.Application.Settings.Health.Title\",\n    label: \"PF1.Application.Settings.Health.Label\",\n    hint: \"PF1.Application.Settings.Health.Hint\",\n    icon: \"fa-solid fa-heartbeat\",\n    type: HealthConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"healthConfig\", {\n    scope: \"world\",\n    default: new HealthConfigModel(),\n    type: HealthConfigModel,\n    config: false,\n    requiresReload: true,\n    //onChange: () => pf1.utils.refreshActors(), // Excessive if reloading instantly\n  });\n\n  // Experience configuration\n  game.settings.registerMenu(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.Application.Settings.Experience.Title\",\n    label: \"PF1.Application.Settings.Experience.Label\",\n    hint: \"PF1.Application.Settings.Experience.Hint\",\n    icon: \"fa-solid fa-book\",\n    type: ExperienceConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"experienceConfig\", {\n    scope: \"world\",\n    default: new ExperienceConfigModel(),\n    type: ExperienceConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  game.settings.register(\"pf1\", \"integration\", {\n    type: IntegrationConfigModel,\n    default: new IntegrationConfigModel(),\n    scope: \"world\",\n    config: false,\n    requiresReload: true,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"integration\", {\n    name: \"PF1.Application.Settings.Integration.Title\",\n    label: \"PF1.Application.Settings.Integration.Label\",\n    hint: \"PF1.Application.Settings.Integration.Hint\",\n    restricted: true,\n    icon: \"fa-solid fa-check-to-slot\",\n    type: IntegrationConfig,\n  });\n\n  game.settings.register(\"pf1\", \"performance\", {\n    scope: \"client\",\n    default: new PerformanceConfigModel(),\n    type: PerformanceConfigModel,\n    config: false,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"performance\", {\n    name: \"PF1.Application.Settings.Performance.Title\",\n    label: \"PF1.Application.Settings.Performance.Button\",\n    hint: \"PF1.Application.Settings.Performance.Hint\",\n    restricted: false,\n    icon: \"fa-solid fa-gauge\",\n    type: PerformanceConfig,\n  });\n\n  // MEASURING\n\n  /**\n   * Option to change measure style\n   */\n  game.settings.register(\"pf1\", \"measureStyle\", {\n    name: \"PF1.SETTINGS.Canvas.MeasureStyle\",\n    hint: \"PF1.SETTINGS.Canvas.MeasureStyleHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * System of Units\n   */\n  game.settings.register(\"pf1\", \"units\", {\n    name: \"PF1.SETTINGS.Units.System\",\n    hint: \"PF1.SETTINGS.Units.SystemHint\",\n    scope: \"world\",\n    config: true,\n    default: \"imperial\",\n    type: String,\n    choices: {\n      imperial: \"PF1.SETTINGS.Units.Imperial\",\n      metric: \"PF1.SETTINGS.Units.Metric\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for distances.\n   */\n  game.settings.register(\"pf1\", \"distanceUnits\", {\n    name: \"PF1.SETTINGS.Units.Distance\",\n    hint: \"PF1.SETTINGS.Units.DistanceHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialDistance\",\n      metric: \"PF1.SETTINGS.Units.MetricDistance\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for weights.\n   */\n  game.settings.register(\"pf1\", \"weightUnits\", {\n    name: \"PF1.SETTINGS.Units.Weight\",\n    hint: \"PF1.SETTINGS.Units.WeightHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialWeight\",\n      metric: \"PF1.SETTINGS.Units.MetricWeight\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * Overland speed variant for metric.\n   */\n  game.settings.register(\"pf1\", \"overlandMetricVariant\", {\n    name: \"PF1.SETTINGS.OverlandVariantN\",\n    hint: \"PF1.SETTINGS.OverlandVariantL\",\n    scope: \"world\",\n    config: true,\n    default: \"rounded\",\n    choices: {\n      rounded: \"PF1.SETTINGS.OverlandMetricRounded\",\n      exact: \"PF1.SETTINGS.OverlandMetricExact\",\n    },\n  });\n\n  // OPTIONAL RULES\n\n  /**\n   * Option to allow the background skills optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"allowBackgroundSkills\", {\n    name: \"PF1.SETTINGS.VariantRules.BackgroundSkills\",\n    hint: \"PF1.SETTINGS.VariantRules.BackgroundSkillsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Option to use the Fractional Base Bonuses optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"useFractionalBaseBonuses\", {\n    name: \"PF1.SETTINGS.VariantRules.FractionalBaseBonuses\",\n    hint: \"PF1.SETTINGS.VariantRules.FractionalBaseBonusesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Unchained action economy\n   */\n  game.settings.register(\"pf1\", \"unchainedActionEconomy\", {\n    name: \"PF1.SETTINGS.UnchainedActionEconomyN\",\n    hint: \"PF1.SETTINGS.UnchainedActionEconomyH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Cybertech\n   */\n  game.settings.register(\"pf1\", \"cybertech\", {\n    name: \"PF1.SETTINGS.Cybertech\",\n    hint: \"PF1.SETTINGS.CybertechHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Armor as DR\n\n  /**\n   * Critical confirmation rolls\n   */\n  game.settings.register(\"pf1\", \"critConfirm\", {\n    name: \"PF1.SETTINGS.CriticalConfirm\",\n    hint: \"PF1.SETTINGS.CriticalConfirmHint\",\n    scope: \"world\",\n    type: Boolean,\n    default: true,\n    config: true,\n  });\n\n  /**\n   * Scrolling health required permission\n   */\n  game.settings.register(\"pf1\", \"healthPermission\", {\n    name: \"PF1.SETTINGS.HealthDisplay.Label\",\n    hint: \"PF1.SETTINGS.HealthDisplay.Hint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      NONE: \"PF1.SETTINGS.HealthDisplay.AnyPermission\",\n      LIMITED: \"OWNERSHIP.LIMITED\",\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n  });\n\n  // VISION\n\n  /**\n   * Special Vision Needs Selection\n   *\n   * Formerly: \"Low-light Vision Mode\"\n   */\n  game.settings.register(\"pf1\", \"lowLightVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.RequiresSelection\",\n    hint: \"PF1.SETTINGS.Vision.RequiresSelectionHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      // Refresh canvas sight\n      canvas.perception.update(\n        { initializeLighting: true, initializeVision: true, refreshLighting: true, refreshVision: true },\n        true\n      );\n    },\n  });\n\n  /**\n   * Shared Vision sharing style.\n   */\n  game.settings.register(\"pf1\", \"sharedVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.Sharing\",\n    hint: \"PF1.SETTINGS.Vision.SharingHint\",\n    scope: \"world\",\n    config: false, // Hidden as it is unused; TODO: Re-implement #187's setting usage or remove setting/feature completely\n    default: 0,\n    type: Number,\n    choices: {\n      0: \"PF1.SETTINGS.Vision.SharingWithoutSelection\",\n      1: \"PF1.SETTINGS.Vision.SharingWithSelection\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  game.settings.register(\"pf1\", \"guaranteedVision\", {\n    name: \"PF1.SETTINGS.Vision.Guaranteed\",\n    hint: \"PF1.SETTINGS.Vision.GuaranteedHint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  /**\n   * Enable vision for player characters by default.\n   */\n  game.settings.register(\"pf1\", \"characterVision\", {\n    name: \"PF1.SETTINGS.Vision.PCDefault\",\n    hint: \"PF1.SETTINGS.Vision.PCDefaultHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  game.settings.register(\"pf1\", \"pcDisposition\", {\n    name: \"PF1.SETTINGS.Token.PCDisposition\",\n    hint: \"PF1.SETTINGS.Token.PCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      FRIENDLY: \"TOKEN.DISPOSITION.FRIENDLY\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n    },\n    default: \"FRIENDLY\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"npcDisposition\", {\n    name: \"PF1.SETTINGS.Token.NPCDisposition\",\n    hint: \"PF1.SETTINGS.Token.NPCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n      HOSTILE: \"TOKEN.DISPOSITION.HOSTILE\",\n    },\n    default: \"NONE\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"systemVision\", {\n    name: \"PF1.SETTINGS.Vision.SystemControl\",\n    hint: \"PF1.SETTINGS.Vision.SystemControlHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      Object.values(ui.windows)\n        .filter((app) => app instanceof TokenConfig)\n        .forEach((app) => app.render());\n\n      // Initialize lighting is required for LLV to take effect\n      canvas.perception.update({ initializeLighting: true, refreshLighting: true, refreshVision: true }, true);\n    },\n  });\n\n  // CHAT CARDS\n\n  /**\n   * Option to automatically collapse Item Card descriptions\n   */\n  game.settings.register(\"pf1\", \"autoCollapseItemCards\", {\n    name: \"PF1.SETTINGS.Chat.AutoCollapse\",\n    hint: \"PF1.SETTINGS.Chat.AutoCollapseHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  /**\n   * Option to hide chat buttons\n   */\n  game.settings.register(\"pf1\", \"hideChatButtons\", {\n    name: \"PF1.SETTINGS.Chat.HideButtons\",\n    hint: \"PF1.SETTINGS.Chat.HideButtonsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  // HOMEBREW\n\n  /**\n   * Set coin weight\n   */\n  game.settings.register(\"pf1\", \"coinWeight\", {\n    name: \"PF1.SETTINGS.Houserules.CoinDivisor\",\n    hint: \"PF1.SETTINGS.Houserules.CoinDivisorHint\",\n    scope: \"world\",\n    config: true,\n    default: 50,\n    type: Number,\n    requiresReload: true,\n  });\n\n  /**\n   * Default spellpoint cost\n   */\n  game.settings.register(\"pf1\", \"spellPointCost\", {\n    name: \"PF1.SETTINGS.Houserules.SpellPointCost\",\n    hint: \"PF1.SETTINGS.Houserules.SpellPointCostHint\",\n    scope: \"world\",\n    config: true,\n    default: \"1 + @sl\",\n    type: String,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n  });\n\n  /**\n   * Use Dual Heal by default\n   */\n  game.settings.register(\"pf1\", \"dualHeal\", {\n    name: \"PF1.SETTINGS.DualHealDefault\",\n    hint: \"PF1.SETTINGS.DualHealDefaultHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Alternative reach corner rule\n   */\n  game.settings.register(\"pf1\", \"alternativeReachCornerRule\", {\n    name: \"PF1.SETTINGS.Houserules.AltReach\",\n    hint: \"PF1.SETTINGS.Houserules.AltReachHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Allow proficiencies on NPCs.\n   */\n  game.settings.register(\"pf1\", \"npcProficiencies\", {\n    name: \"PF1.SETTINGS.Houserules.NPCProficiencies\",\n    hint: \"PF1.SETTINGS.Houserules.NPCProficienciesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n    type: Boolean,\n  });\n\n  // TOKENS / CONDITIONS\n\n  /**\n   * Display default token conditions alongside system ones\n   */\n  game.settings.register(\"pf1\", \"coreEffects\", {\n    name: \"PF1.SETTINGS.CoreEffectsN\",\n    hint: \"PF1.SETTINGS.CoreEffectsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide token conditions\n   */\n  game.settings.register(\"pf1\", \"hideTokenConditions\", {\n    name: \"PF1.SETTINGS.HideTokenConditionsN\",\n    hint: \"PF1.SETTINGS.HideTokenConditionsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => canvas.tokens?.placeables?.forEach((t) => t._applyRenderFlags({ redrawEffects: true })),\n  });\n\n  // TRANSPARENCY\n\n  /**\n   * Obfuscate roll details from non-observers.\n   */\n  game.settings.register(\"pf1\", \"obscureInlineRolls\", {\n    name: \"PF1.SETTINGS.Chat.ObscureInlineRolls\",\n    hint: \"PF1.SETTINGS.Chat.ObscureInlineRollsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide DCs.\n   */\n  game.settings.register(\"pf1\", \"obscureSaveDCs\", {\n    name: \"PF1.SETTINGS.Chat.ObscureSaveDCs\",\n    hint: \"PF1.SETTINGS.Chat.ObscureSaveDCsHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // COMBAT\n\n  game.settings.register(\"pf1\", \"initiativeTiebreaker\", {\n    name: \"PF1.SETTINGS.InitTiebreaker.Label\",\n    hint: \"PF1.SETTINGS.InitTiebreaker.Hint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // USER INTERFACE\n\n  /**\n   * Skip action dialog prompts\n   */\n  game.settings.register(\"pf1\", \"skipActionDialogs\", {\n    name: \"PF1.SETTINGS.SkipActionDialogsN\",\n    hint: \"PF1.SETTINGS.SkipActionDialogsH\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /*\n   * When skipping an action dialog prompt still place the template if one is configured\n   */\n  game.settings.register(\"pf1\", \"placeMeasureTemplateOnQuickRolls\", {\n    name: \"PF1.SETTINGS.MeasureOnQuickUse\",\n    hint: \"PF1.SETTINGS.MeasureOnQuickUseHint\",\n    scope: \"client\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Invert filter Shift-clicking\n   */\n  game.settings.register(\"pf1\", \"invertSectionFilterShiftBehaviour\", {\n    name: \"PF1.SETTINGS.Sheet.InvertFilters\",\n    hint: \"PF1.SETTINGS.Sheet.InvertFiltersHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  // TARGETING\n\n  /**\n   * Disable targets for attack cards\n   */\n  game.settings.register(\"pf1\", \"disableAttackCardTargets\", {\n    name: \"PF1.SETTINGS.Chat.NoTargets\",\n    hint: \"PF1.SETTINGS.Chat.NoTargetsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Clear targets after attack\n   */\n  game.settings.register(\"pf1\", \"clearTargetsAfterAttack\", {\n    name: \"PF1.SETTINGS.Chat.ClearTargets\",\n    hint: \"PF1.SETTINGS.Chat.ClearTargetsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\n/**\n * Migrate system settings.\n */\nexport function migrateSystemSettings() {\n  // Delete now unused compendium browser cache\n  game.settings.storage.get(\"client\").removeItem(\"pf1.compendiumItems\");\n\n  if (!game.user.isGM) return;\n\n  // Currently empty, since the last option was removed (2022-06-06)\n}\n\n/**\n * Returns whether the user's settings and key presses signal that dialogs should be skipped.\n *\n * @returns {boolean} - True if prompt should be skipped\n */\nexport const getSkipActionPrompt = () => {\n  return (\n    (game.settings.get(\"pf1\", \"skipActionDialogs\") && !pf1.skipConfirmPrompt) ||\n    (!game.settings.get(\"pf1\", \"skipActionDialogs\") && pf1.skipConfirmPrompt)\n  );\n};\n","/**\n * Level-up and class addition handler.\n */\nexport class LevelUpForm extends FormApplication {\n  /**\n   * @internal\n   * @type {ActorPF}\n   */\n  actor;\n\n  /**\n   * Relevant token if any.\n   *\n   * @internal\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * Temporary clone of the actor for seeing the results of various modifications with.\n   *\n   * @internal\n   * @type {ActorPF}\n   */\n  simulacra;\n\n  /**\n   * Temporary clone of the class to simulate changes.\n   *\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  mold;\n\n  config = {\n    health: { manual: null, type: null, value: 0 },\n    fcb: { choice: \"none\", unavailable: false, available: true },\n    visibility: null,\n    feats: 0,\n    abilityScore: {\n      new: 0,\n      used: 0,\n      get available() {\n        return this.new - this.used;\n      },\n    },\n  };\n\n  static ICONS = {\n    fcb: {\n      none: \"\",\n      hp: \"systems/pf1/icons/skills/green_19.jpg\",\n      skill: \"systems/pf1/icons/items/inventory/dice.jpg\",\n      alt: \"systems/pf1/icons/skills/affliction_22.jpg\",\n    },\n    health: {\n      auto: \"\",\n      manual: \"systems/pf1/icons/skills/green_19.jpg\",\n      roll: \"systems/pf1/icons/items/inventory/dice.jpg\",\n    },\n  };\n\n  useBackgroundSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n  /**\n   * @internal\n   * @param {Actor} actor\n   * @param {Item} item\n   * @param {object} options\n   */\n  constructor(actor, item = null, options = {}) {\n    super(item, options);\n\n    if (item?.type !== \"class\") throw new Error(\"Can not level-up non-class items.\");\n\n    this.actor = actor ?? item?.actor ?? options.actor;\n\n    if (!this.actor) throw new Error(\"LevelUpForm needs an actor\");\n\n    this.token = this.actor?.token ?? options.token;\n\n    delete this.options.actor;\n    delete this.options.token;\n\n    this.config.isMythic = item.subType === \"mythic\";\n\n    this.config.level = {\n      old: item.system.level,\n      new: item.system.level + 1,\n      levelUp: item.system.level > 0,\n      hd: {\n        old: this.actor.system.attributes.hd.total,\n        new: null,\n      },\n    };\n\n    const config = this.config;\n    this.config.abilityScore.upgrades = Object.fromEntries(\n      Object.entries(pf1.config.abilities).map(([key, label]) => [\n        key,\n        {\n          ...this.actor.system.abilities[key],\n          key,\n          label,\n          added: 0,\n          bonus: 0,\n          get isEnhanced() {\n            return this.total !== this.base;\n          },\n          get isNull() {\n            return this.base === null;\n          },\n          get isValid() {\n            return !this.isNull;\n          },\n          get isAvailable() {\n            return this.isValid && config.abilityScore.available > 0;\n          },\n          get isModified() {\n            return this.added != 0;\n          },\n        },\n      ])\n    );\n\n    // By default hide NPCs for GMs\n    if (!this.actor.hasPlayerOwner) this.config.visibility = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    this._initData();\n    this._initChoices();\n  }\n\n  /**\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  get item() {\n    return this.object;\n  }\n\n  set item(cls) {\n    this.object = cls;\n  }\n\n  get id() {\n    const parent = this.actor.uuid.replaceAll(\".\", \"-\");\n    const tag = this.item.system.tag || pf1.utils.createTag(this.item.name);\n    return `level-up-${parent}-class-${tag}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"level-up\"],\n      template: \"systems/pf1/templates/apps/level-up.hbs\",\n      scrollY: [\"section\"],\n      width: 820,\n      height: \"auto\",\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      resizable: true,\n    });\n  }\n\n  get title() {\n    if (this.isLevelUp)\n      return game.i18n.format(\"PF1.LevelUp.Increase\", { class: this.item.name }) + ` – ${this.actor.name}`;\n    else return game.i18n.format(\"PF1.LevelUp.Add\", { class: this.item.name }) + ` – ${this.actor.name}`;\n  }\n\n  get isLevelUp() {\n    return this.item.system.level > 0;\n  }\n\n  get isNewClass() {\n    return !this.isLevelUp;\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {Item} item - Class item\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null|undefined>} - Updated class item if updated or null if process was cancelled. Undefined if this re-opened existing dialog.\n   */\n  static async increaseLevel(actor, item, { token } = {}) {\n    const app = Object.values(actor.apps).find((o) => o instanceof LevelUpForm && o._element && o.item === item);\n\n    if (app) app.render(true, { focus: true });\n    else return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {object} itemData - Class item data\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item | null>}\n   */\n  static async addClassWizard(actor, itemData, { token } = {}) {\n    // Add class item\n    const item = new Item.implementation(itemData, { parent: actor });\n    // Alter initial data\n    item.updateSource({ system: { hp: 0, level: 0 } });\n    item.reset();\n\n    // Add level up form for new class\n    return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  _prepareAssociations() {\n    if (this.config.associations) return;\n\n    const newLevel = this.config.level.new;\n\n    const assocs =\n      this.item.system.links?.classAssociations\n        ?.filter((a) => a.level === newLevel)\n        ?.map((a) => ({ ...fromUuidSync(a.uuid || \"\"), uuid: a.uuid })) ?? [];\n\n    this.config.associations = assocs;\n  }\n\n  async getData() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpOptions = hpConfig.getClassHD(this.item);\n\n    const itemData = this.item.toObject();\n\n    const fcb = this.config.fcb;\n    fcb.hp = itemData.system.fc?.hp?.value || 0;\n    fcb.skill = itemData.system.fc?.skill?.value || 0;\n    fcb.alt = itemData.system.fc?.alt?.value || 0;\n\n    const result = {\n      ...this.config,\n      item: itemData,\n      document: this.item,\n      actor: this.actor,\n      config: pf1.config,\n      labels: {\n        fcb: {\n          skill: \"PF1.LevelUp.FC.Skill.Label\",\n          hp: \"PF1.LevelUp.FC.HP.Label\",\n          none: \"PF1.LevelUp.FC.None.Label\",\n          alt: \"PF1.LevelUp.FC.Alt.Label\",\n        },\n      },\n      fcb,\n      abilityScore: this.config.abilityScore,\n      icons: this.constructor.ICONS,\n      visibilityOptions: pf1.const.messageVisibility,\n      useBackgroundSkills: this.useBackgroundSkills,\n    };\n\n    // Disallow self roll for non-GMs.\n    if (!game.user.isGM) delete result.visibilityOptions.selfroll;\n\n    result.health.rate = Math.round(hpOptions.rate * 100);\n\n    const hd = this.config.level.hd.total;\n    const tier = this.config.level.tier.total;\n\n    result.abilityScore.new = 0;\n    if (this.config.isMythic) {\n      result.abilityScore.new = pf1.config.tierAbilityScores[tier] ?? 0;\n    } else {\n      result.abilityScore.new = pf1.config.levelAbilityScores[hd] ?? 0;\n    }\n\n    result.health.value = result.health.delta;\n    switch (result.health.type) {\n      case \"manual\":\n        result.health.value += result.health.raw;\n        break;\n      case \"auto\":\n        result.health.value = result.health.raw;\n        break;\n      case \"roll\":\n        result.health.value = result.health.raw;\n        break;\n    }\n\n    result.skills.delta.ranks = result.skills.delta.adv;\n\n    // Apply FCB\n    result.health.bonus = 0;\n    switch (result.fcb.choice) {\n      case \"hp\":\n        result.health.value += 1;\n        result.health.bonus += 1;\n        break;\n      case \"skill\":\n        result.skills.delta.ranks += 1;\n        break;\n    }\n\n    // Apply abl mod\n    //result.health.value += result.health.ability.mod;\n\n    // Next ability score\n    result.abilityScore.next = this._getNextAbilityScoreLandmark();\n\n    result.ready = this.isReady();\n\n    return result;\n  }\n\n  /**\n   * Determine if this level-up is finalized.\n   *\n   * @returns {boolean}\n   */\n  isReady() {\n    if (!this.config.health.type) return false;\n    return this.config.abilityScore.available == 0;\n  }\n\n  /**\n   * Get level at which next ability score is gained.\n   *\n   * @internal\n   * @returns {number|null}\n   */\n  _getNextAbilityScoreLandmark() {\n    // Progression table\n    const table = this.config.isMythic ? pf1.config.tierAbilityScores : pf1.config.levelAbilityScores;\n\n    // HD or tier\n    const hdt = this.config.isMythic ? this.config.level.tier.total : this.config.level.hd.total;\n\n    const current = table[hdt] ?? 0;\n    if (current > 0) return null;\n\n    // Next ability score\n    const gains = Object.entries(table)\n      .map(([level, gained]) => Number(level))\n      .filter((level) => level > hdt);\n\n    return gains[0] ?? null;\n  }\n\n  /**\n   * Default health selection if auto health is not used.\n   *\n   * @internal\n   * @returns {string}\n   */\n  _getDefaultHealthOption() {\n    if (this.item.subType === \"mythic\") return \"static\";\n    if (this.config.health.auto) return \"auto\";\n    if (this.config.health.maximized) return \"max\";\n    return \"roll\";\n  }\n\n  /**\n   * Default hit points.\n   *\n   * @internal\n   * @returns {number}\n   */\n  _getDefaultHitPoints() {\n    return Math.ceil(1 + (this.item.system.hd - 1) / 2);\n  }\n\n  _prepareHealthData() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConfig.getClassHD(this.item);\n    const { auto, rate } = clsConf;\n\n    this.config.health.auto = auto;\n    this.config.health.manual ??= this._getDefaultHitPoints();\n    this.config.health.hitDie = this.item.system.hd || 8;\n\n    let delta = 0;\n    if (this.config.isMythic) {\n      delta = this.item.system.hd;\n    }\n    // Calculate auto health\n    else if (auto) {\n      const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[hpConfig.rounding];\n      const dieHealth = 1 + (this.item.system.hd - 1) * rate;\n      // Continuous\n      if (hpConfig.continuous) {\n        const { new: newHD, old: oldHD } = this.config.level.hd;\n        const newHP = newHD + round(newHD * dieHealth);\n        const oldHP = oldHD + round(oldHD * dieHealth);\n        delta = newHP - oldHP;\n      }\n      // Discrete\n      else {\n        delta = round(dieHealth);\n      }\n    }\n    // Manual health\n    else {\n      delta += this.config.health.manual;\n    }\n\n    this.config.health.delta = delta;\n\n    // Con mod\n    const hpAbl = this.simulacra.system.attributes?.hpAbility;\n    const hpMod = this.simulacra.system.abilities[hpAbl]?.mod ?? 0;\n    this.config.health.ability = { key: hpAbl, mod: hpMod };\n  }\n\n  _initData() {\n    this._prepareAssociations();\n\n    const cfg = this.config;\n\n    cfg.fcb.available = this.isFavouredClass();\n    cfg.fcb.unavailable = !cfg.fcb.available;\n\n    // Create temporary actor to get correct values for the new level\n    if (!this.simulacra) {\n      const actorData = this.actor.toObject();\n      const id = this.item.id ?? \"MOLD000000000000\";\n      // New items don't yet exist on actor, so we add simulation of one to the simulacra\n      if (!this.item.id) {\n        const itemData = this.item.toObject();\n        itemData._id = id;\n        actorData.items.push(itemData);\n      }\n      this.simulacra = new Actor.implementation(actorData);\n      this.mold = this.simulacra.items.get(id);\n    }\n\n    // Determine differences between current and new level\n    this.oldLevel ??= this.getLevelData(cfg.level.old);\n    const newLevel = this.getLevelData(cfg.level.new);\n    this.newLevel = newLevel;\n    cfg.level.hd = {\n      new: newLevel.hd,\n      old: this.oldLevel.hd,\n      total: newLevel.totalHD,\n    };\n    cfg.level.tier = {\n      new: newLevel.mythicTier,\n      old: this.oldLevel.mythicTier,\n      total: newLevel.totalMythicTier,\n    };\n    cfg.level.feats = newLevel.feats - this.oldLevel.feats;\n    // Saves\n    const oldSaves = this.actor.system.attributes?.savingThrows;\n    if (oldSaves) {\n      const newSaves = this.simulacra.system.attributes?.savingThrows;\n      cfg.level.fort = newSaves.fort.total - oldSaves.fort.total;\n      cfg.level.ref = newSaves.ref.total - oldSaves.ref.total;\n      cfg.level.will = newSaves.will.total - oldSaves.will.total;\n    }\n    cfg.level.bab = this.simulacra.system.attributes?.bab?.total - this.actor.system.attributes?.bab?.total;\n\n    cfg.health.raw = newLevel.hp - this.oldLevel.hp;\n\n    cfg.skills = {\n      new: newLevel.skills,\n      old: this.oldLevel.skills,\n    };\n\n    cfg.skills.delta = {\n      adv: cfg.skills.new.value - cfg.skills.old.value,\n      bg: cfg.skills.new.bg - cfg.skills.old.bg,\n    };\n    cfg.level.skills = cfg.skills.delta.adv + cfg.skills.delta.bg;\n\n    this._prepareHealthData();\n  }\n\n  getLevelData(level) {\n    const tempActor = this.simulacra;\n    const cls = this.mold;\n    cls.updateSource({ \"system.level\": level });\n    tempActor.reset();\n\n    let rollData = {};\n\n    const isMindless = tempActor.system.abilities?.int?.value === null;\n\n    // Rank counting\n    let advSkillRanks = 0;\n    let bgSkillRanks = 0;\n\n    const intMod = !isMindless ? (tempActor.system.abilities?.int?.mod ?? 0) : 0;\n\n    tempActor.itemTypes.class\n      .filter((cls) => cls.subType !== \"mythic\")\n      .forEach((cls) => {\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        if (perLevel > 0) advSkillRanks += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (this.useBackgroundSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) bgSkillRanks += bgranks;\n        }\n      });\n\n    if (tempActor.system.details?.bonusSkillRankFormula) {\n      rollData = tempActor.getRollData();\n      const roll = Roll.defaultImplementation.safeRollSync(tempActor.system.details.bonusSkillRankFormula, rollData);\n      if (roll.err) console.error(`An error occurred in the Bonus Skill Rank formula of actor ${tempActor.name}.`);\n      advSkillRanks += roll.total || 0;\n    }\n\n    advSkillRanks += tempActor.system.details?.skills?.bonus || 0;\n\n    const feats = tempActor.getFeatCount().max;\n\n    return {\n      skills: { value: advSkillRanks, bg: bgSkillRanks },\n      feats,\n      hd: cls.hitDice,\n      totalHD: tempActor.system.attributes.hd.total,\n      mythicTier: cls.mythicTier,\n      totalMythicTier: tempActor.system.details.mythicTier,\n      hp: tempActor.system.attributes.hp.max,\n      bab: cls.system.babBase,\n      fort: cls.system.savingThrows?.fort?.base || 0,\n      ref: cls.system.savingThrows?.ref?.base || 0,\n      will: cls.system.savingThrows?.will?.base || 0,\n    };\n  }\n\n  /**\n   * @returns {boolean} Whether this form's associated class is a favoured class.\n   * @todo Add better logic for determining this <26-01-22, Furyspark>\n   */\n  isFavouredClass() {\n    return pf1.config.favoredClassTypes.includes(this.item.subType);\n  }\n\n  async _updateObject(event, formData) {\n    const mhp = this.config.health.manual;\n\n    foundry.utils.mergeObject(this.config, foundry.utils.expandObject(formData));\n\n    if (mhp !== this.config.health.manual) {\n      this._prepareHealthData();\n      // Assume adjusting manual health means user wants to use it\n      this.config.health.type = \"manual\";\n    }\n\n    return this.render();\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-scores .ability-score .operator\").on(\"click\", this._onClickAbilityScoreOperator.bind(this));\n\n    // Allow opening class association items for inspection\n    html.find(\".item-list .item\").on(\"click\", this._openItemSheet.bind(this));\n\n    // Save button\n    html.find('button[data-action=\"commit\"]').on(\"click\", this._onCommit.bind(this));\n\n    // Manual/raw button\n    html.find('button[data-action=\"skip\"]').on(\"click\", this._onSkip.bind(this));\n  }\n\n  async _openItemSheet(event) {\n    const el = event.currentTarget;\n    const uuid = el.dataset.itemUuid;\n    const item = await fromUuid(uuid);\n    item.sheet.render(true, { focus: true });\n  }\n\n  _onClickAbilityScoreOperator(event) {\n    event.preventDefault();\n\n    const a = event.currentTarget;\n    const operator = a.dataset.operator;\n    const ablKey = a.closest(\".ability-score\").dataset.key;\n\n    // Determine how to adjust ability score\n    const add = this._adjustAbilityScore(ablKey, operator);\n    // Determine by how much\n    const value = this._adjustAbilityScoreValue(ablKey, add);\n\n    const abls = this.config.abilityScore;\n    const upgrades = abls.upgrades[ablKey];\n\n    const cost = this._adjustAbilityScoreCost(ablKey, value);\n\n    upgrades.value += value;\n    upgrades.added += cost;\n    abls.used += cost;\n\n    this.simulacra.updateSource({ system: { abilities: { [ablKey]: { value: upgrades.value } } } });\n\n    // Cross-pollinate new data\n    foundry.utils.mergeObject(upgrades, this.simulacra.system.abilities[ablKey]);\n    this._initData();\n\n    this.render();\n  }\n\n  /**\n   * @internal\n   * @param {string} key - Ability score key\n   * @param {string} op - Operator clicked\n   * @returns {-1|0|1} - Direction of adjustment\n   */\n  _adjustAbilityScore(key, op = null) {\n    switch (op) {\n      case \"add\":\n        return 1;\n      default:\n        return 0;\n      case \"subtract\":\n        return -1;\n    }\n  }\n\n  /**\n   * Determine actual ability score adjustment value.\n   *\n   * By default 1 for normal level-ups, 2 for mythic tiers.\n   *\n   * Uses {@link pf1.config.levelAbilityScoreMult} and {@link pf1.config.tierAbilityScoreMult} as multipliers.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreValue(key, value) {\n    return value * (this.config.isMythic ? pf1.config.tierAbilityScoreMult : pf1.config.levelAbilityScoreMult);\n  }\n\n  /**\n   * Return cost of the adjustment.\n   *\n   * For homebrew support.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreCost(key, value) {\n    return value;\n  }\n\n  _initChoices() {\n    this._initFCBChoices();\n    this._initHPChoices();\n  }\n\n  _initFCBChoices() {\n    if (!this.config.fcb.available) return;\n\n    // Pre-select highest FCB\n    const { hp, skill, alt } = this.item.system.fc;\n    const fcb = [\n      { id: \"hp\", value: hp?.value || 0 },\n      { id: \"skill\", value: skill?.value || 0 },\n      { id: \"alt\", value: alt?.value || 0 },\n    ].sort((a, b) => b.value - a.value);\n\n    const highest = fcb[0];\n    if (highest.value > 0) this.config.fcb.choice = highest.id;\n  }\n\n  _initHPChoices() {\n    this.config.health.type = this._getDefaultHealthOption();\n\n    if (this.config.isMythic) return;\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConfig.getClassHD(this.item);\n\n    if (clsConf.maximized) {\n      const maxHDlimit = hpConfig.maximized;\n\n      const maximized = this.actor.itemTypes.class.reduce((maximized, cls) => {\n        if (!hpConfig.getClassHD(this.item).maximized) return maximized;\n        return maximized + cls.hitDice;\n      }, 0);\n\n      const maxLeft = hpConfig.maximized - maximized;\n      this.config.health.maximized = Math.max(0, maxLeft);\n\n      // Maximize auto health, too.\n      if (maxLeft > 0) {\n        this.config.health.delta = this.config.health.hitDie;\n        this.config.health.type = \"max\";\n      }\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async close(options) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Get effective health roll formula.\n   *\n   * @internal\n   * @param {string} type\n   * @returns {string}\n   */\n  _getHealthFormula(type) {\n    const dieSize = this.item.system.hd;\n    switch (type) {\n      case \"static\":\n        return `${dieSize}`;\n      default:\n        return `1d${dieSize}`;\n    }\n  }\n\n  /**\n   * Spoof roll, for maximized, auto and manual health.\n   *\n   * @internal\n   * @param {Roll} roll\n   * @param {number} value\n   * @returns {Roll}\n   */\n  _spoofHealthRoll(roll, value) {\n    const data = roll.toJSON();\n    data.total = value;\n    data.terms[0].results[0].result = value;\n    return Roll.defaultImplementation.fromData(data);\n  }\n\n  /**\n   * Generate roll instance for the health gain.\n   *\n   * @internal\n   * @param {string} type\n   * @param {string} formula\n   * @returns {Promise<pf1.dice.RollPF>}\n   */\n  async _getHealthRoll(type, formula) {\n    const roll = await Roll.defaultImplementation.safeRoll(formula);\n    switch (type) {\n      case \"auto\":\n      case \"max\":\n        return this._spoofHealthRoll(roll, this.config.health.delta);\n      case \"manual\":\n        return this._spoofHealthRoll(roll, this.config.health.manual);\n      default:\n        return roll;\n    }\n  }\n\n  /**\n   * Commit level-up\n   *\n   * @internal\n   * @param {Event} event\n   */\n  async _onCommit(event) {\n    this._disableSheet();\n\n    const cfg = this.config;\n    const itemData = this.item.toObject().system;\n    const updateData = {};\n\n    const newLevel = itemData.level + 1;\n    const cardData = {\n      isMythic: this.config.isMythic,\n      level: {\n        previous: itemData.level,\n        new: newLevel,\n      },\n      newFeatures: this.config.associations,\n      hp: {},\n    };\n\n    const formula = this._getHealthFormula(cfg.health.type);\n    const roll = await this._getHealthRoll(cfg.health.type, formula);\n\n    const labels = {\n      manual: \"PF1.LevelUp.Chat.Health.Manual\",\n      roll: \"PF1.LevelUp.Chat.Health.Roll\",\n      max: \"PF1.LevelUp.Chat.Health.Auto\",\n      auto: \"PF1.LevelUp.Chat.Health.Auto\",\n      static: \"PF1.LevelUp.Chat.Health.Static\",\n    };\n\n    cardData.hp = {\n      label: labels[cfg.health.type],\n      roll,\n      add: roll.toAnchor({ classes: [\"inline-dsn-hidden\"] }).outerHTML,\n    };\n\n    const hpValue = roll.total || 0;\n    updateData.hp = (itemData.hp || 0) + hpValue;\n\n    // Apply FCB\n    if (cfg.fcb.choice in itemData.fc) {\n      const key = cfg.fcb.choice;\n      const value = itemData.fc?.[key]?.value ?? 0;\n      foundry.utils.setProperty(updateData, `fc.${key}.value`, value + 1);\n\n      const fcKey = { hp: \"HP\", skill: \"Skill\", alt: \"Alt\" }[key];\n      cardData.fc = { type: key, label: `PF1.FavouredClassBonus.${fcKey}` };\n    }\n\n    // Gather information\n    const oldFeatCount = this.actor.getFeatCount();\n\n    const itemUpdates = [],\n      newItems = [];\n\n    // Apply ability score changes\n    const ablUpdate = this._updateAbilityScore();\n    if (ablUpdate) {\n      if (ablUpdate.update) itemUpdates.push(ablUpdate.itemData);\n      else newItems.push(ablUpdate.itemData);\n\n      cardData.ability = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n        if (added == 0) return rv;\n        rv[key] = added;\n        return rv;\n      }, {});\n    }\n\n    updateData.level = newLevel;\n    let cls = this.item;\n    // Update existing class item\n    if (cls.actor && cls.id) {\n      itemUpdates.unshift({ system: updateData, _id: cls.id });\n    }\n    // Create new class item\n    else {\n      cls.updateSource({ system: updateData });\n      newItems.unshift(cls.toObject());\n    }\n\n    // Add items\n    if (newItems.length) {\n      await this.actor.createEmbeddedDocuments(\"Item\", newItems, { render: itemUpdates.length == 0 });\n    }\n\n    if (itemUpdates.length) {\n      const newItems = await this.actor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n      cls = newItems.find((i) => i.type === \"class\");\n      if (cls) this.item = cls;\n    }\n\n    // Prepare remaining chat card info\n\n    // Add extra info (new feats, skill ranks, etc.)\n    const ex = {};\n    cardData.extra = ex;\n\n    // Show new feat count\n    const featCount = this.actor.getFeatCount();\n    featCount.new = Math.max(0, featCount.max - oldFeatCount.max);\n    ex.feats = featCount;\n    ex.enabled = featCount.new > 0;\n\n    // Create chat message\n    await this.createChatMessage(cardData);\n\n    // Resolve promise and close interface\n    this.resolve?.(cls);\n    this.close();\n  }\n\n  async _onSkip(event) {\n    event.preventDefault();\n\n    this._disableSheet();\n\n    const updateData = { system: { level: this.config.level.new } };\n\n    let cls = this.item;\n\n    // Old class\n    if (cls.id && cls.actor === this.actor) {\n      await cls.update(updateData);\n    }\n    // New class item\n    else {\n      cls.updateSource(updateData);\n      cls = await Item.implementation.create(cls.toObject(), { parent: this.actor });\n    }\n\n    // Open class sheet for manual adjustment\n    cls.sheet.render(true, { focus: true });\n\n    this.resolve?.(null);\n    this.close();\n  }\n\n  // Disable all buttons and inputs and set progress indicator\n  _disableSheet() {\n    const html = this.element[0];\n    const form = html.querySelector(\"form\");\n    form.style.cursor = \"progress\";\n    form.querySelectorAll(\"button,input,select\").forEach((button) => {\n      button.disabled = true;\n      button.style.cursor = \"progress\";\n    });\n  }\n\n  _updateAbilityScore() {\n    // No ability score upgrades this level\n    if (!this.config.abilityScore.upgrades) return;\n\n    const choices = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n      if (added == 0) return rv;\n      rv[key] = added;\n      return rv;\n    }, {});\n\n    if (Object.keys(choices).length === 0) return;\n\n    const result = { choices };\n\n    const item = this.actor.itemTypes.feat.find((o) => o.getFlag(\"pf1\", \"levelUp\") === true);\n\n    // Add level up ability score feature if it doesn't exist yet\n    if (!item) {\n      let itemData = pf1.config.levelAbilityScoreFeature;\n      itemData = foundry.utils.mergeObject(\n        itemData,\n        {\n          system: {\n            changes: Object.entries(choices).reduce((cur, [target, formula]) => {\n              const change = new pf1.components.ItemChange({\n                target,\n                formula: `${formula}`,\n                type: \"untypedPerm\",\n              }).toObject();\n\n              cur.push(change);\n              return cur;\n            }, []),\n          },\n          flags: {\n            pf1: {\n              levelUp: true,\n            },\n          },\n        },\n        { inplace: false }\n      );\n\n      return { itemData, update: false };\n    }\n    // If a level up ability score feature already exists, update it\n    else {\n      const changes = item.toObject().system.changes ?? [];\n      for (const [target, formula] of Object.entries(choices)) {\n        const change = changes.find((o) => o.target === target);\n\n        // Update previous change\n        if (change) {\n          const prevValue = parseInt(change.formula);\n          if (!Number.isNaN(prevValue)) {\n            const newValue = prevValue + formula;\n            change.formula = `${newValue}`;\n            continue;\n          }\n        }\n\n        // Add new change\n        changes.push(\n          new pf1.components.ItemChange({\n            target,\n            formula: `${formula}`,\n            type: \"untypedPerm\",\n          }).toObject()\n        );\n      }\n\n      return { itemData: { \"system.changes\": changes, _id: item.id }, update: true };\n    }\n  }\n\n  async createChatMessage(cardData) {\n    const templateData = {\n      ...cardData,\n      config: pf1.config,\n      item: this.item,\n      actor: this.actor,\n    };\n\n    const rolls = cardData.hp?.roll ? [cardData.hp.roll] : [];\n\n    const messageData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/level-up.hbs\", templateData),\n      style: CONST.CHAT_MESSAGE_STYLES.OOC,\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this.actor, token: this.token }),\n      rolls,\n      system: {\n        subject: { class: \"levelUp\" },\n      },\n    };\n\n    let rollMode = this.config.visibility || game.settings.get(\"core\", \"rollMode\");\n    // Prevent self message from non-GMs.\n    if (!game.user.isGM && rollMode === CONST.DICE_ROLL_MODES.SELF) rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    ChatMessage.implementation.applyRollMode(messageData, rollMode); // rollMode here sometimes has no effect?\n    return ChatMessage.create(messageData, { rollMode }); // rollMode here has no effect?\n  }\n}\n","export class CurrencyTransfer extends FormApplication {\n  constructor(\n    source = { actor: null, container: null, amount: {}, alt: false },\n    dest = { actor: null, container: null, amount: {}, alt: false },\n    options = {}\n  ) {\n    super(options);\n\n    if (source.actor) {\n      if (typeof source.actor === \"string\") source.actor = game.actors.get(source.actor);\n      if (source.actor.type == \"npc\") source.alt = false;\n    }\n    if (source.container) {\n      source.alt = false;\n      if (typeof source.container === \"string\")\n        source.container = source.actor ? source.actor.items.get(source.container) : game.items.get(source.container);\n    }\n    if (dest.actor) {\n      if (typeof dest.actor === \"string\") dest.actor = game.actors.get(dest.actor);\n      if (dest.actor.type == \"npc\") dest.alt = false;\n      else if (dest.actor === source.actor && !source.container && !dest.container) dest.alt = !source.alt;\n    }\n    if (dest.container) {\n      if (typeof dest.container === \"string\")\n        dest.container = dest.actor ? dest.actor.items.get(dest.container) : game.items.get(dest.container);\n    }\n\n    // Currency checks\n    if (source.container) {\n      source.amount = foundry.utils.mergeObject(source.container.system.currency, source.amount ?? {});\n    } else if (source.actor) {\n      source.amount = foundry.utils.mergeObject(\n        source.alt ? source.actor.system.altCurrency : source.actor.system.currency,\n        source.amount ?? {}\n      );\n    } else if (game.user.isGM) {\n      source.amount = foundry.utils.mergeObject({ pp: \"∞\", gp: \"∞\", sp: \"∞\", cp: \"∞\" }, source.amount ?? {});\n    } else {\n      ui.notification.warning(\"Cannot use Infinite currency transfer as non-gm.\");\n      return undefined;\n    }\n\n    if (!dest.actor && !dest.container) return undefined;\n\n    this.source = source;\n    this.dest = dest;\n  }\n\n  get title() {\n    let title;\n    if (!this.source.actor) {\n      if (this.source.container) title = this.source.container.name + \" \";\n      else title = \"∞ \";\n    } else {\n      title = this.source.actor.name + \" \";\n      if (this.source.container) title += `(${this.source.container.name}) `;\n    }\n    title += \"➤ \";\n    if (this.source.actor == this.dest.actor && (this.source.alt || this.dest.alt))\n      title += this.dest.alt ? game.i18n.localize(\"PF1.Currency.Weightless\") : game.i18n.localize(\"PF1.Currency.Label\");\n    else {\n      if (!this.dest.actor) title += this.dest.container.name;\n      else {\n        title += this.dest.actor.name;\n        if (this.dest.container) title += ` (${this.dest.container.name})`;\n      }\n    }\n    return title;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"currency-transfer\"],\n      template: \"systems/pf1/templates/apps/currency-transfer.hbs\",\n      width: 380,\n      height: 235,\n    });\n  }\n\n  /**\n   * Order of coin types, descending in value\n   *\n   * @type {CoinType[]}\n   */\n  static get order() {\n    return [\"pp\", \"gp\", \"sp\", \"cp\"]; // Object conversion ordering cannot be trusted in js\n  }\n\n  activateListeners(html) {\n    html.find(\"button.cur-range\").click(this._curRange.bind(this));\n\n    html.find(\"input\").on(\"input\", this._calcTotal.bind(this));\n    $(html.find(\"input\")[0]).trigger(\"input\");\n  }\n\n  _updateObject(event, formData) {\n    this.dest.amount = {\n      pp: formData.pp ?? 0,\n      gp: formData.gp ?? 0,\n      sp: formData.sp ?? 0,\n      cp: formData.cp ?? 0,\n    };\n    this.constructor.transfer(\n      this.source.container ? this.source.container : this.source.actor,\n      this.dest.container ? this.dest.container : this.dest.actor,\n      this.dest.amount,\n      this.source.alt,\n      this.dest.alt,\n      2\n    );\n  }\n\n  getData(_options = {}) {\n    return {\n      source: this.source,\n      dest: this.dest,\n      options: this.options,\n      title: this.title,\n      total:\n        this.source.amount.gp === \"∞\"\n          ? \"∞\"\n          : this.constructor.order.reduce((acc, c, idx) => acc + this.source.amount[c] * 10 ** (1 - idx), 0),\n    };\n  }\n\n  _curRange(ev) {\n    ev.preventDefault();\n    const button = ev.target.closest(\"button\");\n    const formField = button.closest(\".form-fields\");\n    const min = button.classList.contains(\"down\");\n    const input = formField.querySelector(\"input\");\n\n    if (min) input.value = \"\";\n    else input.value = formField.querySelector(\"span\").textContent;\n    $(input).trigger(\"input\");\n  }\n\n  _calcTotal(ev) {\n    const form = ev.target.closest(\".currency-transfer\");\n    const amounts = Object.fromEntries(\n      [...form.querySelectorAll(\"input\")].map((o) => [o.name, parseInt(o.value || 0)])\n    );\n    const value = this.constructor.order.reduce((acc, c, idx) => acc + amounts[c] * 10 ** (1 - idx), 0);\n\n    form.querySelector(\".currency-total .form-fields label\").textContent = Math.round(value * 100) / 100 + \" gp\";\n  }\n\n  static _failed(i18nKey) {\n    return void ui.notifications.error(\n      game.i18n.localize(\"PF1.Application.CurrencyTransfer.Failed\") + game.i18n.localize(i18nKey)\n    );\n  }\n\n  static async _directoryDrop(docDestId, event) {\n    event.preventDefault();\n\n    // try to extract the data\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"Currency\") return;\n\n    const elem = event.currentTarget;\n    const tab = elem.closest(\"[data-tab]\").dataset.tab;\n\n    let destDoc;\n    if (tab === \"items\") destDoc = game.items.get(docDestId);\n    else if (tab === \"actors\") destDoc = game.actors.get(docDestId);\n    if (!destDoc) throw new Error(\"Could not find target actor or item!\");\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    if (data.currency && sourceActor) {\n      return new CurrencyTransfer(\n        { actor: sourceActor, container: data.containerId, alt: data.alt },\n        {\n          actor: destDoc?.actor ?? destDoc,\n          container: destDoc.system.type === \"container\" ? destDoc.id : null,\n          amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n        }\n      ).render(true);\n    }\n  }\n\n  /**\n   * Transfer an amount of currency to a valid document\n   *\n   * @param {Document} sourceDoc ActorPF or ItemPF with currency\n   * @param {Document} destDoc ActorPF or ItemPF with currency\n   * @param {object|number} amount currency object containing transferred amount. Undefined keys will be assumed to be zero. Providing just a number will assume just gold\n   * @param {boolean} sourceAlt Use alt currency on source\n   * @param {boolean} destAlt Use alt currency on destination\n   * @param {number} [allowConversion=false] Attempts to make change with sourceDoc's currency limit\n   * @returns {Promise<boolean|object>} false if failed, object containing amount transferred on success\n   */\n  static async transfer(sourceDoc, destDoc, amount, sourceAlt = false, destAlt = false, allowConversion = false) {\n    if ((!sourceDoc && !game.user.isGM) || !destDoc || !amount) return false;\n\n    if (typeof amount !== \"object\") amount = { gp: parseInt(amount) };\n\n    this.order.forEach((c) => (amount[c] = amount[c] ?? 0));\n    if (!Object.values(amount).find((a) => a > 0))\n      return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    let sourceCurrency = foundry.utils.deepClone(\n      sourceAlt ? sourceDoc?.system.altCurrency : sourceDoc?.system.currency\n    );\n    const destCurrency = foundry.utils.deepClone(destAlt ? destDoc.system.altCurrency : destDoc.system.currency);\n    if ((!sourceCurrency && !game.user.isGM) || !destCurrency) return false;\n    const originalSource = Object.assign(Object.fromEntries(this.order.map((o) => [o, Infinity])), sourceCurrency);\n\n    const totalAmount = this.order.reduce((acc, c, idx) => acc + amount[c] * 10 ** (1 - idx), 0);\n    const totalSource = this.order.reduce((acc, c, idx) => acc + sourceCurrency[c] * 10 ** (1 - idx), 0);\n\n    if (totalAmount > totalSource) return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    if (sourceCurrency) {\n      this.order.some((a) => {\n        const newSource = sourceCurrency[a] - amount[a];\n\n        if (newSource < 0 && allowConversion) {\n          amount = this.convert(originalSource, totalAmount, allowConversion);\n          sourceCurrency = Object.fromEntries(this.order.map((o) => [o, originalSource[o] - amount[o]]));\n          return true;\n        } else sourceCurrency[a] = newSource;\n      });\n    }\n\n    if (!amount || Object.values(sourceCurrency).find((c) => c < 0)) return false;\n\n    if (!sourceDoc.isOwner || !destDoc.isOwner) {\n      if (!game.users.find((o) => o.active && o.isGM))\n        return this._failed(\"PF1.Application.CurrencyTransfer.GMRequired\"), false;\n\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"currencyTransfer\",\n        data: {\n          sourceActor: sourceDoc.actor?.uuid ?? sourceDoc.uuid,\n          destActor: destDoc.actor?.uuid ?? destDoc.uuid,\n          sourceContainer: sourceDoc.type === \"container\" ? sourceDoc.id : \"\",\n          destContainer: destDoc.type === \"container\" ? destDoc.id : \"\",\n          sourceAlt,\n          destAlt,\n          amount,\n        },\n      });\n      return amount;\n    }\n\n    this.order.forEach((c) => (destCurrency[c] += amount[c]));\n    if (sourceDoc === destDoc)\n      return sourceDoc.update({\n        \"system.altCurrency\": sourceAlt ? sourceCurrency : destCurrency,\n        \"system.currency\": destAlt ? sourceCurrency : destCurrency,\n      });\n    if (sourceAlt) sourceDoc.update({ \"system.altCurrency\": sourceCurrency });\n    else sourceDoc.update({ \"system.currency\": sourceCurrency });\n    if (destAlt) destDoc.update({ \"system.altCurrency\": destCurrency });\n    else destDoc.update({ \"system.currency\": destCurrency });\n    return amount;\n  }\n\n  /**\n   * Convert totalAmount to a currency object containing\n   *\n   * @param {object} limit currency object containing max number of coins. Falsey values will assume infinity\n   * @param {number|object} totalAmount currency as gold pieces. If provided as a currency object, will convert to gold\n   * @returns {boolean|object} false if failed, currency object containing new amounts on conversion success\n   */\n  static convert(limit, totalAmount) {\n    if (!limit) limit = Object.fromEntries(this.order.map((o) => [o, Infinity]));\n    else limit = Object.assign({}, limit);\n    if (typeof totalAmount !== \"number\")\n      totalAmount = this.order.reduce((acc, cur, idx) => acc + totalAmount?.[cur] * 10 ** (1 - idx));\n    if (!totalAmount) return false;\n    const amount = {};\n    totalAmount =\n      this.order.reduce((acc, cur, idx) => {\n        const minRequired = Math.min(limit[cur], Math.floor((acc % 10000) / 10 ** (3 - idx))), //Start from left to allow clumping\n          inCopper = minRequired * 10 ** (3 - idx);\n        amount[cur] = minRequired;\n        limit[cur] -= minRequired;\n        return acc - inCopper;\n      }, totalAmount * 100) / 100; //Operate in copper pieces to avoid floating point errors\n    if (totalAmount < 0) return false;\n    return amount;\n  }\n}\n","/**\n * @typedef {typeof templatePaths[number]} CachedTemplatePath\n * A path to a template that has been cached as part of the partial preloading process.\n */\n\n/**\n * A list of template paths to pre-load\n *\n * @private\n */\nconst templatePaths = /** @type {const} */ ([\n  // Actor Sheet Partials\n  \"systems/pf1/templates/actors/parts/actor-summary.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-level.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-traits.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-inventory.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-nav-filters.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-features.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-combat.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-defenses_tables.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-buffs.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-attributes.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings-ability-scores.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-summary.hbs\",\n\n  \"systems/pf1/templates/internal/item-search.hbs\",\n\n  \"systems/pf1/templates/internal/table_magic-items.hbs\",\n\n  // Item Sheet Partials\n  \"systems/pf1/templates/items/parts/item-actions.hbs\",\n  \"systems/pf1/templates/items/parts/item-advanced.hbs\",\n  \"systems/pf1/templates/items/parts/item-alignments.hbs\",\n  \"systems/pf1/templates/items/parts/item-ammo.hbs\",\n  \"systems/pf1/templates/items/parts/item-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-base-types.hbs\",\n  \"systems/pf1/templates/items/parts/item-changes.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-link.hbs\",\n  \"systems/pf1/templates/items/parts/item-contents.hbs\",\n  \"systems/pf1/templates/items/parts/item-description.hbs\",\n  \"systems/pf1/templates/items/parts/item-instructions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-inputs.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-creatureTypes.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-links.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials-addon.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials.hbs\",\n  \"systems/pf1/templates/items/parts/item-name.hbs\",\n  \"systems/pf1/templates/items/parts/item-notes.hbs\",\n  \"systems/pf1/templates/items/parts/item-proficiencies.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-skills.hbs\",\n  \"systems/pf1/templates/items/parts/item-creature-type.hbs\",\n  \"systems/pf1/templates/items/parts/item-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-size.hbs\",\n  \"systems/pf1/templates/items/parts/item-tag.hbs\",\n  \"systems/pf1/templates/items/parts/item-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-weapon-groups.hbs\",\n  \"systems/pf1/templates/items/parts/spell-descriptors.hbs\",\n  \"systems/pf1/templates/items/parts/spell-subschool.hbs\",\n  \"systems/pf1/templates/items/parts/item-action-summary.hbs\",\n\n  \"systems/pf1/templates/internal/content-source-view.hbs\",\n\n  // Apps\n  \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n  \"systems/pf1/templates/apps/vision-sharing.hbs\",\n  \"systems/pf1/templates/apps/help-browser.hbs\",\n  \"systems/pf1/templates/apps/action-select.hbs\",\n\n  // Item Action Partials\n  \"systems/pf1/templates/apps/item-action/action.hbs\",\n  \"systems/pf1/templates/apps/item-action/activation.hbs\",\n  \"systems/pf1/templates/apps/item-action/template.hbs\",\n  \"systems/pf1/templates/apps/item-action/conditionals.hbs\",\n\n  // Compendium browser partials\n  \"systems/pf1/templates/apps/compendium-browser/entries.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/text-filter.hbs\",\n\n  // Chat\n  \"systems/pf1/templates/chat/roll-ext.hbs\",\n  \"systems/pf1/templates/chat/defenses.hbs\",\n  \"systems/pf1/templates/chat/defenses-vehicle.hbs\",\n  \"systems/pf1/templates/chat/parts/gm-description.hbs\",\n\n  // Chat card partials\n  \"systems/pf1/templates/chat/parts/attack-roll-header.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-footer.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-targets.hbs\",\n\n  \"systems/pf1/templates/chat/parts/item-notes.hbs\",\n\n  // Item description headers\n  \"systems/pf1/templates/items/headers/spell-header.hbs\",\n\n  // Internal Rendering Partials\n  \"systems/pf1/templates/internal/token-config_vision.hbs\",\n  \"systems/pf1/templates/internal/damage-type-visual.hbs\",\n\n  \"systems/pf1/templates/hud/quick-actions.hbs\",\n\n  // Level Up sections\n  \"systems/pf1/templates/apps/level-up/health.hbs\",\n  \"systems/pf1/templates/apps/level-up/ability-score.hbs\",\n  \"systems/pf1/templates/apps/level-up/fcb.hbs\",\n  \"systems/pf1/templates/apps/level-up/summary.hbs\",\n\n  // Dynamic tooltips\n  \"systems/pf1/templates/extended-tooltip.hbs\",\n]);\n\n/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n *\n * @internal\n * @private\n * @returns {Promise<void>} - A Promise resolving once the templates are loaded.\n */\nexport const preload = async () => void loadTemplates(templatePaths);\n\n/**\n * Synchronously render a cached Handlebars template using provided data.\n *\n * @internal\n * @private\n * @see {renderTemplate}\n * @param {CachedTemplatePath} path - The template identifier\n * @param {object} [data={}] - The data provided to the template\n * @returns {string} The rendered HTML\n * @throws {Error} If the requested template could not be found in the cache\n */\nexport const renderCachedTemplate = (path, data = {}) => {\n  /** @type {Handlebars.TemplateDelegate|undefined} */\n  const template = Handlebars.partials[path];\n  if (!template) throw new Error(`Template ${path} not found in cache`);\n\n  return template(data, {\n    allowProtoMethodsByDefault: true,\n    allowProtoPropertiesByDefault: true,\n    preventIndent: true,\n  });\n};\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { DamageResistanceSelector } from \"@app/damage-resistance-selector.mjs\";\nimport { ActorRestDialog } from \"./actor-rest.mjs\";\nimport { PointBuyCalculator } from \"@app/point-buy-calculator.mjs\";\nimport { Widget_ItemPicker } from \"@app/item-picker.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { LevelUpForm } from \"@app/level-up.mjs\";\nimport { CurrencyTransfer } from \"@app/currency-transfer.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/** @import {AbilityScoreData} from \"@documents/actor/actor.d.ts\" */\n\n/**\n * Extend the basic ActorSheet class to do all the PF things!\n * This sheet is an Abstract layer which is not used.\n */\nexport class ActorSheetPF extends ActorSheet {\n  /**\n   * Track the set of item filters which are applied\n   *\n   * @protected\n   * @internal\n   * @type {Record<string, Record<string, Set<string>>>}\n   */\n  _filters = {\n    sections: {},\n    search: {},\n  };\n\n  /** Item search */\n  searchCompositioning = false; // for IME\n  searchRefresh = true; // Lock out same term search unless sheet also refreshes\n  searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n  searchDelayEvent = null; // setTimeout id\n  effectiveSearch = {}; // prevent searching the same thing\n\n  /**\n   * Track item updates from the actor sheet.\n   *\n   * @internal\n   * @private\n   * @type {object[]}\n   */\n  _itemUpdates = [];\n\n  /**\n   * Track hidden elements of the sheet.\n   *\n   * @internal\n   * @private\n   * @type {Record<string, boolean>}\n   */\n  _hiddenElems = {};\n\n  /**\n   * Whether the skills are currently locked.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  _skillsLocked = true;\n\n  /**\n   * IDs of expanded items.\n   *\n   * @internal\n   * @private\n   * @type {Set<string>}\n   */\n  _expandedItems = new Set();\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"system.details.biography.value\", \"system.details.notes.value\"];\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor\"],\n      scrollY: [\n        \".combat-attacks\",\n        \".item-groups-list\",\n        \".skills-list\",\n        \".traits\",\n        \".actor-notes\",\n        \".editor-content[data-edit='system.details.biography.value']\",\n      ],\n      dragDrop: [\n        { dragSelector: \".item[data-item-id]\" },\n        { dragSelector: \".currency .denomination\" },\n        { dragSelector: \"li.skill[data-skill]\" },\n        { dragSelector: \".saving-throw[data-savingthrow]\" },\n        { dragSelector: \".attribute[data-attribute]\" },\n        { dragSelector: \".attribute[data-attack]\" },\n        { dragSelector: \"li.generic-defenses[data-drag]\" },\n        { dragSelector: \".ability-scores .ability[data-ability]\" },\n        { dragSelector: \".spellcasting-concentration[data-drag]\" },\n        { dragSelector: \".spellcasting-cl\" },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"summary\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='skillset']\",\n          contentSelector: \"section.skillset-body\",\n          initial: \"adventure\",\n          group: \"skills\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='spellbooks']\",\n          contentSelector: \"section.spellbooks-body\",\n          initial: \"primary\",\n          group: \"spellbooks\",\n        },\n      ],\n    };\n  }\n\n  get currentPrimaryTab() {\n    return this._tabs.find((t) => t.group === \"primary\")?.active || null;\n  }\n\n  get currentSpellbookKey() {\n    return this._tabs.find((t) => t.group === \"spellbooks\")?.active || \"primary\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.actor.isOwner;\n\n    const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n\n    const context = {\n      actor: this.actor,\n      document: this.actor,\n      effects: this.actor.effects,\n      options: this.options,\n      owner: isOwner,\n      itemTypes: this.actor.itemTypes,\n      limited: this.actor.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      isCharacter: this.actor.type === \"character\",\n      hasHD: true,\n      config: pf1.config,\n      isGM: game.user.isGM,\n      race: this.actor.race != null ? this.actor.race.toObject() : null,\n      usesAnySpellbook: Object.values(this.actor.system.attributes.spells.spellbooks).some((book) => book.inUse),\n      sourceData: {},\n      skillsLocked: this._skillsLocked,\n      units: {\n        weight:\n          pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n        distance: {\n          tactical: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n          overland: isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi,\n        },\n      },\n      unchainedActions: game.settings.get(\"pf1\", \"unchainedActionEconomy\"),\n      choices: {},\n    };\n\n    if (context.usesAnySpellbook) {\n      context.choices.casterProgression = Object.fromEntries(\n        Object.entries(pf1.config.caster.progression).map(([key, data]) => [key, data.label])\n      );\n      context.choices.casterPreparation = Object.fromEntries(\n        Object.entries(pf1.config.caster.type).map(([key, data]) => [key, data.label])\n      );\n    }\n\n    Object.values(context.itemTypes).forEach((items) => items.sort((a, b) => (a.sort ?? 0) - (b.sort ?? 0)));\n\n    const rollData = this.actor.getRollData();\n    context.rollData = rollData;\n    context.system = foundry.utils.deepClone(this.actor.system);\n    context.source = this.actor._source.system;\n\n    context.inCharacterGeneration = this.inCharacterGeneration;\n\n    context.hasProficiencies = context.isCharacter || game.settings.get(\"pf1\", \"npcProficiencies\");\n\n    // BAB iteratives\n    if (!context.unchainedActions) {\n      const bab = context.rollData.attributes?.bab?.total;\n      if (bab > 0) {\n        const numAttacks = 1 + RollPF.safeRollSync(pf1.config.iterativeExtraAttacks, { bab }).total || 0;\n        const iters = Array.fromRange(numAttacks).map(\n          (attackCount) => bab + RollPF.safeRollSync(pf1.config.iterativeAttackModifier, { attackCount }).total\n        );\n        context.iteratives = `+${iters.join(\" / +\")}`;\n      }\n    }\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.actor.system.currency).some((o) => o > 0);\n    context.hasAltCurrency = Object.values(this.actor.system.altCurrency).some((o) => o > 0);\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n    const bio = context.system.details?.biography?.value;\n    const pBio = bio ? pf1.utils.enrichHTMLUnrolled(bio, enrichHTMLOptions) : Promise.resolve();\n    pBio.then((html) => (context.biographyHTML = html));\n    const notes = context.system.details?.notes?.value;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pBio, pNotes]);\n\n    // The Actor and its Items\n    context.token = this.token;\n\n    context.items = this.actor.items.map((item) => this._prepareItem(item));\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    context.labels = this.actor.getLabels();\n    context.filters = this._filters;\n\n    context.labels.currency = `PF1.Currency.Inline.${pf1.config.currency.standard}`;\n\n    // Generic melee and ranged attack bonuses, only present for sheet.\n    {\n      const attributes = context.system.attributes,\n        /** @type {Record<string, AbilityScoreData>} */\n        abilities = context.system.abilities,\n        sizeModifier = Object.values(pf1.config.sizeMods)[context.system.traits.size.value],\n        baseBonus = attributes.attack.shared + attributes.attack.general + sizeModifier,\n        meleeAbility = abilities[attributes.attack.meleeAbility]?.mod ?? 0,\n        rangedAbility = abilities[attributes.attack.rangedAbility]?.mod ?? 0;\n\n      context.genericAttacks = {\n        melee: {\n          ability: attributes.attack.meleeAbility,\n          abilityMod: meleeAbility,\n          modifier: baseBonus + attributes.attack.melee + meleeAbility,\n        },\n        ranged: {\n          ability: attributes.attack.rangedAbility,\n          abilityMod: rangedAbility,\n          modifier: baseBonus + attributes.attack.ranged + rangedAbility,\n        },\n      };\n    }\n\n    // Add inventory value\n    {\n      const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true });\n      const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n      context.labels.totalValue = game.i18n.format(\"PF1.TotalItemValue\", totalValue);\n    }\n\n    // Ability Scores\n    for (const [a, abl] of Object.entries(context.system.abilities)) {\n      abl.label = pf1.config.abilities[a];\n      abl.enabled = abl.value !== null;\n      abl.totalLabel = abl.enabled ? abl.total : \"—\";\n    }\n\n    // Armor Class\n    for (const [a, ac] of Object.entries(context.system.attributes.ac)) {\n      ac.label = pf1.config.ac[a];\n    }\n\n    // Saving Throws\n    for (const [a, savingThrow] of Object.entries(context.system.attributes.savingThrows)) {\n      savingThrow.label = pf1.config.savingThrows[a];\n    }\n\n    // Update skill labels\n    for (const [skillId, skill] of Object.entries(context.system.skills ?? {})) {\n      skill.key = skillId;\n      skill.path = skillId;\n      skill.skillId = skillId;\n      skill.label = pf1.config.skills[skillId] || skill.name;\n      skill.arbitrary = pf1.config.arbitrarySkills.includes(skillId);\n      skill.compendiumEntry = pf1.config.skillCompendiumEntries[skillId] || skill.journal || null;\n      skill.untrained = skill.rt === true && !(skill.rank > 0);\n\n      if (skill.subSkills != null) {\n        for (const [subSkillId, subSkill] of Object.entries(skill.subSkills)) {\n          subSkill.key = `${skillId}.${subSkillId}`;\n          subSkill.path = `${skillId}.subSkills.${subSkillId}`;\n          subSkill.skillId = skillId;\n          subSkill.subSkillId = subSkillId;\n          subSkill.label ||= subSkill.name;\n          subSkill.compendiumEntry = subSkill.journal || null;\n          subSkill.untrained = subSkill.rt === true && !(subSkill.rank > 0);\n          subSkill.custom = true; // All subskills are custom\n        }\n      }\n    }\n\n    // Feat count\n    {\n      // Feat count\n      const feats = this.actor.getFeatCount();\n      // Additional values\n      feats.bonus = feats.formula + feats.changes;\n      feats.issues = 0;\n      if (feats.missing > 0 || feats.excess) feats.issues += 1;\n      if (feats.disabled > 0) feats.issues += 1;\n      context.featCount = feats;\n    }\n\n    // Update traits\n    this._prepareTraits(context.system.traits);\n    context.labels.senses = this._prepareSenseLabels();\n    context.traits = {\n      dr: this.actor.parseResistances(\"dr\"),\n      eres: this.actor.parseResistances(\"eres\"),\n    };\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Prepare skillsets\n    this._prepareSkillsets(context);\n\n    this._prepareSkills(context);\n\n    // Fetch the game settings relevant to sheet rendering.\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    context.healthConfig = hpConfig.getActorConfig(this.actor);\n    context.useWoundsAndVigor = context.healthConfig.rules.useWoundsAndVigor;\n\n    // Determine hidden elements\n    this._prepareHiddenElements();\n    context.hiddenElems = this._hiddenElems;\n\n    // Create a table of magic items, only for GM\n    if (game.user.isGM) {\n      context.magicItems = {\n        identified: [],\n        unidentified: [],\n      };\n      this.actor.items\n        .filter((o) => {\n          if (!o.isPhysical) return false;\n          if (!o.system.carried) return false;\n          if (o.system.quantity === 0) return false;\n\n          const school = o.system.aura?.school;\n          const cl = o.system.cl;\n          return school?.length > 0 && cl > 0;\n        })\n        .forEach((item) => {\n          const itemData = {\n            name: item.name,\n            unidentifiedName: item.system.unidentified?.name,\n            img: item.img,\n            id: item.id,\n            cl: item.system.cl,\n            aura: {\n              strength: pf1.config.auraStrengths[item.auraStrength],\n              school: pf1.config.spellSchools[item.system.aura?.school] || item.system.aura?.school,\n            },\n            identifyDC: 15 + item.system.cl,\n            identified: item.system.identified === true,\n            quantity: item.system.quantity || 0,\n          };\n\n          if (itemData.identified) context.magicItems.identified.push(itemData);\n          else context.magicItems.unidentified.push(itemData);\n        });\n    }\n\n    // Prepare (interactive) labels\n    if (this.actor.itemTypes.class.length === 0) {\n      const dataFilters = `classType=base${this.actor.type === \"npc\" ? \",npc,racial\" : \"\"}`;\n      context.labels.firstClass = game.i18n.format(\"PF1.Info_FirstClass\", {\n        browser: `<a data-action=\"browse\" data-category=\"classes\" data-filters=\"${dataFilters}\" data-tooltip=\"PF1.BrowseClasses\"><i class=\"fa-solid fa-folder-plus\"></i> ${game.i18n.localize(\n          \"PF1.Info_FirstClass_Compendium\"\n        )}</a>`,\n        create: `<i class=\"fa-solid fa-plus\"></i>`,\n      });\n    }\n\n    // Conditions\n    const conditions = this.actor.system.conditions;\n    // Get conditions that are inherited from items\n    const inheritedEffects = this.actor.appliedEffects.filter((ae) => ae.parent instanceof Item && ae.statuses.size);\n    const condImmunities = this.actor.getConditionImmunities();\n\n    const racial = {};\n    if (this.actor.statuses.has(\"incorporeal\")) {\n      if (this.actor.system.traits.creatureSubtypes.standard.has(\"incorporeal\"))\n        racial[\"incorporeal\"] = game.i18n.localize(\"PF1.Race\");\n    }\n\n    context.conditions = pf1.utils.naturalSort(\n      pf1.registry.conditions\n        .filter((cond) => cond.showInBuffsTab)\n        .map((cond) => ({\n          id: cond.id,\n          img: cond.texture,\n          immune: condImmunities.has(cond.id),\n          active: conditions[cond.id] ?? false,\n          items: new Set(inheritedEffects.filter((ae) => ae.statuses.has(cond.id)).map((ae) => ae.parent)),\n          get inherited() {\n            return this.items.size > 0;\n          },\n          racial: racial[cond.id],\n          label: cond.name,\n          compendium: cond.journal,\n        })),\n      \"label\"\n    );\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    // Return data to the sheet\n    return context;\n  }\n\n  /**\n   * Prepare item data for display.\n   *\n   * @protected\n   * @param {pf1.documents.item.ItemPF} item - Original document\n   * @returns {object} - Data fed to the sheet\n   */\n  _prepareItem(item) {\n    const type = item.type;\n    const subType = item.subType;\n\n    const result = foundry.utils.deepClone(item.system);\n    result.document = item;\n    result.type = type;\n    result.id = item.id;\n    result.img = item.img;\n    result.isActive = item.isActive;\n    result.isPhysical = item.isPhysical ?? false;\n    result.isPhysicalLike = item.isQuasiPhysical ?? false;\n    result.isSingleUse = item.isSingleUse;\n    result.isCharged = item.isCharged;\n    if (result.isCharged) {\n      result.hasResource = result.isCharged && !result.isSingleUse;\n      result.charges = item.charges;\n      result.maxCharges = item.maxCharges;\n      result.noMaxCharges = !Number.isFinite(result.maxCharges);\n      result.hasUses = result.maxCharges > 0;\n    }\n\n    const defaultAction = item.defaultAction;\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    result.labels = item.getLabels({ actionId: defaultAction?.id, rollData });\n    result.hasAction =\n      item.hasAction || item.getScriptCalls(\"use\").length > 0 || item.getScriptCalls(\"postUse\").length > 0;\n    if (defaultAction) {\n      result.hasAttack = defaultAction.hasAttack;\n      result.hasMultiAttack = defaultAction.hasMultiAttack;\n      result.hasDamage = defaultAction.hasDamage;\n      result.hasRange = defaultAction.hasRange;\n      result.hasEffect = defaultAction.hasEffect;\n      if (this._canShowRange(item)) {\n        result.range = foundry.utils.mergeObject(\n          defaultAction?.range ?? {},\n          {\n            min: defaultAction?.getRange({ type: \"min\", rollData }),\n            max: defaultAction?.getRange({ type: \"max\", rollData }),\n          },\n          { inplace: false }\n        );\n      }\n\n      if (result.hasAttack) {\n        const attacks = defaultAction.getAttacks({\n          full: true,\n          resolve: true,\n          conditionals: true,\n          bonuses: true,\n          rollData,\n        });\n        const attackBonuses = attacks.map((atk) => atk.bonus);\n        result.attackArray = attackBonuses;\n        const highest = Math.max(...attackBonuses); // Highest bonus, with assumption the first might not be that.\n        result.attackSummary = `${attackBonuses.length} (${highest < 0 ? highest : `+${highest}`}${\n          attacks.length > 1 ? \"/…\" : \"\"\n        })`;\n      }\n\n      result.usesAmmo = !!defaultAction.ammo?.type;\n      if (result.usesAmmo && defaultAction.ammo?.cost > 0) {\n        result.ammoRemaining = this.actor.items.get(defaultAction.item.system.ammo?.default)?.system.quantity ?? 0;\n      }\n    }\n\n    result.sort = item.sort;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n    result.name = item.name; // Copy name over from item to handle identified state correctly\n\n    result.isEmpty = false;\n    if (result.isPhysical) {\n      result.quantity ||= 0;\n      result.isStack = result.quantity > 1;\n      result.destroyed = result.hp?.value <= 0;\n      result.isEmpty = result.quantity == 0;\n      result.disabled ||= result.destroyed;\n    }\n\n    // Some non-physical items simulate broken state\n    result.isBroken = item.isBroken ?? false;\n\n    result.uncharged = false;\n    if (result.isActive && result.isCharged && !result.isSingleUse) {\n      // TODO: Do charge test in action selection instead of here\n      //const smallestUsage = Math.min(...item.actions.map((a) => a.getChargeCost()));\n      //const itemCharges = result.uses?.value != null ? result.uses.value : 1;\n      //if (itemCharges < smallestUsage) result.empty = true;\n    }\n\n    result.disabled = result.destroyed || result.uncharged || (!result.isActive && !result.isEmpty);\n\n    if (result.isPhysical) {\n      // Do not count unequipped physical items as disabled\n      if (item.system.equipped === false) result.disabled = false;\n      // Do not count unimplanted implants as disabled\n      else if (item.system.implanted === false) result.disabled = false;\n    }\n\n    result.typeLabel = subType ? game.i18n.localize(`PF1.Subtypes.Item.${type}.${subType}.Single`) : undefined;\n\n    if (item.type === \"class\") {\n      if ([\"mythic\", \"racial\"].includes(item.subType)) {\n        result.xpUnbound = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Prepare item section\n   *\n   * @protected\n   * @param {object} section\n   */\n  _prepareSection(section) {\n    section.items ??= [];\n  }\n\n  /**\n   * @protected\n   * @param {object} item - Item render data\n   * @param {object} section - Item section\n   * @param {object} context - Render context\n   */\n  _prepareItemForSection(item, section, context) {\n    if (section.interface.value) {\n      item.price = {\n        value: item.document.getValue({ single: true, recursive: false, sellValue: 1 }),\n        stack: item.document.getValue({ single: false, recursive: true, sellValue: 1 }),\n      };\n    }\n  }\n\n  /**\n   * Determine if the item can have its range shown on this sheet.\n   *\n   * @protected\n   * @param {Item} item\n   * @returns {boolean}\n   */\n  _canShowRange(item) {\n    return item.type === \"attack\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Determine if this actor is in character generation state.\n   *\n   * @private\n   * @returns {boolean} True if character generation guides are desirable.\n   */\n  get inCharacterGeneration() {\n    return (\n      this.actor.system.attributes.hd.total <= 1 ||\n      Object.values(this.actor.system.abilities).every((abl) => abl.value === 10)\n    );\n  }\n\n  _prepareHiddenElements() {\n    // Hide spellbook info\n    const spellbooks = this.actor.system.attributes?.spells?.spellbooks ?? {};\n    for (const k of Object.keys(spellbooks)) {\n      const key = `spellbook-info_${k}`;\n      if (this._hiddenElems[key] == null) this._hiddenElems[key] = true;\n    }\n  }\n\n  _prepareTraits(traits) {\n    const damageTypes = pf1.registry.damageTypes.getLabels({ sort: false });\n    const map = {\n      // \"dr\": PF1.damageTypes,\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, choices] of Object.entries(map)) {\n      const trait = traits[key];\n      if (!trait) continue;\n      const values = trait.total;\n\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = {\n          // Label\n          label: choices[t] || t,\n          // Safe ID to use in CSS ID selector\n          cssId: pf1.utils.createTag(t, { allowUpperCase: true, camelCase: true }),\n        };\n        return obj;\n      }, {});\n\n      trait.cssClass = !foundry.utils.isEmpty(trait.selected) ? \"\" : \"inactive\";\n    }\n  }\n\n  _prepareSenseLabels() {\n    const result = {};\n\n    const senses = this.actor.system.traits.senses ?? {};\n\n    for (const [key, value] of Object.entries(senses)) {\n      switch (key) {\n        case \"ll\":\n          if (senses[key].enabled) {\n            result[key] = {\n              label: pf1.config.senses[key],\n              cssId: key,\n            };\n          }\n          break;\n\n        case \"si\":\n        case \"sid\":\n          if (senses[key]) {\n            result[key] = {\n              label: pf1.config.senses[key],\n              cssId: key,\n            };\n          }\n          break;\n\n        case \"custom\":\n          if (value.length) {\n            const values = value\n              .split(pf1.config.re.traitSeparator)\n              .map((c) => c.trim())\n              .filter((c) => c);\n            let idx = 0;\n            for (const value of values) {\n              result[`custom${idx++}`] = {\n                label: value,\n                cssId: pf1.utils.createTag(value, { allowUpperCase: true, camelCase: true }),\n                custom: true,\n                cssClass: \"custom\",\n              };\n            }\n          }\n          break;\n\n        default:\n          if (value.total > 0) {\n            const [distance, units] = pf1.utils.convertDistance(value.total);\n            const range = game.i18n.format(\"PF1.RangeFormat\", { distance, units: pf1.config.measureUnitsShort[units] });\n            result[key] = {\n              label: `${pf1.config.senses[key]} ${range}`, // TODO: i18n\n              cssId: key,\n            };\n          }\n          break;\n      }\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Insert a spell into the spellbook object when rendering the character sheet\n   *\n   * @internal\n   * @param {object} data - The Actor data being prepared\n   * @param {Array} spells - The spell data being prepared\n   * @param {string} bookKey - The key of the spellbook being prepared\n   * @returns {object} - Spellbook data\n   */\n  _prepareSpellbook(data, spells, bookKey) {\n    const book = this.actor.system.attributes?.spells?.spellbooks?.[bookKey];\n    if (!book) return;\n\n    const min = book.hasCantrips ? 0 : 1;\n    let max = 9;\n    if (book.autoSpellLevelCalculation) {\n      const cl = book.cl.autoSpellLevelTotal;\n\n      const castsPerDay =\n        pf1.config.casterProgression.castsPerDay[book.spellPreparationMode]?.[book.casterType]?.[cl - 1];\n      // Check against undefined protects against bad CL modifications.\n      max = castsPerDay !== undefined ? castsPerDay.length - 1 : 0;\n    } else {\n      if (book.casterType === \"low\") max = 4;\n      else if (book.casterType === \"med\") max = 6;\n    }\n\n    // Reduce spells to the nested spellbook structure\n    const spellbook = [];\n    for (let level = 0; level < 10; level++) {\n      const spellLevel = book.spells?.[`spell${level}`];\n      if (!spellLevel) {\n        console.error(`Bad data for spell level ${level} in spellbook \"${bookKey}\" for actor \"${this.actor.name}\"`);\n        continue;\n      }\n\n      const valid = !isNaN(spellLevel.max);\n\n      spellbook[level] = {\n        ...pf1.config.sheetSections.spells.spell,\n        id: `level-${level}`,\n        level,\n        valid,\n        usesSlots: true,\n        spontaneous: book.spontaneous,\n        prepared: book.prepared,\n        canPrepare: data.actor.type === \"character\",\n        label: pf1.config.spellLevels[level],\n        items: [],\n        uses: spellLevel.value || 0,\n        slots: spellLevel.slots,\n        hasIssues: valid && spellLevel.hasIssues,\n        lowAbilityScore: spellLevel.lowAbilityScore,\n        lowLevel: spellLevel.lowLevel,\n        known: spellLevel.known,\n        preparation: spellLevel.preparation,\n        invalidSlots: spellLevel.invalidSlots,\n        mismatchSlots: spellLevel.mismatchSlots,\n        invalidKnown: spellLevel.invalidKnown,\n        mismatchKnown: spellLevel.mismatchKnown,\n        domain: spellLevel.domain,\n        data: spellLevel,\n        isSchool: book.isSchool,\n      };\n    }\n\n    // Add arbitrary level for collecting invalid spells\n    const invalidLevelData = {\n      id: `level-invalid`,\n      level: 99,\n      label: game.i18n.localize(\"PF1.Unknown\"),\n      valid: false,\n      items: [],\n    };\n\n    // Sort spells into their respective levels\n    for (const spell of spells) {\n      const lvl = spell.level ?? min;\n      const levelData = spellbook[lvl] ?? invalidLevelData;\n\n      levelData.items.push(spell);\n    }\n\n    // Mark cantrips as invalid if it shouldn't exist\n    if (!book.hasCantrips) spellbook[0].valid = false;\n\n    // Append invalid level if it has anything\n    if (invalidLevelData.items.length) spellbook.push(invalidLevelData);\n\n    // Return only levels with something\n    return spellbook.filter((levelData) => {\n      if (!levelData) return false;\n      if (levelData.items.length > 0) return true;\n      const { level } = levelData;\n      return level <= max && level >= min;\n    });\n  }\n\n  /**\n   * Prepare adventure/background skill distinction if needed.\n   *\n   * @internal\n   * @param {object} context\n   */\n  _prepareSkillsets(context) {\n    const skills = context.system.skills;\n\n    const sets = {\n      all: { skills: {} },\n      adventure: { skills: {} },\n      background: { skills: {} },\n    };\n\n    // sort skills by label\n    const keys = Object.keys(skills).sort(function (a, b) {\n      if (skills[a].custom && !skills[b].custom) return 1;\n      if (!skills[a].custom && skills[b].custom) return -1;\n      return (\"\" + skills[a].label).localeCompare(skills[b].label);\n    });\n\n    keys.forEach((a) => {\n      const skl = skills[a];\n      // Include all but Lore and Artistry in all\n      if (!pf1.config.backgroundOnlySkills.includes(a)) sets.all.skills[a] = skl;\n      if (skl.background) sets.background.skills[a] = skl;\n      else sets.adventure.skills[a] = skl;\n    });\n\n    context.skillsets = sets;\n  }\n\n  /**\n   * Calculate used and available skill ranks.\n   *\n   * @internal\n   * @param {object} context - HBS context\n   */\n  _prepareSkills(context) {\n    context.useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n    const abilities = context.system.abilities;\n\n    const isMindless = abilities?.int?.value === null;\n    const intMod = isMindless ? 0 : (abilities?.int?.mod ?? 0);\n\n    // Rank counting\n    const skillRanks = { allowed: 0, used: 0, bgAllowed: 0, bgUsed: 0, sentToBG: 0 };\n\n    // Count used skill ranks\n    for (const skl of Object.values(context.rollData.skills)) {\n      if (skl.subSkills != null) {\n        for (const subSkl of Object.values(skl.subSkills)) {\n          if (context.useBGSkills && skl.background) {\n            skillRanks.bgUsed += subSkl.rank;\n          } else {\n            skillRanks.used += subSkl.rank;\n          }\n        }\n      } else if (context.useBGSkills && skl.background) {\n        skillRanks.bgUsed += skl.rank;\n      } else {\n        skillRanks.used += skl.rank;\n      }\n    }\n\n    // Allowed skill ranks from HD, classes, intelligence, FCB, etc.\n    this.actor.itemTypes.class\n      .filter((cls) => cls.system.subType !== \"mythic\")\n      .forEach((cls) => {\n        // Favoured Class Bonus\n        if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n          skillRanks.allowed += cls.system.fc?.skill?.value || 0;\n        }\n\n        // Mindless get nothing else\n        if (isMindless) return;\n\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        // Int from HD still applies even if skills per level is zero.\n        skillRanks.allowed += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (context.useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) skillRanks.bgAllowed += bgranks;\n        }\n      });\n\n    // Calculate from changes\n    skillRanks.allowed += this.actor.system.details?.skills?.bonus || 0;\n\n    // Adventure skills transferred to background skills\n    if (context.useBGSkills && skillRanks.bgUsed > skillRanks.bgAllowed) {\n      skillRanks.sentToBG = skillRanks.bgUsed - skillRanks.bgAllowed;\n      skillRanks.allowed -= skillRanks.sentToBG;\n      skillRanks.bgAllowed += skillRanks.sentToBG;\n    }\n\n    context.skillRanks = skillRanks;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Compute the level and percentage of encumbrance for an Actor.\n   *\n   * @returns {object}               An object describing the character's encumbrance level\n   * @private\n   */\n  _computeEncumbrance() {\n    const system = this.actor.system;\n    const carriedWeight = system.attributes.encumbrance.carriedWeight;\n    const load = {\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n    };\n    const usystem = pf1.utils.getWeightSystem();\n    const carryLabel =\n      usystem === \"metric\"\n        ? game.i18n.format(\"PF1.CarryLabelKg\", { kg: carriedWeight })\n        : game.i18n.format(\"PF1.CarryLabel\", { lbs: carriedWeight });\n\n    const enc = {\n      pct: {\n        light: Math.clamp((carriedWeight * 100) / load.light, 0, 99.5),\n        medium: Math.clamp(((carriedWeight - load.light) * 100) / (load.medium - load.light), 0, 99.5),\n        heavy: Math.clamp(((carriedWeight - load.medium) * 100) / (load.heavy - load.medium), 0, 99.5),\n      },\n      encumbered: {\n        light: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.medium,\n        medium: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy,\n        heavy: system.attributes.encumbrance.carriedWeight >= system.attributes.encumbrance.levels.heavy,\n      },\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n      aboveHead: system.attributes.encumbrance.levels.overhead,\n      offGround: system.attributes.encumbrance.levels.carry,\n      dragPush: system.attributes.encumbrance.levels.drag,\n      value: system.attributes.encumbrance.carriedWeight,\n      carryLabel,\n    };\n\n    return enc;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} html The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const system = this.actor.system;\n    const source = this.actor._source.system;\n\n    const dom = html[0];\n    const qdrIn = dom.querySelector(\".tab.attributes .quadruped input\");\n    if (qdrIn) {\n      const qdr = system.attributes?.quadruped ?? false;\n      const rqdr = this.actor.race?.system.quadruped ?? false;\n      if (qdr !== rqdr && !qdr) qdrIn.indeterminate = true;\n    }\n\n    // Activate Item Filters\n    const filterLists = html.find(\".filter-list\");\n    filterLists.each(this._initializeFilterItemList.bind(this));\n    filterLists.on(\"click\", \".filter-rule\", this._onToggleFilter.bind(this));\n\n    // Search boxes\n    {\n      const sb = html.find(\".search-input\");\n      sb.on(\"change input\", this._searchFilterChange.bind(this));\n      sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n      this.searchRefresh = true;\n      // Filter tabs on followup refreshes\n      sb.each(function () {\n        if (this.value.length > 0) $(this).change();\n      });\n    }\n\n    // Item summaries\n    html.find(\".item .item-name\").click((event) => this._onItemSummary(event));\n\n    // Allow opening items even if the sheet isn't editable.\n\n    // General items\n    html.find(\".item-edit\").on(\"click\", this._onItemEdit.bind(this));\n    // General items (right click)\n    html.find(\".item .item-name\").contextmenu(this._onItemEdit.bind(this));\n    // Quick items (right click)\n    html.find(\".quick-actions li\").contextmenu(this._onItemEdit.bind(this));\n    // Race item special right-click handler\n    html.find(\".race.item\").contextmenu(this._onItemEdit.bind(this));\n\n    // Spellbook config toggle\n    html.find(\"a.hide-show\").click(this._hideShowElement.bind(this));\n\n    // Open skill compendium entry\n    html.find(\"a.compendium-entry\").click(this._onOpenCompendiumEntry.bind(this));\n\n    // Open compendium browser\n    html.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    html\n      // \"pointerenter\" would be better, but Foundry tooltip behaves unpredictably with it.\n      .on(\"pointerover\", \"[data-tooltip-extended]\", this._activateExtendedTooltip.bind(this))\n      .on(\"pointerleave\", \"[data-tooltip-extended]\", () => game.tooltip.deactivate());\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add general text box (span) handler\n    html.find(\"span.text-box.direct\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n    html\n      .find('*[data-action=\"input-text\"].wheel-change')\n      .on(\"wheel\", (event) => this._onInputText(event.originalEvent));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Abilities, Skills, Defenses and Traits\n    /* -------------------------------------------- */\n\n    // Ability Checks\n    html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\n\n    // BAB Check\n    html.find(\".attribute.bab .rollable\").click(this._onRollBAB.bind(this));\n\n    // Generic attack weapon and CMB checks\n    html.find(\".attribute.attack .rollable\").click(this._onRollAttack.bind(this));\n\n    // Initiative Check\n    html.find(\".attribute.initiative .rollable\").click(this._onRollInitiative.bind(this));\n\n    // Saving Throw\n    html.find(\".saving-throw .rollable\").click(this._onRollSavingThrow.bind(this));\n\n    // Adjust skill rank\n    html.find(\"span.text-box.skill-rank\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Add arbitrary skill\n    html.find(\".skills .skill.arbitrary .skill-create\").click((ev) => this._onArbitrarySkillCreate(ev));\n\n    // Add custom skill\n    html.find(\".skills .controls > .skill-create\").click((ev) => this._onSkillCreate(ev));\n\n    // Edit skill\n    html.find(\".skills .skill > .controls > .skill-edit\").on(\"click\", (ev) => this._onSkillEdit(ev));\n    // Delete custom skill\n    html.find(\".skills .skill > .controls > .skill-delete\").click((ev) => this._onSkillDelete(ev));\n\n    // Item Action control\n    html.find(\".item-actions a.item-action\").click(this._itemActivationControl.bind(this));\n\n    // Roll Skill Checks\n    html.find(\".tab.skills .skill > .action.roll\").click(this._onRollSkillCheck.bind(this));\n\n    // Trait Selector\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Resistance Selector\n    html.find(\".resistance-selector\").click(this._onResistanceSelector.bind(this));\n\n    // Display defenses\n    html.find(\".generic-defenses .rollable\").click((ev) => {\n      ev.preventDefault();\n      this.actor.displayDefenseCard({ token: this.token });\n    });\n\n    // Rest\n    html.find(\".rest\").click(this._onRest.bind(this));\n\n    // Point Buy Calculator\n    html.find(\"button.pointbuy-calculator\").click(this._onPointBuyCalculator.bind(this));\n\n    // Alignment\n    html.find(\".control.alignment\").click(this._onControlAlignment.bind(this));\n\n    // Edit senses\n    html.find(\".senses-selector\").on(\"click\", this._onSensesSelector.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(\".item-create\").on(\"click\", (ev) => this._onItemCreate(ev));\n    html.find(\".item-delete\").on(\"click\", this._onItemDelete.bind(this));\n    html.find(\".item-give\").on(\"click\", this._onItemGive.bind(this));\n    html.find(\".item-split:not(.disabled)\").on(\"click\", this._onItemSplit.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").on(\"click\", (event) => this._onItemCard(event));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick (un)equip item\n    html.find(\"a.item-control.item-equip\").click((ev) => {\n      this._quickEquipItem(ev);\n    });\n\n    // Quick carry item\n    html.find(\"a.item-control.item-carry\").click((ev) => {\n      this._quickCarryItem(ev);\n    });\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Quick toggle item property\n    html.find(\"a.item-control.item-toggle-prepared\").click(this._itemPreparedToggle.bind(this));\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick Action\n    html.find(\".quick-actions li\").click(this._quickAction.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Set item charges\n    html\n      .find(\".item-detail.item-uses span.text-box.value\")\n      .on(\"wheel\", this._setItemUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setItemUses.bind(this));\n      });\n\n    // Dynamic tooltips\n\n    // Weight details tooltip\n    // TODO: Move to extended tooltip handling?\n    html[0].querySelectorAll(\".item-list .item[data-item-id] .item-detail.item-weight\").forEach((el) => {\n      el.addEventListener(\n        \"pointerenter\",\n        (ev) => {\n          const el0 = ev.currentTarget;\n          const item = this.actor.items.get(el0.closest(\"[data-item-id]\").dataset.itemId);\n          const weight = item?.system.weight?.converted;\n\n          if (weight && weight.total > 0) {\n            const contents = [];\n            const quantity = item.system.quantity || 0;\n            contents.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: weight.value }));\n            if (quantity > 1)\n              contents.push(\n                game.i18n.format(\"PF1.StackDetails.Stack\", { value: Math.floor(weight.value * 100 * quantity) / 100 })\n              );\n            if (weight.contents > 0) {\n              contents.push(game.i18n.format(\"PF1.StackDetails.Contents\", { value: weight.contents }));\n              contents.push(game.i18n.format(\"PF1.StackDetails.Total\", { value: weight.total }));\n            }\n\n            const template = document.createElement(\"template\");\n            template.innerHTML = contents.join(\"<br>\");\n\n            game.tooltip.activate(el0, {\n              content: template.content,\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n              cssClass: \"pf1\",\n            });\n          }\n        },\n        { passive: true }\n      );\n      el.addEventListener(\"pointerleave\", () => game.tooltip.deactivate(), { passive: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Classes\n    /* -------------------------------------------- */\n\n    // Level Up\n    html.find(\".level-up\").click(this._onLevelUp.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Spells\n    /* -------------------------------------------- */\n\n    // Set specific spell's (max) uses\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='amount']\")\n      .on(\"wheel\", this._setSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setSpellUses.bind(this));\n      });\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='max']\")\n      .on(\"wheel\", this._setMaxSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setMaxSpellUses.bind(this));\n      });\n\n    // Set spell level uses for spontaneous spellbooks\n    html\n      .find(\".spell-uses .spell-slots.spontaneous span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n    // Set base amount of spell uses for a given spell level\n    html.find(\".spell-uses .spell-max span.text-box\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Set spell point amount\n    html\n      .find(\".spell-points-current .value span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n\n    html.find(\".spellcasting-concentration.rollable\").click(this._onRollConcentration.bind(this));\n\n    html.find(\".spellcasting-cl.rollable\").click(this._onRollCL.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Buffs\n    /* -------------------------------------------- */\n\n    html\n      .find(\".item-detail.item-active input[type='checkbox']\")\n      .off(\"change\")\n      .on(\"change\", this._setItemActive.bind(this));\n\n    html\n      .find(\".item-detail.item-level span.text-box\")\n      .on(\"wheel\", this._setBuffLevel.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setBuffLevel.bind(this));\n      });\n\n    // Toggle condition\n    html.find(\".condition .checkbox\").click(this._onToggleCondition.bind(this));\n    html.find(\".condition .checkbox\").on(\"contextmenu\", this._onEditCondition.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Skills\n    /* -------------------------------------------- */\n\n    html.find(\".skill-lock-button\").on(\"click\", this._onToggleSkillLock.bind(this));\n  }\n\n  /**\n   * Handle extended tooltip on hover activation.\n   *\n   * Async to reduce UX impact.\n   *\n   * @private\n   * @param {Event} event\n   */\n  async _activateExtendedTooltip(event) {\n    const el = event.currentTarget;\n    const id = el.dataset.tooltipExtended;\n    if (!id) return;\n\n    const context = { actor: this.actor, bonusTypes: pf1.config.bonusTypes, config: pf1.config };\n    await this._getTooltipContext(id, context);\n\n    context.sources = context.sources?.filter((list) => list.sources?.length > 0);\n\n    if (\n      !(\n        context.header ||\n        context?.paths?.length > 0 ||\n        context?.sources?.length > 0 ||\n        context?.details?.length > 0 ||\n        context?.notes?.length > 0\n      )\n    )\n      return;\n\n    for (const src of context.sources) {\n      src.sources = src.sources.map((s) => ({\n        ...s,\n        type: s.type || pf1.config.bonusTypes[s.modifier || \"untyped\"] || s.modifier,\n      }));\n    }\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/extended-tooltip.hbs\", context);\n\n    Hooks.callAll(\"renderPF1ExtendedTooltip\", this, id, template);\n\n    game.tooltip.activate(el, {\n      content: template.content,\n      cssClass: \"pf1 extended\",\n      direction: el.dataset.tooltipDirection || undefined,\n    });\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {ActorPF} */\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    const getNotes = async (context, all = true) =>\n      (await actor.getContextNotesParsed(context, { all, rollData: lazy.rollData, roll: false })).map((n) => n.text);\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"level\": {\n        const hd = lazy.rollData.attributes?.hd?.total ?? NaN;\n        if (hd > 0) {\n          paths.push({ path: \"@attributes.hd.total\", value: hd });\n          const mythic = lazy.rollData.details?.mythicTier ?? NaN;\n          if (mythic > 0) {\n            paths.push({ path: \"@details.mythicTier\", value: mythic });\n          }\n        }\n        const level = lazy.rollData.details?.level?.value ?? NaN;\n        if (level) {\n          paths.push({ path: \"@details.level.value\", value: lazy.rollData.details?.level?.value ?? NaN });\n        }\n        const cr = lazy.rollData.details?.cr?.total ?? NaN;\n        if (cr > 0) paths.push({ path: \"@details.cr.total\", value: pf1.utils.CR.fromNumber(cr) });\n        break;\n      }\n      case \"hit-points\": {\n        const hp = system.attributes.hp;\n        paths.push(\n          { path: \"@attributes.hp.value\", value: hp.value },\n          { path: \"@attributes.hp.offset\", value: hp.offset },\n          { path: \"@attributes.hp.max\", value: hp.max },\n          { path: \"@attributes.hp.temp\", value: hp.temp },\n          { path: \"@attributes.hp.nonlethal\", value: hp.nonlethal }\n        );\n        if (hp.base > 0) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.hp.base\", value: hp.base });\n        }\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hp.max\"), untyped: true });\n        break;\n      }\n      case \"vigor\": {\n        // Wounds & Vigor\n        const vigor = system.attributes.vigor;\n        paths.push(\n          { path: \"@attributes.vigor.value\", value: vigor.value },\n          { path: \"@attributes.vigor.offset\", value: vigor.offset },\n          { path: \"@attributes.vigor.temp\", value: vigor.temp },\n          { path: \"@attributes.vigor.max\", value: vigor.max }\n        );\n        if (vigor.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.vigor.base\", value: vigor.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.vigor.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"wounds\": {\n        // Wounds & Vigor\n        const wounds = system.attributes.wounds;\n        paths.push(\n          { path: \"@attributes.wounds.value\", value: wounds.value },\n          { path: \"@attributes.wounds.offset\", value: wounds.offset },\n          { path: \"@attributes.wounds.max\", value: wounds.max },\n          { path: \"@attributes.wounds.threshold\", value: wounds.threshold }\n        );\n        if (wounds.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.wounds.base\", value: wounds.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.wounds.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"speed\": {\n        const mode = detail;\n\n        sources.push(\n          { sources: actor.getSourceDetails(`system.attributes.speed.${mode}.base`) },\n          { sources: actor.getSourceDetails(`system.attributes.speed.${mode}.total`) }\n        );\n\n        // Add base speed\n        const speed = system.attributes.speed[mode];\n        const [tD] = pf1.utils.convertDistance(speed.total);\n        const [tB] = pf1.utils.convertDistance(speed.base);\n        const [tR] = pf1.utils.convertDistance(speed.unhindered);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push(\n          { path: `@attributes.speed.${mode}.total`, value: tD, unit: tU },\n          { path: `@attributes.speed.${mode}.base`, value: tB, unit: tU },\n          { path: `@attributes.speed.${mode}.unhindered`, value: tR, unit: tU }\n        );\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speed.overland);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@attributes.speed.${mode}.overland`, value: oD, unit: oU });\n\n        notes = [...(await getNotes(`${mode}Speed`)), ...(await getNotes(\"allSpeeds\"))];\n        break;\n      }\n      case \"flyManeuverability\":\n        paths.push({\n          path: \"@attributes.speed.fly.maneuverability\",\n          value: system.attributes.speed.fly.maneuverability,\n        });\n        break;\n      case \"ac\": {\n        const ac = system.attributes.ac[detail];\n        if (!ac) return;\n        paths.push({ path: `@attributes.ac.${detail}.total`, value: ac.total });\n        if (ac.value) {\n          // lite sheet forced value\n          paths.push({ path: `@attributes.ac.${detail}.value`, value: ac.value });\n        }\n        paths.push(\n          { path: \"@armor.type\", value: lazy.rollData.armor?.type },\n          { path: \"@shield.type\", value: lazy.rollData.shield?.type }\n        );\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.ac.${detail}.total`),\n        });\n\n        notes = await getNotes(\"ac\");\n        break;\n      }\n      case \"cmd\":\n        paths.push({\n          path: `@attributes.cmd.${detail}`,\n          value: system.attributes.cmd[detail],\n        });\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.cmd.${detail}`),\n        });\n\n        notes = await getNotes(\"cmd\");\n        break;\n      case \"save\": {\n        const save = system.attributes.savingThrows[detail];\n        if (!save) return;\n        paths.push({\n          path: `@attributes.savingThrows.${detail}.total`,\n          value: save.total,\n        });\n        if (save.base) {\n          // npc lite sheet forced value\n          paths.push({ path: `@attributes.savingThrows.${detail}.base`, value: save.base });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.savingThrows.${detail}.total`),\n        });\n\n        notes = await getNotes(`savingThrow.${detail}`);\n        break;\n      }\n      case \"sr\":\n        paths.push({\n          path: \"@attributes.sr.total\",\n          value: system.attributes.sr.total,\n        });\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.sr.total\"),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"sr\");\n        break;\n      case \"bab\": {\n        const bab = system.attributes.bab;\n        paths.push({\n          path: \"@attributes.bab.total\",\n          value: bab.total,\n        });\n\n        // lite sheet forced value\n        if (bab.value) {\n          paths.push({ path: \"@attributes.bab.value\", value: bab.value });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.bab.total\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"cmb\":\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n          // omit: + @attributes.attack.shared\n          // omit: + @attributes.attack.general\n        });\n\n        sources.push({\n          sources: [\n            {\n              name: game.i18n.localize(\"PF1.Size\"),\n              value: Object.values(pf1.config.sizeSpecialMods)[system.traits.size.value],\n            },\n          ],\n        });\n\n        if (system.attributes.cmbAbility) {\n          sources.push({\n            sources: [\n              {\n                name: pf1.config.abilities[system.attributes.cmbAbility],\n                value: system.abilities?.[system.attributes.cmbAbility]?.mod,\n              },\n            ],\n          });\n        }\n\n        sources.push(\n          { sources: actor.getSourceDetails(\"system.attributes.attack.general\") },\n          { sources: actor.getSourceDetails(\"system.attributes.cmb.bonus\") },\n          { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") }\n        );\n\n        notes = [...(await getNotes(\"attack\")), ...(await getNotes(\"melee\")), ...(await getNotes(\"cmb\"))];\n        break;\n      case \"init\": {\n        const init = system.attributes.init;\n        paths.push({ path: \"@attributes.init.total\", value: init.total });\n        if (init.value) {\n          // npc lite sheet forced value\n          paths.push({ path: \"@attributes.init.value\", value: init.value });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(\"system.attributes.init.total\"),\n        });\n\n        notes = await getNotes(\"init\");\n        break;\n      }\n      case \"abilityScore\": {\n        const abl = detail;\n        const ability = system.abilities[detail] ?? {};\n\n        const hasAbility = ability.base !== null;\n\n        paths.push(\n          { path: `@abilities.${abl}.total`, value: ability.total, sign: false },\n          { path: `@abilities.${abl}.value`, value: ability.value, sign: false },\n          { path: `@abilities.${abl}.mod`, value: ability.mod, sign: true }\n        );\n\n        if (hasAbility) {\n          paths.push(\n            { path: `@abilities.${abl}.damage`, value: ability.damage, sign: false },\n            { path: `@abilities.${abl}.drain`, value: ability.drain, sign: false },\n            { path: `@abilities.${abl}.undrained`, value: ability.undrained, sign: false },\n            { path: `@abilities.${abl}.penalty`, value: ability.penalty, sign: false },\n            { path: `@abilities.${abl}.base`, value: ability.base, sign: false },\n            { path: `@abilities.${abl}.baseMod`, value: ability.baseMod, sign: true },\n            { path: `@abilities.${abl}.unmod`, value: ability.unmod, sign: true }\n          );\n        }\n\n        if (hasAbility) {\n          sources.push(\n            { sources: actor.getSourceDetails(`system.abilities.${abl}.total`) },\n            { sources: actor.getSourceDetails(`system.abilities.${abl}.penalty`) },\n            {\n              label: game.i18n.localize(\"PF1.ModifierOnly\"),\n              sources: actor.getSourceDetails(`system.abilities.${abl}.mod`),\n            },\n            {\n              label: game.i18n.localize(\"PF1.CheckOnly\"),\n              sources: actor.getSourceDetails(`system.abilities.${abl}.checkMod`),\n            }\n          );\n        }\n\n        notes = await getNotes(`abilityChecks.${abl}`);\n        break;\n      }\n      case \"acp\":\n        paths.push(\n          {\n            path: \"@attributes.acp.total\",\n            value: system.attributes.acp.total,\n          },\n          {\n            path: \"@attributes.acp.skill\",\n            value: system.attributes.acp.skill,\n          },\n          {\n            path: \"@attributes.acp.encumbrance\",\n            value: system.attributes.acp.encumbrance,\n          },\n          {\n            path: \"@attributes.acp.gear\",\n            value: system.attributes.acp.gear,\n          }\n        );\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.attributes.acp.total\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: actor.getSourceDetails(\"system.attributes.acp.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: actor.getSourceDetails(\"system.attributes.acp.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      case \"max-dex\": {\n        const mdex = system.attributes.maxDexBonus;\n        paths.push({\n          path: \"@attributes.maxDexBonus\",\n          value: Number.isFinite(mdex) ? mdex : \"null\",\n        });\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.attributes.maxDexBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: actor.getSourceDetails(\"system.attributes.mDex.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: actor.getSourceDetails(\"system.attributes.mDex.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"asf\": {\n        // TODO: Make ASF proper change target\n        const asfSources = [];\n        this.actor.itemTypes.equipment\n          .filter((item) => item.isActive)\n          .reduce((cur, item) => {\n            const itemASF = item.system.spellFailure || 0;\n            if (itemASF > 0) asfSources.push({ name: item.name, value: `${itemASF}%` });\n            return cur + itemASF;\n          }, 0);\n\n        if (asfSources.length) {\n          sources.push({ sources: asfSources, untyped: true });\n        }\n        break;\n      }\n      case \"implants\": {\n        const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n        paths.push(\n          { path: \"@abilities.int.total\", value: lazy.rollData.abilities.int.total },\n          { path: \"@abilities.con.total\", value: lazy.rollData.abilities.con.total }\n        );\n        sources.push({\n          untyped: true,\n          sources: cybertech.map((item) => ({\n            name: item.name,\n            value: item.system.implant,\n          })),\n        });\n        break;\n      }\n      case \"size\":\n        paths.push(\n          { path: \"@traits.size.base\", value: system.traits.size.base },\n          { path: \"@size\", value: lazy.rollData.size }\n        );\n        sources.push({\n          sources: actor.getSourceDetails(\"system.traits.size.value\"),\n        });\n        break;\n      case \"age-category\":\n        paths.push(\n          { path: \"@traits.ageCategory.base\", value: system.traits.ageCategory.base },\n          { path: \"@ageCategory.value\", value: lazy.rollData.ageCategory.value },\n          { path: \"@ageCategory.physical\", value: lazy.rollData.ageCategory.physical },\n          { path: \"@ageCategory.mental\", value: lazy.rollData.ageCategory.mental }\n        );\n        break;\n      case \"stature\":\n        paths.push({ path: \"@traits.stature\", value: lazy.rollData.traits.stature });\n        break;\n      case \"reach\":\n        paths.push(\n          { path: \"@traits.reach.total.melee\", value: lazy.rollData.traits.reach.total.melee },\n          { path: \"@traits.reach.total.reach\", value: lazy.rollData.traits.reach.total.reach },\n          { path: \"@traits.reach.natural.melee\", value: lazy.rollData.traits.reach.natural.melee },\n          { path: \"@traits.reach.natural.reach\", value: lazy.rollData.traits.reach.natural.reach }\n        );\n        sources.push({ sources: actor.getSourceDetails(\"system.traits.reach.total.melee\") });\n        break;\n      case \"senses\":\n        for (const i of [\"dv\", \"ts\", \"ls\", \"bse\", \"bs\", \"sc\", \"tr\"]) {\n          const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n          paths.push({\n            path: `@traits.senses.${i}.total`,\n            value: pf1.utils.convertDistance(system.traits.senses[i]?.total)[0],\n            unit: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n            signed: false,\n          });\n          sources.push({\n            label: pf1.config.senses[i],\n            sources: actor.getSourceDetails(`system.traits.senses.${i}.total`),\n            left: true,\n            untyped: true,\n          });\n        }\n        break;\n      case \"aura\":\n        paths.push({ path: \"@traits.aura.custom\", empty: true });\n        break;\n      case \"fastHeal\":\n        paths.push({ path: \"@traits.fastHealing\", empty: true });\n        break;\n      case \"regen\":\n        paths.push({ path: \"@traits.regen\", empty: true });\n        break;\n      case \"conditionResistance\":\n        paths.push({ path: \"@traits.cres\", empty: true });\n        break;\n      case \"conditionImmunity\":\n        paths.push({ path: \"@traits.ci.total\", empty: true });\n        break;\n      case \"energyResistance\":\n        paths.push({ path: \"@traits.eres.total\", empty: true });\n        break;\n      case \"hardness\":\n        paths.push({ path: \"@traits.hardness\", empty: true });\n        break;\n      case \"damageReduction\":\n        paths.push({ path: \"@traits.dr.total\", empty: true });\n        break;\n      case \"damageImmunity\":\n        paths.push({ path: \"@traits.di.total\", empty: true });\n        break;\n      case \"damageVulnerability\":\n        paths.push({ path: \"@traits.dv.total\", empty: true });\n        break;\n      case \"proficiency\":\n        switch (detail) {\n          case \"language\":\n            paths.push({ path: \"@traits.languages.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.languages\"), left: true, untyped: true });\n            break;\n          case \"weapon\":\n            paths.push({ path: \"@traits.weaponProf.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.weaponProf\"), left: true, untyped: true });\n            break;\n          case \"armor\":\n            paths.push({ path: \"@traits.armorProf.total\", empty: true });\n            sources.push({ sources: actor.getSourceDetails(\"system.traits.armorProf\"), left: true, untyped: true });\n            break;\n        }\n        break;\n      case \"quadruped\": {\n        paths.push({ path: \"@attributes.quadruped\", value: String(system.attributes.quadruped) });\n        const race = this.actor.race;\n        if (race) {\n          sources.push({\n            untyped: true,\n            sources: [{ name: race.name, value: race.system.quadruped ?? false, isBoolean: true }],\n          });\n        }\n        break;\n      }\n      case \"negativeLevels\":\n        paths.push({ path: \"@attributes.energyDrain\", value: system.attributes.energyDrain, signed: false });\n        break;\n      case \"item\": {\n        const [itemId, target] = detail.split(\".\");\n        /** @type {ItemPF} */\n        const item = this.actor.items.get(itemId);\n        if (!item) return;\n        switch (target) {\n          case \"level\":\n            paths.push({\n              path: `@classes.${item.system.tag}.level`,\n              value: lazy.rollData.classes[item.system.tag].level,\n            });\n            if (item.subType === \"mythic\") {\n              paths.push({\n                path: `@classes.${item.system.tag}.mythicTier`,\n                value: lazy.rollData.classes[item.system.tag].mythicTier,\n              });\n            } else {\n              paths.push({\n                path: `@classes.${item.system.tag}.unlevel`,\n                value: lazy.rollData.classes[item.system.tag].unlevel,\n              });\n            }\n            break;\n          case \"resources\": {\n            if (!item.isCharged || item.isSingleUse) return;\n\n            paths.push({ path: `@resources.${item.system.tag}.value`, value: item.system.uses?.value });\n            if (item.system.uses?.max > 0) {\n              paths.push({ path: `@resources.${item.system.tag}.max`, value: item.system.uses?.max });\n            }\n            break;\n          }\n          case \"attacks\": {\n            const action = item.defaultAction;\n            if (!action?.hasAttack) return;\n            const attacks =\n              action\n                ?.getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true })\n                ?.map((atk) => atk.bonus)\n                .sort((a, b) => b - a) ?? [];\n\n            if (attacks.length == 0) return;\n\n            const formatter = new Intl.NumberFormat(undefined, { signDisplay: \"always\" });\n            header = attacks.map((n) => formatter.format(n)).join(\"/\");\n\n            sources.push({\n              sources: item.attackSources,\n            });\n            break;\n          }\n          case \"damage\": {\n            const action = item.defaultAction;\n            if (!action?.hasDamage) return;\n\n            const rollData = action.getRollData();\n\n            //header = dmgformula; // No different than on sheet\n\n            const dmgSources = [];\n\n            subHeader = game.i18n.localize(\"PF1.Details\");\n\n            const damage = action.damage;\n            for (const dmg of damage.parts ?? []) {\n              dmgSources.push({\n                name: dmg.formula,\n                value: pf1.utils.formula.simplify(dmg.formula || \"0\", rollData, { strict: false }),\n                type: pf1.utils.i18n.join(dmg.names),\n                //unvalued: true,\n              });\n            }\n            for (const dmg of damage.nonCritParts ?? []) {\n              dmgSources.push({\n                name: dmg.formula,\n                value: pf1.utils.formula.simplify(dmg.formula || \"0\", rollData, { strict: false }),\n                type: pf1.utils.i18n.join(dmg.names),\n                //unvalued: true,\n              });\n            }\n\n            const ablKey = action.ability?.damage;\n            if (ablKey) {\n              const isNatural = action.item.subType === \"natural\";\n              const abl = rollData.abilities?.[ablKey];\n\n              const ablMax = action.ability?.max ?? Infinity;\n              const dmgAblBaseMod = Math.min(abl?.mod ?? 0, ablMax);\n              const held = action.held || item?.system.held || \"1h\";\n              let ablDmgMult =\n                action.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n              if (isNatural && !(action.naturalAttack?.primary ?? true)) {\n                ablDmgMult = action.naturalAttack?.secondary?.damageMult ?? 0.5;\n              }\n\n              const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n\n              dmgSources.push({\n                value: dmgAblMod,\n                type: pf1.config.abilities[ablKey],\n              });\n            }\n\n            sources.push({ sources: dmgSources });\n\n            sources.push({\n              sources: action.allDamageSources.map((s) => ({\n                name: s.flavor,\n                ...s,\n                type: pf1.config.bonusTypes[s.type] || s.type,\n              })),\n            });\n\n            /*\n            const hasOptionalConditionals = action?.conditionals.find((c) => !c.default);\n            if (hasOptionalConditionals) {\n              // <span class=\"span3\">+ {{localize \"PF1.Conditionals\"}}</span>\n            }\n            */\n\n            /*\n            if (damage.critParts?.length) {\n              // <span class=\"span3\">+ {{localize \"PF1.OnCritBonusFormula\"}}</span>\n            }\n            */\n            break;\n          }\n          case \"range\": {\n            const action = item.defaultAction;\n            if (!action?.hasRange) return;\n\n            const maxIncr = action.range?.maxIncrements ?? 1;\n            if (maxIncr <= 1) return;\n\n            details.push({\n              key: game.i18n.localize(\"PF1.MaximumRangeIncrements\"),\n              value: action.range.maxIncrements,\n              left: true,\n            });\n\n            const rollData = action.getRollData();\n            const range = {\n              ...(action.range ?? {}),\n              min: action.getRange({ type: \"min\", rollData }),\n              max: action.getRange({ type: \"max\", rollData }),\n            };\n\n            const u = pf1.utils.convertDistance(0, \"ft\")[1];\n            const mu = pf1.utils.convertDistance(0, range.units)[1];\n\n            details.push({\n              key: game.i18n.localize(\"PF1.Range\"),\n              value: `${range.min} ${u} – ${range.max} ${mu}`,\n              left: true,\n            });\n            break;\n          }\n          default:\n            throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n        }\n        break;\n      }\n      case \"carryCapacity\": {\n        paths.push(\n          { path: \"@attributes.encumbrance.level\", value: system.attributes.encumbrance.level },\n          { path: \"@details.carryCapacity.bonus.total\", value: system.details.carryCapacity.bonus.total },\n          {\n            path: \"@details.carryCapacity.multiplier.total\",\n            value: pf1.utils.limitPrecision(system.details.carryCapacity.multiplier.total, 2),\n          }\n        );\n\n        const bonusMults = [];\n        const size = this.actor.system.traits?.size?.base || \"med\";\n        if (size) {\n          const isQuadruped = this.actor.system.attributes?.quadruped || false;\n          const mults = isQuadruped\n            ? pf1.config.encumbranceMultipliers.quadruped\n            : pf1.config.encumbranceMultipliers.normal;\n          const smult = mults[size];\n          bonusMults.push({\n            name: game.i18n.localize(\"PF1.Size\") + (isQuadruped ? ` (${game.i18n.localize(\"PF1.Quadruped\")})` : \"\"),\n            value: `×${smult}`,\n          });\n        }\n\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryStrength\"),\n          sources: actor.getSourceDetails(\"system.details.carryCapacity.bonus.total\"),\n          untyped: true,\n        });\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryMultiplier\"),\n          sources: [...actor.getSourceDetails(\"system.details.carryCapacity.multiplier.total\"), ...bonusMults],\n          decimals: 1,\n          untyped: true,\n        });\n        break;\n      }\n      case \"feats\": {\n        const feats = this.actor.getFeatCount();\n\n        if (feats.levels > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromLevels\"), value: feats.levels }],\n            untyped: true,\n          });\n        }\n        if (feats.mythic > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromMythic\"), value: feats.mythic }],\n            untyped: true,\n          });\n        }\n\n        // Generate fake sources\n        const featSources = [];\n        // TODO: Move this to the real source info generation\n        this.actor.changes\n          .filter((c) => c.target === \"bonusFeats\")\n          .forEach((c) => {\n            if (c.parent || c.flavor) {\n              featSources.push({\n                name: c.parent?.name ?? c.flavor,\n                value: c.value,\n              });\n            }\n          });\n\n        if (feats.formula !== 0) {\n          featSources.push({\n            name: game.i18n.localize(\"PF1.BonusFeatFormula\"),\n            value: feats.formula,\n          });\n        }\n        sources.push({ sources: featSources, untyped: true });\n        break;\n      }\n      case \"skills\": {\n        const useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n        const isMindless = system.abilities?.int?.value === null;\n\n        const skillSources = [];\n        const isBG = detail === \"background\";\n\n        let bgAllowed = 0;\n\n        this.actor.itemTypes.class\n          .filter((cls) => cls.system.subType !== \"mythic\")\n          .forEach((cls) => {\n            // Favoured Class Bonus\n            // Apply FCB regardless if mindless if user applied such\n            if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n              const fcSkills = cls.system.fc?.skill?.value || 0;\n              if (fcSkills > 0 && !isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: cls.name }),\n                  value: fcSkills,\n                  untyped: true,\n                });\n              }\n            }\n\n            // Mindless get nothing else\n            if (isMindless) return;\n\n            const hd = cls.hitDice;\n            if (hd === 0) return;\n\n            // Background skills\n            if (useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n              const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n              bgAllowed += bgranks;\n              if (bgranks > 0 && isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                  value: bgranks,\n                  untyped: true,\n                });\n              }\n            }\n\n            if (!isBG) {\n              const perLevel = cls.system.skillsPerLevel || 0;\n              skillSources.push({\n                name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                value: perLevel * hd,\n                untyped: true,\n              });\n            }\n          });\n\n        // Ability ability score\n        if (!isBG && !isMindless) {\n          const intMod = system.abilities?.int?.mod;\n          if (intMod !== 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.AbilityInt\"),\n              value: intMod * system.attributes?.hd?.total,\n            });\n          }\n        }\n\n        // Count transfers for background skills\n        if (useBGSkills) {\n          let bgUsed = 0;\n\n          // Count used skill ranks\n          for (const skl of Object.values(lazy.rollData.skills)) {\n            if (skl.subSkills) {\n              for (const subSkl of Object.values(skl.subSkills)) {\n                if (skl.background) {\n                  bgUsed += subSkl.rank;\n                }\n              }\n            } else if (skl.background) {\n              bgUsed += skl.rank;\n            }\n          }\n\n          // Adventure skills transferred to background skills\n          const sentToBG = bgUsed - bgAllowed;\n          if (sentToBG > 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.Transferred\"),\n              value: isBG ? sentToBG : -sentToBG,\n            });\n          }\n        }\n\n        sources.push(\n          {\n            sources: actor.getSourceDetails(\"system.details.skills.bonus\"),\n            untyped: true,\n          },\n          {\n            sources: skillSources,\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"skill\": {\n        const fullSkillId = detail,\n          skillIdParts = fullSkillId.split(\".\"),\n          mainId = skillIdParts.shift(),\n          subSkillId = skillIdParts.pop(),\n          skill = this.actor.getSkillInfo(fullSkillId, { rollData: lazy.rollData });\n\n        header = `<code>${skill.id}</code>`;\n\n        const path = subSkillId ? `${mainId}.subSkills.${subSkillId}` : mainId;\n\n        paths.push(\n          { path: `@skills.${path}.mod`, value: skill.mod },\n          { path: `@skills.${path}.rank`, value: skill.rank }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(`system.skills.${path}.mod`) });\n\n        notes = await getNotes(`skill.${fullSkillId}`);\n        if (subSkillId) notes.push(...(await getNotes(`skill.${mainId}`, false)));\n        break;\n      }\n      case \"spellbook\": {\n        const [bookId, target, subTarget] = detail.split(\".\");\n        const spellbook = system.attributes?.spells?.spellbooks?.[bookId];\n        switch (target) {\n          case \"class\": {\n            paths.push(\n              { path: \"@cl\", value: spellbook.cl.total },\n              { path: `@spells.${bookId}.cl.total`, value: spellbook.cl.total }\n            );\n\n            let cls;\n            // TODO: get proper spellbook roll data\n            if (spellbook.class === \"_hd\") cls = { level: lazy.rollData.attributes?.hd?.total };\n            cls = lazy.rollData.classes?.[spellbook.class];\n            if (cls) paths.push({ path: \"@class.level\", value: cls.level });\n\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n            });\n            break;\n          }\n          case \"ability\": {\n            const ablMod = lazy.rollData.abilities[spellbook.ability]?.mod;\n            paths.push(\n              {\n                path: `@spells.${bookId}.abilityMod`,\n                value: ablMod,\n              },\n              {\n                path: \"@ablMod\",\n                value: ablMod,\n              }\n            );\n            break;\n          }\n          case \"level\":\n            paths.push({\n              path: `@spells.${bookId}.cl.total`,\n              value: spellbook.cl?.total,\n            });\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n              untyped: true,\n            });\n            notes = await getNotes(`spell.cl.${bookId}`);\n            break;\n          case \"concentration\": {\n            paths.push({\n              path: `@spells.${bookId}.concentration.total`,\n              value: spellbook.concentration?.total,\n            });\n            sources.push({\n              sources: actor.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.concentration.total`),\n              untyped: true,\n            });\n            notes = await getNotes(`spell.concentration.${bookId}`);\n            break;\n          }\n          case \"range\": {\n            const unit = subTarget;\n            paths.push({\n              path: `@spells.${bookId}.range.${unit}`,\n              value: spellbook.range?.[unit],\n              unit:\n                pf1.utils.getDistanceSystem() === \"metric\"\n                  ? pf1.config.measureUnitsShort.m\n                  : pf1.config.measureUnitsShort.ft,\n            });\n            break;\n          }\n          case \"spellPoints\":\n            paths.push(\n              { path: `@spells.${bookId}.spellPoints.value`, value: spellbook.spellPoints.value },\n              { path: `@spells.${bookId}.spellPoints.max`, value: spellbook.spellPoints.max }\n            );\n\n            break;\n        }\n        break;\n      }\n      case \"spell\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        switch (target) {\n          case \"material\": {\n            const materials = item.system.materials ?? {};\n            if (materials.focus) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.focus.Label\"),\n                value: materials.focus,\n              });\n            }\n            if (materials.value) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.material.Label\"),\n                value: materials.value,\n              });\n            }\n            break;\n          }\n          case \"school\": {\n            if (item.system.subschool) {\n              details.push({\n                key: game.i18n.localize(\"PF1.Subschool\"),\n                value: pf1.utils.i18n.join([...(item.system.subschool.names ?? [])]),\n              });\n            }\n\n            if (item.system.descriptors?.total?.size) {\n              details.push({\n                key: game.i18n.localize(\"PF1.DescriptorPlural\"),\n                value: pf1.utils.i18n.join([...(item.system.descriptors.names ?? [])], \"conjunction\", false),\n              });\n            }\n\n            const action = item.defaultAction;\n\n            if (action?.hasDamage) {\n              const types = action.damage?.parts?.map((d) => d.names).flat() ?? [];\n\n              if (types.length) {\n                details.push({\n                  key: game.i18n.localize(\"PF1.Damage\"),\n                  value: pf1.utils.i18n.join(types),\n                });\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n      // Generics\n      case \"generic\": {\n        const [target, subTarget] = detail.split(\".\");\n        switch (target) {\n          case \"attack\": {\n            paths.push(\n              { path: \"@attributes.attack.shared\", value: system.attributes.attack.shared },\n              { path: \"@attributes.attack.general\", value: system.attributes.attack.general },\n              { path: `@attributes.attack.${subTarget}`, value: system.attributes.attack[subTarget] }\n            );\n\n            const abl = system.attributes.attack[`${subTarget}Ability`];\n\n            sources.push(\n              { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") },\n              {\n                sources: [\n                  {\n                    name: pf1.config.abilities[abl] || abl,\n                    value: lazy.rollData.abilities?.[abl]?.mod ?? 0,\n                  },\n                ],\n              }\n            );\n\n            sources.push({\n              sources: [\n                {\n                  name: game.i18n.localize(\"PF1.Size\"),\n                  value: Object.values(pf1.config.sizeMods)[system.traits.size.value],\n                },\n              ],\n            });\n\n            sources.push({ sources: actor.getSourceDetails(\"system.attributes.attack.general\") });\n            sources.push({ sources: actor.getSourceDetails(`system.attributes.attack.${subTarget}`) });\n\n            notes = [...(await getNotes(\"attack\")), ...(await getNotes(subTarget))];\n\n            break;\n          }\n        }\n        break;\n      }\n      default:\n        throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Event} event - Triggering event\n   * @param {Function} callback - Submission handler\n   */\n  _onSpanTextInput(event, callback) {\n    const el = event.target;\n    const parent = el.parentElement;\n\n    const isNumber = el.dataset.dtype === \"Number\" || el.type === \"number\";\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(\"INPUT\");\n    newEl.type = \"text\";\n    // Copy data props\n    for (const [key, value] of Object.entries(el.dataset)) {\n      newEl.dataset[key] = value;\n    }\n\n    if (isNumber) newEl.size = 12; // HTML defaults to 20\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n    const name = el.getAttribute(\"name\"); // span has no .name attribute even if name=\"\" is used\n\n    let prevValue = 0,\n      maxValue;\n\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.actor, name) || 0;\n      if (name.endsWith(\".value\") && !noCap && isNumber) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.actor, maxName);\n      }\n    } else {\n      if (!el.classList.contains(\"placeholder\")) {\n        prevValue = isNumber ? parseFloat(el.innerText || \"0\") : el.innerText || \"\";\n      }\n    }\n\n    // Add constraints if they exist\n    if (el.dataset.min) newEl.min = el.dataset.min;\n    if (el.dataset.step) newEl.step = el.dataset.step;\n    if (el.dataset.max) newEl.max = el.dataset.max;\n\n    // Set value of new input element\n    newEl.value = `${prevValue || 0}`;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = isNumber ? parseFloat(el.dataset.clearValue || \"0\") : \"\";\n\n    // Replace span with input element\n    parent.replaceChild(newEl, el);\n\n    let changed;\n    newEl.addEventListener(\n      \"change\",\n      (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // Prevent Foundry acting on this\n        changed = true;\n\n        let newValue;\n        if (allowRelative) {\n          newValue = pf1.utils.internal.adjustNumberByStringCommand(prevValue, newEl.value, maxValue, clearValue);\n          newEl.value = newValue;\n        } else {\n          newValue = parseFloat(newEl.value || \"0\");\n        }\n\n        // Reset if nothing changed\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n        // Pass it to callback\n        else {\n          newEl.readOnly = true;\n          callback(event, el);\n        }\n      },\n      { once: true }\n    );\n\n    newEl.addEventListener(\n      \"focusout\",\n      (event) => {\n        if (changed) return;\n\n        const newValue = parseFloat(newEl.value || \"0\");\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n      },\n      { passive: true, once: true }\n    );\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  /**\n   * @internal\n   * @param {DragEvent} event - Drag start event\n   */\n  _onDragSkillStart(event) {\n    const elem = event.currentTarget;\n    const skillElem = elem.closest(\".skill\");\n    const mainSkill = skillElem.dataset.skill;\n    const subSkill = skillElem.dataset.subSkill;\n\n    const result = {\n      type: \"skill\",\n      uuid: this.actor.uuid,\n      skill: subSkill ? `${mainSkill}.${subSkill}` : mainSkill,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * @param {DragEvent} event - Drag start event\n   * @param {\"bab\"|\"cmb\"|\"defenses\"|\"concentration\"|\"cl\"|\"initiative\"|\"abilityScore\"|\"attack\"} type\n   * @param {string} [subType] Type specific subtype\n   */\n  _onDragMiscStart(event, type, subType) {\n    const result = {\n      type,\n      uuid: this.actor.uuid,\n    };\n\n    switch (type) {\n      case \"bab\":\n      case \"cmb\":\n      case \"initiative\":\n      case \"defenses\":\n        // No special handling\n        break;\n      case \"concentration\":\n      case \"cl\": {\n        const elem = event.currentTarget.closest(\".tab.spellbook-group\");\n        result.bookId = elem.dataset.tab;\n        break;\n      }\n      case \"abilityScore\":\n        result.ability = subType;\n        break;\n      case \"attack\":\n        result.attack = subType;\n        break;\n      default:\n        throw new Error(`Unrecognized drag source: ${type}`);\n    }\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  _onDragSaveStart(event, type) {\n    const result = {\n      type: \"save\",\n      save: type,\n      uuid: this.actor.uuid,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * Initialize Item list filters by activating the set of filters which are currently applied\n   *\n   * @private\n   * @param _i\n   * @param {Element} ul\n   */\n  _initializeFilterItemList(_i, ul) {\n    const filters = ul.querySelectorAll(\".filter-rule\");\n    for (const li of filters) {\n      const set = (this._filters.sections[li.dataset.category] ??= new Set());\n      if (set.has(li.dataset.filter)) li.classList.add(\"active\");\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  async _onRest(event) {\n    event.preventDefault();\n\n    const skipDialog = pf1.documents.settings.getSkipActionPrompt();\n    if (skipDialog) {\n      const button = event.currentTarget;\n      button.disabled = true;\n      try {\n        await this.actor.performRest({ verbose: true });\n      } finally {\n        button.disabled = false;\n      }\n    } else {\n      const app = Object.values(this.actor.apps).find((app) => app instanceof ActorRestDialog);\n      if (app) {\n        app.render(true);\n        app.bringToFront();\n      } else new ActorRestDialog({ document: this.actor }).render({ force: true });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemCard(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard(undefined, { token: this.token });\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setItemUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n\n    this._mouseWheelAdd(event, el);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", this._commitItemUsesBound, { passive: true, once: true });\n    } else {\n      this._commitItemUses(event);\n    }\n  }\n\n  /**\n   * Commit changes from {@link _setItemUses}\n   *\n   * @internal\n   * @param {Event} event\n   * @returns {Promise}\n   */\n  async _commitItemUses(event) {\n    const el = event.currentTarget;\n    /** @type {string} */\n    const itemId = el.closest(\".item\").dataset.itemId;\n    /** @type {ItemPF} */\n    const item = this.actor.items.get(itemId);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    return item.addCharges(value - item.charges);\n  }\n  _commitItemUsesBound = this._commitItemUses.bind(this); // To avoid multiple anonymous function registrations\n\n  _setSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.value ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.preparation.value\", value);\n    if (prevValue < value) {\n      const maxValue = item.system.preparation.max ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(maxValue, value));\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _setMaxSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.max ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(0, value));\n    if (prevValue > value) {\n      const curValue = item.system.preparation.value ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.value\", Math.min(curValue, value));\n    }\n    if (value < 0) {\n      el.tagName === \"INPUT\" ? (el.value = 0) : (el.innerText = 0);\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _adjustActorPropertyBySpan(event, oldEl) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    this._mouseWheelAdd(event, el);\n\n    // Get base value\n    const rawValue = el.tagName === \"INPUT\" ? el.value : el.innerText;\n    let value = el.dataset.dtype === \"String\" ? rawValue : Number(rawValue);\n\n    // Adjust value if needed\n    const name = el.getAttribute(\"name\"); // .name is not available on non-inputs\n    if (name?.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.value$/)) {\n      if (Number.isNaN(parseInt(value))) value = null;\n      else value = parseInt(value);\n    }\n\n    // Add constraints if any\n    if (el.min) value = Math.max(Number(el.min), value);\n    if (el.max) value = Math.min(Number(el.max), value);\n    if (el.step) value = value.toNearest(Number(el.step));\n\n    let updateData;\n    if (name) {\n      if (value === foundry.utils.getProperty(this.actor, name)) {\n        // Restore input\n        if (oldEl) el.parentElement.replaceChild(oldEl, el);\n        return;\n      }\n      updateData = { [name]: value };\n    }\n    // Values that depend on transformations\n    else if (el.dataset.for) {\n      // TODO: Use el.dataset.type to apply transformations here and check for changed values with those\n      updateData = { [el.dataset.for]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      // When is this ever used?\n      el.addEventListener(\"pointerleave\", async (event) => this._updateObject(event, this._getSubmitData(updateData)), {\n        once: true,\n      });\n    } else {\n      const rv = await this._updateObject(event, this._getSubmitData(updateData));\n      // No update, restore old element\n      if (!rv && oldEl) el.parentElement.replaceChild(oldEl, el);\n    }\n  }\n\n  _setBuffLevel(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.level\", value);\n\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _hideShowElement(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = this.element.find(`.${a.dataset.for}`);\n\n    if (target.hasClass(\"hidden\")) {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-down\").addClass(\"fa-arrow-circle-up\");\n      target.removeClass(\"hidden\");\n      target.hide();\n      target.slideDown(200);\n\n      this._hiddenElems[a.dataset.for] = false;\n    } else {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-up\").addClass(\"fa-arrow-circle-down\");\n      target.slideUp(200, () => target.addClass(\"hidden\"));\n\n      this._hiddenElems[a.dataset.for] = true;\n    }\n  }\n\n  _onToggleCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.statuses.has(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    this.actor.toggleCondition(conditionId);\n  }\n\n  async _onEditCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n    const cond = pf1.registry.conditions.get(conditionId);\n    if (!cond) throw new Error(`Invalid condition ID: ${conditionId}`);\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.statuses.has(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    let ae;\n\n    if (this.actor.statuses.has(conditionId)) {\n      const relevantAEs = [];\n      for (const ae of this.actor.allApplicableEffects()) {\n        if (!ae.active) continue;\n        if (ae.statuses.has(conditionId)) relevantAEs.push(ae);\n      }\n\n      // TODO: Add selector and remove this error message\n      if (relevantAEs.length > 1) {\n        return void ui.notifications.warn(\"PF1.Error.TooManyConditionSources\", { localize: true });\n      }\n\n      ae = relevantAEs[0];\n    }\n\n    const { bottom, left } = a.getBoundingClientRect();\n\n    const rounds = await pf1.utils.dialog.getNumber({\n      title: cond.name + \" – \" + game.i18n.localize(\"PF1.Duration\"),\n      initial: Math.floor((ae?.duration?.seconds ?? 0) / CONFIG.time.roundTime),\n      hint: game.i18n.localize(\"PF1.Time.Period.round.Label\"),\n      min: 0,\n      step: 1,\n      dialog: {\n        position: {\n          top: bottom + 20,\n          left: left - 20,\n        },\n      },\n    });\n\n    if (!Number.isFinite(rounds)) return;\n\n    const updateData = { \"duration.seconds\": rounds * CONFIG.time.roundTime };\n    if (ae) ae.update(updateData);\n    else this.actor.setCondition(conditionId, updateData);\n  }\n\n  /**\n   * Toggle skill lock.\n   *\n   * @param {MouseEvent} event\n   */\n  _onToggleSkillLock(event) {\n    event.preventDefault();\n    this._skillsLocked = !this._skillsLocked;\n\n    const target = event.currentTarget;\n    target.classList.toggle(\"unlocked\", !this._skillsLocked);\n\n    const tab = target.closest(\".tab\");\n    tab.classList.toggle(\"locked\", this._skillsLocked);\n\n    tab.querySelectorAll(\".lockable\").forEach((el) => {\n      if ([\"INPUT\", \"SELECT\"].includes(el.tagName)) {\n        el.disabled = this._skillsLocked;\n      } else {\n        el.classList.toggle(\"hide-contents\", this._skillsLocked);\n      }\n    });\n  }\n\n  /**\n   * Handle opening a compendium browser\n   *\n   * @private\n   * @param {Event} event   The originating click event\n   */\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const [cat0, cat1] = a.dataset.source?.split(\".\") ?? [];\n\n    const cfg = pf1.config.sheetSections[cat0]?.[cat1]?.browse ?? {\n      category: a.dataset.category || cat0,\n      type: a.dataset.type,\n    };\n\n    const browser = pf1.applications.compendiums[cfg.category];\n    if (!browser) throw new Error(`Could not find \"${cfg.category}\" browser`);\n\n    const filters = {};\n\n    // Basic filters\n    for (const [key, value] of Object.entries(cfg)) {\n      if ([\"level\", \"category\"].includes(key)) continue;\n      filters[key] = (Array.isArray(value) ? value : [value]).filter((i) => i);\n      if (key === \"classType\" && this.actor.type === \"npc\") {\n        filters[key] = [...filters[key], \"npc\", \"racial\"];\n      }\n    }\n\n    // Inline filter customization\n    const custom = a.dataset.filters;\n    if (custom) {\n      const parts = custom.split(\";\");\n      for (const part of parts) {\n        const [key, value] = part.split(\"=\");\n        filters[key] = value.split(\",\");\n      }\n    }\n\n    // Special handling for level\n    if (cfg.level && a.dataset.level) {\n      filters.level = a.dataset.level;\n      const bookId = a.closest(\"[data-group][data-tab]\")?.dataset.tab;\n      if (bookId) {\n        const clsId = this.actor.system.attributes?.spells?.spellbooks?.[bookId]?.class;\n        if (clsId && clsId !== \"_hd\") {\n          filters.class = clsId;\n        }\n      }\n    }\n\n    browser._queueFilters(filters);\n    browser._render(true, { focus: true });\n  }\n\n  /**\n   * Handle opening a skill's compendium entry\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onOpenCompendiumEntry(event) {\n    const uuid = event.currentTarget.dataset.compendiumEntry;\n\n    pf1.utils.openJournal(uuid);\n  }\n\n  _onRollConcentration(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollConcentration(spellbookKey, { token: this.token });\n  }\n\n  _onRollCL(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollCL(spellbookKey, { token: this.token });\n  }\n\n  _setItemActive(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const state = el.checked;\n    const itemId = el.closest(\".item\").dataset.itemId;\n\n    this.actor.items.get(itemId).setActive(state);\n  }\n\n  _onLevelUp(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    return LevelUpForm.increaseLevel(this.actor, item, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this.openItemSummary(li);\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @protected\n   * @param {JQuery<HTMLElement>} elem - The element to open. Likely will have the `item` class in CSS.\n   * @param {boolean} [instant=false] - Whether to instantly show the expansion (true), or animate it (false)\n   */\n  async openItemSummary(elem, { instant = false, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const listEl = elem.closest(\".item-list[data-list]\");\n    const list = listEl?.dataset.list;\n    const tab = listEl?.closest(\".tab[data-tab]\").dataset.tab;\n    const expandedId = `${tab}.${list}.${itemId}`;\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    // Toggle summary\n    if (elem.classList.contains(\"expanded\")) {\n      this._expandedItems.delete(expandedId);\n      const summary = elem.querySelector(\".item-summary\");\n      summary.inert = true;\n      if (instant) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const chatData = await item.getChatData({ chatcard: false, rollData });\n      const templateData = chatData;\n\n      const content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      let div = document.createElement(\"div\");\n      div.innerHTML = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.actor.isOwner });\n      div = div.firstElementChild; // The template has only one root element\n\n      if (!instant) $(div).hide();\n      elem.append(div);\n      if (!instant) $(div).slideDown(200);\n\n      this._expandedItems.add(expandedId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onInputText(event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    if (!elem || elem?.disabled) return;\n\n    elem.readOnly = false;\n    const value = foundry.utils.getProperty(this.actor, elem.name);\n\n    const origValue = elem.value;\n    elem.value = value;\n\n    let changed = false;\n\n    const wheelEvent = event instanceof WheelEvent;\n    if (wheelEvent) {\n      this._mouseWheelAdd(event, elem);\n    } else {\n      elem.select();\n    }\n\n    const handler = (event) => {\n      // Clear selection if any\n      const s = document.getSelection();\n      if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n\n      if (wheelEvent) elem.removeEventListener(\"pointerout\", handler);\n      else {\n        elem.removeEventListener(\"focusout\", handler);\n        elem.removeEventListener(\"keydown\", keyHandler);\n      }\n      elem.removeEventListener(\"click\", handler);\n\n      changed ||= `${value}` !== elem.value;\n\n      if (changed) {\n        this._onSubmit(event);\n      } else {\n        elem.readOnly = true;\n        elem.value = origValue;\n      }\n    };\n    const keyHandler = (event) => {\n      if (event.key === \"Enter\") {\n        changed = true;\n        handler(event);\n      }\n    };\n\n    if (wheelEvent) {\n      elem.addEventListener(\"pointerout\", handler, { passive: true });\n      changed = true;\n    } else {\n      elem.addEventListener(\"focusout\", handler, { passive: true });\n      elem.addEventListener(\"keydown\", keyHandler, { passive: true });\n    }\n    elem.addEventListener(\"click\", handler, { passive: true });\n  }\n\n  /* -------------------------------------------- */\n\n  async _onArbitrarySkillCreate(event) {\n    event.preventDefault();\n    const skillId = $(event.currentTarget).parents(\".skill\").attr(\"data-skill\");\n    const mainSkillData = this.actor.system.skills[skillId];\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: mainSkillData.ability,\n      rank: 0,\n      rt: mainSkillData.rt,\n      cs: mainSkillData.cs,\n      acp: mainSkillData.acp,\n    };\n\n    // Get tag\n    let count = 1;\n    let tag = `${skillId}${count}`;\n    while (mainSkillData.subSkills[tag] != null) {\n      count++;\n      tag = `${skillId}${count}`;\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${skillId}.subSkills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(skillId, tag);\n  }\n\n  async _onSkillCreate(event) {\n    event.preventDefault();\n    const isBackground = $(event.currentTarget).parents(\".skills-list\").attr(\"data-background\") === \"true\";\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: \"int\",\n      rank: 0,\n      mod: 0,\n      rt: false,\n      cs: false,\n      acp: false,\n      background: isBackground,\n      custom: true,\n    };\n\n    const baseName = skillData.name || \"skill\";\n    const baseTag = pf1.utils.createTag(baseName, { allowUnderScore: false });\n    let tag = baseTag;\n    let count = 1;\n    while (this.actor.system.skills[tag] != null) {\n      count++;\n      tag = baseTag + count.toString();\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(tag);\n  }\n\n  /**\n   * Opens a dialog to edit a skill.\n   *\n   * @param {string} skillId - The id of the skill in question.\n   * @param {string} [subSkillId] - The id of the subskill, if appropriate.\n   * @returns {Promise.<void>}\n   */\n  _editSkill(skillId, subSkillId) {\n    return new Promise((resolve) => {\n      const app = new pf1.applications.SkillEditor(this.actor, skillId, subSkillId);\n      app.addCallback(resolve);\n      app.render(true);\n    });\n  }\n\n  _onSkillEdit(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n\n    return this._editSkill(mainSkillId, subSkillId);\n  }\n\n  async _onSkillDelete(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n    const skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const info = this.actor.getSkillInfo(skillId);\n\n    const deleteSkill = () => {\n      const updateData = {};\n      // Delete subskill\n      if (subSkillId) updateData[`system.skills.${mainSkillId}.subSkills.-=${subSkillId}`] = null;\n      // Delete main skill\n      else updateData[`system.skills.-=${mainSkillId}`] = null;\n      this.actor.update(updateData);\n    };\n\n    let confirm = true;\n    if (!getSkipActionPrompt()) {\n      confirm = await foundry.applications.api.DialogV2.confirm({\n        window: { title: game.i18n.format(\"PF1.DeleteSkillTitle\", { name: info.fullName }), icon: \"fa-solid fa-trash\" },\n        content: `<p>${game.i18n.localize(\"PF1.DeleteSkillConfirmation\")}</p>`,\n        rejectClose: false,\n        modal: true, // Prevent other interactions until this dialog is resolved,\n      });\n    }\n    if (confirm) deleteSkill();\n  }\n\n  async _onPointBuyCalculator(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((app) => app instanceof PointBuyCalculator);\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new PointBuyCalculator({ document: this.actor }).render({ force: true });\n  }\n\n  async _onSensesSelector(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((app) => app instanceof pf1.applications.SensesSelector);\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new pf1.applications.SensesSelector({ document: this.actor }).render({ force: true });\n    }\n  }\n\n  async _onControlAlignment(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const items = Object.entries(pf1.config.alignmentsShort).map(([value, label]) => ({ value, label }));\n    const w = new Widget_ItemPicker(\n      (alignment) => {\n        this.actor.update({ \"system.details.alignment\": alignment });\n      },\n      { items, columns: 3 }\n    );\n    w.render($(a));\n  }\n\n  /**\n   * Activate an item from item control button.\n   *\n   * @param {MouseEvent} event Click event\n   */\n  _itemActivationControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.use({ ev: event, token: this.token });\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n\n    if (item.type === \"container\") newQuantity = Math.min(newQuantity, 1);\n\n    item.update({ \"system.quantity\": newQuantity });\n  }\n\n  async _quickEquipItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.setActive(!item.activeState);\n  }\n\n  async _quickCarryItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.carried\": !item.system.carried });\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.identified\": !item.system.identified });\n    }\n  }\n\n  async _itemPreparedToggle(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const property = el.dataset.name;\n\n    const updateData = { system: {} };\n    foundry.utils.setProperty(updateData.system, property, foundry.utils.getProperty(item.system, property) ? 0 : 1);\n    item.update(updateData);\n  }\n\n  /**\n   * Prepare duplicate item data\n   *\n   * @param {object} itemData\n   * @param {object} options\n   * @param {boolean} [options.rename]\n   * @param {ItemPF} [options.original]\n   */\n  _prepareDuplicateItem(itemData, { rename = true, original } = {}) {\n    delete itemData._id;\n\n    delete itemData.system.links?.children;\n    delete itemData.system.links?.charges;\n\n    itemData.sort = itemData.sort + 1_000;\n\n    if (original) {\n      itemData._stats ??= {};\n      itemData._stats.duplicateSource ||= original.uuid;\n    }\n\n    if (rename) {\n      // Build list of visible names in same general category.\n      const subType = itemData.system?.subType;\n      const relatedItems = this.actor.items.filter(\n        (i) =>\n          i.type === itemData.type &&\n          (subType ? subType === i.system?.subType : true) &&\n          (itemData.type === \"spell\" ? itemData.system.level === i.system.level : true)\n      );\n\n      const searchUnusedName = (name, existingNames) => {\n        name = name.replace(/\\s+\\(\\d+\\)$/, \"\");\n        let iter = 1;\n        let newName;\n        do {\n          iter += 1;\n          newName = `${name} (${iter})`;\n        } while (existingNames.has(newName));\n        return newName;\n      };\n\n      // Alter identified name\n      const identNames = new Set(relatedItems.map((i) => i.name)); // Explicit real name\n      itemData.name = searchUnusedName(itemData.name, identNames);\n\n      // Alter unidentified name if it exists\n      const unidentified = itemData.system.unidentified;\n      if (unidentified?.name && CONFIG.Item.documentClasses[itemData.type]?.isPhysical) {\n        const unidentNames = new Set(relatedItems.map((i) => i.getName(true))); // Player visible names instead of unidentified names\n        unidentified.name = searchUnusedName(unidentified.name, unidentNames);\n      }\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const itemData = item.toObject();\n\n    this._prepareDuplicateItem(itemData, { original: item });\n\n    await Item.implementation.create(itemData, { parent: this.actor, renderSheet: true });\n  }\n\n  _quickAction(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    if (!item) return;\n\n    return item.use({ token: this.token });\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n    const category = a.dataset.category;\n\n    this.actor.convertCurrency(category, currencyType);\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n\n    createData.name = Item.implementation.defaultName({ type, subType, parent: this.actor });\n    const newItem = new Item.implementation(createData);\n\n    // Add type specific data\n    switch (type) {\n      case \"spell\": {\n        newItem.updateSource({\n          system: {\n            level: parseInt(el.dataset.level),\n            spellbook: el.dataset.book,\n          },\n        });\n        break;\n      }\n      case \"feat\":\n        // Add class association to class features\n        if (newItem.subType === \"classFeat\" && !newItem.system.class) {\n          const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n          if (classes.length > 0) {\n            newItem.updateSource({ system: { class: classes[0].system.tag } });\n          }\n        }\n        break;\n    }\n\n    this._sortNewItem(newItem);\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) {\n        newName = `${baseName} (${i++})`;\n      }\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    return Item.implementation.create(newItem.toObject(), { parent: this.actor, renderSheet: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle editing an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true });\n  }\n\n  /**\n   * Handle deleting an existing Owned Item for the Actor\n   *\n   * @private\n   * @param {Event} event   The originating click event\n   * @returns {Promise<*>} - Promise for when the interaction completes\n   */\n  async _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    button.disabled = true;\n\n    if (getSkipActionPrompt()) return item.delete();\n\n    // Find linked items that would be deleted with this\n    const linked = new Set();\n    /**\n     * @param {ItemPF} item\n     */\n    const findAllLinks = (item) => {\n      linked.add(item);\n      const links = item.getLinkedItemsSync(\"children\");\n      for (const i of links) {\n        if (linked.has(i)) continue;\n        findAllLinks(i);\n      }\n    };\n    findAllLinks(item);\n    // Find class associations\n    if (item.type === \"class\") {\n      const associations = item.getFlag(\"pf1\", \"links.classAssociations\") ?? {};\n      for (const itemId of Object.keys(associations)) {\n        const item = this.actor.items.get(itemId);\n        if (item) linked.add(item);\n      }\n    }\n    linked.delete(item); // Don't notify about self\n\n    const templateData = {\n      linked: [...linked].map((i) => ({\n        name: i.name,\n        uuid: i.uuid,\n        type: game.i18n.localize(CONFIG.Item.typeLabels[i.type]),\n      })),\n    };\n\n    const msg = await renderTemplate(\"systems/pf1/templates/internal/delete-item.hbs\", templateData);\n\n    const confirm = await foundry.applications.api.DialogV2.confirm({\n      window: { title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }), icon: \"fa-solid fa-trash\" },\n      classes: [\"pf1-v2\", \"delete-item\"],\n      content: msg,\n      rejectClose: false,\n      modal: true, // Require dialog to be resolved\n    });\n\n    if (confirm) item.delete();\n\n    button.disabled = false;\n  }\n\n  async _onItemGive(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const targets = game.actors.filter(\n      (a) => a !== this.actor && a.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)\n    );\n    if (targets.length === 0) ui.notifications.warn(\"PF1.Error.NoGiftTargets\", { localize: true });\n\n    const targetActorId = await pf1.utils.dialog.getActor({\n      window: {\n        title: game.i18n.localize(\"PF1.GiveItemToActor\"),\n      },\n      actors: targets,\n    });\n\n    const target = game.actors.get(targetActorId);\n    if (!target) throw new Error(`Invalid actor ID as gift target: \"${targetActorId}\"`);\n\n    if (target.isOwner) {\n      const itemData = item.toObject();\n      delete itemData.system?.links?.children;\n      const newItem = await Item.implementation.create(itemData, { parent: target });\n      // Delete only if item was successfully created\n      if (newItem) await item.delete();\n    } else {\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"giveItem\",\n        targetActor: target.uuid,\n        item: item.uuid,\n      });\n      // Deleting will be performed on the gm side as well to prevent race conditions\n    }\n  }\n\n  async _onItemSplit(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const quantity = item.system.quantity;\n    if (quantity < 2) throw new Error(\"Can't split stack with less than 2 items\");\n\n    const options = {\n      total: quantity,\n      title: game.i18n.format(\"PF1.Dialog.SplitItem.Title\", { name: item.name }),\n    };\n\n    // Position the dialog near click location\n    const clickEl = event.target.getBoundingClientRect();\n    const renderOpts = {\n      position: {\n        width: 320,\n        left: clickEl.left - 350,\n        top: clickEl.top - 80,\n      },\n    };\n\n    const result = await pf1.applications.SplitStack.wait(options, renderOpts);\n    if (!result) return;\n\n    const [keep, split] = result;\n\n    const itemData = item.toObject();\n    itemData.system.quantity = split;\n\n    this._prepareDuplicateItem(itemData, { rename: false, original: item });\n\n    await Item.implementation.createDocuments([itemData], { parent: this.actor });\n    await item.update({ \"system.quantity\": keep });\n  }\n\n  /**\n   * Handle rolling an Ability check, either a test or a saving throw\n   *\n   * @protected\n   * @param {Event} event   The originating click event\n   */\n  _onRollAbilityTest(event) {\n    event.preventDefault();\n\n    /** @type {AbilityId} */\n    const ability = event.currentTarget.closest(\".ability\").dataset.ability;\n    this.actor.rollAbilityTest(ability, { token: this.token });\n  }\n\n  /**\n   * Roll basic BAB check\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollBAB(event) {\n    event.preventDefault();\n\n    this.actor.rollBAB({ token: this.token });\n  }\n\n  /**\n   * Roll generic attack\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollAttack(event) {\n    event.preventDefault();\n    /** @type {HTMLElement} */\n    let el = event.target;\n    if (!el.classList.contains(\"rollable\")) el = el.closest(\".rollable\");\n\n    const maneuver = el.dataset.type !== \"weapon\";\n    const ranged = el.dataset.ranged === \"true\";\n\n    this.actor.rollAttack({ maneuver, ranged, token: this.token });\n  }\n\n  /**\n   * Roll initiative\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollInitiative(event) {\n    event.preventDefault();\n\n    this.actor.rollInitiative({\n      createCombatants: true,\n      rerollInitiative: game.user.isGM,\n      token: this.token,\n    });\n  }\n\n  /**\n   * Roll saving throw\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onRollSavingThrow(event) {\n    event.preventDefault();\n\n    /** @type {SaveId} */\n    const saveId = event.currentTarget.closest(\".saving-throw\").dataset.savingthrow;\n    this.actor.rollSavingThrow(saveId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) return false;\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items\n   *\n   * @protected\n   * @param {object} context - Render context\n   */\n  _prepareItems(context) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => foundry.utils.deepClone(data))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const section of inventory) {\n      this._prepareSection(section);\n    }\n\n    // Partition items by category\n    const [items, spells, other] = context.items.reduce(\n      (arr, item) => {\n        if (item.type === \"spell\") arr[1].push(item);\n        else if (item.isPhysical) arr[0].push(item);\n        else arr[2].push(item);\n        return arr;\n      },\n      [[], [], []]\n    );\n\n    // Organize Spellbook\n    let hasASF = false;\n    let hasSpellbooks = false;\n    const spellbookSections = {};\n    const spellbooks = context.system.attributes.spells.spellbooks;\n    for (const [bookId, spellbook] of Object.entries(spellbooks)) {\n      // Required for spellbook selection in settings\n      spellbookSections[bookId] = { ...spellbook };\n      // The rest are unnecessary processing if spellbook is not enabled\n      if (!spellbook.inUse) continue;\n      hasSpellbooks = true;\n      const book = spellbookSections[bookId];\n      const spellbookSpells = spells.filter((obj) => obj.spellbook === bookId);\n      book.sections = this._prepareSpellbook(context, spellbookSpells, bookId);\n      book.prepared = spellbookSpells.filter(\n        (obj) => obj.preparation.mode === \"prepared\" && obj.preparation.prepared\n      ).length;\n      book.rollData = context.rollData.spells[bookId];\n      book.classId = spellbook.class;\n      book.class = context.rollData.classes[spellbook.class];\n      if (spellbook.arcaneSpellFailure) hasASF = true;\n    }\n\n    if (hasASF) {\n      // TODO: Make ASF proper change target\n      const asf = this.actor.itemTypes.equipment\n        .filter((item) => item.isActive)\n        .reduce((cur, item) => {\n          const itemASF = item.system.spellFailure || 0;\n          return cur + itemASF;\n        }, 0);\n\n      context.asf = {\n        total: asf,\n      };\n    }\n\n    // Class selection list, only used by spellbooks\n    if (hasSpellbooks) {\n      const lang = game.settings.get(\"core\", \"language\");\n      const allClasses = this.actor.itemTypes.class\n        .map((cls) => [cls.system.tag, cls.name])\n        .sort(([_0, a], [_1, b]) => a.localeCompare(b, lang));\n      allClasses.unshift([\"_hd\", game.i18n.localize(\"PF1.HitDie\")]);\n      context.classList = Object.fromEntries(allClasses);\n    }\n\n    // Implant capacity\n    const ct = game.settings.get(\"pf1\", \"cybertech\");\n    // All implanted cybertech applies, even disabled as long as they're implanted\n    const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n    if (ct || cybertech.length) {\n      const load = cybertech.reduce((total, item) => total + (item.system.implant || 0), 0);\n      const abilities = this.actor.system.abilities ?? {};\n      context.implants = {\n        load,\n        max: Math.min(abilities.int?.total, abilities.con?.total),\n      };\n    }\n\n    // Organize Inventory\n    for (const item of items) {\n      const section = inventory.find((section) => this._applySectionFilter(item, section));\n      if (section) {\n        this._prepareItemForSection(item, section, context);\n        section.items ??= [];\n        section.items.push(item);\n      }\n    }\n\n    // Remove implant section if cybertech is disabled and no implants are present\n    if (!ct && this.actor.itemTypes.implant.length === 0) {\n      inventory.findSplice((cat) => cat.id === \"implants\");\n    }\n\n    // Organize Features\n    const featureSections = Object.values(pf1.config.sheetSections.features)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const ablType = i.abilityType;\n      i.typelabel = pf1.config.abilityTypes[ablType]?.short || pf1.config.abilityTypes.na.short;\n\n      const section = featureSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    if (this.actor.itemTypes.feat.length) {\n      const section = featureSections.find((f) => f.path === \"features.feat\");\n      section.issues = {\n        found: context.featCount?.issues > 0,\n        missing: context.featCount?.missing || 0,\n        excess: context.featCount?.excess || 0,\n        get discrepancy() {\n          if (!pf1.config.featCount) return 0;\n          return Math.abs(this.missing - this.excess);\n        },\n      };\n    }\n\n    // Buffs\n    const buffSections = Object.values(pf1.config.sheetSections.buffs)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of other) {\n      const section = buffSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Attacks\n    let attackSections = Object.values(pf1.config.sheetSections.combat)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // TODO: Support weapons in combat tab\n    for (const i of other) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Add secondary references to items in certain sections\n    // Unlike others, these are in addition to the normal locations instead of exclusive\n    // TODO: Refactor this to be controlled by the sections config\n    const cweapons = attackSections.find((c) => c.id === \"weapon\");\n    if (cweapons) cweapons.items = items.filter((i) => i.type === \"weapon\" && i.document.system.showInCombat);\n    const cspells = attackSections.find((c) => c.id === \"spell\");\n    if (cspells) cspells.items = spells.filter((i) => i.document.system.showInCombat);\n    const feats = other.filter((i) => i.type === \"feat\" && i.document.system.showInCombat);\n    const cfeat = attackSections.find((c) => c.id === \"feat\");\n    if (cfeat) cfeat.items = feats.filter((i) => i.subType === \"feat\");\n    const classfeat = attackSections.find((c) => c.id === \"classFeat\");\n    if (classfeat) classfeat.items = feats.filter((i) => i.subType === \"classFeat\");\n    const racefeat = attackSections.find((c) => c.id === \"racial\");\n    if (racefeat) racefeat.items = feats.filter((i) => i.subType === \"racial\");\n    const miscfeat = attackSections.find((c) => c.id === \"miscFeat\");\n    if (miscfeat) miscfeat.items = feats.filter((i) => i.subType === \"misc\");\n    const cequipment = attackSections.find((c) => c.id === \"equipment\");\n    if (cequipment) cequipment.items = items.filter((i) => i.type === \"equipment\" && i.document.system.showInCombat);\n    const cconsumables = attackSections.find((c) => c.id === \"consumable\");\n    if (cconsumables)\n      cconsumables.items = items.filter((i) => i.type === \"consumable\" && i.document.system.showInCombat);\n\n    // Hide empty sections if they're marked to be hidden\n    attackSections = attackSections.filter((i) => !(i.hideEmpty && !(i.items?.length > 0)));\n\n    // Classes\n    const classSections = Object.values(pf1.config.sheetSections.classes)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const section = classSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    const categories = [\n      { key: \"inventory\", sections: inventory },\n      { key: \"features\", sections: featureSections },\n      { key: \"buffs\", sections: buffSections },\n      { key: \"attacks\", sections: attackSections },\n    ];\n\n    for (const [bookId, sb] of Object.entries(spellbookSections)) {\n      if (!sb.inUse) continue;\n      if (!sb.sections) console.warn(bookId, sb);\n      categories.push({ key: `spellbook-${bookId}`, sections: sb.sections });\n    }\n\n    // Apply section filters\n    for (const cat of categories) {\n      const set = this._filters.sections[cat.key];\n      if (!set) continue;\n\n      for (const section of cat.sections) {\n        if (!section) continue;\n\n        this._filterSection(cat, section, set);\n      }\n    }\n\n    // Assign and return\n    context.inventory = inventory;\n    context.spellbookData = spellbookSections;\n    context.features = featureSections;\n    context.buffs = buffSections;\n    context.attacks = attackSections;\n    context.classes = classSections;\n    context.quickActions = this.actor.getQuickActions();\n  }\n\n  /**\n   * Filter inventory section\n   *\n   * Called in {@link _prepareItems()}\n   *\n   * @internal\n   * @param {object} category - Category data\n   * @param {object} section - Section data\n   * @param {Set<string>} filters - Active filters\n   */\n  _filterSection(category, section, filters) {\n    // Prepare special filters\n    let min = 0;\n    section._preparedOnly = filters.has(\"prepared\");\n    section._hideEmpty = filters.has(\"empty\");\n    if (section._preparedOnly) min += 1;\n    if (section._hideEmpty) min += 1;\n\n    const inFilters = filters.has(section.id);\n\n    section._hidden = filters.size > min && !inFilters;\n\n    // Special handling for prepared filter\n    if (section._preparedOnly) {\n      section.items = section.items.filter((i) => i.maxCharges > 0);\n    }\n    // Hide empty section if filtered for it\n    if (section._hideEmpty && !inFilters && !(section.items?.length > 0)) {\n      section._hidden = true;\n    }\n  }\n\n  /**\n   * Handle rolling a Skill check\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollSkillCheck(event) {\n    event.preventDefault();\n    const el = event.target;\n    const skill = el.dataset.skill;\n    const subSkill = el.dataset.subSkill;\n    const skillId = subSkill ? `${skill}.${subSkill}` : skill;\n\n    this.actor.rollSkill(skillId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling of filters to display a different set of owned items\n   *\n   * @param {Event} event     The click event which triggered the toggle\n   * @private\n   */\n  _onToggleFilter(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget;\n    const { category, filter } = li.dataset;\n    const set = (this._filters.sections[category] ??= new Set());\n\n    const tabLikeFilters = game.settings.get(\"pf1\", \"invertSectionFilterShiftBehaviour\")\n      ? !event.shiftKey\n      : event.shiftKey;\n\n    if (tabLikeFilters) {\n      for (const f of Array.from(set)) {\n        if (f !== filter) {\n          set.delete(f);\n        }\n      }\n    }\n\n    if (set.has(filter)) set.delete(filter);\n    else set.add(filter);\n    this.render();\n  }\n\n  _searchFilterCommit(event) {\n    const actor = this.actor;\n    const search = this._filters.search[event.target.dataset.category].toLowerCase();\n    const category = event.target.dataset.category;\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch[category] === search && !this.searchRefresh) return;\n    this.effectiveSearch[category] = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = actor.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const category = event.target.dataset.category;\n    const changed = this._filters.search[category] !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this._filters.search[category] = search;\n\n    if (event.type === \"input\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const label = a.parentElement.querySelector(\"label\");\n\n    const collator = new Intl.Collator(game.i18n.lang, { numeric: true, ignorePunctuation: false });\n    const sortTuple = (arr) => arr.sort(([_0, a], [_1, b]) => collator.compare(a, b));\n\n    let choices;\n    if (a.dataset.options in pf1.registry) {\n      let entries = pf1.registry[a.dataset.options];\n      if (a.dataset.resist) entries = entries.filter((e) => e.resist);\n      choices = entries.map((e) => [e.id, e.name]);\n      sortTuple(choices);\n      choices = Object.fromEntries(choices);\n    } else {\n      choices = pf1.config[a.dataset.options];\n    }\n\n    const path = a.dataset.for;\n\n    const options = {\n      name: path,\n      title: label.innerText,\n      subject: a.dataset.options,\n      hasCustom: a.dataset.hasCustom !== \"false\",\n      choices,\n    };\n\n    const app = Object.values(this.actor.apps).find(\n      (app) => app instanceof ActorTraitSelector && app.options.name === options.name\n    );\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new ActorTraitSelector({ ...options, document: this.actor }).render({ force: true });\n  }\n\n  /**\n   * Handle spawning the ActorResistanceSelector application which allows a number entry of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onResistanceSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const options = {\n      name: a.dataset.for,\n      title: a.innerText,\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n      width: a.dataset.options === \"dr\" ? 575 : 450,\n      isDR: a.dataset.options === \"dr\",\n    };\n\n    const app = Object.values(this.actor.apps).find(\n      (app) => app instanceof DamageResistanceSelector && app.options.name === options.name\n    );\n\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new DamageResistanceSelector({ document: this.actor, ...options }).render(true);\n    }\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  /** @override */\n  _render(force, options = {}) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n\n  /** @override */\n  async _renderInner(...args) {\n    const jq = await super._renderInner(...args);\n\n    const html = jq[0];\n\n    // Re-open item summaries\n    for (const expandedId of this._expandedItems) {\n      const [tab, listId, itemId] = expandedId.split(\".\");\n      // Only display summaries of items that are still present\n      let elem;\n      if (this.actor.items.has(itemId)) {\n        let parent = html.querySelector(`.tab[data-tab='${tab}']`);\n        if (listId) parent = parent.querySelector(`.item-list[data-list='${listId}']`);\n        elem = parent?.querySelector(`.item[data-item-id=\"${itemId}\"]`);\n      }\n\n      if (elem) this.openItemSummary(elem, { instant: true });\n      // Delete IDs belonging to items no longer found in the actor\n      else this._expandedItems.delete(expandedId);\n    }\n\n    return jq;\n  }\n\n  async _onSubmit(event, { updateData = null, preventClose = false, preventRender = false } = {}) {\n    event.preventDefault();\n\n    if (this._itemUpdates?.length) preventRender = true;\n\n    await super._onSubmit(event, { updateData, preventClose, preventRender });\n\n    // Update items\n    await this._updateItems();\n  }\n\n  async _updateItems() {\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const item = this.actor.items.get(d._id);\n      if (!item) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      delete d._id;\n      await item.update(d);\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    const { currency, amount, containerId, alt } = data;\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: containerId, alt },\n      { actor: this.actor, amount: Object.fromEntries([[currency, parseInt(amount)]]) }\n    ).render(true);\n  }\n\n  /**\n   * @override\n   */\n  async _onDropItem(event, data) {\n    if (!this.actor.isOwner) return void ui.notifications.warn(\"PF1.Error.NoActorPermission\", { localize: true });\n\n    const sourceItem = await Item.implementation.fromDropData(data);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n    const sameActor = sourceItem.actor === this.actor && !data.containerId;\n\n    const itemData = game.items.fromCompendium(sourceItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Handle item sorting within the same actor\n    if (sameActor) return this._onSortItem(event, itemData);\n\n    // Make item unidentified if ALT is held\n    // Alt is used for this as it also hides tokens when placed on scene\n    if (sourceItem.isPhysical && game.user.isGM && event.altKey) {\n      if (itemData.system.identified !== false) {\n        console.debug(\"PF1 | User Input: Alt | Force unidentifying added item:\", itemData.name);\n        itemData.system.identified = false;\n      }\n    }\n\n    // Create the owned item\n    this._alterDropItemData(itemData, sourceItem);\n    const rv = await this._onDropItemCreate(itemData);\n\n    // Remove from container if item was successfully created\n    if (data.containerId && rv?.length && sourceActor === this.actor) {\n      const container = this.actor.allItems.find((o) => o.id === data.containerId);\n      if (container) container.deleteContainerContent(data.itemId);\n    }\n\n    return rv;\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Item data\n   * @param {pf1.documents.item.ItemPF} source - Source item\n   */\n  _alterDropItemData(data, source) {\n    // Identify source location\n    const fromCompendium = !!source.pack;\n    const fromActor = !!source.parent;\n    const fromItemsDir = !fromCompendium && !fromActor && !!source.id;\n\n    // Certain items for NPC should be unidentified by default\n    if (\n      game.user.isGM && // Only do this as GM\n      !this.actor.hasPlayerOwner && // Only if the target sheet is not owned by player\n      this.actor.type !== \"character\" && // It's an NPC actor\n      source.isPhysical && // Physical item\n      fromCompendium && // From compendium, dragging between actors should be ignored\n      data.system.identified !== false && // Is not already unidentifed\n      // We need to check if the item either have Caster Level beyond 0 or it's a drug or poison\n      (source.system?.cl > 0 || [\"drug\", \"poison\"].includes(source.system.subType))\n    ) {\n      console.debug(\"PF1 | Force unidentifying magical/drug/poison item:\", data.name);\n      data.system.identified = false;\n    }\n\n    // Set spellbook to currently viewed one\n    if (data.type === \"spell\") {\n      data.system.spellbook = this.currentSpellbookKey;\n    }\n\n    // Apply actor size to physical items, assuming they're appropriately sized for them\n    // But do so only when the drop originates from compendium or items directory\n    if (source.isPhysical) {\n      if (fromCompendium || fromItemsDir) {\n        data.system.size = this.actor.system.traits?.size?.base || \"med\";\n      }\n    }\n  }\n\n  /**\n   * Sort item at the bottom of the list instead of seemingly random position\n   *\n   * @private\n   * @param {ItemPF} item - Temporary item to do sorting on.\n   */\n  _sortNewItem(item) {\n    const type = item.type;\n\n    const isClass = type === \"class\";\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => (isClass ? true : pf1.utils.isItemSameSubGroup(item, oldItem)))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      item._source.sort = oldItems[0].sort + CONST.SORT_INTEGER_DENSITY;\n    }\n  }\n\n  /**\n   * Adjust item before addition, overriding data\n   *\n   * @internal\n   * @param data\n   * @param {ItemPF} item - Temporary item document before creation\n   */\n  _adjustNewItem(item, data) {\n    item.constructor._adjustNewItem?.(item, data, true);\n  }\n\n  async _onDropItemCreate(itemData) {\n    const itemDatas = itemData instanceof Array ? itemData : [itemData];\n\n    const creationData = [];\n    for (const itemData of itemDatas) {\n      delete itemData._id;\n\n      // Assign associated class if actor has only one class\n      if (itemData.type === \"feat\" && itemData.system?.subType === \"classFeat\") {\n        // Available classes ordered by level\n        const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n        if (classes.length === 0) {\n          // Nothing to do\n        }\n        // Only one choice\n        else if (classes.length === 1) {\n          itemData.system.class = classes[0].system.tag;\n        }\n        // Query which class to associate with\n        else {\n          const options = {\n            window: {\n              title: `${game.i18n.format(\"PF1.SelectSpecific\", {\n                specifier: game.i18n.localize(\"TYPES.Item.class\"),\n              })} - ${itemData.name} - ${this.actor.name}`,\n            },\n            actor: this.actor,\n            empty: true,\n            items: classes,\n            selected: classes[0]?.id, // Default to highest level class\n          };\n\n          // Test if there's more appropriate default class\n          if (classes.length > 1) {\n            const cls = classes.find((cls) => itemData.system?.associations?.classes?.includes(cls.name));\n            if (cls) options.selected = cls.id;\n          }\n\n          const cls = await pf1.utils.dialog.getItem(options);\n          if (cls) itemData.system.class = cls.system.tag;\n          // TODO: Cancel if dialog was closed or no class was selected?\n        }\n      }\n\n      // Import spell as consumable\n      if (itemData.type === \"spell\" && this.currentPrimaryTab !== \"spellbook\") {\n        const spells = this.actor.system.attributes?.spells?.spellbooks ?? {};\n        const spellType = spells[this.currentSpellbookKey]?.kind || \"arcane\";\n\n        const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n          spellType,\n          actor: this.actor,\n          allowSpell: Object.values(spells).some((s) => s.inUse),\n        });\n\n        if (resultData) {\n          creationData.push(resultData);\n          continue;\n        } else if (resultData === null) continue;\n        // else continue with regular spell creation\n      }\n\n      const newItem = new Item.implementation(itemData, { parent: this.actor });\n      this._sortNewItem(newItem);\n      this._adjustNewItem(newItem, itemData);\n\n      // Choose how to import class\n      if (itemData.type === \"class\") {\n        if (!(event && event.shiftKey)) {\n          // Set new class to be always level 1\n          newItem.updateSource({ system: { level: 1 } });\n\n          const cls = await LevelUpForm.addClassWizard(this.actor, newItem.toObject(), { token: this.token });\n          if (cls && itemDatas.length === 1) this._focusTabByItem(cls);\n          continue;\n        }\n      }\n\n      creationData.push(newItem.toObject());\n    }\n\n    if (creationData.length === 1) this._focusTabByItem(creationData[0]);\n\n    return this.actor.createEmbeddedDocuments(\"Item\", creationData);\n  }\n\n  /**\n   * Focuses certain tab based on provided item.\n   *\n   * @internal\n   * @param {*} item\n   */\n  _focusTabByItem(item) {\n    let tabId;\n    switch (item.type) {\n      case \"race\":\n      case \"class\":\n        tabId = \"summary\";\n        break;\n      case \"spell\":\n        // Focus also the subtab\n        this.activateTab(item.system.spellbook || \"primary\", { group: \"spellbooks\" });\n        tabId = \"spellbook\";\n        break;\n      case \"buff\":\n        tabId = \"buffs\";\n        break;\n      case \"feat\":\n        tabId = \"feats\";\n        break;\n      case \"weapon\":\n      case \"equipment\":\n      case \"consumable\":\n      case \"loot\":\n      case \"container\":\n        tabId = \"inventory\";\n        break;\n      case \"attack\":\n        tabId = \"combat\";\n        break;\n    }\n\n    if (tabId) this.activateTab(tabId, { group: \"primary\" });\n  }\n\n  /**\n   * Allow drag start always.\n   * Foundry blocks this if sheet is not editable, which blocks copying items.\n   *\n   * @override\n   * @param {string} selector Selector string\n   */\n  _canDragStart(selector) {\n    // Conditionally block currency transfer\n    if (selector.includes(\".denomination\")) return this.isEditable;\n    return true;\n  }\n\n  _onDragStart(event) {\n    const elem = event.target;\n    if (elem.classList.contains(\"denomination\")) {\n      const isAlt = elem.classList.contains(\"alt-currency\");\n      const denomination = elem.dataset.denomination;\n      const currency = isAlt ? this.actor.system.altCurrency : this.actor.system.currency;\n      const dragData = {\n        actorUuid: this.actor.uuid,\n        type: \"Currency\",\n        alt: isAlt,\n        currency: denomination,\n        amount: currency[denomination],\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } else if (elem.dataset?.skill) {\n      this._onDragSkillStart(event);\n    } else if (elem.dataset?.attribute) {\n      this._onDragMiscStart(event, elem.dataset.attribute);\n    } else if (elem.dataset?.drag) {\n      this._onDragMiscStart(event, elem.dataset.drag);\n    } else if (elem.dataset?.savingthrow) {\n      this._onDragSaveStart(event, elem.dataset.savingthrow);\n    } else if (elem.dataset?.ability) {\n      this._onDragMiscStart(event, \"abilityScore\", elem.dataset.ability);\n    } else if (elem.dataset?.attack) {\n      this._onDragMiscStart(event, \"attack\", elem.dataset.attack);\n    } else {\n      super._onDragStart(event);\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n\n  _updateObject(event, formData) {\n    this.searchRefresh = true;\n\n    return super._updateObject(event, formData);\n  }\n\n  calculateTotalItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((item) => item.isPhysical && item.system.price != null);\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: 1, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  calculateSellItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((o) => o.system.price != null);\n    const sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\") || 0.5;\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: sellMultiplier, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * @override\n   * @param {HTMLElement} form\n   */\n  _disableFields(form) {\n    super._disableFields(form);\n\n    // Ensure search inputs are always functional\n    for (const el of form.getElementsByTagName(\"INPUT\")) {\n      if (el.type === \"search\") el.disabled = false;\n    }\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for player character type actors in the PF system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFCharacter extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"character\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/character-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const context = await super.getData();\n    const xpSettings = game.settings.get(\"pf1\", \"experienceConfig\");\n\n    // Experience Tracking\n    context.disableExperience = xpSettings.disable;\n    context.showXpBar = !xpSettings.disable;\n    if (!xpSettings.disable) {\n      context.minimumExperience = this.actor.getLevelExp(\n        Math.max(0, (this.actor.system.details.level.value ?? 0) - 1),\n        {\n          rollData: context.rollData,\n        }\n      );\n    }\n\n    context.hasClasses = this.actor.itemTypes.class.length > 0;\n\n    // Add level up buttons to classes\n    if (xpSettings.disable !== true && context.hasClasses) {\n      const xp = this.actor.system.details?.xp;\n      if (xp && xp.value >= xp.max) {\n        context.levelUp = true;\n\n        // Max level check\n        const xpTrack = xpSettings.track;\n        if ([\"fast\", \"medium\", \"slow\"].includes(xpTrack)) {\n          const level = this.actor.system.details.level.value;\n          const levels = pf1.config.CHARACTER_EXP_LEVELS[xpTrack];\n          if (level >= levels.length) {\n            context.levelUp = false;\n          }\n        }\n      }\n    } else {\n      context.levelUp = true;\n    }\n\n    // Return data for rendering\n    return context;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for NPC type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFNPC extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"npc\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n\n    // Challenge Rating\n    data.labels.cr = pf1.utils.CR.fromNumber(this.actor.system.details?.cr?.total ?? 0);\n\n    data.levelUp = true;\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Object Updates                              */\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Adjust CR\n    html.find(\"span.text-box.cr-input\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = pf1.utils.CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLite extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"lite\"],\n      width: 440,\n      height: 640,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n    };\n  }\n\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet-lite.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n    context.hasHD = false;\n    return context;\n  }\n\n  _prepareItems(data) {\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of data.items) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n\n  /** @inheritDoc */\n  _focusTabByItem(item) {\n    // Only one tab exists for items\n    this.activateTab(\"summary\", { group: \"primary\" });\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLoot extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"loot\"],\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"inventory\", group: \"primary\" },\n      ],\n      width: 620,\n      height: 420,\n    };\n  }\n\n  get template() {\n    return \"systems/pf1/templates/actors/npc-sheet-loot.hbs\";\n  }\n\n  get currentPrimaryTab() {\n    return \"inventory\";\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n\n    context.isLootSheet = true;\n    context.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n\n    // Set labels\n    context.labels ??= {};\n    context.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", context.sellValue);\n\n    context.labels.currency = `PF1.Currency.Inline.${this.itemValueDenomination}`;\n\n    return context;\n  }\n\n  /** @inheritDoc */\n  _prepareSection(section) {\n    super._prepareSection(section);\n\n    // Alter inventory columns\n    section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFHaunt extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"haunt\"],\n      width: 880,\n      height: 700,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/haunt-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.details.notes\", \"system.details.effect\", \"system.details.destruction\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @returns {Promise<object>} The data object to render the sheet\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.actor.system,\n      measureTemplateTypes: pf1.utils.internal.getTemplateTypes(),\n      hasHD: false,\n      fields: this.actor.system.schema.fields,\n      units: game.i18n.localize(\n        pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n      ),\n    };\n\n    const rollData = this.actor.getRollData();\n    context.rollData = rollData;\n\n    // Labels\n    context.labels = {\n      cr: pf1.utils.CR.fromNumber(context.system.details.cr.total),\n      alignment: context.config.alignments[context.system.details.alignment],\n    };\n\n    const auraStrength = context.rollData.auraStrength;\n    if (auraStrength) {\n      context.labels.auraStrength = pf1.config.auraStrengths[auraStrength];\n    }\n\n    // Enrich description and notes\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const destruction = context.system.details?.destruction;\n    const pDestruction = destruction ? pf1.utils.enrichHTMLUnrolled(destruction, enrichHTMLOptions) : Promise.resolve();\n    pDestruction.then((html) => (context.destructionHTML = html || noDesc));\n    const effect = context.system.details?.effect;\n    const pEffect = effect ? pf1.utils.enrichHTMLUnrolled(effect, enrichHTMLOptions) : Promise.resolve();\n    pEffect.then((html) => (context.effectHTML = html || noDesc));\n    const notes = context.system.details?.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pDestruction, pEffect, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Prepare Templates\n    const trait = context.system.templates;\n    const values = trait.total;\n\n    const pTemplates = values.reduce((arr, t) => {\n      arr.push(\n        context.config.hauntTemplates[t]\n          ? TextEditor.enrichHTML(`@UUID[${context.config.hauntTemplates[t].uuid}]`)\n          : TextEditor.enrichHTML(`@UUID[${t}]{${t}}`)\n      );\n      return arr;\n    }, []);\n    const templateLinks = await Promise.all(pTemplates);\n    trait.selected = await values.reduce((obj, t, index) => {\n      const link = templateLinks[index];\n      obj[t] = {\n        name: context.config.hauntTemplateLabels[t] || t,\n        link,\n        broken: link === t,\n      };\n\n      return obj;\n    }, {});\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    const actor = this.actor;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id } = re?.groups ?? {};\n\n    switch (id) {\n      case \"cl\":\n        paths.push({ path: \"@details.cl\", value: lazy.rollData.details.cl }, { path: \"@cl\", value: lazy.rollData.cl });\n        break;\n      case \"health\":\n        paths.push(\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max }\n        );\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context - The data object to render the sheet\n   * @private\n   * @override\n   * @returns {void}\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const value = formData.system.details.area?.size;\n    if (Number.isFinite(value)) {\n      formData.system.details.area.size = pf1.utils.convertDistanceBack(value)[0];\n    }\n\n    return super._updateObject(event, formData);\n  }\n\n  /** @inheritDoc */\n  _focusTabByItem(item) {\n    // Only one tab exists for items\n    this.activateTab(\"summary\", { group: \"primary\" });\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFTrap extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"trap\"],\n      width: 600,\n      height: 700,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/trap-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.notes\", \"system.effect\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @override\n   * @returns {Promise<object>} The data object to render the sheet with\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      hasHD: false,\n      fields: this.actor.system.schema.fields,\n      rollData: this.actor.getRollData(),\n      perception: this.actor.getPerceptionModifier(),\n    };\n\n    // Trigger Types\n    if (!(context.system.type in pf1.config.traps.types)) {\n      context.trapTypes = foundry.utils.mergeObject(\n        { [`${context.system.type}`]: context.system.type },\n        pf1.config.traps.types\n      );\n    } else {\n      context.trapTypes = pf1.config.traps.types;\n    }\n\n    // Challenge Rating\n    context.labels = {\n      cr: pf1.utils.CR.fromNumber(context.system.cr.total),\n    };\n\n    // Trigger info\n    if ([\"proximity\", \"visual\", \"timed\"].includes(context.system.trigger.type)) {\n      context.hasTriggerRange = true;\n\n      if (context.system.trigger.type === \"timed\") context.hasTriggerTime = true;\n    }\n    context.hasPerceptionTrigger = [\"electricEyes\", \"genetic\", \"sound\", \"visual\"].includes(context.system.trigger.type);\n\n    // Enrich effects and notes\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const effect = context.system.effect;\n    const pEffect = effect ? pf1.utils.enrichHTMLUnrolled(effect, enrichHTMLOptions) : Promise.resolve();\n    pEffect.then((html) => (context.effectHTML = html || noDesc));\n    const notes = context.system.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pEffect, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {pf1.documents.actor.ActorTrapPF} */\n    const actor = this.actor;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id } = re?.groups ?? {};\n\n    switch (id) {\n      case \"detect\":\n        paths.push({ path: \"@perception\", value: lazy.rollData.perception });\n        break;\n      case \"disarm\":\n        paths.push({ path: \"@disarm\", value: lazy.rollData.disarm });\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery<HTMLElement>} jq   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    /** @type {Document} */\n    const html = jq[0];\n\n    // Adjust CR\n    html.querySelector(\"span.cr-input\")?.addEventListener(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n\n    html.querySelector(\".trigger .rollable[data-dtype='per']\")?.addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n\n      this.actor.rollPerception({ token: this.token });\n    });\n\n    html.querySelectorAll(\"input[name='system.trigger.value'], input[name='system.reset.value']\").forEach((el) => {\n      el.addEventListener(\"click\", (ev) => {\n        ev.target.select();\n      });\n    });\n  }\n\n  /**\n   * Adjust the CR of the trap\n   *\n   * @param {Event} event   The originating click event\n   */\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = pf1.utils.CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context The rendering context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    if (formData.system.trigger.value && [\"proximity\", \"visual\"].includes(this.actor.system.trigger.type)) {\n      const value = formData.system.trigger.value;\n      if (Number.isFinite(value)) {\n        formData.system.trigger.value = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n\n  /** @inheritDoc */\n  _focusTabByItem(item) {\n    // Only one tab exists for items\n    this.activateTab(\"summary\", { group: \"primary\" });\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFVehicle extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object} The default rendering options\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vehicle\"],\n      width: 800,\n      height: 680,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/vehicle-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  static EDIT_TRACKING = [\"system.details.description\", \"system.details.notes\"];\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   *\n   * @override\n   * @returns {Promise<object>} The data object to render the sheet with\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      appId: this.appId,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      rollData: this.actor.getRollData(),\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      labels: {\n        currency: game.i18n.localize(`PF1.Currency.Abbr.${this.itemValueDenomination}`),\n      },\n      isLootSheet: true, // inventory include unwanted data otherwise,\n      fields: this.actor.system.schema.fields,\n      settings: {\n        isMetricDistance: pf1.utils.getDistanceSystem() === \"metric\",\n      },\n    };\n\n    context.vehicleSizes = Object.fromEntries(\n      Object.entries(pf1.config.vehicles.size).map(([key, data]) => [key, data.label])\n    );\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const desc = context.system.details?.description;\n    const pDesc = desc ? pf1.utils.enrichHTMLUnrolled(desc, enrichHTMLOptions) : Promise.resolve();\n    pDesc.then((html) => (context.descriptionHTML = html || noDesc));\n    const notes = context.system.details?.notes;\n    const pNotes = notes ? pf1.utils.enrichHTMLUnrolled(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pDesc, pNotes]);\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    //context.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n    context.hasCurrency = true; // Never fade currency field for this\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", context.sellValue);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Compute Driver data\n    context.driver = this._computeDriverData(context.system.driver.uuid, context.system.driver.skill);\n    context.driver.driverSkill = context.system.driver.skill;\n    if (!context.driver.uuid) {\n      context.driver.skills = pf1.utils.deepClone(context.config.skills);\n      if (context.driver.driverSkill && !context.driver.skills[context.driver.driverSkill]) {\n        context.driver.skills[context.driver.driverSkill] = context.driver.driverSkill;\n      }\n      context.driver.skillBonus = 0;\n    }\n\n    context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  /**\n   * @protected\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   * @override\n   * @returns {Promise<void>}\n   */\n  async _getTooltipContext(fullId, context) {\n    /** @type {ActorPF} */\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._cache ??= actor.getRollData();\n        return this._cache;\n      },\n    };\n\n    const getNotes = async (context, all = true) =>\n      (await actor.getContextNotesParsed(context, { all, rollData: lazy.rollData, roll: false })).map((n) => n.text);\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"hp\": {\n        paths.push(\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max },\n          { path: \"@attributes.hp.base\", value: lazy.rollData.attributes.hp.base || 0 },\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.bonus\", value: lazy.rollData.attributes.hp.bonus }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hp.max\"), untyped: true });\n        break;\n      }\n      case \"ac\": {\n        if (!system.attributes.ac[detail]) return;\n\n        paths.push(\n          { path: \"@attributes.ac.normal.total\", value: lazy.rollData.attributes.ac.normal.total },\n          { path: \"@attributes.ac.touch.total\", value: lazy.rollData.attributes.ac.touch.total }\n        );\n        if (lazy.rollData.traits.type === \"sea\") {\n          paths.push({ path: \"@attributes.ac.stopped.total\", value: lazy.rollData.attributes.ac.stopped.total });\n        }\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.ac.${detail}.total`),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"ac\");\n        break;\n      }\n      case \"cmb\": {\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n        });\n\n        sources.push({\n          sources: [\n            {\n              name: game.i18n.localize(\"PF1.Size\"),\n              value: Object.values(pf1.config.sizeSpecialMods)[system.traits.size.value],\n            },\n          ],\n        });\n\n        sources.push(\n          { sources: actor.getSourceDetails(\"system.attributes.attack.general\") },\n          { sources: actor.getSourceDetails(\"system.attributes.cmb.bonus\") },\n          { sources: actor.getSourceDetails(\"system.attributes.attack.shared\") }\n        );\n\n        notes = [...(await getNotes(\"attack\")), ...(await getNotes(\"melee\")), ...(await getNotes(\"cmb\"))];\n        break;\n      }\n      case \"material\": {\n        paths.push({ path: \"@material.base\", value: system.material.base });\n        break;\n      }\n      case \"hardness\": {\n        paths.push(\n          { path: \"@attributes.hardness.total\", value: lazy.rollData.attributes.hardness.total },\n          { path: \"@attributes.hardness.base\", value: system.attributes.hardness.base },\n          { path: \"@attributes.hardness.bonus\", value: lazy.rollData.attributes.hardness.bonus }\n        );\n\n        sources.push({ sources: actor.getSourceDetails(\"system.attributes.hardness.total\"), untyped: true });\n        break;\n      }\n      case \"save\": {\n        if (!system.attributes.savingThrows.save) return;\n\n        paths.push(\n          {\n            path: `@attributes.savingThrows.save.total`,\n            value: lazy.rollData.attributes.savingThrows.save.total,\n          },\n          {\n            path: `@attributes.savingThrows.save.base`,\n            value: lazy.rollData.attributes.savingThrows.save.base,\n          }\n        );\n\n        sources.push({\n          sources: actor.getSourceDetails(`system.attributes.savingThrows.save.total`),\n          untyped: true,\n        });\n\n        notes = await getNotes(\"savingThrows\");\n        break;\n      }\n      case \"acceleration\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.acceleration`) });\n\n        // Add base speed\n        const speed = system.details.acceleration;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.acceleration`, value: tD, unit: tU });\n\n        break;\n      }\n      case \"currentSpeed\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.currentSpeed`) });\n\n        // Add current speed\n        const speed = system.details.currentSpeed;\n        const speedOverland = system.details.currentSpeedOverland;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.currentSpeed`, value: tD, unit: tU });\n\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speedOverland.speed);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@details.currentSpeedOverland`, value: oD, unit: oU });\n\n        break;\n      }\n      case \"maxSpeed\": {\n        sources.push({ sources: actor.getSourceDetails(`system.details.maxSpeed`) });\n\n        // Add base speed\n        const speed = system.details.maxSpeed;\n        const speedOverland = system.details.maxSpeedOverland;\n        const [tD] = pf1.utils.convertDistance(speed);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push({ path: `@details.maxSpeed`, value: tD, unit: tU });\n\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speedOverland.speed);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@details.maxSpeedOverland`, value: oD, unit: oU });\n\n        break;\n      }\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} jq The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const html = jq[0];\n\n    // Saving Throw\n    html\n      .querySelector(\".defenses .rollable[data-dtype='saving-throws']\")\n      .addEventListener(\"click\", this._onRollSavingThrow.bind(this));\n\n    // Display defenses\n    html.querySelector(\".defenses .rollable[data-dtype='defenses']\").addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      this.actor.displayDefenseCard({ token: this.token });\n    });\n\n    // Roll Driver skill\n    html.querySelector(\".driver-skill .rollable[data-dtype='driverSkill']\").addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      const driver = fromUuidSync(this.actor.system.driver.uuid);\n      const skill = this.actor.system.driver.skill;\n      if (skill) {\n        driver.rollSkill(skill, { token: this.token });\n      } else {\n        driver.rollAbilityTest(\"wis\", { token: this.token });\n      }\n    });\n\n    // Hook onto the Driver Select to assign a driver.\n    html.querySelector(\".select-driver\")?.addEventListener(\"click\", async (_ev) => {\n      const targetActorId = await pf1.utils.dialog.getActor({\n        actors: game.actors.filter(\n          (a) =>\n            [\"character\", \"npc\"].includes(a.type) &&\n            a.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)\n        ),\n      });\n\n      const targetActor = game.actors.get(targetActorId);\n      if (!targetActor) return;\n\n      await this.actor.update({ \"system.driver.uuid\": targetActor.uuid });\n    });\n\n    // Driver controls\n    html.querySelector(\".driver-info .edit\")?.addEventListener(\"click\", async (_ev) => {\n      fromUuidSync(this.actor.system.driver.uuid).sheet.render(true);\n    });\n\n    html.querySelector(\".driver-info .delete\")?.addEventListener(\"click\", async (_ev) => {\n      await this.actor.update({ \"system.driver.uuid\": \"\" });\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param {object} context The rendering context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Alter inventory columns\n    for (const section of inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    const items = context.items.filter((i) => i.isPhysical);\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Apply user filters\n    const invCat = { key: \"inventory\", sections: inventory };\n    const set = this._filters.sections.inventory ?? new Set();\n    for (const section of inventory) {\n      this._filterSection(invCat, section, set);\n    }\n\n    context.inventory = inventory;\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return pf1.config.currency.standard;\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const convertibleKeys = [\"currentSpeed\", \"maxSpeed\", \"acceleration\"];\n    for (const key of convertibleKeys) {\n      const value = formData.system.details[key];\n      if (Number.isFinite(value)) {\n        formData.system.details[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n\n  _computeDriverData(driverId, skillId) {\n    if (!driverId || this.actor.pack) return {};\n\n    /** @type {ActorPF} */\n    const driver = fromUuidSync(driverId);\n    if (!driver) return {};\n\n    const rollData = driver.getRollData();\n    let mod = rollData.abilities.wis.mod;\n    try {\n      mod = driver.getSkillInfo(skillId).mod;\n    } catch {\n      // error silently, as we default to Wisdom Modifier\n    }\n\n    const skills = {};\n    for (const skillId of driver.allSkills) {\n      const skill = driver.getSkillInfo(skillId);\n      skills[skillId] = skill.fullName;\n    }\n\n    return {\n      name: driver.name,\n      img: driver.img,\n      uuid: driver.uuid,\n      skills: skills,\n      skillBonus: mod,\n    };\n  }\n\n  /**\n   * Roll saving throw\n   *\n   * @protected\n   * @param {Event} event - The originating click event\n   */\n  async _onRollSavingThrow(event) {\n    event.preventDefault();\n\n    /** @type {SaveId} */\n    const saveId = await foundry.applications.api.DialogV2.wait({\n      window: { title: game.i18n.localize(\"PF1.Dialog.VehicleSave.Title\") },\n      content: `<p>${game.i18n.localize(\"PF1.Dialog.VehicleSave.Message\")}</p>`,\n      buttons: [\n        {\n          label: game.i18n.localize(\"PF1.SavingThrowFort\"),\n          action: \"fort\",\n        },\n        {\n          label: game.i18n.localize(\"PF1.SavingThrowRef\"),\n          action: \"ref\",\n        },\n      ],\n    });\n\n    this.actor.rollSavingThrow(saveId, { token: this.token });\n  }\n\n  /** @inheritDoc */\n  _focusTabByItem(item) {\n    if (item.isPhysical) {\n      this.activateTab(\"inventory\", { group: \"primary\" });\n    } else {\n      this.activateTab(\"summary\", { group: \"primary\" });\n    }\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that renders the movement speed configuration of an item\n *\n * @param {ActorPF} actor     The Actor instance for which to configure resting\n */\nexport class SpeedEditor extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: SpeedEditor._save,\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"speed-editor\", \"standard-form\"],\n    window: {\n      icon: \"fa-solid fa-person-walking\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 400,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/speed-editor.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const itemData = this.document.system;\n    const speeds = {};\n\n    for (const key of pf1.const.movementKeys) {\n      let value = itemData.speeds?.[key];\n      if (value > 0) value = pf1.utils.convertDistance(value)[0];\n      speeds[key] = value;\n    }\n\n    speeds.flyManeuverability = itemData.speeds.flyManeuverability || \"average\";\n\n    const isMetric = pf1.utils.getDistanceSystem() === \"metric\";\n\n    return {\n      speeds,\n      item: this.document,\n      system: itemData,\n      units: game.i18n.localize(isMetric ? \"PF1.Distance.mShort\" : \"PF1.Distance.ftShort\"),\n      step: isMetric ? 1.5 : 5,\n      flyManeuverability: {\n        clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n        poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n        average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n        good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n        perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n      },\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-solid fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the speed editor window to include document name, and optionally the actors name, if present\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    const actor = this.document.actor;\n    let title = `${game.i18n.localize(\"PF1.Movement.Label\")}: ${this.document.name}`;\n    if (actor) title += ` — ${actor.name}`;\n    return title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the movement speed data back to the item\n   *\n   * @internal\n   * @this {SpeedEditor}\n   * @param {SubmitEvent} event - The originating form submission event\n   * @param {HTMLFormElement} form - The form element that was submitted\n   * @param {FormDataExtended} formData - Processed data for the submitted form\n   * @param {Record<string, number|string>} formData.object - The movement speed configuration\n   * @returns {Promise<void>}\n   */\n  static async _save(event, form, formData) {\n    formData = formData.object;\n\n    // Convert data back\n    for (const [key, value] of Object.entries(formData)) {\n      if (Number.isNumeric(value)) {\n        formData[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    this.document.update(formData);\n  }\n}\n","/**\n * @typedef {object} Widget_CategorizedItemPicker~Item\n * @property {string} key - The key of the item.\n * @property {string} [label] - The label of the item.\n * @property {string} [icon] - The icon of the item.\n */\n\n/**\n * @typedef {object} Widget_CategorizedItemPicker~Category\n * @property {string} key - The key of the category.\n * @property {string} label - The label of the category.\n * @property {Widget_CategorizedItemPicker~Item[]} items - All the items associated with this category.\n */\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Item picker widget.\n */\nexport class Widget_CategorizedItemPicker extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"widget\", \"categorized-item-picker\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 480,\n      height: 480,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/widgets/categorized-item-picker.hbs\",\n    },\n  };\n\n  constructor(options, categories, callback, selected) {\n    super(options);\n\n    /**\n     * Objects containing category and item data.\n     *\n     * @type {Widget_CategorizedItemPicker~Category[]}\n     */\n    this.categories = categories;\n\n    /**\n     * Previously selected category and item\n     *\n     * @type {object}\n     * @property {string} category Selected category.\n     * @property {string} item Selected item in that category.\n     */\n    this.selected = selected;\n\n    /**\n     * Callback fired when an item has been selected.\n     *\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this._hiddenElems = {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const categories = [];\n\n    for (const cat of this.categories) {\n      cat.hidden = cat.validity.item === false;\n      if (cat.hidden) continue;\n      cat.active = cat.key === this.selected?.category;\n\n      const categoryItems = [];\n      for (const item of cat.items) {\n        if (item.validity.item === false) continue;\n\n        // Mark items as invalid if the category is invalid\n        if (!cat.validity.valid) {\n          item.validity.category = false;\n          item.validity.valid = false;\n        }\n\n        categoryItems.push({\n          category: cat.key,\n          active: this.selected?.item === item.key,\n          ...item,\n        });\n      }\n\n      // Has any valid choices\n      cat.hasChoices = categoryItems.some((i) => i.validity.valid);\n      cat.hasVisibleChoices = categoryItems.some((i) => i.validity.item !== false);\n\n      if (!cat.hasVisibleChoices || !cat.hasChoices) continue;\n\n      cat.items = categoryItems;\n      categories.push(cat);\n    }\n\n    return {\n      categories,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Click an item\n    this.element.querySelectorAll(\".item\").forEach((el) => el.addEventListener(\"click\", this._onClickItem.bind(this)));\n\n    // Cancel widget\n    window.setTimeout(() => {\n      if (this._cancelCallback) document.removeEventListener(\"click\", this._cancelCallback);\n      this._cancelCallback = this._onCancel.bind(this);\n      document.addEventListener(\"click\", this._cancelCallback);\n    }, 10);\n  }\n\n  /**\n   * @override\n   * @this {Widget_CategorizedItemPicker}\n   */\n  async _onFirstRender(context, options) {\n    super._onFirstRender(context, options);\n\n    // HACK: Yield so browser can render the element. Required for scrollIntoView() to function\n    // This for once is not Foundry's fault\n    await new Promise((resolve) => setTimeout(resolve, 0));\n\n    // Scroll previously  selected option into view\n    this.element\n      .querySelector(\".window-content .pre-selected\")\n      ?.scrollIntoView({ block: \"center\", behaviour: \"instant\" });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle click on an item.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const result = a.dataset.value;\n    this.callback(result);\n    this.close();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle click outside the widget.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    let node = event.target;\n    if (node === this.element) return;\n    while (node.parentNode) {\n      if (node === this.element) return;\n      node = node.parentNode;\n    }\n\n    this.close();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Close the widget\n   *\n   * @param args\n   * @returns {Promise<void>}\n   */\n  async close(...args) {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    return super.close(...args);\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\n\n/**\n * A trait selector variant that reads and stores information into an object with boolean values.\n *\n * @property {string} _searchFilter           Current search filter\n * @property {string} _collator               Collator for sorting\n * @property {object} attributes              The currently stored values for this trait selector\n * @property {string[]} attributes.value      Elements from the provided set of choices that have been checked\n */\nexport class FlagSelector extends ActorTraitSelector {\n  static DEFAULT_OPTIONS = {\n    form: {\n      handler: FlagSelector._updateDocument,\n    },\n  };\n\n  constructor(options) {\n    options.hasCustom = false;\n    super(options);\n\n    const valueObject = foundry.utils.getProperty(options.document.toObject(), this.attribute) ?? {};\n\n    Object.entries(valueObject).forEach(([k, v]) => {\n      if (v) this.attributes.standard.add(k);\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @this {FlagSelector}\n   * @private\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   */\n  static async _updateDocument(event, form, formData) {\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n\n    const options = Object.keys(this.options.choices);\n    const newValue = {};\n    options.forEach((o) => {\n      newValue[o] = this.attributes.standard.has(o);\n    });\n\n    const updateData = {\n      [this.attribute]: newValue,\n    };\n\n    this.document.update(updateData);\n    this.close({ force: true });\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { SpeedEditor } from \"@app/speed-editor.mjs\";\nimport { Widget_CategorizedItemPicker } from \"@app/categorized-item-picker.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\nimport { FlagSelector } from \"@app/flag-selector.mjs\";\n\n// Calculate decimal places for correct treatment of custom currencies\nconst decimalPlaces = (n) => {\n  let d = 0;\n  while ((n /= 10) >= 1) d++;\n  return d;\n};\n\n/**\n * Override and extend the core ItemSheet implementation to handle game system specific item types\n *\n * @type {ItemSheet}\n */\nexport class ItemSheetPF extends ItemSheet {\n  constructor(...args) {\n    super(...args);\n\n    // Add item type to selectors\n    this.options.classes.push(`type-${this.item.type}`);\n\n    /**\n     * Track action updates from the item sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._actionUpdates = [];\n\n    // Activate more reasonable default links sub-tab per item type.\n    // Related core issue: https://github.com/foundryvtt/foundryvtt/issues/9748\n    const links = this._tabs.find((t) => t.group === \"links\");\n    if (this.item.type === \"class\") {\n      links.active = \"classAssociations\";\n    } else if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      links.active = \"charges\";\n    }\n  }\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"system.description.value\", \"system.description.unidentified\"];\n\n  /* -------------------------------------------- */\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".tab\", \".buff-flags\", \".editor-content\"],\n      dragDrop: [\n        {\n          dragSelector: \"li.action-part\",\n          dropSelector: \".tab.details\",\n        },\n        {\n          dragSelector: \".tab.changes li.change\",\n          dropSelector: null,\n        },\n        {\n          dragSelector: \".tab.links .item-name\",\n          dropSelector: \".tab.links .tab[data-group='links']\",\n        },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='links']\",\n          contentSelector: \"section.links-body\",\n          initial: \"children\",\n          group: \"links\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='description']\",\n          contentSelector: \"section.description-body\",\n          initial: \"identified\",\n          group: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string} - Template path\n   */\n  get template() {\n    const path = \"systems/pf1/templates/items\";\n    return `${path}/${this.item.type}.hbs`;\n  }\n\n  get title() {\n    const actor = this.actor;\n    if (actor) return `${super.title} – ${actor.name}`;\n    return super.title;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _render(force, options) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    /** @type {ItemPF} */\n    const item = this.item,\n      system = item.system;\n\n    const actor = item.actor,\n      actorData = actor?.system;\n\n    const isolated = !actor;\n\n    const defaultAction = item.defaultAction;\n\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    const context = {\n      cssClass: this.isEditable ? \"editable\" : \"locked\",\n      item,\n      document: item, // Reference used by unknown data\n      data: item.toObject().system, // Raw saved system data\n      name: item.name,\n      system,\n      itemType: game.i18n.localize(CONFIG.Item.typeLabels[item.type]),\n      rollData,\n      config: pf1.config,\n      owned: !!actor,\n      owner: item.isOwner,\n      editable: this.isEditable,\n      isGM: game.user.isGM,\n      labels: item.getLabels({ rollData, isolated }),\n      canClassLink: pf1.config.classAssociations.includes(item.type) && !!rollData.classes,\n      inContainer: item.inContainer ?? false,\n      // Include raw tag data (from source to not get autofilled tag)\n      tag: this.item._source.system.tag,\n    };\n\n    // Item type identifiers\n    const isPhysical = item.isPhysical;\n    const isWeapon = item.type === \"weapon\";\n    const isAttack = item.type === \"attack\";\n    const isWeaponLike = isAttack && item.subType === \"weapon\";\n    const isNaturalAttack = isAttack && system.subType === \"natural\";\n    const isClass = item.type === \"class\";\n    const isSpell = item.type === \"spell\";\n    const isImplant = item.type === \"implant\";\n    const isEquipment = item.type === \"equipment\";\n\n    context.isPhysical = isPhysical;\n    context.isWeapon = isWeapon;\n    context.isAttack = isAttack;\n    context.isWeaponLike = isWeaponLike;\n    context.isNaturalAttack = isNaturalAttack;\n    context.isClass = isClass;\n    context.isSpell = isSpell;\n    context.isImplant = isImplant;\n    context.isEquipment = isEquipment;\n\n    if (context.canClassLink) {\n      context.hasClassLink = !!item.system.class;\n      context.classes = {};\n      for (const [classTag, classData] of Object.entries(rollData.classes)) {\n        context.classes[classTag] = classData.name;\n      }\n    }\n\n    // Include sub-items\n    context.items = item.items?.map((i) => i.toObject()) ?? [];\n\n    // Add hit die size options for classes\n    if (isClass) {\n      context.hitDieSizes = context.config.hitDieSizes.reduce((all, size) => {\n        all[size] = game.i18n.format(\"PF1.DieSize\", { size });\n        return all;\n      }, {});\n\n      context.isMythic = this.item.subType === \"mythic\";\n\n      if (item.system.wealth) {\n        const context = { formula: item.system.wealth, item: this.item };\n        const max = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          maximize: true,\n        })?.total;\n        const min = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          minimize: true,\n        })?.total;\n        if (max > 0) {\n          context.wealth ??= {};\n          context.wealth.average = (max + min) / 2;\n        }\n      }\n    }\n\n    if (item.links.charges) context.inheritCharges = item.links.charges;\n    context.isCharged = ![\"single\", \"\", undefined].includes(system.uses?.per);\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.isRechargeable = pf1.config.limitedUsePeriodOrder.includes(system.uses?.per);\n\n    context.isActivatable = ![\"race\", \"class\", \"container\", \"loot\"].includes(item.type);\n    context.hasAction = item.hasAction;\n    context.hasAttack = item.hasAttack;\n    context.hasDamage = item.hasDamage;\n    context.showBothDescriptions = context.isGM && context.isPhysical;\n    context.showUnidentifiedData = item.showUnidentifiedData;\n    context.showIdentified = !item.showUnidentifiedData;\n    context.isIdentified = item.system.identified !== false;\n    context.showIdentifiedData = context.showIdentified;\n    if (context.showIdentified && context.isPhysical) context.showBothDescriptions = true;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    context.showInCombat = [\"weapon\", \"spell\", \"equipment\", \"consumable\"].includes(item.type);\n    if (item.type === \"feat\" && [\"feat\", \"classFeat\", \"racial\", \"misc\"].includes(item.subType))\n      context.showInCombat = true;\n\n    // Identification information\n    context.identify ??= {};\n    context.identify.dc = 0;\n    const auraStrength = rollData.item.auraStrength;\n    if (auraStrength) {\n      context.aura = {\n        strength: auraStrength,\n        strengthLabel: pf1.config.auraStrengths[auraStrength],\n        school: pf1.config.spellSchools[system.aura.school] || system.aura.school || game.i18n.localize(\"PF1.Unknown\"),\n      };\n\n      context.identify.dc = 15 + rollData.item.cl;\n      context.identify.curse = context.identify.dc + 10;\n    }\n\n    // Add spellcasting configuration\n    if (isClass) {\n      context.casting = {\n        types: pf1.config.spellcasting.type,\n        spells: pf1.config.spellcasting.spells,\n        progression: {\n          high: \"PF1.High\",\n          med: \"PF1.Medium\",\n          low: \"PF1.Low\",\n        },\n      };\n\n      if (!item.actor)\n        context.hasSpellbook = true; // Not true, but avoids unwanted behaviour.\n      else {\n        context.hasSpellbook = Object.values(rollData.spells ?? {}).find(\n          (book) => !!book.class && book.class === system.tag && book.inUse\n        );\n      }\n    }\n\n    /** @type {DescriptionAttribute[]} */\n    context.descriptionAttributes = [];\n\n    // Override description attributes\n    if (context.isPhysical) {\n      // Add quantity\n      context.descriptionAttributes.push({\n        isNumber: true,\n        isRelative: true,\n        name: \"system.quantity\",\n        label: game.i18n.localize(\"PF1.Quantity\"),\n        value: system.quantity || 0,\n        decimals: 0,\n        id: \"data-quantity\",\n        constraints: {\n          min: 0,\n          step: 1,\n        },\n      });\n\n      // Add weight\n      context.descriptionAttributes.push({\n        isNumber: true,\n        isRelative: true,\n        name: \"system.weight.value\",\n        label: game.i18n.localize(\"PF1.Weight\"),\n        value: system.weight.converted.total,\n        fakeValue: true,\n        inputValue: system.weight.converted.value,\n        decimals: 2,\n        tooltip: \"weight\",\n        id: \"data-weight-value\",\n        constraints: {\n          min: 0,\n          step: 0.01,\n        },\n      });\n\n      const priceDecimals = decimalPlaces(pf1.config.currency.standardRate);\n\n      // Add price\n      if (context.isGM) {\n        context.descriptionAttributes.push(\n          {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.price\",\n            label: game.i18n.localize(\"PF1.Price\"),\n            value: item.getValue({ sellValue: 1 }),\n            decimals: priceDecimals,\n            tooltip: \"price\",\n            id: \"data-price\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.unidentified.price\",\n            label: game.i18n.localize(\"PF1.UnidentifiedPriceShort\"),\n            value: item.getValue({ sellValue: 1, forceUnidentified: true }),\n            decimals: priceDecimals,\n            tooltip: \"unidprice\",\n            id: \"data-unidentifiedPrice\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          }\n        );\n      } else if (context.showUnidentifiedData) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          name: \"system.unidentified.price\",\n          fakeName: true,\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: priceDecimals,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      } else {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          name: \"system.price\",\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: priceDecimals,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      }\n\n      // Add hit points\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isRange: true,\n          label: game.i18n.localize(\"PF1.HPShort\"),\n          current: {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.hp.value\",\n            value: system.hp?.value || 0,\n            constraints: {\n              step: 1,\n              max: system.hp?.max || 0,\n            },\n          },\n          max: {\n            isNumber: true,\n            isRelative: true,\n            name: \"system.hp.base\",\n            fakeValue: true,\n            inputValue: system.hp.base,\n            value: system.hp?.max || 0,\n            constraints: {\n              min: 0,\n              step: 1,\n            },\n          },\n        });\n\n        // Add hardness\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRelative: true,\n          label: game.i18n.localize(\"PF1.Hardness\"),\n          name: \"system.hardness\",\n          decimals: 0,\n          value: system.hardness.total || 0,\n          fakeValue: true,\n          inputValue: this.item._source.system.hardness || 0,\n          constraints: {\n            min: 0,\n            step: 1,\n          },\n        });\n      }\n\n      let disableEquipping = false;\n      if (item.inContainer) {\n        if (item.canEquip === false) disableEquipping = true;\n        else if (context.isImplant) disableEquipping = true;\n      }\n\n      // Add equipped/implanted flag\n      if (context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.implanted\",\n          label: game.i18n.localize(\"PF1.Implanted\"),\n          value: system.implanted,\n          disabled: disableEquipping,\n        });\n      } else {\n        // Certain loot types don't have equipped\n        if (item.type === \"loot\" && pf1.config.unequippableLoot.includes(this.item.subType)) disableEquipping = true;\n\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.equipped\",\n          label: game.i18n.localize(\"PF1.Equipped\"),\n          value: system.equipped,\n          disabled: disableEquipping,\n        });\n      }\n\n      // Add carried flag\n      context.descriptionAttributes.push({\n        isBoolean: true,\n        name: \"system.carried\",\n        label: game.i18n.localize(\"PF1.Carried\"),\n        value: system.carried || item.system.implanted || false,\n        disabled: item.inContainer || item.system.implanted || false,\n      });\n    }\n\n    if (context.isPhysical || item.isQuasiPhysical) {\n      // Add broken flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.broken\",\n          label: game.i18n.localize(\"PF1.Broken\"),\n          value: system.broken,\n          disabled: context.isNaturalAttack,\n        });\n      }\n\n      // Add masterwork flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.masterwork\",\n          label: game.i18n.localize(\"PF1.Masterwork\"),\n          value: system.masterwork,\n          disabled: context.isNaturalAttack,\n        });\n      }\n    }\n\n    if (context.isPhysical) {\n      // Add identified flag for GM\n      if (game.user.isGM) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.identified\",\n          label: game.i18n.localize(\"PF1.Identified\"),\n          value: system.identified ?? true,\n          disabled: !game.user.isGM,\n        });\n      }\n    }\n\n    // Prepare feat specific stuff\n    if (item.type === \"feat\") {\n      context.isClassFeature = system.subType === \"classFeat\";\n      context.isTemplate = system.subType === \"template\";\n\n      context.abilityTypes = Object.fromEntries(\n        Object.entries(pf1.config.abilityTypes).map(([key, { short, long }]) => [key, `${long} (${short})`])\n      );\n    }\n\n    // Add skill list to items that support them\n    // TODO: Make this ask the item itself if they have class skills\n    if (system.classSkills || [\"class\", \"feat\", \"race\"].includes(item.type)) {\n      const classSkills = system.classSkills ?? {};\n      // Get all skills\n      const skills = foundry.utils.mergeObject(pf1.config.skills, actorData?.skills ?? {}, { inplace: false });\n      // Build skill context\n      context.skills = Object.entries(skills)\n        .map(([skillId, skilldata]) => ({\n          ...skilldata,\n          key: skillId,\n          name: pf1.config.skills[skillId] || skilldata.name,\n          isCS: classSkills[skillId] === true,\n        }))\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    // Prepare attack-specific stuff\n    if (isAttack) {\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    const material = isEquipment ? this.item.system.armor?.material : this.item.system.material;\n    if (material?.addon?.length) {\n      context.materialAddons =\n        material.addon.reduce((obj, v) => {\n          obj[v] = true;\n          return obj;\n        }, {}) ?? {};\n    }\n\n    // Prepare categories for weapons\n    if (isWeaponLike) {\n      system.weapon ??= {};\n      system.weapon.category ||= \"simple\";\n      system.weapon.type ||= \"1h\";\n    }\n\n    // Prepare weapon specific stuff\n    if (isWeapon || isWeaponLike) {\n      const category = isWeapon ? system.subType : system.weapon.category;\n      const wsubtype = isWeapon ? system.weaponSubtype : system.weapon.type;\n\n      switch (category) {\n        case \"siege\":\n          context.isRanged = [\"direct\", \"indirect\"].includes(wsubtype);\n          break;\n        case \"heavy\":\n        case \"firearm\":\n          context.isRanged = true;\n          break;\n        default:\n          context.isRanged = wsubtype === \"ranged\" || system.properties?.[\"thr\"] === true;\n          break;\n      }\n    }\n\n    if (isWeapon || isWeaponLike) {\n      context.weaponCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.weaponTypes)) {\n        context.weaponCategories.types[k] = v._label;\n      }\n      let type;\n      if (isWeapon) type = system.subType;\n      else if (isWeaponLike) type = system.weapon?.category;\n\n      if (type in pf1.config.weaponTypes) {\n        for (const [k, v] of Object.entries(pf1.config.weaponTypes[type])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.weaponCategories.subTypes[k] = v;\n        }\n      }\n    }\n\n    if (isWeapon) {\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    // Prepare equipment specific stuff\n    if (isEquipment) {\n      // Prepare categories for equipment\n      context.equipmentCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.equipmentTypes)) {\n        context.equipmentCategories.types[k] = v._label;\n      }\n      const subType = system.subType;\n      if (subType in pf1.config.equipmentTypes) {\n        for (const [k, v] of Object.entries(pf1.config.equipmentTypes[subType])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.equipmentCategories.subTypes[k] = v;\n        }\n      }\n\n      // Prepare slots for equipment\n      context.equipmentSlots = pf1.config.equipmentSlots.wondrous;\n\n      // Whether the current equipment type has multiple slots\n      context.hasMultipleSlots = item.hasSlots;\n\n      context.hasSubCategory = [\"armor\", \"shield\"].includes(subType);\n\n      // Prepare materials where they're needed.\n      if ([\"armor\", \"shield\"].includes(item.subType)) {\n        context.materialCategories = this._prepareMaterialsAndAddons(item);\n      }\n\n      // Can be held in different ways\n      context.variableHands = [\"wondrous\", \"other\"].includes(item.subType);\n    }\n\n    if (isImplant) {\n      context.subTypes = pf1.config.implantTypes;\n\n      context.isCybertech = item.subType === \"cybertech\";\n      if (context.isCybertech) context.slots = pf1.config.implantSlots.cybertech;\n    }\n\n    let topDescription;\n\n    // Prepare spell specific stuff\n    if (context.isSpell) {\n      let spellbook = null;\n      if (actor) {\n        const bookId = system.spellbook;\n        spellbook = actorData?.attributes.spells?.spellbooks[bookId];\n      }\n\n      context.isSpontaneousLike = spellbook?.spontaneous || spellbook?.spellPoints?.useSystem || false;\n      context.isPreparedSpell = !context.isSpontaneousLike;\n      context.usesSpellpoints = spellbook != null ? (spellbook.spellPoints?.useSystem ?? false) : false;\n      context.isAtWill = system.atWill;\n      context.spellbooks = actorData?.attributes.spells.spellbooks ?? {};\n      context.spellbookChoices = Object.fromEntries(\n        Object.entries(context.spellbooks)\n          .filter(([_, { inUse }]) => inUse)\n          .map(([key, { label }]) => [key, label])\n          .sort(([_0, n0], [_1, n1]) => n0.localeCompare(n1, lang))\n      );\n\n      topDescription = renderCachedTemplate(\n        \"systems/pf1/templates/items/headers/spell-header.hbs\",\n        await item.getDescriptionData({ rollData, isolated })\n      );\n\n      // Reverse mapping of pf1.config.divineFocus for readability\n      const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n      system.components ??= {};\n      const df = system.components.divineFocus;\n      // Force intrinsic DF components\n      if (df === dfVariants.MDF) system.components.material = true;\n      if (df === dfVariants.FDF) system.components.focus = true;\n\n      // Generate component list according to spellbook\n      const c = { ...system.components };\n      context.components = c;\n      if (spellbook) {\n        const isDivine = spellbook.kind === \"divine\";\n        if (isDivine) {\n          if (df === dfVariants.FDF) c.focus = false;\n          if (df === dfVariants.MDF) c.material = false;\n        } else {\n          c.divineFocus = false;\n        }\n      }\n\n      // Material for spells to emulate\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(system.alignments);\n    }\n\n    if (this.item.type === \"buff\") {\n      context.noDurationTiming = !system.duration.units || system.duration.units === \"turn\";\n    }\n\n    // Prepare class specific stuff\n    if (isClass) {\n      context.isMythicPath = system.subType === \"mythic\";\n\n      for (const [a, s] of Object.entries(system.savingThrows)) {\n        s.label = pf1.config.savingThrows[a];\n      }\n      for (const [a, s] of Object.entries(system.fc)) {\n        s.label = pf1.config.favouredClassBonuses[a];\n      }\n\n      context.isBaselikeClass = pf1.config.favoredClassTypes.includes(system.subType);\n      context.isRacialHD = system.subType === \"racial\";\n      context.isNPCClass = system.subType === \"npc\";\n      context.isPCClass = !context.isNPCClass && !context.isRacialHD;\n\n      /** @type {pf1.applications.settings.HealthConfigModel} */\n      const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.healthConfig = actor ? healthConfig.getClassHD(this.item, actor.type) : null;\n      context.actorHealthConfig = healthConfig.getActorConfig(actor);\n    }\n\n    if (item.type === \"consumable\") {\n      context.hasSpellType = [\"potion\", \"scroll\", \"wand\", \"staff\"].includes(item.subType);\n    }\n\n    // Prepare ammunition\n    context.canUseAmmo = !context.isNaturalAttack && item.type !== \"spell\";\n    if (context.canUseAmmo && item.system.ammo?.type) {\n      context.defaultAmmo = item.defaultAmmo;\n      if (context.defaultAmmo) {\n        context.invalidDefaultAmmo = context.defaultAmmo.system.extraType !== item.system.ammo.type;\n      }\n    }\n\n    // Prepare {value: [], custom: []} objects\n    const traitsMap = {\n      armorProf: pf1.config.armorProficiencies,\n      descriptors: pf1.config.spellDescriptors,\n      languages: pf1.config.languages,\n      subschool: pf1.config.spellSubschools,\n      weaponGroups: pf1.config.weaponGroups,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [traitKey, labels] of Object.entries(traitsMap)) {\n      if (!system[traitKey]) continue;\n\n      const trait = foundry.utils.deepClone(system[traitKey]);\n      context[traitKey] = trait;\n\n      // TODO: Alphasort\n      trait.selected = {};\n      for (const id of trait.standard) {\n        trait.selected[id] = labels[id] || id;\n      }\n\n      // Add custom entry\n      let i = 1;\n      for (const id of trait.custom) {\n        trait.selected[`custom${i++}`] = id;\n      }\n\n      trait.active = !foundry.utils.isEmpty(trait.selected);\n    }\n\n    // Prepare stuff for changes\n    if (item.changes?.size) {\n      const buffTargets = pf1.utils.internal.getBuffTargets(\"buffs\", { actor, item });\n      let showPriority = false;\n      context.changes =\n        item.changes?.map((/** @type {ItemChange} */ ch) => {\n          const target = buffTargets[ch.target];\n          const typeLabel = pf1.config.bonusTypes[ch.type];\n          const chData = {\n            change: ch,\n            isValid: !!target,\n            label: target?.label ?? ch.target,\n            isDeferred: ch.isDeferred,\n            isCustom: [\"skill\", \"cl\", \"sl\", \"concn\"].includes(ch.target?.split(\".\")?.[0]),\n            isSimple: ch.isSimple,\n            cssClass: ch.cssClass,\n            isAdd: ch.operator === \"add\",\n            isSet: ch.operator === \"set\",\n            ...ch,\n            isValidType: !!typeLabel,\n            typeLabel: typeLabel || ch.type,\n            id: ch.id,\n          };\n          chData.priority ||= 0;\n          if (chData.priority != 0) showPriority = true;\n          return chData;\n        }) ?? [];\n\n      context.changePriority = showPriority;\n    }\n\n    // Prepare stuff for items with context notes\n    if (system.contextNotes) {\n      context.contextNotes = system.contextNotes;\n      const noteTargets = pf1.utils.internal.getBuffTargets(\"contextNotes\", { actor, item });\n      for (const n of context.contextNotes) {\n        const target = noteTargets[n.target];\n        n.isValid = !!target;\n        n.label = target?.label ?? n.target;\n      }\n    }\n\n    // Prepare condition display\n    context.conditions = item.effects\n      .filter((e) => !e.disabled && e.statuses.size)\n      .map((e) => Array.from(e.statuses))\n      .flat()\n      .map((s) => pf1.registry.conditions.get(s)?.name || s);\n\n    if (item.system.conditions?.length) {\n      context.causedConditions = item.system.conditions.map((c) => pf1.registry.conditions.get(c)?.name || c);\n\n      context.conditions.push(...context.causedConditions);\n    }\n\n    context.conditions = new Set(context.conditions.sort((a, b) => a.localeCompare(b)));\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n\n    // Parse notes\n    if (system.attackNotes) {\n      const value = system.attackNotes;\n      foundry.utils.setProperty(context, \"notes.attack\", value);\n    }\n\n    // Add item flags\n    this._prepareItemFlags(context);\n\n    // Add actions\n    context.actions = this.item.actions;\n\n    context.distanceUnit = game.i18n.localize(\n      pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n    );\n\n    // Prepare speeds\n    if (item.type === \"race\") {\n      // Speeds\n      context.speeds = [];\n      for (const key of [\"land\", \"fly\", \"swim\", \"climb\", \"burrow\"]) {\n        const value = item.system.speeds?.[key] ?? 0;\n        if (value == 0) continue;\n        let descriptor;\n        if (key === \"fly\") {\n          const fm = item.system.speeds.flyManeuverability || \"average\";\n          descriptor = `PF1.Movement.FlyManeuverability.Quality.${fm}`;\n        }\n        context.speeds.push({\n          value: pf1.utils.convertDistance(value)[0],\n          mode: key,\n          label: `PF1.Movement.Mode.${key}`,\n          descriptor,\n        });\n      }\n    }\n\n    // Content source, fill in from registry\n    if (context.showIdentifiedData) {\n      this._prepareContentSource(context);\n    }\n\n    // Trailing async awaits to ensure they're all awaited in one go instead of sequentially\n\n    // Add descriptions\n    const description = context.showIdentified\n      ? await this.item.getDescription({ rollData, header: false, isolated })\n      : null;\n\n    context.descriptionHTML = {\n      identified: null,\n      unidentified: null,\n    };\n    const enrichOptions = {\n      secrets: context.owner,\n      rollData,\n      relativeTo: this.actor,\n    };\n\n    const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    const pIdentDesc = description ? pf1.utils.enrichHTMLUnrolled(description, enrichOptions) : Promise.resolve();\n    pIdentDesc.then((html) => (context.descriptionHTML.identified = html || noDesc));\n    const unidentDesc = system.description?.unidentified;\n    const pUnidentDesc = unidentDesc ? pf1.utils.enrichHTMLUnrolled(unidentDesc, enrichOptions) : Promise.resolve();\n    pUnidentDesc.then((html) => (context.descriptionHTML.unidentified = html || noDesc));\n    const pTopDesc = topDescription ? TextEditor.enrichHTML(topDescription, enrichOptions) : Promise.resolve();\n    pTopDesc.then((html) => (context.topDescription = html));\n    const instrDesc = system.description?.instructions;\n    const pInstrDesc = instrDesc ? pf1.utils.enrichHTMLUnrolled(instrDesc, enrichOptions) : Promise.resolve();\n    pInstrDesc.then((html) => (context.descriptionHTML.instructions = html));\n\n    // Add script calls\n    const pScripts = this._prepareScriptCalls(context);\n\n    // Add links\n    const pLinks = await this._prepareLinks(context);\n\n    await Promise.all([pIdentDesc, pUnidentDesc, pTopDesc, pInstrDesc, pScripts, pLinks]);\n\n    if (this.constructor.EDIT_TRACKING?.length)\n      context._editorState = pf1.applications.utils.restoreEditState(this, context);\n\n    return context;\n  }\n\n  _prepareContentSource(context) {\n    const sources = this._getContentSources();\n    if (sources.length == 0) return;\n\n    const main = this._selectContentSource(sources);\n\n    context.bookSources = {\n      all: sources,\n      main,\n    };\n\n    if (sources.length > 1) {\n      context.bookSources.extras = sources.filter((s) => s !== main);\n    }\n  }\n\n  _selectContentSource(sources) {\n    if (sources?.length === 0) return null;\n\n    sources.sort((a, b) => b.datestamp - a.datestamp);\n\n    return sources[0];\n  }\n\n  _getContentSources() {\n    const sources = this.item.system.sources ?? [];\n\n    return sources.map((source) => {\n      const registry = pf1.registry.sources.get(source?.id) ?? {};\n      const { publisher, date, abbr, name, edition } = registry;\n\n      return {\n        publisher,\n        date,\n        abbr,\n        name,\n        edition,\n        ...source,\n        title: source.title || registry.name,\n        registry,\n        datestamp: Date.parse(source.date || registry.date),\n      };\n    });\n  }\n\n  _prepareMaterialsAndAddons(item) {\n    const materialList = {};\n    const addonList = [];\n    const basicList = {};\n\n    for (const material of pf1.utils.naturalSort([...pf1.registry.materials], \"name\")) {\n      if (material.basic) {\n        // Filter basic materials\n        basicList[material.id] = material.name;\n      } else {\n        const isAllowed = material.isAllowed(item);\n        if (!isAllowed) continue;\n\n        if (!material.addon) {\n          materialList[material.id] = material.name;\n        } else {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    }\n\n    return {\n      materials: materialList,\n      addons: addonList,\n      basics: basicList,\n    };\n  }\n\n  _prepareAlignments(alignments) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: foundry.utils.deepClone(alignments),\n    };\n  }\n\n  async _prepareLinks(context) {\n    context.links = {\n      list: [],\n    };\n\n    // Add charges link type\n    if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      context.links.list.push({\n        id: \"charges\",\n        label: game.i18n.localize(\"PF1.LinkTypeCharges\"),\n        help: game.i18n.localize(\"PF1.LinkHelpCharges\"),\n        items: [],\n      });\n    }\n\n    // Add class associations\n    if (context.isClass) {\n      context.links.list.push({\n        id: \"classAssociations\",\n        label: game.i18n.localize(\"PF1.LinkTypeClassAssociations\"),\n        help: game.i18n.localize(\"PF1.LinkHelpClassAssociations\"),\n        fields: {\n          level: {\n            type: \"Number\",\n            label: game.i18n.localize(\"PF1.Level\"),\n          },\n        },\n        items: [],\n      });\n    }\n\n    // Add children link type\n    context.links.list.push({\n      id: \"children\",\n      label: game.i18n.localize(\"PF1.LinkTypeChildren\"),\n      help: game.i18n.localize(\"PF1.LinkHelpChildren\"),\n      items: [],\n    });\n\n    context.links.list.push({\n      id: \"supplements\",\n      label: game.i18n.localize(\"PF1.LinkTypeSupplements\"),\n      help: game.i18n.localize(\"PF1.LinkHelpSupplements\"),\n      fields: {\n        /*\n        // TODO: Add child link creation toggle\n        asChild: {\n          type: \"Boolean\",\n          label: game.i18n.localize(\"PF1.AsChild\"),\n        },\n        */\n      },\n      items: [],\n    });\n\n    // Post process data\n    const item = this.item,\n      actor = item.actor;\n    for (const links of context.links.list) {\n      const items = item.system.links?.[links.id] || [];\n      for (let index = 0; index < items.length; index++) {\n        const linkData = foundry.utils.deepClone(items[index]);\n        linkData.index = index; // Record index so sorted lists maintain data cohesion\n\n        const linkedItem = pf1.utils.internal.fromUuid(linkData.uuid, actor);\n        if (!linkedItem) linkData.broken = true;\n        linkData.img = linkedItem?.img || Item.implementation.getDefaultArtwork(linkedItem);\n\n        // Fill in name if it's not in the local data\n        linkData.name ||= linkedItem?.name;\n\n        // Add item to stack\n        links.items.push(linkData);\n      }\n    }\n  }\n\n  _prepareItemFlags(context) {\n    const flags = context.system.flags ?? {};\n    context.flags ??= {};\n    context.flags.boolean = flags.boolean ?? {};\n    context.flags.dictionary = flags.dictionary ?? {};\n  }\n\n  async _prepareScriptCalls(context) {\n    context.scriptCalls = null;\n\n    const categories = pf1.registry.scriptCalls.filter((category) => {\n      if (!category.itemTypes.includes(this.item.type)) return false;\n      return !(category.hidden === true && !game.user.isGM);\n    });\n    // Don't show the Script Calls section if there are no categories for this item type\n    if (!categories.length) return;\n\n    context.scriptCalls = {};\n\n    // Iterate over all script calls, and adjust data\n    const scriptCalls = this.item.scriptCalls ?? [];\n\n    // Create categories, and assign items to them\n    for (const { id, name, info } of categories) {\n      context.scriptCalls[id] = {\n        name,\n        tooltip: info,\n        items: scriptCalls.filter((sc) => sc.category === id && !sc.hide),\n        dataset: {\n          category: id,\n        },\n      };\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Form Submission                             */\n  /* -------------------------------------------- */\n\n  /**\n   * Extend the parent class _updateObject method to ensure that damage ends up in an Array\n   *\n   * @protected\n   * @param event\n   * @param formData\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    const oldData = this.item.toObject();\n    const system = formData.system;\n    const links = system.links;\n\n    if (links) {\n      const oldLinks = oldData.system?.links ?? {};\n      // Handle links arrays\n      for (const [linkType, typedLinks] of Object.entries(links)) {\n        if (Array.isArray(typedLinks)) continue; // Already handled by something else\n\n        // Maintain array and merge new data in\n        links[linkType] = foundry.utils.deepClone(oldLinks[linkType] ?? []);\n        for (const [index, linkData] of Object.entries(typedLinks)) {\n          links[linkType][index] = foundry.utils.mergeObject(links[linkType][index] ?? {}, linkData);\n        }\n      }\n    }\n\n    // Target for relative input handling\n    const targetName = event.target?.name;\n\n    // Handle relative input\n    function relativeInput(key, { min = -Infinity, max = Infinity, current, quantity = false, decimals = 0 } = {}) {\n      let value = foundry.utils.getProperty(system, key);\n      if (value === undefined) return null;\n\n      value = value.normalize(\"NFKD\");\n\n      // Not editing, unset value to prevent absurd changes\n      if (targetName !== `system.${key}`) {\n        foundry.utils.setProperty(system, key, undefined);\n        return null;\n      }\n\n      // Add or subtract values\n      let newValue;\n\n      // Relative input\n      if (value.match(/^(\\+|-)([.\\d]+)/)) {\n        const operator = RegExp.$1;\n        let value = parseFloat(RegExp.$2);\n        if (operator === \"-\") value = -value;\n        current ??= foundry.utils.getProperty(oldData.system, key);\n        newValue = current + value;\n      }\n      // Exact value\n      else if (value.match(/^=?-?\\d*(\\.\\d+)?$/)) {\n        newValue = parseFloat(value.replace(/^=/, \"\"));\n      }\n      // Cleared\n      else if (value === \"\") {\n        newValue = 0;\n      }\n      // Reset on invalid value\n      else {\n        newValue = 0;\n        // Trigger warning for bad value\n        event.target.setCustomValidity(game.i18n.localize(\"PF1.Warning.InvalidInput\"));\n      }\n\n      foundry.utils.setProperty(system, key, pf1.utils.limitPrecision(Math.clamp(newValue, min, max), decimals));\n      return newValue;\n    }\n\n    if (this.item.isPhysical) {\n      // Ensure values are stored as lbs\n      if (system.weight) {\n        if (system.weight?.value !== undefined) {\n          const current = pf1.utils.convertWeight(oldData.system.weight?.value ?? 0);\n          const value = relativeInput(\"weight.value\", { current, decimals: 2, quantity: true });\n          if (value === null) {\n            system.weight.value = undefined;\n          } else {\n            system.weight.value = pf1.utils.convertWeightBack(system.weight.value / this.item.getWeightMultiplier());\n          }\n        }\n\n        if (system.weight?.reduction?.value !== undefined) {\n          const current = pf1.utils.convertWeight(oldData.system.weight?.reduction?.value ?? 0);\n          const value = relativeInput(\"weight.reduction.value\", { min: 0, decimals: 2, current });\n          if (value === null) {\n            system.weight.reduction.value = undefined;\n          } else {\n            system.weight.reduction.value = pf1.utils.convertWeightBack(system.weight.reduction.value);\n          }\n        }\n      }\n\n      // Relative input handling, which also cancels updates if no relative input happened.\n      // Avoids value drift caused by displayed value not agreeing with base value\n\n      // Change currencies with relative values\n      const relativeKeys = [\"currency.pp\", \"currency.gp\", \"currency.sp\", \"currency.cp\", \"quantity\"];\n      for (const key of relativeKeys) {\n        relativeInput(key, { min: 0 });\n      }\n\n      const priceDecimals = decimalPlaces(pf1.config.currency.standardRate);\n\n      // Adjust with quantity\n      relativeInput(\"price\", { min: 0, quantity: true, decimals: priceDecimals });\n      relativeInput(\"unidentified.price\", { min: 0, quantity: true, decimals: priceDecimals });\n\n      // Adjust current and max HP relatively\n      relativeInput(\"hp.value\", { min: 0, current: this.item.system.hp?.value });\n      relativeInput(\"hp.base\", { min: 1 });\n      relativeInput(\"hardness\", { min: 0 });\n\n      relativeInput(\"weight.reduction.percent\", { min: 0, max: 100, decimals: 0 });\n\n      // Adjust current or max HP if adjusting the other would break logical constraints\n      const nHpVal = system.hp?.value;\n      const hpVal = nHpVal ?? oldData.system.hp?.value ?? 0;\n      const nHpBase = system.hp?.base;\n      const hpBase = Math.max(1, nHpBase ?? oldData.system.hp?.base ?? 1);\n\n      // Adjust only if the relevant field was edited\n      if (targetName === \"system.hp.value\") {\n        const realMax = this.item.system.hp?.max || 0;\n        if (Number.isFinite(nHpVal) && hpVal > realMax) {\n          foundry.utils.setProperty(system, \"hp.base\", hpBase + (hpVal - realMax));\n        }\n      }\n    }\n\n    // Adjust Material Addons\n    // The available addons can change depending in the chosen material,\n    // so we need to get the values to build the addons on the item.\n    const material = this.item.type === \"equipment\" ? system.armor?.material : system.material;\n    if (material?.addon) {\n      // Convert to array\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    // Validate max uses formula and set current uses to maximum if null\n    if (\n      formData.system.uses?.maxFormula &&\n      formData.system.uses?.maxFormula !== (this.item.system.uses?.maxFormula || \"\")\n    ) {\n      try {\n        const roll = new pf1.dice.RollPF(formData.system.uses.maxFormula, this.item.getRollData()).evaluateSync();\n        formData.system.uses.value ??= roll.total;\n      } catch (err) {\n        console.error(\"Max charges formula is invalid:\", formData.system.uses?.maxFormula, \"\\n\", err);\n      }\n    }\n\n    // Update the Item\n    return super._updateObject(event, formData);\n  }\n\n  /* -------------------------------------------- */\n\n  _onHoverTooltip(event) {\n    const type = event.target.dataset.tooltipType;\n    const content = [];\n    switch (type) {\n      case \"weight\":\n        this._onHoverWeightTooltip(event, content);\n        break;\n      case \"price\":\n        this._onHoverPriceTooltip(event, content);\n        break;\n      case \"unidprice\":\n        this._onHoverPriceTooltip(event, content, false);\n        break;\n    }\n    return content.join(\"<br>\");\n  }\n\n  _onHoverWeightTooltip(event, content) {\n    const unit =\n      pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs;\n    const value = pf1.utils.limitPrecision(this.item.system.weight.converted.value, 3);\n    // TODO: better i18n support\n    const mValue = `${value} ${unit}`;\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: mValue }));\n  }\n\n  _onHoverPriceTooltip(event, content, identified = true) {\n    let cp = this.item.getValue({\n      sellValue: 1,\n      single: true,\n      inLowestDenomination: true,\n      forceUnidentified: !identified,\n    });\n\n    cp = Math.floor(cp); // getValue() can return decimals\n\n    const c = pf1.utils.currency.split(cp);\n    const inline = [];\n    for (const [key, rawValue] of Object.entries(c)) {\n      if (rawValue > 0) {\n        const value = pf1.utils.limitPrecision(rawValue, 2);\n        inline.push(game.i18n.format(`PF1.Currency.Inline.${key}`, { value }));\n      }\n    }\n\n    // Add base zero if no value\n    if (inline.length == 0) {\n      inline.push(game.i18n.format(`PF1.Currency.Inline.${pf1.config.currency.standard}`, { value: 0 }));\n    }\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: pf1.utils.i18n.join(inline) }));\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula || \"0\");\n      await roll.evaluate({ allowInteractive: false });\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.classList.add(\"invalid\");\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Formulas not meant for checks or other rolls must be deterministic\n    if (el.classList.contains(\"simple\")) {\n      if (!roll.isDeterministic || formula.includes(\"@\")) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeSimple\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeSimple\"));\n      }\n    }\n    // TODO: Make this selection better\n    else if (!el.classList.contains(\"roll\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /**\n   * Activate listeners for interactive item sheet events\n   *\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const hasActor = !!this.actor;\n\n    const html = jq[0];\n\n    if (this.item.isPhysical) {\n      for (const el of html.querySelectorAll(\".details-tooltip\")) {\n        el.addEventListener(\n          \"pointermove\",\n          (ev) => {\n            const content = this._onHoverTooltip(ev);\n            if (!content) return;\n\n            const template = document.createElement(\"template\");\n            template.innerHTML = content;\n\n            game.tooltip.activate(el, {\n              content: template.content,\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.RIGHT,\n              cssClass: \"pf1\",\n            });\n          },\n          { passive: true }\n        );\n        el.addEventListener(\"pointerleave\", (ev) => game.tooltip.deactivate(), { passive: true });\n      }\n    }\n\n    // Action interactions\n    jq.find(\".actions .item-list .item .item-name\")\n      // Edit action\n      .on(\"contextmenu\", this._onActionEdit.bind(this))\n      // Action summaries\n      .on(\"click\", this._onActionSummary.bind(this));\n\n    // Action control\n    jq.find(\".actions .action-controls a\").on(\"click\", this._onActionControl.bind(this));\n\n    // Instructions control\n    jq.find(\".tab.description .instructions .controls a.html-editor\").on(\"click\", this._onOpenTextEditor.bind(this));\n\n    // Open help browser\n    jq.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Open entry/trait editor/viewer\n    jq.find(\".entry-selector\").on(\"click\", this._onEntrySelector.bind(this));\n    jq.find(\".trait-selector\").on(\"click\", this._onTraitSelector.bind(this));\n    jq.find(\".flag-selector\").on(\"click\", this._onFlagSelector.bind(this));\n\n    // Content source editor\n    jq.find(\".content-source .control a.edit\").click(() =>\n      pf1.applications.ContentSourceEditor.open(this.item, { editable: this.isEditable })\n    );\n\n    // Mark proficiency in indeterminate state if not forced but actor has it.\n    if (\n      hasActor &&\n      this.item.system.proficient !== true &&\n      [\"weapon\", \"equipment\", \"attack\"].includes(this.item.type)\n    ) {\n      if (this.item.isProficient) {\n        const proficiency = jq.find(\"input[name='system.proficient']\")[0];\n        if (proficiency) proficiency.indeterminate = true;\n      }\n    }\n\n    // Mark broken in indeterminate state if it's automatically designated broken but not explicitly\n    if (this.item.isPhysical) {\n      if (this.item.isBroken && this.item.system.broken !== true) {\n        const broken = jq.find(\"input[name='system.broken']\")[0];\n        if (broken) {\n          broken.indeterminate = true;\n          broken.dataset.tooltip = \"PF1.AutoBroken\";\n        }\n      }\n    }\n\n    // Allow editing and viewing visible scripts\n    jq.find(\".script-calls .item-list .item\").contextmenu(this._onScriptCallEdit.bind(this));\n    jq.find(\".script-calls .item-control\").click(this._onScriptCallControl.bind(this));\n\n    // Add warning about formulas\n    jq.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    // Linked item clicks\n    jq.find(\".tab[data-tab='links'] .links-item .item-name .source-item\").on(\"click\", this._openLinkedItem.bind(this));\n\n    jq.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    // Modify note changes\n    jq.find(\".context-note-control\").click(this._onNoteControl.bind(this));\n    jq.find(\".context-note .context-note-target\").click(this._onNoteTargetControl.bind(this));\n\n    // Create new change\n    jq.find(\".tab.changes .controls a.add-change\").click(this._onCreateChange.bind(this));\n\n    // Effect notes and footnotes\n    jq.find(\".card-notes .controls a\").click(this._onCardNoteControl.bind(this));\n\n    // Link control\n    jq.find(\".link-control\").click(this._onLinkControl.bind(this));\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      jq.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add drop handler to textareas and text inputs\n    jq.find(\"textarea, input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Changes\n    html.querySelectorAll(\".tab.changes .changes .change[data-change-id]\").forEach((el) => {\n      // Sticky tooltip controls\n      el.querySelector(\".controls a.menu\").addEventListener(\"pointerenter\", this._onOpenChangeMenu.bind(this), {\n        passive: true,\n      });\n      // Right click open change editor\n      el.addEventListener(\"contextmenu\", this._onEditChange.bind(this));\n    });\n\n    // Create attack\n    if ([\"weapon\"].includes(this.item.type)) {\n      jq.find(\"button[name='create-attack']\").click(this._createAttack.bind(this));\n    }\n\n    // Create spellbook\n    if (this.item.type === \"class\") {\n      jq.find(\"button[name='create-spellbook']\").click(this._createSpellbook.bind(this));\n    }\n\n    // Listen to field entries\n    jq.find(\".item-selector\").click(this._onItemSelector.bind(this));\n\n    // Click to change text input\n    jq.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n\n    // Select the whole text on click\n    jq.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    jq.find(\".speed-editor\").click(this._onSpeedEdit.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Actions\n    /* -------------------------------------------- */\n\n    // Modify action charges\n    jq.find(\".action-parts .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setActionUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setActionUses.bind(this));\n      });\n\n    // Open charge source with right click\n    jq.find(\".item-link[data-item-id]\").on(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.currentTarget.dataset.itemId;\n      const item = this.actor.items.get(itemId);\n      item?.sheet.render(true, { focus: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Script Calls\n    /* -------------------------------------------- */\n\n    jq.find(\".script-calls .item-list[data-category]\").on(\"drop\", this._onScriptCallDrop.bind(this));\n  }\n\n  _onSpanTextInput(event, callback = null) {\n    const el = event.currentTarget;\n    const parent = el.parentElement;\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(`INPUT`);\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) newEl.dataset.dtype = el.dataset.dtype;\n\n    // Set value of new input element\n    let prevValue = el.innerText;\n    if (el.classList.contains(\"placeholder\")) prevValue = \"\";\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n\n    const name = el.getAttribute(\"name\");\n    let maxValue;\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.item, name) ?? \"\";\n      if (typeof prevValue !== \"string\") prevValue = prevValue.toString();\n\n      if (name.endsWith(\".value\") && !noCap) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.item, maxName);\n      }\n    }\n    newEl.value = prevValue;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    // Replace span with input element\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = parseFloat(el.dataset.clearValue || \"0\");\n    parent.replaceChild(newEl, el);\n    let changed = false;\n    newEl.addEventListener(\"keypress\", (event) => {\n      if (event.key !== \"Enter\") return;\n      changed = true;\n      if (allowRelative) {\n        const number = pf1.utils.internal.adjustNumberByStringCommand(\n          parseFloat(prevValue),\n          newEl.value,\n          maxValue,\n          clearValue\n        );\n        newEl.value = number;\n      }\n\n      if (newEl.value.toString() === prevValue.toString()) {\n        this.render();\n      } else if (typeof callback === \"function\") {\n        callback(event);\n      }\n    });\n    newEl.addEventListener(\"focusout\", (event) => {\n      if (!changed) {\n        changed = true;\n        if (allowRelative && parseFloat(prevValue) !== parseFloat(newEl.value)) {\n          const number = pf1.utils.internal.adjustNumberByStringCommand(\n            parseFloat(prevValue),\n            newEl.value,\n            maxValue,\n            clearValue\n          );\n          newEl.value = number;\n        }\n\n        if (newEl.value.toString() === prevValue.toString()) {\n          this.render();\n        } else if (typeof callback === \"function\") {\n          callback(event);\n        }\n      }\n    });\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setActionUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const actionId = el.closest(\".item[data-action-id]\").dataset.actionId;\n    const action = this.item.actions.get(actionId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setActionUpdate(action.id, \"uses.self.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateActions(), { passive: true, once: true });\n    } else this._updateActions();\n  }\n\n  setActionUpdate(id, key, value) {\n    let obj = this._actionUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._actionUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _updateActions() {\n    const updates = this._actionUpdates;\n    this._actionUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const action = this.item.actions.get(d._id);\n      if (!action) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      await action.update(d);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const category = a.dataset.category;\n\n    pf1.applications.compendiums[category].render(true, { focus: true });\n  }\n\n  async _onScriptCallControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const script = this.item.scriptCalls ? this.item.scriptCalls.get(a.closest(\".item\")?.dataset.itemId) : null;\n    const group = a.closest(\".item-list\");\n    const category = group.dataset.category;\n\n    // Create item\n    if (a.classList.contains(\"item-create\")) {\n      await this._onSubmit(event, { preventRender: true });\n      const newScripts = await pf1.components.ItemScriptCall.create([{ category, type: \"script\" }], {\n        parent: this.item,\n      });\n      newScripts?.forEach((script) => script.edit());\n      return;\n    }\n    // Delete item\n    else if (script && a.classList.contains(\"item-delete\")) {\n      const list = (this.item.system.scriptCalls || []).filter((o) => o._id !== script.id);\n      const updateData = { \"system.scriptCalls\": list };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Edit item\n    else if (script && a.classList.contains(\"item-edit\")) {\n      script.edit();\n    }\n    // Toggle hidden\n    else if (script && a.classList.contains(\"item-hide\")) {\n      await this._onSubmit(event, { preventRender: true });\n      script.update({ hidden: !script.hidden });\n    }\n  }\n\n  _onScriptCallEdit(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    /** @type {pf1.components.ItemScriptCall} */\n    const script = this.item.scriptCalls?.get(el.dataset.itemId);\n    script?.edit({ editable: this.isEditable });\n  }\n\n  /**\n   * Handle dropping content-linkable data to `<textarea>` or text `<input>`\n   *\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onTextAreaDrop(event) {\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    if (elem.disabled || elem.readOnly) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n    if (!link) return void ui.notifications.warn(\"PF1.Error.InvalidContentLinkDrop\", { localize: true });\n\n    // Insert link\n    // TODO: Replace painted text if any\n    elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n    return this._onSubmit(event); // Save\n  }\n\n  async _onScriptCallDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const { uuid, type } = eventData;\n    if (type !== \"Macro\") return;\n\n    // Submit data\n    if (uuid) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const elem = event.currentTarget;\n      const category = elem.dataset.category;\n\n      return pf1.components.ItemScriptCall.create([{ type: \"macro\", value: uuid, category, name: \"\", img: \"\" }], {\n        parent: this.item,\n      });\n    }\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * By default, returns true only for GM\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const elem = event.target;\n\n    // Drag action\n    const actionId = elem.dataset.actionId;\n    if (actionId) {\n      /** @type {pf1.components.ItemAction} */\n      const action = this.item.actions.get(actionId);\n      const obj = { type: \"pf1Action\", uuid: action.uuid, actionId: action.id, data: action.toObject() };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag Change\n    const changeId = elem.dataset.changeId;\n    if (changeId) {\n      /** @type {pf1.components.ItemChange} */\n      const ch = this.item.changes.get(changeId);\n      const obj = { type: \"pf1Change\", data: ch.toObject(), changeId, uuid: ch.uuid };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag link\n    if (elem.matches(\".links-item .item-name\")) {\n      const el = elem.closest(\"[data-uuid]\");\n      const type = el.closest(\"[data-tab]\")?.dataset.tab;\n      const uuid = pf1.utils.internal.uniformUuid(el.dataset.uuid, this.actor);\n      const index = Number(el.dataset.index);\n      const link = this.item.system.links?.[type]?.[index];\n      const obj = { type: \"Item\", uuid, pf1Link: {} };\n      if (link) obj.pf1Link.level = link.level;\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n  }\n\n  /**\n   * Allow non-GM to drag&drop actions and items (for containers) to this sheet.\n   *\n   * @override\n   * @protected\n   */\n  _canDragDrop() {\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    if (!this.isEditable) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dropData = TextEditor.getDragEventData(event);\n    const { type, uuid } = dropData;\n    if (!type) return; // Weird drop, just bail out on it\n\n    /** @type {ItemPF} */\n    const item = this.item;\n\n    const srcDoc = uuid ? await fromUuid(uuid) : null;\n\n    switch (type) {\n      // Handle actions\n      case \"pf1Action\": {\n        let actionData;\n\n        /** @type {pf1.components.ItemAction} */\n        let parentItem;\n        // @deprecated\n        if (srcDoc instanceof Item) {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemSheetPF drop handler accepting Actions with UUID pointing to the Item is deprecated, please provide UUID to the Action itself\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n          actionData = dropData.data;\n          parentItem = srcDoc;\n        }\n        // New functionality\n        else {\n          actionData = srcDoc.toObject();\n          parentItem = srcDoc.item;\n        }\n\n        const actionId = actionData._id || dropData.actionId;\n\n        this.activateTab(\"details\", { group: \"primary\" });\n\n        // Re-order\n        if (parentItem === item) {\n          const targetActionId = event.target.closest(\".item[data-action-id]\")?.dataset.actionId;\n          if (!targetActionId) return void console.debug(\"Action dropped at an indeterminate location; ignoring\");\n\n          // Dropped onto self, ignore.\n          if (targetActionId === actionId) return void console.debug(`Action [${uuid}] dropped onto itself; ignoring`);\n\n          /** @type {object[]} */\n          const prevActions = item.toObject().system.actions ?? [];\n\n          let targetIdx;\n          if (!targetActionId) targetIdx = prevActions.length - 1;\n          else targetIdx = prevActions.indexOf(prevActions.find((o) => o._id === targetActionId));\n          const srcIdx = prevActions.indexOf(prevActions.find((o) => o._id === actionId));\n\n          const [actionData] = prevActions.splice(srcIdx, 1);\n          prevActions.splice(targetIdx, 0, actionData);\n\n          await this.item.update({ \"system.actions\": prevActions });\n        }\n        // Add to another item\n        else {\n          delete actionData._id;\n          return pf1.components.ItemAction.create([actionData], { parent: this.item });\n        }\n        break;\n      }\n\n      case \"pf1Change\": {\n        return this._onChangeDrop(event, dropData);\n      }\n\n      case \"Item\": {\n        // Add drop handler to link tabs\n        const linksTab = event.target.closest(\".tab.links .tab[data-group='links']\");\n        if (linksTab) this._onLinksDrop(event, dropData);\n        break;\n      }\n      case \"pf1ContentSourceEntry\": {\n        const src = dropData.data;\n        const origin = await fromUuid(dropData.uuid);\n        if (!origin) return;\n        if (origin === this.item) return; // From same item\n\n        const sources = this.item.toObject().system.sources ?? [];\n\n        // Disallow same ID source copy\n        if (src.id && sources.some((osrc) => (src.id ? osrc.id === src.id : osrc.title === src.title))) {\n          ui.notifications.warn(\"PF1.ContentSource.Errors.DuplicateID\", { localize: true });\n          return;\n        }\n\n        sources.push(src);\n        await this.item.update({ \"system.sources\": sources });\n        if (!event.shiftKey) {\n          pf1.applications.ContentSourceEditor.open(this.item);\n          // TODO: Activate desired tab.\n        }\n        break;\n      }\n      default:\n        ui.notifications.warn(game.i18n.format(\"PF1.Warning.InvalidItemSheetDrop\", { type }));\n        break;\n    }\n  }\n\n  async _onLinksDrop(event, data) {\n    const elem = event.target;\n    const category = elem.closest(\"[data-tab]\").dataset.tab;\n\n    // Try to extract the data\n    if (!data.type) throw new Error(\"Invalid drop data received\");\n\n    const targetItem = await fromUuid(data.uuid);\n    if (!targetItem || !(targetItem instanceof Item))\n      throw new Error(`UUID did not resolve to valid item: ${data.uuid}`);\n\n    // Add extra data\n    const extraData = {};\n    switch (category) {\n      case \"classAssociations\": {\n        const level = data.pf1Link?.level;\n        if (Number.isNumeric(level)) extraData.level = level;\n        break;\n      }\n    }\n\n    await this.item.createItemLink(category, targetItem, extraData);\n  }\n\n  /**\n   * Handle {@link pf1.components.ItemChange} drop events.\n   *\n   * @internal\n   * @param {DragEvent} event - The originating drop event\n   * @param {object} data - The data extracted from the drop event\n   * @returns {Promise<void>}\n   */\n  async _onChangeDrop(event, data) {\n    const item = this.item;\n    const srcDoc = data.uuid ? await fromUuid(data.uuid) : null;\n    let chData;\n\n    /** @type {ItemPF} */\n    let parentItem;\n    // @deprecated\n    if (srcDoc instanceof Item) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemSheetPF drop handler accepting Changes with UUID pointing to the Item is deprecated, please provide UUID to the Change itself\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      chData = data.data;\n      parentItem = srcDoc;\n    }\n    // New functionality\n    else {\n      chData = srcDoc.toObject();\n      parentItem = srcDoc.parent;\n    }\n\n    const changeId = chData._id || data.changeId;\n\n    this.activateTab(\"changes\", { group: \"primary\" });\n\n    // Sort in same item\n    if (parentItem === item) {\n      const targetChangeId = event.target.closest(\".change[data-change-id]\")?.dataset.changeId;\n      if (!targetChangeId) return void console.debug(\"Change dropped at an indeterminate location; ignoring\");\n\n      // Dropped onto self, ignore.\n      if (changeId === targetChangeId) return void console.debug(`Change [${data.uuid}] dropped onto itself; ignoring`);\n\n      // Re-arrange\n      /** @type {Array<object>} */\n      const changes = item.toObject().system.changes ?? [];\n      const removed = changes.findSplice((c) => c._id === changeId);\n      if (!removed) return;\n      const idx = changes.findIndex((c) => c._id === targetChangeId);\n      if (idx >= 0) {\n        changes.splice(idx, 0, removed);\n        return item.update({ \"system.changes\": changes });\n      }\n    }\n    // Duplicate\n    else {\n      delete chData._id;\n      return pf1.components.ItemChange.create([chData], { parent: item });\n    }\n  }\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n      hasCustom: a.dataset.hasCustom !== \"false\",\n    };\n\n    switch (a.dataset.options) {\n      case \"conditions\": {\n        options.choices = pf1.registry.conditions.getLabels();\n        break;\n      }\n      case \"subschool\": {\n        const school = a.dataset.school;\n        const subs = new Set([...pf1.config.spellSubschoolsMap[school], ...this.item.system.subschool.base]);\n        const choices = subs.reduce((acc, curr) => ({ ...acc, [curr]: pf1.config.spellSubschools[curr] }), {});\n        options.choices = choices;\n        break;\n      }\n    }\n\n    new ActorTraitSelector({\n      ...options,\n      document: this.item,\n    }).render(true);\n  }\n\n  /**\n   * Handle spawning the FlagSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onFlagSelector(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n    };\n\n    new FlagSelector({\n      ...options,\n      document: this.item,\n    }).render(true);\n  }\n\n  _onSpeedEdit(event) {\n    event.preventDefault();\n\n    const app = Object.values(ui.windows).find((o) => {\n      return o instanceof SpeedEditor && o.document === this.item;\n    });\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else new SpeedEditor({ document: this.item }).render({ force: true });\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @protected\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   */\n  async _onActionSummary(event) {\n    event.preventDefault();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    // Check whether pseudo-item belongs to another collection\n    const action = this.item.actions.get(li.dataset.actionId);\n\n    const rollData = action.getRollData();\n\n    // For actions (embedded into a parent item), show only the action's summary instead of a complete one\n    const { actionDescription, properties } = await action.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    if (li.classList.contains(\"expanded\")) {\n      const summary = li.querySelector(\".action-summary\");\n      $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: actionDescription,\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/items/parts/item-action-summary.hbs\", templateData);\n      content = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.item.isOwner });\n\n      const div = $(content);\n      div.hide();\n      li.append(...div);\n      div.slideDown(200);\n    }\n    li.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Open linked item sheet.\n   *\n   * @param {Event} event\n   */\n  async _openLinkedItem(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".links-item[data-uuid],.links-item[data-item-id]\");\n    const { uuid } = el.dataset;\n\n    const item = await fromUuid(uuid, { relative: this.actor });\n    item.sheet.render(true, { focus: true });\n  }\n\n  async _onActionControl(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const a = event.currentTarget;\n\n    const getUniqueActionName = (baseName) => {\n      baseName = baseName.replace(/\\s*\\(\\d+\\)$/, \"\"); // Strip existing number\n      let name = baseName;\n      const names = new Set(this.item.actions?.map((act) => act.name) ?? []);\n      let iter = 1;\n      // Find unique name\n      while (names.has(name)) name = `${baseName} (${iter++})`;\n      return name;\n    };\n\n    // Edit action\n    if (a.classList.contains(\"edit-action\")) {\n      return this._onActionEdit(event);\n    }\n    // Add action\n    else if (a.classList.contains(\"add-action\")) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const baseName = [\"weapon\", \"attack\"].includes(this.item.type)\n        ? game.i18n.localize(\"PF1.Attack\")\n        : game.i18n.localize(\"PF1.Use\");\n\n      const newActionData = {\n        name: getUniqueActionName(baseName),\n      };\n\n      const newActions = await pf1.components.ItemAction.create([newActionData], { parent: this.item });\n      newActions.forEach((action) => action.sheet.render(true));\n      return;\n    }\n    // Remove action\n    else if (a.classList.contains(\"delete-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const action = this.item.actions.get(li.dataset.actionId);\n\n      const confirmed = getSkipActionPrompt()\n        ? true\n        : await foundry.applications.api.DialogV2.confirm({\n            window: { title: game.i18n.format(\"PF1.DeleteActionTitle\", { name: action.name }) },\n            classes: [\"pf1-v2\", \"delete-action\"],\n            content: `<p>${game.i18n.format(\"PF1.DeleteActionConfirmation\", { name: this.item.name })}</p>`,\n            rejectClose: false,\n            modal: true, // Require dialog to be resolved\n          });\n\n      if (confirmed === true) {\n        await this._onSubmit(event, { preventRender: true });\n        action.delete();\n      }\n    }\n    // Duplicate action\n    else if (a.classList.contains(\"duplicate-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const actions = this.item.toObject().system.actions ?? [];\n      const action = foundry.utils.deepClone(actions.find((act) => act._id === li.dataset.actionId) ?? {});\n      action.name = getUniqueActionName(action.name);\n      action._id = foundry.utils.randomID(16);\n      actions.push(action);\n      const updateData = { \"system.actions\": actions };\n      await this._updateObject(event, this._getSubmitData(updateData));\n      this.item.actions.get(action._id)?.sheet.render(true);\n    }\n  }\n\n  async _onActionEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    this.item.actions.get(li.dataset.actionId).sheet.render(true);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onOpenTextEditor(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) throw new Error(\"Document is not editable!\");\n\n    const app = new pf1.applications.HTMLEditor({\n      document: this.item,\n      path: event.target.dataset.path,\n      window: { title: `${game.i18n.localize(\"PF1.Instructions\")} – ${this.item.name}` },\n    });\n\n    app.render(true);\n  }\n\n  async _onOpenChangeMenu(event) {\n    const el = event.target;\n\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n\n    const content = document.createElement(\"div\");\n    content.innerHTML = await renderTemplate(\"systems/pf1/templates/items/parts/item-change-tooltip.hbs\", { changeId });\n\n    content.querySelector(\".duplicate\").addEventListener(\"click\", (ev) => this._onDuplicateChange(ev, el));\n    content.querySelector(\".delete\").addEventListener(\"click\", (ev) => this._onDeleteChange(ev, el));\n    content.querySelector(\".edit\").addEventListener(\"click\", (ev) => this._onEditChange(ev, el, true));\n\n    if (!document.querySelector(`.locked-tooltip.pf1.change-${changeId}`)) {\n      await game.tooltip.activate(el, {\n        content,\n        locked: true,\n        direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n        cssClass: \"pf1 change-menu change-\" + changeId,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   * @param {boolean} [tooltip] - Is this event from locked tooltip?\n   */\n  _onEditChange(event, tooltip = false) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.closest(\"[data-change-id]\").dataset.changeId;\n    const change = this.item.changes.get(changeId);\n    if (change) {\n      if (tooltip) game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      return void pf1.applications.ChangeEditor.wait({ change, document: this.item });\n    }\n  }\n\n  _onDuplicateChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n    const changes = this.item.toObject().system.changes ?? [];\n    const old = changes.find((c) => c._id === changeId);\n    if (old) {\n      game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      delete old._id;\n      return pf1.components.ItemChange.create([old], { parent: this.item });\n    }\n  }\n\n  _onDeleteChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n    this.item.changes.get(changeId)?.delete();\n  }\n\n  async _onCreateChange(event) {\n    event.preventDefault();\n\n    const [change] = await pf1.components.ItemChange.create([{ modifier: \"untyped\" }], { parent: this.item });\n    if (change) pf1.applications.ChangeEditor.wait({ change, document: this.item });\n  }\n\n  async _onNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Add new note\n    if (a.classList.contains(\"add-note\")) {\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.push(pf1.components.ContextNote.schema.getInitialValue());\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a note\n    if (a.classList.contains(\"delete-note\")) {\n      const li = a.closest(\".context-note\");\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.splice(Number(li.dataset.note), 1);\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _onNoteTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const li = a.closest(\".context-note\");\n    const noteIndex = Number(li.dataset.note);\n    const note = this.item.system.contextNotes[noteIndex];\n    const categories = pf1.utils.internal.getBuffTargetDictionary(\"contextNotes\", {\n      actor: this.item.actor,\n      item: this.item,\n    });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = note?.target?.split(\".\")[0];\n    const category = pf1.config.contextNoteTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { window: { title: \"PF1.Application.ContextNoteTargetSelector.Title\" } },\n      categories,\n      (key) => {\n        if (key) {\n          const updateData = {};\n          updateData[`system.contextNotes.${noteIndex}.target`] = key;\n          this.item.update(updateData);\n        }\n      },\n      { category, item: note?.target }\n    );\n    w.render(true);\n  }\n\n  async _onLinkControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Delete link\n    if (a.classList.contains(\"delete-link\")) {\n      const { type, uuid, index } = a.dataset;\n      const links = this.item.toObject().system.links?.[type] ?? [];\n\n      const deleted = links.splice(Number(index), 1);\n\n      // Sanity check: Should happen only if update sneaks in between render and click\n      if (deleted.uuid && deleted.uuid !== uuid) throw new Error(\"Link deletion UUID mismatch\");\n\n      // Call hook for deleting a link\n      Hooks.callAll(\"pf1DeleteItemLink\", this.item, deleted, type);\n\n      const updateData = { \"system.links\": { [type]: links } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onInputText(event) {\n    event.preventDefault();\n\n    /** @type {HTMLElement} */\n    const elem = event.target;\n\n    elem.readOnly = false;\n\n    // Get and set real value\n    const { inputValue } = elem.dataset;\n    let origValue = inputValue ?? foundry.utils.getProperty(this.item, elem.name);\n    const displayValue = elem.value;\n    elem.value = origValue;\n    elem.select();\n\n    // Restore old display on unfocus if nothing was changed\n    elem.addEventListener(\n      \"blur\",\n      () => {\n        if (typeof origValue === \"number\") origValue = origValue.toString();\n        if (origValue === elem.value) {\n          elem.readOnly = true;\n          elem.value = displayValue;\n        }\n\n        // Clear selection\n        const s = document.getSelection();\n        if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n      },\n      { once: true, passive: true }\n    );\n  }\n\n  async _createAttack(event) {\n    if (!this.actor) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n\n    await this._onSubmit(event, { preventRender: true });\n\n    const item = this.item;\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(item);\n\n    // Show in quickbar only if if the original item is there\n    attackItem.system.showInQuickbar = item.system.showInQuickbar;\n\n    // Create attack\n    const newAttack = await Item.implementation.create(attackItem, { parent: this.actor });\n    if (!newAttack) throw new Error(\"Failed to create attack from weapon\");\n\n    // Disable quick use of weapon\n    await item.update({ \"system.showInQuickbar\": false });\n\n    // Create link\n    await item.createItemLink(\"children\", newAttack);\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: item.name }));\n  }\n\n  async _createSpellbook(event) {\n    event.preventDefault();\n    if (this.item.actor == null) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n    await this._onSubmit(event, { preventRender: true });\n\n    await this.item.actor.createSpellbook({ ...this.item.system.casting, class: this.item.system.tag });\n\n    // HACK: The above does not re-render the item sheet for some reason\n    this.render();\n  }\n\n  _onEntrySelector(event) {\n    event.preventDefault();\n\n    //if (!this.isEditable) return; // Learned at data can't be seen otherwise\n\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: a.dataset.title,\n      flag: a.dataset.flag === \"true\",\n      boolean: a.dataset.boolean === \"true\",\n      flat: a.dataset.flat === \"true\",\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n    };\n\n    const app = Object.values(foundry.applications.instances).find((o) => {\n      return o instanceof pf1.applications.EntrySelector && o.name === options.name && o.document.id === this.id;\n    });\n\n    if (app) {\n      app.render(true);\n      app.bringToFront();\n    } else {\n      new pf1.applications.EntrySelector({\n        ...options,\n        document: this.item,\n      }).render({ force: true });\n    }\n  }\n\n  async _onItemSelector(event) {\n    event.preventDefault();\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n    // This function should never be called without an actor\n    if (!this.actor) throw new Error(\"No actor to find items from.\");\n\n    const { type, subType, kind, empty, selected, label, name } = event.currentTarget.dataset;\n\n    const filter = (item) => {\n      if (type && item.type !== type) return false;\n      if (subType && item.subType !== subType) return false;\n      if (subType === \"ammo\" && kind) {\n        if (item.system.extraType !== kind) return false;\n      }\n      return true;\n    };\n\n    const options = {\n      window: {\n        title: `${game.i18n.format(\"PF1.SelectSpecific\", { specifier: game.i18n.localize(label) })} - ${\n          this.actor.name\n        }`,\n      },\n      id: `${this.item.uuid}-item-selector`,\n      actor: this.actor,\n      empty: empty === \"true\" || empty !== \"false\",\n      filterFunc: filter,\n      selected,\n    };\n\n    const item = await pf1.utils.dialog.getItem(options);\n    if (!item) return;\n\n    this.item.update({ [name]: item.id });\n  }\n\n  /**\n   * Control effect notes and footnotes\n   *\n   * @internal\n   * @param {Event} event\n   * @returns {Promise<void>}\n   */\n  async _onCardNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const name = a.dataset.name;\n    const action = a.dataset.action;\n\n    const notes = foundry.utils.getProperty(this.item.toObject(), name) ?? [];\n\n    switch (action) {\n      case \"add\": {\n        notes.push(\"\");\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      case \"delete\": {\n        notes.splice(Number(a.dataset.index), 1);\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n}\n\n/**\n * @typedef {object} DescriptionAttribute\n * @property {string} name - Data path to which the input will be written\n * @property {boolean} [fakeName] - Is player lied to about what they're editing. Unused.\n * @property {string} id\n * @property {boolean} [isNumber] - Whether the input is a number (text input)\n * @property {boolean} [isBoolean] - Whether the input is a boolean (checkbox)\n * @property {boolean} [isRange] - Whether this is a dual input for a value and a maximum value\n * @property {string} label - The label for the input\n * @property {string | boolean | number | {value: string | number, name: string}} value - The value that is show in the sidebar.\n *   Ranges require an object with `value` and `name` properties.\n * @property {{value: string | number, name: string}} [max] - Maximum value for a range input\n * @property {number} [decimals] - Number of decimals to display for `number`s\n * @property {boolean} [fakeValue] - Is {@link DescriptionAttribute#inputValue} actually used.\n * @property {string} [inputValue] - Value that will appear in the input field when it is edited,\n *                                   overriding the default value retrieved from the item data\n *                                   using {@link DescriptionAttribute#name}\n */\n","import { ItemSheetPF } from \"./item-sheet.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\nimport { CurrencyTransfer } from \"../currency-transfer.mjs\";\n\nexport class ItemSheetPF_Container extends ItemSheetPF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * IDs of expanded items.\n     *\n     * @private\n     * @type {string[]}\n     */\n    this._expandedItems = [];\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      search: { container: \"\" },\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = \"\"; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Override item sheet initial tab.\n     * Assumes first tab definition is the main tab.\n     */\n    this.options.tabs[0].initial = \"contents\"; // Doesn't actually do anything\n    this._tabs[0].active = \"contents\"; // Actual override\n  }\n\n  static get defaultOptions() {\n    const defaultOptions = super.defaultOptions;\n    return foundry.utils.mergeObject(defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [...defaultOptions.scrollY, \".inventory-body\"],\n      dragDrop: [\n        { dragSelector: \"li.item[data-item-id]\", dropSelector: '.tab[data-tab=\"contents\"]' },\n        { dragSelector: \".tab.changes li.change\" },\n        { dragSelector: \"label.denomination\" },\n      ],\n    });\n  }\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    return \"systems/pf1/templates/items/container.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const context = await super.getData();\n\n    context.units = {\n      weight:\n        pf1.utils.getWeightSystem() === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n    };\n\n    // Add filters\n    context.filters = this._filters;\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.item.system.currency).some((o) => o > 0);\n\n    // Prepare inventory\n    this._prepareContents(context);\n\n    // Get contents weight\n    const usystem = pf1.utils.getWeightSystem();\n    context.weight = {\n      contents: this.item.system.weight.converted.contents,\n      units: usystem === \"metric\" ? pf1.config.weightUnitsShort.kg : pf1.config.weightUnitsShort.lbs,\n    };\n\n    // Get contents value\n    const coinage = pf1.utils.currency.merge(this.item.system.currency);\n\n    const cpValue =\n      this.item.getValue({ recursive: true, sellValue: 1, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) -\n      coinage;\n    const cpSellValue =\n      this.item.getValue({ recursive: true, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, inLowestDenomination: true }) -\n      coinage;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.currency = pf1.utils.currency.split(coinage, { pad: true });\n\n    // Set value labels\n    context.labels ??= {};\n    context.labels.totalValue = game.i18n.format(\"PF1.SplitValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.SplitValue\", context.sellValue);\n    context.labels.currency = game.i18n.format(\"PF1.SplitValue\", context.currency);\n\n    context.labels.itemValue = `PF1.Currency.Inline.${pf1.config.currency.standard}`;\n\n    return context;\n  }\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @internal\n   * @param {object} item - Item render data\n   * @param {object} section - Section configuration\n   * @param {object} context - Render context\n   */\n  _prepareItemForSection(item, section, context) {\n    if (section.interface.value) {\n      item.price = {\n        value: item.document.getValue({ single: true, recursive: false, sellValue: 1 }),\n        stack: item.document.getValue({ single: false, recursive: true, sellValue: 1 }),\n      };\n    }\n  }\n\n  /**\n   * @protected\n   * @param {pf1.documents.item.ItemPhysicalPF} item - Item document\n   * @param {object} context - Render context\n   * @returns {object} - Item render data\n   */\n  _prepareItem(item, context) {\n    const itemData = item.system;\n    const result = { ...item };\n    result.id = item.id; // Alias\n    result.name = item.name;\n    result.img ||= item.getDefaultArtwork();\n    result.subType = item.subType;\n    result.document = item;\n    result.labels = item.getLabels();\n    result.isCharged = !item.isSingleUse && item.isCharged;\n    result.charges = result.isCharged ? item.charges : Infinity;\n    result.hasAttack = item.hasAttack;\n    result.hasDamage = item.hasDamage;\n    result.hasAction = item.hasAction || item.isCharged;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n\n    result.hasUses = item.system.uses?.max > 0;\n    //i.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n\n    result.quantity = itemData.quantity || 0;\n    result.isStack = result.quantity > 1;\n    result.destroyed = itemData.hp?.value <= 0;\n    result.isEmpty = result.quantity <= 0;\n    result.isBroken = item.isBroken;\n\n    result.price = null;\n\n    if (!result.isEmpty && result.isCharged) {\n      if (result.charges <= 0) result.isEmpty = true;\n    }\n\n    if (result.isCharged) {\n      result.maxCharges = item.maxCharges;\n      result.noMaxCharges = !Number.isFinite(result.maxCharges);\n    }\n\n    result.disabled = result.isEmpty || result.destroyed || false;\n\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} context - Render context\n   */\n  _prepareContents(context) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // The item's items\n    context.items = this.item.items.map((item) => this._prepareItem(item));\n\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Organize Inventory\n    for (const itemData of context.items) {\n      const section = inventory.find((section) => this._applySectionFilter(itemData, section));\n      if (section) {\n        this._prepareItemForSection(itemData, section);\n        section.items ??= [];\n        section.items.push(itemData);\n      } else {\n        console.warn(`Could not find section for item \"${itemData.name}\"`, itemData);\n      }\n    }\n\n    context.inventory = inventory;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.document.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this._openItemSummary(elem, { animation: false });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(`.tab[data-tab=\"contents\"] .item-create`).click((ev) => this._onItemCreate(ev));\n    html.find(`.tab[data-tab=\"contents\"] .item-edit`).click(this._onItemEdit.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-delete`).click(this._onItemDelete.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-take`).click(this._onItemTake.bind(this));\n\n    html\n      .find(\".item .item-name\")\n      // Quick edit item\n      .contextmenu(this._onItemEdit.bind(this))\n      // Open item summary\n      .click(this._onItemSummary.bind(this));\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick Item Action control\n    html.find(\".item-actions a\").click((ev) => this._quickItemActionControl(ev));\n\n    // Set item uses\n    html\n      .find(\".item-detail.item-uses input[type='text']:not(:disabled)\")\n      .off(\"change\")\n      .change(this._setItemUses.bind(this))\n      .on(\"wheel\", this._setItemUses.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").on(\"click\", (event) => this._onItemCard(event));\n\n    // Search box\n    const sb = html.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n    this.searchRefresh = true;\n    // Filter following refresh\n    sb.each(function () {\n      if (this.value.length > 0) $(this).change();\n    });\n  }\n\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n\n    createData.name = Item.implementation.defaultName({ type, subType });\n    const newItem = new Item.implementation(createData);\n\n    // Get old items of same general category\n    const oldItems = this.item.items\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => (b.sort || 0) - (a.sort || 0));\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) newName = `${baseName} (${i++})`;\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    // Add to the end of the list of old items\n    const sort = oldItems.reduce((max, i) => Math.max(max, i.sort || 0), 0) + CONST.SORT_INTEGER_DENSITY;\n    newItem.updateSource({ sort });\n\n    return this.item.createContainerContent(newItem.toObject(), { renderSheet: true });\n  }\n\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true, editable: this.isEditable });\n  }\n\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this._openItemSummary(li);\n  }\n\n  /**\n   * @internal\n   * @param {Element} elem\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.animation=true]\n   * @param {object} [options.rollData]\n   */\n  async _openItemSummary(elem, { animation = true, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (!animation) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = await item.getChatData({ chatcard: false, rollData });\n      const content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n\n      let div = document.createElement(\"div\");\n      div.innerHTML = await pf1.utils.enrichHTMLUnrolled(content, { rollData, secrets: this.item.isOwner });\n      div = div.firstElementChild; // The template has only one root element\n\n      if (animation) $(div).hide();\n      elem.append(div);\n      if (animation) $(div).slideDown(200);\n\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  async _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    if (getSkipActionPrompt()) {\n      this.item.deleteContainerContent(li.dataset.itemId);\n    } else {\n      button.disabled = true;\n\n      const item = this.document.items.get(li.dataset.itemId);\n\n      const confirm = await foundry.applications.api.DialogV2.confirm({\n        window: { title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }) },\n        classes: [\"pf1-v2\", \"delete-item\"],\n        content: `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`,\n        rejectClose: false,\n        modal: true, // Require dialog to be resolved\n      });\n\n      if (confirm) this.item.deleteContainerContent(li.dataset.itemId);\n\n      button.disabled = false;\n    }\n  }\n\n  async _onItemTake(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    if (this.actor) {\n      const newItem = await Item.implementation.create(item.toObject(), { parent: this.actor });\n      if (newItem) {\n        await this.item.deleteContainerContent(item._id);\n      }\n    }\n  }\n\n  _onDragStart(event) {\n    // Create drag data for an owned item\n    const elem = event.currentTarget;\n    let dragData;\n    if (elem.classList.contains(\"denomination\")) {\n      if (!this.item.testUserPermission(game.user, 3)) return;\n      dragData = {\n        type: \"Currency\",\n        alt: elem.classList.contains(\"alt-currency\"),\n        currency: [...elem.classList].find((o) => /[pgsc]p/.test(o)),\n        containerId: this.item.id,\n        amount: parseInt(elem.nextElementSibling.textContent || elem.nextElementSibling.value),\n      };\n    } else if (elem.dataset.itemId) {\n      const item = this.item.items.get(elem.dataset.itemId);\n      dragData = {\n        type: \"Item\",\n        data: item.toObject(),\n        containerId: this.item.id,\n      };\n      dragData.itemId = item.id;\n    } else {\n      return super._onDragStart(event);\n    }\n\n    // Add actor to drag data\n    dragData.actorUuid = this.actor?.uuid;\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Try to extract the data\n    const data = TextEditor.getDragEventData(event);\n\n    const item = this.item;\n\n    // Handle the drop with a Hooked function\n    const allowed = Hooks.call(\"pf1DropContainerSheetData\", item, this, data);\n    if (allowed === false) return;\n\n    // Handle different data types\n    switch (data.type) {\n      case \"Item\":\n        return this._onDropItem(event, data);\n      case \"Currency\": {\n        return this._onDropCurrency(event, data);\n      }\n      case \"pf1Change\": {\n        return this._onChangeDrop(event, data);\n      }\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: data.containerId, alt: data.alt },\n      {\n        actor: this.actor,\n        container: this.item.id,\n        amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n      }\n    ).render(true);\n  }\n\n  async _onDropItem(event, data) {\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n\n    const { actorUuid, containerId } = data;\n    const droppedItem = await Item.implementation.fromDropData(data);\n    let sourceActor = actorUuid ? await fromUuid(actorUuid) : null;\n    sourceActor ??= droppedItem.actor;\n\n    if (droppedItem === this.item || droppedItem === this.item.rootItem)\n      throw new Error(\"Can not place item into itself\");\n\n    const sameActor = sourceActor && sourceActor === this.actor;\n\n    const itemData = game.items.fromCompendium(droppedItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Sort item\n    if (sameActor && containerId === this.item.id) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create consumable from spell\n    if (itemData.type === \"spell\") {\n      const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n        allowSpell: false,\n        actor: this.actor,\n      });\n      if (resultData) return this.item.createContainerContent(resultData);\n      else return false;\n    }\n\n    // Create or transfer item\n    if (droppedItem.isPhysical) {\n      await this.item.createContainerContent(itemData);\n      // TODO: Verify item was created so we don't delete source item without reason\n\n      if (sameActor) {\n        if (containerId) {\n          sourceActor.containerItems\n            .find((i) => i.id === data.itemId && i.parentItem?.id === containerId)\n            ?.parentItem.deleteContainerContent(data.itemId);\n        } else {\n          sourceActor.items.get(droppedItem.id)?.delete();\n        }\n      }\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const isIdentified = item.system.identified;\n    if (isIdentified !== undefined) {\n      return item.update({ \"system.identified\": !isIdentified });\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const itemId = $(a).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    const itemData = item.toObject();\n\n    delete itemData.system?.links?.children;\n    delete itemData.system?.links?.charges;\n\n    itemData._stats ??= {};\n    itemData._stats.duplicateSource ||= item.uuid;\n\n    delete itemData._id;\n    itemData.name = `${itemData.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    if (item.isPhysical && !item.system.identified) {\n      itemData.system.unidentified.name = `${item.system.unidentified.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    }\n    if (itemData.system.links?.children) delete itemData.system.links.children;\n\n    return this.item.createContainerContent(itemData);\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n    if (item.type === \"container\" && newQuantity > 1) newQuantity = 1;\n    return item.update({ \"system.quantity\": newQuantity });\n  }\n\n  /**\n   * Handles click events to trigger the use of an item.\n   *\n   * @protected\n   * @param {MouseEvent} event - The originating click event\n   */\n  _quickItemActionControl(event) {\n    event.preventDefault();\n    const itemId = $(event.currentTarget).closest(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    item.use({ ev: event });\n  }\n\n  async _setItemUses(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    this._mouseWheelAdd(event.originalEvent, el);\n\n    const value = Number(el.value);\n    this.setItemUpdate(item._id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    for (const data of updates) {\n      const item = this.item.items.get(data._id);\n      if (!item) continue;\n\n      delete data._id;\n      if (item.testUserPermission(game.user, \"OWNER\")) promises.push(item.update(data));\n    }\n\n    return Promise.all(promises);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  _mouseWheelAdd(event, el) {\n    if (event && event instanceof WheelEvent) {\n      const value = parseFloat(el.value);\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(event.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n      el.value = value + amount * increase;\n    }\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n\n    this.item.convertCurrency(currencyType);\n  }\n\n  /**\n   * @override\n   */\n  _onSortItem(event, itemData) {\n    const items = this.document.items;\n\n    // Get the drag source and its siblings\n    const source = items.get(itemData._id);\n\n    // Get the drop target\n    const dropTarget = event.target.closest(\".item\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = items.get(targetId);\n\n    // Don't sort on yourself\n    if (targetId === source.id) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        const item = items.get(el.dataset.itemId);\n        // Only take same typed siblings\n        if (item.type !== source.type) continue;\n        siblings.push(item);\n      }\n    }\n\n    // Don't sort if target has no siblings\n    if (siblings.length == 0) return;\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target._id;\n      return update;\n    });\n\n    // Perform the update\n    return this.item.updateContainerContents(updateData);\n  }\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemCard(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard();\n  }\n\n  /** Item Search */\n\n  _searchFilterCommit(event) {\n    const container = this.item;\n    const search = this._filters.search.container.toLowerCase();\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch === search && !this.searchRefresh) return;\n\n    this.effectiveSearch = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = container.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const changed = this._filters.search.container !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    this._filters.search.container = search;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else this._searchFilterCommit(event);\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Derivate of Foundry's Item.createDialog() functionality.\n */\nexport class ItemCreateDialog extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  /** @type {object} - Creation data */\n  object;\n\n  /**\n   * @param {object} [options] - Optional configuration\n   * @param {object} [options.creationData] - Initial item data\n   * @param {object} [options.createOptions] - Context data to create\n   * @param {Function} [options.resolve] - Resolve callback\n   * @param {object} [options.options] - FormApplication options\n   * @param {Array<string>} options.types - Array of types to limit the choices to.\n   */\n  constructor({ creationData = {}, resolve, ...options } = {}) {\n    options.createOptions ??= {};\n\n    // Merge invalid `data` to creationData\n    if (options.data) {\n      console.warn(`data is invalid parameter for ItemCreateDialog`);\n      foundry.utils.mergeObject(creationData, options.data);\n      delete options.data;\n    }\n\n    const moved = [\"pack\", \"parent\"];\n    for (const key of moved) {\n      if (key in options) {\n        foundry.utils.logCompatibilityWarning(\n          \"ItemCreateDialog parent and pack are now in options.createOptions instead of options directly.\",\n          { since: \"PF1 v11.5\", until: \"PF1 v12\", once: true }\n        );\n        options.createOptions[key] = options[key];\n      }\n    }\n\n    if (options.types) options.types = new Set(options.types);\n\n    super(options);\n\n    this.resolve = resolve;\n    this.object = creationData;\n\n    this._updateCreationData(creationData);\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") });\n  }\n\n  getDefaultName(form = true) {\n    const formData =\n      form && this.form ? foundry.utils.expandObject(new FormDataExtended(this.form).object) : this.createData;\n\n    const type = formData.type;\n    const subType = formData.system?.subType;\n\n    const { parent, pack } = this.options.createOptions;\n\n    return Item.implementation.defaultName({ type, subType, pack, parent });\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n    },\n    position: {\n      height: \"auto\",\n    },\n    classes: [\"pf1-v2\", \"create-document\", \"create-item\", \"standard-form\"],\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/widgets/item-create.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  get initialData() {\n    return this.object;\n  }\n\n  /** @type {object} */\n  createData = {};\n\n  /**\n   *\n   * @param {string} type - Item type\n   * @returns {Record<string,string>|null} - Option mapping\n   */\n  getSubtypes(type) {\n    switch (type) {\n      case \"class\":\n        return pf1.config.classTypes;\n      case \"race\":\n        return null;\n      case \"attack\":\n        return pf1.config.attackTypes;\n      case \"feat\":\n        return pf1.config.featTypes;\n      case \"weapon\":\n        return Object.entries(pf1.config.weaponTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"equipment\":\n        return Object.entries(pf1.config.equipmentTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"consumable\":\n        return pf1.config.consumableTypes;\n      case \"loot\":\n        return pf1.config.lootTypes;\n      case \"spell\":\n        return null;\n      case \"buff\":\n        return pf1.config.buffTypes;\n      case \"implant\":\n        return pf1.config.implantTypes;\n      case \"container\":\n        return null;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Called by {@link _preparePartContext}\n   *\n   * @internal\n   * @param {object} context - Context\n   * @param {object} options - Render options\n   * @returns {object} - Same as context param\n   */\n  _prepareFormContext(context, options) {\n    const lang = game.i18n.lang;\n\n    const { parent, pack } = this.options.createOptions ?? {};\n\n    let collection;\n    if (!parent) {\n      if (pack) collection = game.packs.get(pack);\n      else collection = game.items;\n    }\n\n    // TODO: Visualize folder tree better\n    // TODO: Respect visibility of folders?\n    const folders = Object.fromEntries(\n      (collection?._formatFolderSelectOptions() ?? []).map(({ id, name }) => [id, name])\n    );\n\n    const createData = this.createData;\n\n    let subtypes = this.getSubtypes(createData.type);\n    if (!subtypes && createData.system?.subType !== undefined) delete createData.system.subType;\n    if (subtypes) {\n      subtypes = Object.fromEntries(\n        Object.entries(subtypes).sort(([_key0, label0], [_key1, label1]) => label0.localeCompare(label1, lang))\n      );\n\n      if (!subtypes[this.createData.system.subType]) {\n        this.createData.system.subType = Object.keys(subtypes)[0];\n      }\n    } else {\n      this.createData.system.subType = undefined;\n    }\n\n    const types = Object.fromEntries(\n      Object.entries(CONFIG.Item.typeLabels).sort(([_key0, label0], [_key1, label1]) =>\n        label0.localeCompare(label1, lang)\n      )\n    );\n    delete types.base; // base is Foundry's unusable default\n    if (this.options.types) {\n      for (const type of Object.keys(types)) {\n        if (!this.options.types.has(type)) delete types[type];\n      }\n    }\n\n    context.name = createData.name;\n    context.defaultName = this.getDefaultName(false);\n    context.folder = createData.folder;\n    context.type = createData.type;\n    context.subtype = createData.system?.subType || null;\n    context.choices = {\n      folders,\n      types,\n      subtypes,\n    };\n\n    if (Object.keys(folders).length == 0) delete context.choices.folders;\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {string} partId\n   * @param {object} context\n   * @param {object} options\n   * @returns {object}\n   */\n  _preparePartContext(partId, context, options) {\n    switch (partId) {\n      case \"footer\": {\n        // Footer buttons\n        context.buttons = [\n          {\n            action: \"create\",\n            type: \"submit\",\n            icon: \"fa-solid fa-check\",\n            label: game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") }),\n          },\n        ];\n        break;\n      }\n      case \"form\": {\n        return this._prepareFormContext(context, options);\n      }\n    }\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {object} formConfig\n   * @param {Event} event\n   */\n  _onChangeForm(formConfig, event) {\n    this._updateCreationData(new FormDataExtended(event.currentTarget).object);\n\n    super._onChangeForm(formConfig, event);\n\n    // HACK: Don't re-render on input changes, we have no reactive elements for them.\n    if (event.target.tagName === \"INPUT\") return;\n\n    this.render({ parts: [\"form\"] });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  _updateCreationData(data = {}) {\n    // Fill in default type if missing\n    data.type ||= CONFIG.Item.defaultType || game.documentTypes.Item[1];\n    // If type does not match restrictions, assume first type is correct\n    if (this.options.types && !this.options.types.has(data.type)) data.type = this.options.types.first();\n\n    this.createData = foundry.utils.mergeObject(this.initialData, data, { inplace: false });\n    this.createData.system ??= {};\n\n    // Clean up data\n    if (!data.folder && !this.initialData.folder) delete this.createData.folder;\n\n    const subtypes = this.getSubtypes(this.createData.type);\n    if (!subtypes) delete this.createData.system.subType;\n\n    return this.createData;\n  }\n\n  /**\n   * @override\n   * @param {SubmitEvent} event\n   * @param {HTMLFormElement} form\n   * @param {FormDataExtended} formData\n   */\n  static async _onSubmit(event, form, formData) {\n    const createData = this._updateCreationData(foundry.utils.expandObject(formData.object));\n    createData.name ||= this.getDefaultName(false);\n\n    if (!createData.folder) delete createData.folder;\n    if (!createData.name?.trim()) {\n      const { pack, parent } = this.options.createOptions ?? {};\n      createData.name = this.defaultName({ type: createData.type, parent, pack });\n    }\n\n    const promise = Item.implementation.create(createData, { renderSheet: true, ...this.options.createOptions });\n\n    this.resolve?.(promise);\n\n    this.close();\n  }\n\n  /** @override */\n  _onClose(options) {\n    super._onClose(options);\n    this.resolve?.(null);\n  }\n\n  /**\n   * Wait for dialog to the resolved.\n   *\n   * @todo\n   * - Refactor this to be normal prompt() override\n   * - Handle template and context parameters as dictated by Foundry API\n   *\n   * @param {object} [options] Options to pass to the constructor.\n   * @param {object} renderOptions - Options to render call\n   * @returns {Promise<Item|null>} Created item or null.\n   */\n  static waitPrompt(options = {}, renderOptions = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      new this(options).render({ ...renderOptions, force: true });\n    });\n  }\n}\n","export class ItemActionSheet extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      template: \"systems/pf1/templates/apps/item-action.hbs\",\n      classes: [...options.classes, \"pf1\", \"sheet\", \"action\", \"item-action\"],\n      width: 580,\n      height: 720,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n      resizable: true,\n      scrollY: [\".tab\"],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n      ],\n      dragDrop: [\n        {\n          dragSelector: \"li.conditional\",\n          dropSelector: 'div[data-tab=\"conditionals\"]',\n        },\n      ],\n    };\n  }\n\n  get title() {\n    return `${this.item.name}: ${this.action.name}`;\n  }\n\n  get id() {\n    return `action-sheet-${this.action.uuid.replaceAll(\".\", \"-\")}`;\n  }\n\n  /** @type {ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  /** @type {ItemPF} */\n  get item() {\n    return this.action.item;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item.actor;\n  }\n\n  /**\n   * @internal\n   * @type {Record<string,string>}\n   */\n  _activeEdits = {};\n\n  /**\n   * Which fields to track edits for\n   *\n   * @internal\n   */\n  static EDIT_TRACKING = [\"description\"];\n\n  render(...args) {\n    super.render(...args);\n\n    if (this.appId !== undefined) {\n      this.item.apps[this.appId] = this;\n      this.action.apps[this.appId] = this;\n    }\n\n    return this;\n  }\n\n  async getData() {\n    const action = this.action;\n    const item = this.item;\n    const actor = this.actor;\n\n    const editable = this.isEditable;\n\n    const context = {\n      config: pf1.config,\n      editable,\n      cssClass: editable ? \"editable\" : \"locked\",\n      user: game.user,\n      action, // Derived data\n      data: action.toObject(true, false), // Source data\n      fields: action.schema.fields,\n      item,\n      actor,\n      img: action.img,\n      tag: action._source.tag, // True tag\n      damageTypes: pf1.registry.damageTypes.toObject(),\n      rollData: action.getRollData(),\n      choices: {\n        measureTemplateTypes: pf1.utils.internal.getTemplateTypes(),\n      },\n    };\n\n    // Action Details\n    context.hasAttack = action.hasAttack;\n    context.actionType = action.actionType;\n    context.isHealing = context.actionType === \"heal\";\n    context.hasDamage = action.hasDamage;\n    context.isCombatManeuver = action.isCombatManeuver;\n    context.canCrit = action.hasAttack && action.ability?.critRange > 0 && action.ability?.critMult > 1;\n    // Can have crit and non-crit damage, or simply show them if they've been defined.\n    context.hasCritDamage = context.canCrit || action.damage?.critParts?.length > 0;\n    context.hasNonCritDamage = context.canCrit || action.damage?.nonCritParts?.length > 0;\n\n    context.isCharged = action.isCharged;\n    context.isSelfCharged = action.isSelfCharged;\n    const chargedUsePeriods = new Set([...Object.keys(pf1.config.limitedUsePeriods), \"charges\"]);\n    chargedUsePeriods.delete(\"single\"); // Single is special\n    context.choices.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.choices.limitedUsePeriods.single;\n    context.showMaxChargeFormula = chargedUsePeriods.has(action.uses.self.per);\n    if (action.hasRange) {\n      context.canInputRange = [\"ft\", \"mi\", \"spec\"].includes(action.range.units);\n      context.canInputMinRange = [\"ft\", \"mi\", \"spec\"].includes(action.range.minUnits);\n      context.isRangeFormula = [\"ft\", \"mi\"].includes(action.range.units);\n    }\n\n    context.canInputDuration = ![\"\", \"turn\", \"inst\", \"perm\", \"seeText\"].includes(action.duration?.units || \"\");\n\n    // Action Details\n    context.itemName = item.name;\n    context.itemEnh = item.system.enh || 0;\n    context.isSpell = item.type === \"spell\";\n    context.usesSpellPoints = item.spellbook?.spellPoints.useSystem;\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n    context.owned = actor != null;\n    context.parentOwned = actor != null;\n    context.owner = item.isOwner;\n    context.isGM = game.user.isGM;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n    context.activation = action.activation;\n    context.hasActivationType = context.activation.type;\n    context.choices.abilityActivationTypes = context.unchainedActionEconomy\n      ? pf1.config.abilityActivationTypes_unchained\n      : pf1.config.abilityActivationTypes;\n\n    // Activation types that don't benefit from activation cost field being shown\n    context.costlessActivation = !context.activation.type || pf1.config.costlessActivation.has(context.activation.type);\n\n    const noDesc = \"<p>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n\n    // Add description\n    const description = action.description;\n    context.descriptionHTML = description\n      ? await pf1.utils.enrichHTMLUnrolled(description, {\n          secrets: context.owner,\n          rollData: context.rollData,\n          relativeTo: this.actor,\n        })\n      : noDesc;\n\n    // Show additional ranged properties\n    context.showMaxRangeIncrements = action.range.units === \"ft\";\n\n    // Prepare attack specific stuff\n    if (item.type === \"attack\") {\n      context.isWeaponAttack = item.system.subType === \"weapon\";\n      context.isNaturalAttack = item.system.subType === \"natural\";\n    }\n\n    context.canUseAmmo = context.isNaturalAttack !== true;\n    context.usesAmmo = !!action.ammo.type;\n    context.inheritedAmmoType = item?.system.ammo?.type;\n\n    if (context.usesAmmo) {\n      context.inheritedMisfire = item?.system.ammo?.misfire ?? null;\n    }\n\n    if (context.canUseAmmo) {\n      context.choices.ammoTypes = {\n        none: game.i18n.localize(\"PF1.None\"),\n        \"\": game.i18n.format(\"PF1.InheritAs\", { inherited: pf1.config.ammoTypes[context.inheritedAmmoType] }),\n        ...pf1.config.ammoTypes,\n      };\n      if (!context.inheritedAmmoType) delete context.choices.ammoTypes[\"\"];\n    }\n\n    // Add distance units\n    context.choices.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    delete context.choices.distanceUnits.none; // same as empty selection\n    // Set whether to show minimum range input\n    context.minRangeAvailable = [\"reach\", \"ft\", \"mi\", \"seeText\"].includes(action.range.units);\n\n    // Prepare stuff for actions with conditionals\n    if (context.data.conditionals) {\n      context.conditionals = [...action.conditionals].map((c) => ({ ...c, _id: c.id }));\n      const targets = action.getConditionalTargets();\n      context.conditionalTargets = targets;\n      context.hasConditionalTargets = !foundry.utils.isEmpty(targets);\n      for (const conditional of context.conditionals) {\n        if (!conditional.modifiers?.size) continue;\n        conditional.modifiers = [...conditional.modifiers].map((m) => ({ ...m, _id: m.id }));\n        for (const modifier of conditional.modifiers) {\n          modifier.targets = targets;\n          modifier.targetEntry = targets[modifier.target];\n          modifier.subTargets = modifier.targetEntry?.choices;\n          modifier.conditionalModifierTypes = action.getConditionalModifierTypes(modifier.target);\n          modifier.conditionalCritical = action.getConditionalCritical(modifier.target);\n\n          // Damage type supporting data\n          modifier.damage = new pf1.models.action.DamagePartModel({ types: modifier.damageType });\n        }\n      }\n    }\n\n    // Add materials and addons\n    context.materialCategories = this._prepareMaterialsAndAddons();\n\n    context.materialAddons =\n      this.action.addonMaterial.reduce((obj, v) => {\n        obj[v] = true;\n        return obj;\n      }, {}) ?? {};\n\n    context.isRanged = action.isRanged;\n    context.isPureRanged = context.isRanged && action.actionType !== \"twak\";\n\n    // Can hold (attacks & weapons only and only if they have attack rolls that aren't natural attacks or pure ranged attacks)\n    context.canHold = action.hasAttack && context.isNaturalAttack !== true && !context.isPureRanged;\n\n    if (context.canHold) {\n      // Inherited held option's name if any\n      context.inheritedHeld = [\"attack\", \"weapon\"].includes(item.type)\n        ? pf1.config.weaponHoldTypes[context.item.system.held]\n        : null;\n\n      // Ability damage multiplier from held\n      const held = context.action.held || context.item.system.held || \"1h\";\n      context.heldAbilityMultiplier = pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n    }\n\n    // Add alignments\n    context.alignmentTypes = this._prepareAlignments(this.action.alignments);\n    this.alignments = context.alignmentTypes?.values; // Use a deep clone we've already made to track our progress.\n\n    // Key and Default ability score\n    // TODO: Should be allowed for most things eventually that can be class linked and once class key ability can be configured.\n    context.choices ??= {};\n    context.hasKeyAbility = this.item?.type === \"spell\";\n    const keyAbility = this.item?.spellbook?.ability;\n    const keyAbilityLabel = pf1.config.abilities[keyAbility];\n\n    context.choices.ability = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      ...pf1.config.abilities,\n    };\n\n    context.choices.attackAbility = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      _default: game.i18n.format(\"PF1.DefaultRef\", {\n        value: pf1.config.abilities[action._defaultAttackAbility] || game.i18n.localize(\"PF1.None\"),\n      }),\n      ...pf1.config.abilities,\n    };\n\n    context.choices.damageAbility = {\n      _key: game.i18n.format(keyAbility ? \"PF1.KeyAbilityRef\" : \"PF1.KeyAbility\", { ability: keyAbilityLabel }),\n      _default: game.i18n.format(\"PF1.DefaultRef\", {\n        value: pf1.config.abilities[action._defaultDamageAbility] || game.i18n.localize(\"PF1.None\"),\n      }),\n      ...pf1.config.abilities,\n    };\n\n    if (!context.hasKeyAbility) {\n      delete context.choices.ability._key;\n      delete context.choices.attackAbility._key;\n      delete context.choices.damageAbility._key;\n    }\n\n    // Power attack multiplier if inherited\n    context.paMultiplier = action.getPowerAttackMult({ rollData: context.rollData });\n\n    // Prepare attack configuration\n    context.extraAttacksTypes = Object.fromEntries([\n      ...Object.entries(pf1.config.extraAttacks).map(([key, { label }]) => [key, label]),\n    ]);\n\n    context.extraAttacksConfig = { ...pf1.config.extraAttacks[action.extraAttacks?.type] };\n    context.extraAttacksConfig.allowCustom = context.extraAttacksConfig.manual || context.extraAttacksConfig.formula;\n\n    if (this.constructor.EDIT_TRACKING?.length)\n      context._editorState = pf1.applications.utils.restoreEditState(this, context.data);\n\n    return context;\n  }\n\n  _prepareMaterialsAndAddons() {\n    const materialList = {};\n    const addonList = [];\n    pf1.utils.naturalSort([...pf1.registry.materials], \"name\").forEach((material) => {\n      if (\n        material.allowed.lightBlade ||\n        material.allowed.oneHandBlade ||\n        material.allowed.twoHandBlade ||\n        material.allowed.rangedWeapon\n      ) {\n        if (!material.addon && !material.basic) {\n          materialList[material.id] = material.name;\n        } else if (material.addon && material.isValidAddon(this.action.normalMaterial)) {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n    };\n  }\n\n  _prepareAlignments(alignments = {}) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: alignments,\n    };\n  }\n\n  /**\n   * Copy from core DocumentSheet#isEditable\n   */\n  get isEditable() {\n    const parentItem = this.item;\n    let editable = this.options.editable && parentItem.isOwner;\n    if (parentItem.pack) {\n      const pack = game.packs.get(parentItem.pack);\n      if (pack.locked) editable = false;\n    }\n    return editable;\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    if (!this.isEditable) return;\n\n    pf1.applications.utils.trackStaleEditors(this, html[0]);\n\n    // Modify action image\n    html.find(\"img[data-edit]\").click((ev) => this._onEditImage(ev));\n\n    // Add drop handler to textareas\n    html.find(\"textarea, .card-notes input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Modify attack formula\n    html.find(\".attack-control\").click(this._onAttackControl.bind(this));\n\n    // Modify damage formula\n    html.find(\".damage-control\").click(this._onDamageControl.bind(this));\n    html.find(\".damage-type-visual\").on(\"click\", this._onClickDamageType.bind(this));\n\n    // Note control\n    html.find(\".card-notes .controls a\").click(this._onNoteEntryControl.bind(this));\n\n    // Modify conditionals\n    html.find(\".conditional-control\").click(this._onConditionalControl.bind(this));\n\n    // Handle Alignment tristate checkboxes\n    html.find(\".alignmentCheckbox\").on(\"change\", (event) => {\n      this._onAlignmentChecked(event);\n    });\n\n    html.find(\".alignmentCheckbox.actionCheckbox\").each((index, item) => {\n      const type = item.dataset.type;\n      if (!(this.alignments[type] || this.alignments[type] === false)) {\n        item.indeterminate = true;\n      }\n    });\n  }\n\n  _onDragStart(event) {\n    const elem = event.currentTarget;\n\n    // Drag conditional\n    if (elem.dataset?.conditional) {\n      const conditional = this.action.conditionals.get(elem.dataset?.conditional);\n      const dragData = {\n        type: \"pf1Conditional\",\n        data: conditional.toObject(),\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    }\n  }\n\n  /**\n   * Foundry defaults to isGM check.\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return this.isEditable;\n  }\n\n  /**\n   * Foundry defaults to isGM check.\n   *\n   * @override\n   */\n  _canDragDrop(selector) {\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const dropData = TextEditor.getDragEventData(event);\n    const { type } = dropData;\n\n    const action = this.action;\n    switch (type) {\n      // Handle conditionals\n      case \"pf1Conditional\": {\n        const conditional = dropData.data;\n        // Check targets and other fields for valid values, reset if necessary\n        for (const modifier of conditional.modifiers ?? []) {\n          if (!Object.keys(action.getConditionalTargets()).includes(modifier.target)) {\n            delete modifier.target;\n          }\n          if (modifier.subTarget) {\n            const results = action.getConditionalTargets();\n            const choices = results?.[modifier.target]?.choices;\n            if (!choices) delete modifier.subTarget;\n            else if (!Object.keys(choices).includes(modifier.subTarget)) delete modifier.subTarget;\n          }\n          if (modifier.type) {\n            const keys = Object.keys(action.getConditionalModifierTypes(modifier.target));\n            if (!keys.includes(modifier.type)) delete modifier.type;\n          }\n          if (modifier.critical) {\n            const keys = Object.keys(action.getConditionalCritical(modifier.target));\n            if (!keys.includes(modifier.critical)) delete modifier.critical;\n          }\n        }\n\n        // Renew conditional ID\n        delete conditional._id;\n\n        await pf1.components.ItemConditional.create(conditional, { parent: this.action });\n      }\n    }\n  }\n\n  async _onNoteEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const key = a.dataset.name;\n\n    switch (a.dataset.action) {\n      // Add\n      case \"add\": {\n        const notes = foundry.utils.getProperty(this.action.toObject(), key) ?? [];\n        notes.push(\"\");\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      // Delete\n      case \"delete\": {\n        const index = Number(a.dataset.index);\n        const notes = foundry.utils.getProperty(this.action.toObject(), key) ?? [];\n        notes.splice(index, 1);\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onConditionalControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    await this._onSubmit(event, { preventRender: true }); // Submit any unsaved changes\n\n    // Add new conditional\n    if (a.classList.contains(\"add-conditional\")) {\n      return pf1.components.ItemConditional.create([{}], { parent: this.action });\n    }\n    // Remove a conditional\n    else if (a.classList.contains(\"delete-conditional\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return conditional.delete();\n    }\n    // Add a new conditional modifier\n    else if (a.classList.contains(\"add-conditional-modifier\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return pf1.components.ItemConditionalModifier.create([{}], { parent: conditional });\n    }\n    // Remove a conditional modifier\n    else if (a.classList.contains(\"delete-conditional-modifier\")) {\n      const li = a.closest(\".conditional-modifier\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      const modifier = conditional.modifiers.get(li.dataset.modifier);\n      return modifier.delete();\n    }\n  }\n\n  /**\n   * Add or remove a damage part from the damage formula\n   *\n   * @param {Event} event     The original click event\n   * @returns {Promise}\n   * @private\n   */\n  async _onDamageControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const list = a.closest(\".damage\");\n    const path = list.dataset.key || \"damage.parts\";\n    const k2 = path.split(\".\").slice(0, -1).join(\".\");\n    const k3 = path.split(\".\").slice(-1).join(\".\");\n\n    // Add new damage component\n    if (a.classList.contains(\"add-damage\")) {\n      // Add data\n      const damage = foundry.utils.getProperty(this.action.toObject(), k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      damageParts.push({});\n      const updateData = { [path]: damageParts };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a damage component\n    else if (a.classList.contains(\"delete-damage\")) {\n      const li = a.closest(\".damage-part\");\n      const damage = foundry.utils.getProperty(this.action.toObject(), k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      if (damageParts.length) {\n        damageParts.splice(Number(li.dataset.damagePart), 1);\n        const updateData = { [path]: damageParts };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onClickDamageType(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    // Check for normal damage part\n    const damageIndex = Number(elem.closest(\".damage-part\")?.dataset.damagePart);\n    const damagePart = elem.closest(\".damage\")?.dataset.key;\n\n    if (damageIndex >= 0 && damagePart) {\n      const app = new pf1.applications.DamageTypeSelector(\n        this.action,\n        `${damagePart}.${damageIndex}.types`,\n        foundry.utils.getProperty(this.action, damagePart)[damageIndex].types,\n        {\n          updateCallback: (update) => {\n            const damageArray = foundry.utils.getProperty(this.action.toObject(), damagePart) ?? [];\n            damageArray[damageIndex].types = update;\n            this.action.update({ [damagePart]: damageArray });\n          },\n        }\n      );\n      return app.render(true);\n    }\n\n    // Check for conditional\n    const conditionalEl = elem.closest(\".conditional\");\n    const modifierEl = elem.closest(\".conditional-modifier\");\n\n    /** @type {ItemConditional} */\n    const conditional = this.action.conditionals.get(conditionalEl?.dataset.conditional);\n\n    /** @type {ItemConditionalModifier} */\n    const modifier = conditional?.modifiers.get(modifierEl?.dataset.modifier);\n\n    if (!modifier) return void console.warn(\"Conditional modifier not found!\");\n\n    const app = new pf1.applications.DamageTypeSelector(modifier, \"damageType\", modifier.damageType, {\n      updateCallback: (update) => {\n        modifier.update({ damageType: update });\n      },\n    });\n    return app.render(true);\n  }\n\n  async _onAttackControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const manualExtraAttacks = this.action.toObject().extraAttacks?.manual ?? [];\n\n    // Add new attack component\n    if (a.classList.contains(\"add-attack\")) {\n      manualExtraAttacks.push({ formula: \"\", name: \"\" });\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove an attack component\n    else if (a.classList.contains(\"delete-attack\")) {\n      const li = a.closest(\".attack-part\");\n      manualExtraAttacks.splice(Number(li.dataset.attackPart), 1);\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Clone of item/actor sheet image editor callback.\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onEditImage(event) {\n    const attr = event.currentTarget.dataset.edit;\n    const current = foundry.utils.getProperty(this.action, attr);\n    const fp = new FilePicker({\n      type: \"image\",\n      current,\n      callback: (path) => this.action.update({ img: path }),\n      top: this.position.top + 40,\n      left: this.position.left + 10,\n    });\n    fp.browse();\n  }\n\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n\n    // Insert link\n    if (link) {\n      elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n      return this._onSubmit(event); // Save\n    }\n  }\n\n  async _onAlignmentChecked(event) {\n    const el = event.target;\n    const previousValue = this.alignments[el.dataset.type];\n\n    // Move from one phase to the next in our tristate checkbox\n    el.checked = previousValue === false;\n    el.indeterminate = previousValue === true;\n\n    if (el.checked) {\n      this.alignments[el.dataset.type] = true;\n    } else if (el.indeterminate) {\n      this.alignments[el.dataset.type] = null;\n    } else {\n      this.alignments[el.dataset.type] = false;\n    }\n  }\n\n  async _updateObject(event, formData) {\n    const oldData = this.action.toObject(true, false);\n\n    formData = foundry.utils.expandObject(formData);\n\n    // Handle conditionals array, merging incomplete data with old data\n    if (formData.conditionals) {\n      // Preserve arrays\n      // Convert {0:{}} to [{}] keeping order of keys\n      const preserveArray = (obj) =>\n        Object.entries(obj ?? {})\n          .sort(([k0], [k1]) => k0 - k1)\n          .map(([_, data]) => data);\n\n      // Convert to arrays and merge old data\n      // mergeObject() does not do deep merging into arrays, so this is somewhat manual\n      const oldConds = oldData.conditionals ?? [];\n      const conditionals = preserveArray(formData.conditionals);\n      for (let ci = 0; ci < conditionals.length; ci++) {\n        const c = conditionals[ci];\n        c.modifiers = preserveArray(c.modifiers);\n\n        const oldC = oldConds[ci];\n        for (let mi = 0; mi < c.modifiers.length; mi++) {\n          const m = c.modifiers[mi];\n          const oldM = oldC.modifiers[mi];\n\n          c.modifiers[mi] = foundry.utils.mergeObject(oldM, m);\n        }\n        conditionals[ci] = foundry.utils.mergeObject(oldC, c);\n      }\n\n      formData.conditionals = conditionals;\n    }\n\n    // Merge partial damage data to preserve overall data\n    if (formData.damage) {\n      for (const [key, array] of Object.entries(formData.damage)) {\n        if (Array.isArray(array)) continue;\n        const damage = oldData.damage[key] ?? [];\n        for (const [idx, data] of Object.entries(array)) {\n          damage[idx] = foundry.utils.mergeObject(damage[Number(idx)] ?? {}, data);\n        }\n        formData.damage[key] = damage;\n      }\n    }\n\n    // Adjust Material Addons object to array\n    const material = formData.material;\n    if (material?.addon) {\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    if (formData.alignments) {\n      // Adjust Alignment Types (this is necessary to handle null values for inheritance)\n      for (const [key, value] of Object.entries(this.alignments)) {\n        formData.alignments[key] = value;\n      }\n    }\n\n    // Do not add image if it's same as parent item\n    if (formData.img === this.item?.img) delete formData.img;\n\n    return this.action.update(formData);\n  }\n\n  async close(options = {}) {\n    delete this.item.apps[this.appId];\n    delete this.action.apps[this.appId];\n\n    if (this.action._sheet === this) this.action._sheet = null;\n\n    if (options.force && this._state <= Application.RENDER_STATES.NONE) return; // HACK: already closed, would error without\n\n    return super.close(options);\n  }\n\n  /**\n   * Copy of DocumentSheet._createDocumentIdLink\n   *\n   * @internal\n   * @param {jQuery} html\n   * Synced with Foundry v12.331\n   */\n  _createDocumentIdLink(html) {\n    if (!this.object.id) return;\n    const title = html.find(\".window-title\");\n    const label = game.i18n.localize(this.object.constructor.metadata.label);\n    const idLink = document.createElement(\"a\");\n    idLink.classList.add(\"document-id-link\");\n    idLink.ariaLabel = game.i18n.localize(\"SHEETS.CopyUuid\");\n    idLink.dataset.tooltip = `SHEETS.CopyUuid`;\n    idLink.dataset.tooltipDirection = \"UP\";\n    idLink.innerHTML = '<i class=\"fa-solid fa-passport\"></i>';\n    idLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.object.uuid);\n      ui.notifications.info(\n        game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: this.object.uuid })\n      );\n    });\n    idLink.addEventListener(\"contextmenu\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.object.id);\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"id\", id: this.object.id }));\n    });\n    title.append(idLink);\n  }\n\n  /**\n   * Used to call {@link _createDocumentIdLink}\n   *\n   * @override\n   */\n  async _renderOuter() {\n    const html = await super._renderOuter();\n    this._createDocumentIdLink(html);\n    return html;\n  }\n\n  async _render(force, options = {}) {\n    pf1.applications.utils.saveEditState(this, options);\n\n    return super._render(force, options);\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/** @typedef {keyof typeof BOOLEAN_OPERATOR} BooleanOperator */\n/**\n * States for the boolean operator of a filter.\n */\nexport const BOOLEAN_OPERATOR = /** @type {const} */ ({\n  AND: \"AND\",\n  OR: \"OR\",\n  NONE: false,\n});\n\nexport class CheckboxFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\";\n\n  /**\n   * Should the choices be automatically sorted?\n   *\n   * Affects only choices retrieved from config.\n   *\n   * @type {boolean}\n   */\n  static autoSort = true;\n\n  /**\n   * The minimum number of choices that must be present before the filter will show a search box.\n   * Booleans can be used to override this check.\n   *\n   * @type {number | boolean}\n   */\n  static MIN_SEARCH_CHOICES = 10;\n\n  /**\n   * The boolean operator used to combine choices of this filter.\n   * If \"OR\", an entry will be included if at least one active choice matches.\n   * If \"AND\", an entry will only be included if all active choices match.\n   *\n   * @type {BooleanOperator}\n   */\n  booleanOperator = BOOLEAN_OPERATOR.NONE;\n\n  /**\n   * Default {@link booleanOperator}\n   *\n   * Must be \"AND\" or \"OR\".\n   */\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.AND;\n\n  /**\n   * Is this filter viable for boolean operator?\n   */\n  static booleanOperator = true;\n\n  /**\n   * A string used to determine which choices are shown.\n   *\n   * @type {string}\n   * @private\n   */\n  _choiceQuery = \"\";\n\n  constructor(...args) {\n    super(...args);\n    this._debouncedFilterChoices = foundry.utils.debounce(this._onCustomSearchFilter, 100);\n  }\n\n  /**\n   * Generate a {@link Collection} of {@link FilterChoice}s from a {@link CONFIG} object.\n   *\n   * @param {Record<string, string> | Record<string, Record<string, string>>} configObject - The object to generate choices from; can be a Record<string, string> or\n   * @param {object} [options={}] - Options determining how the choices are generated.\n   * @param {string} [options.labelKey=\"_label\"] - The key to use to determine the label if the configObject is a Record<string, object>; will be ignored if the configObject is a Record<string, string>.\n   * @param {boolean} [options.innerSet=false] - Whether choices should be generated from direct properties of the configObject, or from the properties of the inner objects.\n   * @returns {Collection<FilterChoice>} - A Collection of {@link FilterChoice}s\n   */\n  static getChoicesFromConfig(configObject, { labelKey = \"_label\", innerSet = false } = {}) {\n    /** @type {Collection<FilterChoice>} */\n    const choices = new foundry.utils.Collection();\n    for (const [key, value] of Object.entries(configObject)) {\n      if (innerSet) {\n        for (const [innerKey, innerValue] of Object.entries(value)) {\n          if (innerKey === labelKey) continue;\n          choices.set(innerKey, { key: innerKey, label: innerValue });\n        }\n      } else {\n        if (typeof value === \"object\" && value[labelKey]) {\n          choices.set(key, { key, label: value[labelKey] });\n        } else if (typeof value === \"string\") {\n          choices.set(key, { key, label: value });\n        }\n      }\n    }\n\n    if (this.autoSort) {\n      const collator = new Intl.Collator(game.i18n.lang, { numeric: true, ignorePunctuation: false });\n      const sorted = [...choices.entries()].sort(([_0, a], [_1, b]) => collator.compare(a.label, b.label));\n      return new foundry.utils.Collection(sorted);\n    }\n\n    return choices;\n  }\n\n  /**\n   * Whether this filter provides controls in addition to its choices.\n   *\n   * @type {boolean}\n   */\n  get hasControls() {\n    return this.booleanOperator !== BOOLEAN_OPERATOR.NONE || this.choices.size >= this.constructor.MIN_SEARCH_CHOICES;\n  }\n\n  get hasSearch() {\n    if (this.choices.size >= this.constructor.MIN_SEARCH_CHOICES) return true;\n    return this.constructor.MIN_SEARCH_CHOICES ?? false;\n  }\n\n  /** @inheritDoc */\n  async setup() {\n    await super.setup();\n    this.prepareBooleanOperator();\n  }\n\n  /**\n   * Prepare the boolean operator for this filter.\n   */\n  prepareBooleanOperator() {\n    const entries = this.compendiumBrowser?.entries.contents;\n\n    // Find the first entry that has data in the field and use its data\n    let fieldData;\n    entries.find((entry) => {\n      return (fieldData = foundry.utils.getProperty(entry, this.constructor.indexField));\n    });\n\n    if ([\"Array\", \"Object\"].includes(foundry.utils.getType(fieldData)))\n      this.booleanOperator = this.constructor.defaultBooleanOperator;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const observedValues = new Set(\n      entries.flatMap((entry) => {\n        const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n        if (Array.isArray(data)) {\n          if (data.length === 0) return [];\n          else return data;\n        }\n        if (typeof data === \"object\" && data !== null) {\n          const keys = Object.keys(data);\n          if (keys.length === 0) return [];\n          else return keys;\n        }\n        if (data == null) return [];\n        if (typeof data === \"string\" && data.trim() === \"\") return [];\n        return [data];\n      })\n    );\n\n    const autoLocalize = this.constructor.localizeChoices;\n    const i18nPrefix = this.constructor.localizePrefix || \"\";\n\n    const localize = (key) => {\n      if (autoLocalize) {\n        const path = `${i18nPrefix}${key}`;\n        if (game.i18n.has(path)) return game.i18n.localize(path);\n      }\n      return key;\n    };\n\n    this.choices = new foundry.utils.Collection(\n      pf1.utils\n        .naturalSort(\n          [...observedValues].map((key) => ({ key, label: localize(key) })),\n          \"label\"\n        )\n        .map((choice) => [`${choice.key}`, choice])\n    );\n  }\n\n  /**\n   * Toggle the active state of a choice, or set it to a specific state.\n   *\n   * @param {string} key - The key of the choice to toggle\n   * @param {boolean | null} [state=null] - The state to set the choice to. If null, the choice will be toggled.\n   * @returns {boolean} - The new state of the choice\n   * @throws {Error} - If the choice does not exist in this filter\n   */\n  toggleChoice(key, state = null) {\n    const choice = this.choices?.get(key);\n    if (!choice) throw new Error(`Choice ${key} does not exist in this filter.`);\n    if (state === null) choice.active = !choice.active;\n    else choice.active = state;\n    return choice.active;\n  }\n\n  /** @inheritDoc */\n  reset() {\n    super.reset();\n    this.prepareBooleanOperator();\n    this._choiceQuery = \"\";\n    this.choices?.forEach((choice) => (choice.active = false));\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const activeChoices = this.choices.filter((choice) => choice.active);\n    // If no choices are active, this filter applies no conditions\n    if (activeChoices.length === 0) return true;\n\n    // If the filter is active, but the entry does not match the filter's types, the entry cannot match\n    const types = this.constructor.handledTypes;\n    if (types.size && !types.has(entry.type)) return false;\n\n    /** @type {string | string[] | Record<string, boolean>} */\n    const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    if (Array.isArray(data)) {\n      return activeChoices[testMethod]((choice) => data.includes(choice.key));\n    } else if (typeof data === \"object\" && data !== null) {\n      return activeChoices[testMethod]((choice) => choice.key in data && data[choice.key] !== false);\n    } else {\n      return activeChoices.some((choice) => {\n        return data == choice.key;\n      });\n    }\n  }\n\n  /** @inheritDoc */\n  getData() {\n    return {\n      ...super.getData(),\n      hasControls: this.hasControls,\n      boolean: this.constructor.booleanOperator ? this.booleanOperator : false,\n      hasSearch: this.choices.size > this.constructor.MIN_SEARCH_CHOICES,\n      choiceQuery: this._choiceQuery,\n    };\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    this._onCustomSearchFilter(null, html);\n    html.querySelector(\"button.boolean\")?.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      if (this.booleanOperator === BOOLEAN_OPERATOR.OR) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n      else this.booleanOperator = BOOLEAN_OPERATOR.OR;\n      this.compendiumBrowser.render();\n    });\n    html\n      .querySelector(\"input[name=choice-query]\")\n      ?.addEventListener(\"input\", (event) => this._debouncedFilterChoices(event, html));\n    html.addEventListener(\"change\", (event) => {\n      if (event.target.type === \"checkbox\") {\n        const checkbox = event.target;\n        const choiceKey = /filter.\\w*.choice.(?<choice>.*)/.exec(checkbox.name)?.groups?.choice;\n        if (choiceKey) {\n          this.toggleChoice(choiceKey, checkbox.checked);\n          this.compendiumBrowser.render();\n        }\n      }\n    });\n  }\n\n  /**\n   * Filter this filter's choices based on a string query.\n   *\n   * @protected\n   * @param {Event} event - The originating input event\n   * @param {HTMLElement} html - The rendered HTML of this filter\n   */\n  _onCustomSearchFilter(event, html) {\n    if (event) {\n      event.preventDefault();\n      this._choiceQuery = SearchFilter.cleanQuery(event.target.value);\n    }\n\n    const matchingChoices = fuzzysort\n      .go(this._choiceQuery, this.choices.contents, {\n        key: \"label\",\n        threshold: -10000,\n      })\n      .map((result) => `${result.obj.key}`);\n    const choiceSet = new Set(matchingChoices);\n\n    for (const li of html.querySelectorAll(\"li.filter-choice\")) {\n      const choiceKey = li.dataset.choice;\n      if (choiceKey) {\n        if (choiceSet.has(choiceKey) || !this._choiceQuery) li.classList.remove(\"hidden\");\n        else li.classList.add(\"hidden\");\n      }\n    }\n    if (this._choiceQuery && matchingChoices.length === 0)\n      html.querySelector(\"span.no-choices\")?.classList.remove(\"hidden\");\n    else html.querySelector(\"span.no-choices\")?.classList.add(\"hidden\");\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\n\n/**\n * @typedef {object} InputObject\n * @property {string} key - The key to retrieve choices.\n * @property {string} [label] - The label to display (can be localized).\n * @property {boolean} [active] - Whether this choice is currently active.\n * @property {string} [value] - The value of the choice.\n * @property {string} [placeholder] - The placeholder text for the input.\n * @property {string} [type=\"text\"] - The HTML type property of input.\n */\n\n/**\n * Base class for filters that require text input.\n */\nexport class TextFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/text-filter.hbs\";\n\n  /**\n   * List of inputs for this filter.\n   *\n   * @type {Array<InputObject>}\n   */\n  static inputs = [];\n\n  /** @inheritdoc */\n  hasChoices(number = 1) {\n    // We need to allow at least one choice\n    if (this.choices?.size == 1) return true;\n    return super.hasChoices(number);\n  }\n\n  /** @inheritdoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      this.constructor.inputs.map((input) => [\n        input.key,\n        {\n          ...input,\n          label: input.label ? game.i18n.localize(input.label) : undefined,\n          placeholder: input.placeholder ? game.i18n.localize(input.placeholder) : undefined,\n          type: input.type ?? \"text\",\n        },\n      ])\n    );\n  }\n\n  /** @inheritdoc */\n  reset() {\n    for (const choice of this.choices) {\n      choice.value = null;\n      choice.active = false;\n    }\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    html.addEventListener(\"change\", (event) => {\n      const input = event.target;\n      const value = input.value;\n      const key = input.name.split(\"choice.\").pop();\n      const choice = this.choices.get(key);\n      if (choice) {\n        choice.value = this._parseInput(value, choice);\n        choice.active = Boolean(value);\n      }\n      this.compendiumBrowser.render();\n    });\n  }\n\n  /**\n   * Parse the input before it is stored in the choice value.\n   *\n   * @param {string} textInput - The text input to parse.\n   * @param {import(\"./base.mjs\").FilterChoice} choice - The choice object for custom handle by choice.\n   * @returns {string} - The parsed value if any transformation, otherwise the original string.\n   */\n  _parseInput(textInput, choice) {\n    return textInput;\n  }\n}\n","import { TextFilter } from \"./text.mjs\";\n\n/**\n * A filter that allows the user to input a minimum and maximum value.\n */\nexport class NumberRangeFilter extends TextFilter {\n  /** @inheritdoc */\n  static inputs = [\n    { key: \"min\", label: \"PF1.Minimum\", placeholder: \"0\", type: \"number\" },\n    { key: \"max\", label: \"PF1.Maximum\", placeholder: \"∞\", type: \"number\" },\n  ];\n\n  /** @inheritdoc */\n  _parseInput(textInput, choice) {\n    let parsedInput = super._parseInput(textInput, choice);\n    if (choice.key === \"min\") {\n      parsedInput = Number(parsedInput) || null;\n    } else if (choice.key === \"max\") {\n      parsedInput = Number(parsedInput) || null;\n    } else {\n      throw new Error(\"Invalid choice key for NumberRangeFilter\");\n    }\n    return parsedInput;\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField) ?? 0;\n    const min = this.choices.get(\"min\").value ?? 0;\n    const max = this.choices.get(\"max\").value ?? Number.POSITIVE_INFINITY;\n    if (value < min || value > max) return false;\n    return true;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { NumberRangeFilter } from \"./number-range.mjs\";\n\nexport class ItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static indexField = \"type\";\n  static types = [\"weapon\", \"equipment\", \"consumable\", \"container\", \"loot\", \"implant\"];\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      [\n        { key: \"weapon\", label: game.i18n.localize(\"TYPES.Item.weapon\") },\n        { key: \"equipment\", label: game.i18n.localize(\"TYPES.Item.equipment\") },\n        { key: \"consumable\", label: game.i18n.localize(\"TYPES.Item.consumable\") },\n        { key: \"container\", label: game.i18n.localize(\"TYPES.Item.container\") },\n        { key: \"loot\", label: game.i18n.localize(\"PF1.Misc\") },\n        { key: \"implant\", label: game.i18n.localize(\"TYPES.Item.implant\") },\n      ].map((choice) => [choice.key, choice])\n    );\n  }\n}\n\nexport class WeaponTypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponType\";\n  static indexField = \"system.subType\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes);\n  }\n}\n\nexport class WeaponSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponSubtype\";\n  static indexField = \"system.weaponSubtype\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes, { innerSet: true });\n  }\n}\n\nexport class WeaponPropertyFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponProperties\";\n  static indexField = \"system.properties\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponProperties);\n  }\n}\n\nexport class WeaponGroupFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponGroups\";\n  static indexField = \"system.weaponGroups\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponGroups);\n  }\n}\n\nexport class EquipmentTypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentType\";\n  static indexField = \"system.subType\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes);\n  }\n}\n\nexport class EquipmentSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentSubtype\";\n  static indexField = \"system.equipmentSubtype\";\n  static type = \"equipment\";\n  static autoSort = false; // Causes illogical order (e.g. heavy armor and heavy shield are next to each other, but not heavy armor and medium armor)\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes, { innerSet: true });\n  }\n}\n\nexport class ItemSlotFilter extends CheckboxFilter {\n  static label = \"PF1.Slot\";\n  static indexField = \"system.slot\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentSlots, { innerSet: true });\n  }\n}\n\nexport class ConsumableTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ConsumableType\";\n  static indexField = \"system.subType\";\n  static type = \"consumable\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.consumableTypes);\n  }\n}\n\nexport class MiscItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Misc\";\n  static indexField = \"system.subType\";\n  static type = \"loot\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.lootTypes);\n  }\n}\n\nexport class ItemPriceFilter extends NumberRangeFilter {\n  static label = \"PF1.Price\";\n  static indexField = \"system.price\";\n}\n\nexport class ItemCasterLevelFilter extends NumberRangeFilter {\n  static label = \"PF1.CasterLevel\";\n  static indexField = \"system.cl\";\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class PackFilter extends CheckboxFilter {\n  static label = \"PF1.Compendium\";\n  static indexField = \"__pack\";\n\n  /** @override */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const usedPacks = this.compendiumBrowser?.packs\n      ?.filter((pack) => entries.some((entry) => entry.__pack === pack.collection))\n      .map((pack) => {\n        const label = pack.metadata.label;\n        return { key: pack.collection, label: game.i18n.has(label) ? game.i18n.localize(label) : label };\n      });\n    const orderedPacks = pf1.utils.naturalSort(usedPacks, \"label\").map((pack) => [pack.key, pack]);\n    this.choices = new foundry.utils.Collection(orderedPacks);\n  }\n}\n\nexport class TagFilter extends CheckboxFilter {\n  static label = \"PF1.Tags\";\n  static indexField = \"system.tags\";\n}\n\nexport class SourceFilter extends CheckboxFilter {\n  /** @override */\n  static label = \"PF1.Source\";\n\n  /**\n   * This filter requests `system.sources` from the index, but operates on `__source` in the entry data\n   * to support sources without an `id` (e.g. homebrew sources, or others providing only a title).\n   */\n  static indexField = \"system.sources\";\n\n  /** @override */\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @override */\n  static booleanOperator = false;\n\n  /** @override */\n  prepareChoices() {\n    class SourceEntry {\n      id;\n      get key() {\n        return this.id;\n      }\n\n      label;\n\n      count = 0;\n\n      get hidden() {\n        return this.count === 0;\n      }\n\n      constructor(id, label) {\n        this.id = id;\n        this.label = label;\n      }\n    }\n\n    const registrySources = pf1.registry.sources.map((source) => new SourceEntry(source.id, source.name));\n    const collection = new foundry.utils.Collection(registrySources.map((choice) => [choice.key, choice]));\n\n    // Create tag used as alternative to ensure multiple sources having same source don't do duplicates\n    const placeholderId = (s) =>\n      \"__unknown_\" + pf1.utils.createTag(s, { allowUpperCase: true, allowInitialNumbers: true });\n\n    for (const entry of this.compendiumBrowser.entries) {\n      entry.__source ??= entry.system?.sources ?? [];\n      const sources = entry.__source\n        .filter((source) => source.id || source.title)\n        .map((source) => ({\n          ...source,\n          id: source.id || placeholderId(source.title),\n        }));\n\n      // Add custom entries\n      for (const source of sources) {\n        const choice = collection.get(source.id);\n        if (!choice) {\n          collection.set(source.id, new SourceEntry(source.id, source.title));\n        } else choice.count += 1;\n      }\n    }\n\n    this.choices = collection;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const data = (foundry.utils.getProperty(entry, this.constructor.indexField) ?? []).map((source) => source.id);\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    return this.choices\n      .filter((choice) => choice.active)\n      .map((choice) => choice.key)\n      [testMethod]((key) => data.includes(key));\n  }\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class SpellSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SpellSchool\";\n  static indexField = \"system.school\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.spellSchools);\n  }\n}\n\nexport class SpellSubschoolFilter extends CheckboxFilter {\n  static label = \"PF1.Subschool\";\n  static indexField = \"system.subschool\";\n  static type = \"spell\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices;\n\n    // Merge standard config choices with custom choices\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellSubschools);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n\nexport class SpellDescriptorFilter extends CheckboxFilter {\n  static label = \"PF1.Descriptor\";\n  static indexField = \"system.descriptors\";\n  static type = \"spell\";\n\n  /** @inheritDoc */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    // Merge standard config choices with custom choices\n    const choices = this.choices;\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellDescriptors);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static indexField = \"system.learnedAt.class\";\n  static type = \"spell\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    const choices = this.choices;\n\n    // Display human readable name instead of the class identifier\n    const classNames = await pf1.utils.packs.getClassIDMap();\n    const configChoices = this.constructor.getChoicesFromConfig(classNames);\n    for (const choice of configChoices) {\n      if (choices.has(choice.key)) {\n        choices.set(choice.key, choice);\n      }\n    }\n\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByDomainFilter extends CheckboxFilter {\n  static label = \"PF1.Domain\";\n  static indexField = \"system.learnedAt.domain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedBySubdomainFilter extends CheckboxFilter {\n  static label = \"PF1.SubDomain\";\n  static indexField = \"system.learnedAt.subDomain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedByBloodlineFilter extends CheckboxFilter {\n  static label = \"PF1.Bloodline\";\n  static indexField = \"system.learnedAt.bloodline\";\n  static type = \"spell\";\n}\n\nexport class SpellLevelFilter extends CheckboxFilter {\n  static label = \"PF1.SpellLevel\";\n  static indexField = \"system.level\";\n  static type = \"spell\";\n  static autoSort = false; // Cantrip can appear last if true\n\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n  static booleanOperator = false;\n\n  /** @override */\n  prepareChoices() {\n    const choices = this.constructor.getChoicesFromConfig(pf1.config.spellLevels);\n    for (const choice of choices) {\n      choice.key = Number(choice.key); // Convert string to number\n    }\n    this.choices = choices;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const activeLearnedAtFilters = this.compendiumBrowser.filters.filter(\n      (filter) => filter.active && filter.constructor.indexField.startsWith(\"system.learnedAt.\")\n    );\n\n    // Fall back to checking whether _anything_ can learn the spell at that level\n    if (activeLearnedAtFilters.length === 0) return super.applyFilter(entry);\n\n    // Otherwise, check whether active filters match the spell's learnedAt\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    const activeLevelChoices = this.choices.filter((choice) => choice.active);\n\n    // Require either any of the active filters to match if OR, or all filters to return a match if AND\n    return activeLearnedAtFilters[testMethod]((filter) => {\n      /** @type {Record<string, number>} */\n      const learnedAt = foundry.utils.getProperty(entry, filter.constructor.indexField) ?? {};\n      const activeLearnedAtChoices = filter.choices.filter((choice) => choice.active);\n      // Require either one of the classes etc. to match if OR, or all classes etc. to match if AND\n      return activeLearnedAtChoices[testMethod]((learnedAtChoice) => {\n        const learnedAtLevel = learnedAt[learnedAtChoice.key];\n        return activeLevelChoices[testMethod]((levelChoice) => levelChoice.key === learnedAtLevel);\n      });\n    });\n  }\n}\n","import { CheckboxFilter, BOOLEAN_OPERATOR } from \"./checkbox.mjs\";\n\nexport class FeatTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"feat\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.featTypes);\n  }\n}\n\nexport class FeatClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static type = \"feat\";\n  static indexField = \"system.associations.classes\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class ClassTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ClassType\";\n  static type = \"class\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classTypes);\n  }\n}\n\nexport class ClassHitDieFilter extends CheckboxFilter {\n  static label = \"PF1.HitDie\";\n  static type = \"class\";\n  static indexField = \"system.hd\";\n}\n\nexport class ClassBaseAttackBonusFilter extends CheckboxFilter {\n  static label = \"PF1.BAB\";\n  static type = \"class\";\n  static indexField = \"system.bab\";\n  static autoSort = false; // Causes illogical order (e.g. Custom, Good, Poor, None)\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classBAB);\n  }\n}\n\nexport class ClassSkillPointsFilter extends CheckboxFilter {\n  static label = \"PF1.SkillsPerLevel\";\n  static type = \"class\";\n  static indexField = \"system.skillsPerLevel\";\n}\n\nclass ClassSavingThrowFilter extends CheckboxFilter {\n  static type = \"class\";\n\n  /** @type {SaveId} */\n  static savingThrow = \"\";\n\n  static localizeLabel = false;\n\n  static autoSort = false; // Causes illogical order (e.g. Custom, Good, Poor, None)\n\n  static get label() {\n    return pf1.config.savingThrows[this.savingThrow] ?? \"\";\n  }\n  static get indexField() {\n    return `system.savingThrows.${this.savingThrow}.value`;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classSavingThrows);\n    this.choices.set(\"none\", { label: game.i18n.localize(\"PF1.None\"), key: \"none\" });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const result = super.applyFilter(entry);\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField);\n    const noneFilterResult = this.choices.get(\"none\").active && value === \"\";\n    return result || noneFilterResult;\n  }\n}\n\nexport class ClassFortitudeFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"fort\";\n}\n\nexport class ClassReflexFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"ref\";\n}\n\nexport class ClassWillFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"will\";\n}\n","import { CheckboxFilter, BOOLEAN_OPERATOR } from \"./checkbox.mjs\";\n\nexport class CreatureTypeFilter extends CheckboxFilter {\n  static label = \"PF1.CreatureType\";\n  static type = \"race\";\n  static indexField = \"system.creatureTypes\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.creatureTypes);\n  }\n}\n\nexport class CreatureSubTypeFilter extends CheckboxFilter {\n  static label = \"PF1.RaceSubtypePlural\";\n  static type = \"race\";\n  static indexField = \"system.creatureSubtypes\";\n  static defaultBooleanOperator = BOOLEAN_OPERATOR.OR;\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n\n    // Merge standard config choices with custom choices\n    const choices = this.choices;\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.creatureSubtypes);\n    for (const choice of configChoices) {\n      choices.set(choice.key, choice);\n    }\n    this.choices = choices;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class BuffTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"buff\";\n  static indexField = \"system.subType\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.buffTypes);\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class CreatureCRFilter extends CheckboxFilter {\n  static label = \"PF1.ChallengeRatingShort\";\n  static indexField = \"system.details.cr.base\";\n  static types = [\"character\", \"npc\"];\n\n  /** @override */\n  async prepareChoices() {\n    await super.prepareChoices();\n\n    const choices = this.choices.contents\n      .map((choice) => Number(choice.key))\n      .sort((a, b) => a - b)\n      .map((cr) => {\n        const label = pf1.utils.CR.fromNumber(cr);\n        return [cr.toString(), { key: cr, label }];\n      });\n    this.choices = new foundry.utils.Collection(choices);\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as buffFilters from \"./filters/buff.mjs\";\n\nexport class BuffBrowser extends CompendiumBrowser {\n  static documentName = \"Item\";\n  static typeName = \"PF1.Buffs\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    buffFilters.BuffTypeFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as classFilters from \"./filters/class.mjs\";\n\nexport class ClassBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Classes\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    classFilters.ClassTypeFilter,\n    classFilters.ClassHitDieFilter,\n    classFilters.ClassBaseAttackBonusFilter,\n    classFilters.ClassSkillPointsFilter,\n    classFilters.ClassFortitudeFilter,\n    classFilters.ClassReflexFilter,\n    classFilters.ClassWillFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport { PackFilter } from \"./filters/common.mjs\";\nimport * as creatureFilters from \"./filters/creature.mjs\";\n\nexport class CreatureBrowser extends CompendiumBrowser {\n  static documentName = \"Actor\";\n  static typeName = \"PF1.Creatures\";\n  static filterClasses = [PackFilter, creatureFilters.CreatureCRFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as featFilter from \"./filters/feat.mjs\";\n\nexport class FeatBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Feats\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    featFilter.FeatTypeFilter,\n    featFilter.FeatClassFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as itemFilters from \"./filters/item.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\n\nexport class ItemBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Items\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    itemFilters.ItemTypeFilter,\n    itemFilters.WeaponTypeFilter,\n    itemFilters.WeaponSubtypeFilter,\n    itemFilters.WeaponPropertyFilter,\n    itemFilters.WeaponGroupFilter,\n    itemFilters.EquipmentTypeFilter,\n    itemFilters.EquipmentSubtypeFilter,\n    itemFilters.ItemSlotFilter,\n    itemFilters.ConsumableTypeFilter,\n    itemFilters.MiscItemTypeFilter,\n    itemFilters.ItemPriceFilter,\n    itemFilters.ItemCasterLevelFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    // Remove equipmentSubtype if the item subtype should not have one\n    const { subType, equipmentSubtype } = result.system;\n    if (subType) {\n      const equipmentSubtypes = Object.keys(pf1.config.equipmentTypes[subType] ?? {}).filter((o) => !o.startsWith(\"_\"));\n      if (equipmentSubtypes.length === 0) {\n        // Clear equipmentSubtype if subType has no equipmentSubtypes\n        result.system.equipmentSubtype = \"\";\n      } else if (!equipmentSubtypes.includes(equipmentSubtype)) {\n        // Default to first equipmentSubtype if current equipmentSubtype is invalid\n        result.system.equipmentSubtype = equipmentSubtypes.at(0);\n      }\n    }\n\n    return result;\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as raceFilters from \"./filters/race.mjs\";\n\nexport class RaceBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Races\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    raceFilters.CreatureTypeFilter,\n    raceFilters.CreatureSubTypeFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as spellFilter from \"./filters/spell.mjs\";\n\nexport class SpellBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Spells\";\n\n  static types = [\"spell\"];\n\n  static filterClasses = [\n    commonFilters.PackFilter,\n    spellFilter.SpellSchoolFilter,\n    spellFilter.SpellSubschoolFilter,\n    spellFilter.SpellDescriptorFilter,\n    spellFilter.SpellLearnedByClassFilter,\n    spellFilter.SpellLearnedByDomainFilter,\n    spellFilter.SpellLearnedBySubdomainFilter,\n    spellFilter.SpellLearnedByBloodlineFilter,\n    spellFilter.SpellLevelFilter,\n    commonFilters.SourceFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    /** @type {number[]} */\n    const learnedAtLevels = Object.values(entry.system.learnedAt ?? {})\n      .map((learnedAtSource) => Object.values(learnedAtSource))\n      .flat();\n    if (typeof entry.system.level === \"number\") learnedAtLevels.push(entry.system.level);\n    // NOTE: This results in `level` being a number[] instead of a number like in the source data.\n    result.system.level = [...new Set(learnedAtLevels)];\n\n    return result;\n  }\n}\n","/**\n * @param {JournalEntryPage} page\n * @param {object} context\n */\nfunction addHeaders(page, context) {\n  // Find parent pages if deeper than level 1 heading\n  let maxLevel = page.title.level - 1;\n  if (maxLevel <= 0) return;\n\n  /** @type {JournalEntry} */\n  const parent = page.parent;\n  if (!(parent instanceof JournalEntry)) return;\n\n  /** @type {JournalEntryPage[]} */\n  const pages = parent.pages.contents.sort((a, b) => a.sort - b.sort);\n\n  const idx = pages.indexOf(page);\n  if (idx <= 0) return;\n\n  const headers = [];\n  // Traverse backwards\n  for (let i = idx - 1; i >= 0; i--) {\n    const npage = pages[i];\n    const nlevel = npage.title.level;\n    if (nlevel <= maxLevel) {\n      maxLevel = nlevel - 1;\n      headers[maxLevel] = npage;\n      if (maxLevel < 1) break;\n    }\n  }\n\n  context.pf1 = { headers };\n}\n\n/**\n * Journal text page sheet that displays parentage with sub-pages\n *\n * @deprecated\n * - Will be replaced with AppV2\n */\nexport class JournalTextPageSheetPF1 extends JournalTextPageSheet {\n  get template() {\n    if (this.document.type !== \"text\" || this.isEditable) return super.template;\n    return \"systems/pf1/templates/journals/text-view.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n\n    addHeaders(this.document, context);\n\n    // V13 compatibility shims\n    context.text ??= {\n      enriched: context.editor?.content,\n    };\n\n    return context;\n  }\n}\n\nfunction unregisterV1Sheet() {\n  // Unregister the old, in separate function to avoid strict JS problems\n  DocumentSheetConfig.unregisterSheet(JournalEntryPage, \"pf1\", JournalTextPageSheetPF1);\n}\n\nfunction registerV2Sheet() {\n  // JournalEntryPageTextSheet is wrong despite looking correct, so we extend prosemirror sheet instead\n  // Identical name to above match sheet registration, masks the above name\n  class JournalTextPageSheetPF1 extends foundry.applications.sheets.journal.JournalEntryPageProseMirrorSheet {\n    /** @override */\n    static VIEW_PARTS = {\n      content: {\n        template: \"systems/pf1/templates/journals/text-view.hbs\",\n      },\n    };\n\n    /** @override */\n    async _prepareContext(options) {\n      const context = await super._prepareContext(options);\n\n      addHeaders(this.document, context);\n\n      // V12 compatibility shims\n      context.data ??= {};\n      context.data.title = context.title;\n\n      return context;\n    }\n  }\n\n  DocumentSheetConfig.registerSheet(JournalEntryPage, \"pf1\", JournalTextPageSheetPF1, {\n    types: [\"text\"],\n    makeDefault: false,\n    label: \"PF1.Sheet.TextPage\",\n  });\n}\n\nexport function registerV13PageSheet() {\n  if (game.release.generation >= 13) {\n    unregisterV1Sheet();\n    registerV2Sheet();\n  }\n}\n","/**\n * Save edit state\n *\n * @remarks\n * - Must be combined with {@link restoreEditState()}\n * - Static `EDIT_TRACKING` array must be defined to declare what fields are being tracked for editing.\n *\n * @example\n * In sheet body define the following\n * ```js\n * // Init data\n * _activeEdits = {};\n *\n * // Define fields to track\n * static EDIT_TRACKING = [\"system.description.value\", \"system.description.unidentified\"];\n *\n * // Override\n * async _render(force, options) {\n *   pf1.applications.utils.saveEditState(this, options);\n *\n *   return super._render(force, options);\n * }\n * ```\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet\n * @param {object} options\n */\nexport function saveEditState(sheet, options = {}) {\n  if (!sheet.form || !sheet.rendered) return;\n\n  const paths = sheet.constructor.EDIT_TRACKING;\n\n  /** @type {HTMLElement} */\n  const isUpdate = options.renderContext === \"updateItem\";\n\n  // Reset old saved data if it persists\n  sheet._activeEdits = {};\n\n  // Save active editor data\n  // Save {{editor}} state\n  for (const [path, editor] of Object.entries(sheet.editors)) {\n    if (!editor.active) {\n      delete sheet._activeEdits[path];\n    } else {\n      sheet._activeEdits[path] = ProseMirror.dom.serializeString(editor.instance.view.state.doc.content);\n    }\n  }\n  // Save <prose-mirror> state, for whenever it works correctly\n  /*\n  const formData = new FormDataExtended(sheet.form).object;\n  for (const path of paths) {\n    if (isUpdate && foundry.utils.hasProperty(options.renderData, path)) continue;\n    const text = formData[path];\n    if (text !== undefined) {\n      sheet._activeEdits[path] = text;\n      sheet.element[0].classList.add(\"stale-data\");\n    }\n  }\n  */\n}\n\n/**\n * Restore edit state\n *\n * @remarks\n * - Must be combined with {@link saveEditState()}\n * - Should use `context.prefix.path.to.data` to set toggled state so the editor is automatically in edit mode.\n * - Prefix defaults to `_editorState` for the above path.\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet - Application to work with\n * @param {object} context - Context from which to fetch current data\n * @returns {object} - Editor toggled state mapping\n */\nexport function restoreEditState(sheet, context) {\n  const editorToggledState = {};\n\n  for (const path of sheet.constructor.EDIT_TRACKING) {\n    foundry.utils.setProperty(editorToggledState, path, true);\n  }\n\n  // Re-instate data from in-progress edits\n  for (const [path, text] of Object.entries(sheet._activeEdits)) {\n    if (!text) continue;\n    if (text !== foundry.utils.getProperty(context, path)) {\n      foundry.utils.setProperty(context, path, text);\n      foundry.utils.setProperty(editorToggledState, path, false);\n      console.debug(\"PF1 | Restored interrupted edit state to\", path);\n\n      // Mark {{editor}} as changed\n      const editor = sheet.editors[path];\n      if (editor) editor.changed = true;\n    }\n    delete sheet._activeEdits[path];\n  }\n\n  sheet._activeEdits = {};\n\n  return editorToggledState;\n}\n\n/**\n * Track stale editors\n *\n * Visually marks editors that need action.\n *\n * Call in `activateListeners()`\n *\n * Must be combined with {@link saveEditState()} and {@link restoreEditState()}\n *\n * @internal\n * @experimental\n * @param {FormApplication} sheet\n * @param {HTMLElement} html\n */\nexport function trackStaleEditors(sheet, html) {\n  /** @type {HTMLElement[]} */\n  const editors = html.querySelectorAll(\"prose-mirror.active\");\n  for (const editor of editors) {\n    if (!sheet.constructor.EDIT_TRACKING?.includes(editor.name)) continue;\n\n    editor.classList.add(\"stale-editor\");\n    editor.addEventListener(\"change\", (ev) => editor.classList.remove(\"stale-editor\"), { once: true });\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ActionSelector extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  static DEFAULT_OPTIONS = {\n    classes: [\"pf1-v2\", \"action-selector\"],\n    window: {\n      icon: \"fa-solid fa-screwdriver-wrench\",\n      minimizable: false,\n      resizable: false,\n    },\n    actions: {\n      click: ActionSelector._onClickAction,\n    },\n    position: {\n      width: 390,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/action-select.hbs\",\n    },\n  };\n\n  get item() {\n    return this.document;\n  }\n\n  get title() {\n    return game.i18n.format(\"PF1.Application.ActionSelector.Title\", {\n      actor: this.item.actor.name,\n      item: this.item.name,\n    });\n  }\n\n  async _prepareContext() {\n    return {\n      actions: this.item.actions,\n    };\n  }\n\n  static _onClickAction(event) {\n    event.preventDefault();\n\n    const target = event.target.closest(\"[data-action]\");\n    this.resolve(target.dataset?.id);\n    this.close();\n  }\n\n  close(...args) {\n    this.resolve(null);\n    super.close(...args);\n  }\n\n  /**\n   * @param {object} options - Options\n   * @param {ItemPF} options.document - Item to select action for.\n   * @param {object} renderOptions - Options passed to application rendering\n   * @returns {Promise<ChatMessage|object|undefined>} - Result of ItemPF.use() for selected action\n   */\n  static async open(options) {\n    return new Promise((resolve) => {\n      const selector = new this(options);\n      selector.resolve = resolve;\n      selector.render(true);\n    });\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\nexport class ChatAttack {\n  /** @type {ItemAction} */\n  action;\n\n  /** @type {pf1.actionUse.ActionUse} */\n  actionUse;\n\n  /** @type {pf1.dice.D20RollPF | null} */\n  attack = null;\n  hasRange = false;\n  /** @type {pf1.dice.D20RollPF | null} */\n  critConfirm = null;\n\n  hasAttack = false;\n  hasCritConfirm = false;\n\n  hasDamage = false;\n  damage = new AttackDamage();\n  damageRows = [];\n  nonlethal = false;\n  critDamage = new AttackDamage();\n\n  /** @type {AmmoUsage|null} */\n  ammo = null;\n\n  hasCards = false;\n  cards = {};\n\n  /** @type {Array<ParsedContextNoteEntry>} */\n  effectNotes = [];\n  effectNotesHTML = \"\";\n  notesOnly = true;\n\n  targets = null;\n\n  /**\n   *\n   * @param {ItemAction} action\n   * @param {object} options\n   * @param {string} options.label\n   * @param {object} options.rollData\n   * @param {Token[]} options.targets\n   * @param {pf1.actionUse.ActionUse} options.actionUse\n   */\n  constructor(action, { label = \"\", rollData = {}, targets = null, actionUse = null } = {}) {\n    this.actionUse = actionUse;\n    this.rollData = rollData;\n    this.setAction(action);\n    this.label = label;\n    this.hasRange = action.item.hasRange;\n    this.targets = targets;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.action?.actor;\n  }\n\n  /**\n   * @param {string} ammoId\n   */\n  setAmmo(ammoId) {\n    const ammoItem = this.actor.items.get(ammoId);\n    if (!ammoItem) {\n      this.ammo = null;\n      return;\n    }\n\n    /** @type {AmmoUsage} */\n    this.ammo = {\n      id: ammoId,\n      img: ammoItem.img,\n      name: ammoItem.name,\n      misfire: false,\n    };\n  }\n\n  /**\n   * Sets the attack's item reference.\n   *\n   * @param {ItemAction} action - The action to reference.\n   */\n  setAction(action) {\n    if (action == null) {\n      this.rollData = null;\n      this.action = null;\n      return;\n    }\n\n    this.action = action;\n    this.isHealing = action.isHealing;\n\n    this.setRollData();\n  }\n\n  /**\n   * Applies changes to the roll data.\n   */\n  setRollData() {\n    const rollData = this.rollData;\n\n    // Set critical hit multiplier\n    rollData.critMult = 1;\n    rollData.critCount = 0;\n\n    // Determine ability multiplier\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n    rollData.ablMult = rollData.action.ability.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n  }\n\n  async setEffectNotesHTML() {\n    if (this.effectNotes.length === 0) {\n      this.effectNotesHTML = \"\";\n      return;\n    }\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes: this.effectNotes,\n      css: \"effect-notes\",\n      header: game.i18n.localize(\"PF1.EffectNotes\"),\n    });\n\n    const enrichOptions = {\n      rollData: this.rollData,\n      relativeTo: this.action.actor,\n    };\n\n    this.effectNotesHTML = await TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  async addAttack({ noAttack = false, bonus = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    const actor = this.action.actor;\n\n    this.hasAttack = true;\n    this.notesOnly = false;\n\n    const extraChanges = [];\n\n    if (critical === true) {\n      if (this.action.critConfirmBonus) {\n        const critConfirm = this.action.critConfirmBonus;\n        const parsedConfirmResult = RollPF.parse(critConfirm);\n        if (parsedConfirmResult.length > 1)\n          extraParts.push(`(${critConfirm})[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n        else if (parsedConfirmResult[0].flavor) extraParts.push(critConfirm);\n        else extraParts.push(`${critConfirm}[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n      }\n\n      extraChanges.push(...actor.changes.filter((c) => c.target === \"critConfirm\"));\n\n      // Add conditionals for critical confirmation\n      if (conditionalParts[\"attack.crit\"]?.length) extraParts.push(...conditionalParts[\"attack.crit\"]);\n    } else {\n      // Add conditional attack bonus\n      if (conditionalParts[\"attack.normal\"]?.length) extraParts.push(...conditionalParts[\"attack.normal\"]);\n    }\n\n    // Add broken penalty\n    const broken = this.rollData.item.broken;\n    if (broken && !critical) {\n      const label = game.i18n.localize(\"PF1.Broken\");\n      extraParts.push(`-2[${label}]`);\n    }\n\n    // Armor as DR\n    if (!noAttack) {\n      if (critical && !game.settings.get(\"pf1\", \"critConfirm\")) {\n        // Defense DC\n        this.critConfirm = this.actionUse?.getDefenseDC(this.attack) ?? RollPF.safeRollSync(\"0\");\n        this.critConfirm.armorAsDR = true;\n        this.critConfirm.options.flavor = game.i18n.localize(\"PF1.Critical\");\n        noAttack = true;\n      }\n    }\n\n    // Remove empty parts (e.g. zero iterative penalty)\n    extraParts = extraParts.filter((p) => p && p != 0);\n\n    // Roll attack\n    if (!noAttack) {\n      const roll = await this.action.rollAttack({\n        data: this.rollData,\n        bonus,\n        extraParts,\n        extraChanges,\n      });\n\n      if (critical === true) this.critConfirm = roll;\n      else {\n        this.attack = roll;\n        this.method = CONFIG.Dice.fulfillment.methods[roll.d20.method];\n      }\n\n      // Add crit confirm\n      const baseCritMult = this.rollData.action.ability.critMult ?? 1;\n      if (!critical && !this.action.isCombatManeuver && roll.isCrit && baseCritMult > 1) {\n        this.hasCritConfirm = true;\n        this.rollData.critMult = Math.max(1, baseCritMult + (this.rollData.critMultBonus ?? 0));\n        if (broken) this.rollData.critMult = 1;\n\n        await this.addAttack({ bonus, extraParts, critical: true, conditionalParts });\n      }\n\n      // Add tooltip\n      roll.options.flavor = critical ? game.i18n.localize(\"PF1.CriticalConfirmation\") : this.label;\n    }\n  }\n\n  async addDamage({ flavor = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    this.hasDamage = true;\n    this.notesOnly = false;\n    let data = this.damage;\n    if (critical === true) data = this.critDamage;\n\n    const rollData = foundry.utils.deepClone(this.rollData);\n    // Enforce critical multiplier\n    rollData.critCount = 0;\n\n    // Roll damage\n    const repeatCount = critical ? Math.max(1, rollData.critMult - 1) : 1;\n    for (let repeat = 0; repeat < repeatCount; ++repeat) {\n      if (critical) rollData.critCount++;\n      data.rolls.push(\n        ...(await this.action.rollDamage({\n          data: rollData,\n          extraParts,\n          critical,\n          conditionalParts,\n        }))\n      );\n    }\n\n    // Add normal data\n    if (!flavor) {\n      if (!critical) flavor = this.isHealing ? game.i18n.localize(\"PF1.Healing\") : game.i18n.localize(\"PF1.Damage\");\n      else flavor = game.i18n.localize(\"PF1.DamageCritical\");\n    }\n\n    // Determine total damage\n    let totalDamage = data.rolls.reduce((cur, p) => {\n      return cur + p.total;\n    }, 0);\n    if (critical) {\n      totalDamage = this.damage.rolls.reduce((cur, p) => {\n        return cur + p.total;\n      }, totalDamage);\n    }\n\n    // Handle minimum damage rule\n    if (totalDamage < 1) {\n      totalDamage = 1;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n      this.nonlethal = true;\n    }\n\n    // Handle nonlethal attacks\n    if (this.rollData.action.nonlethal || this.action.item.system.properties?.nnl) {\n      this.nonlethal = true;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n    }\n\n    // Finalize data\n    data.flavor = flavor;\n    data.total = totalDamage;\n  }\n\n  async addEffectNotes({ rollData } = {}) {\n    /** @type {Array<ParsedContextNoteEntry>} */\n    this.effectNotes = [];\n\n    const item = this.action.item;\n    if (!item) return;\n\n    const actor = item.actor;\n\n    if (actor) {\n      const noteSources = [\"attacks.effect\"];\n      if (item.type === \"spell\") noteSources.push(\"spellEffect\"); // Spell specific notes\n\n      for (const source of noteSources) {\n        this.effectNotes.push(...(await actor.getContextNotesParsed(source, { rollData })));\n      }\n    }\n\n    // Add item notes\n    if (item.system.effectNotes?.length) {\n      this.effectNotes.push(...item.system.effectNotes.map((text) => ({ text })));\n    }\n    // Add action notes\n    if (this.action.notes.effect.length) {\n      this.effectNotes.push(...this.action.notes.effect.map((text) => ({ text })));\n    }\n\n    // Misfire\n    if (this.ammo?.misfire) {\n      let label = game.i18n.localize(\"PF1.Misfire\");\n      const explosionRadius = this.action.item?.system.ammo?.explode ?? 0;\n      if (explosionRadius) {\n        const radius = pf1.utils.convertDistance(explosionRadius, \"ft\")[0];\n        const unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        label += ` (${radius} ${unit})`;\n      }\n      this.effectNotes.push({ text: label });\n    }\n\n    await this.setEffectNotesHTML();\n  }\n\n  _createInlineRoll(roll, d20 = false, critical = false) {\n    const classes = [\"inline-dsn-hidden\"];\n    if (d20) {\n      if (critical && roll.armorAsDR) classes.push(\"defense-dc\");\n      if (roll.isNat20) classes.push(\"natural-20\", \"success\");\n      if (roll.isNat1) classes.push(\"natural-1\", \"failure\");\n      if (!critical && roll.isCrit) classes.push(\"critical-threat\");\n    }\n    return roll.toAnchor({ classes });\n  }\n\n  /**\n   * Generate inline rolls\n   */\n  _createInlineRolls() {\n    if (this.attack) this.attack.inlineRoll = this._createInlineRoll(this.attack, true);\n    if (this.critConfirm) this.critConfirm.inlineRoll = this._createInlineRoll(this.critConfirm, true, true);\n\n    for (const row of this.damageRows) {\n      if (row.normal) row.normal.inlineRoll = this._createInlineRoll(row.normal);\n      if (row.crit) row.crit.inlineRoll = this._createInlineRoll(row.crit);\n    }\n  }\n\n  finalize() {\n    this.hasCards = Object.keys(this.cards).length > 0;\n\n    // Determine damage rows for chat cards\n    // this.damageRows = [];\n    for (let a = 0; a < Math.max(this.damage.rolls.length, this.critDamage.rolls.length); a++) {\n      this.damageRows.push({ normal: null, crit: null });\n    }\n    for (let a = 0; a < this.damage.rolls.length; a++) {\n      this.damageRows[a].normal = this.damage.rolls[a];\n    }\n    for (let a = 0; a < this.critDamage.rolls.length; a++) {\n      this.damageRows[a].crit = this.critDamage.rolls[a];\n    }\n\n    this._createInlineRolls();\n\n    return this;\n  }\n}\n\nclass AttackDamage {\n  flavor = \"\";\n\n  total = 0;\n\n  /** @type {DamageRoll[]} */\n  rolls = [];\n\n  get isActive() {\n    return this.rolls.length > 0;\n  }\n\n  get half() {\n    return Math.floor(this.total / 2);\n  }\n}\n\n/**\n * @typedef {object} AmmoUsage\n * @property {string} id - Ammo ID\n * @property {string} img - Item image\n * @property {string} name - Item name\n * @property {boolean} misfire - Was this a misfire?\n */\n\n/**\n * @typedef {object} ParsedContextNoteEntry\n * @property {string} text - Enriched note text\n * @property {string|undefined} source - Source label if any\n */\n","import { ChatAttack } from \"./chat-attack.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n// Documentation/type imports\n/** @typedef {import(\"@item/item-pf.mjs\").SharedActionData} SharedActionData */\n/** @typedef {pf1.documents.item.ItemPF} ItemPF */\n/** @typedef {pf1.documents.actor.ActorPF} ActorPF */\n/** @typedef {pf1.components.ItemAction} ItemAction */\n\n/**\n * Error states for when an item does not meet the requirements for an attack.\n *\n * @enum {number}\n * @readonly\n */\nexport const ERR_REQUIREMENT = Object.freeze({\n  NO_ACTOR_PERM: 1,\n  DISABLED: 2,\n  INSUFFICIENT_QUANTITY: 3,\n  INSUFFICIENT_CHARGES: 4,\n  MISSING_AMMO: 5,\n  INSUFFICIENT_AMMO: 6,\n  DISALLOWED_ACTION_TYPE: 7,\n});\n\nexport class ActionUse {\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {ActorPF}\n   */\n  actor;\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * The item this action use is based on.\n   *\n   * @type {ItemPF}\n   */\n  item;\n  /**\n   * The action this action use is based on.\n   *\n   * @type {ItemAction}\n   */\n  action;\n  /**\n   * The shared data object holding all relevant data for this action use.\n   *\n   * @type {SharedActionData}\n   */\n  shared;\n\n  /**\n   * @param {Partial<SharedActionData>} [shared={}] - The shared context for this action use\n   */\n  constructor(shared = {}) {\n    Object.defineProperties(this, {\n      shared: { value: shared },\n      item: { value: shared.item },\n      action: { value: shared.action },\n      actor: { value: shared.item.actor },\n      token: { value: shared.token },\n    });\n\n    // Init some shared data\n    this.shared.templateData = {\n      action: this.shared.action,\n      item: this.shared.item,\n    };\n  }\n\n  /**\n   * @returns {Promise<number>} - 0 when successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkRequirements() {\n    if (this.action.isCombatManeuver && this.actor.system.config?.noManeuvers) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.DisallowedActionType\", { name: actor.name }));\n      return ERR_REQUIREMENT.DISALLOWED_ACTION_TYPE;\n    }\n\n    const actor = this.item.actor;\n    if (actor && !actor.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n      return ERR_REQUIREMENT.NO_ACTOR_PERM;\n    }\n\n    if (this.item.type === \"feat\" && this.item.system.disabled) {\n      ui.notifications.warn(game.i18n.localize(\"PF1.Error.FeatDisabled\"));\n      return ERR_REQUIREMENT.DISABLED;\n    }\n\n    // Cost override set to 0 or to increase charges/quantity\n    if (this.shared.cost !== null && this.shared.cost <= 0) return 0;\n\n    if (this.item.isPhysical) {\n      const itemQuantity = this.item.system.quantity || 0;\n      if (itemQuantity <= 0) {\n        ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n        return ERR_REQUIREMENT.INSUFFICIENT_QUANTITY;\n      }\n    }\n\n    if (this.action.isSelfCharged && this.action.uses.self?.value < 1) {\n      ui.notifications.warn(\n        game.i18n.format(\"PF1.Error.InsufficientCharges\", {\n          name: `${this.item.name}: ${this.action.name}`,\n        })\n      );\n      return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @returns {Promise<object>} The roll data object for this attack.\n   */\n  getRollData() {\n    const rollData = this.shared.action.getRollData({ cache: false });\n\n    const d20 = this.shared.dice;\n    // TODO: Move this standard roll obfuscation to dialog handling\n    rollData.d20 = d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20;\n\n    // Init values\n    rollData.dcBonus ||= 0;\n    rollData.chargeCost ||= 0;\n    rollData.chargeCostBonus ||= 0;\n\n    rollData.critMultBonus ||= 0;\n\n    this.shared.rollData = rollData;\n  }\n\n  /**\n   * Creates and renders an attack roll dialog, and returns a result.\n   *\n   * @returns {Promise<ItemAttack_Dialog_Result|null>} - Attack dialog result or null if cancelled.\n   */\n  createAttackDialog() {\n    const dialog = new pf1.applications.AttackDialog(this);\n    return dialog.show();\n  }\n\n  /**\n   * Alters roll (and shared) data based on user input during the attack's dialog.\n   *\n   * @param {object} formData - The attack dialog's form data\n   */\n  alterRollData(formData = {}) {\n    // TODO: use this.shared.formData instead of the function param\n\n    const rollData = this.shared.rollData;\n\n    const useOptions = this.shared.useOptions;\n    formData[\"power-attack\"] ??= useOptions.powerAttack;\n    formData[\"primary-attack\"] ??= useOptions.primaryAttack;\n    formData[\"cl-check\"] ??= useOptions.clCheck ?? this.item?.system.clCheck === true;\n    formData[\"measure-template\"] ??= useOptions.measureTemplate;\n    formData[\"haste-attack\"] ??= useOptions.haste;\n    formData[\"manyshot\"] ??= useOptions.manyshot;\n    formData[\"rapid-shot\"] ??= useOptions.rapidShot;\n    formData[\"point-blank-shot\"] ??= useOptions.pointBlankShot;\n    formData[\"damage-ability-multiplier\"] ??= useOptions.abilityMult;\n    formData[\"flanking\"] ??= useOptions.flanking;\n    formData[\"highGround\"] ??= useOptions.highGround;\n    formData[\"charge\"] ??= useOptions.charge;\n\n    formData.fullAttack ??= true;\n\n    if (formData[\"d20\"]) rollData.d20 = formData[\"d20\"];\n    const atkBonus = formData[\"attack-bonus\"];\n    if (atkBonus) {\n      this.shared.attackBonus.push(atkBonus);\n    }\n    const dmgBonus = formData[\"damage-bonus\"];\n    if (dmgBonus) {\n      this.shared.damageBonus.push(dmgBonus);\n    }\n\n    if (formData.rollMode) this.shared.rollMode = formData.rollMode;\n\n    // Point-Blank Shot\n    if (formData[\"point-blank-shot\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.damageBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.pointBlankShot = true;\n    }\n\n    if (formData[\"flanking\"]) {\n      this.shared.attackBonus.push(`2[${game.i18n.localize(\"PF1.Flanking\")}]`);\n      this.shared.flanking = true;\n    }\n\n    if (formData[\"highGround\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.HighGround\")}]`);\n      this.shared.highGround = true;\n    }\n\n    if (formData[\"charge\"]) {\n      this.shared.attackBonus.push(`2[${game.i18n.localize(\"PF1.Charge\")}]`);\n      this.shared.charge = true;\n    }\n\n    this.shared.fullAttack = formData.fullAttack;\n    rollData.fullAttack = this.shared.fullAttack ? 1 : 0;\n\n    // Many-shot\n    if (this.shared.fullAttack && formData[\"manyshot\"]) {\n      this.shared.manyShot = true;\n    }\n\n    // Rapid Shot\n    if (this.shared.fullAttack && formData[\"rapid-shot\"]) {\n      this.shared.attackBonus.push(`-2[${game.i18n.localize(\"PF1.RapidShot\")}]`);\n    }\n\n    // Primary attack\n    if (formData[\"primary-attack\"] != null)\n      foundry.utils.setProperty(rollData, \"action.naturalAttack.primary\", formData[\"primary-attack\"]);\n\n    // Use measure template\n    if (formData[\"measure-template\"] != null) this.shared.useMeasureTemplate = formData[\"measure-template\"];\n\n    // Set held type\n    const held = formData[\"held\"] || rollData.action.held || rollData.item.held || \"1h\";\n    rollData.action.held = held;\n\n    // Damage multiplier\n    const abilityDamageMultOverride = formData[\"damage-ability-multiplier\"];\n    if (abilityDamageMultOverride != null) {\n      rollData.action.ability.damageMult = abilityDamageMultOverride;\n    }\n\n    // Power Attack\n    if (formData[\"power-attack\"]) {\n      const basePowerAttackBonus = rollData.action?.powerAttack?.damageBonus ?? 2;\n      let powerAttackBonus = (1 + Math.floor(rollData.attributes.bab.total / 4)) * basePowerAttackBonus;\n\n      // Get multiplier\n      const paMult = this.shared.action.getPowerAttackMult({ rollData });\n\n      // Apply multiplier\n      powerAttackBonus = Math.floor(powerAttackBonus * paMult);\n\n      // Get label\n      const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.action.actionType)\n        ? game.i18n.localize(\"PF1.DeadlyAim\")\n        : game.i18n.localize(\"PF1.PowerAttack\");\n\n      // Get penalty\n      const powerAttackPenalty = -(1 + Math.floor(rollData.bab / 4));\n\n      // Add bonuses\n      rollData.powerAttackPenalty = powerAttackPenalty;\n      this.shared.attackBonus.push(`${powerAttackPenalty}[${label}]`);\n      this.shared.powerAttack = true;\n      rollData.powerAttackBonus = powerAttackBonus;\n      rollData.powerAttackPenalty = powerAttackPenalty;\n    } else {\n      rollData.powerAttackBonus = 0;\n      rollData.powerAttackPenalty = 0;\n    }\n\n    // Conditionals\n    const { conditionals } = foundry.utils.expandObject(formData);\n\n    if (conditionals) {\n      this.shared.conditionals = [];\n      Object.entries(conditionals).forEach(([condId, enabled]) => {\n        if (enabled) this.shared.conditionals.push(condId);\n      });\n    }\n    // Conditional defaults for fast-forwarding\n    if (!this.shared.conditionals) {\n      this.shared.conditionals = this.shared.action.conditionals?.reduce((arr, con) => {\n        if (con.default) arr.push(con.id);\n        return arr;\n      }, []);\n    }\n\n    // Apply secondary attack penalties\n    if (rollData.item.subType === \"natural\" && rollData.action?.naturalAttack.primary === false) {\n      const attackBonus =\n        rollData.action.naturalAttack?.secondary?.attackBonus || pf1.config.naturalAttacks.secondary.penalty;\n      let damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      // Allow dialog override to work\n      if (abilityDamageMultOverride) damageMult = abilityDamageMultOverride;\n      this.shared.attackBonus.push(`(${attackBonus})[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n      rollData.action.ability.damageMult = damageMult;\n    }\n\n    // CL check enabled\n    this.shared.casterLevelCheck = formData[\"cl-check\"];\n\n    // Concentration enabled\n    this.shared.concentrationCheck = formData[\"concentration\"];\n  }\n\n  /**\n   * @typedef {object} ItemAttack_AttackData\n   * @property {string} label - The attack's name\n   * @property {number|string|undefined} [attackBonus] - An attack bonus specific to this attack\n   * @property {number|string|undefined} [damageBonus] - A damage bonus specific to this attack\n   * @property {string|null} [ammo] - The ID of the ammo item used\n   */\n  /**\n   * Generates attacks for an item's action.\n   *\n   * @param {boolean} [forceFullAttack=false] - Generate full attack data, e.g. as base data for an {@link AttackDialog}\n   * @returns {Promise<ItemAttack_AttackData[]> | ItemAttack_AttackData[]} The generated default attacks.\n   */\n  generateAttacks(forceFullAttack = false) {\n    const rollData = this.shared.rollData;\n    const action = this.action;\n\n    // Use either natural fullAttack state, or force generation of all attacks via override\n    const full = forceFullAttack || this.shared.fullAttack;\n\n    /** @type {Array<ActionUseAttack>} */\n    const allAttacks = this.action\n      .getAttacks({ full, rollData, conditionals: false, bonuses: false, resolve: false })\n      .map((atk) => new ActionUseAttack(atk.label, atk.bonus));\n\n    // Set default ammo usage\n    const ammoType = this.action.ammo.type;\n    if (ammoType) {\n      const ammoId = this.item.system.ammo?.default;\n      const ammos = this.getAmmo();\n      if (ammoId && ammos.length) {\n        const ammo = ammos.find((a) => a.id === ammoId);\n        const quantity = ammo?.quantity || 0;\n        const ammoCost = action.ammo.cost;\n        const abundant = ammo?.abundant || false;\n        for (let a = 0; a < allAttacks.length; a++) {\n          const atk = allAttacks[a];\n          if (abundant || quantity >= (a + 1) * ammoCost) atk.ammo = ammo;\n          else atk.ammo = null;\n        }\n      }\n    }\n\n    this.shared.attacks = allAttacks;\n\n    return allAttacks;\n  }\n\n  async autoSelectAmmo() {\n    const ammoType = this.shared.action.ammo.type;\n    if (!ammoType) return;\n\n    const ammoCost = this.action.ammo.cost;\n\n    const item = this.item.defaultAmmo;\n    if (item && (item.system.quantity || 0) >= ammoCost) return;\n\n    const ammo = this.actor.itemTypes.loot\n      .filter(\n        (i) =>\n          i.subType === \"ammo\" &&\n          i.system.extraType === ammoType &&\n          i.system.quantity >= ammoCost &&\n          i.system.identified !== false\n      )\n      .sort((a, b) => a.system.price - b.system.price);\n\n    if (ammo.length == 0) return;\n\n    await this.item.update({ \"system.ammo.default\": ammo[0].id });\n  }\n\n  /**\n   * Fetch valid ammo items from actor.\n   *\n   * @returns {AttackAmmo[]} - Available ammo options\n   */\n  getAmmo() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammo.cost;\n    const availableAmmo = actor.itemTypes.loot.filter((item) => this._filterAmmo(item, ammoCost));\n\n    const defaultAmmo = this.action.item.defaultAmmo;\n\n    return availableAmmo.map((ammo) => ({\n      id: ammo.id,\n      quantity: ammo.system.quantity || 0,\n      abundant: ammo.system.abundant || false,\n      data: ammo.toObject(),\n      document: ammo,\n      isDefault: defaultAmmo === ammo,\n    }));\n  }\n\n  /**\n   * Determine if item is valid for use as ammo.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {number} ammoCost - Ammo usage per attack\n   * @returns {boolean} - Whether the provide ammo is valid.\n   */\n  _filterAmmo(item, ammoCost = 1) {\n    if (!(item.type === \"loot\" && item.subType === \"ammo\")) return false;\n    if (item.system.quantity < ammoCost) return false;\n\n    const ammoType = item.system.extraType;\n    if (!ammoType) return true;\n\n    return this.action.ammo.type === ammoType;\n  }\n\n  /**\n   * Subtracts ammo for this attack, updating relevant items with new quantities.\n   *\n   * @param {number} [value=1] - How much ammo to subtract.\n   * @returns {Promise} - Promise that resolves once ammo update is complete.\n   */\n  async subtractAmmo(value = 1) {\n    if (!this.shared.action.ammo.type) return;\n\n    const actor = this.item.actor;\n\n    const ammoUsage = {};\n    for (const atk of this.shared.attacks) {\n      if (atk.ammo) {\n        const item = actor.items.get(atk.ammo.id);\n        if (!item) continue;\n        // Don't remove abundant ammunition\n        if (item.system.abundant) continue;\n\n        ammoUsage[atk.ammo.id] ??= 0;\n        ammoUsage[atk.ammo.id] += value;\n      }\n    }\n\n    this.shared.ammoUsage = ammoUsage;\n\n    if (!foundry.utils.isEmpty(ammoUsage)) {\n      const updateData = Object.entries(ammoUsage).reduce((cur, [ammoId, usage]) => {\n        const quantity = this.item.actor.items.get(ammoId)?.system.quantity;\n        const obj = {\n          _id: ammoId,\n          \"system.quantity\": quantity - usage,\n        };\n\n        cur.push(obj);\n        return cur;\n      }, []);\n\n      return this.item.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n  }\n\n  /**\n   * Update remaining ammo in {@link ChatAttack}s\n   */\n  updateAmmoUsage() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammo.cost;\n    if (ammoCost <= 0) return;\n    for (const atk of this.shared.attacks) {\n      const ammoId = atk.ammo?.id;\n      if (!ammoId) continue;\n      const chatAtk = atk.chatAttack;\n      const ammo = actor.items.get(ammoId)?.system.quantity || 0;\n      chatAtk.ammo.remaining = ammo;\n      chatAtk.ammo.quantity = ammoCost;\n    }\n  }\n\n  async handleConditionals() {\n    if (!this.shared.conditionals?.length) return;\n\n    const rollDataConds = {};\n\n    for (const condId of this.shared.conditionals) {\n      const conditional = this.shared.action.conditionals.get(condId);\n\n      const tag = pf1.utils.createTag(conditional.name);\n      for (const [modKey, modifier] of conditional.modifiers.entries()) {\n        // Ignore modifiers with nonexisting formula or formulas that equal to zero\n        if (modifier.formula == 0) {\n          console.warn(\"Ignored ineffective conditional modifier\", { modifier, actionUse: this });\n          continue;\n        }\n\n        // Adds a formula's result to rollData to allow referencing it.\n        // Due to being its own roll, this will only correctly work for static formulae.\n        const conditionalRoll = await RollPF.safeRoll(modifier.formula, this.shared.rollData, undefined, undefined, {\n          allowInteractive: false,\n        });\n        if (conditionalRoll.err) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.ConditionalRoll\", { number: modKey + 1, name: conditional.name })\n          );\n          // Skip modifier to avoid multiple errors from one non-evaluating entry\n          continue;\n        }\n\n        rollDataConds[tag] ??= {};\n        rollDataConds[tag][modKey] = conditionalRoll.total;\n\n        // Create a key string for the formula array\n        const partString = modifier.partID;\n\n        // Add formula in simple format\n        switch (modifier.target) {\n          case \"attack\":\n          case \"effect\":\n          case \"charges\":\n          case \"misc\":\n          case \"dc\":\n          case \"cl\": {\n            const hasFlavor = /\\[.*\\]/.test(modifier.formula);\n            const flavoredFormula = hasFlavor ? modifier.formula : `(${modifier.formula})[${conditional.name}]`;\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              flavoredFormula,\n            ];\n            break;\n          }\n          // Add formula as array for damage\n          case \"damage\":\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              [modifier.formula, modifier.damageType, false],\n            ];\n            break;\n          // Add formula to the size property\n          case \"size\":\n            this.shared.rollData.size += conditionalRoll.total;\n            if (this.shared.rollData.item) {\n              this.shared.rollData.item.size += conditionalRoll.total;\n            }\n            break;\n          case \"critMult\":\n            this.shared.rollData.critMultBonus += conditionalRoll.total;\n            break;\n          default:\n            console.warn(\"Invalid conditional target:\", modifier.target);\n            break;\n        }\n      }\n    }\n\n    // Expand data into rollData to enable referencing in formulae\n    this.shared.rollData.conditionals = rollDataConds;\n\n    // Add specific pre-rolled rollData entries\n    for (const target of [\"cl\", \"dc\", \"charges\"]) {\n      const cond = this.shared.conditionalPartsCommon[target];\n      if (!cond) continue;\n      const formula = cond.join(\" + \");\n      const roll = await RollPF.safeRoll(formula, this.shared.rollData, [target, formula]);\n      switch (target) {\n        case \"cl\":\n          this.shared.rollData.cl += roll.total;\n          break;\n        case \"dc\":\n          this.shared.rollData.dcBonus += roll.total;\n          break;\n        case \"charges\":\n          this.shared.rollData.chargeCostBonus += roll.total;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Checks all requirements to make the attack. This is after the attack dialog's data has been parsed.\n   *\n   * @returns {Promise<number> | number} 0 if successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkAttackRequirements() {\n    let cost = this.shared.rollData.chargeCost;\n\n    const isSpell = this.item.type === \"spell\";\n\n    if (cost > 0) {\n      const uses = this.item.charges;\n      if (isSpell) {\n        if (this.item.spellbook?.spontaneous && !this.item.system.preparation?.value) {\n          cost = Infinity;\n        }\n      }\n\n      // Cancel usage on insufficient charges\n      if (cost > uses) {\n        // Only spells have variable max uses\n        if (isSpell && this.item.maxCharges <= 0) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientPreparation\", { name: this.item.name }));\n        } else {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.item.name }));\n        }\n        return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Generates ChatAttack entries based off the attack type.\n   */\n  async generateChatAttacks() {\n    // Normal attack(s)\n    if (this.shared.action.hasAttack) await this.addAttacks();\n    // Damage only\n    else if (this.shared.action.hasDamage) await this.addDamage();\n    // for effect notes only\n    else await this.addEmptyAttack();\n\n    const misfire = this.action.misfire ?? 0;\n\n    // Fill in ammo use details\n    this.shared.attacks.forEach((/** @type {ChatAttack}*/ attack) => {\n      if (!attack.hasAmmo) return;\n      /** @type {ChatAttack} */\n      const atk = attack.chatAttack;\n      if (atk) atk.setAmmo(attack.ammo.id);\n      // Mark misfire\n      if (atk.ammo) {\n        const d20 = atk.attack?.d20?.total;\n        atk.ammo.misfire = d20 <= misfire;\n      }\n    });\n\n    // Add save info\n    this.shared.save = this.shared.action.save.type;\n    this.shared.saveDC = this.shared.action.getDC(this.shared.rollData);\n  }\n\n  /**\n   * Determines conditional parts used in a specific attack.\n   *\n   * @param {object} atk - The attack used.\n   * @param {number} [index=0] - The index of the attack, in order of enabled attacks.\n   * @returns {object} The conditional parts used.\n   */\n  _getConditionalParts(atk, { index = 0 }) {\n    const result = {};\n\n    const conditionalTemplates = {\n      \"attack.normal\": \"attack.;id;.normal\",\n      \"attack.crit\": \"attack.;id;.crit\",\n      \"damage.normal\": \"damage.;id;.normal\",\n      \"damage.crit\": \"damage.;id;.crit\",\n      \"damage.nonCrit\": \"damage.;id;.nonCrit\",\n    };\n    const addPart = (id) => {\n      for (const [templateKey, templateStr] of Object.entries(conditionalTemplates)) {\n        if (!result[templateKey]) result[templateKey] = [];\n\n        const parsedStr = templateStr.replace(\";id;\", id);\n        result[templateKey].push(...(this.shared.conditionalPartsCommon[parsedStr] ?? []));\n      }\n    };\n\n    addPart(`attack_${index}`);\n    addPart(\"allAttack\");\n    addPart(\"allDamage\");\n\n    if (atk.type === \"rapid-shot\") {\n      addPart(\"rapidShotAttack\");\n      addPart(\"rapidShotDamage\");\n    } else if (atk.type === \"haste-attack\") {\n      addPart(\"hasteAttack\");\n      addPart(\"hasteDamage\");\n    }\n\n    return result;\n  }\n\n  /**\n   * Adds ChatAttack entries to an attack's shared context.\n   */\n  async addAttacks() {\n    const rollData = this.shared.rollData;\n\n    for (let a = 0; a < this.shared.attacks.length; a++) {\n      const atk = this.shared.attacks[a];\n\n      // Combine conditional modifiers for attack and damage\n      const conditionalParts = this._getConditionalParts(atk, { index: a });\n\n      rollData.attackCount = a;\n\n      // Create attack object\n      const attack = new ChatAttack(this.shared.action, {\n        label: atk.label,\n        rollData,\n        targets: game.user.targets,\n        actionUse: this,\n      });\n\n      if (atk.type !== \"manyshot\") {\n        // Add attack roll\n        await attack.addAttack({\n          extraParts: [...this.shared.attackBonus, atk.attackBonus],\n          conditionalParts,\n        });\n      }\n\n      // Add damage\n      if (this.shared.action.hasDamage) {\n        const extraParts = foundry.utils.deepClone(this.shared.damageBonus);\n        const nonCritParts = [];\n        const critParts = [];\n\n        // Add power attack bonus\n        if (rollData.powerAttackBonus > 0) {\n          // Get label\n          const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.shared.action.actionType)\n            ? game.i18n.localize(\"PF1.DeadlyAim\")\n            : game.i18n.localize(\"PF1.PowerAttack\");\n\n          const powerAttackBonus = rollData.powerAttackBonus;\n          const powerAttackCritBonus = powerAttackBonus * (rollData.action?.powerAttack?.critMultiplier ?? 1);\n          nonCritParts.push(`${powerAttackBonus}[${label}]`);\n          critParts.push(`${powerAttackCritBonus}[${label}]`);\n        }\n\n        // Add damage\n        let flavor = null;\n        if (atk.type === \"manyshot\") flavor = game.i18n.localize(\"PF1.Manyshot\");\n        await attack.addDamage({\n          flavor,\n          extraParts: [...extraParts, ...nonCritParts],\n          critical: false,\n          conditionalParts,\n        });\n\n        // Add critical hit damage\n        if (attack.hasCritConfirm) {\n          await attack.addDamage({ extraParts: [...extraParts, ...critParts], critical: true, conditionalParts });\n        }\n      }\n\n      // Add to list\n      this.shared.chatAttacks.push(attack);\n\n      // Add a reference to the attack that created this chat attack\n      atk.chatAttack = attack;\n    }\n\n    // Cleanup rollData\n    delete rollData.attackCount;\n  }\n\n  /**\n   * Adds a ChatAttack entry for damage to an attack's shared context.\n   */\n  async addDamage() {\n    // Set conditional modifiers\n    this.shared.conditionalParts = {\n      \"damage.normal\": this.shared.conditionalPartsCommon[\"damage.allDamage.normal\"] ?? [],\n    };\n\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n    // Add damage\n    await attack.addDamage({\n      extraParts: foundry.utils.deepClone(this.shared.damageBonus),\n      critical: false,\n      conditionalParts: this.shared.conditionalParts,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  async addFootnotes() {\n    if (!this.item) return;\n\n    const actor = this.actor;\n    const rollData = this.shared.rollData;\n\n    const type = this.action.actionType;\n    const typeMap = {\n      rsak: [\"ranged\", \"rangedSpell\"],\n      rwak: [\"ranged\", \"rangedWeapon\"],\n      twak: [\"ranged\", \"thrownWeapon\", \"rangedWeapon\"],\n      rcman: [\"ranged\"],\n      mwak: [\"melee\", \"meleeWeapon\"],\n      msak: [\"melee\", \"meleeSpell\"],\n      mcman: [\"melee\"],\n    };\n\n    const isAttack = this.action.hasAttack ?? false;\n\n    const notes = [];\n    // Add actor notes for attacks\n    if (this.actor && isAttack) {\n      notes.push(...(await actor.getContextNotesParsed(\"attack\", { rollData })));\n      for (const subTarget of typeMap[type]) {\n        notes.push(...(await actor.getContextNotesParsed(subTarget, { rollData })));\n      }\n    }\n    // Add item notes\n    if (this.item?.system.attackNotes) {\n      notes.push(...this.item.system.attackNotes.map((text) => ({ text })));\n    }\n    // Add action notes\n    if (this.action.notes.footer) {\n      notes.push(...this.action.notes.footer.map((text) => ({ text })));\n    }\n\n    // Add CMB notes\n    if (this.action.isCombatManeuver) {\n      notes.push(...((await actor?.getContextNotesParsed(\"cmb\", { rollData })) ?? []));\n    }\n\n    if (isAttack) {\n      const hasCritConfirm = this.shared.attacks.some((atk) => !!atk.chatAttack?.hasCritConfirm);\n      if (hasCritConfirm) notes.push(...((await actor?.getContextNotesParsed(\"critical\", { rollData })) ?? []));\n    }\n\n    this.shared.templateData.footnotes = notes;\n  }\n\n  async addEmptyAttack() {\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  /**\n   * Add effect notes for each individual attack.\n   */\n  async addEffectNotes() {\n    const promises = this.shared.chatAttacks\n      .filter((attack) => attack.type !== \"manyshot\")\n      .map((attack) => attack.addEffectNotes({ rollData: this.shared.rollData }));\n    await Promise.all(promises);\n  }\n\n  /**\n   * @typedef {object} Attack_MeasureTemplateResult\n   * @property {boolean} result - Whether an area was selected.\n   * @property {Function} [place] - Function to place the template, if an area was selected.\n   * @property {Function} [delete] - Function to delete the template, if it has been placed.\n   */\n  /**\n   * Prompts the user for an area, based on the attack's measure template.\n   *\n   * @returns {Promise.<Attack_MeasureTemplateResult|false|null>} Whether an area was selected, false if template placement is skipped, null if cancelled.\n   */\n  async promptMeasureTemplate() {\n    const mt = this.shared.action.measureTemplate;\n\n    // Determine size\n    let dist = RollPF.safeRollSync(mt.size, this.shared.rollData).total;\n    // Apply system of units conversion\n    dist = pf1.utils.convertDistance(dist)[0];\n\n    // Abort template placement when it exceeds scene size\n    const { distancePixels, width, height } = canvas.scene.dimensions;\n    const maxDist = Math.max(width / distancePixels, height / distancePixels);\n    if (dist > maxDist) {\n      // TODO: Print notification about template placement skipping due to excessive size\n      console.debug(\"PF1 | Action-Use | Template size exceeds maximum size\", { distance: dist, maximum: maxDist });\n      return false;\n    }\n\n    // Create data object\n    const templateData = {\n      type: mt.type,\n      color: mt.color,\n      texture: mt.texture,\n      distance: dist,\n      flags: {\n        pf1: {\n          origin: {\n            uuid: this.shared.action.uuid,\n          },\n        },\n      },\n    };\n\n    // Create template\n    this.shared.template = null;\n    const template = pf1.canvas.AbilityTemplate.fromData(templateData, { action: this.shared.action });\n    let result;\n    if (template) {\n      const actorSheet = this.item.actor?.sheet;\n      const sheetRendered = actorSheet?._element != null;\n      if (sheetRendered) actorSheet.minimize();\n      result = await template.drawPreview(this.shared.event).catch((e) => null);\n      if (sheetRendered) actorSheet.maximize();\n    }\n\n    if (result) this.shared.template = await result.place();\n\n    return result;\n  }\n\n  /**\n   * Handles Dice So Nice integration.\n   */\n  async handleDiceSoNice() {\n    if (!game.settings.get(\"pf1\", \"integration\").diceSoNice) return;\n    if (!game.dice3d?.isEnabled()) return;\n\n    // Use try to make sure a chat card is rendered even if DsN fails\n    try {\n      // Define common visibility options for whole attack\n      const chatData = {};\n      ChatMessage.implementation.applyRollMode(chatData, this.shared.rollMode);\n\n      const mergeRolls = game.settings.get(\"dice-so-nice\", \"enabledSimultaneousRolls\");\n      const skipRolls = game.settings.get(\"dice-so-nice\", \"immediatelyDisplayChatMessages\");\n\n      /**\n       * Visually roll dice\n       *\n       * @param {PoolTerm[]} pools - An array of PoolTerms to be rolled together\n       * @returns {Promise} A Promise that is resolved when all rolls have been displayed\n       */\n      const showRoll = async (pools) => {\n        const whisper = chatData.whisper?.length ? chatData.whisper : undefined; // DSN does not like empty array for whisper\n\n        if (mergeRolls) {\n          // All at once\n          return Promise.all(\n            pools.map((pool) => game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind))\n          );\n        } else {\n          // Sequential\n          for (const pool of pools) {\n            await game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind);\n          }\n        }\n      };\n\n      /** @type {PoolTerm[]} */\n      const pools = [];\n\n      for (const atk of this.shared.chatAttacks) {\n        // Create PoolTerm for attack and damage rolls\n        const attackPool = new foundry.dice.terms.PoolTerm();\n        if (atk.attack) attackPool.rolls.push(atk.attack);\n        attackPool.rolls.push(...(atk.damage?.rolls ?? []));\n\n        // Create PoolTerm for crit confirmation and crit damage rolls\n        const critPool = new foundry.dice.terms.PoolTerm();\n        if (atk.hasCritConfirm) critPool.rolls.push(atk.critConfirm);\n        critPool.rolls.push(...(atk.critDamage?.rolls ?? []));\n\n        // Add non-empty pools to the array of rolls to be displayed\n        if (attackPool.rolls.length) pools.push(attackPool);\n        if (critPool.rolls.length) pools.push(critPool);\n      }\n\n      if (pools.length) {\n        // Chat card is to be shown immediately\n        if (skipRolls) showRoll(pools);\n        // Wait for rolls to finish before showing the chat card\n        else await showRoll(pools);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Adds an attack's chat card data to the shared object.\n   */\n  async getMessageData() {\n    if (this.shared.chatAttacks.length === 0) return;\n\n    const rollData = this.shared.rollData;\n\n    // Create chat template data\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      name: this.item.name,\n      header: {\n        image: this.action.img || this.item.img,\n      },\n      style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n      rollMode: this.shared.rollMode,\n      attacks: this.shared.chatAttacks.map((o) => o.finalize()),\n    };\n\n    const actor = this.item.actor,\n      token = this.token ?? actor?.token;\n\n    // Set chat data\n    this.shared.chatData = {\n      type: \"action\",\n      speaker: ChatMessage.implementation.getSpeaker({ actor, token }),\n      rollMode: this.shared.rollMode,\n    };\n\n    // Set attack sound\n    if (this.shared.action.soundEffect) this.shared.chatData.sound = this.shared.action.soundEffect;\n    // Set dice sound if neither attack sound nor Dice so Nice are available\n    else if (!game.settings.get(\"pf1\", \"integration\").diceSoNice || !game.dice3d?.isEnabled())\n      this.shared.chatData.sound = CONFIG.sounds.dice;\n\n    // Get extra text\n    const properties = [];\n    const extraText = await this.enrichNotes(this.shared.templateData.footnotes, \"PF1.Footnotes\", \"footnotes\");\n\n    const itemChatData = await this.item.getChatData({\n      actionId: this.shared.action.id,\n      chatcard: true,\n      rollData: this.shared.rollData,\n    });\n\n    const formatTextNotes = (notes) => notes?.map((text) => ({ text })) ?? [];\n\n    // Get properties\n    // TODO: Object format\n    const commonProperties = [...itemChatData.properties, ...this.addGenericPropertyLabels()];\n    if (commonProperties.length) {\n      properties.push({\n        header: game.i18n.localize(\"PF1.InfoShort\"),\n        css: \"common-notes\",\n        value: formatTextNotes(commonProperties),\n      });\n    }\n\n    // Get combat properties\n    if (game.combat) {\n      // TODO: Object format\n      const combatProps = this.addCombatPropertyLabels();\n\n      if (combatProps.length) {\n        properties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: formatTextNotes(combatProps),\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Add CL notes\n    if (this.item.type === \"spell\" && actor) {\n      const clNotes = await actor.getContextNotesParsed(`spell.cl.${this.item.system.spellbook}`, { rollData });\n\n      if (clNotes.length) {\n        properties.push({\n          header: game.i18n.localize(\"PF1.CLNotes\"),\n          css: \"cl-notes\",\n          value: clNotes,\n        });\n      }\n\n      const school = this.item.system.school;\n      if (school) {\n        // Add DC School notes\n        const dcSchoolNotes = await actor.getContextNotesParsed(`dc.school.${school}`, { rollData });\n        if (dcSchoolNotes.length) {\n          properties.push({\n            header: game.i18n.format(\"PF1.DCSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            css: \"dc-notes\",\n            value: dcSchoolNotes,\n          });\n        }\n        // Add CL School notes\n        const clSchoolNotes = await actor.getContextNotesParsed(`cl.school.${school}`, { rollData });\n        if (clSchoolNotes.length) {\n          properties.push({\n            header: game.i18n.format(\"PF1.CLSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            css: \"cl-notes\",\n            value: clSchoolNotes,\n          });\n        }\n      }\n    }\n\n    // Parse template data\n    const identified = Boolean(this.shared.rollData.item?.identified ?? true);\n    const name = identified ? `${this.item.name} (${this.shared.action.name})` : this.item.getName(true);\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      tokenUuid: token?.uuid,\n      actionId: this.shared.action?.id,\n      extraText,\n      identified,\n      name,\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      actionDescription: itemChatData.actionDescription,\n      properties,\n      item: this.item.toObject(),\n      actor,\n      token,\n      scene: canvas.scene?.id,\n      hasSave: this.shared.action.hasSave,\n      rollData: this.shared.rollData,\n      save: {\n        dc: this.shared.saveDC,\n        type: this.shared.save,\n        label: game.i18n.format(\"PF1.SavingThrowButtonLabel\", {\n          type: pf1.config.savingThrows[this.shared.save],\n          dc: this.shared.saveDC.toString(),\n        }),\n        gmSensitiveLabel: game.i18n.format(\"PF1.SavingThrowButtonLabelGMSensitive\", {\n          save: pf1.config.savingThrows[this.shared.save],\n        }),\n      },\n    };\n\n    // Add range info\n    {\n      const range = this.shared.action.getRange({ type: \"max\", rollData: this.shared.rollData });\n      if (range != null) {\n        this.shared.templateData.range = range;\n        const usystem = pf1.utils.getDistanceSystem();\n        const isMetric = usystem === \"metric\";\n        const units = isMetric ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n\n        const rangeUnits = this.shared.action.range.units;\n        if ([\"melee\", \"touch\", \"reach\", \"close\", \"medium\", \"long\"].includes(rangeUnits)) {\n          this.shared.templateData.rangeLabel = pf1.config.distanceUnits[rangeUnits];\n          this.shared.templateData.rangeLabel += ` (${game.i18n.format(\"PF1.RangeFormat\", { distance: range, units })})`;\n          this.shared.templateData.rangeLabel = game.i18n.format(\"PF1.RangeNote\", {\n            distance: this.shared.templateData.rangeLabel,\n            units: \"\", // HACK\n          });\n        } else {\n          this.shared.templateData.rangeLabel = game.i18n.format(\"PF1.RangeNote\", { distance: range, units });\n        }\n      }\n    }\n\n    // Add spell info\n    if (this.item.type === \"spell\" && actor) {\n      // Spell failure\n      if (actor.spellFailure > 0 && this.item.system.components.somatic) {\n        const spellbook = foundry.utils.getProperty(\n          actor.system,\n          `attributes.spells.spellbooks.${this.item.system.spellbook}`\n        );\n        if (spellbook && spellbook.arcaneSpellFailure) {\n          const roll = await RollPF.safeRoll(\"1d100\");\n          this.shared.templateData.spellFailure = roll.total;\n          this.shared.templateData.spellFailureRoll = roll;\n          this.shared.templateData.spellFailureSuccess = roll.total > actor.spellFailure;\n        }\n      }\n      // Caster Level Check\n      this.shared.templateData.casterLevelCheck = this.shared.casterLevelCheck;\n      // Concentration check\n      this.shared.templateData.concentrationCheck = this.shared.concentrationCheck;\n    }\n\n    // Generate metadata\n    const metadata = this.generateChatMetadata();\n\n    // Get target info\n    if (!game.settings.get(\"pf1\", \"disableAttackCardTargets\")) {\n      this.shared.templateData.targets = this.shared.targets.map((t) => ({\n        img: t.document.texture.src,\n        actor: t.actor,\n        token: t.document,\n        uuid: t.document.uuid,\n      }));\n    }\n\n    if (!identified) {\n      metadata.item.identified = identified;\n      metadata.item.name = this.item._source.name || this.item.name;\n      metadata.item.description = itemChatData.identifiedDescription;\n      metadata.action.name = this.shared.action.name;\n      metadata.action.description = itemChatData.actionDescription;\n    }\n    this.shared.chatData.system = metadata;\n    this.shared.chatData[\"flags.core.canPopout\"] = true;\n  }\n\n  /**\n   * Enrich notes\n   *\n   * @param {Array<string>} notes - Notes\n   * @param {string} title - Notes section title\n   * @param {string} css - CSS selectors\n   * @returns {Promise<string>} - Enriched HTML as text\n   */\n  async enrichNotes(notes, title, css) {\n    if (notes.length === 0) return;\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes,\n      css,\n      header: game.i18n.localize(title),\n    });\n\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      relativeTo: this.actor,\n    };\n\n    return TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  /**\n   * Adds generic property labels to an attack's chat card.\n   *\n   * @todo Object format\n   * @returns {string[]} The resulting property labels.\n   */\n  addGenericPropertyLabels() {\n    const properties = [];\n\n    // Add actual cost\n    const cost = this.shared.totalChargeCost;\n    if (cost && !this.item.system.atWill) {\n      if (this.item.type === \"spell\" && this.item.useSpellPoints()) {\n        properties.push(`${game.i18n.localize(\"PF1.SpellPointsCost\")}: ${cost}`);\n      } else {\n        properties.push(`${game.i18n.localize(\"PF1.ChargeCost\")}: ${cost}`);\n      }\n    }\n\n    // Add conditions\n    const conditions = Object.entries(this.actor.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInAction)\n      .map((c) => c.name);\n\n    // Special case\n    // TODO: Move this configuration to conditions registry\n    if (this.actor.statuses.has(\"deaf\") && this.item.type === \"spell\") {\n      // TODO: Check if someone modified the conditions to show anyway?\n      conditions.push(pf1.registry.conditions.get(\"deaf\").name);\n    }\n\n    if (conditions.length) properties.push(...conditions);\n\n    // Nonlethal\n    if (this.action.nonlethal) properties.push(game.i18n.localize(\"PF1.Nonlethal\"));\n\n    // Splash\n    if (this.action.splash) properties.push(game.i18n.localize(\"PF1.Splash\"));\n\n    if (this.action.touch) properties.push(game.i18n.localize(\"PF1.TouchAttackShort\"));\n\n    // Add info for material\n    let materialKey = null;\n    let materialAddons = null;\n    const normalMaterialAction = this.action.material?.normal.value;\n    const normalMaterialItem = this.item.system.material?.normal.value;\n    const baseMaterialItem = this.item.system.material?.base?.value;\n    const addonMaterialAction = this.action.material?.addon;\n    const addonMaterialItem = this.item.system.material?.addon;\n\n    // Check the action data first, then the normal material, then the base material\n    if (normalMaterialAction && normalMaterialAction.length > 0) materialKey = normalMaterialAction;\n    else if (normalMaterialItem && normalMaterialItem.length > 0) materialKey = normalMaterialItem;\n    else materialKey = baseMaterialItem;\n\n    if (materialKey) {\n      properties.push(pf1.registry.materials.get(materialKey.toLowerCase())?.name ?? materialKey.capitalize());\n    }\n\n    // Check for addon materials; prefer action data, then item data\n    if (addonMaterialAction && addonMaterialAction.length > 0) materialAddons = addonMaterialAction;\n    else if (addonMaterialItem && addonMaterialItem.length > 0) materialAddons = addonMaterialItem;\n\n    if (materialAddons) {\n      const materialAddonNames = materialAddons\n        .map((addon) => {\n          if (!addon) return null;\n          const addonName = pf1.registry.materials.get(addon.toLowerCase())?.name ?? addon.capitalize();\n          return addonName;\n        })\n        .filter((addon) => !!addon);\n\n      if (materialAddonNames.length > 0) properties.push(...materialAddonNames);\n    }\n\n    // Add info for alignments\n    const actionAlignments = this.action.alignments;\n    const itemAlignments = this.item.system.alignments ?? {};\n    if (actionAlignments) {\n      for (const alignment of Object.keys(actionAlignments)) {\n        if (\n          actionAlignments[alignment] || // The action alignment is true OR\n          (actionAlignments[alignment] === null && // (The action alignment is indeterminate AND\n            itemAlignments[alignment])\n        ) {\n          // The item has the alignment)\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    } else {\n      // Honestly, this should never happen. An action should always have an alignment now.\n      for (const alignment of Object.keys(itemAlignments)) {\n        if (itemAlignments[alignment]) {\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    }\n\n    // Add info for Power Attack to melee, Deadly Aim to ranged attacks\n    if (this.shared.powerAttack) {\n      switch (this.action.actionType) {\n        case \"rwak\":\n        case \"twak\":\n          properties.push(game.i18n.localize(\"PF1.DeadlyAim\"));\n          break;\n        case \"mwak\":\n          properties.push(game.i18n.localize(\"PF1.PowerAttack\"));\n          break;\n      }\n    }\n\n    // Add info for Point-Blank shot\n    if (this.shared.pointBlankShot) properties.push(game.i18n.localize(\"PF1.PointBlankShot\"));\n\n    // Add info for Rapid Shot\n    if (this.shared.attacks.find((o) => o.id === \"rapid-shot\")) properties.push(game.i18n.localize(\"PF1.RapidShot\"));\n\n    if (this.shared.manyShot) properties.push(game.i18n.localize(\"PF1.Manyshot\"));\n\n    // Add Armor Check Penalty's application to attack rolls info\n    if (this.item.hasAttack && this.shared.rollData.attributes?.acp?.attackPenalty > 0)\n      properties.push(game.i18n.localize(\"PF1.ArmorCheckPenalty\"));\n\n    // Add conditional names to tags\n    for (const condId of this.shared.conditionals) {\n      const cond = this.shared.action.conditionals.get(condId);\n      properties.push(cond.name || game.i18n.localize(\"PF1.Undefined\"));\n    }\n\n    // Add Wound Thresholds info\n    if (this.shared.rollData.attributes?.woundThresholds?.level > 0)\n      properties.push(pf1.config.woundThresholdConditions[this.shared.rollData.attributes.woundThresholds.level]);\n\n    return properties;\n  }\n\n  /**\n   * Adds combat property labels to an attack's chat card.\n   *\n   * @todo Object format\n   * @returns {string[]} The resulting property labels.\n   */\n  addCombatPropertyLabels() {\n    const properties = [];\n\n    // Add round info\n    properties.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n    return properties;\n  }\n\n  /**\n   * Generates metadata for this attack for the chat card to store.\n   *\n   * @returns {object} The resulting metadata object.\n   */\n  generateChatMetadata() {\n    const metadata = {\n      actor: this.actor.uuid,\n      item: { id: this.item.id },\n      action: { id: this.action.id },\n      combat: undefined,\n      template: this.shared.template?.uuid ?? null,\n      rolls: {\n        attacks: [],\n      },\n      targets: this.shared.targets.map((t) => t.document.uuid),\n      config: {\n        critMult: this.shared.rollData.critMult,\n      },\n    };\n\n    // Mark as nonlethal\n    if (this.action.nonlethal) metadata.config.nonlethal = true;\n\n    // Cache effective CL and SL for this action\n    metadata.config.cl = this.shared.rollData.cl;\n    if (this.item.type === \"spell\") metadata.config.sl = this.shared.rollData.sl;\n\n    if (this.actor && game.combat?.combatants.some((c) => c.actor === this.actor)) {\n      metadata.combat = game.combat.id;\n    }\n\n    // Add attack rolls\n    for (let attackIndex = 0; attackIndex < this.shared.chatAttacks.length; attackIndex++) {\n      const chatAttack = this.shared.chatAttacks[attackIndex];\n      const attackRolls = { attack: null, damage: [], critConfirm: null, critDamage: [] };\n      // Add attack roll\n      if (chatAttack.attack) attackRolls.attack = chatAttack.attack.toJSON();\n      // Add damage rolls\n      if (chatAttack.damage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.damage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.damage.rolls[damageIndex];\n          attackRolls.damage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n      // Add critical confirmation roll\n      if (chatAttack.critConfirm) attackRolls.critConfirm = chatAttack.critConfirm.toJSON();\n      // Add critical damage rolls\n      if (chatAttack.critDamage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.critDamage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.critDamage.rolls[damageIndex];\n          attackRolls.critDamage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n\n      // Record used ammo ID and quantity\n      if (chatAttack.ammo?.id) {\n        attackRolls.ammo = {\n          id: chatAttack.ammo.id,\n          quantity: this.shared.action.ammo.cost,\n          misfire: chatAttack.ammo.misfire ?? false,\n        };\n      }\n\n      metadata.rolls.attacks[attackIndex] = attackRolls;\n    }\n\n    // Add miscellaneous metadata\n    if (this.shared.saveDC) metadata.save = { dc: this.shared.saveDC, type: this.shared.save };\n    if (this.item.type === \"spell\") metadata.spell = { cl: this.shared.rollData.cl, sl: this.shared.rollData.sl };\n\n    return metadata;\n  }\n\n  /**\n   * Executes the item's script calls.\n   *\n   * @param {\"use\"|\"postUse\"} [category=\"use\"] Script call category\n   */\n  async executeScriptCalls(category = \"use\") {\n    const shared = this.shared;\n\n    if (!(\"attackData\" in shared)) {\n      Object.defineProperty(shared, \"attackData\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"shared.attackData is deprecated in favor of directly accessing shared\",\n            {\n              since: \"PF1 v10\",\n              until: \"PF1 v12\",\n            }\n          );\n          return shared;\n        },\n      });\n    }\n\n    const rv = await this.item.executeScriptCalls(category, {}, shared);\n\n    if (category === \"use\") this.shared.scriptData = rv;\n  }\n\n  /**\n   * Posts the attack's chat card.\n   *\n   * @returns {Promise<ChatMessage | SharedActionData>}\n   */\n  async postMessage() {\n    this.shared.chatTemplate ||= \"systems/pf1/templates/chat/attack-roll.hbs\";\n\n    if (Hooks.call(\"pf1PreDisplayActionUse\", this) === false) return this.shared;\n\n    // Return early if no chat message is to be provided\n    if (!this.shared.chatMessage || this.shared.scriptData.hideChat) {\n      return this.shared;\n    }\n\n    // Show chat message\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      secrets: this.isOwner,\n      relativeTo: this.actor,\n    };\n\n    const content = await renderTemplate(this.shared.chatTemplate, this.shared.templateData);\n    this.shared.chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // TODO: Enrich only on render\n    const metadata = this.shared.chatData.system;\n    if (metadata.item?.description) {\n      metadata.item.description = await TextEditor.enrichHTML(metadata.item.description, enrichOptions);\n    }\n    if (metadata.action?.description) {\n      metadata.action.description = await TextEditor.enrichHTML(metadata.action.description, enrichOptions);\n    }\n\n    // Apply roll mode\n    this.shared.chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(this.shared.chatData, this.shared.chatData.rollMode);\n\n    const result = await ChatMessage.implementation.create(this.shared.chatData);\n\n    this.shared.message = result;\n\n    return result;\n  }\n\n  /**\n   * Collect valid targets.\n   */\n  async getTargets() {\n    // Get targets from template, and if no template is present, from explicitly targeted tokens list\n    /** @type {MeasuredTemplatePF|null} */\n    const template = this.shared.template?.object;\n    let targets = template ? await template.getTokensWithin() : null;\n    targets ??= Array.from(game.user.targets);\n    // Ignore defeated and secret tokens\n    this.shared.targets = targets.filter((t) => t.combatant?.isDefeated !== true);\n  }\n\n  /**\n   * Armor as DR defense DC determination.\n   *\n   * @remarks\n   * - Does not account for critical feats.\n   * - Does not account for size difference between target and attacker.\n   *\n   * @param {pf1.dice.D20RollPF} attack - Attack roll\n   * @returns {pf1.dice.RollPF} - Defense DC\n   */\n  getDefenseDC(attack) {\n    const parts = this._getDefenseDCParts(attack);\n    return RollPF.safeRollSync(parts.join(\" + \"));\n  }\n\n  /**\n   * @internal\n   * @param {pf1.dice.D20RollPF} attack - Attack roll\n   * @returns {Array<string>} - DC parts\n   */\n  _getDefenseDCParts(attack) {\n    const parts = [];\n\n    // Determine check\n    const check = attack.d20.total;\n    parts.push(`${check}[${game.i18n.localize(\"PF1.Rolls.Check.Label\")}]`);\n\n    // Locate used BAB (accounts for overrides)\n    const babIdent = game.i18n.localize(\"PF1.BAB\");\n    const bab = attack.terms.find((t) => t.flavor === babIdent)?.number ?? 0;\n    parts.push(`${Math.floor(bab / 2)}[${game.i18n.localize(\"PF1.HalfBAB\")}]`);\n\n    return parts;\n  }\n\n  async prepareChargeCost() {\n    const rollData = this.shared.rollData;\n\n    // Determine charge cost\n    const baseCostRoll = await this.shared.action.getChargeCost({ rollData });\n    const baseCost = baseCostRoll?.total || 0;\n\n    // Bonus cost, e.g. from a conditional modifier\n    const bonusCost = this.shared.rollData.chargeCostBonus ?? 0;\n\n    let cost = baseCost + bonusCost;\n\n    // Override cost\n    if (this.shared.cost !== null) cost = this.shared.cost;\n\n    // Save chargeCost as rollData entry for anything else\n    this.shared.rollData.chargeCost = cost;\n  }\n\n  /**\n   * Process everything\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.skipDialog=false] - Skip dialog\n   * @returns {Promise<ActionUse | SharedActionData | void>}\n   */\n  async process({ skipDialog = false } = {}) {\n    const shared = this.shared;\n\n    // Check requirements for item\n    let reqErr = await this.checkRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    await this.autoSelectAmmo();\n\n    // Get new roll data\n    this.getRollData();\n\n    // let modules modify the ActionUse before attacks are rolled\n    Hooks.callAll(\"pf1CreateActionUse\", this);\n\n    // Generate default attacks\n    shared.fullAttack = true;\n    await this.generateAttacks(true);\n\n    let form;\n    // Show attack dialog, if appropriate\n    if (!skipDialog) {\n      form = await this.createAttackDialog();\n      // Stop if result is not an object (i.e. when closed is clicked on the dialog)\n      if (!form) return;\n    }\n\n    // Save form data in case modules want to reference it later\n    // TODO: Remove this bad reference in favor of storing it in shared data\n    this.formData = form ?? {};\n    // Add reference to shared data\n    this.shared.formData = this.formData;\n\n    // Alter roll data\n    // TODO: Remove this unnecessary parameter\n    await this.alterRollData(this.formData);\n\n    // Filter out attacks without ammo usage (out of ammo)\n    if (shared.action.ammo.type && shared.action.ammo?.cost > 0) {\n      shared.attacks = shared.attacks.filter((o) => o.hasAmmo);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.AmmoDepleted\"));\n        return { err: pf1.actionUse.ERR_REQUIREMENT, code: pf1.actionUse.ERR_REQUIREMENT.INSUFFICIENT_AMMO };\n      }\n    }\n\n    // Limit attacks to 1 if not full rounding\n    if (!shared.fullAttack) shared.attacks = shared.attacks.slice(0, 1);\n    // Handle conditionals\n    await this.handleConditionals();\n\n    // Prepare charge cost\n    await this.prepareChargeCost();\n\n    // Filter out attacks without charge usage (out of charges)\n    if (shared.rollData.chargeCost != 0 && this.shared.action.uses?.perAttack) {\n      const cost = shared.rollData.chargeCost;\n      const charges = shared.item.charges;\n\n      shared.attacks.forEach((atk, index) => {\n        if (charges >= (index + 1) * cost) atk.chargeCost = cost;\n        else atk.chargeCost = null;\n      });\n\n      shared.attacks = shared.attacks.filter((o) => o.chargeCost !== null);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.ChargesDepleted\"));\n        return { err: pf1.actionUse.ERR_REQUIREMENT, code: pf1.actionUse.ERR_REQUIREMENT.INSUFFICIENT_CHARGES };\n      }\n    }\n\n    // Check attack requirements, post-dialog\n    reqErr = await this.checkAttackRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    // Prompt measure template\n    let measureResult;\n    if (shared.useMeasureTemplate && canvas.scene) {\n      measureResult = await this.promptMeasureTemplate();\n      if (measureResult === null) return; // Cancelled\n    }\n\n    await this.getTargets();\n\n    // Generate chat attacks - leave this just before `pf1PreActionuse` hook call\n    await this.generateChatAttacks();\n\n    // Add notes after all attack info is generated\n    await this.addEffectNotes();\n    await this.addFootnotes();\n\n    // Call itemUse hook and determine whether the item can be used based off that\n    if (Hooks.call(\"pf1PreActionUse\", this) === false) {\n      await measureResult?.delete();\n      return;\n    }\n\n    // Call script calls\n    await this.executeScriptCalls();\n    if (shared.scriptData?.reject) {\n      await measureResult?.delete();\n      return;\n    }\n\n    const premessage_promises = [];\n    // Handle Dice So Nice\n    premessage_promises.push(this.handleDiceSoNice());\n\n    // Subtract uses\n    const ammoCost = this.action.ammo.cost;\n    if (ammoCost != 0) premessage_promises.push(this.subtractAmmo(ammoCost));\n\n    let totalCost = shared.rollData?.chargeCost;\n    if (this.action.uses.perAttack) {\n      totalCost = this.shared.attacks.reduce((total, atk) => total + atk.chargeCost, 0);\n    }\n    if (totalCost != 0) {\n      shared.totalChargeCost = totalCost;\n      premessage_promises.push(this.item.addCharges(-totalCost));\n    }\n\n    if (shared.action.isSelfCharged)\n      premessage_promises.push(shared.action.update({ \"uses.self.value\": shared.action.uses.self.value - 1 }));\n\n    await Promise.all(premessage_promises);\n\n    // Update remaining ammo for chat message display\n    this.updateAmmoUsage();\n\n    // Retrieve message data\n    await this.getMessageData();\n\n    // Post message\n    let result = Promise.resolve(null);\n    if (shared.scriptData?.hideChat !== true) {\n      result = this.postMessage();\n    }\n\n    // Deselect targets\n    if (game.settings.get(\"pf1\", \"clearTargetsAfterAttack\") && game.user.targets.size) {\n      game.user.updateTokenTargets([]);\n      // Above does not communicate targets to other users, so..\n      game.user.broadcastActivity({ targets: [] });\n    }\n\n    // Wait for chat message to be created before continuing\n    await result;\n\n    // Call post-use script calls\n    await this.executeScriptCalls(\"postUse\");\n\n    Hooks.callAll(\"pf1PostActionUse\", this, this.shared.message ?? null);\n\n    return this;\n  }\n}\n\nexport class ActionUseAttack {\n  /** @type {string|null} */\n  type;\n\n  /** @type {string} */\n  label;\n\n  /** @type {string} */\n  attackBonus;\n\n  /** @type {boolean} */\n  abstract;\n\n  /** @type {AttackAmmo|null} */\n  ammo = null;\n\n  /** @type {number} */\n  chargeCost = null;\n\n  /** @type {ChatAttack} */\n  chatAttack = null;\n\n  /** @type {boolean} */\n  get hasAmmo() {\n    return !!this.ammo;\n  }\n\n  constructor(label, bonus = \"\", ammo = null, { abstract = false, type = null } = {}) {\n    this.label = label;\n    this.attackBonus = bonus;\n    this.ammo = ammo;\n    this.abstract = abstract ?? false;\n    this.type = type;\n  }\n}\n\n/**\n * @typedef {object} ItemAttack_Dialog_Result\n * @property {boolean} fullAttack - Whether it's a full attack (true) or a single attack (false)\n * @property {JQuery} html - The html containing user input and selections.\n */\n\n/**\n * @typedef {object} AttackAmmo\n * @property {string} id - Ammo item ID\n * @property {number} quantity - Quantity of ammo\n * @property {boolean} abundant - Is abundant?\n * @property {object} data - Ammo document data\n * @property {Item} document - Ammo document\n * @property {boolean} isDefault - Is this default ammo for the item?\n */\n","import { ActionUseAttack } from \"../action-use/action-use.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class AttackDialog extends Application {\n  /**\n   * @param {pf1.actionUse.ActionUse} actionUse\n   * @param {object} appOptions\n   */\n  constructor(actionUse, appOptions = {}) {\n    super(appOptions);\n\n    this.actionUse = actionUse;\n    this.object = actionUse.action;\n\n    const action = actionUse.action;\n    const item = actionUse.item;\n    const shared = actionUse.shared;\n    this.shared = shared;\n    this.attacks = this.shared.attacks;\n\n    if (item.actor) item.actor.apps[this.appId] = this;\n\n    this.useOptions = shared.useOptions ?? {};\n\n    this.rollData = shared.rollData;\n\n    this.initAmmoUsage();\n    this.initAttacks();\n\n    this.base = {\n      cl: this.rollData.cl ?? 0,\n      sl: this.rollData.sl ?? 0,\n    };\n\n    const isNaturalAttack = action.item.subType === \"natural\",\n      isPrimaryAttack = isNaturalAttack ? action.naturalAttack.primary !== false : true;\n\n    const useOptions = this.useOptions;\n\n    /** @type {Record<string,boolean>} */\n    this.flags = {\n      \"power-attack\": useOptions.powerAttack ?? false,\n      \"primary-attack\": useOptions.primaryAttack ?? isPrimaryAttack,\n      \"cl-check\": useOptions.clCheck ?? item?.system.clCheck === true,\n      \"measure-template\": useOptions.measureTemplate ?? true,\n      \"haste-attack\": useOptions.haste ?? false,\n      manyshot: useOptions.manyshot ?? false,\n      \"rapid-shot\": useOptions.rapidShot ?? false,\n      \"point-blank-shot\": useOptions.pointBlankShot ?? false,\n      flanking: useOptions.flanking ?? false,\n      highGround: useOptions.highGround ?? false,\n      charge: useOptions.charge ?? false,\n    };\n\n    let damageMult = this.damageMult;\n    if (useOptions.abilityMult != null) damageMult = useOptions.abilityMult;\n\n    /** @type {Record<string, string>} */\n    this.attributes = {\n      d20: this.rollData.d20 ?? \"\",\n      \"attack-bonus\": \"\",\n      \"damage-bonus\": \"\",\n      \"cl-offset\": \"0\",\n      \"sl-offset\": \"0\",\n      rollMode: shared.rollMode || game.settings.get(\"core\", \"rollMode\"),\n      \"damage-ability-multiplier\": damageMult,\n      held: useOptions.held || this.rollData.action?.held || this.rollData.item?.held || \"1h\",\n    };\n\n    this.conditionals = {};\n    for (const conditional of action.conditionals) {\n      this.conditionals[`conditionals.${conditional.id}`] = {\n        enabled: conditional.default === true,\n        conditional,\n      };\n    }\n\n    if (useOptions.haste) this._toggleExtraAttack(\"haste-attack\", true);\n    if (useOptions.manyshot) this._toggleExtraAttack(\"manyshot\", true);\n    if (useOptions.rapidShot) this._toggleExtraAttack(\"rapid-shot\", true);\n\n    // Callback for AttackDialog.show()\n    this.resolve = null;\n  }\n\n  /** @type {number|null} */\n  get damageMult() {\n    const rollData = this.rollData;\n\n    let damageMult = rollData.action?.ability?.damageMult;\n\n    const isNatural = this.item?.subType === \"natural\";\n    if (isNatural) {\n      damageMult ??= 1;\n      const isPrimaryAttack = this.flags[\"primary-attack\"];\n      if (!isPrimaryAttack) {\n        damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      }\n    }\n\n    return damageMult;\n  }\n\n  /** @type {pf1.components.ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  /**  @type {ItemPF|undefined} */\n  get item() {\n    return this.action.item;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item?.actor;\n  }\n\n  get title() {\n    const action = this.action,\n      item = action.item,\n      actor = action.actor;\n\n    if (actor) return `${action.name} (${item.name}) – ${actor.name}`;\n    return `${action.name} (${item.name})`;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n      classes: [\"pf1\", \"attack-dialog\"],\n      width: 440,\n      height: \"auto\",\n      closeOnSubmit: true,\n      sheetConfig: false,\n      submitOnChange: false,\n      submitOnClose: false,\n    };\n  }\n\n  getData() {\n    const action = this.action,\n      item = action.item;\n\n    const rollData = this.rollData;\n\n    // Sync available ammo\n    if (this.action.ammo.type) {\n      const allAmmo = this.actionUse.getAmmo();\n      // Add ammo that did not exist\n      for (const ammo of allAmmo) {\n        ammo.used = 0;\n        this.ammoUsage[ammo.id] ??= ammo;\n      }\n      // Remove now no longer existing ammo\n      const validAmmoChoices = new Set(allAmmo.map((ammo) => ammo.id));\n      for (const ammoId of Object.keys(this.ammoUsage)) {\n        if (validAmmoChoices.has(ammoId)) continue;\n\n        for (let i = 0; i < this.attacks.length; i++) {\n          const atk = this.attacks[i];\n          if (atk.ammo?.id === ammoId) this.setAttackAmmo(i);\n        }\n\n        delete this.ammoUsage[ammoId];\n      }\n    }\n\n    const context = {\n      data: rollData,\n      item,\n      action,\n      config: pf1.config,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n      hasAttack: action.hasAttack,\n      hasDamage: action.hasDamage,\n      hasDamageAbility: !!action.ability?.damage,\n      isNaturalAttack: item.system.subType === \"natural\",\n      isWeaponAttack: item.system.subType === \"weapon\",\n      isRanged: action.isRanged,\n      isThrown: this.action.actionType == \"twak\",\n      isMelee: !action.isRanged,\n      isMeleeWeaponAttackAction: action.actionType === \"mwak\",\n      isRangedWeaponAttackAction: action.isRanged && !action.isCombatManeuver,\n      isAttack: item.type === \"attack\",\n      isWeapon: item.type === \"weapon\",\n      isSpell: item.type === \"spell\",\n      isFeat: item.type === \"feat\",\n      isHealing: action.isHealing,\n      hasTemplate: action.hasTemplate,\n      attacks: this.attacks,\n      flags: this.flags,\n      attributes: this.attributes,\n      conditionals: this.conditionals,\n      usesAmmo: !!this.action.ammo.type,\n      ammo: this.ammoUsage,\n    };\n\n    context.isPureRanged = context.isRanged && !context.isThrown;\n\n    // Configure held related data\n    const canHold = !context.isPureRanged && (context.isAttack || context.isWeapon) && !context.isNaturalAttack;\n\n    const held = this.attributes.held || rollData.action.held || rollData.item.held || \"1h\";\n\n    context.held = {\n      inheritable: canHold,\n      configurable: canHold,\n      mult: pf1.config.abilityDamageHeldMultipliers[held] ?? 1,\n    };\n\n    return context;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Form changing\n    html.find(`.flags input[type=\"checkbox\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input.attribute`).on(\"change\", this._onChangeAttribute.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"concentration\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"cl-check\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"measure-template\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`select`).on(\"change\", this._onSelectChange.bind(this));\n    html.find(`.conditionals input[type=\"checkbox\"]`).on(\"change\", this._onToggleConditional.bind(this));\n\n    // Dropdown menu\n    html.find(\".ammo-select\").on(\"click\", this._onAmmoSelectClick.bind(this));\n    html.find(\".ammo-select .ammo-item .controls a\").on(\"click\", this._onAmmoControlClick.bind(this));\n    html.find(\".ammo-select .ammo-item\").on(\"click\", this._onAmmoClick.bind(this));\n    html.on(\"click\", this._unfocusElements.bind(this));\n\n    // Button hover\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerenter\", this._hideExtraAttacks.bind(this));\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerleave\", this._showExtraAttacks.bind(this));\n\n    // Button press\n    html.find(`button[name=\"attack_single\"]`).on(\"click\", (ev) => this.resolveAttack(ev, false));\n    html.find(`button[name=\"attack_full\"]`).on(\"click\", (ev) => this.resolveAttack(ev, true));\n  }\n\n  _onSelectChange(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.options[elem.selectedIndex].value;\n    this.render();\n  }\n\n  _hideExtraAttacks(event) {\n    const elems = this.element.find(\".attacks .attack\").filter((index, elem) => parseInt(elem.dataset.index) > 0);\n    elems.addClass(\"disabled\");\n  }\n\n  _showExtraAttacks(event) {\n    this.element.find(\".attacks .attack\").removeClass(\"disabled\");\n  }\n\n  /**\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.render=true] - Call render\n   * @param {Event} event\n   */\n  _onToggleFlag(event) {\n    if (event?.cancelable) event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.flags[elem.name] = elem.checked === true;\n\n    // Add or remove haste, rapid-shot or manyshot attack\n    switch (elem.name) {\n      case \"haste-attack\":\n      case \"rapid-shot\":\n      case \"manyshot\": {\n        this._toggleExtraAttack(elem.name, elem.checked);\n        break;\n      }\n      case \"primary-attack\":\n        // Update damage mult to match primary/secondary default\n        this.attributes[\"damage-ability-multiplier\"] = this.damageMult;\n        break;\n    }\n\n    this.render();\n  }\n\n  _toggleExtraAttack(type, enabled = true) {\n    if (enabled) {\n      const translationString = {\n        \"haste-attack\": \"PF1.Haste\",\n        \"rapid-shot\": \"PF1.RapidShot\",\n        manyshot: \"PF1.Manyshot\",\n      };\n\n      const types = new Set(Object.keys(translationString));\n\n      // Correlate manyshot with the first attack, add place the others after\n      // Final order should always result in manyshot -> rapishot -> haste with this setup\n      let place = 1;\n      switch (type) {\n        case \"rapid-shot\":\n          types.delete(\"haste-attack\"); // Rapid shot can be in front of haste\n        // eslint-disable-next-line no-fallthrough\n        case \"haste-attack\":\n          // Push place backwards with haste and rapidshot if other choices are present\n          while (types.has(this.attacks[place]?.type)) place++;\n          break;\n      }\n\n      const attack = new ActionUseAttack(game.i18n.localize(translationString[type]), \"\", null, {\n        abstract: true,\n        type,\n      });\n      attack.attackBonusTotal = 0;\n      this.attacks.splice(place, 0, attack);\n      this.setAttackAmmo(place, this.action.item.system.ammo?.default);\n    } else {\n      this.attacks.findSplice((o) => o.type === type);\n    }\n  }\n\n  _onToggleConditional(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.conditionals[elem.name].enabled = elem.checked === true;\n    this.render();\n  }\n\n  _onAmmoSelectClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const listElem = elem.querySelector(\"ul\");\n\n    // Filter to NOT act when clicking on the list child element\n    if (!event.target.closest(\"ul\")) {\n      // Set classes for CSS\n      listElem.classList.toggle(\"open\");\n      const isOpen = listElem.classList.contains(\"open\");\n      if (isOpen) elem.classList.add(\"focus\");\n      else elem.classList.remove(\"focus\");\n    }\n  }\n\n  _onAmmoClick(event) {\n    const elem = event.target;\n    // Don't do anything if this click was actually on its controls\n    if (elem.closest(\".controls\") && !elem.classList.contains(\"controls\")) return;\n\n    event.preventDefault();\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    const attackIndex = parseInt(elem.closest(\".attack\").dataset.index);\n\n    // Set ammo\n    this.setAttackAmmo(attackIndex, ammoId === \"null\" ? null : ammoId);\n    this.render();\n  }\n\n  async _onAmmoControlClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    switch (elem.dataset.type) {\n      case \"set-default\":\n        if (ammoId === \"null\") await this.action.item.update({ \"system.ammo.-=default\": null });\n        else await this.action.item.update({ \"system.ammo.default\": ammoId });\n\n        // Apply CSS class, since we can't do a render in here and keep the dropdown menu open\n        elem\n          .closest(\"ul\")\n          .querySelectorAll(\".ammo-item\")\n          .forEach((o) => o.classList.remove(\"default\"));\n        if (ammoId !== \"null\") elem.closest(\".ammo-item\").classList.add(\"default\");\n        break;\n      case \"set-all\":\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n        this.render();\n    }\n  }\n\n  _unfocusElements(event) {\n    // Close ammo select\n    if (this.element[0].querySelector(\".ammo-select\") != null && !event.target.closest(\".ammo-select\")) {\n      const elem = this.element[0].querySelector(\".ammo-select\");\n      elem.classList.remove(\"focus\");\n      elem.querySelector(\"ul\").classList.remove(\"open\");\n    }\n  }\n\n  _onChangeAttribute(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.value;\n\n    // Also change roll data, if appropriate\n    switch (elem.name) {\n      case \"cl-offset\":\n        this.rollData.cl = this.base.cl + parseInt(elem.value);\n        break;\n      case \"sl-offset\":\n        this.rollData.sl = this.base.sl + parseInt(elem.value);\n        break;\n      case \"damage-ability-multiplier\":\n        foundry.utils.setProperty(this.rollData, \"action.ability.damageMult\", elem.value);\n        break;\n      case \"held\":\n        foundry.utils.setProperty(this.rollData, \"action.held\", elem.value);\n        break;\n    }\n\n    this.render();\n  }\n\n  initAttacks() {\n    for (const atk of this.attacks) {\n      atk.attackBonusTotal =\n        RollPF.safeRollSync(atk.attackBonus, this.rollData, undefined, undefined, { minimize: true }).total ?? 0;\n    }\n\n    // Set ammo usage; this resets the attack ammo association\n    if (this.action.ammo.type) {\n      const defaultAmmoId = this.action.item.system.ammo?.default;\n      for (let a = 0; a < this.attacks.length; a++) {\n        const ammoId = a.ammo?.id ?? defaultAmmoId;\n        this.setAttackAmmo(a, ammoId);\n      }\n    }\n  }\n\n  // Initializes ammo usage, which helps avoid being able to overuse ammo\n  initAmmoUsage() {\n    // Init usage record\n    /** @type {Record<string,AttackAmmoUsage>} */\n    this.ammoUsage = this.actionUse.getAmmo().reduce((cur, ammoData) => {\n      ammoData.used = 0;\n      cur[ammoData.id] = ammoData;\n\n      return cur;\n    }, {});\n\n    const ammoCost = this.action.ammo.cost ?? 1;\n\n    // Init actual usage\n    for (const atk of this.attacks) {\n      if (atk.ammo) {\n        const ammoUsage = this.ammoUsage[atk.ammo.id];\n        if (ammoUsage.abundant) continue;\n        ammoUsage.used += ammoCost;\n      }\n    }\n  }\n\n  setAttackAmmo(attackIndex, ammoId = null) {\n    if (!this.action.ammo.type) return;\n\n    // Check if ammo exists\n    if (!this.ammoUsage[ammoId]) ammoId = null;\n\n    const ammoCost = this.action.ammo.cost ?? 1;\n\n    const atk = this.attacks[attackIndex];\n\n    const oldAbundant = this.action.actor?.items.get(atk.ammo?.id)?.system.abundant ?? false;\n    const abundant = this.action.actor?.items.get(ammoId)?.system.abundant ?? false;\n\n    // Remove old ammo usage\n    if (!oldAbundant && atk.ammo) this.ammoUsage[atk.ammo.id].used -= ammoCost;\n\n    // Don't allow overuse\n    if (ammoId && !abundant) {\n      const newUsage = this.ammoUsage[ammoId].used + ammoCost;\n      // TODO: Print warning about not enough ammo\n      if (newUsage > this.ammoUsage[ammoId].quantity) ammoId = null;\n    }\n\n    /// Set or clear selected ammo\n    atk.ammo = this.actionUse.getAmmo().find((o) => o.id === ammoId) ?? null;\n    if (!atk.ammo) return;\n\n    // Add to ammo usage tracker\n    if (!abundant) this.ammoUsage[ammoId].used += ammoCost;\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   * @param {boolean} fullAttack\n   */\n  resolveAttack(event, fullAttack = true) {\n    event.preventDefault();\n\n    const form = new FormDataExtended(this.element.find(\"form\")[0]).object;\n    form.fullAttack = fullAttack;\n\n    this.resolve(form);\n    this.close();\n  }\n\n  async close(options = {}) {\n    delete this.item?.actor?.apps[this.appId];\n\n    this.resolve(null);\n    return super.close(options);\n  }\n\n  /**\n   * @returns {Promise<object|null>} - Attack configuration object or null if rejected\n   */\n  show() {\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.render(true);\n    });\n  }\n}\n\n/** @typedef {import(\"../action-use/action-use.mjs\").AttackAmmo} AttackAmmo */\n\n/**\n * @typedef {object} AttackAmmoUsageData\n * @property {number} used - How much of this has been used\n */\n\n// Combine the above, can't have it all in single statement\n/**\n * @typedef {AttackAmmo & AttackAmmoUsageData} AttackAmmoUsage\n */\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Changelog Dialog\n */\nexport class ChangeLogWindow extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"changelog\",\n    tag: \"form\",\n    form: {\n      handler: ChangeLogWindow._updateObject,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"changelog\"],\n    window: {\n      icon: \"fa-solid fa-receipt\",\n      minimizable: true,\n      resizable: true,\n    },\n    position: {\n      width: 500,\n      height: 680,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/changelog.hbs\",\n    },\n  };\n\n  _cache;\n\n  /**\n   * @param {boolean} lastVersion - Display only latest version, legacy versions are to be omitted.\n   * @param {boolean} autoDisplay - Is the dialog being shown without prompting?\n   */\n  constructor(lastVersion = false, autoDisplay = false) {\n    super({}, {});\n\n    this.lastVersion = lastVersion;\n    this.autoDisplay = autoDisplay;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @override\n   * @returns {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Title\")} ~ ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _prepareContext() {\n    const context = {};\n\n    context.dontShowAgain = game.settings.get(\"pf1\", \"dontShowChangelog\");\n    context.autoDisplay = this.autoDisplay;\n    context.lastVersion = this.lastVersion;\n\n    if (!this._cache) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"systems/pf1/CHANGELOG.md\");\n\n      const promise = new Promise((resolve) => {\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            this._cache = this._processChangelog(xhr.response);\n          } else {\n            context.error = {\n              number: xhr.status,\n              message: xhr.statusText,\n              url: xhr.responseURL,\n            };\n          }\n          resolve();\n        };\n      });\n      xhr.send(null);\n\n      await promise;\n    }\n\n    context.changelog = this._cache;\n    context.link = game.system.changelog;\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {string} md\n   * @returns {string}\n   */\n  _processChangelog(md) {\n    const converter = new showdown.Converter();\n\n    const latestVersion = pf1.utils.SemanticVersion.fromString(game.system.version);\n    const latestMajor = latestVersion.major;\n    const latest = [];\n    const major = [];\n    const majorPatches = [];\n    const legacy = [];\n\n    let currentVersion = null;\n\n    const lines = md.split(/[\\n\\r]+/);\n\n    for (const line of lines) {\n      if (/^#\\s/.test(line)) continue; // Ignore H1\n\n      if (line.match(/##\\s+([0-9]+\\.[0-9]+(\\.[0-9]+)?)/)) {\n        currentVersion = pf1.utils.SemanticVersion.fromString(RegExp.$1);\n        if (currentVersion.major === latestMajor) {\n          majorPatches.push(currentVersion);\n        }\n      }\n\n      // Skip lines not associated with any version\n      if (!currentVersion) continue;\n      // Split other lines to appropriate pools\n      if (currentVersion.isSame(latestVersion)) latest.push(line);\n      else if (currentVersion.major === latestMajor) major.push(line);\n      else if (!this.lastVersion) legacy.push(line);\n    }\n\n    return {\n      version: latestVersion,\n      latest: {\n        content: converter.makeHtml(latest.join(\"\\n\")),\n      },\n      major: {\n        patches: majorPatches,\n        content: major.length ? converter.makeHtml(major.join(\"\\n\")) : null,\n      },\n      legacy: {\n        content: legacy.length ? converter.makeHtml(legacy.join(\"\\n\")) : null,\n      },\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Cancel distribution and close dialog\n   *\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @internal\n   * @this {ChangeLogWindow}\n   * @returns {Promise<void>}\n   */\n  static async _updateObject(event, form, formData) {\n    formData = formData.object;\n    if (formData.dontShowAgain != null) {\n      await game.settings.set(\"pf1\", \"dontShowChangelog\", formData.dontShowAgain);\n    }\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class DamageTypeSelector extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._updateObject,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"damage-type-selector\", \"standard-form\"],\n    window: {\n      title: \"PF1.DamageType\",\n      minimizable: true,\n      resizable: false,\n    },\n    position: {\n      width: 720,\n    },\n    actions: {\n      toggleDamageType: this._toggleDamageType,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/damage-type-selector.hbs\",\n      scrollable: [\".damage-type-categories\", \".damage-modifiers\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * @param {object} object - Parent object\n   * @param {string} path - Path to damage data in object\n   * @param {Set<string>} data - Damage types\n   * @param {object} options - Options\n   * @param {Function} options.updateCallback - Update callback\n   */\n  constructor(object, path, data = new Set(), options = {}) {\n    options.object = object;\n    options.path = path;\n    super(options);\n\n    // Prepare types\n    const customTypes = new Set();\n    const allTypes = data ? [...data] : [];\n    const standardTypes = new Set();\n\n    for (const type of allTypes) {\n      if (!type) continue;\n\n      const d = pf1.registry.damageTypes.get(type);\n      if (d) standardTypes.add(type);\n      else customTypes.add(type);\n    }\n\n    this.types = standardTypes;\n    this.customTypes = customTypes;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.id = `DamageTypeSelector-${options.object.uuid.replaceAll(\".\", \"-\")}-${options.path.replaceAll(\".\", \"_\")}`;\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  get categoryOrder() {\n    return [\"physical\", \"energy\", \"misc\"];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const types = pf1.registry.damageTypes\n      .filter((damageType) => !damageType.isModifier)\n      .map((dt) => ({ ...dt, id: dt.id, enabled: this.types.has(dt.id) }));\n\n    const sortOrder = this.categoryOrder;\n\n    return {\n      types: this.types,\n      customTypes: [...this.customTypes].join(\";\"), // HACK\n      modifiers: pf1.registry.damageTypes\n        .filter((o) => o.isModifier)\n        .map((dm) => ({ ...dm, id: dm.id, enabled: this.types.has(dm.id) })),\n      // Damage type categories\n      categories: types\n        .reduce((cur, o) => {\n          let categoryObj = cur.find((o2) => o2.key === o.category);\n          if (!categoryObj) {\n            categoryObj = { key: o.category, label: `PF1.DamageTypeCategory.${o.category}`, types: [] };\n            cur.push(categoryObj);\n          }\n          categoryObj.types.push(o);\n          return cur;\n        }, [])\n        .sort((a, b) => {\n          const idxA = sortOrder.indexOf(a.key);\n          const idxB = sortOrder.indexOf(b.key);\n          if (idxA === -1 && idxB >= 0) return 1;\n          if (idxB === -1 && idxA >= 0) return -1;\n          if (idxA > idxB) return 1;\n          if (idxA < idxB) return -1;\n          return 0;\n        }),\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {DamageTypeSelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    // Only handle custom types here\n    if (elem.name !== \"custom\") return;\n\n    const types = elem.value\n      .split(\";\")\n      .map((t) => t.trim())\n      .filter((t) => !!t);\n\n    this.customTypes = new Set(types);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  static _toggleDamageType(event) {\n    event.preventDefault();\n    const a = event.target.closest(\"[data-action]\");\n    const dt = a.dataset.id;\n\n    if (this.types.has(dt)) this.types.delete(dt);\n    else this.types.add(dt);\n\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  static async _updateObject(event, formData) {\n    const allTypes = [...this.types.union(this.customTypes)];\n    return this.options.updateCallback(allTypes);\n  }\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An abstract class for a document selector application.\n *\n * @abstract\n */\nexport class AbstractDocumentSelector extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * The currently selected document ID\n   */\n  selected;\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"document-selector\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.DocumentSelector.Title\",\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 350,\n    },\n    sheetConfig: false,\n    search: {\n      delay: 250,\n      value: \"\",\n      event: null,\n      compositioning: false,\n      effectiveSearch: \"\",\n    },\n    empty: \"\",\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/document-selector.hbs\",\n      scrollable: [\".document-section-wrapper\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    if (options?.title) {\n      foundry.utils.logCompatibilityWarning(\"AbstractDocumentSelector options title property is deprecated\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      options.window ??= {};\n      options.window.title = options.title;\n      delete options.title;\n    }\n\n    super(options);\n    this.selected = this.options.selected || \"\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  async _prepareContext() {\n    const sections = await this._getSections();\n\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n\n      if (!section.documents.length) {\n        sections.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (!this.options.empty) {\n        this.selected ||= section.documents[0]?.id;\n      }\n    }\n\n    return {\n      document: this.document,\n      selected: this.selected,\n      searchTerm: this.options.search.value,\n      showSectionHeaders: sections.length > 1,\n      sections,\n      empty: {\n        include: this.options.empty,\n        document: {\n          id: \"\",\n          name: game.i18n.localize(\"PF1.Application.DocumentSelector.None\"),\n          img: \"icons/svg/cancel.svg\",\n        },\n      },\n      buttons: [{ type: \"submit\", label: \"PF1.Select\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const searchInput = this.element.querySelector(\"input[type='search']\");\n    searchInput.addEventListener(\"input\", this._onSearch.bind(this));\n    searchInput.addEventListener(\"change\", this._onSearch.bind(this));\n    searchInput.addEventListener(\"compositionstart\", this._onSearchComposition.bind(this));\n    searchInput.addEventListener(\"compositionend\", this._onSearchComposition.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    const target = event.target;\n    if (target.matches(\"input[type='radio']\")) {\n      this.element.querySelector(\"li.selected\")?.classList.remove(\"selected\");\n      this.selected = target.value;\n      target.closest(\"li\").classList.add(\"selected\");\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle the beginning of a search composition event\n   *\n   * @param event\n   * @private\n   */\n  _onSearchComposition(event) {\n    this.options.search.compositioning = event.type === \"compositionstart\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle search input events\n   *\n   * @param event\n   * @private\n   */\n  _onSearch(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const searchTerm = event.target.value;\n    const changed = this.options.search.value !== searchTerm;\n\n    if (this.options.search.compositioning || changed) clearTimeout(this.options.search.event); // reset\n    if (this.options.search.compositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this.options.search.value = searchTerm;\n\n    if (event.type === \"input\") {\n      // Delay search\n      if (changed)\n        this.options.search.event = setTimeout(() => this._searchFilterCommit(event), this.options.search.delay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Kick off search\n   *\n   * @private\n   */\n  _searchFilterCommit() {\n    const searchTerm = this.options.search.value.toLowerCase();\n\n    // Skip if the search term is the same as the last one\n    if (this.options.search.effectiveSearch === searchTerm) return;\n    this.options.search.effectiveSearch = searchTerm;\n    this.render(true);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the list of sections to show in the selector. Categories are supposed\n   * to have their permissions correctly applied and display error messages, if they\n   * are not accessible.\n   *\n   * @abstract\n   * @private\n   * @returns {Promise<DocumentSelectorSection[]>}\n   */\n  async _getSections() {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Submit the form selection and resolve the stored promise, if provided\n   *\n   * @private\n   */\n  static _onSubmit() {\n    this._resolveResult();\n\n    this.close();\n  }\n\n  /**\n   * Handle promise resolution.\n   *\n   * @abstract\n   * @protected\n   */\n  _resolveResult() {\n    this.resolve?.(this.selected || null);\n  }\n\n  _onClose(options) {\n    super._onClose(options);\n\n    // Ensure promise is resolved.\n    this.resolve?.(null);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Render selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @returns {Promise<string|null>} - Document ID or null if cancelled.\n   */\n  static wait(options) {\n    return new Promise((resolve) => {\n      const app = new this(options);\n      app.resolve = resolve;\n      app.render({ force: true });\n    });\n  }\n}\n\n/**\n * @typedef {object} DocumentSelectorDocumentExtra\n * @property {string} [label] - The label of the property\n * @property {string} value - The value of the property\n */\n\n/**\n * @typedef {object} DocumentSelectorDocument\n * @property {string} id - The document ID\n * @property {string} name - The document name\n * @property {string} img - The document image\n * @property {boolean} isOwner - Is the current user the owner of the document\n * @property {DocumentSelectorDocumentExtra[]} extras - Additional document properties\n */\n\n/**\n * @typedef {object} DocumentSelectorSection\n * @property {string} id - The section ID\n * @property {string} label - The section label\n * @property {DocumentSelectorDocument[]} documents - The documents in the section\n */\n","import { AbstractDocumentSelector } from \"@app/abstract-document-selector.mjs\";\n\n/**\n * A specialized form application for selecting an Item from a list of available choices\n */\nexport class ItemSelector extends AbstractDocumentSelector {\n  static DEFAULT_OPTIONS = {\n    actor: undefined,\n    items: undefined,\n    filterFunc: undefined,\n    selected: null,\n    window: {\n      title: \"PF1.Application.ItemSelector.Title\",\n    },\n    empty: true,\n  };\n\n  /* -------------------------------------------- */\n\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.items ||= options.actor?.items || [];\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  async _getSections() {\n    let itemList = this.options.filterFunc\n      ? this.options.items.filter(this.options.filterFunc)\n      : [...this.options.items];\n\n    if (this.options.search.value) {\n      itemList = itemList.filter((item) => item.name.toLowerCase().includes(this.options.search.value.toLowerCase()));\n    }\n\n    itemList.sort((a, b) => a.name.localeCompare(b.name));\n\n    itemList = itemList.map((item) => {\n      return {\n        id: item.id,\n        name: item.name,\n        img: item.img,\n        isOwner: item.actor?.isOwner || false,\n        extras: [\n          {\n            label: \"PF1.Application.ItemSelector.Quantity\",\n            value: item.system.quantity,\n          },\n        ],\n      };\n    });\n\n    return [\n      {\n        id: \"items\",\n        label: \"PF1.Application.ItemSelector.Items\",\n        documents: itemList,\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _resolveResult() {\n    let result = this.selected;\n\n    if (this.selected && this.options.document) {\n      result = this.options.items.find((i) => i.id === result);\n    }\n\n    this.resolve?.(result || null);\n  }\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application for displaying system documentation.\n */\nexport class HelpBrowserPF extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"pf1-help-browser\",\n    classes: [\"pf1-v2\", \"help-browser\"],\n    window: {\n      title: \"PF1.Help.Label\",\n      icon: \"fa-solid fa-book\",\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 620,\n      height: 600,\n    },\n    actions: {\n      forward: HelpBrowserPF._forwardInHistory,\n      back: HelpBrowserPF._backInHistory,\n      home: HelpBrowserPF._home,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/help-browser.hbs\",\n    },\n  };\n\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _backwardHistory = [];\n\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _forwardHistory = [];\n\n  /**\n   * The currently shown entry.\n   *\n   * @type {HistoryEntry}\n   * @private\n   */\n  _currentPage = { url: \"Help/Home\" };\n\n  /**\n   * The Markdown converter for this application.\n   *\n   * @type {showdown.Converter}\n   * @private\n   */\n  #converter;\n\n  /** @inheritdoc */\n  constructor(options = {}) {\n    super(options);\n\n    this.#converter = new showdown.Converter({\n      extensions: [HelpBrowserPF.defaultExtensions],\n      noHeaderId: false,\n      ghCompatibleHeaderId: true,\n      prefixHeaderId: \"pf1-help-browser-\",\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The URL of the page currently displayed\n   *\n   * @type {string}\n   */\n  get currentUrl() {\n    return this._currentPage.url;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      hasHistoryBack: this._backwardHistory.length > 0,\n      hasHistoryForward: this._forwardHistory.length > 0,\n      // Get markdown string from localization, and parse it\n      pageContent: this.#converter.makeHtml(game.i18n.localize(`PF1.${this.currentUrl}`)),\n      url: this.currentUrl.slugify({ strict: true }),\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Opens a specific page in the help browser.\n   *\n   * @param {string} url - The help URL to open\n   */\n  openUrl(url) {\n    // Remove leading `/`, which are okay in the wiki, but not present in localization files\n    if (url.startsWith(\"/\")) url = url.slice(1);\n    let header;\n    // Extract header from URL\n    [url, header] = url.split(\"#\");\n    if (this.currentUrl && url !== this.currentUrl) {\n      // Add new page to history\n      this._backwardHistory.push(this.getCurrentHistoryObject());\n      this._forwardHistory.splice(0, this._forwardHistory.length);\n    }\n    this._currentPage = { url };\n    this.render({ header, force: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    await super._render(force, options);\n    const contentElement = this.element.querySelector(\".content\");\n\n    if (this._currentPage.scrollTop) {\n      // Dirty timeout to wait for loading of images with unknown height\n      setTimeout(() => {\n        contentElement.scrollTop = this._currentPage.scrollTop;\n      }, 0);\n    } else if (options.header) {\n      const headerElement = document.getElementById(`pf1-help-browser-${options.header}`);\n      if (headerElement) {\n        setTimeout(() => {\n          headerElement.scrollIntoView({ block: \"start\" });\n        }, 0);\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Returns a {@link HistoryEntry} containing a snapshot of the currently rendered state.\n   *\n   * @returns {HistoryEntry} The current state\n   */\n  getCurrentHistoryObject() {\n    const elem = this.element?.querySelector(\".content\");\n    const scrollTop = elem?.scrollTop ?? 0;\n    return {\n      url: this.currentUrl,\n      scrollTop,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /** Go back one page in history. */\n  static _backInHistory() {\n    if (!this._backwardHistory.length) return;\n    this._forwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._backwardHistory.pop();\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  /** Go forward one page in history. */\n  static _forwardInHistory() {\n    if (!this._forwardHistory.length) return;\n    this._backwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._forwardHistory.pop();\n    this.render();\n  }\n\n  /* -------------------------------------------- */\n\n  static _home() {\n    this.openUrl(\"Help/Home\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Remove href attributes to avoid actual browser page changes\n    const links = this.element.querySelectorAll(\"a[href]\");\n    for (const l of links) {\n      const href = l.getAttribute(\"href\");\n      if (!href.startsWith(\"Help\")) {\n        l.addEventListener(\"contextmenu\", (event) => {\n          event.stopImmediatePropagation();\n        });\n        continue;\n      }\n      l.removeAttribute(\"href\");\n      // Store target in dataset\n      l.dataset.url = href;\n\n      l.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        this.openUrl(href);\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Extensions for the Markdown converter used by the help browser.\n   *\n   * @type {showdown.ShowdownExtension[]}\n   */\n  static get defaultExtensions() {\n    return [\n      // Replace image paths from the wiki with localized paths available in the current Foundry context\n      {\n        type: \"output\",\n        regex: /<img.*?src=\"(.+?)\".*?>/g,\n        replace: function (match, src, _offset, _string) {\n          const foundrySrc = game.i18n.localize(`PF1.${src.startsWith(\"/\") ? src.slice(1) : src}`);\n          return match.replace(src, foundry.utils.getRoute(`systems/pf1/${foundrySrc}`));\n        },\n      },\n    ];\n  }\n}\n\n/**\n * The singleton instance of the {@link HelpBrowserPF} available at runtime.\n */\nexport const helpBrowser = new HelpBrowserPF();\n\n/**\n * @typedef {object} HistoryEntry\n * @property {string} url - URL of this history entry\n * @property {number} [scrollTop] - Scroll position of this history entry\n */\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ScriptEditor extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: ScriptEditor._updateObject,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"script-editor\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 640,\n      height: 560,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/script-editor.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options = {}) {\n    super(options);\n\n    this.command = options.command || \"\";\n    this.name = options.name || null;\n\n    this.parent = options.parent;\n    this.script = options.script;\n\n    this._promises = {\n      submit: [],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get the window title\n   *\n   * @returns {string}\n   */\n  get title() {\n    return this.name\n      ? this.parent\n        ? `${this.parent.name}: ${this.name}`\n        : this.name\n      : (this.parent?.name ?? game.i18n.localize(\"PF1.Unknown\"));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {string}\n   */\n  get id() {\n    return `script-call-${this.parent.uuid.replaceAll(\".\", \"-\")}-id-${this.script}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  get isEditable() {\n    const item = this.parent;\n    let editable = this.options.editable && item.isOwner;\n    if (item.pack && game.packs.get(item.pack)?.locked) editable = false;\n    return editable;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      command: this.command || \"\",\n      name: this.name,\n      buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   *\n   * @returns {Promise<unknown>}\n   */\n  awaitResult() {\n    let callback;\n    const promise = new Promise((resolve) => {\n      callback = resolve;\n    });\n    this._promises.submit.push({ callback, promise, resolved: false });\n    return promise;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Open help browser\n    this.element.querySelector(\"a.help-browser[data-url]\").addEventListener(\"click\", this._openHelpBrowser.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Open the help browser to the specified URL.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the object with the new change data from the form.\n   *\n   * @this {ScriptEditor}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   * @private\n   */\n  static _updateObject(event, form, formData) {\n    formData = formData.object;\n\n    this.command = formData[\"command\"];\n    this.name = formData[\"name\"] || null;\n\n    const result = {\n      command: this.command,\n      name: this.name,\n    };\n\n    this.resolvePromises(\"submit\", result);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve all promises of the given type with the given result.\n   *\n   * @param type\n   * @param result\n   */\n  resolvePromises(type, result) {\n    for (const p of this._promises[type]) {\n      if (!p.resolved) {\n        p.callback(result);\n        p.resolved = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Close the application and resolve any pending submit promises.\n   *\n   * @param args\n   * @returns {Promise<void>}\n   */\n  async close(...args) {\n    super.close(...args);\n\n    this.resolvePromises(\"submit\", null);\n  }\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * An application that allows a user to configure an actors senses.\n *\n * @param {ActorPF} actor     The Actor instance for which to configure senses\n */\nexport class SensesSelector extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSave,\n      submitOnChange: false,\n      closeOnSubmit: true,\n    },\n    classes: [\"pf1-v2\", \"senses-selector\", \"standard-form\"],\n    window: {\n      icon: \"fa-icon fa-eye\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 400,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/senses-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  /**\n   * Returns which keys to convert in distance or weight\n   *\n   * @todo Make this a set, senses don't do different types of units\n   */\n  static get convertKeys() {\n    return {\n      dv: \"distance\",\n      ts: \"distance\",\n      bse: \"distance\",\n      bs: \"distance\",\n      sc: \"distance\",\n      tr: \"distance\",\n      ls: \"distance\",\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId) {\n    const editable = this.isEditable;\n\n    switch (partId) {\n      case \"form\": {\n        const actor = this.document;\n\n        const senses = actor.toObject().system.traits?.senses ?? {};\n        for (const [key, type] of Object.entries(this.constructor.convertKeys)) {\n          const value = senses[key];\n          if (type === \"distance\" && value.value > 0) {\n            senses[key].value = pf1.utils.convertDistance(value.value)[0];\n          }\n        }\n\n        const isMetric = pf1.utils.getDistanceSystem() !== \"imperial\";\n\n        return {\n          editable,\n          cssClass: editable ? \"\" : \"locked\",\n          actor: this.actor,\n          noSystemVision:\n            !game.settings.get(\"pf1\", \"systemVision\") ||\n            (actor.token?.getFlag(\"pf1\", \"customVisionRules\") ??\n              actor.prototypeToken?.getFlag(\"pf1\", \"customVisionRules\")) ||\n            false,\n          senses,\n          isMetric,\n          gridUnits: isMetric ? game.i18n.localize(\"PF1.Distance.mShort\") : game.i18n.localize(\"PF1.Distance.ftShort\"),\n        };\n      }\n      case \"footer\": {\n        if (!editable) return {};\n        return {\n          buttons: [{ type: \"submit\", label: \"PF1.Save\", icon: \"fa-regular fa-floppy-disk\" }],\n        };\n      }\n    }\n  }\n\n  /** @override  */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,button)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Alias the document property to actor\n   *\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the vision configuration window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Senses\")}: ${this.document.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Save the new vision details for the actor.\n   *\n   * @internal\n   * @this {ActorRestDialog}\n   * @param {SubmitEvent} event                The originating form submission event\n   * @param {HTMLFormElement} form             The form element that was submitted\n   * @param {FormDataExtended} formData        Processed data for the submitted form\n   * @param {object} formData.object           The parsed form data object\n   * @returns {Promise<void>}\n   */\n  static async _onSave(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n    const senses = formData.system.traits.senses;\n\n    // Convert data back\n    Object.entries(this.constructor.convertKeys).forEach(([key, type]) => {\n      const value = senses[key];\n      if (value.value > 0 && type === \"distance\") {\n        senses[key].value = pf1.utils.convertDistanceBack(value.value)[0];\n      }\n    });\n\n    // Delete undefined or disabled senses\n    // But only for linked actor since otherwise you can not override them to be disabled\n    if (!this.document.isToken) {\n      for (const [key, value] of Object.entries(senses)) {\n        if (!value) {\n          delete senses[key];\n          senses[`-=${key}`] = null;\n        }\n      }\n    }\n\n    this.document.update({ \"system.traits.senses\": senses });\n  }\n}\n","export class SkillEditor extends DocumentSheet {\n  constructor(actor, skillId, subSkillId, options = {}) {\n    super(actor, options);\n    this.skillId = skillId;\n    this.subSkillId = subSkillId;\n\n    this._callbacks = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 380,\n      template: \"systems/pf1/templates/apps/skill-editor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"*\" }],\n      classes: [...options.classes, \"pf1\", \"skill-editor\"],\n      sheetConfig: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    };\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.EditSkill\")}: ${this.skillName} – ${this.actor.name}`;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /** @type {boolean} */\n  get isSubSkill() {\n    return !!this.subSkillId;\n  }\n\n  /** @type {boolean} */\n  get isStaticSkill() {\n    return pf1.config.skills[this.skillId] != null && !this.isSubSkill;\n  }\n\n  /** @type {object} */\n  get skill() {\n    if (this.isSubSkill) return this.actor.system.skills[this.skillId]?.subSkills[this.subSkillId];\n    return this.actor.system.skills[this.skillId];\n  }\n\n  /** @type {string} */\n  get skillName() {\n    return this.isStaticSkill ? pf1.config.skills[this.skillId] : this.skill.name;\n  }\n\n  /** @type {string} */\n  get skillTag() {\n    if (this.isStaticSkill) return this.skillId;\n    return this.isSubSkill ? this.subSkillId : this.skillId;\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    // Configuration\n    data.config = pf1.config;\n\n    // Skill data\n    data.skill = foundry.utils.mergeObject(\n      this.skill,\n      {\n        skillId: this.skillId,\n        subSkillId: this.subSkillId,\n        isSubSkill: this.isSubSkill,\n        name: this.skillName,\n        static: this.isStaticSkill,\n        tag: this.skillTag,\n      },\n      { inplace: false }\n    );\n\n    // Actor data\n    data.actorData = this.actor.toObject();\n\n    // Referenced documents\n    try {\n      const document = await fromUuid(data.skill.journal);\n      data.journal = document.toObject();\n      data.journal.uuid = data.skill.journal;\n      data.journal.documentType = document instanceof JournalEntryPage ? \"JournalEntryPage\" : \"JournalEntry\";\n    } catch {\n      data.journal = null;\n    }\n\n    return data;\n  }\n\n  addCallback(fn) {\n    this._callbacks.push(fn);\n  }\n\n  async _updateObject(event, formData) {\n    event.preventDefault();\n\n    // Setup base update data\n    const updateData = { system: { skills: {} } };\n    const skillCoreUpdateData = updateData.system.skills;\n\n    formData = foundry.utils.expandObject(formData);\n    // Forcibly slugify provided tag to ensure it is not invalid (e.g. contain periods)\n    const tag = pf1.utils.createTag(formData.tag, { allowUpperCase: true, camelCase: false });\n    const newData = formData.skill;\n\n    // Track old IDs for rename related data deletion\n    const oldSubSkillId = this.subSkillId,\n      oldSkillId = this.skillId;\n\n    // Preserve some data\n    if (newData.journal === undefined) newData.journal ??= this.skill.journal;\n    if (newData.custom === undefined) newData.custom ??= this.skill.custom;\n\n    if (!this.isStaticSkill) {\n      newData.background ??= this.skill.background;\n    }\n\n    // Basic sanity check\n    if (!this.isStaticSkill && !tag) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.EmptySkillTag\"));\n    }\n\n    const subSkillId = this.isSubSkill ? tag : null;\n    const skillId = !this.isSubSkill ? tag : this.skillId;\n\n    // Detect skill ID conflicts\n    const tagChanged = this.isSubSkill ? tag !== this.subSkillId : tag !== this.skillId;\n    if (tagChanged) {\n      const skillsData = this.isSubSkill ? this.actor.system.skills[skillId].subSkills : this.actor.system.skills;\n      if (tag in skillsData) {\n        const msgOpts = { tag: this.isSubSkill ? `${this.skillId}.${tag}` : tag };\n        return void ui.notifications.error(game.i18n.format(\"PF1.Error.SkillTagAlreadyExists\", msgOpts));\n      }\n    }\n\n    // Change application's id by tag\n    if (tag) {\n      if (this.isSubSkill) this.subSkillId = tag;\n      else this.skillId = tag;\n    }\n\n    if (this.isSubSkill) {\n      skillCoreUpdateData[skillId] = { subSkills: { [subSkillId]: newData } };\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[skillId].subSkills[`-=${oldSubSkillId}`] = null;\n    } else {\n      skillCoreUpdateData[skillId] = newData;\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[`-=${oldSkillId}`] = null;\n    }\n\n    return this.actor.update(updateData);\n  }\n\n  async close(...args) {\n    await super.close(...args);\n\n    this._callbacks.forEach((fn) => fn());\n  }\n\n  /**\n   * @override\n   */\n  _canDragDrop() {\n    // Allow non-GM to drop links as appropriate.\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    // Retrieve the dropped Journal Entry Page\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"JournalEntryPage\" && data.type !== \"JournalEntry\") return;\n    const document = await CONFIG[data.type].documentClass.implementation.fromDropData(data);\n    if (!document) return;\n\n    this._updateObject(event, this._getSubmitData({ \"skill.journal\": document.uuid }));\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Open compendium page\n    html.find(\".compendium-page\").on(\"click\", this._openCompendiumEntry.bind(this));\n    html.find(\".compendium-controls a\").on(\"click\", this._onCompendiumControls.bind(this));\n\n    // Submit\n    html.find(`button[type=\"submit\"]`).on(\"click\", (event) => {\n      event.preventDefault();\n      const valid = this.element[0].querySelector(\"form\").reportValidity();\n      if (valid) this.close({ submit: true });\n    });\n  }\n\n  async _openCompendiumEntry(event) {\n    event.preventDefault();\n    const elem = event.currentTarget.closest(\".compendium-entry\");\n\n    pf1.utils.openJournal(elem.dataset.compendiumEntry);\n  }\n\n  async _onCompendiumControls(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    if (elem.classList.contains(\"delete\")) {\n      return this._updateObject(event, this._getSubmitData({ \"skill.journal\": null }));\n    }\n  }\n}\n","export class ContentSourceEditor extends DocumentSheet {\n  get title() {\n    const label = game.i18n.format(\"PF1.ContentSource.Title\", { name: this.document.name });\n    const actor = this.document.actor;\n    if (actor) return label + ` – ${actor.name}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/content-source-editor.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      tabs: [\n        {\n          contentSelector: \"section.content\",\n          navSelector: \"nav.tabs\",\n          group: \"sources\",\n        },\n      ],\n      dragDrop: [{ dragSelector: \"nav.tabs .source\", dropSelector: null }],\n      width: 540,\n      height: \"auto\",\n      resizable: true,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      classes: [...options.classes, \"pf1\", \"content-source-editor\"],\n    };\n  }\n\n  /**\n   * @internal\n   * @override\n   * @returns {object}\n   */\n  getData() {\n    let canAdd = true;\n\n    let sources = this.document.system.sources ?? [];\n\n    // Prevent adding new sources if there's already an empty source\n    if (sources.some((src) => Object.keys(src).length === 0)) canAdd = false;\n\n    // Shallow clone sources for extra data\n    sources = sources.map((src) => {\n      const registry = pf1.registry.sources.get(src.id);\n      return {\n        ...src,\n        registry,\n      };\n    });\n\n    // Add default entry for editing when no entries exist\n    if (sources.length === 0) {\n      sources.push({ stub: true });\n      canAdd = false;\n    }\n\n    return {\n      editable: this.isEditable,\n      sources,\n      registry: pf1.registry.sources,\n      uuid: this.document.uuid,\n      canAdd,\n    };\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onAction(event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.classList.contains(\"disabled\")) return;\n\n    switch (el.dataset.action) {\n      case \"add\": {\n        this.form.disabled = true;\n        const sources = this.document.system.sources ?? [];\n        await this.document.update({ \"system.sources\": [...sources, {}] });\n        // Activate the newly created source tab\n        this.activateTab(`source-${sources.length}`);\n        break;\n      }\n      case \"delete\": {\n        const idx = Number(el.dataset.index);\n        if (Number.isFinite(idx) && idx >= 0) {\n          const src = this.document.system.sources[idx];\n          if (!src) return void this.render();\n          const name =\n            src.title || pf1.registry.sources.get(src.id)?.name || game.i18n.localize(\"PF1.ContentSource.NewEntry\");\n\n          const confirm = await foundry.applications.api.DialogV2.confirm({\n            window: { title: game.i18n.format(\"PF1.ContentSource.DelTitle\", { entry: name }) },\n            content: game.i18n.format(\"PF1.ContentSource.DelEntryDesc\", { entry: name }),\n            rejectClose: false,\n            modal: true, // Wait for user confirm\n          });\n\n          if (confirm !== true) return;\n\n          this.form.disabled = true;\n          const updated = await this.document.update({\n            \"system.sources\": this.document.system.sources.filter((_, sidx) => sidx !== idx),\n          });\n          if (!updated) this.render();\n        }\n        break;\n      }\n      default:\n        console.warn(\"Unrecognized action:\", el.dataset.action, el);\n        break;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragStart(selector) {\n    if (this.document.inContainer) return false;\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragDrop(selector) {\n    if (this.document.inContainer) return false;\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n\n    const index = Number(el.dataset.index);\n    const src = this.document.system.sources?.[index];\n\n    if (!src) return false;\n\n    // Set drag data\n    const dragData = {\n      type: \"pf1ContentSourceEntry\",\n      uuid: this.document.uuid,\n      index,\n      data: {\n        ...src,\n      },\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    const dropData = TextEditor.getDragEventData(event);\n\n    switch (dropData.type) {\n      case \"pf1ContentSourceEntry\":\n        this._onDropContentSource(event, dropData);\n        break;\n    }\n  }\n\n  /**\n   * Handle content source drop\n   *\n   * @remarks\n   * - Does not work correctly when dealing with\n   * @internal\n   * @param {DragEvent} event\n   * @param {object} dropData\n   */\n  async _onDropContentSource(event, dropData) {\n    let el = event.target;\n    if (el.dataset.index === undefined) el = el.closest(\".source[data-index]\");\n    let dropIndex = Number(el?.dataset.index);\n\n    this.form.disabled = true;\n\n    const src = dropData.data;\n    const origin = fromUuidSync(dropData.uuid);\n    if (!origin) return;\n\n    // Sort\n    if (origin === this.document) {\n      if (!Number.isFinite(dropIndex) || dropIndex < 0) return;\n      if (dropIndex === dropData.index) return;\n      const sources = this.document.toObject().system.sources ?? [];\n      const [moved] = sources.splice(dropData.index, 1);\n      sources.splice(dropIndex, 0, moved);\n      this.document.update({ \"system.sources\": sources });\n    }\n    // Copy\n    else {\n      const sources = this.document.toObject().system.sources ?? [];\n\n      // Disallow same ID source copy\n      if (src.id && sources.some((osrc) => osrc.id === src.id)) return; // TODO: Add error notification?\n\n      // If dropped in odd location, add as last\n      if (!Number.isFinite(dropIndex)) dropIndex = sources.length;\n      sources.splice(dropIndex, 0, src);\n      this.document.update({ \"system.sources\": sources });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form\n      .querySelectorAll(\"header .control\")\n      .forEach((el) => el.addEventListener(\"click\", this._onAction.bind(this)));\n  }\n\n  /**\n   * Open editor application for defined document.\n   *\n   * @param {Actor|Item} document Item or Actor reference\n   * @returns {ContentSourceEditor} Reference to opened application.\n   */\n  static open(document) {\n    const app =\n      Object.values(ui.windows).find((app) => app instanceof this && app.object === document) ?? new this(document);\n    app.render(true, { focus: true });\n    return app;\n  }\n\n  _updateObject(event, updateData) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    updateData.system.sources = Object.values(updateData.system.sources);\n\n    const sources = updateData.system.sources;\n    for (const source of sources) {\n      // Remove empty data\n      let empty = true;\n      for (const [key, value] of Object.entries(source)) {\n        if (value === null || value === \"\") {\n          delete source[key];\n        } else empty = false;\n      }\n\n      const registry = pf1.registry.sources.get(source.id);\n\n      // Empty data that is auto-filled from registry\n      if (registry) {\n        delete source.title;\n        delete source.publisher;\n      }\n\n      // Mark as empty for followup removal\n      if (empty) source.empty = true;\n    }\n\n    updateData.system.sources = updateData.system.sources.filter((s) => s.empty !== true);\n\n    return this.document.update(updateData);\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n// Add Vision Sharing sheet to ActorDirectory context options\nfunction addVisionSharingContextMenu(html, entries) {\n  entries.push({\n    name: \"PF1.Application.VisionSharing.Label\",\n    icon: '<i class=\"fa-solid fa-eye\"></i>',\n    condition: () => game.user.isGM,\n    callback: (li) => {\n      if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n      const actorId = li.dataset.entryId ?? li.dataset.documentId; // documentId is used by v12 and older\n      game.actors.get(actorId).visionSharingSheet.render(true, {\n        position: {\n          // Positioning copied from Foundry's ownership dialog\n          top: Math.min(li.offsetTop, window.innerHeight - 370),\n          left: window.innerWidth - 720,\n        },\n      });\n    },\n  });\n}\n\nHooks.on(\"getActorDirectoryEntryContext\", addVisionSharingContextMenu); // v12\nHooks.on(\"getActorContextOptions\", addVisionSharingContextMenu); // v13\n\nexport class VisionSharingSheet extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"vision-sharing\", \"standard-form\"],\n    window: {\n      minimizable: false,\n    },\n    position: {\n      width: 400,\n      height: \"auto\",\n    },\n    form: {\n      handler: this._onSubmit,\n      closeOnSubmit: true,\n      submitOnChange: false,\n    },\n    actions: {\n      reset: this._onReset,\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/vision-sharing.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.VisionSharing.Label\") + `: ${this.actor.name}`;\n    if (this.actor.token) title += \"[\" + game.i18n.localize(\"Token\") + \"]\";\n    return title;\n  }\n\n  /**\n   * @internal\n   * @param {*} v\n   * @returns {boolean|null}\n   */\n  _getUniformValue(v) {\n    if (v === \"true\" || v === \"yes\" || v === true) return true;\n    if (v === \"false\" || v === \"no\" || v === false) return false;\n    return null;\n  }\n\n  async _prepareContext() {\n    const config = this._config ?? this.actor.getFlag(\"pf1\", \"visionSharing\");\n    this._config = null;\n\n    const context = {\n      fields: {\n        default: new foundry.data.fields.StringField({\n          choices: { true: \"PF1.Yes\", false: \"PF1.No\" },\n          label: \"PF1.Default\",\n        }),\n        toggle: new foundry.data.fields.StringField({\n          choices: { true: \"PF1.Yes\", false: \"PF1.No\" },\n        }),\n      },\n      default: this._getUniformValue(config?.default) ?? false,\n      users: game.users.players.reduce((rv, user) => {\n        rv[user.id] = {\n          user,\n          level: String(this._getUniformValue(config?.users?.[user.id]?.level ?? config?.users?.[user.id] ?? null)),\n        };\n        return rv;\n      }, {}),\n    };\n\n    // Footer buttons\n    context.buttons = [\n      { type: \"reset\", label: \"PF1.Reset\", icon: \"fa-solid fa-arrow-rotate-left\", action: \"reset\" },\n      { type: \"submit\", label: \"PF1.Save\", icon: \"fa-solid fa-floppy-disk\" },\n    ];\n\n    return context;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.document;\n  }\n\n  /**\n   * @this {VisionSharingSheet}\n   * @param {Event} event\n   * @param {HTMLFormElement} form\n   * @param {FormDataExtended} formData\n   */\n  static async _onSubmit(event, form, formData) {\n    formData = foundry.utils.expandObject(formData.object);\n\n    formData.users ??= {};\n\n    // Clear users that are using default\n    for (const [userId, value] of Object.entries(formData.users)) {\n      const enabled = this._getUniformValue(value);\n      if (enabled) formData.users[userId] = true;\n      else {\n        formData.users[`-=${userId}`] = null;\n        delete formData.users[userId];\n      }\n    }\n\n    formData.default = this._getUniformValue(formData.default);\n\n    // Remove old users that no longer exist\n    const oldUsers = this.actor.getFlag(\"pf1\", \"visionSharing\")?.users;\n    if (oldUsers) {\n      for (const userId of Object.keys(oldUsers)) {\n        if (!game.users.get(userId)) {\n          formData.users[`-=${userId}`] = null;\n        }\n      }\n    }\n\n    // Delete users object entirely if it doesn't exist\n    const userUpdateKeys = Object.keys(formData.users);\n    if (userUpdateKeys.length === 0 || userUpdateKeys.every((k) => k.startsWith(\"-=\"))) {\n      delete formData.users;\n      formData[\"-=users\"] = null;\n    }\n\n    // Save if either default is true or have any user overrides\n    if (formData.default || formData.users) {\n      await this.actor.setFlag(\"pf1\", \"visionSharing\", formData);\n      console.debug(\"PF1 | Vision Sharing saved for\", this.actor.name);\n    }\n    // Otherwise clear the saved data\n    else {\n      await this.actor.unsetFlag(\"pf1\", \"visionSharing\");\n      console.debug(\"PF1 | Vision Sharing reset for\", this.actor.name);\n    }\n  }\n\n  /**\n   * @this {VisionSharingSheet}\n   * @param {PointerEvent} _event - Triggering event\n   * @param {HTMLElement} _html - Button\n   */\n  static async _onReset(_event, _html) {\n    // Record config replacement\n    this._config = {\n      default: false,\n      users: {},\n    };\n\n    this.render();\n  }\n}\n","import { NoAutocomplete } from \"./mixins/no-autocomplete.mjs\";\nimport { DragDropApplicationMixin } from \"@app/mixins/drag-drop.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ExperienceDistributor extends DragDropApplicationMixin(\n  HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2))\n) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"experience-distributor\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.XPDistributor.Title\",\n      minimizable: true,\n      resizable: true,\n    },\n    actions: {\n      split: this._doSplitReward,\n      full: this._doFullReward,\n    },\n    dragDrop: [{ dragSelector: null, dropSelector: \"form\" }],\n    position: {\n      width: 450,\n      height: 690,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/experience-distributor.hbs\",\n      scrollable: [\".selectors\"],\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  /**\n   * Bonus XP granted\n   *\n   * @type {number}\n   */\n  _bonusXP = 0;\n\n  /**\n   * Special actor data array\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  _actors = [];\n\n  constructor(options) {\n    if (Array.isArray(options)) {\n      foundry.utils.logCompatibilityWarning(\n        \"ExperienceDistributor constructor first parameter is no longer directly actor array. Please provide options object with actors property instead.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { actors: options };\n    }\n\n    super(options);\n\n    const actors = options.actors ?? [];\n    this._actors = actors.map((actor) => this.constructor.getActorData(actor)).filter((o) => !!o);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @internal\n   */\n  _preparePartContext(partId, context) {\n    switch (partId) {\n      case \"footer\":\n        context.buttons = [\n          {\n            action: \"split\",\n            label: \"PF1.Application.XPDistributor.SplitEvenly\",\n            type: \"button\", // non-default\n            icon: \"fa-solid fa-people-arrows\",\n          },\n          {\n            action: \"full\",\n            label: \"PF1.Application.XPDistributor.GiveToAll\",\n            type: \"submit\", // default\n            icon: \"fa-solid fa-star\",\n          },\n        ];\n        break;\n      case \"form\":\n        // Add combatants\n        context.actors = {\n          characters: this.characters,\n          npcs: this.npcs,\n        };\n        // Add labels\n        context.xp = {\n          total: this.totalExperience.toLocaleString(),\n          split: this.splitExperience.toLocaleString(),\n        };\n        context.bonusXP = this._bonusXP;\n        break;\n    }\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get PC actors\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  get characters() {\n    return this._actors.filter((o) => !o.isNPC);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Get NPC actors\n   *\n   * @type {ExperienceDistributorActor[]}\n   */\n  get npcs() {\n    return this._actors.filter((o) => o.isNPC);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle Drop Event\n   *\n   * @param {DragEvent} event - The originating DragEvent\n   * @protected\n   * @override\n   */\n  async _onDrop(event) {\n    event.preventDefault();\n    const data = TextEditor.getDragEventData(event);\n\n    if (data.type !== \"Actor\") return;\n\n    // Add actor\n    const actor = await pf1.documents.actor.ActorPF.fromDropData(data);\n\n    // Prevent duplicate characters (not NPCs)\n    if (actor.type !== \"character\" || this._actors.find((o) => o.actor === actor) == null) {\n      // Add actor to list\n      const actorData = this.constructor.getActorData(actor);\n      actorData.selected = true;\n      this._actors.push(actorData);\n\n      this.render({ parts: [\"form\"] });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @param {ApplicationFormConfiguration} formConfig   The configuration of the form being changed\n   * @param {Event} event                               The triggering event\n   * @returns {void}\n   */\n  _onChangeForm(formConfig, event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.matches(\"input[type=checkbox]\")) {\n      const actorID = el.dataset.id;\n      const actor = this._actors.find((o) => o.id === actorID);\n      if (!actor) return;\n      actor.selected = el.checked;\n    }\n\n    if (el.matches(\"input[name=bonusXP]\")) {\n      this._bonusXP = parseInt(el.value);\n      if (isNaN(this._bonusXP)) this._bonusXP = 0;\n    }\n\n    this.render({ parts: [\"form\"] });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split reward for each\n   *\n   * @param {Event} event\n   * @returns\n   */\n  static _doSplitReward(event) {\n    event.preventDefault();\n    return this._giveExperience(true);\n  }\n\n  /**\n   * Full reward for each\n   *\n   * @internal\n   * @param {Event} event\n   * @returns\n   */\n  static _doFullReward(event) {\n    event.preventDefault();\n    return this._giveExperience(false);\n  }\n\n  /**\n   * Distributes experience to all PC actors\n   *\n   * @internal\n   * @this {ExperienceDistributor} - XP distributor instance rather than the class.\n   * @param {boolean} splitEvenly - Should XP be split evenly?\n   * @returns {Promise<void>}\n   */\n  async _giveExperience(splitEvenly = false) {\n    const total = this.totalExperience;\n    const split = this.splitExperience;\n    const value = splitEvenly ? split : total;\n    const characters = this.characters.filter((o) => o.selected);\n\n    if (characters.length == 0) {\n      return void ui.notifications.error(\"PF1.Application.XPDistributor.Warnings.NoRecipients\", { localize: true });\n    }\n\n    if (!(value > 0)) {\n      return void ui.notifications.error(\"PF1.Application.XPDistributor.Warnings.NoReward\", { localize: true });\n    }\n\n    if (splitEvenly)\n      console.debug(\"PF1 | XP Reward |\", total, \"split evenly as\", split, \"to\", characters.length, \"characters\");\n    else console.debug(\"PF1 | XP Reward |\", total, \"to all\");\n\n    for (const actorData of characters) {\n      const result = { value };\n      Hooks.callAll(\"pf1GainXp\", actorData.actor, result);\n      actorData.value = Math.floor(result.value);\n    }\n\n    const updates = characters\n      .filter((o) => o.value > 0 && Number.isSafeInteger(o.value))\n      .map((o) => ({\n        _id: o.actor.id,\n        \"system.details.xp.value\": o.actor.system.details.xp.value + o.value,\n      }));\n\n    this.close();\n\n    await Actor.implementation.updateDocuments(updates);\n\n    ui.notifications.info(game.i18n.format(\"PF1.Application.XPDistributor.Result\", { xp: value }), { console: false });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Total experience the encounter is worth, including regular XP reward and bonus XP.\n   *\n   * @returns {number} - Total value\n   */\n  get totalExperience() {\n    const npcs = this.npcs.filter((o) => o.selected);\n    return npcs.reduce((cur, o) => cur + o.xp, this._bonusXP);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Split experience, as split across all characters.\n   *\n   * @returns {number} - Reward value\n   */\n  get splitExperience() {\n    const characters = this.characters.filter((o) => o.selected);\n    if (characters.length === 0) return 0;\n    const xp = this.totalExperience;\n    return Math.floor(xp / characters.length);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Actor} actor\n   * @returns {ExperienceDistributorActor}\n   */\n  static getActorData(actor) {\n    if (!(actor instanceof Actor)) return null;\n\n    const xp = pf1.utils.CR.getXP(actor.getCR?.() ?? 0);\n\n    return {\n      id: foundry.utils.randomID(16),\n      isNPC: actor.type !== \"character\",\n      actor,\n      selected: this._shouldActorBeSelected(actor),\n      xp,\n      xpLabel: xp.toLocaleString(),\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the actor be selected by default.\n   *\n   * @param {Actor} actor\n   * @returns {boolean}\n   */\n  static _shouldActorBeSelected(actor) {\n    const isPC = actor.type === \"character\";\n    if (isPC) return true;\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const healthConfig = hpConfig.getActorConfig(actor);\n    const useWoundsAndVigor = healthConfig.rules.useWoundsAndVigor ?? false;\n\n    return useWoundsAndVigor ? actor.system.attributes?.wounds?.value <= 0 : actor.system.attributes?.hp?.value < 0;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Open XP distributor dialog based on passed combat instance.\n   *\n   * @param {Combat} combat - Combat instance\n   * @returns {ExperienceDistributor} - Application instance\n   */\n  static fromCombat(combat) {\n    const app = new this({ actors: combat.combatants.map((c) => c.actor) });\n\n    if (app.characters.length > 0) {\n      app.render({ force: true });\n    } else {\n      app.close();\n    }\n\n    return app;\n  }\n}\n\n/**\n * @typedef {object} ExperienceDistributorActor\n * @property {string} id - Internal reference ID\n * @property {ActorPF} actor - Actor instance\n * @property {boolean} isNPC - Is this an NPC?\n * @property {boolean} selected - Is the actor selected\n * @property {number} xp\n * @property {string} xpLabel\n */\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\nimport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\n\nconst { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Change Editor\n *\n * @since PF1 v10\n */\nexport class ChangeEditor extends HandlebarsApplicationMixin(NoAutocomplete(DocumentSheetV2)) {\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"change-editor\", \"standard-form\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      width: 460,\n    },\n    actions: {\n      copyUuid: { handler: this.#onCopyUuid, buttons: [0, 2] },\n    },\n    sheetConfig: false,\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/change-editor.hbs\",\n    },\n  };\n\n  /** @type {ItemChange} */\n  change;\n\n  /**\n   * @internal\n   * @param options\n   */\n  constructor(options) {\n    super(options);\n    this.change = options.change;\n  }\n\n  /**\n   * Override to fix DocumentSheet ignoring get id\n   *\n   * @override\n   * @param {object} options - App options\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.uniqueId = this.getID(options); // HACK: Document Sheet ignores the id getter\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {ActorPF}\n   */\n  get actor() {\n    return this.item.actor;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {ItemPF}\n   */\n  get item() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @type {string}\n   */\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.ChangeEditor.Label\");\n    title += \": \" + this.item.name;\n    if (this.actor) title += \" – \" + this.actor.name;\n    return title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   * @type {string}\n   */\n  get id() {\n    return this.getID();\n  }\n\n  /**\n   * HACK: To deal with AppV2 and DocumentSheetV2 behaviour\n   *\n   * @internal\n   * @param {object} options\n   * @returns {string}\n   */\n  getID(options) {\n    options ??= this.options;\n    return \"change-editor-\" + options.change.uuid.replaceAll(\".\", \"-\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    const change = this.change,\n      actor = this.actor,\n      item = this.item;\n\n    const buffTargets = pf1.utils.internal.getBuffTargets(\"buffs\", { actor, item });\n    const target = buffTargets[change.target];\n\n    const editable = this.isEditable;\n\n    const defaultPriority = change.priority == 0,\n      earlyPriority = change.priority > 0,\n      latePriority = change.priority < 0;\n\n    return {\n      editable,\n      cssClass: editable ? \"\" : \"locked\",\n      config: pf1.config,\n      actor,\n      item,\n      change,\n      // Which kind of priority does this have\n      priority: {\n        early: earlyPriority,\n        late: latePriority,\n        normal: defaultPriority,\n      },\n      // Alternative values\n      values: {\n        priority: {\n          early: earlyPriority ? change.priority : defaultPriority ? 1 : -change.priority,\n          late: latePriority ? change.priority : defaultPriority ? -1 : -change.priority,\n        },\n      },\n      isAdd: change.operator === \"add\",\n      isSet: change.operator === \"set\",\n      isValid: !!target,\n      isCustom: [\"skill\", \"cl\", \"sl\", \"concn\"].includes(change.target?.split(\".\")?.[0]),\n      isValidType: !!pf1.config.bonusTypes[change.type],\n      isValidOp: [\"add\", \"set\"].includes(change.operator),\n      isSimple: change.isSimple,\n      isDeferred: change.isDeferred,\n      label: target?.label || change.target,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onChangeTargetControl(event) {\n    event.preventDefault();\n\n    if (!this.isEditable) return;\n\n    // Prepare categories and changes to display\n    const categories = pf1.utils.internal.getBuffTargetDictionary(\"buffs\", { actor: this.item.actor, item: this.item });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    let part1 = this.change?.target?.split(\".\")[0];\n    if (part1 === \"concn\") part1 = \"concentration\"; // HACK: Fixes spellbook concentration pointing wrong\n    const category = pf1.config.buffTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { window: { title: \"PF1.Application.ChangeTargetSelector.Title\" }, classes: [\"change-target-selector\"] },\n      categories,\n      (key) => {\n        if (key) {\n          this.change.update({ target: key });\n        }\n      },\n      { category, item: this.change?.target }\n    );\n    w.render(true);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Show the help browser\n   *\n   * @internal\n   * @param {Event} event\n   */\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula);\n      await roll.evaluate({ allowInteractive: false });\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    if (el.classList.contains(\"simple\")) {\n      if (!roll.isDeterministic || formula.includes(\"@\")) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeSimple\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeSimple\"));\n      }\n    }\n    // Deterministic formulas must be deterministic\n    else if (el.classList.contains(\"deterministic\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if this Change is in its declared parent.\n   *\n   * @type {boolean}\n   */\n  get inParent() {\n    return !!this.document.changes.get(this.change.id);\n  }\n\n  /**\n   * HACK: Override to force close the dialog when the Change is deleted\n   *\n   * @override\n   * @param {object} options - Options\n   * @param {object} _options - Legacy options\n   */\n  async render(options, _options) {\n    // Despite _options being deprecated, it is the only place for render context\n    if (_options?.renderContext === \"updateItem\") {\n      // Close instead of rendering if the Change no longer exists, ignoring anything else\n      if (!this.inParent) return this.close();\n    }\n    return super.render(options, _options);\n  }\n\n  /**\n   * Attach event listeners to the rendered application form.\n   *\n   * @param {ApplicationRenderContext} context      Prepared context data\n   * @param {RenderOptions} options                 Provided render options\n   * @protected\n   */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    // Modify changes\n    this.element\n      .querySelector(\".target .change-target\")\n      .addEventListener(\"click\", this._onChangeTargetControl.bind(this));\n\n    // Open help browser\n    this.element.querySelector(\"a.help-browser[data-url]\").addEventListener(\"click\", this._openHelpBrowser.bind(this));\n\n    // Add warning about formulas\n    this.element.querySelectorAll(\"input.formula\").forEach(async (el) => this._validateFormula(el));\n\n    this.element.reportValidity();\n\n    // Disable form if not editable\n    if (!this.isEditable) {\n      for (const el of this.element.querySelectorAll(\".window-content :is(input,select)\")) {\n        el.disabled = true;\n      }\n    }\n  }\n\n  /**\n   * Override document ID/UUID handling and redirect them to the Change\n   *\n   * @internal\n   * @override\n   * @param {PointerEvent} event - Triggering event\n   * @this {ChangeEditor}\n   */\n  static #onCopyUuid(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.detail > 1) return; // Ignore repeated clicks\n    const id = event.button === 2 ? this.change.id : this.change.uuid;\n    const type = event.button === 2 ? \"id\" : \"uuid\";\n    const label = game.i18n.localize(\"PF1.Change\");\n    game.clipboard.copyPlainText(id);\n    ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type, id }));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {object} options - Application options\n   * @param {ItemChange} options.change - Change to modify\n   * @param {object} oldOptions - Deprecated application options\n   * @returns {Promise<void|ChangeEditor>} - Promise that resolves when the app is closed. Returns application instance if no new instance was created.\n   */\n  static async wait(options, oldOptions = {}) {\n    if (options instanceof pf1.components.ItemChange) {\n      foundry.utils.logCompatibilityWarning(\n        \"ChangeEditor.wait() first parameter as change instance is deprecated. Please include it in app options instead.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      oldOptions.change = options;\n      options = oldOptions;\n    }\n\n    const old = Object.values(foundry.applications.instances).find(\n      (app) => app instanceof this && app.change === options.change\n    );\n\n    if (old) {\n      old.render(true);\n      old.bringToFront();\n      return old;\n    }\n\n    return new Promise((resolve) => {\n      options.document = options.change.parent;\n      const app = new this(options);\n      app.resolve = resolve;\n      app.render(true);\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the object with the new change data from the form.\n   *\n   * @this {ChangeEditor}\n   * @param {SubmitEvent} event                   The originating form submission event\n   * @param {HTMLFormElement} form                The form element that was submitted\n   * @param {FormDataExtended} formData           Processed data for the submitted form\n   * @returns {Promise<void>}\n   * @private\n   */\n  static _onSubmit(event, form, formData) {\n    formData = formData.object;\n    const updateData = foundry.utils.expandObject(formData).change;\n    this.change.update(updateData);\n  }\n}\n","export class ItemDirectoryPF extends CONFIG.ui.items {\n  /**\n   * v12 and prior\n   *\n   * Enrich default options for detecting identified/unidentified name changes\n   *\n   * @override\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.renderUpdateKeys.push(\"system.unidentified.name\", \"system.identified\");\n    return options;\n  }\n\n  // v13\n  static DEFAULT_OPTIONS = {\n    renderUpdateKeys: [\"system.unidentified.name\", \"system.identified\"],\n  };\n}\n","const { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class Troubleshooter extends HandlebarsApplicationMixin(ApplicationV2) {\n  static DEFAULT_OPTIONS = {\n    id: \"pf1-troubleshooter\",\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"troubleshooter\"],\n    window: {\n      title: \"PF1.Troubleshooter.Title\",\n      icon: \"fa-solid fa-screwdriver-wrench\",\n      minimizable: false,\n      resizable: false,\n    },\n    position: {\n      width: 460,\n    },\n    actions: {\n      migrate: this._runMigration,\n      help: this._openHelp,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/troubleshooter.hbs\",\n    },\n  };\n\n  // Are packs to be unlocked?\n  unlock = false;\n\n  // Are already migrated documents to be reprocessed?\n  reprocess = false;\n\n  // Migration state\n  migrating = { world: false, modules: false };\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _prepareContext() {\n    return {\n      isGM: game.user.isGM,\n      unlockPacks: this.unlock,\n      reprocess: this.reprocess,\n      migrating: this.migrating,\n      links: {\n        help: `<a data-action='help'>${game.i18n.localize(\"PF1.Troubleshooter.Steps.HelpLink\")}</a>`,\n        report: `<a href=\"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues\">${game.i18n.localize(\n          \"PF1.Troubleshooter.Steps.ReportLinkText\"\n        )}</a>`,\n        foundry: {\n          kb: `<a href=\"https://foundryvtt.com/kb/\">${game.i18n.localize(\"PF1.Troubleshooter.Steps.FoundryLink\")}</a>`,\n          discord: `<a href=\"https://discord.gg/foundryvtt\">Foundry VTT</a>`,\n          channel: \"#pf1\",\n        },\n        faq: \"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/wikis/FAQs\",\n        helpmodule: `<a href=\"https://foundryvtt.com/packages/find-the-culprit\">Find the Culprit</a>`,\n      },\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {Event} event - Triggering event\n   * @param {Element} button - Source button\n   */\n  static async _runMigration(event, button) {\n    const unlock = this.unlock ?? false;\n    const fast = !this.reprocess;\n\n    /** @type {Element} */\n    if (button.disabled) return;\n\n    button.classList.remove(\"finished\");\n    button.disabled = true;\n    button.classList.add(\"active\");\n\n    const target = button.dataset.target;\n    const top = button.closest(\".window-content\").getBoundingClientRect().top + 20;\n\n    switch (target) {\n      case \"world\":\n        this.migrating.world = true;\n        await pf1.migrations.migrateWorld({ unlock, fast, server: !fast, dialog: { top } });\n        this.migrating.world = false;\n        break;\n\n      case \"modules\":\n        this.migrating.modules = true;\n        await pf1.migrations.migrateModules({ unlock, fast, server: !fast, dialog: { top } });\n        this.migrating.modules = false;\n        break;\n\n      default:\n        throw new Error(`Unrecognized migration target: \"${target}\"`);\n    }\n\n    this.element?.querySelector(\".form-body\").classList.remove(\"migrating\");\n    button.disabled = false;\n    button.classList.remove(\"active\");\n    button.classList.add(\"finished\");\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {Event} _event - Triggering event\n   */\n  static _openHelp(_event) {\n    pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n  }\n  /* -------------------------------------------- */\n\n  /**\n   * The event handler for changes to form input elements\n   *\n   * @internal\n   * @override\n   * @param {ApplicationFormConfiguration} formConfig - The configuration of the form being changed\n   * @param {Event} event - The triggering event\n   */\n  _onChangeForm(formConfig, event) {\n    const target = event.target;\n\n    switch (target.name) {\n      case \"unlock\":\n        this.unlock = target.checked;\n        break;\n      case \"reprocess\":\n        this.reprocess = target.checked;\n        break;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    const migrationButtons = this.element.querySelectorAll(\"button[data-action='migrate']\");\n\n    // React to external migration to minimal degree\n    if (pf1.migrations.isMigrating) {\n      this.migrating.world = true;\n      this.migrating.modules = true;\n      for (const button of migrationButtons) {\n        button.disabled = true;\n        button.classList.add(\"active\");\n      }\n\n      Hooks.once(\"pf1MigrationFinished\", () => {\n        for (const button of migrationButtons) {\n          button.disabled = false;\n          this.migrating.world = false;\n          this.migrating.modules = false;\n        }\n      });\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  static open() {\n    new Troubleshooter().render(true);\n  }\n}\n","import { AbstractDocumentSelector } from \"@app/abstract-document-selector.mjs\";\n\n/**\n * A specialized form application for selecting an Actor from a list of available choices\n */\nexport class ActorSelector extends AbstractDocumentSelector {\n  static DEFAULT_OPTIONS = {\n    actors: undefined,\n    ownership: undefined,\n    selected: null,\n    window: {\n      title: \"PF1.Application.ActorSelector.Title\",\n      icon: \"fa-solid fa-people-group\",\n    },\n  };\n\n  /* -------------------------------------------- */\n\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.ownership ||= CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED;\n    options.actors ||= [...game.actors];\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  async _getSections() {\n    let actorList = this.options.filterFunc ? this.options.actors.filter(this.filterFunc) : [...this.options.actors];\n\n    actorList = actorList.filter((actor) => actor.testUserPermission(game.user, this.options.ownership));\n\n    if (this.options.search.value) {\n      actorList = actorList.filter((actor) =>\n        actor.name.toLowerCase().includes(this.options.search.value.toLowerCase())\n      );\n    }\n\n    actorList.sort((a, b) => a.name.localeCompare(b.name));\n\n    actorList = actorList.map((actor) => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.img,\n        isOwner: actor.isOwner,\n        extras: [\n          {\n            label: \"PF1.Application.ActorSelector.Owner\",\n            value: [...game.users]\n              .filter((user) => actor.testUserPermission(user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER))\n              .map((user) =>\n                user.id === game.user.id ? game.i18n.localize(\"PF1.Application.ActorSelector.You\") : user.name\n              )\n              .join(\", \"),\n          },\n        ],\n      };\n    });\n\n    return [\n      {\n        id: \"owned\",\n        label: \"PF1.Application.ActorSelector.OwnedActors\",\n        documents: actorList.filter((actor) => actor.isOwner),\n      },\n      {\n        id: \"unowned\",\n        label: \"PF1.Application.ActorSelector.UnownedActors\",\n        documents: actorList.filter((actor) => !actor.isOwner),\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _resolveResult() {\n    let result = this.selected;\n\n    if (this.selected && this.options.document) {\n      result = this.options.actors.find((i) => i.id === result);\n    }\n\n    this.resolve?.(result || null);\n  }\n}\n","/**\n * Stack splitting dialog\n *\n * @example\n * ```js\n * const result = await pf1.applications.SplitStack.wait({ title: \"My Stuff\", initial: 50, total: 100 });\n * if (!result) throw new Error(\"Fsck!\");\n * const [keep,split] = result;\n * console.log(`I keep ${keep} and you get ${split}`);\n * ```\n */\nexport class SplitStack extends foundry.applications.api.DialogV2 {\n  /**\n   * Wait for user interaction to finish.\n   *\n   * @param {object} options - Options\n   * @param {string} [options.title] - Dialog title\n   * @param {number} options.initial - Initial value\n   * @param {number} options.total - Total value to split.\n   * @param {number} [options.step] - Value stepping.\n   * @param {string[]} [options.css] - Optional CSS selectors to add to the dialog.\n   * @param {object} dialogOptions - Additional options to pass to DialogV2\n   * @returns {Promise<number[]|null>} - Number tuple, to keep and to split values. Null if cancelled.\n   */\n  static async wait({ title, initial = 1, step = 1, total, css = [] } = {}, dialogOptions = {}) {\n    // Can't split\n    if (total <= 1) return null;\n    // Only one answer\n    if (total == 2) return [1, 1];\n\n    step ||= 1;\n    initial = Math.clamp(initial || 0, 1, total);\n    const max = total - 1;\n\n    const content = await renderTemplate(\"systems/pf1/templates/apps/split-stack.hbs\", {\n      initial,\n      keep: total - initial,\n      max,\n    });\n\n    const options = {\n      window: { title },\n      content,\n      classes: [\"pf1-v2\", \"split-stack\", ...css],\n      buttons: [\n        {\n          icon: \"fa-solid fa-people-arrows\",\n          label: game.i18n.localize(\"PF1.Split\"),\n          action: \"split\",\n          default: true,\n          callback: (event, target, html) => {\n            if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n            const splitValue = Math.clamp(html.querySelector(\"form input.split\").valueAsNumber, 1, max);\n            if (Number.isNumeric(splitValue)) {\n              return [Math.max(1, total - splitValue), splitValue];\n            }\n            return null;\n          },\n        },\n      ],\n      render: (event, html) => {\n        if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n        html = html.querySelector(\".dialog-content\");\n        const slider = html.querySelector(\"input.slider\");\n        const oldStack = html.querySelector(\"input.left\");\n        const newStack = html.querySelector(\"input.split\");\n        slider.addEventListener(\n          \"input\",\n          (ev) => {\n            const newValue = ev.target.valueAsNumber;\n            newStack.value = newValue;\n            oldStack.value = total - newValue;\n          },\n          { passive: true }\n        );\n        newStack.addEventListener(\n          \"input\",\n          (ev) => {\n            let newValue = ev.target.valueAsNumber;\n            if (newValue > max) {\n              newStack.value = max;\n              newValue = max;\n            } else if (newValue < 1) {\n              newStack.value = 1;\n              newValue = 1;\n            }\n            slider.value = newValue;\n            oldStack.value = total - newValue;\n          },\n          { passive: true }\n        );\n        oldStack.addEventListener(\"input\", (ev) => {\n          let newValue = total - ev.target.valueAsNumber;\n          if (newValue > total) {\n            oldStack.value = max;\n            newValue = 1;\n          } else if (newValue < 1) {\n            oldStack.value = 1;\n            newValue = max;\n          }\n          newStack.value = newValue;\n          slider.value = newValue;\n        });\n      },\n      close: () => null,\n      rejectClose: false,\n    };\n\n    return super.wait(foundry.utils.mergeObject(options, dialogOptions));\n  }\n}\n","const { DocumentSheetV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * HTML Editor\n *\n * Generic HTML text editor.\n *\n * @group Applications\n */\nexport class HTMLEditor extends HandlebarsApplicationMixin(DocumentSheetV2) {\n  /** @override */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n\n    options.uniqueId += `-${options.path.replaceAll(\".\", \"-\")}`;\n\n    return options;\n  }\n\n  /** @override */\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"html-editor\"],\n    window: {\n      minimizable: false,\n      resizable: true,\n    },\n    position: {\n      height: 520,\n      width: 580,\n    },\n    sheetConfig: false,\n    form: {\n      closeOnSubmit: true,\n      submitOnChange: true,\n    },\n  };\n\n  /** @override */\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/html-editor.hbs\",\n    },\n  };\n\n  /** @override */\n  get title() {\n    return this.options.window.title || super.title;\n  }\n\n  /** @override */\n  _prepareContext() {\n    return {\n      uuid: this.document.uuid,\n      content: foundry.utils.getProperty(this.document, this.options.path),\n      path: this.options.path,\n      editable: this.isEditable,\n      field: new foundry.data.fields.HTMLField(),\n    };\n  }\n\n  /** @override */\n  _processSubmitData(event, form, submitData) {\n    if (this.options.callback) return this.options.callback(submitData);\n    else this.document.update(submitData);\n  }\n}\n","import { NoAutocomplete } from \"./mixins/no-autocomplete.mjs\";\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Apply Damage Prompt\n *\n * Handles damage application UX when adjustment is desired.\n *\n * Calls {@link ActorPF#applyDamage} when finally committing changes.\n *\n * Called primarily from {@link ActorPF.applyDamage}\n */\nexport class ApplyDamage extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  /**\n   * Base damage/healing value\n   *\n   * @type {number}\n   */\n  value = 0;\n\n  /**\n   * Arbitrary manual bonus\n   *\n   * @type {number}\n   */\n  bonus;\n\n  /**\n   * Type of the custom bonus.\n   *\n   * @type {string}\n   */\n  bonusType = \"untyped\";\n  /**\n   * Is this healing instead of damage?\n   *\n   * @type {boolean}\n   */\n  isHealing;\n\n  /**\n   * Is this to be applied directly to wounds with Wounds & Vigor optional rule?\n   *\n   * @type {boolean}\n   */\n  asWounds;\n\n  /**\n   * Critical multiplier.\n   *\n   * @type {number}\n   */\n  critMult;\n\n  /**\n   * Nonlethal\n   *\n   * @type {boolean}\n   */\n  asNonlethal;\n\n  /**\n   * General reduction applied to all\n   *\n   * @type {number}\n   */\n  reduction;\n\n  /**\n   * Targets\n   *\n   *  @type {Collection<ApplyDamageTarget>}\n   */\n  targets;\n\n  /**\n   * Damage instances\n   *\n   * @type {Array<pf1.models.action.DamagePartModel>}\n   */\n  instances = [];\n\n  /**\n   * Does the damage have enhancement bonus or otherwise count as magic?\n   *\n   * @type {boolean}\n   */\n  isMagic = false;\n\n  /**\n   * Damage materials\n   *\n   * @type {Set<string>}\n   */\n  materials = new Set();\n\n  /**\n   * All resistances that exist.\n   *\n   * @type {Set<string>}\n   */\n  resistanceIds = new Set();\n\n  /**\n   * All damage types that exist\n   *\n   * @type {Set<string>}\n   */\n  damageIds = new Set();\n\n  /** @type {Function} */\n  resolve;\n\n  /**\n   * Does this count as real adamantine?\n   *\n   * @type {boolean}\n   */\n  adamantine = false;\n\n  /**\n   * Allow bonus value\n   *\n   * @experimental\n   */\n  static ALLOW_BONUS = true;\n\n  /**\n   * Adamantine penetration of hardness\n   *\n   * It however only ignores hardness up to 20, but if it's higher, hardness applies in full.\n   *\n   * @todo\n   * - Move this datapoint elsewhere\n   * @experimental\n   */\n  static ADAMANTINE_THRESHOLD = /** @type {const} */ (20);\n  static ADAMANTINE_ID = /** @type {const} */ (\"adamantine\");\n\n  constructor(options) {\n    const isHealing = options.value < 0;\n    if (isHealing) options.value = -options.value;\n\n    const { resolve } = options;\n\n    super(options);\n\n    this.extraOptions = {\n      action: options.action,\n      attackIndex: options.attackIndex,\n      reference: options.reference,\n      event: options.event,\n      message: options.message,\n      element: options.element,\n      interactive: true,\n      dialog: true,\n    };\n\n    this.damageOptions = {\n      asNonlethal: options.asNonlethal ?? false,\n      asWounds: options.asWounds ?? false,\n      critMult: options.critMult ?? 0,\n      dualHeal: options.dualHeal ?? game.settings.get(\"pf1\", \"dualHeal\"),\n    };\n\n    // TODO: Preserve arbitrary options\n\n    Object.defineProperties(this, {\n      resolve: {\n        value: resolve,\n        writable: true,\n        enumerable: false,\n      },\n      isHealing: {\n        value: isHealing,\n        writable: false,\n      },\n      asWounds: {\n        value: options.asWounds ?? false,\n      },\n      asNonlethal: {\n        value: options.asNonlethal ?? false,\n      },\n      critMult: {\n        value: options.critMult || 0,\n      },\n      value: {\n        value: options.value,\n        writable: true,\n      },\n      reduction: {\n        value: options.reduction,\n        writable: true,\n      },\n      woundsAndVigor: {\n        value: false,\n        writable: true,\n      },\n    });\n\n    this._prepareInstances();\n    this._evaluateAttack();\n    this._prepareTargets();\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"apply-damage\", \"standard-form\"],\n    window: {\n      resizable: true,\n      minimizable: false,\n    },\n    position: {\n      width: 460,\n      height: \"auto\",\n    },\n    actions: {\n      apply: this._onApply,\n    },\n  };\n\n  get title() {\n    return this.isHealing ? game.i18n.localize(\"PF1.ApplyHealing\") : game.i18n.localize(\"PF1.ApplyDamage\");\n  }\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/apply-damage-dialog.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  _preparePartContext(partId, context, _options) {\n    switch (partId) {\n      case \"footer\": {\n        context.buttons = [\n          {\n            action: \"apply\",\n            type: \"submit\",\n            label: game.i18n.localize(\"PF1.Apply\"),\n            icon: \"fa-solid fa-heart-pulse\",\n            default: true,\n          },\n        ];\n        break;\n      }\n      case \"form\": {\n        this._prepareFormContext(context);\n        break;\n      }\n    }\n\n    return context;\n  }\n\n  _prepareFormContext(context) {\n    context.value = this.value;\n    context.bonus = this.bonus;\n    context.bonusType = this.bonusType;\n    context.isHealing = this.isHealing;\n    context.reduction = this.reduction;\n    context.targets = this.targets;\n    context.instances = this.instances;\n    context.hasPhysical = this.hasPhysical;\n    context.hasEnergy = this.hasEnergy;\n    context.options = this.damageOptions;\n    context.useWoundsAndVigor = this.woundsAndVigor;\n    context.multiTarget = context.targets.size > 1;\n\n    context.damageTypes = pf1.registry.damageTypes.getLabels({ sort: false });\n    for (const [key, dt] of pf1.registry.damageTypes.entries()) {\n      if (dt.isUtility) delete context.damageTypes[key];\n    }\n\n    context.tags = [];\n\n    this._addContextTags(context.tags);\n  }\n\n  /**\n   * @experimental\n   * @param {Array<object>} flags\n   */\n  _addContextTags(flags) {\n    if (this.isHealing) return;\n\n    const ids = new Set();\n\n    // Add magic\n    if (this.isMagic && this.resistanceIds.has(\"magic\")) {\n      const magic = pf1.registry.materials.get(\"magic\");\n      if (magic) flags.push({ id: \"magic\", label: magic.shortName || magic.name, data: magic });\n      ids.add(\"magic\");\n    }\n\n    // Add materials\n    for (const materialId of this.materials) {\n      if (this.resistanceIds.has(materialId) && !ids.has(materialId)) {\n        ids.add(materialId);\n        const material = pf1.registry.materials.get(materialId);\n\n        if (material) flags.push({ id: materialId, label: material.shortName || material.name, data: material });\n        else {\n          const align = pf1.config.damageResistances[materialId];\n          if (align) flags.push({ id: materialId, label: align });\n        }\n      }\n    }\n\n    // Special case for adamantine\n    // Display if attack has adamantine and any of the targets have hardness\n    const ae = this.constructor.ADAMANTINE_THRESHOLD || 0;\n    const adamantineId = this.constructor.ADAMANTINE_ID;\n    if (ae > 0 && this.adamantine && !ids.has(adamantineId)) {\n      if (this.targets.some((t) => t.hardness.available)) {\n        ids.add(adamantineId);\n        const material = pf1.registry.materials.get(adamantineId);\n        if (material) flags.push({ id: adamantineId, label: material.shortName || material.name, data: material });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} options\n   * @param {Event} event\n   */\n  _onChangeForm(options, event) {\n    const formData = foundry.utils.expandObject(new FormDataExtended(this.element).object);\n\n    const name = event.target.name;\n    const parts = name.split(\".\");\n    if (parts[0] === \"targets\") {\n      const idx = parts[1];\n      const data = formData.targets[idx];\n      this._addTargetData(data.uuid, data);\n    }\n\n    switch (name) {\n      case \"value\":\n        this.value = formData.value;\n        break;\n      case \"bonus\":\n        this.bonus = formData.bonus;\n        break;\n      case \"bonusType\":\n        this.bonusType = formData.bonusType || \"untyped\";\n        break;\n      case \"reduction\":\n        this.reduction = formData.reduction;\n        break;\n    }\n\n    for (const target of this.targets) this._refreshTarget(target.uuid);\n\n    // Merge options\n    foundry.utils.mergeObject(this.damageOptions, formData.options);\n\n    // TODO: Somehow preserve any module added data\n\n    // Re-render if no action was triggered\n    if (!event.target.dataset?.action) this.render({ parts: [\"form\"] });\n  }\n\n  /** @override */\n  _onClose() {\n    super._onClose();\n\n    this.resolve?.(null);\n  }\n\n  /**\n   * Prepare damage/healing instances.\n   *\n   * Merge damage instances of same type.\n   */\n  _prepareInstances() {\n    const instances = this.options.instances ?? [];\n\n    // Add a fake damage instance if no instances are present.\n    // Mostly to make it clear the damage is being treated as untyped.\n    if (instances.length === 0 && this.options.value > 0) {\n      const part = new pf1.models.action.DamagePartModel({ types: [\"untyped\"] });\n      part.value = this.options.value || 0;\n      instances.push(part);\n    }\n\n    for (let i = 1; i < instances.length; i++) {\n      const cur = instances[i];\n      if (cur.value == 0) continue;\n\n      // Merge with previous if one exists\n      for (let y = 0; y < i; y++) {\n        const prev = instances[y];\n        if (prev.value == 0) continue;\n        if (cur.types.equals(prev.types)) {\n          prev.value += cur.value;\n          cur.value = 0;\n          break;\n        }\n      }\n    }\n\n    Object.defineProperty(this, \"instances\", {\n      value: instances.filter((i) => i.value != 0),\n      writable: false,\n      enumerable: false,\n    });\n\n    // Record all known damage type IDs\n    for (const instance of this.instances) {\n      instance.typeIds = new Set(instance.types ?? []);\n      for (const type of instance.typeIds) this.damageIds.add(type);\n    }\n  }\n\n  /**\n   * Evaluate attack and attacker info\n   *\n   * Determines attack materials, enhancement bonus, natural attack DR/magic penetration, etc.\n   *\n   * @todo\n   * - Some of this data should be cached in the chat messages and not rely on the action's current state\n   */\n  _evaluateAttack() {\n    /** @type {pf1.components.ItemAction} */\n    const action = this.options.action;\n    if (!action) return;\n\n    /** @type {ActorPF} */\n    const actor = action.actor; // Attacker\n    const item = action.item;\n\n    const enhancement = action.enhancementBonus || 0;\n    const hasEnhancement = enhancement > 0;\n    const isNatural = action.item?.subType === \"natural\";\n\n    // Attacker having DR/magic with naturals penetrates the same\n    let hasDRMagic = false;\n    if (actor && isNatural) {\n      const resistances = [];\n      const drEntries = actor.system.traits?.dr?.value ?? [];\n      for (const entry of drEntries) resistances.push(actor._parseResistanceEntry(entry, \"dr\"));\n      hasDRMagic = resistances.some((r) => r.type0?.id === \"magic\" || r.type1?.id === \"magic\");\n    }\n\n    // Handle materials\n    const materials = this.materials;\n    // Base material\n    const material = pf1.registry.materials.get(action?.normalMaterial);\n    if (material) {\n      materials.add(material.id);\n      if (material.treatedAs) materials.add(material.treatedAs);\n    }\n\n    // Addon materials\n    for (const addon of action.addonMaterial) {\n      materials.add(addon);\n      const am = pf1.registry.materials.get(addon);\n      if (am?.treatedAs) materials.add(am.treatedAs);\n    }\n\n    // Add special marker for adamantine\n    // Enhancement bonus granted adamantine penetration does not give full effects\n    if (materials.has(this.constructor.ADAMANTINE_ID)) this.adamantine = true;\n\n    // Material penetrations granted by enhancement bonus\n    if (enhancement > 0) {\n      for (let i = 0; i <= enhancement; i++) {\n        const em = pf1.config.enhancementMaterialPenetration[i] ?? [];\n        for (const materialId of em) materials.add(materialId);\n      }\n    }\n\n    // Alignments\n    if (item) {\n      for (const alignmentId of Object.keys(pf1.config.damageResistances)) {\n        const enabled = action.alignments?.[alignmentId] ?? item.alignments?.[alignmentId] ?? false;\n        if (enabled) materials.add(alignmentId);\n      }\n    }\n\n    // Record it all\n    this.isMagic = hasEnhancement || (isNatural && hasDRMagic);\n  }\n\n  _prepareTargets() {\n    /** @type {Array<pf1.models.action.DamagePartModel>} */\n    const instances = this.instances ?? [];\n    for (const instance of instances) {\n      instance.label = pf1.utils.i18n.join(instance.names, \"u\", true);\n    }\n\n    const unknownTypes =\n      instances.length === 0 ||\n      instances.some((i) => i.standard.some((t) => ![\"physical\", \"energy\"].includes(t.category)));\n\n    Object.defineProperties(this, {\n      hasPhysical: {\n        value: this.isHealing\n          ? false\n          : unknownTypes\n            ? true\n            : instances.some((i) => i.standard.some((t) => t.isPhysical)),\n        enumerable: false,\n        writable: false,\n      },\n      hasEnergy: {\n        value: this.isHealing ? false : unknownTypes ? true : instances.some((i) => i.standard.some((t) => t.isEnergy)),\n        enumerable: false,\n        writable: false,\n      },\n    });\n\n    Object.defineProperty(this, \"targets\", {\n      value: new Collection(),\n      writable: false,\n      enumerable: false,\n    });\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpconfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    for (const actor of this.options.targets) {\n      const hardness = actor.system.traits?.hardness || 0;\n      const hasHardness = this.isHealing ? false : hardness > 0;\n\n      const target = {\n        uuid: actor.uuid,\n        actor,\n        name: actor.token?.name || actor.name,\n        value: this.value,\n        isToken: !!actor.token,\n        ratio: 1,\n        dr: this.hasPhysical ? this.getResistances(actor, \"dr\") : [],\n        get visibleDR() {\n          return this.dr.some((r) => r.visible);\n        },\n        eres: this.hasEnergy ? this.getResistances(actor, \"eres\") : [],\n        get visibleER() {\n          return this.eres.some((r) => r.visible);\n        },\n        hardness: {\n          active: false,\n          available: hasHardness,\n          value: hardness,\n          disabled: true,\n        },\n        reduction: {\n          total: 0,\n          manual: undefined, // Manually entered\n        },\n        di: this.isHealing ? [] : this._getRelevantDamageTypes(actor.system.traits?.di, true),\n        dv: this.isHealing ? [] : this._getRelevantDamageTypes(actor.system.traits?.dv, false),\n        selected: true,\n      };\n\n      if (hasHardness) {\n        // Adamantine effect is applied here to see if it's even relevant\n        let effectiveHardness = hardness;\n        if (this._needsHardnessAdjust(target, hardness)) {\n          effectiveHardness = this._applyHardnessAdjust(target, hardness);\n        }\n        target.hardness.active = effectiveHardness > 0;\n        target.hardness.disabled = effectiveHardness <= 0;\n        target.hardness.effective = effectiveHardness;\n      }\n\n      target.haveDIV = target.di.length || target.dv.length;\n      target.haveDER = target.dr.length || target.eres.length || target.hardness.effective;\n\n      this.targets.set(target.uuid, target);\n\n      this._refreshTarget(target.uuid);\n\n      const cfg = hpconfig.getActorConfig(actor);\n      this.woundsAndVigor ||= cfg.rules.useWoundsAndVigor ?? false;\n    }\n  }\n\n  _getRelevantDamageTypes(trait, enable = false) {\n    const rv = [];\n    if (!trait) return rv;\n\n    for (const typeId of trait.standard) {\n      if (!this.damageIds.has(typeId)) continue; // Skip instances that don't occur\n\n      const type = pf1.registry.damageTypes.get(typeId);\n      rv.push({ label: type?.name || typeId, id: typeId, active: enable, disabled: !enable });\n    }\n\n    for (const custom of trait.custom) rv.push({ label: custom });\n\n    return rv;\n  }\n\n  /**\n   *\n   * @param {ActorPF} actor\n   * @param {\"dr\"|\"eres\"} resistanceType\n   * @returns {object[]} - Array of results from {@link ActorPF._parseResistance()}\n   */\n  getResistances(actor, resistanceType = \"dr\") {\n    const res = actor.system.traits?.[resistanceType];\n    if (!res) return [];\n\n    const resistances = [];\n\n    if (res.custom) {\n      for (const entry of res.custom.split(pf1.config.re.traitSeparator)) {\n        const re = actor._parseResistanceEntry(entry, resistanceType);\n        resistances.push(re);\n      }\n    }\n    if (res.value?.length) {\n      for (const entry of res.value) {\n        const re = actor._parseResistanceEntry(entry, resistanceType);\n        resistances.push(re);\n      }\n    }\n\n    const allDamageTypes = new Set(this.instances.map((i) => [...i.types]).flat());\n\n    // Types common to all instances\n    const commonTypes = new Set();\n    // Is magical attack?\n    if (this.isMagic) commonTypes.add(\"magic\");\n    // Has relevant material?\n    for (const material of this.materials) commonTypes.add(material);\n\n    for (const type of commonTypes) allDamageTypes.add(type);\n\n    // Add in data used by this dialog\n    const enrichResistance = (res) => {\n      res.value = res.amount;\n      res.active = false; // Toggled\n      res.types = [res.type0?.id, res.type1?.id].filter((t) => t);\n      res.typeIds = new Set(res.types);\n      res.visible = true; // Shown\n      //res.enabled = true; // UNUSED; Available for toggling\n      res.hasGeneric = res.isDR && (res.typeIds.size === 0 || res.typeIds.has(\"\"));\n\n      for (const type of res.typeIds) this.resistanceIds.add(type);\n\n      // Set generic resistances to be active by default\n      if (res.hasGeneric) {\n        res.active = true;\n      }\n      // Make custom resistance always available but not enabled by default\n      else if (res.custom) {\n        // NOP, don't disable but don't activate either\n      }\n      // DR is exclusive\n      // TODO: Make this mess cleaner and more clear in what it does\n      else if (res.isDR) {\n        // Operator: true -> OR; false -> AND\n        if (res.operator) {\n          // OR; if any of the resistance types are in the damage types, the resistance is overcome\n          res.active = !res.typeIds.some((t) => allDamageTypes.has(t));\n          res.active ||= this.instances.some((i) => !res.typeIds.intersects(i.typeIds.union(commonTypes)));\n        } else {\n          // AND; if all of the resistance types are in the damage types, the resistance is overcome\n          res.active = !res.typeIds.every((t) => allDamageTypes.has(t));\n          res.active ||= !this.instances.every((i) => !res.typeIds.intersects(i.typeIds.union(commonTypes)));\n        }\n\n        // Consider resistances that weren't activated for disabling entirely\n        if (!res.active) {\n          // If all types are listed in general types, disable choice\n          res.disabled = res.typeIds.every((t) => commonTypes.has(t));\n          // Also if the types are present in every instance\n          res.disabled ||= this.instances.every((i) => res.typeIds.intersects(i.typeIds));\n        }\n      }\n      // ER is inclusive\n      else if (res.isER) {\n        res.active = res.typeIds.some((t) => allDamageTypes.has(t));\n\n        // ER not activated by default is not relevant to display\n        if (!res.active) res.disabled = true;\n      }\n    };\n\n    for (const res of resistances) enrichResistance(res);\n\n    return resistances;\n  }\n\n  /**\n   * Does the reduction match the damage?\n   *\n   * @param {ApplyDamageTarget} target - Target\n   * @param {object} instance - Damage instance\n   * @param {object} reduction - Reduction info\n   * @param {boolean} dr - Is this DR or ER?\n   * @returns {boolean}\n   */\n  _isReducedBy(target, instance, reduction, dr) {\n    let match = false;\n\n    // Base type mismatch\n    if ((dr && !instance.isPhysical) || (!dr && !instance.isEnergy)) return false;\n\n    // Generic and custom reduction always applies\n    if (reduction.hasGeneric || reduction.custom) return true;\n\n    const types = new Set(instance.typeIds); // Copy\n    if (dr) {\n      if (this.isMagic) types.add(\"magic\");\n      for (const materialId of this.materials) types.add(materialId);\n    }\n\n    // Check actual types\n    // OR @deprecated\n    if (reduction.operator) {\n      match = reduction.typeIds.some((t) => types.has(t));\n    }\n    // AND\n    else {\n      // AND; if all of the resistance types are in the damage types, the resistance is overcome\n      match = reduction.typeIds.every((t) => types.has(t));\n    }\n\n    // DR if not matching reduces (declares penetration)\n    // ER if matching reduces (declares negation)\n    return dr ? !match : match;\n  }\n\n  /**\n   * Apply damage reduction\n   *\n   * Alters `instance.total` and `reduction.available` as necessary.\n   *\n   * @param {ApplyDamageTarget} target - Target\n   * @param {object} instance - Damage instance\n   * @param {object} reduction - Reduction\n   * @param {boolean} dr - Is this DR or ER?\n   * @returns {number} - How much did this reduce?\n   */\n  _applyReduction(target, instance, reduction, dr) {\n    if (instance.total <= 0) return 0;\n    if (reduction.available <= 0) return 0;\n\n    // Cache original availability\n    const available = reduction.available;\n\n    // Reduce available reduction\n    reduction.available -= instance.total;\n\n    // If available reduction is not enough to consume all damage, overflow remains as actual damage\n    let overflow = 0;\n    if (reduction.available < 0) {\n      overflow = Math.abs(reduction.available);\n      reduction.available = 0; // Normalize to zero, meaningless detail as this makes no difference\n    }\n    // No else, initial zero is correct if the damage was wholly consumed by reduction\n\n    instance.total = overflow;\n\n    // Return actual reduction\n    return available - reduction.available;\n  }\n\n  _processImmunities(target) {\n    const immunities = target.di;\n\n    let immunized = 0;\n\n    for (const immunity of immunities) {\n      if (!immunity.active) continue;\n      for (const instance of target.instances) {\n        // TODO: Mixed damage\n        instance.immune = instance.typeIds.every((t) => t === immunity.id);\n        if (instance.immune) {\n          immunized += instance.total;\n          instance.total = 0;\n        }\n      }\n    }\n\n    return immunized;\n  }\n\n  /**\n   * Is hardness needing to be modified by any reason?\n   *\n   * @param {ApplyDamageTarget} target - Target\n   * @param {number} hardness - Hardness value\n   * @returns {boolean}\n   */\n  _needsHardnessAdjust(target, hardness) {\n    if (hardness <= 0) return false;\n    if (!this.adamantine) return false;\n\n    // Adamantine has effect only on hardness of 20 or less\n    return hardness <= (this.constructor.ADAMANTINE_THRESHOLD || 0);\n  }\n\n  /**\n   * Apply hardness modification\n   *\n   * @param {ApplyDamageTarget} target - Target\n   * @param {number} hardness - Hardness\n   * @returns {number} - New hardness\n   */\n  _applyHardnessAdjust(target, hardness) {\n    // Adamantine ignores hardness of 20 or less. It does not flat reduce hardness like you would expect\n    if (hardness <= (this.constructor.ADAMANTINE_THRESHOLD || 0)) return 0;\n\n    return hardness;\n  }\n\n  /**\n   * Process reductions against available instances.\n   *\n   * @param target\n   * @param {object[]} instances\n   * @param {object[]} reductions\n   * @param {boolean} dr - Are these DR or ER?\n   * @returns {number} - Total reduction\n   */\n  _processReductions(target, instances, reductions, dr) {\n    let total = 0;\n\n    for (const r of reductions) {\n      if (!r.active) continue;\n      if (r.value <= 0) continue;\n      r.available = r.value;\n\n      for (const instance of instances) {\n        if (instance.total <= 0) continue;\n\n        if (!this._isReducedBy(target, instance, r, dr)) continue;\n\n        total += this._applyReduction(target, instance, r, dr);\n\n        // Stop loop early if reduction ran out of juice\n        if (r.available <= 0) break;\n      }\n    }\n\n    return total;\n  }\n\n  _addTargetData(targetId, data) {\n    const target = this.targets.get(targetId);\n\n    const { dr, eres, ratio, di, reduction, hardness } = data;\n\n    foundry.utils.mergeObject(target, { ratio, reduction: { manual: reduction }, hardness: { active: hardness } });\n\n    if (dr) {\n      for (let i = 0; i < target.dr.length; i++) dr[i] ??= { active: false };\n      Object.values(dr).forEach((rdata, idx) => foundry.utils.mergeObject(target.dr[idx], rdata));\n    }\n\n    if (eres) {\n      for (let i = 0; i < target.eres.length; i++) eres[i] ??= { active: false };\n      Object.values(eres).forEach((rdata, idx) => foundry.utils.mergeObject(target.eres[idx], rdata));\n    }\n\n    if (di) {\n      for (let i = 0; i < target.di.length; i++) di[i] ??= { active: false };\n      Object.values(di).forEach((rdata, idx) => foundry.utils.mergeObject(target.di[idx], rdata));\n    }\n  }\n\n  /**\n   * Update target data based on form data and recalculate values.\n   *\n   * @internal\n   * @param {string} targetId\n   */\n  _refreshTarget(targetId) {\n    const target = this.targets.get(targetId);\n\n    // Update value\n    // TODO: Account for this.value being altered (shunt to untyped bonus or reduction)\n    target.value = Math.floor(this.value * (target.ratio ?? 0));\n    target.instances = pf1.utils.deepClone(this.instances);\n\n    // No instances? Push raw value as generic instance\n    if (target.instances.length == 0) {\n      target.instances.push({\n        value: this.value || 0,\n        types: [\"untyped\"],\n      });\n    }\n\n    // Add bonus value\n    target.instances.push({\n      value: this.bonus || 0,\n      types: [this.bonusType],\n    });\n\n    // Initialize instances to this actor\n    for (const instance of target.instances) {\n      instance.total = Math.floor(instance.value * (target.ratio ?? 0));\n\n      instance.typeIds = new Set(instance.types);\n\n      const types = instance.typeIds.map(\n        (t) => pf1.registry.damageTypes.get(t) || { id: t, isPhysical: false, isEnergy: false }\n      );\n\n      instance.isPhysical = types.some((t) => t.isPhysical);\n      instance.isEnergy = types.some((t) => t.isEnergy);\n      instance.isMixed = instance.isPhysical && instance.isEnergy; // Both\n      instance.isUntyped = !instance.isPhysical && !instance.isEnergy; // Neither\n    }\n\n    // Reduction choices\n    target.reduction.total = 0;\n\n    // Process immunities\n    const immunized = this._processImmunities(target);\n    target.reduction.immunized = immunized;\n    target.reduction.total += immunized;\n\n    // Apply physical reduction\n    const physicalReduction = this._processReductions(target, target.instances, target.dr, true);\n    target.reduction.physical = physicalReduction;\n    target.reduction.total += physicalReduction;\n\n    // Apply energy reduction\n    const energyReduction = this._processReductions(target, target.instances, target.eres, false);\n    target.reduction.energy = energyReduction;\n    target.reduction.total += energyReduction;\n\n    // Hardness\n    if (target.hardness.active) {\n      const hardness = target.hardness;\n      hardness.available = hardness.total = hardness.effective || 0;\n      hardness.reduced = 0;\n\n      for (const instance of target.instances) {\n        if (instance.isUntyped) continue;\n        hardness.reduced += this._applyReduction(target, instance, hardness);\n        if (hardness.available <= 0) break;\n      }\n\n      target.reduction.hardness = hardness.reduced;\n      target.reduction.total += hardness.reduced;\n    }\n\n    // Per-target and general reduction\n    const targetReduction = target.reduction.manual || 0;\n    const generalReduction = this.reduction || 0;\n    if (targetReduction || generalReduction) {\n      const tr = { available: targetReduction, total: targetReduction, reduced: 0 };\n      const gr = { available: generalReduction, total: generalReduction, reduced: 0 };\n\n      for (const instance of target.instances) {\n        if (instance.isUntyped) continue;\n        tr.reduced += this._applyReduction(target, instance, tr);\n        gr.reduced += this._applyReduction(target, instance, gr);\n      }\n\n      target.reduction.general = gr.reduced;\n      target.reduction.individual = tr.reduced;\n      target.reduction.total += tr.reduced + gr.reduced;\n    } else {\n      target.reduction.general = 0;\n      target.reduction.individual = 0;\n    }\n\n    // Calculate total remaining health adjust\n    target.value = 0;\n    for (const instance of target.instances) {\n      target.value += instance.total;\n    }\n\n    target.total = target.value;\n  }\n\n  /**\n   * Apply health change\n   *\n   * @param {Event} event\n   * @param {HTMLElement} target\n   * @this {ApplyDamage}\n   */\n  static async _onApply(event, target) {\n    event.preventDefault();\n\n    const resolve = this.resolve;\n    this.resolve = null; // Prevent _onClose() calling resolve\n    const config = {\n      value: this.options.value,\n      reduction: this.reduction || 0,\n      isHealing: this.isHealing,\n      asWounds: this.asWounds,\n      asNonlethal: this.asNonlethal,\n      instances: this.instances,\n      targets: this.targets,\n    };\n\n    // This causes clicks to go through the dialog\n    this.element.inert = true;\n\n    // Applied value with general damage reduction accounted for\n    let value = Math.max(0, this.value);\n    if (this.isHealing) value = -value; // Flip healing\n\n    // Add bonus to value\n    value += this.bonus || 0;\n\n    const updated = [];\n    try {\n      const promises = [];\n\n      for (const target of this.targets) {\n        const applyDamageOpts = this._getTargetDamageOptions(target);\n        console.debug(\n          \"PF1 | Applying\",\n          value,\n          \"damage with\",\n          applyDamageOpts.reduction,\n          \"reduction to\",\n          target.actor.name,\n          `[${target.actor.uuid}]`\n        );\n        const p = target.actor.applyDamage(value, applyDamageOpts);\n\n        p.then((r) => (r ? updated.push(target.actor) : null));\n\n        promises.push(p);\n      }\n\n      const targetCount = await Promise.all(promises).then((res) => res.filter((r) => !!r).length);\n\n      value = Math.abs(value);\n\n      if (this.isHealing)\n        ui.notifications.info(game.i18n.format(\"PF1.Application.Damage.ApplyHeal\", { targets: targetCount }));\n      else ui.notifications.info(game.i18n.format(\"PF1.Application.Damage.ApplyDamage\", { targets: targetCount }));\n    } catch (err) {\n      ui.notifications.error(err.message, { console: false });\n      throw err;\n    } finally {\n      this.close();\n\n      config.updated = updated;\n      resolve(config);\n    }\n  }\n\n  /**\n   * Get per-target options to pass to {@link ActorPF.prototype.applyDamage ActorPF#applyDamage()}\n   *\n   * @param {ApplyDamageTarget} target - Target\n   * @returns {object} - Options\n   */\n  _getTargetDamageOptions(target) {\n    const options = {\n      ...this.damageOptions, // Spread damage options in, allowing modules to extend the options and slip in extra data\n      ...this.extraOptions, // Additional options that might otherwise be lost\n      reduction: target.reduction.total || 0,\n      ratio: target.ratio ?? 1,\n      instances: target.instances.map((i) => {\n        const ins = new pf1.models.action.DamagePartModel(pf1.utils.deepClone(i));\n        for (const k of Object.keys(i)) {\n          ins[k] = i[k];\n        }\n        return ins;\n      }),\n    };\n\n    Hooks.callAll(\"pf1ApplyDamageTargetOptions\", this, target, options);\n\n    return options;\n  }\n\n  /**\n   * @param {object} options - Options passed to apply damage\n   * @param {object} [renderOptions] - Render options passed to the application.\n   * @returns {Promise<null|object>} - Null if cancelled, object describing applied settings.\n   */\n  static async wait(options, renderOptions = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      const app = new this(options);\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * The various {@link Application}s used by the Pathfinder 1e system.\n *\n * @module\n */\n\nimport { CompendiumBrowser } from \"./compendium-browser/compendium-browser.mjs\";\n\nexport * as actor from \"./actor/_module.mjs\";\nexport * as item from \"./item/_module.mjs\";\nexport * as component from \"./component/_module.mjs\";\nexport * as settings from \"./settings/_module.mjs\";\nexport * as compendiumBrowser from \"./compendium-browser/_module.mjs\";\nexport * as journal from \"./journal/_module.mjs\";\nexport * as mixin from \"./mixins/_module.mjs\";\nexport * as utils from \"./utils/_module.mjs\";\n\nexport { ActionSelector } from \"./action-selector.mjs\";\nexport { AttackDialog } from \"./attack-dialog.mjs\";\nexport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\nexport { ChangeLogWindow } from \"./change-log.mjs\";\nexport { CurrencyTransfer } from \"./currency-transfer.mjs\";\nexport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\nexport { EntrySelector } from \"./entry-selector.mjs\";\nexport { ItemSelector } from \"./item-selector.mjs\";\nexport { HelpBrowserPF } from \"./help-browser.mjs\";\nexport { Widget_ItemPicker } from \"./item-picker.mjs\";\nexport { LevelUpForm } from \"./level-up.mjs\";\nexport { PointBuyCalculator } from \"./point-buy-calculator.mjs\";\nexport { ScriptEditor } from \"./script-editor.mjs\";\nexport { SensesSelector } from \"./senses-selector.mjs\";\nexport { SkillEditor } from \"./skill-editor.mjs\";\nexport { ContentSourceEditor } from \"./content-source-editor.mjs\";\nexport { ActorTraitSelector } from \"./trait-selector.mjs\";\nexport { VisionSharingSheet } from \"./vision-sharing.mjs\";\nexport { ExperienceDistributor } from \"./experience-distributor.mjs\";\nexport { ChangeEditor } from \"./change-editor.mjs\";\n\nexport { ItemDirectoryPF } from \"./sidebar/items-directory.mjs\";\nexport { Troubleshooter } from \"./troubleshooter.mjs\";\n\nexport { ActorSelector } from \"./actor-selector.mjs\";\nexport { SplitStack } from \"./split-stack.mjs\";\nexport { HTMLEditor } from \"./html-editor.mjs\";\n\nexport { ApplyDamage } from \"./apply-damage.mjs\";\n\n/**\n * {@link CompendiumBrowser}s for the various compendiums.\n *\n * @type {Record<string, CompendiumBrowser>}\n */\nexport const compendiums = {};\nexport { helpBrowser } from \"./help-browser.mjs\";\n","import { AbstractListSelector } from \"@app/abstract-list-selector.mjs\";\n\n/**\n * An application that allows the user to configure change flags on an item\n */\nexport class EntrySelector extends AbstractListSelector {\n  static DEFAULT_OPTIONS = {\n    classes: [\"entry-selector\"],\n    position: {\n      width: 300,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/entry-selector.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  constructor(options) {\n    super(options);\n\n    if (options.title) this.subtitle = game.i18n.localize(options.title);\n\n    // Prepare data and convert it into format compatible with the editor\n    this.isFlag = this.options.flag === true;\n    this.isBoolean = this.options.boolean === true;\n    this.isFlat = this.options.flat === true;\n    const data = foundry.utils.deepClone(\n      foundry.utils.getProperty(this.document, this.attribute) ?? (this.isFlag ? {} : [])\n    );\n\n    this.originalEntries = data;\n    this.entries = this.isFlag ? (this.isBoolean ? Object.keys(data).map((d) => [d]) : Object.entries(data)) : data;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Initialize the configuration for this application. Override the default ID to be unique to this\n   * entry selector instance based on document and attribute that is being edited.\n   *\n   * @override\n   * @param {ApplicationConfiguration} options    The provided configuration options for the Application\n   * @returns {ApplicationConfiguration}           The final configuration values for the application\n   */\n  _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.id = `EntrySelector-${options.name.replaceAll(\".\", \"-\")}-${options.document.uuid.replaceAll(\".\", \"-\")}`;\n\n    const isBoolean = options.boolean === true;\n    // Increase width for non-boolean selector\n    // TODO: Needs better solution\n    if (!isBoolean) {\n      options.position ??= {};\n      options.position.width = Math.max(options.position?.width ?? 0, 360);\n    }\n\n    return options;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the dialog window.\n   *\n   * @override\n   * @type {string}\n   */\n  get title() {\n    const item = this.document;\n    const actor = item.actor;\n    const title = this.subtitle ?? game.i18n.localize(\"PF1.Application.EntrySelector.Title\");\n    if (item) {\n      if (actor) {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleOwned\", {\n          item: item.name,\n          actor: actor.name,\n          title,\n        });\n      } else {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleIsolated\", { item: item.name, title });\n      }\n    } else {\n      return title;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @inheritDoc\n   * @protected\n   */\n  async _preparePartContext(partId, context, options) {\n    let rv = await super._preparePartContext(partId, context, options);\n\n    if (partId === \"form\") {\n      rv ??= {};\n      const entries = this.entries.map((entry) =>\n        this.isFlat ? [entry, this.dtypes[entry]] : entry.map((o2, a) => [o2, this.dtypes[a]])\n      );\n\n      rv.entries = entries;\n      rv.isFlat = this.isFlat;\n      rv.isBoolean = this.isBoolean;\n    }\n\n    return rv;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides default data for a new list entry\n   *\n   * @override\n   * @param event\n   * @protected\n   * @returns {object}\n   */\n  _getNewEntry(event) {\n    const a = event.currentTarget;\n\n    if (this.isFlat) {\n      const dataType = this.dtypes[a];\n      if (dataType === \"Number\") return 0;\n      return \"\";\n    } else {\n      const obj = [];\n      for (let a = 0; a < this.dataCount; a++) {\n        const dataType = this.dtypes[a];\n        if (dataType === \"Number\") obj.push(0);\n        else obj.push(\"\");\n      }\n      return obj;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update internal data snapshot on form change\n   *\n   * @param formConfig\n   * @param event\n   * @override\n   * @protected\n   * @this {EntrySelector}\n   * @returns {Promise<void>}\n   */\n  async _onChangeForm(formConfig, event) {\n    const a = event.target;\n\n    const tr = a.closest(\"tr.entry\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = parseInt(a.dataset.index);\n    const value = a.value;\n\n    if (a.dataset.dtype === \"Number\") {\n      let v = parseFloat(value);\n      if (isNaN(v)) v = 0;\n      if (this.isFlat) this.entries[index] = Math.floor(v * 100) / 100;\n      else this.entries[index][index2] = Math.floor(v * 100) / 100;\n    } else {\n      if (this.isFlat) this.entries[index] = value;\n      else this.entries[index][index2] = value;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provides update data for saves\n   *\n   * @override\n   * @protected\n   * @returns {object}\n   */\n  _getUpdateData() {\n    const updateData = {};\n\n    if (this.isFlag) {\n      // Convert editor data for flags\n      const newKeys = new Set(); // Needed for deletion detection\n      this.entries.forEach(([key, value]) => {\n        newKeys.add(key);\n        updateData[`${this.attribute}.${key}`] = this.isBoolean ? true : value;\n      });\n\n      // Handle deletions\n      const oldKeys = Object.keys(this.originalEntries);\n      oldKeys.forEach((key) => {\n        if (!newKeys.has(key)) updateData[`${this.attribute}.-=${key}`] = null;\n      });\n    } else {\n      updateData[this.attribute] = this.entries;\n    }\n\n    return updateData;\n  }\n}\n","/**\n * Active Effect extension for system properties.\n */\nexport class ActiveEffectPF extends ActiveEffect {\n  /**\n   * @protected\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Record current initiative\n    // But only if the current actor is in combat\n    const combat = actor.getCombatants()[0]?.combat;\n    if (combat) {\n      // Set flag only if it doesn't exist in the data already\n      const init = this.system.initiative ?? data.system?.initiative;\n      if (init === undefined) {\n        this.updateSource({ \"system.initiative\": combat.initiative });\n      }\n    }\n  }\n\n  /**\n   * Parent actor\n   *\n   * @remarks\n   * - Null if no parent exists.\n   *\n   * @type {Actor|null}\n   */\n  get actor() {\n    const parent = this.parent;\n    if (parent instanceof Actor) return parent;\n    else return parent?.actor || null;\n  }\n\n  /**\n   * @remarks BUG: Foundry v11 and older controls visibility through this.\n   * @override\n   * @type {boolean}\n   */\n  get isTemporary() {\n    // Allow overlays to always show, no matter what else\n    if (this.statuses.size && this.getFlag(\"core\", \"overlay\")) return true;\n\n    // Hide everything told to hide\n    if (this.getFlag(\"pf1\", \"show\") === false) return false;\n\n    // Hide buffs if buff hiding option is enabled\n    const isTracker = this.isTracker;\n    if (isTracker) {\n      // Hide based on parent item hide toggle\n      if (this.parent?.system?.hideFromToken) return false;\n      // Hide based on global setting\n      if (game.settings.get(\"pf1\", \"hideTokenConditions\")) return false;\n    }\n\n    return isTracker || super.isTemporary;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 to deal with problems of isTemporary.\n   *\n   * @internal\n   * @returns {boolean} - Has duration\n   */\n  get _hasDuration() {\n    const duration = this.duration.seconds ?? (this.duration.rounds || this.duration.turns);\n    // Allow zero for single-turn duration effects to register correctly.\n    return Number.isFinite(duration) && duration >= 0;\n  }\n\n  /**\n   * Initiative counter\n   *\n   * Present only if the AE was started during combat\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.system.initiative;\n  }\n\n  /**\n   * Tracking a buff\n   *\n   * @remarks\n   * - There should be only one tracker per item.\n   *\n   * @type {boolean}\n   */\n  get isTracker() {\n    return this.system.isTracker ?? false;\n  }\n\n  /** @override */\n  get isSuppressed() {\n    if (this.parent instanceof Item) return !this.parent.isActive;\n    return false;\n  }\n}\n","/**\n * Chat Message document extension\n */\nexport class ChatMessagePF extends ChatMessage {\n  /** @override */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const flags = data.flags?.pf1;\n    if (!flags) return;\n\n    // Print warnings, leave changes to migration\n    if (flags.metadata) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.metadata has been deprecated in favor of message.system\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Migration required\n    }\n\n    if (flags.identifiedInfo) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.identifiedInfo has been deprecated in favor of message.system\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Migration required\n    }\n\n    if (flags.subject) {\n      foundry.utils.logCompatibilityWarning(\n        \"message.flags.pf1.subject has been deprecated in favor of message.system.subject\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      // Move data to new location\n      this.updateSource({\n        flags: { pf1: { \"-=subject\": null } },\n        system: { subject: flags.subject },\n      });\n    }\n  }\n\n  /**\n   * Replaces all roll data object in a given object with {@link Roll} instances\n   *\n   * @param {object} maybeRollObject - The object to replace roll data objects with {@link Roll} instances\n   * @returns {object} The object with all roll data objects replaced with {@link Roll} instances\n   * @private\n   */\n  static _initRollObject(maybeRollObject) {\n    // If object is an array, map to roll objects\n    if (Array.isArray(maybeRollObject)) {\n      return maybeRollObject.map((o) => this._initRollObject(o));\n    }\n\n    // If this is a roll object, initialize it\n    if (maybeRollObject != null && typeof maybeRollObject === \"object\" && \"class\" in maybeRollObject) {\n      return Roll.fromData(maybeRollObject);\n    }\n\n    // If object is a regular object, recurse into it to find roll to initialize\n    if (typeof maybeRollObject === \"object\" && maybeRollObject != null) {\n      for (const [k, v] of Object.entries(maybeRollObject)) {\n        maybeRollObject[k] = this._initRollObject(v);\n      }\n    }\n    // Return object in which all roll data has been replaced by Roll instances\n    return maybeRollObject;\n  }\n\n  /**\n   * Linked action.\n   *\n   * @remarks\n   * - Null is returned if no action is linked.\n   * - Undefined is returned if the linked action is not found.\n   *\n   * @type {ItemAction|undefined|null}\n   */\n  get actionSource() {\n    const actionId = this.system.action?.id;\n    return actionId ? this.itemSource?.actions.get(actionId) : null;\n  }\n\n  /**\n   * Linked item.\n   *\n   * @remarks\n   * - Null is returned if no item is linked\n   * - Undefined if item is not found\n   *\n   * @type {ItemPF|undefined|null}\n   */\n  get itemSource() {\n    const itemId = this.system.item?.id;\n    if (itemId) {\n      // fromUuidSync(this.system.actor)\n      const actor = this.constructor.getSpeakerActor(this.speaker);\n      return actor?.items.get(itemId);\n    }\n    return null;\n  }\n\n  /**\n   * Has linked item.\n   *\n   * @deprecated\n   * @type {boolean}\n   */\n  get hasItemSource() {\n    foundry.utils.logCompatibilityWarning(\n      \"ChatMessagePF.hasItemSource has been deprecated in favor of ChatMessagePF.itemSource\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return this.system.item !== undefined;\n  }\n\n  /**\n   * Associated measured template\n   *\n   * @type {MeasuredTemplatePF|null}\n   */\n  get measureTemplate() {\n    const templateId = this.system.template;\n    if (!templateId) return null;\n\n    return fromUuidSync(templateId) ?? canvas.templates.get(templateId) ?? null;\n  }\n\n  /**\n   * Targeted tokens.\n   *\n   * @type {Array<TokenPF>}\n   */\n  get targets() {\n    const targetIds = this.system.targets ?? [];\n    if (targetIds.length === 0) return targetIds;\n\n    // Legacy IDs from old messages\n    if (/^\\w{16}$/.test(targetIds[0])) return canvas.tokens.placeables.filter((o) => targetIds.includes(o.id));\n\n    return targetIds.map((uuid) => fromUuidSync(uuid)?.object).filter((t) => !!t);\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this._setTitle();\n  }\n\n  /**\n   * Soft assign chat card title if not present\n   *\n   * @internal\n   */\n  _setTitle() {\n    if (this.title) return;\n\n    // Speaker alias or speaker actor name\n    const user = this.speaker.alias || ChatMessage.getSpeakerActor(this.speaker)?.name;\n\n    switch (this.type) {\n      case \"item\": {\n        const item = this.itemSource;\n        if (user) this.title = `${item?.name} – ${user}`;\n        else this.title = `${item?.name}`;\n        break;\n      }\n      case \"action\": {\n        const item = this.itemSource;\n        const action = this.actionSource;\n\n        const title = `${item?.name} (${action?.name})`;\n        if (user) this.title = `${title} – ${user}`;\n        else this.title = title;\n        break;\n      }\n      case \"check\":\n        break;\n    }\n  }\n\n  /** @inheritDoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    /**\n     * An object containing Pathfinder specific rolls for this chat message,\n     * with a structure grouping them by their purpose.\n     *\n     * @type {object}\n     */\n    this.systemRolls = this.constructor._initRollObject(this.system.rolls ?? {});\n\n    // Compatibility shims\n    this.flags.pf1 ??= {};\n\n    const msg = this;\n\n    if (!(\"subject\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"subject\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.subject has been deprecated in favor of ChatMessagePF.system.subject\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return msg.system?.subject;\n        },\n      });\n    }\n\n    if (!(\"metadata\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"metadata\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.metadata has been deprecated in favor of ChatMessagePF.system\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return msg.system;\n        },\n      });\n    }\n\n    if (![\"item\", \"action\"].includes(this.type)) return;\n\n    if (!(\"identifiedInfo\" in this.flags.pf1)) {\n      Object.defineProperty(this.flags.pf1, \"identifiedInfo\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.flags.pf1.identifiedInfo has been deprecated in favor of ChatMessagePF.system\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return {\n            identified: msg.system.item?.identified ?? true,\n            name: msg.system.item?.name,\n            description: msg.system.item?.description,\n            actionName: msg.system.action?.name,\n            actionDescription: msg.system.action?.description,\n          };\n        },\n      });\n    }\n  }\n\n  /**\n   * Chat message frame context data.\n   *\n   * @bug Happens too late for hooks\n   * @override\n   * @param {object} context\n   *\n   * Synced with Foundry v12.331 (replaced by {@link renderHTML} override in v13)\n   */\n  async getHTML(options) {\n    const html = await super.getHTML(options);\n    switch (this.type) {\n      case \"check\":\n        html[0].classList.add(\"basic-check\", \"pf1\");\n        break;\n      case \"item\":\n        html[0].classList.add(\"item-card\", \"pf1\");\n        break;\n      case \"action\":\n        html[0].classList.add(\"action-card\", \"pf1\");\n        break;\n      default:\n        if (this.isRoll) html[0].classList.add(\"basic-roll\", \"pf1\");\n        break;\n    }\n\n    if (Hooks.events.renderChatMessagePF?.length) {\n      Hooks.callAll(\"renderChatMessagePF\", this, html[0]);\n    }\n\n    return html;\n  }\n\n  /**\n   * Render card content\n   *\n   * @bug Happens too late for hooks\n   * @override\n   * @param {object} options - Render options\n   * @returns {HTMLElement}\n   * Synced with v13.339\n   */\n  async renderHTML(options) {\n    const html = await super.renderHTML(options);\n    switch (this.type) {\n      case \"check\":\n        html.classList.add(\"basic-check\", \"pf1\");\n        break;\n      case \"item\":\n        html.classList.add(\"item-card\", \"pf1\");\n        break;\n      case \"action\":\n        html.classList.add(\"action-card\", \"pf1\");\n        break;\n      default:\n        if (this.isRoll) html.classList.add(\"basic-roll\", \"pf1\");\n        break;\n    }\n\n    if (Hooks.events.renderChatMessagePF?.length) {\n      Hooks.callAll(\"renderChatMessagePF\", this, html);\n    }\n\n    return html;\n  }\n\n  /**\n   * @override\n   * @param {boolean} source - Return source data\n   * @param {boolean} clean - Clean the source data of excess data\n   * @returns {object} - Raw data\n   */\n  toObject(source = true, clean = true) {\n    const data = super.toObject(source);\n\n    if (clean && data.system) this.system.constructor.pruneData?.(data.system);\n\n    return data;\n  }\n\n  /** @override */\n  _onCreate(data, options, userId) {\n    super._onCreate(data, options, userId);\n\n    const user = game.users.get(userId);\n\n    switch (this.type) {\n      case \"check\":\n        this._onCreateCheck(user);\n        break;\n    }\n  }\n\n  /**\n   * On Check Message creation\n   *\n   * @protected\n   * @param {User} user - User who created the message\n   */\n  _onCreateCheck(user) {\n    // Only active GM should proceed due to ownership of reference card\n    if (!game.users.activeGM?.isSelf) return;\n\n    const saveId = this.system.subject?.save;\n    if (!saveId) return;\n\n    const { scene: sceneId, token: tokenId } = this.speaker;\n    const token = game.scenes.get(sceneId)?.tokens.get(tokenId);\n    if (!token) return;\n\n    const refMsg = fromUuidSync(this.system.reference);\n    if (!refMsg) return;\n    if (!refMsg.system.targets?.length) return; // No targets\n\n    const check = this.rolls[0]?.total;\n    if (!Number.isFinite(check)) return;\n\n    // Record the rolled save in the card that prompted it\n    //const defenses = refMsg.getFlag(\"pf1\", \"targetDefense\") ?? {};\n    //const oldSave = foundry.utils.getProperty(defenses, uuid)?.save?.[saveId];\n    // This overwrites the save regardless who did it and why\n    // Valid rerolls, GM rolling, etc. make it not viable for enforcement\n    refMsg.setFlag(\"pf1\", \"targetDefense\", { [token.uuid]: { save: { [saveId]: check } } });\n  }\n}\n\n/**\n * Hack for {@link ChatMessagePF#renderHTML} and {@link ChatMessage.getHTML} happening too soon or too late for modules getting the render hook.\n */\nHooks.on(\"renderChatMessage\", function messageHookPriorityHack(msg, html) {\n  if (html instanceof jQuery) html = html[0]; // v12 compatibility\n\n  switch (this.type) {\n    case \"check\":\n      html.classList.add(\"basic-check\", \"pf1\");\n      break;\n    case \"item\":\n      html.classList.add(\"item-card\", \"pf1\");\n      break;\n    case \"action\":\n      html.classList.add(\"action-card\", \"pf1\");\n      break;\n    default:\n      if (this.isRoll) html.classList.add(\"basic-roll\", \"pf1\");\n      break;\n  }\n});\n","import { getSkipActionPrompt } from \"./settings.mjs\";\n\n/* -------------------------------------------- */\n\n/**\n * @internal\n * @param {string} combatantId - Combatant ID\n * @returns {Promise<Combatant>} - Result of {@link CombatantPF.duplicateWithData}\n */\nasync function duplicateCombatantInitiativeDialog(combatantId) {\n  /** @type {CombatantPF} */\n  const combatant = game.combat.combatants.get(combatantId);\n  if (!combatant) return void ui.notifications.warn(game.i18n.localize(\"PF1.Warning.NoCombatantFound\"));\n\n  const offset = await pf1.utils.dialog.getNumber({\n    title: `${game.i18n.localize(\"PF1.DuplicateInitiative\")}: ${combatant.name}`,\n    label: game.i18n.localize(\"PF1.InitiativeOffset\"),\n    initial: 0,\n    classes: [\"duplicate-initiative\"],\n  });\n\n  if (!Number.isFinite(offset)) return; // Cancelled\n\n  return combatant.duplicateWithData({ initiative: (combatant.initiative ?? 0) + offset });\n}\n\nfunction addCombatTrackerContextOptions(html, entries) {\n  entries.push({\n    name: \"PF1.DuplicateInitiative\",\n    icon: '<i class=\"fa-solid fa-dice-d20\"></i>',\n    callback: (li) => {\n      if (li instanceof jQuery) li = li[0]; // v12/v13 cross-compatibility\n      duplicateCombatantInitiativeDialog(li.dataset.combatantId);\n    },\n  });\n}\n\nHooks.on(\"getCombatTrackerEntryContext\", addCombatTrackerContextOptions); // v12\nHooks.on(\"getCombatTrackerContextOptions\", addCombatTrackerContextOptions); // v13\n\n/**\n * Combat manager extension\n */\nexport class CombatPF extends Combat {\n  /**\n   * @override\n   * @param {string[]} ids Combatant IDs to roll initiative for.\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.formula] - Formula override. Passed to {@link Combatant.getInitiativeRoll}\n   * @param {string} [options.d20] - d20 override. Passed to {@link Combatant.getInitiativeRoll}\n   * @param {string} [options.bonus=null] - Formula for bonus to initiative\n   * @param {string} [options.rollMode] - Roll mode override.\n   * @param {boolean} [options.updateTurn] - Adjust current turn if the new init would shift it\n   * @param {object} [options.messageOptions={}] - Additional data for created chat message\n   * @param {boolean} [options.skipDialog=null] - Skip roll dialog\n   * Synced with Foundry v12.331\n   */\n  async rollInitiative(\n    ids,\n    { formula = null, d20, bonus = null, rollMode, updateTurn = true, messageOptions = {}, skipDialog = null } = {}\n  ) {\n    skipDialog ??= getSkipActionPrompt();\n    // Structure input data\n    ids = Array.isArray(ids) ? ids : [ids];\n\n    const currentId = this.combatant?.id;\n\n    // Shift rollmode to foundry standard parameter\n    if (rollMode) messageOptions.rollMode = rollMode;\n    rollMode = messageOptions.rollMode || game.settings.get(\"core\", \"rollMode\");\n\n    const roller = ids.length == 1 ? this.combatants.get(ids[0]) : null;\n    const rollerName = roller?.name ?? null;\n\n    // Show initiative dialog\n    if (!skipDialog) {\n      let check = true;\n      if (roller) {\n        const opts = roller.actor?.getInitiativeOptions?.();\n        if (opts.check === false) check = false;\n      }\n\n      const dialogData = await this.constructor.showInitiativeDialog({\n        d20,\n        check,\n        bonus,\n        rollMode,\n        name: rollerName,\n      });\n      if (!dialogData) return this;\n\n      rollMode = dialogData.rollMode;\n      messageOptions.rollMode = rollMode;\n      bonus = dialogData.bonus || \"\";\n      d20 = dialogData.d20;\n    }\n\n    // Iterate over Combatants, performing an initiative roll for each\n    const updates = [];\n    const messages = [];\n\n    for (const [i, id] of ids.entries()) {\n      // Get Combatant data (non-strictly)\n      /** @type {CombatantPF} */\n      const combatant = this.combatants.get(id);\n      if (!combatant?.isOwner) continue;\n\n      // Produce an initiative roll for the Combatant\n      const roll = combatant.getInitiativeRoll(formula, d20, bonus);\n      roll.options.flavor = game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.Initiative\") });\n\n      // Produce an initiative roll for the Combatant\n      await roll.evaluate();\n      if (roll.err) ui.notifications.warn(roll.err.message);\n\n      updates.push({ _id: id, initiative: roll.total });\n\n      // Per-combatant roll mode\n      let cRollMode = rollMode;\n\n      // Hide initiative rolls for hidden combatants, unless explicit roll mode was requested\n      const isHidden = combatant.token?.hidden || combatant.hidden;\n      if (isHidden && !messageOptions.rollMode && [\"roll\", CONST.DICE_ROLL_MODES.PUBLIC].includes(cRollMode)) {\n        cRollMode = messageOptions.rollMode || CONST.DICE_ROLL_MODES.PRIVATE;\n      }\n\n      const properties = [];\n      const notes = (await combatant.actor?.getContextNotesParsed?.(\"init\")) ?? [];\n      if (notes.length) {\n        properties.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n      }\n\n      // Create card template data\n      const templateData = {\n        formula: roll.formula,\n        tooltip: await roll.getTooltip(),\n        total: roll.total,\n        properties,\n      };\n\n      // Create base chat card data\n      let chatData = {\n        speaker: ChatMessage.implementation.getSpeaker({\n          actor: combatant.actor,\n          token: combatant.token,\n          alias: combatant.name, // Combatant name can differ from token name, so alias is needed here\n        }),\n        ...messageOptions,\n      };\n\n      chatData.rollMode ||= cRollMode;\n\n      // Mimic core Foundry data\n      foundry.utils.setProperty(chatData, \"flags.core.initiativeRoll\", true);\n\n      // Generate message proper via D20RollPF\n      chatData = await roll.toMessage(chatData, {\n        create: false,\n        rollMode: cRollMode,\n        subject: { core: \"init\" },\n        chatTemplateData: templateData,\n      });\n\n      if (i > 0) chatData.sound = null; // Only play 1 sound for the whole set\n      messages.push(chatData);\n    }\n\n    if (!updates.length) return this;\n\n    // Update multiple combatants\n    await this.updateEmbeddedDocuments(\"Combatant\", updates);\n\n    // Ensure the turn order remains with the same combatant\n    if (updateTurn && currentId) {\n      await this.update({ turn: this.turns.findIndex((t) => t.id === currentId) });\n    }\n\n    // Create multiple chat messages\n    await ChatMessage.implementation.create(messages);\n\n    return this;\n  }\n\n  /**\n   * @param {object} [options] - Additional options\n   * @param {string} [options.d20] Formula override\n   * @param {boolean} [options.check=true] - If false, no base d20 check is provided\n   * @param {string} [options.bonus] Bonus formula override\n   * @param {string} options.name Name of the roller\n   * @returns {Promise<object>} - Result\n   */\n  static async showInitiativeDialog({ d20 = null, check = true, bonus = null, name } = {}) {\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n\n    const template = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n    const dialogData = { d20, check, bonus, rollMode, rollModes: CONFIG.Dice.rollModes };\n\n    // Show dialog\n    // TODO: Use D20RollPF's prompt instead\n    return foundry.applications.api.DialogV2.wait({\n      window: {\n        icon: \"fa-solid fa-dice-d20\",\n        title:\n          (name ? name + \" – \" : \"\") + game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.Initiative\") }),\n      },\n      position: { width: 420 },\n      content: await renderTemplate(template, dialogData),\n      buttons: [\n        {\n          action: \"roll\",\n          default: true,\n          icon: \"fa-solid fa-dice-d20\",\n          label: game.i18n.localize(\"PF1.Roll\"),\n          callback: (event, button, html) => {\n            if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n            return new FormDataExtended(html.querySelector(\"form\")).object;\n          },\n        },\n      ],\n      close: () => null,\n      classes: [\"pf1-v2\", \"roll-prompt\", \"roll-initiative\"],\n      subject: { core: \"init\" },\n      rejectClose: false,\n    });\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {options} context - Context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.turn !== undefined || changed.round !== undefined) {\n      // Cache current world time here since actual time update can happen at random time in the future due to async code.\n      context.pf1 ??= {};\n      context.pf1.worldTime = game.time.worldTime;\n      this._onNewTurn(changed, context, userId);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    if (\"turn\" in changed || \"round\" in changed) {\n      // Record origin turn and round\n      context.pf1 ??= {};\n      context.pf1.from = { turn: this.turn, round: this.round };\n    }\n  }\n\n  /**\n   * New turn handling.\n   *\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   * @private\n   */\n  async _onNewTurn(changed, context, userId) {\n    if (!this._isForwardTime(changed, context)) return;\n\n    if (context.pf1?.from) {\n      const skipped = this._detectSkippedTurns(context.pf1.from, context);\n\n      if (game.users.activeGM?.isSelf) {\n        this._handleSkippedTurns(skipped, context);\n      }\n\n      const previous = this.turns.at(this.turn - 1);\n      if (!skipped.has(previous)) this._processEndTurn(context.pf1?.from, context);\n    }\n\n    this._processTurnStart(changed, context, userId);\n\n    this._processInitiative(context);\n  }\n\n  _isForwardTime(changed, context) {\n    // Non-UI turn progression does not have context.direction present to detect this otherwise\n    const t0 = context.pf1.from.turn,\n      r0 = context.pf1.from.round,\n      t1 = changed.turn ?? t0,\n      r1 = changed.round ?? r0,\n      rd = r1 - r0, // round delta\n      td = t1 - t0; // turn delta\n\n    if (rd < 0) return false;\n    else if (rd == 0 && td <= 0) return false;\n    return true;\n  }\n\n  /**\n   * Determine skipped turns\n   *\n   * @internal\n   * @param {object} from - Origin combat time frame\n   * @param {number} from.turn - From turn\n   * @param {number} from.round - From round\n   * @param {object} context - Update context\n   * @returns {Set<Combatant>} - Set of combatant IDs whose turn was skipped\n   */\n  _detectSkippedTurns({ turn, round } = {}, context) {\n    const roundChange = this.round !== round;\n\n    const skipped = new Set();\n\n    // No combatants skipped\n    if (!roundChange && turn + 1 === this.turn) return skipped;\n\n    // Determine skipped combatants\n    for (const [index, combatant] of this.turns.entries()) {\n      // Seeking first, not actually skipped\n      if (!roundChange && index <= turn) continue;\n      // Skipped\n      else if (index < this.turn) skipped.add(combatant);\n      // Skipped (usually via nextRound)\n      else if (roundChange && index > turn) skipped.add(combatant);\n    }\n\n    Hooks.callAll(\"pf1CombatTurnSkip\", this, skipped, context);\n\n    return skipped;\n  }\n\n  /**\n   * Handle effects of skipped turns.\n   *\n   * @internal\n   * @param {Set<Combatant>} skipped - Combatant IDs of those whose turn was skipped.\n   * @param {object} context - Combat update context\n   */\n  _handleSkippedTurns(skipped, context) {\n    const currentTurn = this.turn;\n    const event = \"turnEnd\";\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    // Expire effects for skipped combatants\n    for (const combatant of skipped) {\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      // Adjust expiration time for those who come after in initiative (their expiration was for previous round)\n      const turn = this.turns.findIndex((c) => c === combatant);\n      const turnTimeOffset = timeOffset + (turn > currentTurn) ? -CONFIG.time.roundTime : 0;\n\n      actor.expireActiveEffects?.({ timeOffset: timeOffset + turnTimeOffset, worldTime, combat: this, event });\n    }\n  }\n\n  /**\n   * Handle end of turn\n   *\n   * @internal\n   * @param {object} originTime - Origin time frame\n   * @param {number} originTime.turn - Turn that ended\n   * @param {number} originTime.round - Round on which the turn ended\n   * @param {object} context - Context\n   */\n  async _processEndTurn({ turn, round } = {}, context = {}) {\n    const previous = this.turns.at(turn);\n    const actor = previous?.actor;\n    if (!actor) return;\n\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnEnd\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process current combatant: expire active effects & buffs.\n   *\n   * @param {object} changed Update data\n   * @param {options} context Context options\n   */\n  async _processTurnStart(changed, context) {\n    const actor = this.combatant?.actor;\n    if (!actor) return;\n\n    // Attempt to perform expiration on owning active user\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnStart\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n\n    try {\n      await actor.rechargeItems?.({ period: \"round\", exact: true });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process end of durations based on initiative.\n   *\n   * Only active GM processes these to avoid conflicts and logic bloat.\n   *\n   * @internal\n   * @param {object} [context] - Update context\n   */\n  _processInitiative(context = {}) {\n    if (!game.users.activeGM?.isSelf) return;\n\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n    const timeOffset = context.advanceTime ?? 0;\n\n    const initiative = this.initiative;\n    for (const combatant of this.combatants) {\n      if (combatant.isDefeated) continue;\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      actor.expireActiveEffects?.({ combat: this, initiative, timeOffset, worldTime });\n    }\n  }\n\n  _onDelete(options, userId) {\n    super._onDelete(options, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Show experience distributor after combat\n    if (!this.started) return;\n    const xpCfg = game.settings.get(\"pf1\", \"experienceConfig\");\n    if (xpCfg.disable) return;\n\n    const openUI = xpCfg.openDistributor;\n    const skipPrompt = pf1.documents.settings.getSkipActionPrompt();\n    if (openUI ^ skipPrompt) {\n      pf1.applications.ExperienceDistributor.fromCombat(this);\n    }\n  }\n\n  /**\n   * Get current initiative.\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.combatant?.initiative;\n  }\n}\n","/**\n * Combatant extension.\n */\nexport class CombatantPF extends Combatant {\n  /**\n   * Combat tracker resource update.\n   *\n   * Required to deal with 0 values disappearing with core implementation\n   *\n   * @override\n   * @returns {*} Resource value.\n   *\n   * Synchronized with Foundry 12.331\n   */\n  updateResource() {\n    if (!this.actor || !this.combat) return (this.resource = null);\n    return (this.resource = foundry.utils.getProperty(this.actor.system, this.parent.settings.resource) ?? null);\n  }\n\n  /**\n   * Duplicate combatant with added data.\n   *\n   * @param {object} data - Override data\n   * @param {object} context - Creation context\n   * @returns {Promise<Combatant>} - Created combatant\n   */\n  duplicateWithData(data = {}, context = {}) {\n    console.debug(\"Duplicating combatant:\", this);\n    context.parent ??= this.combat;\n    return this.constructor.create(foundry.utils.mergeObject(this.toObject(), data), context);\n  }\n\n  /**\n   * Get unevaluated initiative roll instance.\n   *\n   * @override\n   * @param {string} [formula] Initiative formula override\n   * @param {string} [d20=null] D20 override. Non-standard option.\n   * @param {number} [bonus=null] Bonus to initiative. Non-standard option.\n   * @returns {pf1.dice.D20RollPF} Initiative roll instance\n   *\n   * Synchronized with Foundry VTT 12.331\n   */\n  getInitiativeRoll(formula, d20 = null, bonus = null) {\n    const options = this.actor?.getInitiativeOptions?.() ?? {};\n\n    formula ||= this._getInitiativeFormula(d20);\n    const rollData = this.actor?.getRollData() || {};\n    if (bonus) {\n      rollData.bonus = bonus;\n      formula += \" + @bonus\";\n    }\n\n    return new pf1.dice.D20RollPF(formula, rollData, options);\n  }\n\n  /**\n   * Override the default Initiative formula to customize special behaviors of the game system.\n   *\n   * Apply tiebreaker if desired\n   *\n   * See Combat._getInitiativeFormula for more detail.\n   *\n   * @override\n   * @todo Build proper formula\n   * @param {string} [d20=pf1.dice.D20RollPF.standardRoll] Default check roll\n   * @returns {string} Initiative formula\n   *\n   * Synchronized with Foundry 12.331\n   */\n  _getInitiativeFormula(d20) {\n    const defaultParts = [];\n\n    const options = this.actor?.getInitiativeOptions?.() ?? {};\n    if (options.check !== false) {\n      defaultParts.push(d20 || pf1.dice.D20RollPF.standardRoll);\n    }\n    defaultParts.push(`@attributes.init.total[${game.i18n.localize(\"PF1.Initiative\")}]`);\n\n    const actor = this.actor;\n    if (actor && game.settings.get(\"pf1\", \"initiativeTiebreaker\"))\n      defaultParts.push(`(@attributes.init.total / 100)[${game.i18n.localize(\"PF1.Tiebreaker\")}]`);\n    const parts = CONFIG.Combat.initiative.formula ? CONFIG.Combat.initiative.formula.split(/\\s*\\+\\s*/) : defaultParts;\n    if (!actor) return parts[0] || \"0\";\n    return parts.filter((p) => !!p).join(\" + \");\n  }\n}\n","/**\n * Transforms a key input into an array of objects for the keybinding API\n *\n * @param {string} key - A key string\n * @returns {{\"key\": string}[]} Keybinding objects\n */\nconst getLeftRight = (key) => [`${key}Left`, `${key}Right`].map((k) => ({ key: k }));\n\nconst SHIFT_KEYS = getLeftRight(\"Shift\");\nconst CTRL_KEYS = getLeftRight(\"Control\");\n\n/**\n * Registers the system's keybindings\n *\n * @internal\n */\nexport const registerSystemControls = () => {\n  game.keybindings.register(\"pf1\", \"skipConfirmPrompt\", {\n    name: \"PF1.KEYBINDINGS.SkipConfirmPrompt.Name\",\n    uneditable: SHIFT_KEYS,\n    onDown: () => {\n      pf1.skipConfirmPrompt = true;\n    },\n    onUp: () => {\n      pf1.skipConfirmPrompt = false;\n    },\n  });\n};\n","/**\n * Token Document extension\n */\nexport class TokenDocumentPF extends TokenDocument {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    this._preCreateSetSize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.recursive === false) return;\n\n    const flags = changed.flags?.pf1;\n    if (flags) {\n      // Delete flags instead of turning them false\n      const deleteFlags = [\"staticSize\", \"disableLowLight\", \"customVisionRules\"];\n      for (const flag of deleteFlags) {\n        if (flags[flag] === false) {\n          flags[`-=${flag}`] = null;\n          delete flags[flag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle actor size during token creation.\n   *\n   * TODO: This has overlapping functionality with Actor.getTokenDocument() that needs to be unified\n   */\n  _preCreateSetSize() {\n    if (!this.actor) return;\n\n    // Apply token size\n    if (this.getFlag(\"pf1\", \"staticSize\")) return;\n    const sizeKey = this.actor.system.traits?.size?.base;\n    const sizeConf = pf1.config.tokenSizes[sizeKey];\n    if (!sizeConf) return;\n\n    this.updateSource({\n      width: sizeConf.w,\n      height: sizeConf.h,\n      texture: {\n        scaleX: sizeConf.scale * this.actor.prototypeToken.texture.scaleX,\n        scaleY: sizeConf.scale * this.actor.prototypeToken.texture.scaleY,\n      },\n    });\n  }\n\n  /**\n   * Called by getTrackedAttributes() when not dealing with data models.\n   *\n   * @override\n   */\n  static _getTrackedAttributesFromObject(data, path = []) {\n    if (path[0] === \"conditions\") return { bar: [], value: [] };\n\n    const attr = super._getTrackedAttributesFromObject(data, path);\n\n    if (path[0] === \"attributes\") {\n      if (path.length === 1) {\n        // These are necessary for token config inclusion which does not delve into hp, vigor or wounds for some reason\n        // This has no effect on combat tracker resources for some reason\n        attr.value.push(\n          [\"attributes\", \"hp\", \"value\"],\n          [\"attributes\", \"hp\", \"offset\"],\n          [\"attributes\", \"hp\", \"max\"],\n          [\"attributes\", \"hp\", \"temp\"],\n          [\"attributes\", \"hp\", \"nonlethal\"],\n          [\"attributes\", \"vigor\", \"value\"],\n          [\"attributes\", \"vigor\", \"offset\"],\n          [\"attributes\", \"vigor\", \"max\"],\n          [\"attributes\", \"vigor\", \"temp\"],\n          [\"attributes\", \"wounds\", \"value\"],\n          [\"attributes\", \"wounds\", \"offset\"],\n          [\"attributes\", \"wounds\", \"max\"]\n        );\n      }\n\n      const hpPart = path[1];\n      // Needed by combat tracker and token resources for consistent availability of bars\n      if (path.length === 2 && [\"hp\", \"wounds\", \"vigor\"].includes(hpPart)) {\n        attr.value.push(\n          [\"attributes\", hpPart, \"value\"],\n          [\"attributes\", hpPart, \"max\"],\n          [\"attributes\", hpPart, \"offset\"]\n        );\n        attr.bar.push([\"attributes\", hpPart]);\n      }\n    }\n\n    // If data is missing entirely, AC will not be listed but the others will\n    if (!data) {\n      attr.value.push([\"attributes\", \"ac\", \"normal\", \"total\"]);\n    }\n\n    return attr;\n  }\n\n  /**\n   * Override to add in HP for vehicles.\n   *\n   * @override\n   */\n  static _getTrackedAttributesFromSchema(schema, path = []) {\n    const attr = super._getTrackedAttributesFromSchema(schema, path);\n\n    if (path[0] === \"attributes\") {\n      if (path.length === 2 && path[1] === \"hp\") {\n        // Add derived values\n        attr.value.push([\"attributes\", \"hp\", \"value\"], [\"attributes\", \"hp\", \"max\"]);\n        attr.bar.push([\"attributes\", \"hp\"]);\n      }\n    }\n\n    return attr;\n  }\n\n  /**\n   * Hijack Token health bar rendering to include temporary and temp-max health in the bar display\n   *\n   * @override\n   * @param {string} barName - Bar name\n   * @param {object} [options] - Additional options\n   * @param {string} [options.alternative] - Alt bar path to use\n   * @returns {object|null} - Attribute to be displayed if any\n   * Synced with Foundry v12.331\n   */\n  getBarAttribute(barName, { alternative = null } = {}) {\n    let data;\n    try {\n      data = super.getBarAttribute(barName, { alternative });\n    } catch {\n      data = null;\n    }\n\n    // Make resources editable\n    if (data?.attribute.startsWith(\"resources.\")) data.editable = true;\n\n    const offsetAttributes = [\"attributes.hp\", \"attributes.wounds\", \"attributes.vigor\"];\n    if (offsetAttributes.includes(data?.attribute)) {\n      // Add temp HP on top\n      const temp = foundry.utils.getProperty(this.actor?.system, data.attribute + \".temp\") || 0;\n      data.value += temp;\n      // Allow editing\n      data.editable = true;\n    }\n\n    return data;\n  }\n\n  prepareBaseData() {\n    this._syncSenses();\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Synchronize senses from actor.\n   */\n  _syncSenses() {\n    if (!this.actorId || !this.actor) return;\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return;\n    if (this.getFlag(\"pf1\", \"customVisionRules\")) return;\n\n    this.detectionModes = [];\n\n    // Get base range from source data\n    const baseRange = this._source.sight.range;\n\n    this.sight.visionMode = \"basic\";\n\n    // v13 has the static DetectionMode.BASIC_MODE_ID missing\n    // (foundry.canvas?.perception?.DetectionMode ?? DetectionMode).BASIC_MODE_ID;\n    const BASIC_MODE_ID = \"basicSight\";\n\n    // Basic detection\n    const basicMode = { id: BASIC_MODE_ID, enabled: true, range: baseRange };\n    this.detectionModes.push(basicMode);\n    // Light perception\n    const lightPerception = { id: \"lightPerception\", enabled: true, range: Infinity };\n    this.detectionModes.push(lightPerception);\n\n    const senses = this.actor?.system?.traits?.senses ?? {};\n\n    const convertDistance = (d) => pf1.utils.convertDistance(d)[0];\n\n    // Darkvision, also includes blindsight until we have a better representation\n    const darkvision = senses.dv?.total ?? 0;\n    const blindsight = senses.bs?.total ?? 0;\n    const blackAndWhite = Math.max(darkvision, blindsight);\n\n    if (blackAndWhite > 0) {\n      this.sight.visionMode = \"darkvision\";\n      // Upgrade basic mode range if greater\n      basicMode.range = Math.max(baseRange, convertDistance(blackAndWhite));\n    }\n\n    // -----------------------\n\n    // See invisibility\n    if (senses.si) {\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: basicMode.range });\n    }\n\n    // True seeing\n    const trueseeing = senses.tr?.total ?? 0;\n    if (trueseeing > 0) {\n      // Add normal vision within range of true seeing\n      const trr = convertDistance(trueseeing);\n      basicMode.range = Math.max(trr, basicMode.range);\n      if (trueseeing > blackAndWhite) this.sight.visionMode = \"basic\";\n\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: trr, limited: true });\n    }\n\n    this.sight.range = Math.max(baseRange, basicMode.range);\n\n    // Tremor sense\n    if (senses.ts?.total) {\n      this.detectionModes.push({ id: \"feelTremor\", enabled: true, range: convertDistance(senses.ts?.total) });\n    }\n\n    // Lifesense\n    if (senses.ls?.total) {\n      this.detectionModes.push({ id: \"lifesense\", enabled: true, range: convertDistance(senses.ls?.total) });\n    }\n\n    // Blind sense\n    if (senses.bse?.total) {\n      this.detectionModes.push({ id: \"blindSense\", enabled: true, range: convertDistance(senses.bse?.total) });\n    }\n\n    // Blind sight\n    if (senses.bs?.total) {\n      this.detectionModes.push({ id: \"blindSight\", enabled: true, range: convertDistance(senses.bs?.total) });\n    }\n\n    // Sort detection modes\n    this.detectionModes.sort(this.constructor._sortDetectionModes);\n\n    // Update vision advanced fields with current mode's defaults\n    const visionDefaults = CONFIG.Canvas.visionModes[this.sight.visionMode]?.vision?.defaults || {};\n    for (const fieldName of [\"attenuation\", \"brightness\", \"saturation\", \"contrast\"]) {\n      if (fieldName in visionDefaults) {\n        this.sight[fieldName] = visionDefaults[fieldName];\n      }\n    }\n  }\n\n  static _sortDetectionModes(a, b) {\n    const _detectMode = foundry.canvas?.perception?.DetectionMode ?? DetectionMode; // v12/v13 noise reduction\n\n    // Favor basic sight\n    if (a.id === _detectMode.BASIC_MODE_ID) return -1;\n    if (b.id === _detectMode.BASIC_MODE_ID) return 1;\n\n    // Light perception should be next\n    if (a.id === \"lightPerception\") return -1;\n    if (b.id === \"lightPerception\") return 1;\n\n    const src = { a: CONFIG.Canvas.detectionModes[a.id], b: CONFIG.Canvas.detectionModes[b.id] };\n    return (src.a?.constructor.PRIORITY ?? 0) - (src.b?.constructor.PRIORITY ?? 0);\n  }\n\n  /**\n   * Allowed movement modes.\n   *\n   * @todo\n   * - Hook this up in token HUD movement action selection.\n   * @remarks\n   * - Returns null if there's no restrictions (e.g. no actor).\n   *\n   * @experimental\n   * @type {Set<string>|null}\n   */\n  get allowedMovement() {\n    const actor = this.actor;\n    if (!actor) return null;\n\n    const movement = new Set([\"walk\", \"crawl\", \"swim\", \"climb\"]);\n\n    const isProne = actor.statuses.has(\"prone\");\n\n    // Prone modification to movement\n    if (isProne) {\n      movement.delete(\"walk\");\n      movement.delete(\"swim\");\n      movement.delete(\"climb\");\n    }\n    // Movements available if not prone\n    else {\n      const movementModes = [\"fly\", \"burrow\"];\n      for (const movementId of movementModes) {\n        if (actor.system.attributes?.speed?.[movementId]?.total) movement.add(movementId);\n      }\n    }\n\n    return movement;\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * @param {pf1.documents.actor.ActorPF} actor - Actor to apply changes to\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simple] - Process only simple changes\n */\nexport const applyChanges = (actor, { simple = false } = {}) => {\n  actor.changeOverrides = {};\n  /** @type {ItemChange[]} */\n  const changes = Array.from(actor.changes).filter((change) => {\n    const changeTargetData = pf1.config.buffTargets[change.target];\n    return !!changeTargetData?.simple === simple;\n  });\n\n  const { targets, types } = getSortChangePriority(actor);\n  const _sortChanges = (a, b) => {\n    const targetA = targets.indexOf(a.target);\n    const targetB = targets.indexOf(b.target);\n    const typeA = types.indexOf(a.type);\n    const typeB = types.indexOf(b.type);\n    const prioA = a.priority ?? 0;\n    const prioB = b.priority ?? 0;\n\n    // TODO: Improve ordering logic\n    // Currently priority overrides all other considerations, making priority become its own separate processing queue\n    // Any alteration of this can however completely break how users use changes.\n    return prioB - prioA || targetA - targetB || typeA - typeB;\n  };\n\n  // Organize changes by priority\n  changes.sort((a, b) => _sortChanges(a, b));\n\n  actor.changeFlags.immuneToMorale = actor.system.traits?.ci?.total?.has(\"moraleEffects\") || false;\n\n  // Get items with change flags\n  const chflagItems = actor.items.filter((i) => i.isActive && i.hasChanges && i.system.changeFlags);\n\n  // Parse change flags\n  for (const i of chflagItems) {\n    if (!i.system.changeFlags) continue;\n    for (const [k, v] of Object.entries(i.system.changeFlags)) {\n      if (v !== true) continue;\n      actor.changeFlags[k] = true;\n      if (k !== \"loseDexToAC\") continue;\n\n      for (const k2 of [\"normal\", \"touch\"]) {\n        getSourceInfo(actor.sourceInfo, `system.attributes.ac.${k2}.total`).negative.push({\n          value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n          name: i.name,\n          type: i.type,\n        });\n      }\n      getSourceInfo(actor.sourceInfo, \"system.attributes.cmd.total\").negative.push({\n        value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n        name: i.name,\n        type: i.type,\n      });\n    }\n  }\n  if (!simple) actor.refreshDerivedData();\n\n  // Determine continuous changes\n  const continuousChanges = changes.filter((o) => o.continuous === true);\n\n  // Apply all changes\n  for (const change of changes) {\n    if (actor.changeFlags.immuneToMorale && change.type === \"morale\") continue;\n\n    const flats = change.getTargets(actor);\n    for (const f of flats) {\n      actor.changeOverrides[f] ??= createOverride();\n    }\n\n    change._safeApplyChange(actor, flats, { applySourceInfo: false });\n\n    // Apply continuous changes\n    for (const cc of continuousChanges) {\n      if (cc === change) continue;\n      const flats = cc.getTargets(actor);\n      for (const f of flats) {\n        if (!actor.changeOverrides[f]) actor.changeOverrides[f] = createOverride();\n      }\n\n      cc._safeApplyChange(actor, flats, { applySourceInfo: false });\n    }\n\n    if (!simple) actor.refreshDerivedData();\n  }\n\n  // Apply source info for changes\n  for (const change of changes) {\n    change.applySourceInfo(actor);\n  }\n};\n\n/**\n * Create override structure\n *\n * @returns {object} - Override base structure\n */\nfunction createOverride() {\n  const result = {\n    add: {},\n    set: {},\n  };\n\n  for (const k of Object.keys(pf1.config.bonusTypes)) {\n    result.add[k] = null;\n    result.set[k] = null;\n  }\n\n  return result;\n}\n\nconst getSortChangePriority = (actor) => {\n  const skillBasePrio = pf1.config.buffTargets.skills.sort + 100;\n  /** @type {[string, {sort: number}][]} */\n  const skillTargets = actor._skillTargets.map((target, index) => [target, { sort: skillBasePrio + index * 10 }]);\n  const buffTargets = Object.entries(pf1.config.buffTargets);\n  const targets = [...skillTargets, ...buffTargets]\n    .sort(([, { sort: aSort }], [, { sort: bSort }]) => aSort - bSort)\n    .map(([target]) => target);\n\n  return {\n    targets,\n    types: Object.keys(pf1.config.bonusTypes),\n  };\n};\n\n/**\n * @param {Actor} actor - Actor to get data from\n * @param {BuffTarget} target Target (e.g. \"ac\" or \"skills\")\n * @param {ModifierType} modifierType Type (e.g. \"profane\", \"untyped\", or \"dodge\"). If undefined, all valid targets will be returned.\n * @param {number} [value]  Value, if known\n * @returns {Array<string>} Array of target paths to modify\n */\nexport function getChangeFlat(actor, target, modifierType, value) {\n  if (target == null) return [];\n\n  const system = actor.system;\n  /** @type {string[]} */\n  const result = [];\n\n  switch (target) {\n    case \"mhp\":\n      result.push(\"system.attributes.hp.max\");\n      break;\n    case \"wounds\":\n      result.push(\"system.attributes.wounds.max\");\n      break;\n    case \"woundThreshold\":\n      result.push(\"system.attributes.wounds.threshold\");\n      break;\n    case \"vigor\":\n      result.push(\"system.attributes.vigor.max\");\n      break;\n    case \"str\":\n    case \"dex\":\n    case \"con\":\n    case \"int\":\n    case \"wis\":\n    case \"cha\":\n      if ([\"base\", \"untypedPerm\"].includes(modifierType)) {\n        result.push(`system.abilities.${target}.base`);\n      }\n      result.push(`system.abilities.${target}.total`, `system.abilities.${target}.undrained`);\n      break;\n    case \"strPen\":\n    case \"dexPen\":\n    case \"conPen\":\n    case \"intPen\":\n    case \"wisPen\":\n    case \"chaPen\": {\n      const ablKey = target.slice(0, -3);\n      result.push(`system.abilities.${ablKey}.penalty`);\n      break;\n    }\n    case \"strMod\":\n    case \"dexMod\":\n    case \"conMod\":\n    case \"intMod\":\n    case \"wisMod\":\n    case \"chaMod\":\n      result.push(`system.abilities.${target.slice(0, 3)}.mod`);\n      break;\n    case \"carryStr\":\n      result.push(\"system.details.carryCapacity.bonus.total\");\n      break;\n    case \"carryMult\":\n      result.push(\"system.details.carryCapacity.multiplier.total\");\n      break;\n    case \"size\":\n      result.push(\"system.traits.size.value\");\n      break;\n    case \"ageCategory\":\n      result.push(\"system.traits.ageCategory.value\");\n      result.push(\"system.traits.ageCategory.mental\");\n      result.push(\"system.traits.ageCategory.physical\");\n      break;\n    case \"ageCategoryMental\":\n      result.push(\"system.traits.ageCategory.mental\");\n      break;\n    case \"ageCategoryPhysical\":\n      result.push(\"system.traits.ageCategory.physical\");\n      break;\n    case \"ac\":\n      result.push(\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\");\n\n      switch (modifierType) {\n        case \"dodge\":\n        case \"haste\":\n          result.push(\"system.attributes.cmd.total\");\n          break;\n        case \"deflection\":\n        case \"circumstance\":\n        case \"insight\":\n        case \"luck\":\n        case \"morale\":\n        case \"profane\":\n        case \"sacred\":\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        case undefined:\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        default:\n          result.push(\"system.attributes.ac.flatFooted.total\");\n          // Other penalties also apply to CMD, but not bonuses\n          if (value < 0) {\n            result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n          }\n          break;\n      }\n      break;\n    case \"aac\": {\n      const targets = [\"system.ac.normal.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.normal.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.normal.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.normal.base\", \"system.ac.normal.enh\", \"system.ac.normal.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.normal.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"sac\": {\n      const targets = [\"system.ac.shield.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.shield.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.shield.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.shield.base\", \"system.ac.shield.enh\", \"system.ac.shield.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.shield.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"nac\": {\n      const targets = [\"system.ac.natural.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.natural.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.natural.enh\");\n          break;\n        case undefined:\n          targets.push(\"system.ac.natural.base\", \"system.ac.natural.enh\", \"system.ac.natural.misc\");\n          break;\n        default:\n          targets.push(\"system.ac.natural.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"tac\":\n      result.push(\"system.attributes.ac.touch.total\");\n      break;\n    case \"ffac\":\n      result.push(\"system.attributes.ac.flatFooted.total\");\n      break;\n    case \"ffcmd\":\n      result.push(\"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"bab\":\n      result.push(\"system.attributes.bab.total\");\n      break;\n    case \"~attackCore\":\n      result.push(\"system.attributes.attack.shared\");\n      break;\n    case \"attack\":\n      result.push(\"system.attributes.attack.general\");\n      break;\n    case \"wattack\":\n      result.push(\"system.attributes.attack.weapon\");\n      break;\n    case \"sattack\":\n      result.push(\"system.attributes.attack.spell\");\n      break;\n    case \"mattack\":\n      result.push(\"system.attributes.attack.melee\");\n      break;\n    case \"nattack\":\n      result.push(\"system.attributes.attack.natural\");\n      break;\n    case \"rattack\":\n      result.push(\"system.attributes.attack.ranged\");\n      break;\n    case \"tattack\":\n      result.push(\"system.attributes.attack.thrown\");\n      break;\n    case \"critConfirm\":\n      result.push(\"system.attributes.attack.critConfirm\");\n      break;\n    case \"allSavingThrows\":\n      result.push(\n        \"system.attributes.savingThrows.fort.total\",\n        \"system.attributes.savingThrows.ref.total\",\n        \"system.attributes.savingThrows.will.total\"\n      );\n      break;\n    case \"fort\":\n      result.push(\"system.attributes.savingThrows.fort.total\");\n      break;\n    case \"ref\":\n      result.push(\"system.attributes.savingThrows.ref.total\");\n      break;\n    case \"will\":\n      result.push(\"system.attributes.savingThrows.will.total\");\n      break;\n    case \"vehicleSave\":\n      result.push(\"system.attributes.savingThrows.save.total\");\n      break;\n    case \"skills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const b of Object.keys(skl.subSkills)) {\n            result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"unskills\":\n      // Untrained skills\n      for (const [skillId, skill] of Object.entries(system.skills)) {\n        if (skill == null) continue;\n        for (const [subSkillId, subskill] of Object.entries(skill.subSkills ?? {})) {\n          if (subskill.rank > 0) continue;\n          result.push(`system.skills.${skillId}.subSkills.${subSkillId}.mod`);\n        }\n        if (skill.rank > 0) continue;\n        result.push(`system.skills.${skillId}.mod`);\n      }\n      break;\n    case \"reach\":\n      // Natural reach\n      result.push(\"system.traits.reach.total.melee\");\n      result.push(\"system.traits.reach.total.reach\");\n      break;\n    case \"strSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"str\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"str\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"dexSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"dex\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"dex\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"conSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"con\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"con\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"intSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"int\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"int\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"wisSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"wis\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"wis\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"chaSkills\":\n      for (const [a, skl] of Object.entries(system.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"cha\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"cha\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"allChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        \"system.abilities.dex.checkMod\",\n        \"system.abilities.con.checkMod\",\n        \"system.abilities.int.checkMod\",\n        \"system.abilities.wis.checkMod\",\n        \"system.abilities.cha.checkMod\",\n        ...(system.attributes?.init?.ability ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"strChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        ...(system.attributes?.init?.ability === \"str\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"dexChecks\":\n      result.push(\n        \"system.abilities.dex.checkMod\",\n        ...(system.attributes?.init?.ability === \"dex\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"conChecks\":\n      result.push(\n        \"system.abilities.con.checkMod\",\n        ...(system.attributes?.init?.ability === \"con\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"intChecks\":\n      result.push(\n        \"system.abilities.int.checkMod\",\n        ...(system.attributes?.init?.ability === \"int\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"wisChecks\":\n      result.push(\n        \"system.abilities.wis.checkMod\",\n        ...(system.attributes?.init?.ability === \"wis\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"chaChecks\":\n      result.push(\n        \"system.abilities.cha.checkMod\",\n        ...(system.attributes?.init?.ability === \"cha\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"allSpeeds\":\n      for (const speedKey of Object.keys(system.attributes?.speed ?? {})) {\n        result.push(`system.attributes.speed.${speedKey}.total`);\n      }\n      // TODO: Support vehicle speeds somewhere\n      break;\n    case \"landSpeed\":\n      result.push(\"system.attributes.speed.land.total\");\n      break;\n    case \"climbSpeed\":\n      result.push(\"system.attributes.speed.climb.total\");\n      break;\n    case \"swimSpeed\":\n      result.push(\"system.attributes.speed.swim.total\");\n      break;\n    case \"burrowSpeed\":\n      result.push(\"system.attributes.speed.burrow.total\");\n      break;\n    case \"flySpeed\":\n      result.push(\"system.attributes.speed.fly.total\");\n      break;\n    case \"cmb\":\n      result.push(\"system.attributes.cmb.bonus\");\n      break;\n    case \"cmd\":\n      if ([\"dodge\", \"haste\"].includes(modifierType)) {\n        result.push(\"system.attributes.cmd.total\");\n        break;\n      }\n      result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"init\":\n      result.push(\"system.attributes.init.total\");\n      break;\n    case \"acpA\":\n      result.push(\"system.attributes.acp.armorBonus\");\n      break;\n    case \"acpS\":\n      result.push(\"system.attributes.acp.shieldBonus\");\n      break;\n    case \"mDexA\":\n      result.push(\"system.attributes.mDex.armorBonus\");\n      break;\n    case \"mDexS\":\n      result.push(\"system.attributes.mDex.shieldBonus\");\n      break;\n    case \"spellResist\":\n      result.push(\"system.attributes.sr.total\");\n      break;\n    case \"damage\":\n      result.push(\"system.attributes.damage.general\");\n      break;\n    case \"mdamage\":\n      result.push(\"system.attributes.damage.meleeAll\");\n      break;\n    case \"rdamage\":\n      result.push(\"system.attributes.damage.rangedAll\");\n      break;\n    case \"wdamage\":\n      result.push(\"system.attributes.damage.weapon\");\n      break;\n    case \"rwdamage\":\n      result.push(\"system.attributes.damage.ranged\");\n      break;\n    case \"twdamage\":\n      result.push(\"system.attributes.damage.thrown\");\n      break;\n    case \"mwdamage\":\n      result.push(\"system.attributes.damage.melee\");\n      break;\n    case \"ndamage\":\n      result.push(\"system.attributes.damage.natural\");\n      break;\n    case \"sdamage\":\n      result.push(\"system.attributes.damage.spell\");\n      break;\n    case \"bonusFeats\":\n      result.push(\"system.details.feats.bonus\");\n      break;\n    case \"bonusSkillRanks\":\n      result.push(\"system.details.skills.bonus\");\n      break;\n    case \"concentration\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.concentration.total\",\n        \"system.attributes.spells.spellbooks.secondary.concentration.total\",\n        \"system.attributes.spells.spellbooks.tertiary.concentration.total\",\n        \"system.attributes.spells.spellbooks.spelllike.concentration.total\"\n      );\n      break;\n    case \"cl\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.cl.total\",\n        \"system.attributes.spells.spellbooks.secondary.cl.total\",\n        \"system.attributes.spells.spellbooks.tertiary.cl.total\",\n        \"system.attributes.spells.spellbooks.spelllike.cl.total\"\n      );\n      break;\n    case \"dc\":\n      result.push(`system.attributes.spells.school.all.dc`);\n      break;\n    case \"sensedv\":\n      result.push(\"system.traits.senses.dv.total\");\n      break;\n    case \"sensets\":\n      result.push(\"system.traits.senses.ts.total\");\n      break;\n    case \"sensebse\":\n      result.push(\"system.traits.senses.bse.total\");\n      break;\n    case \"sensebs\":\n      result.push(\"system.traits.senses.bs.total\");\n      break;\n    case \"sensels\":\n      result.push(\"system.traits.senses.ls.total\");\n      break;\n    case \"sensetr\":\n      result.push(\"system.traits.senses.tr.total\");\n      break;\n    case \"sensesc\":\n      result.push(\"system.traits.senses.sc.total\");\n      break;\n  }\n\n  // Per school DC target\n  const schoolDC = /^dc\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolDC) {\n    const schoolId = schoolDC.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.dc`);\n  }\n\n  // Per school CL target\n  const schoolCL = /^cl\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolCL) {\n    const schoolId = schoolCL.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.cl`);\n  }\n\n  // Per book concentration target\n  const concnMatch = /^concn\\.(?<bookId>\\w+)/.exec(target);\n  if (concnMatch) {\n    const bookId = concnMatch.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.concentration.total`);\n  }\n\n  // Per book caster level target\n  const bookCL = /^cl\\.book\\.(?<bookId>\\w+)/.exec(target);\n  if (bookCL) {\n    const bookId = bookCL.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.cl.bonus`);\n  }\n\n  if (/^skill\\./.test(target)) {\n    const parts = target.split(\".\").slice(1);\n    let sklKey = parts.shift();\n\n    let spread = true;\n    if (sklKey[0] === \"~\") {\n      spread = false;\n      sklKey = sklKey.slice(1);\n    }\n\n    const skillData = system.skills[sklKey];\n    if (skillData) {\n      const subSklKey = parts.pop();\n\n      if (subSklKey) {\n        // Apply to all skills in this tree, including parent\n        if (skillData.subSkills?.[subSklKey]) {\n          result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n        }\n      } else {\n        result.push(`system.skills.${sklKey}.mod`);\n        if (spread) {\n          for (const subSklKey of Object.keys(skillData.subSkills ?? {})) {\n            result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n          }\n        }\n      }\n    }\n  }\n\n  // Call hooks to enable modules to add or adjust the result array\n  if (Hooks.events.pf1GetChangeFlat?.length) {\n    Hooks.callAll(\"pf1GetChangeFlat\", result, target, modifierType, value, actor);\n  }\n\n  // Return results directly when deprecation is removed\n  return result;\n}\n\n/**\n * @deprecated - Implementation moved to {@link pf1.documents.actor.abstract.BaseCharacterPF#_prepareTypeChanges}\n * @param {*} actor\n * @param {*} changes\n */\nexport function addDefaultChanges(actor, changes) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.documents.actor.changes.addDefaultChanges() is deprecated in favor of pf1.documents.actor.abstract.BaseCharacterPF#_prepareTypeChanges()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n}\n\n/**\n * Initialize source info structure and retrieve it\n *\n * @param {object} obj  - Source info base structure\n * @param {string} key - Data path\n * @returns {object} - Target source info structure\n */\nexport function getSourceInfo(obj, key) {\n  obj[key] ??= { negative: [], positive: [] };\n  return obj[key];\n}\n\n/**\n * @param {object} obj - Source info base\n * @param {string} key - Data path\n * @param {string} name - Name to find\n * @param {*} value - Value to set\n * @param {boolean} [positive=true] - Is this positive or negative source\n * @param {string} [id] - Special ID\n */\nexport function setSourceInfoByName(obj, key, name, value, positive = true, id) {\n  const target = positive ? \"positive\" : \"negative\";\n  const sourceInfo = getSourceInfo(obj, key)[target];\n  const data = sourceInfo.find((o) => o.name === name);\n  if (data) data.value = value;\n  else {\n    const srcInfo = {\n      name,\n      value,\n    };\n    if (id) srcInfo.id = id;\n    sourceInfo.push(srcInfo);\n  }\n}\n\n/**\n * @param {ItemChange[]} changes - An array containing all changes to check. Must be called after they received a value (by ItemChange.applyChange)\n * @param {object} [options] - Additional options\n * @param {boolean} [options.ignoreTarget] - Whether to only check for modifiers such as enhancement, insight (true) or whether the target (AC, weapon damage) is also important (false)\n * @returns {ItemChange[]} - A list of processed changes, excluding the lower-valued ones inserted (if they don't stack)\n */\nexport function getHighestChanges(changes, options = { ignoreTarget: false }) {\n  const highestTemplate = {\n    value: 0,\n    ids: [],\n    highestID: null,\n  };\n  const highest = Object.keys(pf1.config.bonusTypes).reduce((cur, k) => {\n    if (options.ignoreTarget) cur[k] = foundry.utils.deepClone(highestTemplate);\n    else cur[k] = {};\n    return cur;\n  }, {});\n\n  for (const c of changes) {\n    let h;\n    if (options.ignoreTarget) h = highest[c.type];\n    else h = highest[c.type]?.[c.target];\n\n    if (!h) continue; // Ignore bad changes\n    h.ids.push(c._id);\n    if (h.value < c.value || !h.highestID) {\n      h.value = c.value;\n      h.highestID = c._id;\n    }\n  }\n\n  let type, h;\n  const filterFunc = (c) => {\n    if (h.highestID === c._id) return true;\n    if (pf1.config.stackingBonusTypes.indexOf(type) === -1 && h.ids.includes(c._id)) return false;\n    return true;\n  };\n\n  for (type of Object.keys(highest)) {\n    if (options.ignoreTarget) {\n      h = highest[type];\n      changes = changes.filter(filterFunc);\n    } else {\n      for (const subTarget of Object.keys(highest[type])) {\n        h = highest[type][subTarget];\n        changes = changes.filter(filterFunc);\n      }\n    }\n  }\n\n  return changes;\n}\n","/**\n * Spellbook details.\n */\nexport class Spellbook {\n  /**\n   * Book key.\n   */\n  key;\n\n  /**\n   * Owning actor.\n   */\n  actor;\n\n  /**\n   * Raw spellbook data.\n   */\n  data;\n\n  /**\n   * All spells.\n   */\n  spells = [];\n\n  level = {};\n\n  /**\n   * @param {string} bookKey Book key.\n   * @param {ActorPF} actor Owning actor.\n   */\n  constructor(bookKey, actor) {\n    this.key = bookKey;\n    this.actor = actor;\n    this.data = actor.system.attributes.spells.spellbooks[bookKey];\n  }\n\n  /**\n   * Add spell to the spellbook and to its appropriate level.\n   *\n   * @param {ItemSpellPF} spell\n   */\n  addSpell(spell) {\n    this.spells.push(spell);\n\n    // Basic sanity check\n    const level = spell.system.level;\n    if (Math.clamp(level, 0, 9) !== level) {\n      console.error(\"Spell with impossible spell level:\", spell);\n      return;\n    }\n\n    // Ensure appropriate spell level exists\n    this.level[level] ??= new SpellbookLevel(this);\n\n    // Add spell to the spell level also\n    this.level[level].spells.push(spell);\n  }\n}\n\n/**\n * Spellbook leveled details.\n */\nexport class SpellbookLevel {\n  /**\n   * Owning book.\n   */\n\n  book;\n  /**\n   * Spells for level.\n   */\n  spells = [];\n\n  constructor(book) {\n    this.book = book;\n  }\n}\n\nexport class SpellbookSlots {\n  level = 0;\n  max = 0;\n  value = 0;\n  domain = 0;\n  domainMax = 0;\n  domainUnused = 0;\n  used = 0;\n  total = 0;\n\n  /**\n   * @param {object} options - Options\n   * @param {number} options.max - Maximum normal spells\n   * @param {number} options.domain - Maximum domain spells\n   * @param {number} options.level - Spell level\n   */\n  constructor({ max = 0, domain = 0, level = 0 } = {}) {\n    this.level = level;\n\n    // Enforce lack of domain slots for level 0\n    if (level === 0) domain = 0;\n\n    this.value = max + domain;\n    this.max = max;\n\n    this.domain = domain;\n    this.domainMax = domain;\n    this.domainUnused = domain;\n\n    this.total = max + domain;\n  }\n}\n\nexport class SpellRanges {\n  close;\n  medium;\n  long;\n\n  cl;\n\n  constructor(cl) {\n    this.cl = cl;\n    this.close = pf1.utils.calculateRange(null, \"close\", { cl })[0];\n    this.medium = pf1.utils.calculateRange(null, \"medium\", { cl })[0];\n    this.long = pf1.utils.calculateRange(null, \"long\", { cl })[0];\n  }\n}\n\nexport class SpellbookMode {\n  raw;\n\n  #spontaneous = false;\n  #prepared = false;\n\n  get isSpontaneous() {\n    return this.#spontaneous || false;\n  }\n\n  get isPrepared() {\n    return this.#prepared || false;\n  }\n\n  get usesSpellpoints() {\n    return this.book.spellPoints?.useSystem === true;\n  }\n\n  get isSemiSpontaneous() {\n    return this.isSpontaneous || this.usesSpellpoints || false;\n  }\n\n  constructor(book) {\n    this.book = book;\n\n    let mode = book.spellPreparationMode;\n    // Shunt invalid mode\n    mode ||= book.spellPreparationMode = \"spontaneous\";\n\n    this.raw = mode;\n\n    const preparation = pf1.config.caster.type[this.raw];\n    this.#spontaneous = preparation.spontaneous;\n    this.#prepared = preparation.prepared;\n  }\n}\n","/**\n * Resource interface.\n */\nexport class Resource {\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {ItemPF} */\n  #item;\n  get item() {\n    return this.#item;\n  }\n\n  /**\n   * @param {number} value Value to add to the charges.\n   * @returns {Promise<Item>} Update promise\n   */\n  async add(value) {\n    return this.item.addCharges(value);\n  }\n\n  constructor(item) {\n    this.#item = item;\n    const tag = item.system.tag;\n\n    Object.defineProperties(this, {\n      value: {\n        get() {\n          return this.item.charges;\n        },\n        enumerable: true,\n      },\n      max: {\n        get() {\n          return this.item.maxCharges;\n        },\n        enumerable: true,\n      },\n      _id: {\n        value: item.id,\n        enumerable: true,\n      },\n      tag: {\n        value: tag,\n        enumerable: true,\n      },\n    });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\nimport {\n  applyChanges,\n  getChangeFlat,\n  getSourceInfo,\n  setSourceInfoByName,\n  getHighestChanges,\n} from \"./utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { Spellbook, SpellRanges, SpellbookMode, SpellbookSlots } from \"./utils/spellbook.mjs\";\nimport { VisionSharingSheet } from \"module/applications/vision-sharing.mjs\";\nimport { Resource } from \"./components/resource.mjs\";\n\n/**\n * Extend the base Actor class to implement additional game system logic.\n */\nexport class ActorPF extends ActorBasePF {\n  /**\n   * Configure actor before data preparation.\n   *\n   * @override\n   * @param {object} options - Document options\n   */\n  _configure(options = {}) {\n    super._configure(options);\n\n    /**\n     * Stores all ItemChanges from carried items.\n     *\n     * @public\n     * @type {Collection<ItemChange>}\n     */\n    this.changes ??= new Collection();\n\n    /**\n     * Cached roll data for this item.\n     *\n     * @internal\n     * @type {object}\n     */\n    Object.defineProperties(this, {\n      itemFlags: {\n        value: { boolean: {}, dictionary: {} },\n        writable: false,\n      },\n      _rollData: {\n        value: null,\n        enumerable: false,\n        writable: true,\n      },\n      _visionSharingSheet: {\n        value: null,\n        enumerable: false,\n        writable: true,\n      },\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Spell Failure Percentage as number from 0 to 100.\n   *\n   * @type {number}\n   */\n  get spellFailure() {\n    return this.itemTypes.equipment\n      .filter((o) => o.system.equipped === true)\n      .reduce((cur, o) => cur + (o.system.spellFailure || 0), 0);\n  }\n\n  /**\n   * Actor's current race item.\n   *\n   * @type {pf1.documents.item.ItemRacePF|null}\n   */\n  get race() {\n    return this.itemTypes.race[0] ?? null;\n  }\n\n  /**\n   * @internal\n   * @param {SourceInfo} src - Source info\n   * @returns {string} - Label for source\n   */\n  static _getSourceLabel(src) {\n    /** @type {ItemPF} */\n    const item = src.change?.parent;\n    if (item) {\n      const subtype = item.subType;\n      let typeLabel;\n\n      if (subtype && ((item.system.identified ?? true) || game.user.isGM) && ![\"weapon\"].includes(item.type))\n        typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${item.type}.${subtype}.Single`);\n      else typeLabel = game.i18n.localize(`TYPES.Item.${item.type}`);\n\n      return `${src.name} (${typeLabel})`;\n    }\n\n    return src.name;\n  }\n\n  /**\n   * Retrieve valid skill change targets for this actor.\n   *\n   * @internal\n   * @returns {Array<string>} - Skill target array\n   */\n  get _skillTargets() {\n    const skills = [];\n    for (const [sklKey, skl] of Object.entries(this.system.skills)) {\n      if (skl == null) continue;\n      // Add main skill\n      skills.push(`skill.${sklKey}`); // Affects this and sub-skills\n      skills.push(`skill.~${sklKey}`); // Special extra target that does not affect sub-skills\n      // Add subskills if present\n      for (const subSklKey of Object.keys(skl.subSkills ?? [])) {\n        skills.push(`skill.${sklKey}.${subSklKey}`);\n      }\n    }\n    return skills;\n  }\n\n  /**\n   * Change target paths for spellbooks on the actor.\n   *\n   * @internal\n   * @type {Array<string>}\n   */\n  get _spellbookTargets() {\n    const spellTargets = [];\n    // Add caster level and concentration to targets\n    for (const [bookId, bookData] of Object.entries(this._source.system.attributes?.spells?.spellbooks ?? {})) {\n      if (bookData.inUse) {\n        spellTargets.push(`cl.book.${bookId}`, `concn.${bookId}`);\n      }\n    }\n    return spellTargets;\n  }\n\n  /**\n   * Prepare boolean and dictionary flags.\n   *\n   * @internal\n   */\n  _prepareItemFlags() {\n    const items = this.allItems;\n    const bFlags = {};\n    const dFlags = {};\n\n    for (const item of items) {\n      // Process boolean flags\n      if (item.isActive) {\n        const flags = item.system.flags?.boolean || {};\n        for (const flag of Object.keys(flags)) {\n          bFlags[flag] ??= { sources: [] };\n          bFlags[flag].sources.push(item);\n        }\n      }\n\n      // Process dictionary flags\n      const tag = item.system.tag;\n      if (tag) {\n        const dEntries = Object.entries(item.system.flags?.dictionary || {});\n        if (dEntries.length) {\n          dFlags[tag] ||= {};\n\n          for (const [key, value] of dEntries) {\n            if (dFlags[tag][key] !== undefined && this.isOwner) {\n              const msg = game.i18n.format(\"PF1.Warning.DuplicateDFlag\", {\n                actor: this.uuid,\n                item: item.name,\n                key,\n                tag,\n              });\n              console.warn(msg, item);\n              ui.notifications?.warn(msg, { console: false });\n            }\n\n            dFlags[tag][key] = item.isActive ? value : 0;\n          }\n        }\n      }\n    }\n\n    this.itemFlags.boolean = bFlags;\n    this.itemFlags.dictionary = dFlags;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareChanges() {\n    /** @type {ItemChange[]} */\n    const changes = [];\n    for (const item of this.items) {\n      if (item.isActive && item.hasChanges && item.changes.size) {\n        changes.push(...item.changes);\n      }\n    }\n\n    this._prepareTypeChanges(changes);\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n\n    this.changes = c;\n  }\n\n  /**\n   * Add actor type specific changes.\n   *\n   * @internal\n   * @abstract\n   * @protected\n   * @param {ItemChange[]} changes - Array of changes\n   */\n  // eslint-disable-next-line no-unused-vars\n  _prepareTypeChanges(changes) {}\n\n  /**\n   * @internal\n   * @override\n   */\n  applyActiveEffects() {\n    // Apply active effects. Required for status effects in v11 and onward, such as blind and invisible.\n    super.applyActiveEffects();\n\n    this.prepareConditions();\n\n    this._prepareItemFlags();\n    this._prepareChanges();\n    applyChanges(this, { simple: true });\n  }\n\n  /**\n   * Deletes expired temporary active effects and disables linked expired buffs.\n   *\n   * @param {object} [options] Additional options\n   * @param {Combat} [options.combat] Combat to expire data in, if relevant\n   * @param {number} [options.worldTime] - World time\n   * @param {number} [options.timeOffset=0] Time offset from world time\n   * @param {string} [options.event] - Expiration event\n   * @param {number} [options.initiative] - Initiative based expiration marker\n   * @param {DocumentModificationContext} [context] Document update context\n   * @throws {Error} - With insufficient permissions to control the actor.\n   */\n  async expireActiveEffects(\n    { combat, timeOffset = 0, worldTime = null, event = null, initiative = null } = {},\n    context = {}\n  ) {\n    if (!this.isOwner) throw new Error(\"Must be owner\");\n\n    // Canonical world time.\n    // Due to async code in numerous places and no awaiting of time updates, this can go out of sync of actual time.\n    worldTime ??= game.time.worldTime;\n    worldTime += timeOffset;\n\n    // Effects that have timed out\n    const expiredEffects = this._effectsWithDuration.filter((ae) => {\n      const { seconds, startTime } = ae.duration;\n      const { rounds, startRound } = ae.duration;\n\n      // Calculate remaining duration.\n      // AE.duration.remaining is updated by Foundry only in combat and is unreliable.\n      let remaining = Infinity;\n      // Convert rounds to seconds\n      if (Number.isFinite(seconds) && seconds >= 0) {\n        const elapsed = worldTime - (startTime ?? 0);\n        remaining = seconds - elapsed;\n      } else if (rounds > 0 && combat) {\n        // BUG: This will ignore which combat the round tracking started for\n        const elapsed = combat.round - (startRound ?? 0);\n        remaining = (rounds - elapsed) * CONFIG.time.roundTime;\n      }\n\n      // Time still remaining\n      if (remaining > 0) return false;\n\n      const aeInit = ae.system?.initiative;\n      const endTiming = ae.system?.end || \"turnStart\";\n\n      switch (endTiming) {\n        // Initiative based ending\n        case \"initiative\":\n          if (initiative !== null) {\n            return initiative <= aeInit;\n          }\n          // Anything not on initiative expires if they have negative time remaining\n          return remaining < 0;\n        // End on turn start, but we're not there yet\n        case \"turnStart\":\n          if (remaining === 0 && ![\"turnStart\", \"turnEnd\"].includes(event)) return false;\n          break;\n        // End on turn end, but we're not quite there yet\n        case \"turnEnd\":\n          if (remaining === 0 && event !== \"turnEnd\") return false;\n          break;\n      }\n\n      // Otherwise end when time is out\n      return remaining <= 0;\n    });\n\n    const disableActiveEffects = [],\n      deleteActiveEffects = [],\n      disableBuffs = [];\n\n    for (const ae of expiredEffects) {\n      let item;\n      // Use AE parent when available\n      if (ae.parent instanceof Item) item = ae.parent;\n      // Otherwise support older origin cases\n      else item = ae.origin ? await fromUuid(ae.origin, { relative: this }) : null;\n\n      if (item?.type === \"buff\") {\n        disableBuffs.push({ _id: item.id, \"system.active\": false });\n      } else {\n        if (ae.getFlag(\"pf1\", \"autoDelete\")) {\n          deleteActiveEffects.push(ae.id);\n        } else {\n          disableActiveEffects.push({ _id: ae.id, disabled: true });\n        }\n      }\n    }\n\n    // Add context info for why this update happens to allow modules to understand the cause.\n    context.pf1 ??= {};\n    context.pf1.reason = \"duration\";\n\n    if (deleteActiveEffects.length) {\n      const deleteAEContext = foundry.utils.mergeObject(\n        { render: !disableBuffs.length && !disableActiveEffects.length },\n        context\n      );\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", deleteActiveEffects, deleteAEContext);\n    }\n\n    if (disableActiveEffects.length) {\n      const disableAEContext = foundry.utils.mergeObject({ render: !disableBuffs.length }, context);\n      await this.updateEmbeddedDocuments(\"ActiveEffect\", disableActiveEffects, disableAEContext);\n    }\n\n    if (disableBuffs.length) {\n      await this.updateEmbeddedDocuments(\"Item\", disableBuffs, context);\n    }\n  }\n\n  /**\n   * Prepare actor data before items are prepared.\n   *\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this.system.details ??= {};\n    this.system.details.level ??= {};\n\n    /** @type {Record<string, {negative:SourceInfo[], positive:SourceInfo[]}>} */\n    this.sourceInfo = {};\n    this.changeFlags = {};\n\n    // Reset equipment info\n    this.equipment = {\n      shield: { type: pf1.config.shieldTypes.none, id: undefined },\n      armor: { type: pf1.config.armorTypes.none, id: undefined },\n    };\n\n    // Reset class info\n    this.classes = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n\n    this._resetInherentTotals();\n\n    this._prepareTraits();\n\n    if (Hooks.events.pf1PrepareBaseActorData?.length) {\n      Hooks.callAll(\"pf1PrepareBaseActorData\", this);\n    }\n\n    // Update total level and mythic tier\n    const classes = this.itemTypes.class;\n    /** @type {{hd:number,mythic:number,level:number}} */\n    const levels = classes.reduce(\n      (cur, o) => {\n        o.reset(); // HACK: Out of order preparation for later.\n        cur.hd += o.hitDice;\n        if (![\"mythic\", \"racial\"].includes(o.subType)) {\n          cur.level += o.system.level ?? 0;\n        }\n        cur.mythic += o.mythicTier;\n        return cur;\n      },\n      { hd: 0, mythic: 0, level: 0 }\n    );\n\n    this.system.details.level.value = levels.level;\n    this.system.details.mythicTier = levels.mythic;\n\n    // Refresh ability scores\n    for (const ability of Object.values(this.system.abilities)) {\n      const value = ability.value;\n      if (value === null) {\n        ability.total = null;\n        ability.base = null;\n        ability.undrained = null;\n      } else {\n        ability.undrained = value;\n        ability.total = value - ability.drain;\n        ability.penalty = (ability.penalty || 0) - Math.abs(ability.userPenalty || 0);\n        ability.base = ability.total;\n      }\n    }\n    this.refreshAbilityModifiers();\n\n    // Reset BAB\n    {\n      const k = \"system.attributes.bab.total\";\n      const v = Math.floor(\n        classes.reduce((cur, cls) => {\n          // HACK: Depends on earlier out of order preparation\n          const bab = cls.system.babBase;\n          if (bab !== 0) {\n            getSourceInfo(this.sourceInfo, k).positive.push({\n              name: cls.name,\n              value: pf1.utils.fractionalToString(bab),\n            });\n          }\n          return cur + bab;\n        }, 0)\n      );\n      this.system.attributes.bab.total = Math.floor(v);\n\n      // Add .value for NPC lite sheet\n      if (this.system.attributes.bab.value) this.system.attributes.bab.total += this.system.attributes.bab.value ?? 0;\n    }\n\n    this._prepareSenses();\n\n    this._prepareClassSkills();\n\n    // Reset HD\n    foundry.utils.setProperty(this.system, \"attributes.hd.total\", levels.hd);\n  }\n\n  /**\n   * Prepare traits.\n   *\n   * Called in prepareBaseData()\n   *\n   * @protected\n   * @abstract\n   */\n  _prepareTraits() {}\n\n  /**\n   * Finalize preparing armor, weapon, and language proficiencies and other traits.\n   *\n   * Called in prepareDerivedData()\n   *\n   * @protected\n   * @abstract\n   */\n  _finalizeTraits() {}\n\n  /**\n   * Prepare creature type info\n   */\n  _prepareCreatureType() {\n    const types = this.system.traits.creatureTypes?.standard;\n\n    // Add some booleans about the types\n    this.system.traits.humanoid = types.has(\"humanoid\");\n    this.system.traits.undead = types.has(\"undead\");\n    this.system.traits.construct = types.has(\"construct\");\n    this.system.traits.living = !this.system.traits.undead && !this.system.traits.construct;\n\n    // Add something from this.system.traits.creatureSubtypes ?\n  }\n\n  _prepareSenses() {\n    // Refresh senses\n    for (const [senseId, sense] of Object.entries(this.system.traits.senses)) {\n      if (typeof sense !== \"object\") continue;\n      if (!sense) continue;\n\n      switch (senseId) {\n        case \"ll\":\n        case \"si\":\n        case \"sid\":\n          break;\n\n        default:\n          sense.total = sense.value;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Prepare actor.system.conditions for use.\n   *\n   * @protected\n   */\n  prepareConditions() {\n    this.system.conditions = {};\n    const conditions = this.system.conditions;\n\n    // Populate conditions\n    // @deprecated - This should be only done in getRollData()\n    for (const condition of pf1.registry.conditions.keys()) {\n      conditions[condition] = this.statuses.has(condition);\n    }\n  }\n\n  /**\n   * Prepare natural reach for melee range and for reach weapons.\n   *\n   * @protected\n   */\n  _prepareNaturalReach() {\n    // Prepare base natural reach\n    this.system.traits.reach ??= {};\n    const reach = this.system.traits.reach;\n\n    reach.base = this.constructor.getReach(this.system.traits?.size?.value, this.system.traits?.stature);\n\n    // Reset values\n    reach.natural = reach.base;\n    reach.total = { ...reach.base };\n\n    // Add base natural values to the change sources\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.melee\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.melee,\n    });\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.reach\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.reach,\n    });\n  }\n\n  /**\n   * Reset class skills.\n   *\n   * @protected\n   */\n  _prepareClassSkills() {\n    /** @type {Record<string,SkillData>} */\n    const skills = this.system.skills;\n    if (!skills) return;\n\n    const skillSet = new Set();\n    const csSources = this.items.filter((item) => [\"class\", \"race\", \"feat\"].includes(item.type));\n    for (const csItem of csSources) {\n      for (const [classSkillName, isClassSkill] of Object.entries(csItem.system.classSkills || {})) {\n        if (isClassSkill === true) skillSet.add(classSkillName);\n      }\n    }\n    if (skillSet.size == 0) return;\n\n    for (const [skillKey, skillData] of Object.entries(skills)) {\n      if (!skillData) {\n        console.warn(`Bad skill data for \"${skillKey}\"`, this);\n        continue;\n      }\n      skills[skillKey].cs = skillSet.has(skillKey);\n      for (const k2 of Object.keys(skillData.subSkills ?? {})) {\n        foundry.utils.setProperty(skillData, `subSkills.${k2}.cs`, skillSet.has(skillKey));\n      }\n    }\n  }\n\n  /**\n   * Checks if there's any matching proficiency\n   *\n   * @param {pf1.document.item.ItemEquipmentPF} item - The item to check for.\n   * @returns {boolean} Whether the actor is proficient with that item.\n   */\n  hasArmorProficiency(item) {\n    // Check for item type\n    if (item.type !== \"equipment\" || ![\"armor\", \"shield\"].includes(item.system.subType)) return true;\n\n    /** @type {TraitData} */\n    const aprof = this.system.traits?.armorProf;\n    if (!aprof) return false;\n\n    // Base proficiency\n    if (aprof.total.has(item.baseArmorProficiency)) return true;\n\n    // Base types with custom proficiencies\n    if (aprof.custom.size == 0) return false;\n\n    /** @type {string[]} */\n    const baseTypes = item.system.baseTypes ?? [];\n    return baseTypes.some((type) => aprof.custom.has(type));\n  }\n\n  /**\n   * Test if actor is proficient with specified weapon.\n   *\n   * @remarks Natural attacks incorrectly do not count as proficient.\n   *\n   * @param {ItemPF} item - Item to test\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.override=true] - Allow item's proficiency override to influence the result.\n   * @returns {boolean} - Proficiency state\n   */\n  hasWeaponProficiency(item, { override = true } = {}) {\n    if (override && item.system.proficient) return true; // Explicitly marked as proficient\n\n    /** @type {TraitData} */\n    const wprof = this.system.traits?.weaponProf;\n    if (!wprof) return false;\n\n    // Match basic proficiencies, e.g. simple and martial (only present on weapons)\n    // TODO: Make the item identify it's own weapon type\n    let category;\n    if (item.type === \"weapon\") {\n      category = item.subType;\n    } else if (item.type === \"attack\") {\n      category = item.subType === \"weapon\" ? item.system.weapon?.category : null;\n    }\n    if (wprof.standard.has(category)) return true;\n\n    // Match base types\n    if (wprof.custom.size == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    return baseTypes.some((type) => wprof.custom.has(type));\n  }\n\n  /**\n   * Update specific spellbook.\n   *\n   * @internal\n   * @param {string} bookId Spellbook identifier\n   * @param {object} [rollData] Roll data instance\n   * @param {object} cache Pre-calculated data for re-use from _generateSpellbookCache\n   */\n  _updateSpellBook(bookId, rollData, cache) {\n    const actorData = this.system;\n    const book = actorData.attributes?.spells?.spellbooks?.[bookId];\n    if (!book) {\n      console.error(`Spellbook data not found for \"${bookId} on actor`, this);\n      return;\n    }\n\n    // Set spellbook label\n    book.label = book.name || game.i18n.localize(`PF1.SpellBook${bookId.capitalize()}`);\n\n    // Do not process spellbooks that are not in use\n    if (!book.inUse) return;\n\n    // Init some values\n    const domainSlots = book.domainSlotValue || 0;\n\n    const levels = new Map();\n    // Prepare base data\n    for (let level = 0; level < 10; level++) {\n      const levelData = book.spells[`spell${level}`];\n      if (!levelData) continue;\n      levels.set(level, levelData);\n\n      levelData.casts = { unused: 0, max: NaN };\n      levelData.known = { unused: 0, max: NaN };\n      levelData.preparation = { unused: 0, max: NaN, domain: 0 };\n      levelData.domain = { unused: 0, max: domainSlots };\n      levelData.slots = { used: 0, max: NaN }; // Unused?\n    }\n\n    const mode = new SpellbookMode(book);\n\n    // Casts per day table\n    /** @type {number[][]} */\n    let castsPerDayTables = pf1.config.casterProgression.castsPerDay[mode.raw] ?? {};\n\n    // Set caster type to sane default if configuration not found.\n    let casterType = book.casterType;\n    if (!castsPerDayTables[casterType]) {\n      const keys = Object.keys(castsPerDayTables);\n      book.casterType = casterType = keys[0];\n      console.debug(\n        `Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook \"${bookId}\", auto-corrected to \"${casterType}\"`\n      );\n    }\n\n    castsPerDayTables = castsPerDayTables[casterType];\n\n    book.isSchool = book.kind !== \"divine\";\n    book.hasProgressionChoices = Object.keys(castsPerDayTables).length > 1;\n\n    // Prepared spells and known spells table\n    /** @type {number[][]} */\n    const preparedForLevelTables = pf1.config.casterProgression.spellsPreparedPerDay[mode.raw]?.[casterType];\n\n    // Use custom name if present\n    if (book.name) book.label = book.name;\n    // Get name from class if selected\n    else if (book.class) {\n      if (book.class === \"_hd\") book.label = book.name || game.i18n.localize(\"PF1.SpellBookSpelllike\");\n      else {\n        const bookClassId = this.classes[book.class]?._id;\n        const bookClass = this.items.get(bookClassId);\n        if (bookClass) book.label = bookClass.name;\n      }\n    }\n\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    // Ensure class info is available\n    if (book.class === \"_hd\") rollData.class = { level: rollData.attributes.hd?.total };\n    else rollData.class = rollData.classes?.[book.class];\n    rollData.cl = book.cl?.total;\n\n    /** @type {Spellbook} */\n    const bookInfo = cache.books[bookId];\n\n    /** @type {AbilityScoreData} */\n    const spellbookAbility = actorData.abilities[book.ability];\n\n    // Add spell slots based on ability bonus slot formula\n    const spellSlotAbilityScoreBonus = RollPF.safeRollSync(book.spellSlotAbilityBonusFormula || \"0\", rollData).total,\n      spellSlotAbilityScore = (spellbookAbility?.total ?? 10) + spellSlotAbilityScoreBonus,\n      spellSlotAbilityMod = pf1.utils.getAbilityModifier(spellSlotAbilityScore);\n\n    // Set CL\n    let clTotal = 0;\n    {\n      const key = `system.attributes.spells.spellbooks.${bookId}.cl.total`;\n      const formula = book.cl.formula || \"0\";\n      let classLevelTotal = 0;\n\n      // Add NPC base\n      if (this.type === \"npc\") {\n        const value = book.cl.base || 0;\n        classLevelTotal += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.Base\"), value);\n      }\n      // Add HD\n      if (book.class === \"_hd\") {\n        const value = actorData.attributes.hd.total;\n        classLevelTotal += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.HitDie\"), value);\n      }\n      // Add class levels\n      else if (book.class && rollData.class) {\n        const value = rollData.class?.unlevel || 0;\n        classLevelTotal += value;\n        clTotal += value;\n\n        setSourceInfoByName(this.sourceInfo, key, this.classes[book.class]?.name, value, true, \"class\");\n      }\n\n      // Set auto spell level calculation offset\n      if (book.autoSpellLevelCalculation) {\n        const autoFormula = book.cl.autoSpellLevelCalculationFormula || \"0\";\n        const autoBonus = RollPF.safeRollSync(autoFormula, rollData).total ?? 0;\n        const autoTotal = Math.clamp(classLevelTotal + autoBonus, 1, 20);\n        book.cl.autoSpellLevelTotal = autoTotal;\n\n        clTotal += autoBonus;\n        if (autoBonus !== 0) {\n          setSourceInfoByName(\n            this.sourceInfo,\n            key,\n            game.i18n.localize(\"PF1.AutoSpellClassLevelOffset.Formula\"),\n            autoBonus\n          );\n        }\n      } else {\n        book.cl.autoSpellLevelTotal = classLevelTotal;\n      }\n\n      // Add from bonus formula\n      const clBonus = RollPF.safeRollSync(formula, rollData).total;\n      clTotal += clBonus;\n      if (clBonus > 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus);\n      } else if (clBonus < 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus, false);\n      }\n\n      // HACK: Apply Wound Threshold outside of normal WT workflow since spellbook is handled outside of normal workflow\n      const penalty = this.system.attributes?.woundThresholds?.penalty || 0;\n      if (clTotal > 0 && penalty != 0) {\n        // BUG: If CL target affects more than .cl.total this fails to do so\n        // In case CL target of WT has been disabled by users\n        if (pf1.config.woundThresholdChangeTargets.includes(\"cl\")) {\n          const newCL = Math.max(1, clTotal - penalty);\n          book.cl.woundPenalty = clTotal - newCL; // Keep record of how much WT actually reduced this\n          clTotal = newCL;\n        }\n      }\n\n      // Apply negative levels\n      if (rollData.attributes.energyDrain) {\n        clTotal = Math.max(0, clTotal - rollData.attributes.energyDrain);\n        setSourceInfoByName(\n          this.sourceInfo,\n          key,\n          game.i18n.localize(\"PF1.NegativeLevels\"),\n          -Math.abs(rollData.attributes.energyDrain),\n          false\n        );\n      }\n\n      clTotal += book.cl.total ?? 0;\n      clTotal += book.cl.bonus ?? 0;\n      book.cl.total = clTotal;\n    }\n\n    // Set concentration bonus\n    {\n      // Temp fix for old actors that fail migration\n      if (Number.isFinite(book.concentration)) {\n        console.error(`Bad spellbook concentration value \"${book.concentration}\" in spellbook \"${bookId}\"`);\n        book.concentration = {};\n      }\n\n      // Bonus formula\n      const concFormula = book.concentrationFormula;\n      const formulaRoll = concFormula.length\n        ? RollPF.safeRollSync(concFormula, rollData, undefined, undefined, { minimize: true })\n        : { total: 0, isDeterministic: true };\n      const rollBonus = formulaRoll.isDeterministic ? formulaRoll.total : 0;\n\n      // Add it all up\n      const classAbilityMod = actorData.abilities[book.ability]?.mod ?? 0;\n      const concentration = clTotal + classAbilityMod + rollBonus;\n      book.concentration.total ||= 0; // Init\n\n      // Set source info\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.CasterLevel\"),\n        clTotal,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.SpellcastingAbility\"),\n        classAbilityMod,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.ByBonus\"),\n        formulaRoll.isDeterministic ? formulaRoll.total : formulaRoll.formula,\n        false\n      );\n\n      // Apply value\n      book.concentration ??= {};\n      book.concentration.total += concentration;\n    }\n\n    /**\n     * Get ability bonus slots for level\n     *\n     * @param {number} level\n     * @returns {number} - Bonus slots, always zero for level 0\n     */\n    const getAbilityBonus = (level) => ActorPF.getSpellSlotIncrease(spellSlotAbilityMod, level);\n\n    // Spell slots\n    const useAuto = book.autoSpellLevelCalculation;\n\n    // Turn off spell points with auto slots\n    if (useAuto) book.spellPoints.useSystem = false;\n    // Turn off bonus slots from ability score without auto slots\n    else book.autoSpellLevels = false;\n\n    // Set base \"spontaneous\" based on spell prep mode when using auto slots or spell points\n    const isSpontaneous = mode.isSemiSpontaneous;\n    const isPrepared = mode.isPrepared;\n    const isPure = isSpontaneous != isPrepared;\n    const isHybrid = !isPure;\n    book.spontaneous = isSpontaneous;\n    book.prepared = isPrepared;\n    book.pure = isPure;\n    book.hybrid = isHybrid;\n\n    // Invalid caster type\n    if (!castsPerDayTables) {\n      return void console.error(`Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook \"${bookId}\"`);\n    }\n\n    // Determine class level\n    let classLevel = book.cl.autoSpellLevelTotal;\n    if (useAuto) classLevel = Math.clamp(classLevel, 1, 20);\n    // Protect against invalid class level bricking actors\n    if (!Number.isSafeInteger(classLevel)) {\n      const msg = `Actor ${this.uuid} has invalid caster class level.`;\n      console.error(msg, classLevel);\n      ui.notifications?.error(msg, { console: false });\n      classLevel = Math.floor(classLevel);\n    }\n\n    // Casts per day table\n    const castsForLevels = castsPerDayTables[classLevel - 1];\n    // Prepared per day table (also known spells overall)\n    const preparedForLevels = preparedForLevelTables[classLevel - 1];\n\n    rollData.ablMod = spellSlotAbilityMod;\n\n    if (useAuto) {\n      let classLevel = Math.clamp(book.cl.autoSpellLevelTotal, 1, 20);\n\n      // Protect against invalid class level bricking actors\n      if (!Number.isSafeInteger(classLevel)) {\n        const msg = `Actor ${this.id} has invalid caster class level.`;\n        console.error(msg, classLevel);\n        ui.notifications?.error(msg, { console: false });\n        classLevel = Math.floor(classLevel);\n      }\n\n      rollData.ablMod = spellSlotAbilityMod;\n\n      const castsModAllLevelsFormula = book.castPerDayAllOffsetFormula || \"0\";\n      const castsModAllLevels =\n        castsModAllLevelsFormula != \"0\" ? RollPF.safeRollSync(castsModAllLevelsFormula, rollData).total : 0;\n      const prepModAllLevelsFormula = book.preparedAllOffsetFormula || \"0\";\n      const prepModAllLevels =\n        prepModAllLevelsFormula != \"0\" ? RollPF.safeRollSync(prepModAllLevelsFormula, rollData).total : 0;\n\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        rollData.sl = spellLevel;\n\n        const levelData = levels.get(spellLevel);\n\n        const castsOffsetFormula = levelData.castPerDayOffsetFormula || \"0\";\n        const castsOffset = castsOffsetFormula != \"0\" ? RollPF.safeRollSync(castsOffsetFormula, rollData).total : 0;\n        const prepOffsetFormula = levelData.preparedOffsetFormula || \"0\";\n        const prepOffset = prepOffsetFormula != \"0\" ? RollPF.safeRollSync(prepOffsetFormula, rollData).total : 0;\n\n        const abilityBonusSlots = getAbilityBonus(spellLevel);\n\n        // Casts\n        let castsPerDay = castsForLevels[spellLevel];\n        // Dealing with cantrips with cantrips not enabled\n        if (!book.hasCantrips && spellLevel == 0) castsPerDay = NaN;\n        levelData.base = castsPerDay || 0;\n\n        const preparedForLevel = preparedForLevels[spellLevel];\n\n        // Infinite casts, not much else to it\n        if (castsPerDay === Infinity) {\n          levelData.max = Infinity;\n        }\n        // Casts\n        else if (Number.isFinite(castsPerDay)) {\n          let maxSlots = castsPerDay + abilityBonusSlots + castsModAllLevels + castsOffset;\n          if (isPrepared) maxSlots += domainSlots; // Prepared and Hybrid get domains as extra casts\n          levelData.max = maxSlots;\n        }\n        // All other cases\n        else {\n          levelData.max = NaN;\n        }\n\n        levelData.casts.max = levelData.max;\n\n        // Preparation\n        if (Number.isFinite(preparedForLevel)) {\n          let prep = preparedForLevel + prepOffset + prepModAllLevels;\n\n          // Add domain slot prep\n          levelData.preparation.domain = spellLevel > 0 ? domainSlots : 0;\n\n          // Add bonus slot from ability score, only pure prepared get this\n          if (!isSpontaneous) {\n            prep += abilityBonusSlots;\n            levelData.max = prep; // Full prepared tracks prepared spells rather than casts\n            if (spellLevel > 0) levelData.max += domainSlots;\n          }\n\n          levelData.preparation.max = prep;\n          levelData.known.max = isPrepared ? Infinity : prep;\n          if (isSpontaneous && spellLevel > 0) {\n            levelData.known.domain = domainSlots;\n          } else {\n            levelData.known.domain = 0;\n          }\n        }\n\n        // Set spells remaining to match max if it's not a number\n        if (!Number.isFinite(levelData.value)) levelData.value = levelData.max;\n\n        // NaN everything if level is invalid\n        if (isNaN(levelData.max)) {\n          levelData.preparation.max = NaN;\n          levelData.domain.max = NaN;\n          levelData.known.max = NaN;\n        }\n      }\n    }\n    // Manual slots\n    else {\n      for (let level = book.hasCantrips ? 0 : 1; level < 10; level++) {\n        const levelData = levels.get(level);\n\n        let base = levelData.base;\n        if (Number.isNaN(base) || base === null) {\n          levelData.base = null;\n          levelData.max = 0;\n        } else if (book.autoSpellLevels && base >= 0) {\n          base += getAbilityBonus(level);\n          levelData.max = base;\n        } else {\n          levelData.max = base || 0;\n        }\n\n        // TODO: Add option for automatic ability boosting\n\n        if (!Number.isFinite(levelData.value)) {\n          levelData.value = levelData.max;\n        }\n      }\n    }\n\n    const maxLevelByAblScore = (spellbookAbility?.total ?? 0) - 10;\n\n    // Calculate base slots\n    /** @type {Record<number, SpellbookSlots>} */\n    const slots = {};\n\n    for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n      const levelData = levels.get(spellLevel);\n      levelData.value ||= 0; // HACK: Set spontaneous remaining casts to something sane. This shouldn't be necessary\n\n      // Insufficient ability score for the level\n      if (maxLevelByAblScore < spellLevel && book.noAbilityLimit !== true) {\n        levelData.hasIssues = true;\n        levelData.lowAbilityScore = true;\n      }\n\n      // Skip on the rest if this spell level is invalid\n      if (Number.isNaN(levelData.max)) continue;\n\n      // Base slots\n      const max = useAuto ? (isSpontaneous ? levelData.casts.max : levelData.preparation.max) : levelData.max || 0;\n      slots[spellLevel] = new SpellbookSlots({\n        level: spellLevel,\n        max,\n        domain: book.domainSlotValue,\n      });\n\n      // Slot usage\n      /** @type {pf1.documents.item.ItemSpellPF[]} */\n      const levelSpells = bookInfo.level[spellLevel]?.spells ?? [];\n      const lvlSlots = slots[spellLevel];\n\n      // Occupied slots\n      for (const spell of levelSpells) {\n        /** @type {number} */\n        let prepared;\n        if (isSpontaneous) prepared = spell.system.preparation?.value || 0;\n        else prepared = spell.system.preparation?.max || 0;\n        if (!prepared) continue;\n\n        const slotCost = spell.slotCost;\n        const slots = slotCost * prepared;\n\n        if (spell.isDomain) {\n          lvlSlots.domain -= slots;\n        } else {\n          lvlSlots.used += slots;\n        }\n\n        lvlSlots.value -= slots;\n      }\n\n      // True prepared reduce casts by prepared slots, arcanist and sorcerer for example do not\n      if (!isSpontaneous) levelData.value = lvlSlots.value;\n\n      // Add slot statistics\n      if (useAuto) {\n        levelData.slots.max = isSpontaneous ? levelData.casts.max : levelData.preparation.max;\n        if (isHybrid) levelData.slots.max -= levelData.domain.max;\n      } else {\n        levelData.slots.max = levelData.max;\n      }\n\n      levelData.slots.used = lvlSlots.used;\n      if (isPrepared) levelData.preparation.used = levelData.slots.used;\n      levelData.slots.remaining = levelData.slots.max - levelData.slots.used;\n      levelData.slots.excess = Math.max(0, -levelData.slots.remaining);\n      levelData.domain.remaining = lvlSlots.domain;\n      levelData.domain.used = 0;\n      levelData.domain.excess = Math.max(0, -levelData.domain.remaining);\n      levelData.mismatchSlots = -(\n        levelData.slots.excess +\n        levelData.domain.excess -\n        Math.max(0, levelData.slots.remaining)\n      );\n\n      if (levelData.mismatchSlots == 0) levelData.mismatchSlots = levelData.slots.remaining;\n\n      // Without auto or with any form of spontaneous, slots are impossible to calculate\n      if (useAuto || !isSpontaneous) {\n        levelData.invalidSlots = levelData.mismatchSlots != 0 || levelData.slots.remaining != 0;\n      }\n\n      // Finalize\n      let remaining = 0;\n      // True prepared (not hybrid either)\n      if (isPrepared && isPure) {\n        remaining = levelData.value;\n      }\n      // Spontaneous\n      else {\n        // Spontaneous and Hybrid\n        // if not prepared then base off of casts per day\n        const available = useAuto ? levelData.preparation.max : levelData.max;\n\n        if (Number.isNaN(available)) {\n          levelData.hasIssues = true;\n          levelData.lowLevel = true;\n        }\n\n        // Reset used, just in case\n        lvlSlots.used = 0;\n        levelData.domain.used = 0;\n        let domainRemaining = levelData.domain.max;\n\n        // Count spell slots used\n        for (const spell of bookInfo.level[spellLevel]?.spells ?? []) {\n          const { preparation, atWill, domain } = spell.system;\n          if (atWill) continue;\n          if (preparation.value <= 0) continue;\n\n          const slotCost = spell.slotCost;\n          if (domain && domainRemaining > 0) domainRemaining -= slotCost;\n          else lvlSlots.used += slotCost;\n        }\n\n        levelData.domain.used = levelData.domain.max - domainRemaining;\n        remaining = available - lvlSlots.used;\n      }\n\n      levelData.remaining = remaining;\n\n      // No more processing needed\n      // Detect domain slot problems\n      const domainSlotsRemaining = spellLevel > 0 ? lvlSlots.domain : 0;\n      if (remaining == 0 && domainSlotsRemaining <= 0) continue;\n      levelData.hasIssues = true;\n\n      // Only pure spontaneous tracks known, hybrid calculates prepared through this\n      if (isSpontaneous) {\n        levelData.known.used = lvlSlots.used;\n        // Pure\n        if (!isPrepared) {\n          const known = levelData.known.max - levelData.known.used;\n          levelData.known.unused = Math.max(0, known);\n          levelData.known.excess = -Math.min(0, known);\n          if (useAuto) {\n            levelData.mismatchKnown = known;\n            levelData.invalidKnown = levelData.known.unused != 0 || levelData.known.excess != 0;\n          }\n        }\n        // Hybrid\n        else {\n          if (useAuto) levelData.mismatchSlots = remaining;\n        }\n      }\n\n      // TODO: Figure out why NaN leaks here\n      if (isPrepared && Number.isFinite(levelData.preparation.max)) {\n        const maxSlots = levelData.preparation.max + levelData.preparation.domain;\n        levelData.preparation.unused = Math.max(0, maxSlots - levelData.preparation.used);\n      }\n\n      // With auto slots disabled and any kind of spontaneous, we know nothing\n      if (!useAuto && isSpontaneous) {\n        levelData.mismatchKnown = 0;\n        levelData.mismatchSlots = 0;\n        levelData.domain.remaining = 0;\n        levelData.slots.remaining = 0;\n      }\n    }\n\n    // Spell points\n    const useSpellPoints = book.spellPoints.useSystem === true;\n    if (useSpellPoints) {\n      const formula = book.spellPoints.maxFormula || \"0\";\n      rollData.ablMod = spellSlotAbilityMod;\n\n      rollData.classLevel = rollData.class?.level; // @deprecated - to be removed after v11\n\n      const roll = RollPF.safeRollSync(formula, rollData);\n      book.spellPoints.max = roll.total;\n    } else {\n      book.spellPoints.max = 0;\n    }\n\n    // Set spellbook ranges\n    book.range = new SpellRanges(book.cl.total);\n  }\n\n  /**\n   * Collect some basic spellbook info so it doesn't need to be gathered again for each spellbook.\n   *\n   * @internal\n   * @returns {{spells:ItemSpellPF[], books:Record<string,Spellbook>}} Spellbook cache\n   */\n  _generateSpellbookCache() {\n    const bookKeys = new Set(Object.keys(this.system.attributes.spells.spellbooks));\n\n    const allSpells = this.itemTypes.spell;\n\n    const cache = {\n      spells: allSpells,\n      /** @type {Record<string,Spellbook>} */\n      books: {},\n    };\n\n    // Prepare spellbooks\n    for (const bookKey of bookKeys) {\n      cache.books[bookKey] ??= new Spellbook(bookKey, this);\n    }\n\n    // Spread out spells to books\n    for (const spell of allSpells) {\n      const bookKey = spell.system.spellbook;\n      if (!bookKeys.has(bookKey)) {\n        console.error(\"Spell has invalid book\", spell);\n        continue;\n      }\n      cache.books[bookKey].addSpell(spell);\n    }\n\n    return cache;\n  }\n\n  /**\n   * Update all spellbooks\n   *\n   * @internal\n   * @param {object} [rollData] Roll data instance\n   * @param {object} [cache] Spellbook cache\n   */\n  updateSpellbookInfo(rollData, cache) {\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const spellbooks = this.system.attributes.spells.spellbooks;\n\n    // Set spellbook info\n    for (const bookKey of Object.keys(spellbooks)) {\n      this._updateSpellBook(bookKey, rollData, cache);\n\n      // Cleanup roll data modifications\n      delete rollData.class;\n      delete rollData.classLevel;\n      delete rollData.cl;\n      delete rollData.sl;\n      delete rollData.ablMod;\n    }\n  }\n\n  /**\n   * Called just before the first change is applied, and after every change is applied.\n   * Sets additional variables (such as spellbook range)\n   *\n   * @internal\n   */\n  refreshDerivedData() {\n    // Reset maximum dexterity bonus\n    this.system.attributes.maxDexBonus = null;\n    this.system.abilities.dex.maxBonus = this.system.abilities.dex.mod;\n\n    // Compute encumbrance\n    const encPen = this._computeEncumbrance();\n\n    // Apply armor penalties\n    const gearPen = this._applyArmorPenalties();\n\n    // Set armor check penalty\n    this.system.attributes.acp.encumbrance = encPen.acp;\n    this.system.attributes.acp.gear = gearPen.acp;\n    this.system.attributes.acp.total = Math.max(encPen.acp, gearPen.acp);\n    // Broken gear affects only skills\n    this.system.attributes.acp.skill = Math.max(encPen.acp, gearPen.acpSkill);\n\n    // Set maximum dexterity bonus\n    if (encPen.maxDexBonus != null || gearPen.maxDexBonus != null) {\n      this.system.attributes.maxDexBonus = Math.min(\n        encPen.maxDexBonus ?? Number.POSITIVE_INFINITY,\n        gearPen.maxDexBonus ?? Number.POSITIVE_INFINITY\n      );\n      this.system.abilities.dex.maxBonus = Math.min(\n        this.system.abilities.dex.maxBonus,\n        this.system.attributes.maxDexBonus\n      );\n    }\n  }\n\n  /**\n   * Augment the basic actor data with additional dynamic data.\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this._prepareNaturalReach();\n\n    this.system.traits ??= {};\n    this._finalizeTraits();\n\n    // Add incorporeal status if they have incorporeal creature type\n    if (this.system.traits?.creatureSubtypes?.standard?.has(\"incorporeal\")) {\n      this.statuses.add(\"incorporeal\");\n      this.system.conditions.incorporeal = true;\n    }\n\n    this.system.attributes ??= {};\n\n    this._prepareCreatureType();\n\n    // Reset roll data cache\n    // Some changes act wonky without this\n    // Example: `@skills.hea.rank >= 10 ? 6 : 3` doesn't work well without this\n    this._rollData = null;\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Update dependant data and resources\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    const natReach = this.system.traits.reach.total;\n    // Ensure reach never becomes negative value\n    if (natReach.melee < 0) natReach.melee = 0;\n    if (natReach.reach < 0) natReach.reach = 0;\n\n    // Prepare specific derived data\n    // Final weight, ability modifiers, etc.\n    this.prepareSpecificDerivedData();\n\n    // Prepare CMB total\n    this.prepareCMB();\n\n    this._prepareOverlandSpeeds();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update items\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  /**\n   * Calculate overland speeds.\n   *\n   * @protected\n   */\n  _prepareOverlandSpeeds() {\n    for (const speed of Object.values(this.system.attributes?.speed ?? {})) {\n      speed.overland = speed.total > 0 ? pf1.utils.overlandSpeed(speed.total).speed : 0;\n    }\n  }\n\n  /**\n   * Prepare total CMB value.\n   *\n   * @todo Move all the logic here to the Change system.\n   *\n   * @protected\n   */\n  prepareCMB() {\n    const shrAtk = this.system.attributes.attack.shared ?? 0,\n      genAtk = this.system.attributes.attack.general ?? 0,\n      cmbAbl = this.system.attributes.cmbAbility,\n      cmbAblMod = this.system.abilities[cmbAbl]?.mod ?? 0,\n      size = this.system.traits.size.value,\n      szCMBMod = Object.values(pf1.config.sizeSpecialMods)[size] ?? 0,\n      cmbBonus = this.system.attributes.cmb.bonus ?? 0,\n      cmb = shrAtk + genAtk + szCMBMod + cmbBonus + cmbAblMod;\n    this.system.attributes.cmb.total = cmb;\n  }\n\n  /**\n   * @protected\n   */\n  prepareSpecificDerivedData() {\n    if (Hooks.events.pf1PrepareDerivedActorData?.length) {\n      Hooks.callAll(\"pf1PrepareDerivedActorData\", this);\n    }\n\n    this.refreshDerivedData();\n\n    const attributes = this.system.attributes,\n      /** @type {Record<string,AbilityScoreData>} */\n      abilities = this.system.abilities;\n\n    // Set base ability modifier\n    for (const ablKey of Object.keys(abilities)) {\n      const abl = abilities[ablKey];\n      const base = abl.base;\n      const penalty = abl.penalty || 0;\n      const damage = abl.damage;\n      abl.baseMod = pf1.utils.getAbilityModifier(base, { penalty, damage });\n      // Save also unmodified modifier\n      abl.unmod = pf1.utils.getAbilityModifier(abl.undrained);\n    }\n\n    const actorData = this.system;\n\n    // Round health\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    for (const k of [\"hp\", \"vigor\"]) {\n      attributes[k].max = round(attributes[k].max);\n    }\n\n    // Offset relative health\n    for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = this.system.attributes[key];\n      if (Number.isFinite(hp?.offset)) {\n        hp.value = hp.max + hp.offset;\n      }\n    }\n\n    // Shared attack bonuses\n    {\n      // Total\n      const totalAtk = attributes.bab.total - attributes.acp.attackPenalty - (attributes.energyDrain ?? 0);\n      attributes.attack.shared = totalAtk;\n    }\n\n    // Update wound threshold\n    this.updateWoundThreshold();\n\n    // Create arbitrary skill slots\n    for (const skillId of pf1.config.arbitrarySkills) {\n      if (actorData.skills[skillId] == null) continue;\n      /** @type {SkillData} */\n      const skill = actorData.skills[skillId];\n      skill.subSkills = skill.subSkills || {};\n      for (const subSkillId of Object.keys(skill.subSkills)) {\n        if (skill.subSkills[subSkillId] == null) delete skill.subSkills[subSkillId];\n      }\n    }\n\n    // Delete removed skills\n    for (const skillId of Object.keys(actorData.skills)) {\n      const skl = actorData.skills[skillId];\n      if (skl == null) {\n        delete actorData.skills[skillId];\n      }\n    }\n\n    // Mark background skills\n    for (const skillId of Object.keys(actorData.skills)) {\n      if (pf1.config.backgroundSkills.includes(skillId)) {\n        const skill = actorData.skills[skillId];\n        skill.background = true;\n        for (const subSkillId of Object.keys(skill.subSkills ?? {})) skill.subSkills[subSkillId].background = true;\n      }\n    }\n\n    // Combine AC types\n    for (const k of [\"ac.normal.total\", \"ac.shield.total\", \"ac.natural.total\"]) {\n      const v = foundry.utils.getProperty(actorData, k);\n      if (v) {\n        for (const k2 of [\"normal\", \"flatFooted\"]) {\n          attributes.ac[k2].total += v;\n        }\n      }\n    }\n\n    // Add Dexterity to AC\n    {\n      // get configured ability scores\n      const acAbl = attributes.ac.normal.ability ?? \"dex\";\n      const acTouchAbl = attributes.ac.touch.ability ?? \"dex\";\n      const cmdDexAbl = attributes.cmd.dexAbility ?? \"dex\";\n      let acAblMod = abilities[acAbl]?.mod ?? 0;\n      let acTouchAblMod = abilities[acTouchAbl]?.mod ?? 0;\n      const cmdDexAblMod = abilities[cmdDexAbl]?.mod ?? 0;\n      if (this.changeFlags[\"loseDexToAC\"]) {\n        acAblMod = Math.min(acAblMod, 0);\n        acTouchAblMod = Math.min(acTouchAblMod, 0);\n      }\n      const maxDex = attributes.maxDexBonus ?? null;\n      const ac = {\n        normal: maxDex !== null ? Math.min(maxDex, acAblMod) : acAblMod,\n        touch: maxDex !== null ? Math.min(maxDex, acTouchAblMod) : acTouchAblMod,\n        flatFooted: Math.min(0, acAblMod),\n      };\n      const acAblKey = {\n        normal: acAbl,\n        touch: acTouchAbl,\n        flatFooted: acAbl,\n      };\n      const cmd = {\n        total: cmdDexAblMod,\n        flatFootedTotal: Math.min(0, cmdDexAblMod),\n      };\n      for (const [k, v] of Object.entries(ac)) {\n        attributes.ac[k].total += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.ac.${k}.total`).positive.push({\n          value: v,\n          name: pf1.config.abilities[acAblKey[k]],\n        });\n      }\n      for (const [k, v] of Object.entries(cmd)) {\n        attributes.cmd[k] += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.cmd.${k}`).positive.push({\n          value: v,\n          name: pf1.config.abilities[cmdDexAbl],\n        });\n      }\n    }\n\n    // Reduce final speed under certain circumstances\n    {\n      let reducedSpeed = false;\n      const sInfo = { name: \"\", value: game.i18n.localize(\"PF1.ReducedMovementSpeed\") };\n\n      // from encumbrance\n      const encLevel = attributes.encumbrance.level;\n      if (encLevel > 0) {\n        const encLevels = pf1.config.encumbranceLevels;\n        if (encLevel >= encLevels.heavy) {\n          if (!this.changeFlags.noHeavyEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.HeavyEncumbrance\");\n          }\n        } else if (encLevel >= encLevels.medium) {\n          if (!this.changeFlags.noMediumEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.MediumEncumbrance\");\n          }\n        }\n      }\n\n      const armor = { type: 0 };\n      const eqData = this.equipment;\n      if (eqData) this._prepareArmorData(eqData.armor, armor);\n\n      // Wearing heavy armor\n      if (armor.type == pf1.config.armorTypes.heavy && !this.changeFlags.heavyArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.heavy\");\n      }\n      // Wearing medium armor\n      else if (armor.type == pf1.config.armorTypes.medium && !this.changeFlags.mediumArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.medium\");\n      }\n\n      for (const speedKey of Object.keys(this.system.attributes.speed)) {\n        const speedValue = this.system.attributes.speed[speedKey].total;\n        // Save speed unaffected by speed maluses here (not counting negative changes)\n        // TODO: Somehow make this ignore additional set operators\n        this.system.attributes.speed[speedKey].unhindered = speedValue; // @since PF1 v10\n\n        if (reducedSpeed && speedValue > 0) {\n          this.system.attributes.speed[speedKey].total = this.constructor.getReducedMovementSpeed(speedValue);\n          getSourceInfo(this.sourceInfo, `system.attributes.speed.${speedKey}.total`).negative.push(sInfo);\n        }\n      }\n    }\n\n    // Add encumbrance source details\n    let encACPPenalty = null,\n      encMaxDex = null;\n    switch (attributes.encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium: {\n        encACPPenalty = 3;\n        encMaxDex = 3;\n        break;\n      }\n      case pf1.config.encumbranceLevels.heavy: {\n        encACPPenalty = 6;\n        encMaxDex = 1;\n        break;\n      }\n    }\n    const encLabel = game.i18n.localize(\"PF1.Encumbrance\");\n    if (encACPPenalty !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n        name: encLabel,\n        value: encACPPenalty,\n      });\n    }\n    if (encMaxDex !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n        name: encLabel,\n        value: encMaxDex,\n      });\n      let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(encMaxDex);\n      maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.normal.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.touch.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n    }\n\n    // Enable senses based on flags\n    const senses = this.system.traits.senses;\n    senses.ll.enabled ||= this.changeFlags.lowLightVision;\n    senses.si ||= this.changeFlags.seeInvisibility;\n    senses.sid ||= this.changeFlags.seeInDarkness;\n\n    this.updateSpellbookInfo();\n  }\n\n  /**\n   * Returns this actor's labels for use with sheets.\n   *\n   * @protected\n   * @returns {Record<string, string>} - Label object\n   */\n  getLabels() {\n    const labels = {};\n\n    labels.alignment = pf1.config.alignments[this.system.details.alignment];\n\n    // Speed\n    labels.speed = {};\n    for (const [key, obj] of Object.entries(this.system.attributes.speed ?? {})) {\n      const dist = pf1.utils.convertDistance(obj.total);\n      labels.speed[key] = `${dist[0]} ${pf1.config.measureUnitsShort[dist[1]]}`;\n    }\n\n    return labels;\n  }\n\n  /**\n   * Computes armor penalties for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from armor.\n   */\n  _applyArmorPenalties() {\n    let attackACPPenalty = 0; // ACP to attack penalty from lacking proficiency. Stacks infinitely.\n    const acp = { armor: 0, shield: 0 };\n    const broken = { armor: { value: 0, item: null }, shield: { value: 0, item: null } };\n    const mdex = { armor: null, shield: null };\n\n    const equipment = this.itemTypes.equipment;\n    for (const item of equipment) {\n      if (!item.system.equipped) continue;\n\n      let eqType = item.system.subType;\n      const isShieldOrArmor = [\"armor\", \"shield\"].includes(eqType);\n      // Cast anything else to armor\n      if (!isShieldOrArmor) eqType = \"armor\";\n\n      let itemACP = item.system.armor?.acp ?? 0;\n      if (!Number.isFinite(itemACP)) itemACP = 0;\n\n      if (item.system.masterwork === true && isShieldOrArmor) itemACP = Math.max(0, itemACP - 1);\n\n      itemACP = Math.max(0, itemACP + (this.system.attributes?.acp?.[`${eqType}Bonus`] ?? 0));\n\n      if (itemACP) {\n        if (item.isBroken) {\n          broken[eqType].value = itemACP;\n          broken[eqType].item = item;\n\n          const bsInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.find(\n            (o) => o.itemId === item.id\n          );\n          if (bsInfo) bsInfo.value = itemACP;\n          else {\n            getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.push({\n              name: `${item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n              itemId: item.id,\n              value: itemACP,\n            });\n          }\n        }\n\n        const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.find(\n          (o) => o.itemId === item.id\n        );\n\n        if (sInfo) sInfo.value = itemACP;\n        else {\n          getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n            name: item.name,\n            itemId: item.id,\n            value: itemACP,\n          });\n        }\n      }\n\n      if (itemACP > acp[eqType]) acp[eqType] = itemACP;\n      try {\n        if (!item.getProficiency(false)) attackACPPenalty += itemACP;\n      } catch {\n        /* item does not support proficiency */\n      }\n\n      const mDex = item.system.armor.dex;\n      if (Number.isFinite(mDex)) {\n        const mod = this.system.attributes?.mDex?.[`${eqType}Bonus`] ?? 0;\n        const itemMDex = mDex + mod;\n        mdex[eqType] = Math.min(itemMDex, mdex[eqType] ?? Number.POSITIVE_INFINITY);\n\n        const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.find(\n          (o) => o.itemId === item.id\n        );\n        if (sInfo) sInfo.value = itemMDex;\n        else {\n          getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n            name: item.name,\n            itemId: item.id,\n            value: itemMDex,\n            ignoreNull: false,\n          });\n        }\n\n        // Add max dex to AC, too.\n        let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(itemMDex);\n        maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n        for (const p of [\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\"]) {\n          // Use special maxDex id to ensure only the worst is shown\n          const sInfoA = getSourceInfo(this.sourceInfo, p).negative.find((o) => o.id === \"maxDexEq\");\n          if (sInfoA) {\n            if (itemMDex < sInfoA.valueAsNumber) {\n              sInfoA.value = maxDexLabel;\n              sInfoA.valueAsNumber = itemMDex;\n              sInfoA.itemId = item.id;\n              sInfoA.name = item.name;\n            } else if (sInfoA.itemId == item.id) {\n              // Update existing (armor training or the like)\n              sInfoA.value = maxDexLabel;\n              sInfoA.valueAsNumber = itemMDex;\n            }\n          } else {\n            getSourceInfo(this.sourceInfo, p).negative.push({\n              name: item.name,\n              value: maxDexLabel,\n              valueAsNumber: itemMDex,\n              itemId: item.id,\n              id: \"maxDexEq\",\n            });\n          }\n        }\n      }\n    }\n\n    // Add Broken to sources\n    for (const eqType of Object.keys(broken)) {\n      const value = broken[eqType].value;\n      if (value == 0) continue;\n      const brokenId = broken[eqType].item.id;\n      const sInfo = getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.find(\n        (o) => o.brokenId === brokenId\n      );\n      if (sInfo) sInfo.value = value;\n      else\n        getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.push({\n          name: `${broken[eqType].item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n          brokenId,\n          value,\n        });\n    }\n\n    // Return result\n    const totalACP = acp.armor + acp.shield;\n    const result = {\n      maxDexBonus: null,\n      acp: totalACP,\n      acpSkill: totalACP + broken.armor.value + broken.shield.value,\n    };\n    this.system.attributes.acp.gear = totalACP;\n    if (mdex.armor !== null || mdex.shield !== null)\n      result.maxDexBonus = Math.min(mdex.armor ?? Number.POSITIVE_INFINITY, mdex.shield ?? Number.POSITIVE_INFINITY);\n\n    // Set armor penalty to attack rolls\n    this.system.attributes.acp.attackPenalty = attackACPPenalty;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  prepareItemLinks() {\n    for (const item of this.items) {\n      const links = item.system.links;\n      if (!links) continue;\n\n      for (const type of Object.keys(links)) {\n        for (const link of links[type]) {\n          // HACK: fromUuid[Sync]() causes recursive synth actor initialization at world launch, so we do this instead\n          if (!link.uuid) {\n            console.warn(`\"${item.name}\" on \"${this.name}\" has invalid link in \"${type}\"`, { link, item });\n            continue;\n          }\n          const linkData = foundry.utils.parseUuid(link.uuid, { relative: this });\n          const linkedItem = this.items.get(linkData?.id);\n          if (!linkedItem) continue; // Ignore items not on current actor\n\n          switch (type) {\n            case \"charges\": {\n              linkedItem.links.charges = item;\n              linkedItem.prepareLinks();\n              break;\n            }\n            case \"children\": {\n              linkedItem.links.parent = item;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @deprecated - Use {@link getSourceDetails()} instead.\n   * @type {object}\n   */\n  get sourceDetails() {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.sourceDetails is deprecated in favor of ActorPF.getSourceDetails()\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    const actor = this;\n\n    // Redirect to getSourceDetails()\n    const sourceDetailsHandler = {\n      get(_, prop) {\n        return actor.getSourceDetails(prop);\n      },\n    };\n\n    return new Proxy({}, sourceDetailsHandler);\n  }\n\n  /**\n   * Retrieve source details regarding a change target.\n   *\n   * @example\n   * ```js\n   * actor.getSourceDetails(\"system.attributes.hp.max\");\n   * ```\n   * @todo - Merge `sourceInfo` into the change system to reduce underlying system complexity\n   * @param {string} path - Change target path\n   * @returns {SourceInfo[]}\n   */\n  getSourceDetails(path) {\n    const sources = [];\n\n    const dexDenied = this.changeFlags.loseDexToAC === true;\n\n    // Add extra data\n    const rollData = this.getRollData();\n    const changeGrp = this.sourceInfo[path] ?? {};\n    const sourceGroups = Object.values(changeGrp);\n\n    const typeBonuses = {};\n\n    for (const grp of sourceGroups) {\n      for (const src of grp) {\n        src.operator ||= \"add\";\n        let srcValue =\n          src.value != null\n            ? src.value\n            : RollPF.safeRollSync(src.formula || \"0\", rollData, [path, src, this], {\n                suppressError: !this.isOwner,\n              }).total;\n        if (src.operator === \"set\") {\n          let displayValue = srcValue;\n          if (src.change?.isDistance) displayValue = pf1.utils.convertDistance(displayValue)[0];\n          srcValue = game.i18n.format(\"PF1.SetTo\", { value: displayValue });\n        }\n\n        // Add sources only if they actually add something else than zero\n        if (!(src.operator === \"add\" && srcValue === 0) || src.ignoreNull === false) {\n          // Account for dex denied denying dodge bonuses\n          if (dexDenied && srcValue > 0 && src.modifier === \"dodge\" && src.operator === \"add\" && src.change?.isAC)\n            continue;\n\n          // TODO: Separate source name from item type label\n          const label = this.constructor._getSourceLabel(src);\n          const info = { name: label.replace(/[[\\]]/g, \"\"), value: srcValue, modifier: src.modifier || null };\n          if (src.id) info.id = src.id;\n          typeBonuses[src.modifier || \"untyped\"] ??= [];\n          typeBonuses[src.modifier || \"untyped\"].push(info);\n          sources.push(info);\n        }\n      }\n    }\n\n    // Sort and disable entries\n    const stacking = new Set(pf1.config.stackingBonusTypes);\n    for (const [type, entries] of Object.entries(typeBonuses)) {\n      if (stacking.has(type)) continue;\n      entries.sort((a, b) => b.value - a.value);\n      for (const entry of entries) {\n        entry.disabled = entry.value >= 0 || typeof entry.value !== \"number\";\n      }\n      entries[0].disabled = false;\n    }\n\n    return sources;\n  }\n\n  /**\n   * @internal\n   * @returns {Record<string,*>} - Path to value mapping\n   */\n  _getInherentTotalsKeys() {\n    // Determine base keys\n    const keys = {\n      \"attributes.ac.normal.total\": 10,\n      \"attributes.ac.touch.total\": 10,\n      \"attributes.ac.flatFooted.total\": 10,\n      \"attributes.bab.total\": 0,\n      \"attributes.cmd.total\": 10,\n      \"attributes.cmd.flatFootedTotal\": 10,\n      \"attributes.acp.armorBonus\": 0,\n      \"attributes.acp.shieldBonus\": 0,\n      \"attributes.acp.gear\": 0,\n      \"attributes.acp.encumbrance\": 0,\n      \"attributes.acp.total\": 0,\n      \"attributes.acp.skill\": 0,\n      \"attributes.acp.attackPenalty\": 0,\n      \"attributes.maxDexBonus\": null,\n      \"ac.normal.total\": 0,\n      \"ac.normal.base\": 0,\n      \"ac.normal.enh\": 0,\n      \"ac.normal.misc\": 0,\n      \"ac.natural.total\": 0,\n      \"ac.natural.base\": 0,\n      \"ac.natural.misc\": 0,\n      \"ac.natural.enh\": 0,\n      \"ac.shield.total\": 0,\n      \"ac.shield.base\": 0,\n      \"ac.shield.enh\": 0,\n      \"ac.shield.misc\": 0,\n      \"attributes.sr.total\": 0,\n      \"attributes.init.bonus\": 0,\n      \"attributes.init.total\": this.system.attributes.init.value ?? 0,\n      \"attributes.cmb.bonus\": 0,\n      \"attributes.cmb.total\": 0,\n      \"attributes.cmb.value\": 0,\n      \"attributes.hp.max\": this.system.attributes.hp.base ?? 0,\n      \"attributes.vigor.max\": this.system.attributes.vigor.base ?? 0,\n      \"attributes.wounds.max\": this.system.attributes.wounds.base ?? 0,\n      \"attributes.wounds.threshold\": 0,\n      \"attributes.attack.general\": 0,\n      \"attributes.attack.melee\": 0,\n      \"attributes.attack.natural\": 0,\n      \"attributes.attack.ranged\": 0,\n      \"attributes.attack.thrown\": 0,\n      \"attributes.attack.shared\": 0,\n      \"attributes.attack.critConfirm\": 0,\n      \"attributes.mDex\": { armorBonus: 0, shieldBonus: 0 },\n      \"attributes.damage.general\": 0,\n      \"attributes.damage.weapon\": 0,\n      \"attributes.damage.natural\": 0,\n      \"attributes.damage.melee\": 0, // Melee weapon\n      \"attributes.damage.meleeAll\": 0,\n      \"attributes.damage.ranged\": 0, // Ranged weapon\n      \"attributes.damage.rangedAll\": 0,\n      \"attributes.damage.thrown\": 0, // Thrown weapon\n      \"attributes.damage.spell\": 0,\n      \"attributes.damage.shared\": 0,\n      \"attributes.woundThresholds.level\": 0,\n      \"attributes.woundThresholds.mod\": 0,\n      \"attributes.woundThresholds.penaltyBase\": 0,\n      \"attributes.woundThresholds.penalty\": 0,\n      \"abilities.str.checkMod\": 0,\n      \"abilities.str.total\": 0,\n      \"abilities.str.undrained\": 0,\n      \"abilities.dex.checkMod\": 0,\n      \"abilities.dex.total\": 0,\n      \"abilities.dex.undrained\": 0,\n      \"abilities.con.checkMod\": 0,\n      \"abilities.con.total\": 0,\n      \"abilities.con.undrained\": 0,\n      \"abilities.int.checkMod\": 0,\n      \"abilities.int.total\": 0,\n      \"abilities.int.undrained\": 0,\n      \"abilities.wis.checkMod\": 0,\n      \"abilities.wis.total\": 0,\n      \"abilities.wis.undrained\": 0,\n      \"abilities.cha.checkMod\": 0,\n      \"abilities.cha.total\": 0,\n      \"abilities.cha.undrained\": 0,\n      \"attributes.spells.spellbooks.primary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.secondary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.concentration.total\": 0,\n      \"attributes.spells.spellbooks.primary.cl.total\": 0,\n      \"attributes.spells.spellbooks.secondary.cl.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.cl.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.cl.total\": 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n      \"details.feats.bonus\": 0,\n      \"details.skills.bonus\": 0,\n      \"attributes.speed.land.add\": 0,\n      \"attributes.speed.swim.add\": 0,\n      \"attributes.speed.fly.add\": 0,\n      \"attributes.speed.climb.add\": 0,\n      \"attributes.speed.burrow.add\": 0,\n      \"attributes.savingThrows.fort.total\": this.system.attributes.savingThrows.fort.base ?? 0,\n      \"attributes.savingThrows.ref.total\": this.system.attributes.savingThrows.ref.base ?? 0,\n      \"attributes.savingThrows.will.total\": this.system.attributes.savingThrows.will.base ?? 0,\n    };\n\n    // Determine skill keys\n    try {\n      const skillKeys = getChangeFlat(this, \"skills\");\n      for (const k of skillKeys) {\n        keys[k.replace(/^system\\./, \"\")] = 0;\n      }\n    } catch (err) {\n      console.error(\"Could not determine skills for an actor\", this, err);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Data to reset base value of, but only if missing.\n   *\n   * @private\n   * @see {@link _resetInherentTotals}\n   * @returns {Record<string,number>} - Base fill keys\n   */\n  _getBaseValueFillKeys() {\n    return [\n      { parent: \"abilities.str\", key: \"base\", value: 0 },\n      { parent: \"abilities.dex\", key: \"base\", value: 0 },\n      { parent: \"abilities.con\", key: \"base\", value: 0 },\n      { parent: \"abilities.int\", key: \"base\", value: 0 },\n      { parent: \"abilities.wis\", key: \"base\", value: 0 },\n      { parent: \"abilities.cha\", key: \"base\", value: 0 },\n    ];\n  }\n\n  /**\n   * @protected\n   */\n  _resetInherentTotals() {\n    const keys = this._getInherentTotalsKeys();\n\n    // Reset totals\n    for (const [k, v] of Object.entries(keys)) {\n      try {\n        foundry.utils.setProperty(this.system, k, v);\n      } catch (err) {\n        console.error(err, k);\n      }\n    }\n\n    for (const data of this._getBaseValueFillKeys()) {\n      const { parent, key, value } = data;\n      const o = foundry.utils.getProperty(this.system, parent);\n      if (!o) continue; // Not all actor types have these\n      o[key] ??= value;\n    }\n  }\n\n  /**\n   * Return reduced movement speed.\n   *\n   * @example\n   * ```js\n   * pf1.documents.actor.ActorPF.getReducedMovementSpeed(30); // => 20\n   * ```\n   *\n   * @param {number} value - The non-reduced movement speed.\n   * @returns {number} The reduced movement speed.\n   */\n  static getReducedMovementSpeed(value) {\n    return value - Math.floor(value / 5 / 3) * 5;\n  }\n\n  /**\n   * Return increased amount of spell slots by ability score modifier.\n   *\n   * @example\n   * ```js\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(2, 1); // => 1\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 1); // => 2\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 7); // => 0\n   * ```\n   *\n   * @param {number} mod - The associated ability modifier.\n   * @param {number} level - Spell level.\n   * @returns {number} Amount of spell levels to increase.\n   */\n  static getSpellSlotIncrease(mod, level) {\n    if (level === 0) return 0;\n    if (mod <= 0) return 0;\n    return Math.max(0, Math.ceil((mod + 1 - level) / 4));\n  }\n\n  /**\n   * Return the amount of experience required to gain a certain character level.\n   *\n   * @abstract\n   * @param {number} level - The desired level\n   * @returns {number} - The XP required\n   */\n  // eslint-disable-next-line no-unused-vars\n  getLevelExp(level) {\n    return 0; // Only used by PCs\n  }\n\n  /**\n   * Create a new Token document, not yet saved to the database, which represents the Actor, and apply actor size to it.\n   *\n   * @override\n   * @param {object} [data={}]            Additional data, such as x, y, rotation, etc. for the created token data\n   * @param {object} [options={}]         The options passed to the TokenDocument constructor\n   * @returns {Promise<TokenDocumentPF>}  The created TokenDocument instance\n   */\n  async getTokenDocument(data = {}, options = {}) {\n    const sizeValue = this.system.traits?.size?.value;\n    if (!this.prototypeToken.flags?.pf1?.staticSize && Number.isFinite(sizeValue)) {\n      const maxSizeIndex = Object.values(pf1.config.sizeChart).length - 1;\n      const sizeIndex = Math.clamp(sizeValue, 0, maxSizeIndex);\n      const size = Object.values(pf1.config.tokenSizes)[sizeIndex];\n      if (size) {\n        foundry.utils.mergeObject(data, {\n          width: size.w,\n          height: size.h,\n          texture: {\n            scaleX: size.scale * (this.prototypeToken.texture.scaleX || 1),\n            scaleY: size.scale * (this.prototypeToken.texture.scaleY || 1),\n          },\n        });\n      }\n    }\n\n    return super.getTokenDocument(data, options);\n  }\n\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return; // No system updates.\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const oldData = this.system;\n\n    // Offset HP values\n    const attributes = changed.system.attributes;\n    if (attributes) {\n      for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = attributes[key];\n        if (!hp) continue;\n        if (hp.value !== undefined && hp.offset === undefined) {\n          const max = hp.max ?? oldData.attributes[key]?.max ?? 0;\n          hp.offset = hp.value - max;\n        }\n        // Do not ever keep .value\n        delete hp.value;\n      }\n\n      // Convert excess vigor damage to wounds\n      const vigor = attributes.vigor;\n      if (vigor?.offset < 0) {\n        const maxVigor = oldData.attributes.vigor.max;\n        const excessVigorDamage = -(maxVigor + vigor.offset);\n        if (excessVigorDamage > 0) {\n          attributes.wounds ??= {};\n          attributes.wounds.offset ??= oldData.attributes?.wounds?.offset ?? 0;\n          attributes.wounds.offset -= excessVigorDamage;\n          vigor.offset = -maxVigor;\n        }\n      }\n    }\n\n    if (changed.system.attributes?.quadruped !== undefined) {\n      const quad = changed.system.attributes.quadruped;\n      const quadRace = this.race?.system.quadruped ?? false;\n      // Null if setting quadruped to same as race (no override)\n      if (quad === quadRace) changed.system.attributes.quadruped = null;\n    }\n\n    // Make certain variables absolute\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const absoluteKeys = [\"userPenalty\", \"damage\", \"drain\"];\n      const keys = Object.keys(abilities);\n      for (const abl of keys) {\n        const ablData = abilities[abl];\n        if (!ablData) continue; // e.g. if null from being deleted for homebrew\n        for (const absKey of absoluteKeys) {\n          if (ablData[absKey] !== undefined) {\n            ablData[absKey] = Math.abs(ablData[absKey]);\n          }\n        }\n      }\n    }\n\n    const energyDrain = changed.system.attributes?.energyDrain;\n    if (energyDrain !== undefined) {\n      changed.system.attributes.energyDrain = Math.abs(energyDrain);\n    }\n\n    // Never allow updates to the new conditions location\n    if (changed.system.conditions !== undefined) {\n      delete changed.system.conditions;\n    }\n\n    // Adjust spellbook data\n    const books = changed.system.attributes?.spells?.spellbooks;\n    if (books) {\n      const cbooks = this.system.attributes?.spells?.spellbooks;\n      for (const [bookId, bookData] of Object.entries(books)) {\n        const prepMode = bookData.spellPreparationMode;\n        if (prepMode !== cbooks[bookId].spellPreparationMode) {\n          const prog = bookData.casterType || cbooks[bookId].casterType;\n          const progs = pf1.config.casterProgression.castsPerDay[prepMode] ?? {};\n          // Reset invalid progression to first choice\n          if (!progs[prog]) bookData.casterType = Object.keys(progs)[0];\n        }\n      }\n    }\n\n    this._detectHealthChange(changed, context);\n  }\n\n  /**\n   * Detect Health Changes\n   *\n   * Builds data for post-update handling of deltas, stored in `context.pf1.deltas`.\n   *\n   * @internal\n   * @abstract\n   * @param {object} changed\n   * @param {object} context\n   */\n  _detectHealthChange(changed, context) {}\n\n  /**\n   * Synchronize actor and token vision\n   *\n   * @internal\n   * @param {boolean} initializeVision - Initialize vision\n   * @param {boolean} refreshLighting - Refresh lightning\n   */\n  updateVision(initializeVision = false, refreshLighting = false) {\n    if (!this.testUserPermission(game.user, \"OBSERVER\")) return;\n\n    const visionUpdate = {\n      refreshLighting: true,\n      refreshVision: true,\n    };\n\n    /** @type {TokenDocumentPF[]} */\n    let tokens = this.getActiveTokens(false, true).filter((t) => t.sight.enabled);\n    const needSelection = game.settings.get(\"pf1\", \"lowLightVisionMode\");\n    if (needSelection) tokens = tokens.filter((t) => t.object?.controlled ?? false);\n\n    // Skip refresh if no tokens with vision present on scene\n    if (tokens.length == 0) return;\n\n    // Ensure vision immediately updates\n    if (initializeVision) {\n      for (const token of tokens) {\n        token._syncSenses();\n\n        // The following ensures darkvision and similar change takes effect immediately instead of after token update (e.g. move)\n        token.object.initializeVisionSource();\n      }\n      visionUpdate.initializeVision = true;\n\n      // Re-init light sources in case LLV was toggled\n      pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n    }\n\n    // Ensure LLV functions correctly\n    if (refreshLighting) {\n      visionUpdate.initializeLighting = true;\n    }\n\n    canvas.perception.update(visionUpdate);\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // No system data updated\n    if (!changed.system) return;\n\n    const sourceUser = game.user.id === userId;\n\n    let initializeVision = false,\n      refreshLighting = false;\n\n    if (foundry.utils.hasProperty(changed.system, \"traits.senses\")) {\n      initializeVision = true;\n      if (changed.system.traits.senses.ll) {\n        refreshLighting = true;\n      }\n    } else if (changed.flags?.pf1?.visionSharing) {\n      initializeVision = true;\n      refreshLighting = true;\n    }\n\n    if (initializeVision || refreshLighting) {\n      this.updateVision(initializeVision, refreshLighting);\n    }\n\n    // Handle base size change\n    // TODO: Combine this test with testing updated items to reduce updates\n    if (sourceUser && changed?.system?.traits?.size) {\n      this._updateTokenSize();\n    }\n  }\n\n  /**\n   * Resize token sizes based on actor size.\n   *\n   * Ignores tokens with static size set.\n   *\n   * @todo Add option to update token size on all scenes.\n   *\n   * @internal\n   * @param {string} [sizeKey] - Size key to update to. If not provided, will use actor's current size.\n   * @returns {Promise<TokenDocument[]|null>} - Updated token documents, or null if no update was performed.\n   * @throws {Error} - On invalid parameters\n   */\n  async _updateTokenSize(sizeKey = undefined) {\n    const scene = canvas.scene;\n    if (!scene) return null;\n\n    if (!sizeKey) {\n      const sizes = Object.keys(pf1.config.tokenSizes);\n      sizeKey = sizes[this.getRollData({ refresh: true }).size];\n      if (sizeKey === undefined) return;\n    }\n\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) throw new Error(`Size key \"${sizeKey}\" is invalid`);\n\n    // Get relevant tokens\n    const tokens = (this.token ? [this.token] : this.getActiveTokens(false, true)).filter(\n      (token) => !token.getFlag(\"pf1\", \"staticSize\")\n    );\n\n    const { scaleX, scaleY } = this.prototypeToken?.texture ?? {};\n\n    const updates = tokens.map((t) => ({\n      _id: t.id,\n      width: size.w,\n      height: size.h,\n      texture: {\n        scaleX: size.scale * (scaleX || 1),\n        scaleY: size.scale * (scaleY || 1),\n      },\n    }));\n\n    if (!updates.length) return;\n\n    return TokenDocument.implementation.updateDocuments(updates, { parent: scene });\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {Item|Actor} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item[]|ActiveEffect[]} documents - Created documents\n   * @param {object[]} result - Creation data for the documents\n   * @param {object} context - Create context options\n   * @param {string} userId - Triggering user's ID\n   */\n  _onCreateDescendantDocuments(parent, collection, documents, result, context, userId) {\n    super._onCreateDescendantDocuments(...arguments);\n\n    if (userId !== game.user.id) return;\n\n    if (collection === \"items\") {\n      // Apply race size to actor\n      const race = documents.find((d) => d.type === \"race\");\n      if (race?.system.size) {\n        if (this.system.traits.size?.base !== race.system.size) this.update({ \"system.traits.size\": race.system.size });\n      }\n    }\n\n    if (collection === \"effects\") {\n      if (context.pf1?.updateConditionTracks !== false) {\n        this._handleConditionTracks(documents, context);\n      }\n    }\n  }\n\n  /**\n   * Handle condition track toggling post active effect creation if there's still some issues.\n   *\n   * @internal\n   * @param {ActiveEffect[]} documents - Updated active effect documents\n   * @returns {Promise<object>} - Result from {@link ActorPF.setConditions}\n   */\n  async _handleConditionTracks(documents) {\n    // Record of previously update conditions that didn't get notified about\n    const previousConditions = {};\n\n    const conditions = {};\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const ae of documents) {\n      for (const statusId of ae.statuses ?? []) {\n        // Skip non-conditions\n        if (!pf1.registry.conditions.has(statusId)) continue;\n\n        // Mark this condition for notification\n        previousConditions[statusId] = true;\n\n        // Process condition tracks\n        for (const conditionGroup of tracks) {\n          if (!conditionGroup.includes(statusId)) continue;\n          // Disable other conditions in the track\n          for (const disableConditionId of conditionGroup) {\n            if (disableConditionId === statusId) continue;\n            conditions[disableConditionId] = false;\n          }\n        }\n      }\n    }\n\n    this._conditionToggleNotify(previousConditions);\n\n    if (!foundry.utils.isEmpty(conditions)) {\n      return this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {*} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item|ActiveEffect[]} documents - Document array\n   * @param {string[]} ids - Document ID array\n   * @param {object} context - Delete context\n   * @param {string} userId - User ID\n   */\n  _onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId) {\n    super._onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId);\n\n    if (collection === \"effects\") {\n      const updatedConditions = {};\n      for (const ae of documents) {\n        for (const statusId of ae.statuses ?? []) {\n          // Toggle off only if it's valid ID and there isn't any other AEs that have same condition still\n          if (pf1.registry.conditions.has(statusId) && !this.statuses.has(statusId)) {\n            updatedConditions[statusId] = false;\n          }\n        }\n      }\n\n      if (context?.pf1?.updateConditionTracks !== false) {\n        this._conditionToggleNotify(updatedConditions);\n      }\n    }\n\n    // Following process is done only on triggering user\n    if (game.user.id !== userId) return;\n\n    if (collection === \"items\") {\n      this._cleanItemLinksTo(documents);\n\n      // Delete child linked items\n      const toRemove = new Set();\n\n      // Remove linked children with item\n      const _enumChildren = (item) => {\n        toRemove.add(item.id);\n\n        const links = item.getLinkedItemsSync(\"children\");\n        for (const link of links) {\n          if (toRemove.has(link.id)) continue;\n          const child = item.actor.items.get(link.id);\n          if (child) _enumChildren(child);\n        }\n      };\n\n      // Find children\n      for (const item of documents) _enumChildren(item);\n      // Remove already deleted items\n      for (const id of ids) toRemove.delete(id);\n\n      if (toRemove.size > 0) {\n        this.deleteEmbeddedDocuments(\"Item\", Array.from(toRemove));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {pf1.documents.item.ItemPF[]} items - Item documents to clean links to.\n   * @returns {Promise<Document[]>} - Updated documents\n   */\n  async _cleanItemLinksTo(items) {\n    const updates = [];\n    // Clean up references to this item\n    for (const deleted of items) {\n      const uuid = deleted.getRelativeUUID(this);\n      for (const item of this.items) {\n        const updateData = await item.removeItemLink(uuid, { commit: false });\n        if (updateData) {\n          updateData._id = item.id;\n          updates.push(updateData);\n        }\n      }\n    }\n\n    if (updates.length) {\n      return this.updateEmbeddedDocuments(\"Item\", updates);\n    }\n  }\n\n  /**\n   * @todo - The condition notification needs to be smarter.\n   *\n   * @internal\n   * @param {Record<string,boolean>} conditions - Condition toggle state\n   */\n  _conditionToggleNotify(conditions = {}) {\n    for (const [conditionId, state] of Object.entries(conditions)) {\n      Hooks.callAll(\"pf1ToggleActorCondition\", this, conditionId, state);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {ItemPF} item - the item to add to the actor's resources\n   * @param {object} [options] - extra options\n   * @param {boolean} [options.warnOnDuplicate] - Skips warning if item tag already exists in dictionary flags\n   * @returns {boolean} True if resources were set\n   */\n\n  updateItemResources(item, { warnOnDuplicate = true } = {}) {\n    if (item.type === \"spell\") return false;\n    if (item.links?.charges) return false; // Don't create resource for items that are inheriting charges\n    if (!item.isCharged) return false;\n    if (item.isSingleUse) return false;\n    if (item.isPhysical) return false;\n\n    const tag = item.system.tag;\n    if (!tag) console.error(\"Attempting create resource on tagless item\", item);\n\n    if (warnOnDuplicate && this.system.resources[tag] && this.isOwner) {\n      const msg = game.i18n.format(\"PF1.Warning.DuplicateTag\", {\n        actor: this.uuid,\n        item: item.name,\n        tag,\n      });\n      console.warn(msg, item);\n      ui.notifications?.warn(msg, { console: false });\n    }\n\n    const res = new Resource(item);\n    this.system.resources[tag] = res;\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  /**\n   * Enable and configure a new spellbook.\n   *\n   * @example\n   * Create spellbook for inquisitor\n   * ```js\n   * actor.createSpellbook({\n   *   type: \"spontaneous\",\n   *   progression: \"med\",\n   *   ability: \"wis\",\n   *   spells: \"divine\",\n   *   class: \"inquisitor\",\n   *   cantrips: true,\n   *   domain: 0\n   * });\n   * ```\n   *\n   * @param {object} [casting] - Book casting configuration\n   * @param {\"prepared\"|\"spontaneous\"|\"hybrid\"} [casting.type=\"prepared\"] - Spellbook type\n   * @param {\"high\"|\"med\"|\"low\"} [casting.progression=\"high\"] - Casting progression type\n   * @param {string} [casting.ability=\"int\"] - Spellcasting ability score ID\n   * @param {\"arcane\"|\"divine\"|\"psychic\"|\"alchemy\"} [casting.spells=\"arcane\"] - Spell/spellcasting type\n   * @param {string} [casting.class=\"_hd\"] - Class tag\n   * @param {boolean} [casting.cantrips=true] - Has cantrips?\n   * @param {number} [casting.domain=1] - Domain/School slots\n   * @param {number} [casting.offset] - Level offset\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.commit=true] - Commit modifications. If false, update data is returned instead of committing.\n   * @returns {Promise<this>} - Promise to updated document\n   */\n  createSpellbook(casting = {}, { commit = true } = {}) {\n    const books = this.system.attributes.spells.spellbooks ?? {};\n\n    const oldBook = casting.class\n      ? Object.entries(books).find(([_, book]) => !!book.class && book.class === casting.class)\n      : null;\n\n    let bookId;\n    if (oldBook) {\n      if (oldBook[1].inUse) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.SpellbookExists\"));\n      bookId = oldBook[0]; // Reuse old book\n    } else {\n      const available = Object.entries(books).find(([_, bookData]) => bookData.inUse !== true);\n      if (available === undefined) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoFreeSpellbooks\"));\n      bookId = available[0];\n    }\n\n    // Add defaults when unconfigured\n    // `class` causes problems if destructured, hence why it is here.\n    casting.type ??= \"prepared\";\n    casting.class ??= \"_hd\";\n    casting.progression ??= \"high\";\n    casting.spells ??= \"arcane\";\n    casting.ability ??= \"int\";\n    casting.cantrips ??= true;\n    casting.domain ??= 1;\n    casting.offset ??= 0;\n    if (casting.offset !== 0) casting.offset = `${casting.offset}`;\n\n    const updateData = {\n      [`system.attributes.spells.spellbooks.${bookId}`]: {\n        inUse: true,\n        kind: casting.spells,\n        class: casting.class,\n        spellPreparationMode: casting.type,\n        casterType: casting.progression,\n        ability: casting.ability,\n        psychic: casting.spells === \"psychic\",\n        arcaneSpellFailure: casting.spells === \"arcane\",\n        hasCantrips: casting.cantrips,\n        domainSlotValue: casting.domain,\n        \"cl.formula\": casting.offset ? `${casting.offset}` : \"\",\n      },\n    };\n\n    if (commit) return this.update(updateData);\n    else return updateData;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Retrieve information about a skill.\n   *\n   * @example\n   * ```js\n   * actor.getSkillInfo(\"per\"); // Perception skill info\n   * actor.getSkillInfo(\"crf.alchemy\"); // Craft (Alchemy) subskill info\n   * ```\n   *\n   * @param {string} skillId - Skill ID\n   * @param {object} [options] - Additional options\n   * @param {{ skills: Record<string, SkillData>}} [options.rollData] - Roll data instance to use.\n   * @throws {Error} - If defined skill is not found.\n   * @returns {SkillInfo} - Skill information\n   */\n  getSkillInfo(skillId, { rollData } = {}) {\n    const skillIdParts = skillId.split(\".\");\n    if (skillIdParts.length > 2) skillIdParts.splice(1, 1);\n\n    const mainSkillId = skillIdParts.shift(),\n      subSkillId = skillIdParts.pop(),\n      isSubSkill = !!subSkillId;\n\n    // Reconstruct skillId with new shorter version to ensure format\n    skillId = [mainSkillId, subSkillId].filterJoin(\".\");\n\n    rollData ??= this.getRollData();\n    const parentSkill = isSubSkill ? this.getSkillInfo(mainSkillId, { rollData }) : null;\n\n    /** @type {SkillInfo} */\n    const skill = subSkillId\n      ? parentSkill.subSkills?.[subSkillId]\n      : foundry.utils.deepClone(rollData.skills[mainSkillId]);\n\n    if (!skill) throw new Error(`Invalid skill ID '${skillId}'`);\n\n    skill.journal ||= pf1.config.skillCompendiumEntries[isSubSkill ? mainSkillId : skillId];\n    skill.name ||= pf1.config.skills[skillId] || skillId;\n    skill.id = skillId;\n\n    if (isSubSkill) {\n      skill.fullName = `${parentSkill.name} (${skill.name})`;\n      skill.parentSkill = parentSkill;\n    } else {\n      skill.fullName = skill.name;\n    }\n\n    return skill;\n  }\n\n  /**\n   * Roll a Skill Check\n   *\n   * @example\n   * ```js\n   * await actor.rollSkill(\"per\", { skipDialog: true, bonus: \"1d6\", dice: \"2d20kh\" });\n   * ```\n   *\n   * @param {string} skillId - The skill id (e.g. \"per\", \"prf.prf1\", or \"crf.alchemy\")\n   * @param {ActorRollOptions} [options={}] - Options which configure how the skill check is rolled\n   * @returns {Promise<ChatMessage|object|void>} - The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSkill(skillId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const skillIdParts = skillId.split(\".\");\n    const mainSkillId = skillIdParts[0],\n      subSkillId = skillIdParts.length > 1 ? skillIdParts.at(-1) : null;\n    // Reconstruct skill ID to ensure it is valid for everything else.\n    skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const skl = this.getSkillInfo(skillId);\n    const haveParentSkill = !!subSkillId;\n\n    // Add context notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`skill.${skillId}`, { rollData });\n    if (haveParentSkill)\n      notes.push(...(await this.getContextNotesParsed(`skill.${mainSkillId}`, { rollData, all: false })));\n\n    // Add untrained note\n    if (skl.rt && !skl.rank) {\n      notes.push({ text: game.i18n.localize(\"PF1.Untrained\") });\n    }\n\n    // Add parts\n    const parts = [];\n\n    // Ability damage and penalty\n    // HACK: They're not part of the change system properly and are already applied to the ability score,\n    // which causes problems here, so we add them only as notes.\n    const details = this.getSourceDetails(`system.abilities.${skl.ability}.mod`);\n    for (const { value, name } of details) {\n      // TODO: Ability modifier should be restored so these can be set to correctly modify the roll\n      //parts.push(`${value}[${name}]`);\n      notes.push({ text: `${value} ${name}` });\n    }\n\n    // Add Wound Thresholds info\n    if (rollData.attributes.woundThresholds?.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Gather changes\n    const skillDataPathPart = subSkillId ? `${mainSkillId}.subSkills.${subSkillId}` : mainSkillId;\n\n    const validChanges = this.changes.filter((/** @type {ItemChange} */ c) =>\n      c.getTargets(this).includes(`system.skills.${skillDataPathPart}.mod`)\n    );\n    const changes = getHighestChanges(validChanges, { ignoreTarget: true });\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    // Get relevant conditions if any\n    const conds = this._getContextConditions(`skill.${skillId}`);\n    for (const cond of conds) notes.push({ text: cond.name });\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    // Add metadata about the skill\n    const metadata = { rank: skl.rank ?? 0 };\n    if ([\"acr\", \"swm\", \"clm\"].includes(skillId)) {\n      const speeds = this.system.attributes?.speed ?? {};\n      metadata.speed = { base: speeds.land?.total ?? 0 };\n      if (skillId === \"swm\") metadata.speed.swim = speeds.swim?.total ?? 0;\n      if (skillId === \"clm\") metadata.speed.climb = speeds.climb?.total ?? 0;\n    }\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: skl.fullName }),\n      chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[skillId] ?? skl.journal, type: \"JournalEntry\" },\n      subject: { skill: skillId },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      messageData: {\n        system: {\n          subject: { skill: skillId },\n          config: metadata,\n        },\n      },\n    };\n    if (Hooks.call(\"pf1PreActorRollSkill\", this, rollOptions, skillId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    if (result) Hooks.callAll(\"pf1ActorRollSkill\", this, result, skillId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll basic BAB check\n   *\n   * @param {ActorRollOptions} [options] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollBAB(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts: [`${this.system.attributes.bab.total}[${game.i18n.localize(\"PF1.BABAbbr\")}]`],\n      subject: { core: \"bab\" },\n      flavor: game.i18n.format(\"PF1.Check\", { type: game.i18n.localize(\"PF1.BABAbbr\") }),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollBab\", this, rollOptions) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollBab\", this, result);\n    return result;\n  }\n\n  /**\n   * Roll a generic attack\n   *\n   * @example\n   * Basic ranged attack\n   * ```js\n   * await actor.rollAttack({ ranged: true });\n   * ```\n   * Basic melee maneuver\n   * ```js\n   * await actor.rollAttack({ maneuver: true });\n   * ```\n   *\n   * @param {ActorRollOptions} [options={}] - Roll options\n   * @param {boolean} [options.maneuver=false] - Whether this is weapon or maneuver check.\n   * @param {boolean} [options.ranged=false] - Melee or ranged.\n   * @param {boolean} [options.ability=null] - Attack ability. If not defined, appropriate one is chosen based on the ranged option.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAttack({ maneuver = false, ranged = false, ability = null, ...options } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    if (maneuver && this.system.config?.noManeuvers) throw new Error(\"Manuevers are disabled for this actor.\");\n\n    let actionType;\n    if (!maneuver) actionType = ranged ? \"rwak\" : \"mwak\";\n    else actionType = ranged ? \"rcman\" : \"mcman\";\n\n    const atkData = {\n      name: !ranged ? game.i18n.localize(\"PF1.Melee\") : game.i18n.localize(\"PF1.Ranged\"),\n      actionType,\n    };\n\n    // Alter attack ability\n    const atkAbl = this.system.attributes?.attack?.[`${ranged ? \"ranged\" : \"melee\"}Ability`];\n    atkData.ability ??= {};\n    if (maneuver) atkData.ability.attack = ability || this.system.attributes?.cmbAbility;\n    atkData.ability.attack ||= ability || atkAbl || (ranged ? \"dex\" : \"str\");\n\n    // Alter activation type\n    atkData.activation ??= {};\n    atkData.activation.type = \"attack\";\n    atkData.activation.unchained ??= {};\n    atkData.activation.unchained.type = \"attack\";\n\n    // Generate temporary item\n    /** @type {pf1.documents.item.ItemAttackPF} */\n    const atk = new Item.implementation(\n      {\n        type: \"attack\",\n        name: !maneuver ? game.i18n.localize(\"TYPES.Item.weapon\") : game.i18n.localize(\"PF1.CMBAbbr\"),\n        system: {\n          actions: [new pf1.components.ItemAction(atkData).toObject()],\n        },\n      },\n      { parent: this }\n    );\n\n    return atk.use(options);\n  }\n\n  /**\n   * Roll a Caster Level check using a particular spellbook of this actor\n   *\n   * @example\n   * Roll caster level check for primary spellbook.\n   * ```js\n   * await actor.rollCL(\"primary\");\n   * ```\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCL(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData ?? this.getRollData();\n    rollData.cl = spellbook.cl.total;\n\n    // Set up roll parts\n    const parts = [];\n\n    const sources = this.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.cl.total`);\n    for (const src of sources.reverse()) {\n      if (src.id === \"woundThreshold\") {\n        // Adjust WT part to how much WT actually adjusted CL, to account for minimum CL\n        const wt = spellbook.cl.woundPenalty || 0;\n        if (wt) parts.push(`${wt}[${src.name}]`);\n        continue;\n      }\n      parts.push(`${src.value}[${src.name}]`);\n    }\n\n    // Add contextual caster level string\n    const notes = await this.getContextNotesParsed(`spell.cl.${bookId}`, { rollData });\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push({ text: pf1.config.woundThresholdConditions[wT.level] });\n\n    const props = [];\n    if (notes.length) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"cl\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.CasterLevelCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollCl\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollCl\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * Roll a concentration check using a particular spellbook of this actor\n   *\n   * @todo Add support for concentration check type, e.g. defensive casting\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollConcentration(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData ?? this.getRollData();\n    rollData.cl = spellbook.cl.total;\n    rollData.mod = this.system.abilities[spellbook.ability]?.mod ?? 0;\n\n    if (\n      Hooks.call(\"actorRoll\", \"pf1PreActorRollConcentration\", undefined, this, \"concentration\", bookId, options) ===\n      false\n    )\n      return;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.getSourceDetails(`system.attributes.spells.spellbooks.${bookId}.concentration.total`));\n\n    // Add contextual concentration string\n    const notes = await this.getContextNotesParsed(`spell.concentration.${bookId}`, { rollData });\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push({ text: game.i18n.localize(pf1.config.woundThresholdConditions[wT.level]) });\n    // TODO: Make the penalty show separate of the CL.total.\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"concentration\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.ConcentrationCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n    if (Hooks.call(\"pf1PreActorRollConcentration\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollConcentration\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.damageResistances=true] If false, damage resistances (DR, ER) are omitted.\n   * @param {boolean} [options.damageVulnerabilities=true] If false, damage vulnerabilities are omitted.\n   * @returns {*} - Header data\n   */\n  getDefenseHeaders({ damageResistances = true, damageVulnerabilities = true } = {}) {\n    const system = this.system;\n    const headers = [];\n\n    const reSplit = pf1.config.re.traitSeparator;\n    const misc = [];\n\n    if (damageResistances) {\n      // Damage reduction\n      if (system.traits.dr.length) {\n        headers.push({\n          header: game.i18n.localize(\"PF1.DamRed\"),\n          value: system.traits.dr.split(reSplit).map((text) => ({ text })),\n        });\n      }\n      // Energy resistance\n      if (system.traits.eres.length) {\n        headers.push({\n          header: game.i18n.localize(\"PF1.EnRes\"),\n          value: system.traits.eres.split(reSplit).map((text) => ({ text })),\n        });\n      }\n    }\n    if (damageVulnerabilities) {\n      // Damage vulnerabilities\n      if (system.traits.dv.total.size) {\n        const value = system.traits.dv.names.map((text) => ({ text }));\n        headers.push({ header: game.i18n.localize(\"PF1.DamVuln\"), value });\n      }\n    }\n    // Condition resistance\n    if (system.traits.cres.length) {\n      headers.push({\n        header: game.i18n.localize(\"PF1.ConRes\"),\n        value: system.traits.cres.split(reSplit).map((text) => ({ text })),\n      });\n    }\n    // Immunities\n    if (system.traits.di.total.size || system.traits.ci.total.size) {\n      const value = [...system.traits.di.names, ...system.traits.ci.names].map((text) => ({ text }));\n      headers.push({ header: game.i18n.localize(\"PF1.ImmunityPlural\"), value });\n    }\n    // Spell Resistance\n    if (system.attributes.sr.total > 0) {\n      misc.push({ text: game.i18n.format(\"PF1.SpellResistanceNote\", { value: system.attributes.sr.total }) });\n    }\n\n    if (misc.length > 0) {\n      headers.push({ header: game.i18n.localize(\"PF1.MiscShort\"), value: misc });\n    }\n\n    return headers;\n  }\n\n  /**\n   * Roll initiative for one or multiple Combatants associated with this actor.\n   * If no combat exists, GMs have the option to create one.\n   * If viewing a full Actor document, all Tokens which map to that actor will be targeted for initiative rolls.\n   * If viewing a synthetic Token actor, only that particular Token will be targeted for an initiative roll.\n   *\n   * @example\n   * ```js\n   * await actor.rollInitiative({ dice: \"2d20kh\", createCombatants: true, skipDialog: true });\n   * ```\n   *\n   * @override\n   * @see {@link pf1.documents.CombatPF#rollInitiative}\n   * @param {object} [options={}] Options which configure how initiative is rolled\n   * @param {boolean} [options.createCombatants=false] - Create new Combatant entries for tokens associated with this actor.\n   * @param {boolean} [options.rerollInitiative=false] - Reroll initiative for existing Combatants\n   * @param {object} [options.initiativeOptions] - Options to pass to {@link CombatPF.rollInitiative()}\n   * @param {string|null} [options.dice=null] - Formula override for dice to roll\n   * @param {string|null} [options.bonus=null] - Formula for bonus to initiative\n   * @param {boolean} [options.skipDialog] - Skip roll dialog\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {TokenDocumentPF} [options.token=this.token] - For which token this initiative roll is for\n   * @returns {Promise<pf1.documents.CombatPF|null>} The updated Combat document in which initiative was rolled, or null if no initiative was rolled\n   */\n  async rollInitiative({\n    createCombatants = false,\n    rerollInitiative = false,\n    initiativeOptions = {},\n    dice = null,\n    bonus = null,\n    rollMode = null,\n    skipDialog,\n    token,\n  } = {}) {\n    token ||= this.token;\n\n    // Obtain (or create) a combat encounter\n    let combat = game.combat;\n    if (!combat) {\n      if (game.user.isGM) {\n        const cls = getDocumentClass(\"Combat\");\n        combat = await cls.create({ scene: canvas.scene?.id, active: true });\n      } else {\n        ui.notifications.warn(\"COMBAT.NoneActive\", { localize: true });\n        return null;\n      }\n    }\n\n    // Create new combatants\n    if (createCombatants) {\n      const tokens = this.isToken ? [this.token] : this.getActiveTokens().map((t) => t.document);\n      const toCreate = [];\n      if (tokens.length) {\n        for (const t of tokens) {\n          if (t.inCombat) continue;\n          toCreate.push({ tokenId: t.id, sceneId: t.parent.id, actorId: this.id, hidden: t.hidden });\n        }\n      }\n      // No tokens on scene\n      else {\n        const existing = combat.combatants.filter((t) => t.actor == this && !t.token);\n        if (!existing.length) {\n          toCreate.push({ actorId: this.id, hidden: false });\n        }\n      }\n\n      if (toCreate.length) await combat.createEmbeddedDocuments(\"Combatant\", toCreate);\n    }\n\n    let untokened = 0;\n    // Roll initiative for combatants\n    let combatants = combat.combatants.filter((c) => {\n      if (c.actor?.id !== this.id) return false;\n      if (token && c.token?.id !== token.id) return false;\n      if (!c.token) untokened += 1;\n      return rerollInitiative || c.initiative === null;\n    });\n\n    // If more than one relevant combatants with no token present, prune list of valid combatants.\n    if (untokened > 1) {\n      combatants = combatants.filter((c) => !!c.token || c.initiative === null);\n      if (combatants.length == 0) ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoInitOnDuplicateCombatant\"));\n    }\n\n    // No combatants. Possibly from reroll being disabled.\n    if (combatants.length == 0) return combat;\n\n    foundry.utils.mergeObject(initiativeOptions, { d20: dice, bonus, rollMode, skipDialog });\n\n    return combat.rollInitiative(\n      combatants.map((c) => c.id),\n      initiativeOptions\n    );\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * ```js\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   * ```\n   *\n   * @param {SaveId} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`savingThrow.${savingThrowId}`, { rollData });\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows[savingThrowId]?.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"allSavingThrows\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => c.operator !== \"set\"),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Get relevant conditions if any\n    const conds = this._getContextConditions(`savingThrow.${savingThrowId}`);\n    for (const cond of conds) notes.push({ text: cond.name });\n\n    const props = this.getDefenseHeaders({ damageResistances: false, damageVulnerabilities: false });\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n\n    // Roll saving throw\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll an Ability Test\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\n   *\n   * @example\n   * ```js\n   * await actor.rollAbilityTest(\"str\");\n   * ```\n   *\n   * @param {AbilityId} abilityId - The ability ID (e.g. \"str\")\n   * @param {ActorRollOptions} [options={}] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAbilityTest(abilityId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = options.rollData || this.getRollData();\n    const notes = await this.getContextNotesParsed(`abilityChecks.${abilityId}`, { rollData });\n\n    const label = pf1.config.abilities[abilityId] ?? abilityId;\n\n    const parts = [`@abilities.${abilityId}.mod[${label}]`];\n\n    // HACK: They're not part of the change system properly and are already applied to the ability score,\n    // which causes problems here, so we add them only as notes.\n    const details = this.getSourceDetails(`system.abilities.${abilityId}.mod`);\n    for (const { value, name } of details) {\n      // TODO: Ability modifier should be restored so these can be set to correctly modify the roll\n      //parts.push(`${value}[${name}]`);\n      notes.push({ text: `${value} ${name}` });\n    }\n\n    // Gather changes\n    const dataPathCheck = `system.abilities.${abilityId}.checkMod`;\n\n    const changes = getHighestChanges(\n      this.changes.filter((/** @type {ItemChange} */ c) => {\n        const cf = c.getTargets(this);\n\n        return cf.includes(dataPathCheck);\n      }),\n      { ignoreTarget: true }\n    );\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    // Add negative levels\n    if (this.system.attributes.energyDrain) {\n      const label = game.i18n.localize(\"PF1.NegativeLevels\");\n      parts.push(`-@attributes.energyDrain[${label}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push({ text: label });\n      parts.push(`-@attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: label }),\n      subject: { ability: abilityId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollAbility\", this, rollOptions, abilityId) === false) return;\n\n    const result = await pf1.dice.d20Roll(rollOptions);\n\n    Hooks.callAll(\"pf1ActorRollAbility\", this, result, abilityId);\n\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage|undefined>} - Created message\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n\n    const formatTextNotes = (notes) => notes?.split(/[\\n\\r]+/).map((text) => ({ text })) ?? [];\n\n    // Add contextual AC notes\n    const acNotes = await this.getContextNotesParsed(\"ac\", { rollData });\n    if (this.system.attributes.acNotes) acNotes.push(...formatTextNotes(this.system.attributes.acNotes));\n\n    // Add contextual CMD notes\n    const cmdNotes = await this.getContextNotesParsed(\"cmd\", { rollData });\n    if (this.system.attributes.cmdNotes) cmdNotes.push(...formatTextNotes(this.system.attributes.cmdNotes));\n\n    // Add contextual SR notes\n    const srNotes = await this.getContextNotesParsed(\"sr\", { rollData });\n    if (this.system.attributes.srNotes) srNotes.push(...formatTextNotes(this.system.attributes.srNotes));\n\n    // BUG: No specific saving throw notes are included\n    const saveNotes = await this.getContextNotesParsed(\"allSavingThrows\", { rollData });\n    if (this.system.attributes.saveNotes) saveNotes.push(...formatTextNotes(this.system.attributes.saveNotes));\n\n    // Add misc data\n\n    // Damage Reduction\n    const drNotes = Object.values(this.parseResistances(\"dr\")).map((text) => ({ text }));\n\n    // Energy Resistance\n    const erNotes = Object.values(this.parseResistances(\"eres\")).map((text) => ({ text }));\n\n    // Damage Immunity\n    // BUG: All incorrectly clumped with ER\n    if (this.system.traits.di.total.size) {\n      const values = [...this.system.traits.di.names];\n      erNotes.push(...values.map((o) => ({ text: game.i18n.format(\"PF1.ImmuneTo\", { immunity: o }) })));\n    }\n    // Damage Vulnerability\n    if (this.system.traits.dv.total.size) {\n      const values = [...this.system.traits.dv.names];\n      erNotes.push(...values.map((o) => ({ text: game.i18n.format(\"PF1.VulnerableTo\", { vulnerability: o }) })));\n    }\n\n    // Conditions\n    const conditions = Object.entries(this.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInDefense)\n      .map((c) => ({ text: c.name }));\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) {\n      const wTlabel = pf1.config.woundThresholdConditions[wT.level];\n      acNotes.push({ text: wTlabel });\n      cmdNotes.push({ text: wTlabel });\n    }\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        flatFooted: actorData.attributes.ac.flatFooted.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        flatFooted: actorData.attributes.cmd.flatFootedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        hardness: actorData.traits.hardness,\n        sr: actorData.attributes.sr.total,\n        srNotes,\n        drNotes,\n        erNotes,\n        conditions,\n      },\n      saves: {\n        fort: rollData.attributes?.savingThrows?.fort?.total,\n        ref: rollData.attributes?.savingThrows?.ref?.total,\n        will: rollData.attributes?.savingThrows?.will?.total,\n        notes: saveNotes,\n      },\n    };\n\n    if (this.system.config?.noManeuvers) {\n      delete templateData.cmd;\n    }\n\n    // Add regeneration and fast healing\n    if ((actorData.traits?.fastHealing || \"\").length || (actorData.traits?.regen || \"\").length) {\n      templateData.regen = {\n        regen: actorData.traits.regen,\n        fastHealing: actorData.traits.fastHealing,\n      };\n    }\n\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      rollMode,\n      system: {\n        subject: { info: \"defenses\" },\n      },\n      flags: {\n        core: {\n          canPopout: true,\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /**\n   * Easy way to toggle a condition.\n   *\n   * @example\n   * Toggle Dazzled\n   * ```js\n   * await actor.toggleCondition(\"dazzled\");\n   * ```\n   * Toggle Blinded, set duration for 3 rounds if it's being enabled.\n   * ```js\n   * await actor.toggleCondition(\"blinded\", { duration: { seconds: 18 } });\n   * ```\n   *\n   * @param {boolean} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object} [aeData] - Extra data to add to the AE if it's being enabled\n   * @returns {Promise<object>} Condition ID to boolean mapping of actual updates.\n   */\n  async toggleCondition(conditionId, aeData) {\n    let active = !this.statuses.has(conditionId);\n    if (active && aeData) active = aeData;\n    return this.setCondition(conditionId, active);\n  }\n\n  /**\n   * Easy way to set a condition.\n   *\n   * @example\n   * Enable Dazzled\n   * ```js\n   * await actor.setCondition(\"dazzled\", true);\n   * ```\n   * Enable Sleep for 10 rounds\n   * ```js\n   * await actor.setCondition(\"sleep\", { duration: { seconds: 60 } });\n   * ```\n   *\n   * @param {string} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object|boolean} enabled - Whether to enable (true) the condition, or disable (false) it. Or object for merging into the active effect as part of enabling.\n   * @param {object} [context] Update context\n   * @returns {Promise<object>} Condition ID to boolean mapping of actual updates.\n   */\n  async setCondition(conditionId, enabled, context) {\n    if (typeof enabled !== \"boolean\" && foundry.utils.getType(enabled) !== \"Object\")\n      throw new TypeError(\"Actor.setCondition() enabled state must be a boolean or plain object\");\n    return this.setConditions({ [conditionId]: enabled }, context);\n  }\n\n  /**\n   * Set state of multiple conditions.\n   * Also handles condition tracks to minimize number of updates.\n   *\n   * @example\n   * Enable Blinded and Shaken conditions but disable Sleeping\n   * ```js\n   * await actor.setConditions({ blind: true, sleep: false, shaken:true });\n   * ```\n   *\n   * @param {object} conditions Condition ID to boolean (or update data) mapping of new condition states. See {@link setCondition()}\n   * @param {object} [context] Update context\n   * @returns {Record<string,boolean>} Condition ID to boolean mapping of actual updates.\n   */\n  async setConditions(conditions = {}, context = {}) {\n    conditions = foundry.utils.deepClone(conditions);\n\n    // Handle Condition tracks\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const conditionGroup of tracks) {\n      const newTrackState = conditionGroup.find((c) => conditions[c] === true);\n      if (!newTrackState) continue;\n      const disableTrackEntries = conditionGroup.filter((c) => c !== newTrackState);\n      for (const key of disableTrackEntries) {\n        conditions[key] = false;\n      }\n    }\n\n    // Create update data\n    const toDelete = [],\n      toCreate = [];\n\n    const immunities = this.getConditionImmunities();\n\n    for (const [conditionId, value] of Object.entries(conditions)) {\n      const condition = pf1.registry.conditions.get(conditionId);\n      if (!condition) {\n        console.error(\"Unrecognized condition:\", conditionId);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      if (value === true && immunities.has(conditionId)) {\n        console.warn(\"Actor is immune to condition:\", conditionId, this);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      // BUG: Only finds conditions directly on actor, not on items\n      const oldAe = this.statuses.has(conditionId) ? this.effects.find((ae) => ae.statuses.has(conditionId)) : null;\n\n      // Create\n      if (value) {\n        if (!oldAe) {\n          const aeData = {\n            flags: {\n              pf1: {\n                autoDelete: true,\n              },\n            },\n            statuses: [conditionId],\n            name: condition.name,\n            img: condition.texture,\n          };\n\n          if (condition.statuses?.size) {\n            aeData.statuses.push(...condition.statuses);\n          }\n\n          // Special boolean for easy overlay\n          if (value?.overlay) {\n            delete value.overlay;\n            foundry.utils.setProperty(aeData.flags, \"core.overlay\", true);\n          }\n\n          if (typeof value !== \"boolean\") {\n            foundry.utils.mergeObject(aeData, value);\n          }\n\n          toCreate.push(aeData);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n      // Delete\n      else {\n        if (oldAe) {\n          toDelete.push(oldAe.id);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n    }\n\n    // Perform updates\n    // Inform update handlers they don't need to do work\n    context.pf1 ??= {};\n    context.pf1.updateConditionTracks = false;\n\n    if (toDelete.length) {\n      const deleteContext = foundry.utils.deepClone(context);\n      // Prevent double render\n      if (context.trender && toCreate.length) deleteContext.render = false;\n      // Without await the deletions may not happen at all, presumably due to race condition, if AEs are also created.\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", toDelete, context);\n    }\n    if (toCreate.length) {\n      const createContext = foundry.utils.deepClone(context);\n      await this.createEmbeddedDocuments(\"ActiveEffect\", toCreate, createContext);\n    }\n\n    this._conditionToggleNotify(conditions);\n\n    return conditions;\n  }\n\n  /**\n   * Easy way to determine whether this actor has a condition.\n   *\n   * @example\n   * Test if user is grappled\n   * ```js\n   * actor.hasCondition(\"grappled\");\n   * ```\n   *\n   * @deprecated This is identical to `actor.statuses.has(\"conditionId\")`\n   * @param {string} conditionId - A direct condition key, as per pf1.registry.conditions, such as `shaken` or `dazed`.\n   * @returns {boolean} Condition state\n   */\n  hasCondition(conditionId) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.hasCondition() is deprecated in favor of actor.statuses.has(conditionId)\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v13\",\n      }\n    );\n    return this.statuses.has(conditionId);\n  }\n\n  /**\n   * Get active conditions marked for context\n   *\n   * @internal\n   * @param {string} context - Context ID\n   * @returns {Array<pf1.registry.conditions.model>} - Array of conditions\n   */\n  _getContextConditions(context) {\n    const conditions = [];\n    for (const conditionId of this.statuses) {\n      const condition = pf1.registry.conditions.get(conditionId);\n      if (!condition) continue;\n      if (condition.mechanics.contexts.has(context)) conditions.push(condition);\n    }\n    return conditions;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Helper function for actor energy resistance and damage reduction feedback.\n   *\n   * @todo\n   * - Provide more data with the return value\n   * @protected\n   * @param {\"dr\"|\"eres\"} resistanceType Value to check resistances for.\n   * @returns {Record<string,string>} Entry to label mapping of resistances or reductions.\n   */\n  parseResistances(resistanceType) {\n    /** @type {{custom:string, value: {amount:number,operator:string,types:string[]}[]}} */\n    const res = this.system.traits?.[resistanceType];\n    if (!res) return {}; // Either actor is malformed, or it's a type that doesn't have this info\n\n    const result = {};\n    if (Array.isArray(res.value)) {\n      res.value.forEach((entry, counter) => {\n        const res = this._parseResistanceEntry(entry, resistanceType);\n        result[`${counter + 1}`] = res.label;\n      });\n    }\n\n    if (typeof res.custom === \"string\") {\n      res.custom.split(pf1.config.re.traitSeparator).forEach((entry, counter) => {\n        entry = entry?.trim();\n        if (!entry?.length) return;\n        const res = this._parseResistanceEntry(entry, resistanceType);\n        result[`custom${counter + 1}`] = res.label;\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Parse resistance entry\n   *\n   * Primarily called from {@link parseResistances}\n   *\n   * @internal\n   * @experimental\n   * @param {object|string} entry\n   * @param {\"dr\"|\"er\"} [resistanceType]\n   * @returns {ParsedResistanceEntry}\n   */\n  _parseResistanceEntry(entry, resistanceType = \"dr\") {\n    const dash = \"–\"; // en dash\n\n    const format = (amount, type1, operator = null, type2 = null) => {\n      let label = type1;\n      if (type2) {\n        switch (operator) {\n          case false: {\n            // Combine with AND\n            label = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedAnd\", {\n              type1,\n              type2,\n            });\n            break;\n          }\n          default:\n          case true: {\n            // Combine with OR\n            label = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedOr\", {\n              type1,\n              type2,\n            });\n            break;\n          }\n        }\n      }\n\n      return resistanceType === \"dr\" ? `${amount}/${label}` : `${label} ${amount}`;\n    };\n\n    const getType = (typeId) =>\n      pf1.registry.damageTypes.get(typeId) ??\n      pf1.registry.materials.get(typeId) ?? { name: pf1.config.damageResistances[typeId] ?? typeId };\n\n    const isDR = resistanceType == \"dr\";\n    const isER = !isDR;\n\n    // Parse custom entry\n    if (typeof entry === \"string\") {\n      const re = /(?<value>\\d+)/.exec(entry);\n      const amount = parseInt(re?.groups.value || \"0\");\n      const type = entry.replace(/\\d+\\s*\\/?/, \"\").trim();\n\n      return {\n        type0: { name: type },\n        amount,\n        label: format(amount, type || dash),\n        isDR,\n        isER,\n        custom: true,\n      };\n    }\n    // Parse normal entry\n    else {\n      const { amount, operator } = entry;\n      const [typeId0, typeId1] = entry.types;\n\n      const type0 = getType(typeId0);\n      const type0name = type0?.shortName || type0?.name;\n      const type1 = getType(typeId1);\n      const type1name = type1?.shortName || type1?.name;\n\n      return {\n        type0: { id: typeId0, name: type0name, data: type0 },\n        type1: { id: typeId1, name: type1name, data: type1 },\n        operator,\n        amount,\n        label: format(amount, type0name || dash, operator, type1name),\n        isDR,\n        isER,\n      };\n    }\n  }\n\n  /**\n   * Apply damage or healing to actor.\n   *\n   * Does not handle ER/DR or anything else special.\n   *\n   * @see {@link ActorPF.applyDamage} - For more general use.\n   *\n   * @example\n   * Cause 10 damage\n   * ```js\n   * await actor.applyDamage(10);\n   * ```\n   * Heal 10 damage\n   * ```js\n   * await actor.applyDamage(-10);\n   * ```\n   * Apply 3 damage directly to Wounds instead of Vigor\n   * ```js\n   * await actor.applyDamage(3, { asWounds: true });\n   * ```\n   *\n   * @hooks\n   * - `pf1ApplyDamage`\n   *\n   * @param {number} value - Value to adjust health by. Positive values deal damage, negative values heal.\n   * @param {ApplyDamageOptions} [options] Additional options. This object will be transformed in-place as the damage application is processed.\n   * @returns {Promise<Actor|false>} - Updated actor or false.\n   */\n  async applyDamage(value = 0, options = {}) {\n    options = { ...options, value };\n\n    // Apply defaults\n    options.asWounds ??= false;\n    options.asNonlethal ??= false;\n    options.dualHeal ??= game.settings.get(\"pf1\", \"dualHeal\");\n    options.reduction ??= 0;\n    options.ratio ??= 1;\n\n    // Call hook\n    Hooks.callAll(\"pf1ApplyDamage\", this, options);\n\n    // Re-establish value in case the hooks modified it\n    value = options.value;\n\n    const { asWounds, asNonlethal, critMult, dualHeal, reduction, ratio } = options;\n    const isHealing = value < 0;\n\n    // Apply ratio and reduction\n    value = Math.floor(value * ratio);\n    if (value < 0) value += Math.min(-value, reduction);\n    else value -= Math.min(value, reduction);\n    value = Math.floor(value); // Round again just for sake of sanity\n\n    console.debug(\"PF1 | Apply Damage |\", value, \"to\", this.name, `[${this.uuid}]`);\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    if (value == 0) {\n      console.warn(\"Attempting to apply 0 damage.\");\n      return false;\n    }\n\n    if (!this.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n      return false;\n    }\n\n    const useWoundsAndVigor = healthConfig.getActorConfig(this).rules?.useWoundsAndVigor ?? false,\n      hp = !useWoundsAndVigor ? this.system.attributes.hp : this.system.attributes.vigor;\n    // Cancel if no health data is found\n    if (!hp) throw new Error(\"No health data found!\");\n\n    const tmp = hp.temp || 0;\n\n    const updateData = {};\n\n    // Wounds & Vigor\n    if (useWoundsAndVigor) {\n      const currentHealth = hp.value;\n      let woundAdjust = 0;\n\n      if (asWounds) {\n        woundAdjust -= value;\n        value = 0;\n      }\n\n      // Temp HP adjustment\n      const dt = value > 0 ? Math.min(tmp, value) : 0;\n      value -= dt;\n\n      // Nonlethal damage\n      if (asNonlethal && value > 0) {\n        if (currentHealth > 0) {\n          value = Math.min(currentHealth, value);\n        } else {\n          woundAdjust -= critMult > 1 ? critMult : 1;\n          value = 0; // No other bleedover to wounds\n        }\n      }\n\n      // Create update data\n      if (dt != 0) updateData[\"system.attributes.vigor.temp\"] = tmp - dt;\n      if (value != 0) {\n        let newHP = Math.min(currentHealth - value, hp.max);\n        if (value > 0) {\n          if (newHP < 0) {\n            woundAdjust -= -newHP;\n            if (critMult > 0) woundAdjust -= critMult;\n            newHP = 0;\n          }\n        }\n\n        if (newHP != hp.value) updateData[\"system.attributes.vigor.value\"] = newHP;\n      }\n\n      if (woundAdjust != 0) {\n        const wounds = this.system.attributes.wounds;\n        updateData[\"system.attributes.wounds.value\"] = Math.clamp(wounds.value + woundAdjust, 0, wounds.max);\n      }\n    }\n    // Normal Hit Points\n    else {\n      // Nonlethal damage\n      let nld = 0;\n      if (asNonlethal) {\n        if (value > 0) {\n          nld = Math.min(hp.max - hp.nonlethal, value);\n          value -= nld;\n        }\n        // Nonlethal healing\n        else if (value < 0) {\n          nld = value;\n          value = 0;\n        }\n      }\n      // Dual healing heals also nonlethal\n      else if (isHealing && dualHeal) {\n        nld = value;\n      }\n\n      // Temp HP adjustment\n      const dt = !isHealing ? Math.min(tmp, value) : 0;\n\n      // Create update data\n      if (nld != 0) updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, hp.nonlethal + nld);\n      if (dt != 0) updateData[\"system.attributes.hp.temp\"] = tmp - dt;\n      const newHp = Math.min(hp.value - (value - dt), hp.max);\n      if (newHp != hp.value) updateData[\"system.attributes.hp.value\"] = newHp;\n    }\n\n    return this.update(updateData);\n  }\n\n  /**\n   * Apply damage to the token or tokens which are currently controlled.\n   *\n   * If Shift is held, will prompt for adjustments based on damage reduction and energy resistances.\n   *\n   * @param {number} value - The amount of damage to deal. Negative values heal instead.\n   * @param {TargetedApplyDamageOptions} [options] - Object containing default settings for overriding\n   * @throws {Error} - If no valid targets are provided.\n   * @returns {Promise<false|Actor[]>} - False if cancelled or array of updated actors.\n   */\n  static async applyDamage(value = 0, options = {}) {\n    // Get targets if none are provided\n    if (!options.targets?.length) options.targets = canvas.tokens.controlled;\n    if (!options.targets?.length && game.user.character) options.targets = [game.user.character];\n\n    // Make sure targets are all actors\n    options.targets = options.targets.map((t) => t.actor || t).filter((t) => t instanceof Actor);\n\n    console.debug(\"PF1 | Apply Damage |\", value, \"to\", options.targets.length, \"target(s)\");\n\n    if (options.targets.length === 0) {\n      if (options.interactive) ui.notifications.warn(\"PF1.Warning.NoActorSelected\", { localize: true, console: false });\n      throw new Error(\"No valid targets\");\n    }\n\n    if (value == 0 || !Number.isFinite(value)) {\n      // TODO: Display notification if interactive\n      console.warn(\"Attempting to apply 0 damage.\");\n      return false;\n    }\n\n    // HACK: Infer nonlethal\n    if (options.instances?.length && options.asNonlethal === undefined) {\n      options.asNonlethal = options.instances.every((t) => t.types.has(\"nonlethal\"));\n      if (options.asNonlethal) console.debug(\"PF1 | Damage inferred as nonlethal\");\n    }\n\n    // Apply defaults\n    options.asNonlethal ??= false;\n    options.critMult ??= 0;\n    options.asWounds ??= false;\n    options.forceDialog ??= false;\n\n    if (options.reductionDefault !== undefined) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.applyDamage() reductionDefault option is deprecated in favor of reduction.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      options.reduction = options.reductionDefault;\n    }\n\n    // Dialog skipped\n    if (pf1.skipConfirmPrompt ? options.forceDialog : !options.forceDialog) {\n      const promises = options.targets.map((t) => {\n        const tOptions = foundry.utils.deepClone(options);\n        // Copy instances so modifying them doesn't alter instances on other targets\n        tOptions.instances = tOptions.instances?.map((i) => new pf1.models.action.DamagePartModel(i.toObject()));\n        return t.applyDamage(value, tOptions);\n      });\n      return Promise.all(promises);\n    }\n\n    // Open dialog\n    options.value = value;\n\n    // TODO: This does not return updated documents\n    const rv = await pf1.applications.ApplyDamage.wait(options);\n    if (!rv) return false;\n    return rv.updated;\n  }\n\n  /**\n   * Adjust temporary hit points.\n   *\n   * @example\n   * Gain 50 THP\n   * ```js\n   * actor.addTempHP(50);\n   * ```\n   * Lose 10 THP\n   * ```js\n   * actor.addTempHP(-10);\n   * ```\n   * Set THP to zero\n   * ```js\n   * actor.addTempHP(0, { set: true });\n   * ```\n   *\n   * @param {number} value - Value to add to temp HP\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.set] - If true, the temporary hit points are set to the provide value instead of added to existing.\n   * @returns {Promise<this|undefined>} - Updated document or undefined if no update occurred\n   */\n  async addTempHP(value, { set = false } = {}) {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpActorConfig = healthConfig.getActorConfig(this);\n    const vigor = hpActorConfig.rules.useWoundsAndVigor;\n\n    const curTHP = (vigor ? this.system.attributes.vigor.temp : this.system.attributes.hp.temp) || 0;\n    const newTHP = Math.max(0, !set ? curTHP + value : value);\n\n    return this.update({ system: { attributes: { [vigor ? \"vigor\" : \"hp\"]: { temp: newTHP } } } });\n  }\n\n  /**\n   * Returns effective Wound Threshold multiplier with rules and overrides applied.\n   *\n   * @protected\n   * @param {object} [options] - Additional options\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {number} Multiplier\n   */\n  getWoundThresholdMultiplier({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").getActorConfig(this);\n\n    return healthConfig.rules.useWoundThresholds;\n  }\n\n  /**\n   * Returns Wound Threshold relevant data.\n   *\n   * @protected\n   * @param {object} [options] - Additional options\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {{level:number,penalty:number,multiplier:number,valid:boolean}} - Wound threshold info\n   */\n  getWoundThresholdData({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").getActorConfig(this);\n\n    /** @type {{level:number,mod:number}} */\n    const wt = this.system.attributes?.woundThresholds ?? {};\n\n    const woundMult = this.getWoundThresholdMultiplier({ healthConfig }),\n      woundLevel = wt.level || 0,\n      woundPenalty = woundLevel * woundMult + (wt.mod || 0);\n\n    return {\n      level: woundLevel,\n      penalty: woundPenalty,\n      multiplier: woundMult,\n      valid: woundLevel > 0 && woundMult > 0,\n    };\n  }\n\n  /**\n   * Updates attributes.woundThresholds.level variable.\n   *\n   * @protected\n   */\n  updateWoundThreshold() {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const hpActorConfig = hpConfig.getActorConfig(this);\n    const usage = hpActorConfig.rules.useWoundThresholds;\n    const vigor = hpActorConfig.rules.useWoundsAndVigor;\n\n    /** @type {{mod:number,penalty:number}} */\n    const wt = this.system.attributes.woundThresholds;\n    // Null if WT is not in use, or it is combined with Wounds & Vigor\n    if (!usage || vigor) {\n      wt.level = 0;\n      wt.penaltyBase = 0;\n      wt.penalty = 0;\n      wt.mod = 0;\n      return;\n    }\n    /** @type {{value:number,temp:number,max:number}} */\n    const hp = this.system.attributes.hp,\n      curHP = hp.value,\n      tempHP = hp.temp ?? 0,\n      maxHP = hp.max;\n\n    let level = usage > 0 ? Math.clamp(4 - Math.ceil(((curHP + tempHP) / maxHP) * 4), 0, 3) : 0;\n    if (Number.isNaN(level)) level = 0; // Division by 0 due to max HP on new actors.\n\n    const wtMult = this.getWoundThresholdMultiplier({ healthConfig: hpActorConfig });\n    const wtMod = wt.mod ?? 0;\n\n    wt.level = level;\n    wt.penaltyBase = level * wtMult; // To aid relevant formulas\n    wt.penalty = level * wtMult + wtMod;\n\n    const penalty = wt.penalty;\n    // TODO: Convert to changes\n    if (penalty != 0) {\n      const changeFlatKeys = pf1.config.woundThresholdChangeTargets;\n      for (const fk of changeFlatKeys) {\n        if (fk === \"cl\") continue; // HACK: Handle CL change in spellbook update\n        const flats = getChangeFlat(this, fk, \"untyped\", -penalty);\n        for (const k of flats) {\n          if (!k) continue;\n          const curValue = foundry.utils.getProperty(this, k) ?? 0;\n          foundry.utils.setProperty(this, k, curValue - penalty);\n        }\n      }\n\n      // Soft add change for attacks\n      const ch = new pf1.components.ItemChange({\n        _id: \"woundThreshold\",\n        formula: `-${penalty}`,\n        flavor: pf1.config.woundThresholdConditions[wt.level],\n        target: \"attack\",\n        type: \"untyped\",\n        value: -penalty,\n      });\n      this.changes.set(ch.id, ch);\n    } else {\n      this.changes.delete(\"woundThreshold\");\n    }\n  }\n\n  /**\n   * All skill IDs relevant to this actor\n   *\n   * @type {Array<string>}\n   */\n  get allSkills() {\n    const result = [];\n    for (const [key, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) continue;\n      result.push(key);\n      for (const subKey of Object.keys(skillData.subSkills ?? {})) {\n        result.push(`${key}.${subKey}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An array of all context note data for this actor.\n   *\n   * @type {{notes: Array<pf1.components.ContextNote>, item: ItemPF}[]}\n   */\n  get allNotes() {\n    return this.items\n      .filter((item) => item.isActive && item.system.contextNotes?.length > 0)\n      .map((item) => ({ notes: item.system.contextNotes, item }));\n  }\n\n  /**\n   * @returns {ItemPF[]} All items on this actor, including those in containers.\n   */\n  get allItems() {\n    return [...this.containerItems, ...this.items];\n  }\n\n  /**\n   * All items this actor is holding in containers.\n   *\n   * @internal\n   * @type {ItemPF[]}\n   */\n  get containerItems() {\n    /** @type {Array<ItemPF>} */\n    const items = [];\n\n    /**\n     * @param {pf1.documents.item.ItemContainerPF} container - Item doc\n     */\n    function getContainerContents(container) {\n      if (container.type !== \"container\") return;\n\n      for (const item of container.items) {\n        items.push(item);\n        getContainerContents(item);\n      }\n    }\n\n    for (const container of this.itemTypes.container) {\n      getContainerContents(container);\n    }\n\n    return items;\n  }\n\n  /**\n   * Generates an array with all the active context-sensitive notes for the given context on this actor.\n   *\n   * @param {string} context - The context to draw from.\n   * @param {boolean} [all=true] - Retrieve notes meant for all, such as notes targeting all skills.\n   * @returns {Array<ItemContextNotes>} - Context notes\n   */\n  getContextNotes(context, all = true) {\n    if (context.string) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.getcontextNotes() first parameter must be a string, support for anything else is deprecated.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      context = context.string;\n    }\n\n    const formatTextNotes = (notes) => notes?.split(/[\\n\\r]+/) ?? [];\n\n    const result = this.allNotes;\n\n    const parts = context.split(\".\");\n    const mainId = parts.shift();\n\n    // Special contexts that retrieve additional targets.\n    switch (mainId) {\n      // skill.*\n      case \"skill\": {\n        const skillKey = parts.shift();\n        const skill = this.getSkillInfo(skillKey);\n        const ability = skill.ability;\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [context, `${ability}Skills`].includes(n.target) || (all && n.target === \"skills\"))\n            .map((n) => n.text);\n        }\n\n        return result;\n      }\n      // savingThrow.*\n      case \"savingThrow\": {\n        const saveKey = parts.shift();\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [saveKey, \"allSavingThrows\"].includes(n.target))\n            .map((n) => n.text);\n        }\n\n        if (this.system.attributes?.saveNotes) {\n          result.push({ notes: [this.system.attributes.saveNotes], item: null });\n        }\n\n        return result;\n      }\n      // abilityChecks.*\n      case \"abilityChecks\": {\n        const ablKey = parts.shift();\n        for (const noteSource of result) {\n          noteSource.notes = noteSource.notes\n            .filter((n) => [`${ablKey}Checks`, \"allChecks\"].includes(n.target))\n            .map((n) => n.text);\n        }\n\n        return result;\n      }\n      case \"spell\": {\n        const subId = parts.shift();\n        switch (subId) {\n          // spell.concentration.*\n          case \"concentration\": {\n            const bookId = parts.shift();\n            const targets = [\"concentration\"];\n            if (bookId) targets.push(`concn.${bookId}`);\n\n            for (const noteSource of result) {\n              noteSource.notes = noteSource.notes.filter((n) => targets.includes(n.target)).map((n) => n.text);\n            }\n\n            /** @type {string} */\n            const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.concentrationNotes;\n            if (spellbookNotes?.length) {\n              result.push({ notes: formatTextNotes(spellbookNotes), item: null });\n            }\n\n            return result;\n          }\n          // spell.cl.*\n          case \"cl\": {\n            const targets = [\"cl\"];\n            const bookId = parts.pop();\n            if (bookId) targets.push(`cl.book.${bookId}`);\n\n            for (const noteSource of result) {\n              noteSource.notes = noteSource.notes.filter((n) => targets.includes(n.target)).map((n) => n.text);\n            }\n\n            /** @type {string} */\n            const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.clNotes;\n            if (spellbookNotes?.length) {\n              result.push({ notes: formatTextNotes(spellbookNotes), item: null });\n            }\n\n            return result;\n          }\n        }\n      }\n    }\n\n    // Otherwise return notes if they directly match context\n    for (const note of result) {\n      note.notes = note.notes.filter((o) => o.target === context).map((o) => o.text);\n    }\n\n    return result.filter((n) => n.notes.length);\n  }\n\n  /**\n   * Returns a list of already parsed context notes.\n   *\n   * @param {string} context - The context to draw notes from.\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.roll=true] Whether to roll inline rolls or not.\n   * @param {boolean} [options.all] - Option to pass to {@link getContextNotes}\n   * @returns {Promise<Array<ParsedContextNoteEntry>>} The resulting notes, already parsed.\n   */\n  async getContextNotesParsed(context, { all, roll = true, rollData } = {}) {\n    rollData ??= this.getRollData();\n\n    const noteObjects = this.getContextNotes(context, all);\n    await this.enrichContextNotes(noteObjects, rollData, { roll });\n\n    return noteObjects.reduce((all, o) => {\n      all.push(...o.enriched.map((text) => ({ text, source: o.item?.name })));\n      return all;\n    }, []);\n  }\n\n  /**\n   * Enrich context notes with item specific roll data.\n   *\n   * Adds `enriched` array to each note object.\n   *\n   * @param {ItemContextNotes} notes - Context notes\n   * @param {object} [rollData] - Roll data instance\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.roll=true] - Handle rolls\n   */\n  async enrichContextNotes(notes, rollData, { roll = true } = {}) {\n    rollData ??= this.getRollData();\n    for (const noteObj of notes) {\n      rollData.item = {};\n      if (noteObj.item) rollData = noteObj.item.getRollData();\n\n      const enriched = [];\n      for (const note of noteObj.notes) {\n        enriched.push(\n          ...note\n            .split(/[\\n\\r]+/)\n            .map((subnote) => pf1.utils.enrichHTMLUnrolled(subnote, { rollData, rolls: roll, relativeTo: this }))\n        );\n      }\n\n      noteObj.enriched = await Promise.all(enriched);\n    }\n  }\n\n  /**\n   * @typedef {object} MobilityPenaltyResult\n   * @property {number|null} maxDexBonus - The maximum dexterity bonus allowed for this result.\n   * @property {number} acp - The armor check penalty of this result.\n   */\n\n  /**\n   * Computes encumbrance values for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from encumbrance.\n   */\n  _computeEncumbrance() {\n    // Init base data\n    this.system.attributes ??= {};\n    const attributes = this.system.attributes;\n    attributes.encumbrance ??= {};\n    const encumbrance = attributes.encumbrance;\n\n    const carry = this.getCarryCapacity();\n    // Set levels\n    encumbrance.levels = carry;\n    encumbrance.levels.overhead = carry.heavy;\n    encumbrance.levels.carry = carry.heavy * 2;\n    encumbrance.levels.drag = carry.heavy * 5;\n\n    const carriedWeight = Math.max(0, this.getCarriedWeight());\n    encumbrance.carriedWeight = Math.round(carriedWeight * 10) / 10;\n\n    // Determine load level\n    let encLevel = pf1.config.encumbranceLevels.light;\n    if (carriedWeight > 0) {\n      if (carriedWeight > encumbrance.levels.medium) encLevel = pf1.config.encumbranceLevels.heavy;\n      else if (carriedWeight > encumbrance.levels.light) encLevel = pf1.config.encumbranceLevels.medium;\n    }\n    encumbrance.level = encLevel;\n\n    const result = {\n      maxDexBonus: null,\n      acp: 0,\n    };\n\n    switch (encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium:\n        result.acp = 3;\n        result.maxDexBonus = 3;\n        break;\n      case pf1.config.encumbranceLevels.heavy:\n        result.acp = 6;\n        result.maxDexBonus = 1;\n        break;\n    }\n\n    encumbrance.acp = result.acp;\n    encumbrance.maxDex = result.maxDexBonus;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   * @returns {number} - Total coin weight in lbs\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * @returns {{light:number,medium:number,heavy:number}} - Capacity info\n   */\n  getCarryCapacity() {\n    // Determine carrying capacity\n    const carryCapacity = this.system.details?.carryCapacity ?? {};\n    const carryStr = this.system.abilities.str.total + carryCapacity.bonus?.total;\n    let carryMultiplier = carryCapacity.multiplier?.total;\n    const size = Object.keys(pf1.config.sizeChart)[this.system.traits.size.value];\n    if (this.system.attributes.quadruped) carryMultiplier *= pf1.config.encumbranceMultipliers.quadruped[size];\n    else carryMultiplier *= pf1.config.encumbranceMultipliers.normal[size];\n    const table = pf1.config.encumbranceLoads;\n\n    let heavy = Math.floor(table[carryStr] * carryMultiplier);\n    if (carryStr >= table.length) {\n      const multiplierCount = (carryStr - (table.length - 1)) / 10;\n      heavy = Math.floor(table[table.length - 1] * Math.pow(4, multiplierCount) * carryMultiplier);\n    }\n    // Convert to world unit system\n    heavy = pf1.utils.convertWeight(heavy);\n\n    return {\n      light: Math.floor(heavy / 3),\n      medium: Math.floor((heavy / 3) * 2),\n      heavy,\n    };\n  }\n\n  /**\n   * Determines carried weight.\n   *\n   * @returns {number} - kg or lbs of all carried things, including currency\n   */\n  getCarriedWeight() {\n    const weight = this.items\n      .filter((i) => i.isPhysical && i.system.carried !== false)\n      .reduce((cur, o) => cur + o.system.weight.total, this._calculateCoinWeight());\n\n    return pf1.utils.convertWeight(weight);\n  }\n\n  /**\n   * Get total currency in category.\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Return result in lowest denomination (default copper). If false, returns standard currency (default gold) instead.\n   * @returns {number} - Total currency in category.\n   */\n  getCurrency(category = \"currency\", { inLowestDenomination = true } = {}) {\n    const currencies = this.system[category];\n    if (!currencies) {\n      console.error(`Currency type \"${category}\" not found.`);\n      return NaN;\n    }\n\n    const cc = pf1.config.currency;\n\n    let total = 0;\n    for (let [unit, value] of Object.entries(currencies)) {\n      value = Math.max(0, value || 0);\n      if (value == 0) continue;\n      total += value * (cc.rate[unit] || 1);\n    }\n\n    return inLowestDenomination ? total : total / cc.standardRate;\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Use copper for calculations, otherwise {@link pf1.config.currency.standard standard denomination} is used.\n   * @returns {number} - The total amount of currency, in copper pieces.\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total =\n      this.getCurrency(\"currency\", { inLowestDenomination: true }) +\n      this.getCurrency(\"altCurrency\", { inLowestDenomination: true });\n\n    return inLowestDenomination ? total : total / pf1.config.currency.standardRate;\n  }\n\n  /**\n   * Converts currencies of the given category to the given currency type\n   *\n   * @see {@link pf1.utils.currency.convert}\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category, altCurrency is for weightless\n   * @param {CoinType} [type=\"pp\"] - Target currency.\n   * @returns {Promise<this>|undefined} Updated document or undefined if no update occurred.\n   */\n  convertCurrency(category = \"currency\", type = \"pp\") {\n    const cp = this.getCurrency(category, { inLowestDenomination: true });\n    if (!Number.isFinite(cp)) {\n      console.error(`Invalid total currency \"${cp}\" in \"${category}\" category`);\n      return;\n    }\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { [category]: currency } });\n  }\n\n  /**\n   * Prepare armor/shield data for roll data\n   *\n   * @internal\n   * @param {object} equipment Equipment info\n   * @param {string} equipment.id Item ID\n   * @param {string} equipment.type Armor/Shield type\n   * @param {object} armorData Armor data object\n   */\n  _prepareArmorData({ id, type } = {}, armorData) {\n    armorData.type = type ?? null;\n\n    const itemData = this.items.get(id)?.system;\n    if (!itemData) return;\n\n    armorData.ac = itemData.armor.value ?? 0;\n    armorData.enh = itemData.armor.enh ?? 0;\n    armorData.total = armorData.ac + armorData.enh;\n    if (!Number.isFinite(armorData.total)) armorData.total = 0;\n  }\n\n  /**\n   * Retrieve data used to fill in roll variables.\n   *\n   * @example\n   * ```js\n   * await new Roll(\"1d20 + @abilities.wis.mod[Wis]\", actor.getRollData()).toMessage();\n   * ```\n   *\n   * @override\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.refresh] - Refresh cache\n   * @param {boolean} [options.cache] - Use cache. If set to false, new fresh copy is returned without caching it.\n   * @returns {object} - Roll data object\n   */\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    pf1.utils.rollData.addStatic(result);\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        // Cleanup has no deep paths, so we can directly delete them\n        // TODO: Move this cleanup to whatever adds the data\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Add denied Dex to AC\n    result.conditions ??= {};\n    result.conditions.loseDexToAC = this.changeFlags?.loseDexToAC ?? false;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Sync health values\n    for (const hpKey of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = result.attributes[hpKey];\n      hp.value = hp.max + hp.offset;\n      /*\n      // Supporting values\n      const thp = hp.temp ?? 0;\n      hp.effective = hp.value + thp;\n      hp.ratio = hp.effective / (hp.max + thp);\n      */\n    }\n\n    // Set size index\n    const sizes = Object.values(pf1.config.sizeChart);\n    result.size = Math.clamp(result.traits.size.value, 0, sizes.length - 1);\n\n    // Set age category index\n    const ageCategories = Object.keys(pf1.config.ageCategories);\n    const maxAgeOffset = ageCategories.length - 1;\n    result.ageCategory = {\n      value: Math.clamp(result.traits?.ageCategory?.value, 0, maxAgeOffset),\n      physical: Math.clamp(result.traits?.ageCategory?.physical, 0, maxAgeOffset),\n      mental: Math.clamp(result.traits?.ageCategory?.mental, 0, maxAgeOffset),\n    };\n\n    // Add more info for formulas\n    result.armor = { type: 0, total: 0, ac: 0, enh: 0 };\n    result.shield = { type: 0, total: 0, ac: 0, enh: 0 };\n\n    // Determine equipped armor type\n    const eqData = this.equipment;\n    if (eqData) {\n      this._prepareArmorData(eqData.armor, result.armor);\n      this._prepareArmorData(eqData.shield, result.shield);\n    }\n\n    // Add spellbook info\n    result.spells = result.attributes.spells.spellbooks;\n    for (const book of Object.values(result.spells)) {\n      book.abilityMod = result.abilities[book.ability]?.mod ?? 0;\n      // Add alias\n      if (book.class && book.class !== \"_hd\") result.spells[book.class] ??= book;\n    }\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags.dictionary ?? {};\n    result.bFlags = Object.fromEntries(\n      Object.entries(this.itemFlags.boolean ?? {}).map(([key, { sources }]) => [key, sources.length > 0 ? 1 : 0])\n    );\n\n    result.range = this.system.traits?.reach?.total ?? { melee: NaN, reach: NaN };\n\n    // Add class info\n    result.classes = this.classes;\n    const negLevels = result.attributes.energyDrain ?? 0;\n    if (negLevels > 0 && result.classes) {\n      for (const cls of Object.values(result.classes)) {\n        if (cls.isMythic) continue;\n        cls.level = Math.max(0, cls.unlevel - negLevels);\n      }\n    }\n\n    // Map HP ability\n    const hpAbility = result.abilities[result.attributes.hpAbility];\n    Object.defineProperty(result.attributes, \"hpAbility\", {\n      get() {\n        return hpAbility;\n      },\n    });\n\n    // @since PF1 v10\n    result.alignment = pf1.utils.parseAlignment(this.system.details?.alignment || \"tn\");\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Get melee and reach maximum ranges.\n   *\n   * @param {ActorSize|number} size - Actor size as size key or number\n   * @param {ActorStature} stature - Actor stature\n   * @returns {{melee:number,reach:number}} - Ranges\n   */\n  static getReach(size = \"med\", stature = \"tall\") {\n    let effectiveSize = size >= 0 ? size : Object.keys(pf1.config.sizeChart).indexOf(size);\n    // Long creatures larger than medium count as one size smaller\n    // https://www.aonprd.com/Rules.aspx?ID=179\n    if (stature !== \"tall\" && effectiveSize > 4) effectiveSize -= 1;\n\n    const reachStruct = (melee, reach) => ({ melee, reach });\n\n    switch (effectiveSize) {\n      case 0: // Fine\n      case 1: // Diminutive\n        return reachStruct(0, 0);\n      case 2: // Tiny\n        return reachStruct(0, 5);\n      default:\n      case 3: // Small\n      case 4: // Medium\n        return reachStruct(5, 10);\n      case 5: // Large\n        return reachStruct(10, 20);\n      case 6: // Huge\n        return reachStruct(15, 30);\n      case 7: // Gargantuan\n        return reachStruct(20, 40);\n      case 8: // Colossal\n        return reachStruct(30, 60);\n    }\n  }\n\n  /**\n   * @protected\n   * @returns {Array<object>} - Array of item defining objects\n   */\n  getQuickActions() {\n    return this.items\n      .filter((o) => o.isActive && o.system.showInQuickbar === true && o.showUnidentifiedData !== true)\n      .sort((a, b) => a.sort - b.sort)\n      .map((item) => {\n        const qi = {\n          item,\n          name: item.name,\n          id: item.id,\n          type: item.type,\n          img: item.img,\n          get isSingleUse() {\n            return item.isSingleUse;\n          },\n          get haveAnyCharges() {\n            return this.item.isCharged && this.maxCharge > 0;\n          },\n          get maxCharge() {\n            return item.maxCharges;\n          },\n          get charges() {\n            return this.item.charges;\n          },\n        };\n\n        // Fill in charge details\n        qi.isCharged = qi.haveAnyCharges;\n        if (qi.isCharged) {\n          let chargeCost =\n            item.defaultAction?.getChargeCostSync({ maximize: true })?.total ?? item.getDefaultChargeCost();\n          //if (chargeCost == 0) qi.isCharged = false;\n\n          qi.recharging = chargeCost < 0;\n          chargeCost = Math.abs(chargeCost);\n\n          qi.uses = qi.charges;\n          qi.max = qi.maxCharge;\n\n          if (!Number.isFinite(qi.max)) {\n            delete qi.max; // Infinite\n          } else if (chargeCost != 0) {\n            // Maximum charging\n            if (qi.recharging) {\n              qi.uses = Math.ceil((qi.max - qi.uses) / chargeCost);\n              qi.max = Math.ceil(qi.max / chargeCost);\n            }\n            // Actual uses\n            else {\n              qi.uses = Math.floor(qi.uses / chargeCost);\n              qi.max = Math.floor(qi.max / chargeCost);\n            }\n          }\n        } else {\n          const action = item.defaultAction;\n          // Add fake charges for ammo using items\n          if (action?.ammo.type) {\n            const ammo = item.defaultAmmo;\n            if (ammo) {\n              qi.isCharged = true;\n              qi.uses = ammo.system.quantity || 0;\n            }\n          }\n        }\n\n        return qi;\n      });\n  }\n\n  /**\n   * @internal\n   */\n  refreshAbilityModifiers() {\n    for (const abl of Object.values(this.system.abilities)) {\n      const penalty = Math.abs(abl.penalty || 0);\n      const damage = abl.damage || 0;\n      const newMod = pf1.utils.getAbilityModifier(abl.total, { penalty, damage });\n      abl.mod = newMod;\n    }\n  }\n\n  /**\n   * Return feat counts.\n   *\n   * @typedef FeatCounts\n   * @type {object}\n   * @property {number} max - The maximum allowed feats.\n   * @property {number} active - The current number of active feats.\n   * @property {number} owned - The current number of feats, active or not.\n   * @property {number} levels - Feats gained by levels specifically\n   * @property {number} mythic - Mythic feats\n   * @property {number} formula - Feats gained by custom formula on the feats tab\n   * @property {number} changes - Feats gained via Changes\n   * @property {number} disabled - Disabled feats\n   * @property {number} excess - Feats over maximum allowed\n   * @property {number} missing - Feats under maximum allowed\n   * @returns {FeatCounts} An object with a property `value` which refers to the current used feats, and `max` which refers to the maximum available feats.\n   */\n  getFeatCount() {\n    const feats = this.itemTypes.feat.filter((o) => o.subType === \"feat\");\n\n    const active = feats.filter((o) => o.isActive).length;\n    const owned = feats.length;\n\n    const result = {\n      max: 0,\n      active,\n      owned,\n      disabled: owned - active,\n      levels: 0,\n      mythic: 0,\n      formula: 0,\n      changes: 0,\n      // Count totals\n      get discrepancy() {\n        return this.max - this.active;\n      },\n      get missing() {\n        return Math.max(0, this.discrepancy);\n      },\n      get excess() {\n        return Math.max(0, -this.discrepancy);\n      },\n    };\n\n    const isMindless = this.system.abilities?.int?.value === null;\n\n    // Ignore classes for feats with mindless\n    // Mindless gets other bonuses to feats beyond these...\n    // ... since they can be explicit \"gains X feat\", homebrew, or other impossible to account for.\n    if (!isMindless) {\n      // Add feat count by level\n      result.levels = Math.ceil(this.system.attributes.hd.total / 2);\n      result.max += result.levels;\n\n      // Mythic feats\n      // https://aonprd.com/Rules.aspx?Name=Mythic%20Heroes&Category=Mythic%20Rules\n      // Gained at 1, 3, 5, etc.\n      result.mythic = Math.ceil(this.system.details.mythicTier / 2);\n      result.max += result.mythic;\n    }\n\n    // Bonus feat formula\n    const bonusRoll = RollPF.safeRollSync(this.system.details?.bonusFeatFormula || \"0\", this.getRollData());\n    result.formula = bonusRoll.total;\n    result.max += result.formula;\n    if (bonusRoll.err) {\n      console.error(\n        `An error occurred in the Bonus Feat Formula of actor \"${this.name}\" [${this.id}].`,\n        {\n          formula: this.system.details?.bonusFeatFormula,\n          actor: this,\n        },\n        bonusRoll.err\n      );\n    }\n\n    // Bonuses from changes\n    result.changes = getHighestChanges(\n      this.changes.filter((c) => {\n        if (c.target !== \"bonusFeats\") return false;\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).reduce((cur, c) => cur + c.value, 0);\n    result.max += result.changes;\n\n    return result;\n  }\n\n  /**\n   * Check if actor has item with specified boolean flag.\n   *\n   * @param {string} flagName - The name/key of the flag to search for.\n   * @returns {boolean} Whether this actor has any owned item with the given flag.\n   */\n  hasItemBooleanFlag(flagName) {\n    return this.itemFlags.boolean[flagName] != null;\n  }\n\n  /**\n   * Restore spellbook used slots and spellpoints.\n   *\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.commit=true] If false, return update data object instead of directly updating the actor.\n   * @param {object} [options.rollData] Roll data\n   * @returns {Promise<this|object>} Result of update or the update data.\n   */\n  async resetSpellbookUsage({ commit = true, rollData } = {}) {\n    const actorData = this.system;\n    const updateData = {};\n\n    rollData ??= this.getRollData();\n\n    // Update spellbooks\n    for (const [bookId, spellbook] of Object.entries(actorData.attributes.spells.spellbooks)) {\n      if (!spellbook.inUse) continue;\n\n      // Restore spellbooks using spell points\n      if (spellbook.spellPoints.useSystem) {\n        // Try to roll restoreFormula, fall back to restoring max spell points\n        let restorePoints = spellbook.spellPoints.max;\n        if (spellbook.spellPoints.restoreFormula) {\n          const restoreRoll = await RollPF.safeRoll(\n            spellbook.spellPoints.restoreFormula,\n            rollData,\n            undefined,\n            undefined,\n            { allowInteractive: false }\n          );\n          if (restoreRoll.err) console.error(restoreRoll.err, spellbook.spellPoints.restoreFormula);\n          else restorePoints = Math.min(spellbook.spellPoints.value + restoreRoll.total, spellbook.spellPoints.max);\n        }\n        updateData[`system.attributes.spells.spellbooks.${bookId}.spellPoints.value`] = restorePoints;\n      }\n      // Restore spell slots\n      else {\n        for (let level = 0; level < 10; level++) {\n          updateData[`system.attributes.spells.spellbooks.${bookId}.spells.spell${level}.value`] =\n            spellbook.spells[`spell${level}`]?.max ?? 0;\n        }\n      }\n    }\n\n    if (commit) return this.update(updateData);\n    return updateData;\n  }\n\n  /**\n   * Recharge all owned items.\n   *\n   * @see {@link pf1.documents.item.ItemPF.recharge}\n   *\n   * @example\n   * Recharge items with default settings.\n   * ```js\n   * await actor.rechargeItems();\n   * ```\n   * Recharge items as if week had passed.\n   * ```js\n   * await actor.rechargeItems({ period: \"week\" });\n   * ```\n   *\n   * @param {RechargeActorItemsOptions} [options] - Additional options\n   * @returns {Promise<Item[]|object[]>} - Result of an update or the update data.\n   */\n  async rechargeItems({ commit = true, ...rechargeOptions } = {}) {\n    const itemUpdates = [];\n\n    // Update charged items\n    // TODO: Await all item recharges in one go.\n    for (const item of this.items) {\n      const itemUpdate = await item.recharge({ ...rechargeOptions, commit: false });\n\n      // Append update to queue\n      if (itemUpdate?.system && !foundry.utils.isEmpty(itemUpdate.system)) {\n        itemUpdate._id = item.id;\n        itemUpdates.push(itemUpdate);\n      }\n    }\n\n    if (commit) {\n      if (itemUpdates.length) return this.updateEmbeddedDocuments(\"Item\", itemUpdates);\n    } else return itemUpdates;\n    return [];\n  }\n\n  /**\n   * Handler for character healing during rest.\n   *\n   * @see {@link https://www.aonprd.com/Rules.aspx?ID=170 Core p. 191 - Injury and Death > Healing}\n   * @see {@link https://www.aonprd.com/Skills.aspx?ItemName=Heal Core p. 98 - Heal Skill}\n   * @see {@link https://www.aonprd.com/Rules.aspx?ID=1277 Ultimate Campaign p. 86 - Downtime Activities > Rest}\n   *\n   * @protected\n   * @param {object} options Resting options.\n   * @returns {object} Update data object\n   */\n  _restingHeal(options = {}) {\n    const actorData = this.system,\n      hp = actorData.attributes.hp,\n      wounds = actorData.attributes?.wounds,\n      vigor = actorData.attributes?.vigor;\n\n    const { hours, longTermCare } = options;\n    const updateData = {};\n\n    /** @type {number} */\n    const hd = actorData.attributes.hd.total;\n\n    // Base healing\n    // Full night's rest (8 hours)\n    // Time is not actually checked as there are items and abilities that can alter it.\n    const heal = {\n      hp: hd,\n      abl: 1, // 1 per day\n      nonlethal: hours * hd,\n      vigor: vigor?.max ?? 0,\n      wounds: wounds?.max > 0 ? 1 : 0,\n    };\n\n    // -- Normal Hit Points ---\n\n    // Full day of resting\n    if (hours >= 24) {\n      heal.hp *= 2; // Doubled\n      heal.wounds = Math.max(1, Math.floor(hd / 2)); // not additive, replaces 1 with half HD. Min 1 despite the rules not saying so, to not have longer resting impede healing.\n      heal.abl = 2; // 2 per day\n    }\n    // TODO: Multiple days of resting\n    // How to do partial day plus multiple?\n\n    // Long term care\n    // Double healing for everything\n    if (longTermCare === true) {\n      heal.hp *= 2;\n      heal.wounds *= 2;\n      heal.abl *= 2;\n    }\n\n    updateData[\"system.attributes.hp.value\"] = Math.min(hp.value + heal.hp, hp.max);\n    updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, (hp.nonlethal || 0) - heal.nonlethal);\n    for (const [key, abl] of Object.entries(actorData.abilities)) {\n      const dmg = Math.abs(abl.damage);\n      updateData[`system.abilities.${key}.damage`] = Math.max(0, dmg - heal.abl);\n    }\n\n    // --- Wounds & Vigor ---\n\n    // Secondary actors don't use W&V rules\n    if (wounds?.max && vigor?.max) {\n      updateData[\"system.attributes.wounds.value\"] = Math.min(wounds.value + heal.wounds, wounds.max);\n      updateData[\"system.attributes.vigor.value\"] = Math.min(vigor.value + heal.vigor, vigor.max);\n    }\n\n    return updateData;\n  }\n\n  /**\n   * Perform all changes related to an actor resting, including restoring HP, ability scores, item uses, etc.\n   *\n   * @example\n   * Rest with default settings\n   * ```js\n   * await actor.performRest();\n   * ```\n   *\n   * @remarks\n   * - Calls {@link _restingHeal}, {@link resetSpellbookUsage} and {@link rechargeItems} to perform actual modifications functions.\n   *\n   * @hooks\n   * - `pf1PreActorRest` - Called just before committing changes.\n   * - `pf1ActorRest` - Called after the changes have been committed.\n   *\n   * @see {@link hookEvents!pf1PreActorRest pf1PreActorRest hook}\n   * @see {@link hookEvents!pf1ActorRest pf1ActorRest hook}\n   * @param {Partial<ActorRestOptions>} options - Options affecting an actor's resting\n   * @returns {Promise<ActorRestData | void>} Updates applied to the actor, if resting was completed\n   */\n  async performRest(options = {}) {\n    const { restoreHealth = true, longTermCare = false, restoreDailyUses = true, hours = 8, verbose = false } = options;\n\n    const updateData = {};\n    // Restore health and ability damage\n    if (restoreHealth === true) {\n      const healUpdate = this._restingHeal(options);\n      foundry.utils.mergeObject(updateData, healUpdate);\n    }\n\n    let itemUpdates = [];\n    // Restore daily uses of spells, feats, etc.\n    if (restoreDailyUses === true) {\n      const spellbookUpdates = await this.resetSpellbookUsage({ commit: false });\n      foundry.utils.mergeObject(updateData, spellbookUpdates);\n\n      // Recharge all items (including spells for prepared spellbooks)\n      itemUpdates = await this.rechargeItems({ commit: false, updateData, period: \"day\" });\n    }\n\n    options = { restoreHealth, restoreDailyUses, longTermCare, hours };\n    const allowed = Hooks.call(\"pf1PreActorRest\", this, options, updateData, itemUpdates);\n    if (allowed === false) return;\n\n    const context = { pf1: { action: \"rest\", restOptions: options } };\n\n    if (itemUpdates.length) await this.updateEmbeddedDocuments(\"Item\", itemUpdates, foundry.utils.deepClone(context));\n    if (!foundry.utils.isEmpty(updateData.system)) await this.update(updateData, foundry.utils.deepClone(context));\n\n    Hooks.callAll(\"pf1ActorRest\", this, options, updateData, itemUpdates);\n\n    if (verbose) {\n      const message = restoreDailyUses ? \"PF1.FullRestMessage\" : \"PF1.RestMessage\";\n      ui.notifications.info(game.i18n.format(message, { name: this.token?.name ?? this.name, hours }));\n    }\n\n    return { options, updateData, itemUpdates };\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async modifyTokenAttribute(attribute, value, isDelta = false, isBar = true) {\n    let doc = this;\n    const current = foundry.utils.getProperty(this.system, attribute),\n      updates = {};\n\n    const isResource = current instanceof Resource;\n    if (isResource) doc = current.item;\n\n    if (!doc) return;\n\n    // Hit points\n    if (attribute === \"attributes.hp\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.hp.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.hp.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Wounds & Vigor\n    else if (attribute === \"attributes.vigor\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.vigor.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.vigor.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Relative\n    else if (isDelta) {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.min(current.value + value, current.max);\n      } else {\n        if (isBar)\n          updates[`system.${attribute}.value`] = Math.clamp(current.value + value, current.min || 0, current.max);\n        else updates[`system.${attribute}`] = current + value;\n      }\n    }\n    // Absolute\n    else {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.clamp(value, 0, current.max);\n      } else {\n        if (isBar) updates[`system.${attribute}.value`] = Math.min(value, current.max);\n        else updates[`system.${attribute}`] = value;\n      }\n    }\n\n    const allowed = Hooks.call(\"modifyTokenAttribute\", { attribute, value, isDelta, isBar }, updates);\n    return allowed !== false ? doc.update(updates) : this;\n  }\n\n  /**\n   * The VisionSharingSheet instance for this actor\n   *\n   * @type {VisionSharingSheet}\n   */\n  get visionSharingSheet() {\n    this._visionSharingSheet ??= new VisionSharingSheet({ document: this });\n    return this._visionSharingSheet;\n  }\n}\n\n/**\n * @typedef {object} ActorRestOptions\n * Options given to {@link ActorPF.performRest} affecting an actor's resting.\n * @property {boolean} [restoreHealth=true] - Whether the actor's health should be restored.\n * @property {boolean} [restoreDailyUses=true] - Whether daily uses of spells and abilities should be restored.\n * @property {boolean} [longTermCare=false] - Whether additional hit and ability score points should be restored through the Heal skill.\n * @property {number} [hours=8] - The number of hours the actor will rest.\n * @property {boolean} [verbose=false] - Display notification once rest processing finishes.\n */\n\n/**\n * @typedef {object} ActorRestData\n * @property {ActorRestOptions} options - Options for resting\n * @property {object} updateData - Updates applied to the actor\n * @property {object[]} itemUpdates - Updates applied to the actor's items\n */\n\n/**\n * @typedef {object} DamageInstance\n * @property {number} value - Total damage in this instance\n * @property {object} types - Damage type data\n * @property {string} types.custom - Custom damage types\n * @property {string[]} types.values - Standard damage types\n */\n\n/**\n * @typedef {object} ItemContextNotes\n * @property {Item} item - Item from which the notes are from\n * @property {Array<string>} notes - Note strings\n * @property {Array<string>} enriched - Enriched note things\n */\n\n/**\n * @typedef {object} ParsedContextNoteEntry\n * @property {string} text - Enriched note text\n * @property {string|undefined} source - Source label if any\n */\n","import { ActorPF } from \"@actor/actor-pf.mjs\";\nimport { getSourceInfo, getChangeFlat } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Shared functionality for {@link pf1.documents.actor.ActorCharacterPF | PCs} and {@link pf1.documents.actor.ActorNPCPF | NPCs}.\n *\n * @todo Move PC/NPC functionality from ActorPF here.\n *\n * @abstract\n */\nexport class BaseCharacterPF extends ActorPF {\n  /** @inheritDoc */\n  _detectHealthChange(changed, context) {\n    super._detectHealthChange(changed, context);\n\n    const deltas = context.pf1?.deltas ?? {};\n\n    const hpData = changed.system?.attributes;\n\n    if (hpData) {\n      const oldHpData = this.system.attributes;\n\n      for (const type of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = hpData[type];\n        if (!hp) continue;\n        for (const key of [\"offset\", \"temp\", \"nonlethal\"]) {\n          if (hp[key] === undefined) continue;\n          const diff = hp[key] - (oldHpData?.[type]?.[key] || 0);\n          if (diff && Number.isFinite(diff)) {\n            deltas[type] ??= {};\n            deltas[type][key] = diff;\n          }\n        }\n      }\n    }\n\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const oldAblData = this.system.abilities;\n      for (const [ablKey, ablData] of Object.entries(abilities)) {\n        for (const key of [\"damage\", \"drain\", \"userPenalty\"]) {\n          if (ablData[key] === undefined) continue;\n          const diff = ablData[key] - (oldAblData?.[ablKey]?.[key] ?? 0);\n          if (diff && Number.isFinite(diff)) {\n            deltas[ablKey] ??= {};\n            deltas[ablKey][key] = diff;\n          }\n        }\n      }\n    }\n\n    if (changed.system.attributes?.energyDrain !== undefined) {\n      const diff = changed.system.attributes?.energyDrain - this.system.attributes.energyDrain;\n      if (diff && Number.isFinite(diff)) {\n        deltas.energyDrain = diff;\n      }\n    }\n\n    if (Object.keys(deltas).length > 0) {\n      context.pf1 ??= {};\n      context.pf1.deltas = deltas;\n    }\n  }\n\n  /** @override */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    this._onDeltaUpdates(context.pf1?.deltas);\n  }\n\n  /**\n   * Handle Deltas in update context\n   *\n   * Produces scrolling text for health changes.\n   *\n   * @param {Promise<object>} deltas\n   */\n  async _onDeltaUpdates(deltas) {\n    if (!deltas) return;\n\n    // TODO: Maybe allow if the token has visible HP bar regardless?\n    if (!game.user.isGM && !this.testUserPermission(game.user, game.settings.get(\"pf1\", \"healthPermission\"))) return;\n\n    // TODO: Support multiple tokens?\n    let token = this.token ?? this.getActiveTokens(true, true)[0];\n\n    if (!game.user.isGM && !token.object.isVisible) token = null;\n\n    if (!token) return;\n\n    const deltaLabels = {\n      hp: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Health\",\n          color: pf1.config.feedback.deltas.hp,\n        },\n        temp: {\n          label: \"PF1.ActiveFeedback.Deltas.TempHP\",\n          color: pf1.config.feedback.deltas.temp,\n        },\n        nonlethal: {\n          label: \"PF1.ActiveFeedback.Deltas.Nonlethal\",\n          color: pf1.config.feedback.deltas.nonlethal,\n        },\n      },\n      wounds: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Wounds\",\n          color: pf1.config.feedback.deltas.wounds,\n        },\n      },\n      vigor: {\n        offset: {\n          label: \"PF1.ActiveFeedback.Deltas.Vigor\",\n          color: pf1.config.feedback.deltas.vigor,\n        },\n        temp: {\n          label: \"PF1.ActiveFeedback.Deltas.TempVigor\",\n          color: pf1.config.feedback.deltas.temp,\n        },\n      },\n      energyDrain: {\n        label: \"PF1.ActiveFeedback.Deltas.NegativeLevel\",\n        color: pf1.config.feedback.deltas.energyDrain,\n      },\n      ability: {\n        damage: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityDamage\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n        drain: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityDrain\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n        userPenalty: {\n          label: \"PF1.ActiveFeedback.Deltas.AbilityPenalty\",\n          color: pf1.config.feedback.deltas.abilityScore,\n        },\n      },\n    };\n\n    const formatter = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format;\n\n    for (const key of Object.keys(deltas)) {\n      const labels = [];\n      switch (key) {\n        case \"hp\":\n        case \"wounds\":\n        case \"vigor\":\n          for (const [hpKey, value] of Object.entries(deltas[key])) {\n            const conf = deltaLabels[key][hpKey];\n            if (conf) {\n              const positive = value > 0;\n              const color = positive ? conf.color.positive : conf.color.negative;\n              labels.push({\n                label: game.i18n.format(conf.label, { value: formatter(value) }),\n                positive,\n                color,\n                value,\n                key: `${key}.${hpKey}`,\n              });\n            } else console.debug(\"Unrecognized delta:\", key, hpKey, value);\n          }\n          break;\n        case \"energyDrain\": {\n          const diff = deltas[key];\n          const conf = deltaLabels.energyDrain;\n          const positive = diff < 0;\n          const color = positive ? conf.color.positive : conf.color.negative;\n          labels.push({\n            label: game.i18n.format(conf.label, { value: formatter(diff) }),\n            positive,\n            color,\n            value: diff,\n            key,\n          });\n          break;\n        }\n        default:\n          if (key in pf1.config.abilities) {\n            for (const [dmgKey, diff] of Object.entries(deltas[key])) {\n              const ablName = pf1.config.abilities[key];\n              const conf = deltaLabels.ability[dmgKey];\n              if (ablName && conf) {\n                const positive = diff < 0;\n                const color = positive ? conf.color.positive : conf.color.negative;\n                labels.push({\n                  label: game.i18n.format(conf.label, { value: formatter(diff), ability: ablName }),\n                  positive,\n                  color,\n                  value: diff,\n                  key: `${key}.${dmgKey}`,\n                });\n              } else {\n                console.debug(\"Unrecognized ability score delta:\", key, dmgKey, deltas[key]?.[dmgKey]);\n              }\n            }\n          } else {\n            console.warn(\"Unrecognized delta:\", key, deltas[key]);\n          }\n          break;\n      }\n\n      // Print the actual message.\n      let t0 = 0;\n      for (const options of labels) {\n        const { positive, color } = options;\n\n        // Roughly scale based on canvas resolution with some lower end clamping\n        // TODO: Adjust size based on how \"large\" the change was\n        const fontSize = Math.max(canvas.grid.size / 3, 24);\n\n        const textData = {\n          anchor: CONST.TEXT_ANCHOR_POINTS.CENTER,\n          direction: positive ? CONST.TEXT_ANCHOR_POINTS.TOP : CONST.TEXT_ANCHOR_POINTS.BOTTOM,\n          // duration: 2000,\n          fontSize,\n          fill: color,\n          stroke: 0x000000,\n          strokeThickness: 2.5,\n          jitter: 0.5,\n        };\n\n        if (Hooks.call(\"pf1HealthDeltaRender\", this, options, textData) === false) continue;\n\n        const t1 = performance.now();\n\n        // Prevent scrolling text from overlapping too much\n        const sinceLast = t1 - t0;\n        if (sinceLast < 200) {\n          await new Promise((resolve) => setTimeout(() => resolve(), Math.max(10, 200 - sinceLast)));\n        }\n        t0 = t1;\n\n        console.debug(\"PF1 |\", options.label, \"|\", this.uuid);\n        canvas.interface.createScrollingText(token.object.center, options.label, textData);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    const system = this.system;\n\n    system.traits ??= {};\n\n    // Prepare size data\n    const baseSize = system.traits.size || \"med\";\n    const sizeValue = Object.keys(pf1.config.sizeChart).indexOf(baseSize);\n    system.traits.size = {\n      base: baseSize,\n      value: sizeValue,\n    };\n\n    // Prepare age category data\n    const baseAge = system.traits.ageCategory || \"adult\";\n    const ageValue = Object.keys(pf1.config.ageCategories).indexOf(baseAge);\n    system.traits.ageCategory = {\n      base: baseAge,\n      value: ageValue,\n      physical: ageValue,\n      mental: ageValue,\n    };\n\n    // Prepare skills\n    const skills = system.skills;\n    for (const skill of Object.values(skills)) {\n      if (!skill) continue; // Shouldn't happen\n\n      skill.rank ||= 0;\n      skill.mod = 0;\n\n      for (const subSkill of Object.values(skill.subSkills || {})) {\n        if (!subSkill) continue; // Shouldn't happen\n        subSkill.rank ||= 0;\n        subSkill.mod = 0;\n      }\n    }\n\n    // Set quadruped state\n    if (this.system.attributes) {\n      this.system.attributes.quadruped ??= this.race?.system.quadruped ?? false;\n    }\n  }\n\n  /** @inheritDoc  */\n  _prepareTypeChanges(changes) {\n    // Call hook\n    const tempChanges = [];\n    if (Hooks.events.pf1AddDefaultChanges?.length) {\n      Hooks.callAll(\"pf1AddDefaultChanges\", this, tempChanges);\n    }\n    changes.push(...tempChanges.filter((c) => c instanceof pf1.components.ItemChange));\n\n    const allClasses = this.itemTypes.class.sort((a, b) => a.sort - b.sort);\n\n    this._calculateMaxHealth(allClasses, changes);\n\n    const system = this.system;\n\n    // Add class data to saving throws\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\") === true;\n    for (const a of Object.keys(system.attributes.savingThrows)) {\n      let hasGoodSave = false;\n      system.attributes.savingThrows[a].total = system.attributes.savingThrows[a]?.base ?? 0;\n\n      const total = allClasses.reduce((cur, cls) => {\n        const base = cls.system.savingThrows[a].base;\n\n        if (!useFractional) {\n          // Add per class change\n          changes.push(\n            new pf1.components.ItemChange({\n              formula: base,\n              target: a,\n              type: \"untypedPerm\",\n              flavor: cls.name,\n            })\n          );\n        } else {\n          if (cls.system.savingThrows[a].good === true) hasGoodSave = true;\n        }\n        return cur + base;\n      }, 0);\n\n      if (useFractional) {\n        // Add shared change with fractional\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: Math.floor(total),\n            target: a,\n            type: \"untypedPerm\",\n            flavor: game.i18n.localize(\"PF1.Base\"),\n          })\n        );\n      }\n\n      // Fractional bonus +2 when one class has good save\n      if (useFractional && hasGoodSave) {\n        const goodSaveFormula = pf1.config.classFractionalSavingThrowFormulas.goodSaveBonus;\n        const total = RollPF.safeRollSync(goodSaveFormula).total;\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: total,\n            target: a,\n            type: \"untypedPerm\",\n            flavor: game.i18n.localize(\"PF1.SavingThrowGoodFractionalBonus\"),\n          })\n        );\n      }\n    }\n\n    // Add Constitution to HP\n    const hpAbility = system.attributes.hpAbility;\n    if (hpAbility) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.mod * @attributes.hd.total\",\n          operator: \"add\",\n          target: \"mhp\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n\n      if (!system.attributes.wounds?.base) {\n        // > a creature has a number of wound points equal to twice its Constitution score.\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.undrained * 2\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"base\",\n            flavor: pf1.config.abilities[hpAbility],\n          })\n        );\n        // > It also has a wound threshold equal to its Constitution score.\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.undrained\",\n            operator: \"add\",\n            target: \"woundThreshold\",\n            type: \"base\",\n            flavor: pf1.config.abilities[hpAbility],\n          })\n        );\n        // https://www.aonprd.com/Rules.aspx?ID=1157\n        // >  For each point of Constitution damage a creature takes, it loses 2 wound points\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"-(@attributes.hpAbility.damage * 2)\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(\"PF1.AbilityDamage\"),\n          })\n        );\n        // > When a creature takes a penalty to its Constitution score or its Constitution is drained,\n        // > it loses 1 wound point per point of drain or per penalty\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"@attributes.hpAbility.penalty\", // no minus since penalty is negative inherently\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(`PF1.Ability${hpAbility.capitalize()}Pen`),\n          })\n        );\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"-@attributes.hpAbility.drain\",\n            operator: \"add\",\n            target: \"wounds\",\n            type: \"untyped\",\n            flavor: game.i18n.localize(\"PF1.AbilityDrain\"),\n          })\n        );\n      }\n    }\n\n    // Add skill changes\n    const addSKillChanges = (skill, target) => {\n      if (skill.rank > 0) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: skill.rank,\n            value: skill.rank,\n            target: `skill.~${target}`,\n            type: \"base\",\n            operator: \"add\",\n            flavor: game.i18n.localize(\"PF1.SkillRankPlural\"),\n          })\n        );\n        if (skill.cs) {\n          changes.push(\n            new pf1.components.ItemChange({\n              formula: pf1.config.classSkillBonus,\n              value: pf1.config.classSkillBonus,\n              target: `skill.~${target}`,\n              type: \"untyped\",\n              operator: \"add\",\n              flavor: game.i18n.localize(\"PF1.CSTooltip\"),\n            })\n          );\n        }\n      }\n\n      // Add ability modifier\n      if (skill.ability) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: `@abilities.${skill.ability}.mod`,\n            target: `skill.~${target}`,\n            operator: \"add\",\n            type: \"untyped\",\n            flavor: pf1.config.abilities[skill.ability] || skill.ability,\n            priority: -10, // Stat buffing items don't work correctly without this\n          })\n        );\n      }\n\n      // Add Armor Check Penalty\n      if (skill.acp) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: \"-@attributes.acp.skill\",\n            target: `skill.~${target}`,\n            type: \"untyped\",\n            operator: \"add\",\n            flavor: game.i18n.localize(\"PF1.ACPLong\"),\n          })\n        );\n      }\n    };\n\n    const skills = system.skills;\n    for (const [skillId, skill] of Object.entries(skills)) {\n      if (!skill) continue; // Shouldn't happen\n      addSKillChanges(skill, skillId);\n\n      for (const [subSkillId, subSkill] of Object.entries(skill.subSkills || {})) {\n        if (!subSkill) continue; // Shouldn't happen\n        addSKillChanges(subSkill, `${skillId}.${subSkillId}`);\n      }\n    }\n\n    // Add movement speed(s)\n    for (const [mode, speed] of Object.entries(system.attributes.speed)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: speed.base || 0,\n          target: `${mode}Speed`,\n          type: \"base\",\n          operator: \"set\",\n          priority: 1001,\n          flavor: game.i18n.localize(\"PF1.Base\"),\n        })\n      );\n    }\n\n    // Add base attack modifiers shared by all attacks\n    // BAB to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Negative levels to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n    // ACP to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.acp.attackPenalty\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n      })\n    );\n\n    // Add variables to CMD\n    // BAB to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Strength or substitute to CMD\n    const strAbl = system.attributes.cmd.strAbility;\n    if (strAbl in pf1.config.abilities) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${strAbl}.mod`,\n          target: \"cmd\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[strAbl],\n        })\n      );\n    }\n    // Negative levels to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Add Dexterity Modifier to Initiative\n    const abl = system.attributes.init.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"init\",\n          type: \"untypedPerm\",\n          priority: -100,\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n\n    // Add ACP penalty\n    if ([\"str\", \"dex\"].includes(abl)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.acp.attackPenalty\",\n          operator: \"add\",\n          target: \"init\",\n          type: \"untyped\",\n          priority: -100,\n          flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n        })\n      );\n    }\n\n    // Add Ability modifiers and negative levels to saving throws\n    // Ability Mod to Fortitude\n    const fortAbl = system.attributes.savingThrows.fort.ability;\n    if (fortAbl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${fortAbl}.mod`,\n          operator: \"add\",\n          target: \"fort\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[fortAbl],\n        })\n      );\n    }\n    // Ability Mod to Reflex\n    const refAbl = system.attributes.savingThrows.ref.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${refAbl}.mod`,\n          operator: \"add\",\n          target: \"ref\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[refAbl],\n        })\n      );\n    }\n    // Ability Mod to Will\n    const willAbl = system.attributes.savingThrows.will.ability;\n    if (willAbl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${willAbl}.mod`,\n          operator: \"add\",\n          target: \"will\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[willAbl],\n        })\n      );\n    }\n    // Negative level to saves\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"allSavingThrows\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Spell Resistance\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.attributes.sr.formula || 0,\n        target: \"spellResist\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.CustomBonus\"),\n      })\n    );\n\n    // Carry capacity strength bonus\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.bonus.user || 0,\n        target: \"carryStr\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n    // Carry capacity multiplier\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.multiplier.base ?? 1,\n        target: \"carryMult\",\n        type: \"base\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: system.details.carryCapacity.multiplier.user || 0,\n        target: \"carryMult\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n\n    // NPC Lite Sheet Values for Init, CMD, BAB and AC\n    const liteValues = {\n      init: null,\n      cmd: null,\n      bab: null,\n      ac: (data) => data.normal,\n    };\n\n    for (const [key, valfn] of Object.entries(liteValues)) {\n      let value = system.attributes[key];\n      if (typeof valfn === \"function\") value = valfn(value);\n      value = value.value;\n\n      if (value !== undefined) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: value,\n            trget: key,\n            type: \"base\",\n            flavor: game.i18n.localize(\"PF1.Custom\"),\n            operator: \"set\",\n          })\n        );\n      }\n    }\n\n    // Natural armor\n    const ac = system.attributes.naturalAC || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: ac,\n        target: \"nac\",\n        type: \"untyped\",\n        flavor: game.i18n.format(\"PF1.CustomBonusType\", { type: game.i18n.localize(\"PF1.NaturalArmor\") }),\n      })\n    );\n\n    // Add armor bonuses from equipment\n    for (const item of this.itemTypes.equipment) {\n      if (!item.system.equipped) continue;\n      // Ignore armor with zero value\n      const normalAC = item.system.armor?.value || 0;\n      const enhAC = item.system.armor?.enh || 0;\n      if (!(normalAC + enhAC)) continue;\n\n      const isBroken = item.isBroken;\n      let armorTarget = \"aac\";\n      if (item.system.subType === \"shield\") armorTarget = \"sac\";\n      // Push base armor\n      const baseAC = isBroken ? Math.floor(normalAC / 2) : normalAC;\n      const enhACEffective = isBroken ? Math.floor(enhAC / 2) : enhAC;\n      // Adjust broken AC to not cause extra reduction from halving both\n      // Proof: 5 / 2 base + 3 / 2 enh = 3, when it should be 8 / 2 = 4\n      const brokenAdjust = isBroken ? Math.floor(((normalAC % 2) + (enhAC % 2)) / 2) : 0;\n\n      // Add changes\n      changes.push(\n        new pf1.components.ItemChange(\n          {\n            formula: baseAC,\n            value: baseAC,\n            target: armorTarget,\n            type: \"base\",\n          },\n          { parent: item }\n        )\n      );\n      changes.push(\n        new pf1.components.ItemChange(\n          {\n            formula: enhACEffective + brokenAdjust,\n            value: enhACEffective + brokenAdjust,\n            target: armorTarget,\n            type: \"enh\",\n          },\n          { parent: item }\n        )\n      );\n    }\n\n    // Add fly bonuses or penalties based on maneuverability\n\n    const flyKey = system.attributes.speed.fly.maneuverability;\n    let flyValue = 0;\n    if (flyKey != null) flyValue = pf1.config.flyManeuverabilityValues[flyKey];\n    if (flyValue !== 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: flyValue,\n          target: \"skill.fly\",\n          type: \"racial\",\n          flavor: game.i18n.localize(\"PF1.Movement.FlyManeuverability.Label\"),\n        })\n      );\n    }\n\n    // Add swim and climb skill bonuses based on having speeds for them\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.climb.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.clm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.climb\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.swim.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.swm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.swim\"),\n      })\n    );\n\n    // Negative level to skills\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    // Wound Threshold to all skills\n    // BUG: This does nothing since the penalty is calculated independent of the change system\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.woundThresholds.penalty\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.WoundThreshold\"),\n      })\n    );\n\n    // Add size bonuses to various attributes\n    // AC\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeMods).join(\", \") + \")\",\n        target: \"ac\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // Stealth skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeStealthMods).join(\", \") + \")\",\n        target: \"skill.ste\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // Fly skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeFlyMods).join(\", \") + \")\",\n        target: \"skill.fly\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n    // CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"lookup(@size + 1, 0, \" + Object.values(pf1.config.sizeSpecialMods).join(\", \") + \")\",\n        target: \"cmd\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n        priority: -1000,\n      })\n    );\n\n    // Add age modifiers to attributes\n    const ageCategories = Object.values(pf1.config.ageCategories);\n    for (const key of [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"]) {\n      const ageCategoryIdentifier = [\"str\", \"dex\", \"con\"].includes(key) ? \"physical\" : \"mental\";\n      const lookupStatement =\n        `lookup(@ageCategory.${ageCategoryIdentifier} + 1, 0, ` +\n        ageCategories.map((c) => c.modifiers[key]).join(\", \") +\n        \")\";\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `ifelse(gt(@abilities.${key}.base + ${lookupStatement}, 0), ${lookupStatement}, -@abilities.${key}.base + 1)`,\n          target: key,\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Age\"),\n          priority: 0,\n        })\n      );\n    }\n\n    // Custom skill rank bonus from sheet\n    if (system.details?.bonusSkillRankFormula) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: system.details.bonusSkillRankFormula,\n          target: \"bonusSkillRanks\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.SkillBonusRankFormula\"),\n        })\n      );\n    }\n\n    // Add conditions\n    for (const [con, v] of Object.entries(system.conditions)) {\n      if (!v) continue;\n      const condition = pf1.registry.conditions.get(con);\n      const mechanics = condition?.mechanics;\n      if (!mechanics) continue;\n\n      // Add changes\n      for (const change of mechanics.changes) {\n        // Alter change data\n        const changeData = { ...change, flavor: condition.name };\n\n        // Create change object\n        const changeObj = new pf1.components.ItemChange(changeData);\n        changes.push(changeObj);\n      }\n\n      // Set flags\n      for (const flag of mechanics.flags) {\n        this.changeFlags[flag] = true;\n      }\n    }\n\n    // Negative level to hit points and init\n    if (system.attributes.energyDrain > 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.energyDrain * 5)\",\n          operator: \"add\",\n          target: \"mhp\",\n          type: \"untyped\",\n          priority: -750,\n          flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n        })\n      );\n\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.energyDrain * 5)\",\n          operator: \"add\",\n          target: \"vigor\",\n          type: \"untyped\",\n          priority: -750,\n          flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n        })\n      );\n    }\n  }\n\n  /**\n   * Calculate maximum health\n   *\n   * @internal\n   * @param {ItemClassPF[]} allClasses - All classes, sorted in order to be applied\n   * @param {ItemChange[]} changes - Changes to\n   */\n  _calculateMaxHealth(allClasses, changes) {\n    // Categorize classes\n    const pcClasses = [],\n      npcClasses = [],\n      racialHD = [];\n    for (const cls of allClasses) {\n      if (cls.subType === \"racial\") racialHD.push(cls);\n      else if (cls.subType === \"npc\") npcClasses.push(cls);\n      else pcClasses.push(cls);\n    }\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHealthConfig = healthConfig.getActorConfig(this);\n\n    /**\n     * @type {typeof Math.round}\n     */\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    const { continuous } = healthConfig;\n\n    /**\n     * @param {number} value - Amount of health to add\n     * @param {ItemPF} source - Source item\n     */\n    function pushHealth(value, source) {\n      const fcb = pf1.config.favoredClassTypes.includes(source.subType) ? source.system.fc?.hp?.value || 0 : 0;\n\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: value,\n          target: \"mhp\",\n          type: \"untypedPerm\",\n          flavor: source.name,\n        }),\n        new pf1.components.ItemChange({\n          formula: value,\n          target: \"vigor\",\n          type: \"untypedPerm\",\n          flavor: source.name,\n        })\n      );\n      if (fcb != 0) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: fcb,\n            target: \"mhp\",\n            type: \"untypedPerm\",\n            flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n          }),\n          new pf1.components.ItemChange({\n            formula: fcb,\n            target: \"vigor\",\n            type: \"untypedPerm\",\n            flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n          })\n        );\n      }\n    }\n\n    /**\n     * @param {ItemPF} source - Source item\n     */\n    function manualHealth(source) {\n      let health = source.system.hp;\n      if (!continuous) health = round(health);\n\n      pushHealth(health, source);\n    }\n\n    /**\n     * @param {ItemPF} source - Class granting health\n     * @param {object} config - Class type configuration\n     * @param {number} config.rate - Automatic HP rate\n     * @param {boolean} config.maximized - Is this class allowed to grant maximized HP\n     * @param {object} state - State tracking\n     */\n    function autoHealth(source, { rate, maximized } = {}, state) {\n      const hpPerHD = source.system.hd ?? 0;\n      if (hpPerHD === 0) return;\n\n      let health = 0;\n\n      // Mythic\n      if (source.subType === \"mythic\") {\n        const hpPerTier = hpPerHD ?? 0;\n        if (hpPerTier === 0) return;\n        const tiers = source.system.level ?? 0;\n        if (tiers === 0) return;\n        health = hpPerTier * tiers;\n      }\n      // Everything else\n      else {\n        let dieHealth = 1 + (hpPerHD - 1) * rate;\n        if (!continuous) dieHealth = round(dieHealth);\n\n        const hitDice = source.hitDice;\n\n        let maxedHD = 0;\n        if (maximized) {\n          maxedHD = Math.min(hitDice, state.maximized.remaining);\n          state.maximized.value += maxedHD;\n        }\n        const maxedHp = maxedHD * hpPerHD;\n        const levelHp = Math.max(0, hitDice - maxedHD) * dieHealth;\n        health = maxedHp + levelHp;\n      }\n\n      pushHealth(health, source);\n    }\n\n    /**\n     * Compute and push health, tracking the remaining maximized levels.\n     *\n     * @param {ItemPF[]} sources - Health source classes\n     * @param {object} config - Configuration for this class type\n     * @param {boolean} config.auto - Automatic health enabled\n     * @param {object} state - State tracker for auto health\n     */\n    function computeHealth(sources, config, state) {\n      if (config.auto) {\n        for (const cls of sources) autoHealth(cls, config, state);\n      } else {\n        for (const cls of sources) manualHealth(cls);\n      }\n    }\n\n    // State tracking\n    const state = {\n      maximized: {\n        value: 0,\n        max: healthConfig.maximized,\n        get remaining() {\n          return this.max - this.value;\n        },\n      },\n    };\n\n    computeHealth(racialHD, actorHealthConfig.classes.racial, state);\n    computeHealth(pcClasses, actorHealthConfig.classes.base, state);\n    computeHealth(npcClasses, actorHealthConfig.classes.npc, state);\n  }\n\n  /** @inheritDoc */\n  getSourceDetails(path) {\n    const sources = super.getSourceDetails(path);\n\n    const baseLabel = game.i18n.localize(\"PF1.Base\");\n\n    // Add base values to certain bonuses\n    if (\n      [\n        \"system.attributes.ac.normal.total\",\n        \"system.attributes.ac.touch.total\",\n        \"system.attributes.ac.flatFooted.total\",\n        \"system.attributes.cmd.total\",\n        \"system.attributes.cmd.flatFootedTotal\",\n      ].includes(path)\n    ) {\n      sources.push({ name: baseLabel, value: 10, enabled: true });\n    }\n\n    const ablRE = /^system\\.abilities\\.(?<key>\\w+)\\.(?<detail>\\w+)$/.exec(path);\n    if (ablRE) {\n      const { key, detail } = ablRE.groups;\n      const abl = this.system.abilities[key];\n      switch (detail) {\n        case \"total\":\n          sources.push({ name: baseLabel, value: abl.value });\n          if (abl.drain > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityDrain\"),\n              value: -Math.abs(abl.drain),\n            });\n          }\n          break;\n        case \"mod\":\n          if (abl.damage > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityDamage\"),\n              value: -Math.floor(Math.abs(abl.damage) / 2),\n            });\n          }\n          if (abl.userPenalty > 0) {\n            sources.push({\n              name: game.i18n.localize(\"PF1.AbilityPenalty\"),\n              value: -Math.floor(Math.abs(abl.userPenalty) / 2),\n            });\n          }\n          break;\n      }\n    }\n\n    // Add wound threshold data\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHpConfig = hpConfig.getActorConfig(this);\n\n    if (actorHpConfig.rules.useWoundThresholds != 0) {\n      const wtData = this.getWoundThresholdData({ healthConfig: actorHpConfig });\n      if (wtData.valid) {\n        const penalty = -wtData.penalty;\n        for (const fk of pf1.config.woundThresholdChangeTargets) {\n          const paths = getChangeFlat(this, fk, \"untyped\", penalty);\n          if (paths.includes(path)) {\n            sources.push({\n              name: pf1.config.woundThresholdConditions[wtData.level],\n              value: penalty,\n              id: \"woundThreshold\",\n            });\n          }\n        }\n      }\n    }\n\n    return sources;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareTraits() {\n    this.system.traits ??= {};\n    const traits = this.system.traits;\n\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n    const traitsMap = {\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, labels] of Object.entries(traitsMap)) {\n      const trait = {\n        base: traits[key] ?? [],\n        custom: new Set(),\n        standard: new Set(),\n        get total() {\n          return this.standard.union(this.custom);\n        },\n        get names() {\n          return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n        },\n      };\n\n      traits[key] = trait;\n\n      Object.defineProperty(trait, \"value\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(`actor.system.traits.${key}.value is deprecated.`, {\n            since: \"PF1 v11\",\n            until: \"PF1 v12\",\n          });\n          return this.standard;\n        },\n      });\n      if (Array.isArray(trait.base)) {\n        const canon = traitsMap[key];\n        for (const c of trait.base) {\n          if (canon[c]) trait.standard.add(c);\n          else trait.custom.add(c);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finalize preparing armor, weapon, and language proficiencies and other traits.\n   *\n   * @inheritDoc\n   * @protected\n   */\n  _finalizeTraits() {\n    const traits = this.system.traits;\n\n    const traitsMap = {\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      languages: pf1.config.languages,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    const validItems = this.items.filter((i) => i.isActive);\n\n    for (const [traitKey, labels] of Object.entries(traitsMap)) {\n      const trait = traits[traitKey];\n      if (!trait) {\n        console.error(this.name, \"actor trait\", traitKey, \"is missing\");\n        continue;\n      }\n\n      // Iterate over all items to create one array of non-custom proficiencies\n      for (const item of validItems) {\n        const itemTrait = item.system[traitKey];\n        // Check only items able to grant proficiencies\n        if (!itemTrait) continue;\n        // Lack of migration or prep failure elsewhere\n        if (!itemTrait.total) continue;\n        if (itemTrait.total.size == 0) continue;\n\n        // Get existing sourceInfo for item with this name, create sourceInfo if none is found\n        // Remember whether sourceInfo can be modified or has to be pushed at the end\n        let sInfo = getSourceInfo(this.sourceInfo, `system.traits.${traitKey}`).positive.find(\n          (o) => o.name === item.name\n        );\n        const hasInfo = !!sInfo;\n        if (!sInfo) sInfo = { name: item.name, value: [] };\n        else if (typeof sInfo.value === \"string\") sInfo.value = sInfo.value.split(\", \"); // BUG: this is not i18n friendly\n\n        // Regular proficiencies\n        for (const traitId of itemTrait.standard) {\n          // Add localized source info if item's info does not have this proficiency already\n          const label = labels[traitId];\n          if (!sInfo.value.includes(label)) sInfo.value.push(label);\n          // Add raw proficiency key\n          trait.standard.add(traitId);\n        }\n\n        // Add readable custom profs to sources and overall collection\n        for (const name of itemTrait.custom) {\n          if (!sInfo.value.includes(name)) sInfo.value.push(name);\n          trait.custom.add(name);\n        }\n\n        if (sInfo.value.length > 0) {\n          // Dedupe if adding to existing sourceInfo\n          if (hasInfo) sInfo.value = [...new Set(sInfo.value)];\n          // Transform arrays into presentable strings\n          sInfo.value = pf1.utils.i18n.join(sInfo.value);\n          // If sourceInfo was not a reference to existing info, push it now\n          if (!hasInfo) getSourceInfo(this.sourceInfo, `system.traits.${traitKey}`).positive.push(sInfo);\n        }\n      }\n    }\n  }\n}\n","import { BaseCharacterPF } from \"./abstract/base-character.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class ActorCharacterPF extends BaseCharacterPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    // Link token data by default\n    if (data.prototypeToken?.actorLink === undefined) {\n      tokenUpdate.actorLink = true;\n    }\n\n    // Enable vision by default\n    if (game.settings.get(\"pf1\", \"characterVision\") && data.prototypeToken?.sight?.enabled === undefined) {\n      tokenUpdate.sight = { enabled: true };\n    }\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"pcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Update experience\n    this._updateExp(changed);\n  }\n\n  /**\n   * Handle relative XP change and constrain it to appropriate minimum value.\n   *\n   * @protected\n   * @param {object} changed - Changed data\n   */\n  _updateExp(changed) {\n    const xpData = changed.system.details?.xp;\n\n    if (xpData?.value <= 0) {\n      // Reset XP to minimum possible\n      // BUG: This will have stale value if the update changed classes, too\n      const level = this.system.details?.level?.value ?? 0;\n      xpData.value = level > 0 ? this.getLevelExp(level - 1) : 0;\n    }\n  }\n\n  /**\n   * Amount of experience required to gain next level at specific character level.\n   *\n   * @example\n   * ```js\n   * getLevelExp(1); // -> 3000, the XP needed for level 2\n   * ```\n   *\n   * @param {number} level - Desired level to level-up.\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - The XP required for next level.\n   * @throws {Error} - If invalid level is provided.\n   */\n  getLevelExp(level, { rollData = null } = {}) {\n    if (!Number.isInteger(level) || !(level >= 0)) throw new Error(`Level \"${level}\" must be zero or greater integer.`);\n    if (level === 0) return 0; // Explicit case for absolute minimum.\n\n    const config = game.settings.get(\"pf1\", \"experienceConfig\");\n    const track = config.track;\n\n    // Preset experience tracks\n    if ([\"fast\", \"medium\", \"slow\"].includes(track)) {\n      const levels = pf1.config.CHARACTER_EXP_LEVELS[track];\n      // Normal levels\n      if (level < levels.length) return levels[level];\n      // Otherwise return last possible\n      else return levels.at(-1);\n    }\n\n    // Custom formula experience track\n    let totalXP = 0;\n    if (config.custom.formula.length > 0) {\n      rollData ??= this.getRollData();\n      for (let a = 0; a < level; a++) {\n        rollData.level = a + 1;\n        const roll = RollPF.safeRollSync(config.custom.formula, rollData);\n        totalXP += roll.total;\n      }\n      delete rollData.level; // Cleanup\n    }\n\n    return totalXP;\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const actorData = this.system;\n\n    actorData.details ??= {};\n\n    // Prepare experience data\n    const level = actorData.details.level?.value || 1;\n\n    actorData.details.xp ??= {};\n\n    const maxExp = this.getLevelExp(level);\n    actorData.details.xp.max = maxExp;\n\n    // Experience bar\n    const curXp = actorData.details.xp.value;\n    // Maxed out XP needs no math\n    if (curXp >= maxExp) {\n      actorData.details.xp.pct = 100;\n    } else {\n      const prior = this.getLevelExp(level - 1 || 0);\n      actorData.details.xp.pct = ((Math.clamp(curXp, prior, maxExp) - prior) / (maxExp - prior)) * 100;\n    }\n  }\n\n  /** @inheritDoc */\n  getMovement(type) {\n    // Map certain conditions to movements\n    const typeMap = { prone: \"crawl\", land: \"walk\" };\n    type = typeMap[type] ?? type;\n\n    const moveInfo = {\n      ...pf1.config.tokenRuler.movement.default,\n      ...pf1.config.tokenRuler.movement[type],\n    };\n\n    let speed = 0;\n    switch (type) {\n      case \"walk\":\n        speed = this.system.attributes?.speed?.land?.total ?? 0;\n        break;\n      case \"fly\":\n        speed = this.system.attributes?.speed?.fly?.total ?? 0;\n        break;\n      case \"jump\":\n        // Jump speed takes the better of land or fly speed\n        speed = Math.max(\n          this.system.attributes?.speed?.land?.total ?? 0,\n          this.system.attributes?.speed?.fly?.total ?? 0\n        );\n        break;\n      case \"burrow\":\n        speed = this.system.attributes?.speed?.burrow?.total ?? 0;\n        break;\n      case \"swim\": {\n        speed = this.system.attributes?.speed?.swim?.total ?? 0;\n        if (speed <= 0) {\n          // Special handling for swimming with skill instead of natural speed\n          const base = this.system.attributes?.speed?.land?.total ?? 30;\n          Object.assign(moveInfo, pf1.config.tokenRuler.movement.swimSkill);\n          speed = Math.floor(base / 5 / 4) * 5;\n        }\n        break;\n      }\n      case \"climb\": {\n        speed = this.system.attributes?.speed?.climb?.total ?? 0;\n        if (speed <= 0) {\n          // Special handling for climbing with skill instead of natural speed\n          const base = this.system.attributes?.speed?.land?.total ?? 30;\n          Object.assign(moveInfo, pf1.config.tokenRuler.movement.climbSkill);\n          speed = Math.floor(base / 5 / 4) * 5;\n        }\n        break;\n      }\n      case \"crawl\":\n        speed = 5;\n        break;\n    }\n\n    moveInfo.speed ??= speed;\n\n    return moveInfo;\n  }\n}\n","import { BaseCharacterPF } from \"./abstract/base-character.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nexport class ActorNPCPF extends BaseCharacterPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"npcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const cr = changed.system?.details?.cr?.base;\n    if (typeof cr === \"string\") changed.system.details.cr.base = pf1.utils.CR.fromString(cr);\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    this.system.details.cr.total = this.getCR();\n  }\n\n  prepareSpecificDerivedData() {\n    super.prepareSpecificDerivedData();\n\n    this._prepareCR();\n  }\n\n  _prepareCR() {\n    // Reset CR\n    foundry.utils.setProperty(this.system, \"details.cr.total\", this.getCR());\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = pf1.utils.CR.getXP(crTotal);\n    } catch {\n      newXP = pf1.utils.CR.getXP(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasArmorProficiency(item) {\n    // Assume NPCs to be proficient with their armor\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasArmorProficiency(item) : true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasWeaponProficiency(item, options = {}) {\n    // Assume NPCs to be proficient with their weapon\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasWeaponProficiency(item, options) : true;\n  }\n\n  /**\n   * Get challenge rating.\n   * Applies CR offset modifications from templates.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    const base = this.system.details?.cr?.base ?? 0;\n\n    // Gather CR from templates\n    const templates = this.itemTypes.feat.filter((item) => item.subType === \"template\" && item.isActive);\n\n    return templates.reduce((cur, item) => {\n      const crOffset = item.system.crOffset;\n      if (crOffset) {\n        cur += RollPF.safeRollSync(crOffset, item.getRollData()).total;\n      }\n      return cur;\n    }, base);\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @deprecated\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  getCRExp(cr) {\n    foundry.utils.logCompatibilityWarning(\"ActorPF.getCRExp() is deprecated in favor of pf1.utils.CR.getXP()\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return pf1.utils.CR.getXP(cr);\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorHauntPF extends ActorPF {\n  prepareBaseData() {\n    this._resetInherentTotals();\n\n    this.changeFlags = {};\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n\n    // Needed for getRollData and ActorPF, but useless for the actor\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n\n    this.system.skills ??= {};\n\n    // Init resources structure\n    this.system.resources ??= {};\n\n    // Handle Health\n    this.system.attributes.hp.max = this.system.attributes.hp.base;\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this._prepareTemplates();\n    this._prepareCR();\n    this.prepareHealth();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  _prepareTypeChanges(changes) {\n    // BAB\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n  }\n\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : pf1.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Caster Level\n    result.cl = result.details.cl;\n\n    // Aura strength\n    result.auraStrength = this.auraStrength;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Spoof size as Medium instead of letting it fail to Fine\n    result.size = 4;\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Haunts don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    this._rollData = result;\n    return result;\n  }\n\n  _prepareCR() {\n    // Gather CR Offset\n    let crOffset = 0;\n    for (const key of this.system.templates.base) {\n      const crDetail = pf1.config.hauntTemplates[key];\n      if (!crDetail) continue;\n      crOffset += crDetail.cr;\n\n      // Check for bonus CR - this is a special case for when a template's\n      // CR bonus is increased by the existence of a template with a specific tag.\n      // In 1PP, this is only used for the \"Elusive\" template when \"Persistent\" is also applied.\n      const crBonusTag = crDetail.crBonusTag;\n      if (crBonusTag && this.system.templates.base.includes(crBonusTag)) {\n        crOffset += crDetail.crBonus;\n      }\n    }\n\n    // Reset CR\n    this.system.details.cr.total = this.system.details.cr.base + crOffset;\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = pf1.utils.CR.getXP(crTotal);\n    } catch {\n      newXP = pf1.utils.CR.getXP(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * Aura strength as number from 0 to 4.\n   *\n   * @see {@link pf1.config.auraStrengths}\n   *\n   * @type {number}\n   */\n  get auraStrength() {\n    const cl = this.system.details.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  /** @inheritDoc */\n  getInitiativeOptions() {\n    return {\n      check: false,\n    };\n  }\n\n  _prepareTemplates() {\n    const templates = this.system.templates ?? {};\n    const key = \"templates\";\n    const labels = pf1.config.hauntTemplateLabels;\n    const template = {\n      base: templates,\n      custom: new Set(),\n      standard: new Set(),\n      get total() {\n        return this.standard.union(this.custom);\n      },\n      get names() {\n        return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n      },\n    };\n\n    this.system[key] = template;\n\n    if (Array.isArray(template.base)) {\n      for (const c of template.base) {\n        if (labels[c]) template.standard.add(c);\n        else template.custom.add(c);\n      }\n    }\n  }\n\n  /**\n   * Get challenge rating.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    return this.system.details?.cr?.total ?? 0;\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorTrapPF extends ActorPF {\n  prepareBaseData() {\n    this.changeFlags = {};\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n    this.system.resources ??= {};\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    // Necessary shim for action data prep.\n    this.system.abilities = {};\n\n    this.system.attributes = {\n      attack: { general: 0, shared: 0 },\n      bab: { total: 0 },\n      woundThresholds: {},\n    };\n\n    this.system.skills ??= {};\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this._prepareCR();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  _prepareCR() {\n    // Reset CR\n    this.system.cr.total = this.system.cr.base;\n\n    // Reset experience value\n    const newXP = pf1.utils.CR.getXP(this.system.cr.total);\n    foundry.utils.setProperty(this.system, \"xp.value\", newXP);\n  }\n\n  /** @inheritDoc */\n  _prepareTypeChanges(changes) {\n    // BAB\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n  }\n\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Spoof size as Medium instead of letting it fail to Fine\n    result.size = 4;\n\n    // Spoof range as medium tall creature\n    result.range = pf1.documents.actor.ActorPF.getReach();\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the perception modifier for the trap to detect triggers\n   *\n   * @returns {number} The perception modifier for the trap\n   */\n  getPerceptionModifier() {\n    const triggerType = this.system.trigger.type;\n    const visionType = this.system.trigger.vision;\n\n    if (triggerType !== \"visual\") return pf1.config.trapPerceptionModifiers[triggerType] ?? 0;\n    else return pf1.config.trapPerceptionModifiers.vision[visionType] ?? 0;\n  }\n\n  /**\n   * Roll a perception check for the trap\n   *\n   * @param {object} options Options for the roll\n   * @returns {Promise<void>}\n   */\n  async rollPerception(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const rollData = this.getRollData();\n    const token = options.token ?? this.token;\n\n    // Add metadata about the skill\n    const metadata = { rank: 0 };\n\n    const rollOptions = {\n      ...options,\n      parts: [`(${this.getPerceptionModifier()})[${game.i18n.localize(\"PF1.SkillPer\")}]`],\n      rollData,\n      flavor: game.i18n.format(\"PF1.Check\", { type: pf1.config.skills.per }),\n      // chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[\"per\"], type: \"JournalEntry\" },\n      subject: { skill: \"per\" },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token }),\n      messageData: {\n        system: {\n          subject: { skill: \"per\" },\n          config: metadata,\n        },\n      },\n    };\n\n    await pf1.dice.d20Roll(rollOptions);\n  }\n\n  /**\n   * Get challenge rating.\n   *\n   * @returns {number} - CR\n   */\n  getCR() {\n    return this.system.cr?.total ?? 0;\n  }\n\n  /** @inheritDoc */\n  // eslint-disable-next-line no-unused-vars\n  getMovement(type) {\n    return { speed: 0, run: false, step: false };\n  }\n\n  /**\n   * Traps don't heal by resting.\n   *\n   * @override\n   */\n  _restingHeal() {\n    return {};\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { getSourceInfo, getHighestChanges, applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorVehiclePF extends ActorPF {\n  prepareBaseData() {\n    this._resetInherentTotals();\n\n    // Prepare size data\n    this.system.traits ??= {};\n    const baseSize = this.system.traits.size || \"med\";\n    const sizeValue = Object.keys(pf1.config.sizeChart).indexOf(baseSize);\n    this.system.traits.size = {\n      base: baseSize,\n      value: sizeValue,\n    };\n\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n    this.changeFlags = {};\n    this.system.resources ??= {};\n    const sizeMod = pf1.config.sizeMods[this.system.traits.size.base];\n    const sizeModSpecial = Object.values(pf1.config.sizeSpecialMods)[this.system.traits.size.value] ?? 0;\n\n    // Add base initiative\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    // Handle AC\n    for (const [key, value] of Object.entries(this.system.attributes.ac)) {\n      value.base = 10;\n      this.system.attributes.ac[key].total = value.bonus + value.base + sizeMod;\n      getSourceInfo(this.sourceInfo, `system.attributes.ac.${key}.total`).positive.push(\n        {\n          name: game.i18n.localize(\"PF1.Size\"),\n          value: sizeMod,\n          modifier: \"size\",\n        },\n        {\n          name: game.i18n.localize(\"PF1.Modifications\"),\n          value: value.bonus,\n        }\n      );\n\n      if (key === \"stopped\") {\n        this.system.attributes.ac[key].total -= 7;\n        getSourceInfo(this.sourceInfo, \"system.attributes.ac.stopped.total\").positive.push(\n          {\n            name: game.i18n.localize(\"PF1.AbilityDex\"),\n            value: -5,\n          },\n          {\n            name: game.i18n.localize(\"PF1.Vehicles.ACStoppedMotion\"),\n            value: -2,\n          }\n        );\n      }\n    }\n\n    // Handle CMD\n    this.system.attributes.cmd = { base: 10 };\n    this.system.attributes.cmd.total = this.system.attributes.cmd.base + sizeModSpecial;\n    getSourceInfo(this.sourceInfo, \"system.attributes.cmd.total\").positive.push({\n      name: game.i18n.localize(\"PF1.Size\"),\n      value: sizeModSpecial,\n      modifier: \"size\",\n    });\n    this.system.attributes.cmd.stoppedTotal = this.system.attributes.cmd.total - 7;\n    getSourceInfo(this.sourceInfo, \"system.attributes.cmd.stoppedTotal\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Size\"),\n        value: sizeModSpecial,\n        modifier: \"size\",\n      },\n      {\n        name: game.i18n.localize(\"PF1.AbilityDex\"),\n        value: -5,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Vehicles.ACStoppedMotion\"),\n        value: -2,\n      }\n    );\n\n    this.system.attributes.savingThrows.save.total = this.system.attributes.savingThrows.save.base;\n    getSourceInfo(this.sourceInfo, `system.attributes.savingThrows.save.total`).positive.push({\n      name: game.i18n.localize(\"PF1.Base\"),\n      value: this.system.attributes.savingThrows.save.base,\n    });\n\n    // Handle hardness\n    this.system.attributes.hardness.base = pf1.config.vehicleMaterials[this.system.material.base]?.hardness ?? 0;\n    this.system.attributes.hardness.total =\n      (this.system.attributes.hardness.base + this.system.attributes.hardness.bonus) *\n      (this.system.material.magicallyHardened ? 2 : 1);\n    getSourceInfo(this.sourceInfo, \"system.attributes.hardness.total\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Materials.Normal\"),\n        value: this.system.attributes.hardness.base,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Modifications\"),\n        value: this.system.attributes.hardness.bonus,\n      }\n    );\n    if (this.system.material.magicallyHardened) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.hardness.total\").positive.push({\n        name: game.i18n.localize(\"PF1.Vehicles.MagicallyHardened\"),\n        value: \"x2\",\n      });\n    }\n\n    // Handle HP\n    this.system.attributes.hp.base =\n      (pf1.config.vehicleMaterials[this.system.material.base]?.hp ?? 0) * this.system.squares;\n    this.system.attributes.hp.max =\n      (this.system.attributes.hp.base + this.system.attributes.hp.bonus) *\n      (this.system.material.magicallyHardened ? 2 : 1);\n    getSourceInfo(this.sourceInfo, \"system.attributes.hp.max\").positive.push(\n      {\n        name: game.i18n.localize(\"PF1.Materials.Normal\"),\n        value: this.system.attributes.hp.base,\n      },\n      {\n        name: game.i18n.localize(\"PF1.Modifications\"),\n        value: this.system.attributes.hp.bonus,\n      }\n    );\n    if (this.system.squares > 0 && this.system.material.magicallyHardened) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.hp.max\").positive.push({\n        name: game.i18n.localize(\"PF1.Vehicles.MagicallyHardened\"),\n        value: \"x2\",\n      });\n    }\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n    this.system.attributes.woundThresholds ??= {};\n    this.system.skills ??= {};\n    this.system.attributes.speed ??= {};\n    this.system.attributes.cmb ??= {};\n\n    this._prepareDriverData();\n  }\n\n  /** @inheritDoc */\n  getSourceDetails(path) {\n    const sources = super.getSourceDetails(path);\n\n    const baseLabel = game.i18n.localize(\"PF1.Base\");\n\n    // Add base values to certain bonuses\n    if (\n      [\n        \"system.attributes.ac.normal.total\",\n        \"system.attributes.ac.touch.total\",\n        \"system.attributes.ac.stopped.total\",\n        \"system.attributes.cmd.total\",\n        \"system.attributes.cmd.stoppedTotal\",\n      ].includes(path)\n    ) {\n      sources.push({ name: baseLabel, value: 10 });\n    }\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * Overridden to prevent unnecessary behavior in ActorPF, as vehicles don't have carry capacity.\n   *\n   * @override\n   * @returns {{light:number,medium:number,heavy:number}} - Capacity info\n   */\n  getCarryCapacity() {\n    return {\n      light: 0,\n      medium: 0,\n      heavy: 0,\n    };\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  _getBaseValueFillKeys() {\n    return [];\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    for (const item of this.items) {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    }\n\n    applyChanges(this);\n\n    this.prepareHealth();\n    this._computeEncumbrance();\n\n    this.prepareCMB();\n\n    this._prepareOverlandSpeeds();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    this._rollData = null;\n\n    // Update item resources\n    for (const item of this.items) {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    }\n  }\n\n  _prepareDriverData() {\n    const driver = this.system.driver.uuid ? fromUuidSync(this.system.driver.uuid) : null;\n    if (!driver) return;\n\n    // Default to WIS mod\n    let driverBase = driver.system.abilities.wis.mod;\n\n    try {\n      const skill = driver.getSkillInfo(this.system.driver.skill);\n      driverBase = skill.mod;\n    } catch {\n      // error silently, as we default to Wisdom Modifier\n    }\n\n    this.system.driver.bonus = driverBase;\n  }\n\n  /**\n   * @override\n   */\n  prepareCMB() {\n    const size = this.system.traits.size.value,\n      szCMBMod = Object.values(pf1.config.sizeSpecialMods)[size] ?? 0,\n      driver = this.system.driver.bonus ?? 0;\n\n    this.system.attributes.cmb.total = szCMBMod + driver;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /** @inheritDoc */\n  _prepareTypeChanges(changes) {\n    changes.push(\n      // BAB\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n\n    if (this.system.driver.uuid) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"cmb\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"ac\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"@driver.bonus\",\n          operator: \"add\",\n          target: \"cmd\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        }),\n        new pf1.components.ItemChange({\n          formula: \"floor(@driver.bonus / 2)\",\n          operator: \"add\",\n          target: \"vehicleSave\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.Vehicles.DriverSkill\"),\n        })\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  getRollData(options = { refresh: false, cache: true }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData && options.cache;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const key of pf1.config.temporaryRollDataFields.actor) {\n        delete result[key];\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n      /* ----------------------------- */\n\n    // Set size index\n    const sizes = Object.values(pf1.config.sizeChart);\n    result.size = Math.clamp(result.traits.size.value, 0, sizes.length - 1);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = { melee: 5, reach: 5 };\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Traps don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    if (options.cache) {\n      this._rollData = result;\n    }\n\n    return result;\n  }\n\n  /**\n   * @remarks - Vehicles don't have weightless currency\n   * @override\n   * @inheritDoc\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total = this.getCurrency(\"currency\", { inLowestDenomination: true });\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Calculate overland speeds.\n   * Overridden to use different data in Vehicles.\n   *\n   * @protected\n   * @override\n   */\n  _prepareOverlandSpeeds() {\n    this.system.details.currentSpeedOverland = pf1.utils.overlandSpeed(this.system.details.currentSpeed);\n    this.system.details.maxSpeedOverland = pf1.utils.overlandSpeed(this.system.details.maxSpeed);\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   *\n   * @param {SaveId} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const notes = await this.getContextNotesParsed(`savingThrow.${savingThrowId}`, { rollData });\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows.save.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"vehicle\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => c.operator !== \"set\"),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Roll saving throw\n    const props = [\n      {\n        header: game.i18n.localize(\"PF1.ConRes\"),\n        value: [\n          { text: pf1.registry.conditions.get(\"bleed\").name.toLowerCase() },\n          { text: game.i18n.localize(\"PF1.AbilityDamage\").toLowerCase() },\n          { text: game.i18n.localize(\"PF1.AbilityDrain\").toLowerCase() },\n        ],\n      },\n    ];\n\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage|undefined>} - Created message\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n\n    // Add contextual AC notes\n    const acNotes = await this.getContextNotesParsed(\"ac\", { rollData });\n\n    // Add contextual CMD notes\n    const cmdNotes = await this.getContextNotesParsed(\"cmd\", { rollData });\n\n    // BUG: No specific saving throw notes are included\n    const saveNotes = await this.getContextNotesParsed(\"allSavingThrows\", { rollData });\n\n    // Conditions\n    const conditions = {\n      bleed: pf1.registry.conditions.get(\"bleed\").name,\n      abilityDamage: game.i18n.localize(\"PF1.AbilityDamage\"),\n      abilityDrain: game.i18n.localize(\"PF1.AbilityDrain\"),\n    };\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      type: this.system.traits.type,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        stopped: actorData.attributes.ac.stopped.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        stopped: actorData.attributes.cmd.stoppedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        hardness: actorData.traits.hardness,\n        conditions,\n      },\n      saves: {\n        save: rollData.attributes?.savingThrows?.save?.total,\n        notes: saveNotes,\n      },\n    };\n\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses-vehicle.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n      rollMode,\n      system: {\n        subject: { info: \"defenses\" },\n      },\n      flags: {\n        core: {\n          canPopout: true,\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /** @inheritDoc */\n  // eslint-disable-next-line no-unused-vars\n  getMovement(type) {\n    // TODO: Adhere to type\n\n    return {\n      speed: this.system.details?.currentSpeed ?? 0,\n      run: false,\n      step: false,\n    };\n  }\n\n  /**\n   * Vehicles don't heal by resting.\n   *\n   * @override\n   */\n  _restingHeal() {\n    return {};\n  }\n}\n","import { ItemBasePF } from \"@item/item-base.mjs\";\nimport { getHighestChanges } from \"@documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { ActionUse } from \"@actionUse/action-use.mjs\";\nimport { getSkipActionPrompt } from \"@documents/settings.mjs\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport class ItemPF extends ItemBasePF {\n  /**\n   * Configure item before data preparation.\n   *\n   * @override\n   * @param {object} options - Data model options\n   */\n  _configure(options = {}) {\n    super._configure(options);\n\n    /**\n     * An object containing links to other items.\n     *\n     * @type {Record<string, ItemPF>}\n     */\n    this.links = {};\n\n    if (this.hasActions) {\n      /**\n       * A {@link Collection} of {@link ItemAction}s.\n       *\n       * @type {Collection<pf1.components.ItemAction>}\n       */\n      this.actions = new Collection();\n    }\n\n    /** @type {Collection<string, pf1.components.ItemScriptCall>} */\n    this.scriptCalls = new Collection();\n  }\n\n  /**\n   * A static object holding system-specific metadata applicable to all instances of this Document class.\n   *\n   * @internal\n   */\n  static system = Object.freeze({\n    /**\n     * Whether this item is a physical one, possessing properties like quantity or weight.\n     *\n     * @type {boolean}\n     */\n    isPhysical: false,\n    /**\n     * Whether this item receives an identifier.\n     */\n    hasIdentifier: true,\n    /**\n     * Whether this item has changes and change flags.\n     */\n    hasChanges: true,\n    /**\n     * Whether this item has actions.\n     */\n    hasActions: true,\n    /**\n     * Subtype name should be used as default name.\n     */\n    subtypeName: false,\n  });\n\n  /** @inheritDoc */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Ensure unique Change IDs\n    const actor = this.actor;\n    if (actor && data?.system?.changes?.length > 0) {\n      /** @type {Array<ItemChange>} */\n      const changes = data.system.changes;\n\n      /** @type {Set<string>} */\n      let ids = new Set();\n      while (ids.size < changes.length) ids.add(foundry.utils.randomID(8));\n      ids = Array.from(ids);\n      for (const c of changes) c._id = ids.pop();\n      this.updateSource({ \"system.changes\": changes });\n    }\n  }\n\n  /**\n   * Adjust temporary item before creation\n   *\n   * @abstract\n   * @protected\n   * @param {ItemPF} [item] - Temporary document\n   * @param {object} [data] - Creation data\n   * @param {boolean} [override=false] - Override values even if defined\n   */\n  // eslint-disable-next-line no-unused-vars\n  static _adjustNewItem(item, data, override = false) {}\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.isActive) {\n      // Simulate toggling a feature or buff on\n      if ([\"buff\", \"feat\"].includes(this.type)) {\n        this.executeScriptCalls(\"toggle\", { state: true });\n      }\n    }\n\n    // Handle Size Change no longer affecting actor\n    // TODO: Move this to actor so it's done only once\n    if (this.actor && this.adjustsSize) {\n      this.actor._updateTokenSize();\n    }\n  }\n\n  /** @override */\n  getFlag(scope, key) {\n    if (scope === \"pf1\" && key === \"defaultAmmo\") {\n      foundry.utils.logCompatibilityWarning(\n        \"item.getFlag('pf1', 'defaultAmmo') is deprecated, please use item.system.ammo?.default instead\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      return this.system.ammo?.default || this.flags?.pf1?.defaultAmmo;\n    }\n    return super.getFlag(scope, key);\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    context.adjustedSize = this.adjustsSize;\n    context.adjustedVision = this.adjustsVision;\n\n    await super._preUpdate(changed, context, user);\n\n    // Obsolete ammo location\n    if (changed.flags?.pf1?.defaultAmmo) {\n      foundry.utils.logCompatibilityWarning(\n        \"item.flags.pf1.defaultAmmo is no longer used, please use item.system.ammo.default instead\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      foundry.utils.setProperty(changed.system, \"ammo.default\", changed.flags?.pf1?.defaultAmmo);\n      delete changed.flags.pf1.defaultAmmo;\n    }\n\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    this._preUpdateNumericValueGuard(changed.system);\n\n    // Ensure tag is not invalid\n    if (changed.system.tag) {\n      changed.system.tag = pf1.utils.createTag(changed.system.tag, { allowUpperCase: true, camelCase: false });\n    }\n\n    // Make sure stuff remains an array\n    const keepPaths = [\n      \"system.attackNotes\",\n      \"system.effectNotes\",\n      \"system.contextNotes\",\n      \"system.scriptCalls\",\n      \"system.actions\",\n      \"system.changes\",\n    ];\n\n    const itemData = this.toObject();\n    for (const path of keepPaths) {\n      pf1.utils.internal.keepUpdateArray(itemData, changed, path);\n    }\n\n    await this._chargePreUpdate(changed, context);\n  }\n\n  /**\n   * Fake DataModel-like behaviour\n   *\n   * Ensure numeric bits remain numbers\n   *\n   * @internal\n   * @abstract\n   * @param {object} system - System data\n   */\n  // eslint-disable-next-line no-unused-vars\n  _preUpdateNumericValueGuard(system) {}\n\n  /**\n   * Handle charge update sanity checking, constraining them to reasonable values,\n   *   and propagating to parent items if charges are shared.\n   *\n   * @private\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   */\n  async _chargePreUpdate(changed, context) {\n    // Make sure charges doesn't exceed max charges\n    const uses = changed.system.uses;\n    if (uses?.value && this.isCharged) {\n      const maxCharges = this.maxCharges;\n      if (uses.value > maxCharges) uses.value = maxCharges;\n\n      const link = this.links.charges;\n      if (link) {\n        // Update charges for linked item. This will cascade if items are linked more.\n        await link.update({ \"system.uses.value\": uses.value }, context);\n        // Remove updating current item's inherited value\n        delete changed.system.uses.value;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Remove special charge sharing links that don't clear on their own\n    const links = this.getLinkedItemsSync(\"charges\");\n    if (links.length) {\n      for (const link of links) {\n        if (link.links?.charges) {\n          delete link.links.charges;\n          link.reset();\n        }\n      }\n    }\n\n    // Handle Size Change no longer affecting actor\n    // TODO: Move this to actor so it's done only once\n    if (this.adjustsSize) {\n      this.actor?._updateTokenSize();\n    }\n  }\n\n  /**\n   * @returns {string[]} The keys of data variables to memorize between updates, for e.g. determining the difference in update.\n   */\n  get memoryVariables() {\n    return [\"quantity\", \"level\"];\n  }\n\n  /**\n   * Whether the item is tangible physical object in reality.\n   *\n   * @remarks\n   * - You can utilize this with raw data via `CONFIG.Item.documentClasses[type]?.isPhysical`\n   *\n   * @type {boolean}\n   */\n  static get isPhysical() {\n    return this.system.isPhysical;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get isPhysical() {\n    return this.constructor.isPhysical;\n  }\n\n  /** @type {boolean} */\n  static get hasChanges() {\n    return this.system.hasChanges;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get hasChanges() {\n    return this.constructor.hasChanges;\n  }\n\n  static get hasActions() {\n    return this.system.hasChanges;\n  }\n\n  /** {@inheritDoc ItemPF.hasActions:getter} */\n  get hasActions() {\n    return this.constructor.hasActions;\n  }\n\n  /**\n   * The item's subtype, or `null` if the item has no subtype\n   *\n   * @type {string|null}\n   */\n  get subType() {\n    return this.system.subType ?? null;\n  }\n\n  /**\n   * Base material\n   *\n   * @type {string|null}\n   */\n  get baseMaterial() {\n    return this.system.armor?.material?.base?.value || this.system.material?.base?.value || null;\n  }\n\n  /**\n   * The item's actual material.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    return (\n      this.system.armor?.material?.normal?.value || this.system.material?.normal?.value || this.baseMaterial || null\n    );\n  }\n\n  /**\n   * The item's material addons.\n   *\n   * @type {string[]}\n   */\n  get addonMaterial() {\n    const addons = this.system.armor?.material?.addon || this.system.material?.addon || [];\n    return addons.filter((o) => !!o);\n  }\n\n  /**\n   * The item's alignment attributes, or `null` if the item has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.system.alignments ?? null;\n  }\n\n  /**\n   * @deprecated\n   * @type {pf1.components.ItemAction|undefined}\n   */\n  get firstAction() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.firstAction is deprecated in favor of ItemPF.defaultAction\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.defaultAction;\n  }\n\n  /** @type {pf1.components.ItemAction|undefined} */\n  get defaultAction() {\n    return this.actions?.get(this.system.actions?.[0]?._id);\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have an attack, see {@link ItemAction#hasAttack}.\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return this.actions?.some((o) => o.hasAttack) ?? false;\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have a damage roll, see {@link ItemAction#hasDamage}.\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return this.actions?.some((o) => o.hasDamage) ?? false;\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Properties                             */\n  /* -------------------------------------------- */\n\n  /**\n   * @abstract\n   * @param {boolean} [weapon=true] - Get proficiency as a weapon. Armor otherwise.\n   * @returns {boolean} - Whether or not the owner of the item is proficient.\n   * @throws {Error} - If item type does not support proficiency.\n   * @since PF1 v10\n   */\n  // eslint-disable-next-line no-unused-vars\n  getProficiency(weapon = true) {\n    throw new Error(`Item type ${this.type} has no concept of proficiency`);\n  }\n\n  /**\n   * Is the owning actor proficiency at using this as weapon.\n   *\n   * @abstract\n   * @type {boolean}\n   * @since PF1 v10\n   */\n  get isProficient() {\n    return true;\n  }\n\n  /** @type {boolean} */\n  get hasAction() {\n    return this.system.actions?.length > 0;\n  }\n\n  /** @type {boolean} */\n  get isSingleUse() {\n    return this.system.uses?.per === \"single\";\n  }\n\n  /** @type {boolean} */\n  get isCharged() {\n    return this.isSingleUse || !!this.system.uses?.per;\n  }\n\n  /**\n   * Finite charges\n   *\n   * @type {boolean}\n   */\n  get hasFiniteCharges() {\n    return this.isSingleUse || [\"charges\"].includes(this.system.uses?.per);\n  }\n\n  /**\n   * Remaining charges\n   *\n   * @type {number}\n   */\n  get charges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.charges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n    return this.system.uses?.value ?? 0;\n  }\n\n  /**\n   * Consumes are adds charges by default.\n   *\n   * @type {boolean}\n   */\n  get autoDeductCharges() {\n    return this.getDefaultChargeCost() != 0;\n  }\n\n  /**\n   * Get default charge cost for all actions.\n   *\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    rollData ??= this.getRollData();\n    const formula = this.getDefaultChargeFormula();\n    // TODO: Support default cost being variable\n    return RollPF.safeRollSync(formula, rollData, undefined, undefined, { maximize: true }).total;\n  }\n\n  /**\n   * Default charge formula.\n   *\n   * @returns {string} Charge formula\n   */\n  getDefaultChargeFormula() {\n    return this.system.uses?.autoDeductChargesCost || \"1\";\n  }\n\n  /**\n   * Maximum possible charges this item can have.\n   *\n   * @remarks\n   * - Can return zero. Usually signifying something has reduced the potential uses below usability.\n   * - Can return infinity, signifying lack of limits.\n   *\n   * @type {number}\n   */\n  get maxCharges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.maxCharges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n\n    return this.system.uses?.max ?? Infinity;\n  }\n\n  /**\n   * Recharges item's uses, if any.\n   *\n   * @param {object} options - Options\n   * @param {\"round\"|\"minute\"|\"hour\"|\"day\"|\"week\"|\"any\"} [options.period=\"day\"] Recharge period. Use \"any\" to ignore item's configuration.\n   * @param {boolean} [options.exact=false] - Use exact time period. Otherwise \"week\" for example will also recharge items with \"day\" period.\n   * @param {number} [options.value] - Recharge to specific value, respecting maximum and minimum bounds.\n   * @param {boolean} [options.maximize=false] - Recharge to full regardless of recharge formula.\n   * @param {boolean} [options.commit=true] - Commit update directly. If false, returns the update data instead.\n   * @param {object} [options.rollData] - Roll data instance to use for formulas.\n   * @param {object} [options.context] - Update context\n   * @returns {Promise<this|object|undefined>} - Promise for the update, update data object, or undefined (no update needed).\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = false, commit = true, rollData, context } = {}) {\n    const updateData = (await this._rechargeUses({ value, period, exact, maximize, rollData })) ?? { system: {} };\n    const actionUpdate = this._rechargeActions({ period, exact, rollData });\n    if (actionUpdate) updateData.system.actions = actionUpdate.system.actions;\n\n    // Cancel empty update\n    if (foundry.utils.isEmpty(updateData.system)) return;\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * Recharge item uses\n   *\n   * {@inheritDoc recharge}\n   *\n   * @internal\n   * @param {object} options - Options\n   * @param {number} [options.value] - Set charges to specific value\n   * @param {string} [options.period] - Recharge only if it matches this time period\n   * @param {boolean} [options.exact] - Match only exact time period\n   * @param {boolean} [options.maximize] - Maximize instead of using recharge formula\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {Promise<object | undefined>} - Update data or undefined if no update is necessary.\n   */\n  async _rechargeUses({ value, period, exact, maximize, rollData } = {}) {\n    const uses = this.system.uses ?? {};\n    if (!uses.per) return; // Unlimited uses, recharging meaningless\n\n    // Cancel if charges are managed by different item.\n    if (this.links.charges) return;\n\n    // No update when period does not match usage\n    if ([\"charges\", \"single\"].includes(uses.per)) {\n      // Only charge if time period is any\n      if (period !== \"any\") return;\n    } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n      // Recharge lesser time periods when using inexact matching\n      const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n      const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n      if (!validPeriods.includes(uses.per)) return;\n    }\n    // Otherwise test if \"any\" period is used\n    else if (uses.per !== period && period !== \"any\") return;\n\n    const staticValue = value !== undefined;\n\n    // No specific value given\n    if (!staticValue) {\n      const formula = uses.rechargeFormula || \"\";\n      // Default to maximizing value\n      if (!formula) {\n        if (uses.max > 0) maximize = true;\n      } else {\n        rollData ??= this.getRollData();\n        const roll = await RollPF.safeRoll(formula, rollData, \"recharge\", undefined, { allowInteractive: false });\n        value = roll.total;\n\n        // Cancel if formula produced invalid value\n        if (!Number.isFinite(value))\n          return void console.warn(`Formula \"${formula}\" produced non-numeric value \"${value}\"`);\n      }\n    }\n\n    // Maximize value regardless what value is\n    if (maximize) value = uses.max;\n\n    // No recharge value established\n    if (!Number.isFinite(value)) return;\n\n    // Clamp charge value to\n    value = Math.clamp(value, 0, uses.max);\n\n    if (value !== uses.value) {\n      return { system: { uses: { value } } };\n    }\n  }\n\n  /**\n   * Update action limited uses\n   *\n   * {@inheritDoc ItemPF.recharge}\n   *\n   * @internal\n   * @param {object} options - Options\n   * @param {string} [options.period] - Recharge only if matching this time period\n   * @param {boolean} options.exact - Exact time period only\n   * @param {object} [options.rollData] - Roll data\n   * @returns {object|undefined} - Update data or undefined if no update is needed.\n   */\n  // eslint-disable-next-line no-unused-vars\n  _rechargeActions({ period, exact, rollData } = {}) {\n    if (!(this.system.actions?.length > 0)) return;\n\n    const actions = this.toObject().system.actions;\n    let changedActions = false;\n    for (const actionData of actions) {\n      const action = this.actions.get(actionData._id);\n      const max = action.uses?.self?.max ?? 0;\n      if (!(max > 0)) continue;\n\n      const uses = actionData.uses?.self;\n      const per = uses?.per;\n      if (!per) continue;\n\n      if ([\"charges\"].includes(uses.per)) {\n        continue;\n      } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n        // Recharge lesser time periods when using inexact matching\n        const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n        const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n        if (!validPeriods.includes(per)) continue;\n      }\n\n      if (uses.value < max) {\n        uses.value = max;\n        changedActions = true;\n      }\n    }\n\n    if (!changedActions) return;\n\n    return { system: { actions } };\n  }\n\n  /**\n   * Aura strength as number from 0 to 4.\n   *\n   * @see {@link pf1.config.auraStrengths}\n   *\n   * @type {number}\n   */\n  get auraStrength() {\n    const cl = this.system.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  get uuid() {\n    if (this.parentItem) return this.parentItem.uuid + `.Item.${this.id}`;\n    return super.uuid;\n  }\n\n  get fullDescription() {\n    return this.system.description.value;\n  }\n\n  /**\n   * Get full description.\n   *\n   * @abstract\n   * @param {object} options - Item type dependant options for rendering the description.\n   * @param {boolean} [options.chatcard=false] - Instruct template to render chat card in mind.\n   * @param {object} [options.data={}] - Template data for rendering\n   * @param {object} [options.rollData] - Roll data for transforming description\n   * @param {boolean} [options.header] - Include header if such exists.\n   * @param {boolean} [options.body] - Include main description body if such exists.\n   * @param {boolean} [options.identified] - Enforce identified description retrieval\n   * @param {boolean} [options.isolated] - Passed to {@link getDescriptionData}\n   * @returns {Promise<string>} - Full description.\n   */\n\n  async getDescription({\n    chatcard = false,\n    data = {},\n    rollData,\n    header = true,\n    body = true,\n    isolated = false,\n    identified = false,\n  } = {}) {\n    if (body) {\n      if (identified) return this._source.system.description?.value || \"\";\n      return this.system.description?.value || \"\";\n    }\n    return \"\";\n  }\n\n  /**\n   * Description Data\n   *\n   * @param {object} options - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @param {boolean} [options.isolated] - Include extra data to reflect it not being so easily available in context.\n   * @returns {Promise<object>} - Description context data\n   */\n  async getDescriptionData({ rollData, isolated = false } = {}) {\n    const context = {};\n\n    const action = this.defaultAction;\n    rollData ??= action?.getRollData() ?? this.getRollData();\n    context.rollData = rollData;\n    context.labels = action?.getLabels({ rollData, isolated }) ?? this.getLabels({ rollData, isolated });\n\n    const fullInfo = game.user.isGM ? true : (this.system.identified ?? true);\n\n    // Attack data, for attacks and weapons primarily\n    if (!action) return context;\n\n    if (action?.hasAttack) {\n      context.action = {};\n      if (action.hasDamage) {\n        const firstDamage = action.damage?.parts?.[0]?.formula;\n        // Spoof sizeRoll() to work based on weapon size instead of actor size\n        const sizeKey = pf1.config.sizeChart[this.system.size || \"med\"] || \"M\";\n        const sizeIndex = Object.values(pf1.config.sizeChart).indexOf(sizeKey);\n        context.action.damage = pf1.utils.formula.simplify(firstDamage || \"0\", {\n          ...rollData,\n          size: sizeIndex,\n        });\n        const critMult = action?.ability?.critMult || 1;\n        if (critMult > 1) {\n          const critRange = action.critRange || 20;\n          if (critRange === 20) context.action.critical = `×${critMult}`;\n          else context.action.critical = `${critRange}-20/×${critMult}`;\n        }\n        context.action.size = Object.values(pf1.config.actorSizes)[sizeIndex] || pf1.config.actorSizes.med;\n\n        const types = fullInfo\n          ? action.damage?.parts?.map((part) => part.parsed.all.map((t) => t.name || t)).flat()\n          : (action.damage?.parts?.[0].parsed.all.map((t) => t.name || t) ?? []);\n\n        context.action.type = types.join(\", \");\n      }\n\n      // Range\n      if ([\"melee\", \"reach\"].includes(action.range?.units)) context.action.range = \"–\";\n      else if ([\"ft\"].includes(action.range?.units)) {\n        context.action.range = action.range;\n        context.action.unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n      }\n\n      if (action.ammo.type && action.ammo.cost) {\n        const misfire = action.misfire;\n        const capacity = this.system.ammo?.capacity ?? 0;\n        context.action.ammo = {\n          misfire: misfire > 1 ? `1–${misfire}` : misfire > 0 ? misfire : null,\n          capacity: capacity > 0 ? capacity : \"–\",\n          enabled: misfire > 0 || capacity > 0,\n        };\n      }\n    }\n    return context;\n  }\n\n  /**\n   * An active effect associated with this item.\n   *\n   * @remarks\n   * - Most item types don't have associated effect.\n   *\n   * @abstract\n   * @type {ActiveEffect|null}\n   */\n  get effect() {\n    return null;\n  }\n\n  /**\n   * An array containing all action types from this item's actions.\n   *\n   * @see {@link config.itemActionTypes}\n   * @type {string[]}\n   */\n  get actionTypes() {\n    const actionTypes = this.actions?.map((action) => action.actionType).filter(Boolean) ?? [];\n    return [...new Set(actionTypes)];\n  }\n\n  /**\n   * Generic charge addition (or subtraction) function that either adds charges\n   * or quantity, based on item data.\n   *\n   * @param {number} value The amount of charges to add.\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible.\n   */\n  async addCharges(value) {\n    // Add link charges\n    const link = this.links.charges;\n    if (link) return link.addCharges(value);\n\n    // Add own charges\n    if (this.isSingleUse && this.isPhysical) {\n      return this.update({ \"system.quantity\": (this.system.quantity || 0) + value });\n    } else {\n      return this.update({ \"system.uses.value\": (this.system.uses?.value || 0) + value });\n    }\n  }\n\n  /**\n   * Linked ammunition item if any.\n   *\n   * @type {Item|undefined}\n   */\n  get defaultAmmo() {\n    return this.actor?.items.get(this.system.ammo?.default);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the item show unidentified data\n   *\n   * @type {boolean}\n   */\n  get showUnidentifiedData() {\n    return false;\n  }\n\n  /* -------------------------------------------- */\n  /*\tData Preparation\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareLinks();\n\n    // Update changes\n    if (this.hasChanges) {\n      this._prepareChanges();\n    }\n\n    this._prepareScriptCalls();\n\n    // Prepare dependent data only if there's no actor or actor initialization has happened.\n    if (!this.actor || this.actor._initialized !== false) {\n      this._prepareDependentData(true);\n    }\n  }\n\n  /**\n   * Prepare data potentially dependent on other items.\n   *\n   * This should be run at in Item.prepareDerivedData() if no actor is present,\n   * or in actor's prepareDerivedData after document preparation is done.\n   *\n   * @param {boolean} final - Is this final call to this?\n   */\n  _prepareDependentData(final = false) {\n    // Update maximum uses\n    this._updateMaxUses();\n\n    // Prepare actions only when item preparation is deemed finalized\n    if (final) this._prepareActions();\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this._prepareIdentifier();\n    this._prepareTraits();\n\n    if (this.inContainer) this.adjustContained();\n\n    if (this.system.contextNotes?.length) {\n      this.system.contextNotes = this.system.contextNotes.map(\n        (cn) => new pf1.components.ContextNote(cn, { parent: this })\n      );\n    }\n  }\n\n  /**\n   * Initialize identifier\n   *\n   * @internal\n   */\n  _prepareIdentifier() {\n    const isTaggedType = this.constructor.system?.hasIdentifier ?? false;\n    if (isTaggedType) {\n      if (!this.system.tag) {\n        this.system.tag = pf1.utils.createTag(this.name);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _prepareTraits() {\n    const map = {\n      descriptors: pf1.config.spellDescriptors,\n      weaponGroups: pf1.config.weaponGroups,\n      subschool: pf1.config.spellSubschools,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      creatureTypes: pf1.config.creatureTypes,\n      creatureSubtypes: pf1.config.creatureSubtypes,\n    };\n\n    for (const [key, labels] of Object.entries(map)) {\n      if (!this.system[key]) continue;\n      if (!Array.isArray(this.system[key])) {\n        continue; // Preparation has already run, avoid double transform\n      }\n\n      const trait = {\n        base: this.system[key],\n        custom: new Set(),\n        standard: new Set(),\n        get total() {\n          return this.standard.union(this.custom);\n        },\n        get names() {\n          return [...this.standard.map((t) => labels[t] || t), ...this.custom];\n        },\n      };\n      Object.defineProperty(trait, \"value\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(`item.system.${key}.value is deprecated.`, {\n            since: \"PF1 v11\",\n            until: \"PF1 v12\",\n          });\n          return this.standard;\n        },\n      });\n      if (Array.isArray(trait.base)) {\n        for (const c of trait.base) {\n          if (labels[c]) trait.standard.add(c);\n          else trait.custom.add(c);\n        }\n      }\n      this.system[key] = trait;\n    }\n  }\n\n  /**\n   * Adjust data if the item is in container.\n   *\n   * @abstract\n   */\n  adjustContained() {}\n\n  /**\n   * Returns labels for this item\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.actionId] - ID of one of this item's actions to get labels for; defaults to first action\n   * @param {object} [options.rollData] - Roll data to use.\n   * @param {boolean} [options.isolated] - Is this isolated use? If true, more data is included.\n   * @returns {Record<string, string>} This item's labels\n   */\n  getLabels({ actionId, rollData, isolated } = {}) {\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n    const labels = action?.getLabels({ rollData, isolated }) ?? {};\n    labels.activation ||= pf1.config.abilityActivationTypes.passive; // Default passive if no action is present\n    if (!action) labels.noAction = true;\n    if (!action || action.activation.type === \"passive\") labels.isPassive = true;\n    labels.hasEffect = Boolean(\n      labels.range || labels.area || labels.target || labels.effect || labels.duration || labels.savingThrow\n    );\n    return labels;\n  }\n\n  /**\n   * Prepare item links.\n   *\n   * @internal\n   */\n  prepareLinks() {\n    if (!this.links) return;\n\n    for (const [type, item] of Object.entries(this.links)) {\n      if (type === \"charges\") {\n        // Remove cached link if stale\n        // TODO: This should not exist.\n        const links = item.getLinkedItemsSync(\"charges\");\n        if (!links.some((i) => i.id === this.id)) {\n          delete this.links.charges;\n          continue;\n        }\n\n        this._updateInheritedCharges(item);\n      }\n    }\n  }\n\n  /**\n   * Prepare and update Changes collection.\n   *\n   * @internal\n   */\n  _prepareChanges() {\n    const prior = this.changes;\n    const collection = new Collection();\n    for (const c of this.system.changes ?? []) {\n      /** @type {pf1.components.ItemChange} */\n      let change;\n      if (prior && prior.has(c._id)) {\n        change = prior.get(c._id);\n        change.replaceSource(c);\n      } else change = new pf1.components.ItemChange(c, { parent: this, strict: false });\n      collection.set(c._id || change.data._id, change);\n    }\n\n    this.changes = collection;\n  }\n\n  /**\n   * Prepare actions\n   *\n   * @internal\n   */\n  _prepareActions() {\n    const actions = this.system.actions ?? [];\n\n    const prior = this.actions;\n    const collection = new Collection();\n    for (const actionData of actions) {\n      let action = null;\n      if (prior && prior.has(actionData._id)) {\n        action = prior.get(actionData._id);\n        action.replaceSource(actionData);\n      } else {\n        action = new pf1.components.ItemAction(actionData, { parent: this, strict: false });\n      }\n      collection.set(action.id, action);\n    }\n\n    /** @type {Collection<pf1.components.ItemAction>} */\n    this.actions = collection;\n\n    for (const action of prior ?? []) {\n      if (this.actions.get(action.id) !== action) {\n        for (const app of Object.values(action.apps)) {\n          app.close({ pf1: { action: \"delete\" }, submit: false, force: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Prepare `ItemPF.scriptCalls` collection.\n   *\n   * @internal\n   */\n  _prepareScriptCalls() {\n    if (!this.scriptCalls) return;\n\n    const prior = new Collection(this.scriptCalls.entries());\n    this.scriptCalls.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    const scriptCalls = this.system.scriptCalls;\n    if (!scriptCalls?.length) return;\n\n    for (const s of scriptCalls) {\n      const sid = s._id;\n      let script = null;\n      if (prior && prior.has(sid)) {\n        script = prior.get(sid);\n        const scriptData = { ...s };\n        script.replaceSource(scriptData);\n      } else script = new pf1.components.ItemScriptCall(s, { parent: this });\n      this.scriptCalls.set(sid, script);\n    }\n  }\n\n  /**\n   * Executes all script calls on this item of a specified category.\n   *\n   * @param {string} category - The category of script calls to call.\n   * @param {Record<string, *>} [extraParams={}] - A dictionary of extra parameters to pass as variables for use in the script.\n   * @param {object} [shared={}] - Shared data object\n   * @returns {Promise<object>} The shared object between calls which may have been given data.\n   */\n  async executeScriptCalls(category, extraParams = {}, shared = {}) {\n    /** @type {pf1.components.ItemScriptCall[]} */\n    const scripts = this.scriptCalls?.filter((o) => o.category === category) ?? [];\n\n    shared.category = category;\n\n    try {\n      for (const s of scripts) {\n        await s.execute(shared, extraParams);\n      }\n    } catch (error) {\n      console.error(`Script call execution failed\\n`, error, this);\n      // Rethrow to ensure everything cancels\n      throw new Error(\"Error occurred while executing a script call\", { cause: error });\n    }\n\n    return shared;\n  }\n\n  /**\n   * @override\n   * @param {object} data - Update data\n   * @param {object} context - Context\n   * @returns {Promise<Item>} - Updated item\n   */\n  async update(data, context = {}) {\n    // Avoid regular update flow for explicitly non-recursive update calls\n    if (context.recursive === false) {\n      if (this.inContainer) {\n        this.rootItem.update(this._transformContainerUpdateData(data, { recursive: true }), context);\n      } else {\n        return super.update(data, context);\n      }\n    }\n\n    data = foundry.utils.expandObject(data);\n\n    this.memorizeVariables();\n\n    const parentItem = this.parentItem;\n    if (!parentItem) {\n      return super.update(data, context);\n    } else {\n      // Update parent item\n      context.pf1 ??= {};\n      context.pf1.containerItem = this.id;\n      await parentItem.update(this._transformContainerUpdateData(data), context);\n      return this;\n    }\n  }\n\n  /**\n   * Transform given data so it becomes valid update data within parent item.\n   *\n   * This can, for example, be used to generate batched update to the real item.\n   *\n   * @example\n   * ```js\n   * _transformContainerUpdateData({ name: \"new name\" })\n   * // => { system: { items: { [itemID]: { name: \"new name\" } } } }\n   * ```\n   *\n   * @internal\n   * @param {object} data Update data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.recursive=false] - Create data recursively, meant for the real item document.\n   * @returns {object} - Transformed update data\n   */\n  _transformContainerUpdateData(data, { recursive = false } = {}) {\n    const parentItem = this.parentItem;\n    if (parentItem) {\n      const baseUpdate = { system: { items: { [this.id]: data } } };\n      if (recursive) return parentItem._transformContainerUpdateData(baseUpdate, { recursive });\n      else return baseUpdate;\n    }\n    return data;\n  }\n\n  /**\n   * Memorize quantity and level for later diffing.\n   *\n   * @internal\n   */\n  memorizeVariables() {\n    if (this._memoryVariables != null) return;\n\n    const memKeys = this.memoryVariables;\n    this._memoryVariables = {};\n    for (const k of memKeys) {\n      if (foundry.utils.hasProperty(this.system, k)) {\n        this._memoryVariables[k] = foundry.utils.deepClone(foundry.utils.getProperty(this.system, k));\n      }\n    }\n\n    // Memorize variables recursively on container items\n    for (const item of this.items ?? []) {\n      item.memorizeVariables();\n    }\n  }\n\n  /**\n   * Determine whether this item adjusts actor size\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  get adjustsSize() {\n    return this.changes?.some((change) => change.target === \"size\") ?? false;\n  }\n\n  /**\n   * Determine whether a given change set affects size\n   *\n   * @internal\n   * @param {object} data - Item data\n   * @returns {boolean} - Contains size targeting change\n   */\n  static _hasSizeUpdate(data) {\n    return data.system?.changes?.some((change) => change.target === \"size\") || false;\n  }\n\n  /**\n   * Determine whether this item adjusts senses\n   *\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  get adjustsVision() {\n    const flags = this.system.changeFlags;\n    if (flags && (flags?.lowLightVision || flags?.seeInvisibility || flags?.seeInDarkness)) {\n      return true;\n    }\n\n    return this.system.changes?.some((change) => pf1.config.buffTargets[change.target]?.category === \"senses\") ?? false;\n  }\n\n  /**\n   * Determine whether a given change set affect senses\n   *\n   * @internal\n   * @param {object} changes - An object containing changeFlags and changes to be inspected.\n   * @returns {boolean} - Vision alteration detected\n   */\n  static _hasVisionUpdate(changes) {\n    if (\n      changes.system?.changeFlags?.lowLightVision !== undefined ||\n      changes.system?.changeFlags?.seeInvisibility !== undefined ||\n      changes.system?.changeFlags?.seeInDarkness !== undefined\n    ) {\n      return true;\n    }\n\n    return (\n      changes.system?.changes?.some((change) => pf1.config.buffTargets[change.target]?.category === \"senses\") || false\n    );\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    // Call 'toggle' script calls\n    let state = null;\n    if (this.type === \"buff\") state = changed.system?.active;\n    else if (this.type === \"feat\" && changed.system?.disabled !== undefined)\n      state = changed.system.disabled === true ? false : true;\n    if (state != null) {\n      const startTime = this.effect?.duration.startTime ?? game.time.worldTime;\n      this.executeScriptCalls(\"toggle\", { state, startTime });\n    }\n\n    // Handle Size Change\n    // TODO: Move this to actor to handle it only once\n    const activeChanged = this._activeStateChange(changed);\n    const adjustsSize = this.adjustsSize;\n    if (\n      // Item contains a size change and active state was toggled\n      (activeChanged !== undefined && adjustsSize) ||\n      // Item contains a new or updated size change\n      this.constructor._hasSizeUpdate(changed) ||\n      // Item contained a size change that was removed\n      (context.adjustedSize && !adjustsSize)\n    ) {\n      this.actor?._updateTokenSize();\n    }\n\n    if (this._memoryVariables) this._onMemorizedUpdate(changed, context);\n  }\n\n  /**\n   * Return active state change from data if present\n   *\n   * This is a hack to allow item-type agnostic active state change detection.\n   *\n   * @internal\n   * @experimental\n   * @param {object} changed\n   * @returns\n   */\n  _activeStateChange(changed) {\n    return this.system._activeStateChange?.(changed.system) ?? true;\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeLevel' script calls\n    const oldLevel = this._memoryVariables?.level;\n    if (oldLevel !== undefined && changed.system?.level !== undefined) {\n      const level = {\n        previous: parseInt(oldLevel),\n        new: parseInt(this.system.level),\n      };\n      for (const [k, v] of Object.entries(level)) {\n        if (Number.isNaN(v)) level[k] = null;\n      }\n      if (level.new !== undefined && level.new !== level.previous) {\n        this.executeScriptCalls(\"changeLevel\", { level });\n      }\n    }\n\n    if (\n      // Item contains a vision change and active state was toggled\n      (changed?.system?.active !== undefined && this.adjustsVision) ||\n      // Item contains a new or updated vision change\n      this.constructor._hasVisionUpdate(changed) ||\n      // Item contained a vision change that was removed\n      (context.adjustedVision && !this.adjustsVision)\n    ) {\n      const initializeVision = true;\n      const refreshLighting = this.system.changeFlags.lowLightVision || false;\n      this.actor.updateVision(initializeVision, refreshLighting);\n    }\n\n    // Forget memory variables\n    this._memoryVariables = null;\n  }\n\n  /**\n   * Update max uses\n   *\n   * @internal\n   */\n  _updateMaxUses() {\n    const per = this.system.uses?.per;\n\n    // No charges? No charges!\n    if (!per) return;\n\n    // Do not evaluate inherited charges\n    if (this.links?.charges) return;\n\n    const maxFormula = this.system.uses.maxFormula;\n    if (per === \"single\") {\n      this.system.uses.max = 1;\n    } else if (!maxFormula) {\n      this.system.uses.max = null;\n    } else {\n      try {\n        const isDeterministic = Roll.parse(maxFormula).every((t) => t.isDeterministic);\n        if (isDeterministic) {\n          const rollData = this.getRollData();\n          const roll = RollPF.safeRollSync(\n            maxFormula,\n            rollData,\n            { formula: maxFormula, item: this },\n            { suppressError: !this.isOwner }\n          );\n          this.system.uses.max = roll.total;\n\n          // Update any items inheriting our charges\n          const linked = this.getLinkedItemsSync(\"charges\");\n          for (const item of linked) {\n            item._updateInheritedCharges(this);\n          }\n        } else {\n          const msg = game.i18n.format(\"PF1.Warning.NoDiceAllowedInFormula\", {\n            formula: maxFormula,\n            context: game.i18n.localize(\"PF1.ChargePlural\"),\n          });\n          ui.notifications.warn(msg, { console: false });\n          console.warn(msg, this);\n        }\n      } catch (err) {\n        console.error(\"Invalid max uses formula:\", { formula: maxFormula, item: this }, err);\n      }\n    }\n  }\n\n  /**\n   * Update this item's charges based on provided item.\n   *\n   * @internal\n   * @param {Item} item - Charge source\n   */\n  _updateInheritedCharges(item) {\n    const iuses = item.system.uses;\n    if (!iuses) return;\n\n    const uses = this.system.uses;\n\n    uses.per = iuses.per;\n    uses.max = iuses.max;\n    uses.maxFormula = iuses.maxFormula;\n    uses.value = iuses.value;\n    uses.rechargeFormula = iuses.rechargeFormula;\n  }\n\n  /**\n   * Determines the starting data for an ActiveEffect based off this item.\n   *\n   * @param {object} options - Additional options\n   * @param {object} options.rollData - Roll data\n   * @returns {Promise<object>} - Active Effect creation data\n   */\n  // eslint-disable-next-line no-unused-vars\n  async getRawEffectData({ rollData } = {}) {\n    return {\n      name: this.name,\n      img: this.img,\n      origin: this.getRelativeUUID(this.actor),\n      duration: {\n        startTime: game.time.worldTime,\n      },\n      disabled: !this.isActive,\n    };\n  }\n\n  /**\n   * Fetches all this item's script calls of a specified category\n   *\n   * @internal\n   * @param {string} category - Category\n   * @returns {pf1.components.ItemScriptCall[]} - Script calls within the category.\n   */\n  getScriptCalls(category) {\n    return this.scriptCalls?.filter((s) => s.category === category) ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Display the chat card for an Item as a message in chat\n   *\n   * @param {object} [altChatData={}] - Optional data that will be merged into the chat data object.\n   * @param {object} [options=[]] Additional options.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage | void>} Chat message instance if one was created.\n   */\n  async displayCard(altChatData = {}, { token } = {}) {\n    const actor = this.actor;\n    if (actor && !actor.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n    }\n\n    // Basic template rendering data\n    token ??= actor?.token;\n    const rollData = this.defaultAction?.getRollData() ?? this.getRollData();\n    const itemChatData = await this.getChatData({ rollData });\n    const identified = Boolean(rollData.item?.identified ?? true);\n\n    const templateData = {\n      actor: this.actor,\n      token,\n      tokenId: token?.uuid,\n      item: this.toObject(),\n      labels: this.getLabels({ rollData }),\n      hasAttack: this.hasAttack,\n      hasMultiAttack: this.hasMultiAttack,\n      hasAction: this.hasAction,\n      isVersatile: this.isVersatile,\n      isSpell: this.type === \"spell\",\n      name: this.getName(true),\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      rollData,\n      properties: [],\n    };\n\n    const enrichOptions = {\n      rollData,\n      secrets: this.isOwner,\n      relativeTo: this.actor,\n    };\n\n    // If the item was unidentified, store data for GM info box containing identified info\n    const system = {};\n    system.item = {\n      identified,\n      id: this.id,\n    };\n\n    if (identified === false) {\n      system.item.name = this._source.name;\n      // TODO: Remove storage of description?\n      // It should not be relevant after the item is deleted and the description can be fetched from the item.\n      system.item.description = await TextEditor.enrichHTML(itemChatData.identifiedDescription, enrichOptions);\n    }\n\n    if (itemChatData.properties) {\n      templateData.properties.push({\n        header: game.i18n.localize(\"PF1.InfoShort\"),\n        value: itemChatData.properties,\n        css: \"info-properties\",\n      });\n    }\n\n    // Add combat info\n    if (game.combat) {\n      system.combat = game.combat.id;\n\n      const combatProps = [];\n      // Add round info\n      combatProps.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n      if (combatProps.length > 0) {\n        templateData.properties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Basic chat message data\n    const chatData = foundry.utils.mergeObject(\n      {\n        type: \"item\",\n        system,\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        speaker: ChatMessage.implementation.getSpeaker({ actor, token }),\n        flags: {\n          core: {\n            canPopout: true,\n          },\n        },\n      },\n      altChatData\n    );\n\n    const template = `systems/pf1/templates/chat/items/item-card.hbs`;\n    if (Hooks.call(\"pf1DisplayCard\", this, { template, templateData, chatData }) === false) return;\n\n    // Create the chat message\n    const content = await renderTemplate(template, templateData);\n    chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // Apply roll mode\n    chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(chatData, chatData.rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Cards\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this item, either in a default configuration or for a specific action.\n   *\n   * @param {object} [options] - Options affecting how descriptions are enriched.\n   *                                              `rollData`\n   * @param {boolean} [options.chatcard=false] - Is this actually for chat card.\n   * @param {boolean} [options.extended=false] - Include extended information that may not be useful in all circumstances.\n   * @param {string} [options.actionId] - The ID of an action on this item to generate chat data for,\n   *                                      defaults to {@link ItemPF.defaultAction}\n   * @param {object} [options.rollData] - Defaults to {@link ItemAction#getRollData}/{@link ItemPF#getRollData}.\n   * @param {boolean} [options.interactive=false]\n   * @returns {Promise<ChatData>} The chat data for this item (+action)\n   */\n  async getChatData({ chatcard = false, actionId = null, rollData, extended = false, interactive = false } = {}) {\n    /** @type {ChatData} */\n    const data = {};\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n\n    rollData ??= action ? action.getRollData() : this.getRollData();\n    const actionData = rollData.action ?? action ?? {};\n\n    const labels = this.getLabels({ actionId, rollData });\n\n    // Rich text descriptions\n    data.identifiedDescription = await this.getDescription({\n      chatcard,\n      rollData,\n      isolated: extended,\n      identified: true,\n    });\n    data.unidentifiedDescription = this.system.description.unidentified;\n\n    data.isIdentified = this.system.identified ?? true;\n    data.showIdentified = !this.showUnidentifiedData;\n    data.description = data.showIdentified ? data.identifiedDescription : data.unidentifiedDescription;\n    data.actionDescription = actionData.description;\n\n    // General equipment properties\n    const props = [];\n\n    if (chatcard !== true) {\n      if (labels.subType && labels.childTypeDistinct !== true) props.push(labels.subType);\n      if (labels.childType) props.push(labels.childType);\n    }\n\n    if (!this.showUnidentifiedData) {\n      if (labels.activation) props.push(labels.activation);\n      // Range\n      if (actionData.range != null) {\n        const range = action.getRange({ type: \"max\", rollData }),\n          units = actionData.range.units === \"mi\" ? \"mi\" : \"ft\";\n        const distanceValues = pf1.utils.convertDistance(range, units);\n        // TODO: Display range increment and max range instead of just the latter when max increment is higher than 1\n        const rangeLabel =\n          range > 0 ? game.i18n.format(\"PF1.MaxRangeNote\", { distance: range, units: distanceValues[1] }) : null;\n        if (rangeLabel) props.push(rangeLabel);\n      }\n\n      // Add Difficulty Class (DC) label\n      if (labels.save) {\n        props.push(labels.save);\n        const saveDesc = actionData.save?.description;\n        if (saveDesc) props.push(saveDesc);\n      }\n\n      // Duration\n      if (actionData.duration != null) {\n        let duration;\n        if (actionData.duration.units === \"spec\") {\n          duration = actionData.duration.value;\n        } else if (![\"inst\", \"perm\"].includes(actionData.duration.units)) {\n          const roll = await RollPF.safeRoll(actionData.duration.value || \"0\", rollData, undefined, undefined, {\n            allowInteractive: interactive,\n          });\n          const value = roll.total;\n          duration = [value, pf1.config.timePeriods[actionData.duration.units]].filterJoin(\" \");\n        }\n        if (duration) props.push(duration);\n      }\n\n      // Enhancement Bonus\n      const enhBonus = actionData.enh?.value ?? rollData.item.enh ?? 0;\n      if (enhBonus > 0) {\n        props.push(game.i18n.format(\"PF1.EnhancementInline\", { bonus: enhBonus }));\n      }\n    }\n\n    // Get per item type chat data\n    this.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    const harmless = actionData.save?.harmless;\n    if (harmless) props.push(game.i18n.localize(\"PF1.Harmless\"));\n\n    if (this.isBroken) props.push(game.i18n.localize(\"PF1.Broken\"));\n\n    data.properties = props;\n\n    return data;\n  }\n\n  /**\n   * Per item type chat data.\n   *\n   * @param {ChatData} data - A partial of a chat data object that can be modified to add per item type data.\n   * @param {Record<string, *>} labels - The labels for this item.\n   * @param {string[]} props - Additional property strings\n   * @param {object} rollData - A rollData object to be used for checks\n   * @param {object} [options] - Additional options\n   * @param {string} [options.actionId=null] - Action this pertains to, if any.\n   * @param {boolean} [options.chatcard=false] - Is this for a chat card?\n   */\n  // eslint-disable-next-line no-unused-vars\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    // Charges as used by most item types, except spells\n\n    const usesPer = this.system.uses?.per;\n    if (usesPer && !this.showUnidentifiedData) {\n      const isSingleUse = usesPer === \"single\";\n\n      // No charges for single-use physical items, but quantity instead\n      if (isSingleUse && this.isPhysical) {\n        props.push(`${game.i18n.localize(\"PF1.Quantity\")}: ${this.system.quantity}`);\n      } else if (this.isCharged) {\n        const charges = this.charges;\n        if (Number.isFinite(charges)) {\n          const max = this.maxCharges;\n          // Finite max charges\n          if (Number.isFinite(max) && !isSingleUse) {\n            props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}/${max}`);\n          }\n          // Infinite max charges\n          else {\n            props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}`);\n          }\n        }\n      }\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Rolls - Attack, Damage, Saves, Checks  */\n  /* -------------------------------------------- */\n\n  /**\n   * Use an attack, using {@link SharedActionData}\n   *\n   * @see {@link SharedActionData}\n   * @param {object} options - Options\n   * @param {string} [options.actionId=\"\"] - The ID of the action to use, defaults to the first action\n   * @param {number} [options.cost=null] - Cost override. Replaces charge cost or slot cost as appropriate.\n   * @param {Event | null} [options.ev=null] - The event that triggered the use, if any\n   * @param {boolean} [options.skipDialog=getSkipActionPrompt()] - Whether to skip the dialog for this action\n   * @param {boolean} [options.chatMessage=true] - Whether to send a chat message for this action\n   * @param {string} [options.dice=pf1.dice.D20RollPF.standardRoll] - The base dice to roll for this action\n   * @param {string} [options.rollMode] - The roll mode to use for the chat message\n   * @param {TokenDocument} [options.token] Token this action is for, if any.\n   * @param {UseOptions} [options.options={}] Additional use options.\n   * @throws {Error} - On some invalid inputs.\n   * @returns {Promise<ActionUse | SharedActionData | void>} - Action use, shared data, or nothing.\n   */\n  async use({\n    actionId = \"\",\n    cost = null,\n    ev = null,\n    skipDialog = getSkipActionPrompt(),\n    chatMessage = true,\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollMode,\n    token,\n    options = {},\n  } = {}) {\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n    token ||= this.actor?.token ?? this.actor?.getActiveTokens(true, true)[0];\n\n    if (ev?.originalEvent) ev = ev.originalEvent;\n\n    if (cost !== null && !Number.isSafeInteger(cost)) throw new Error(`Invalid value for cost override: ${cost}`);\n\n    if (options.held) {\n      // Convert human friendly options to internal types\n      if (options.held === \"twohanded\") options.held = \"2h\";\n      else if (options.held === \"offhand\") options.held = \"oh\";\n    }\n\n    // Prepare variables\n    /** @type {SharedActionData} */\n    const shared = {\n      event: ev,\n      action: null,\n      item: null,\n      token: null,\n      rollData: {},\n      skipDialog,\n      chatMessage,\n      dice,\n      cost,\n      fullAttack: true,\n      useOptions: options,\n      attackBonus: [],\n      damageBonus: [],\n      attacks: [],\n      chatAttacks: [],\n      rollMode,\n      useMeasureTemplate: false,\n      conditionals: null,\n      conditionalPartsCommon: {},\n      casterLevelCheck: false, // TODO: Move to use-options\n      concentrationCheck: false, // TODO: Move to use-options\n      scriptData: {},\n    };\n\n    // Prevent reassigning the ActionUse's item and token\n    Object.defineProperties(shared, {\n      item: { value: this, writable: false, enumerable: true },\n      token: { value: token, writable: false, enumerable: true },\n    });\n\n    // Old use method\n    if (!this.hasAction) {\n      // Use\n      if (!(\"attackData\" in shared)) {\n        Object.defineProperty(shared, \"attackData\", {\n          get: () => {\n            foundry.utils.logCompatibilityWarning(\n              \"shared.attackData is deprecated in favor of directly accessing shared\",\n              {\n                since: \"PF1 v10\",\n                until: \"PF1 v12\",\n              }\n            );\n            return shared;\n          },\n        });\n      }\n\n      await this.executeScriptCalls(\"use\", {}, shared);\n      rollMode = shared.rollMode || rollMode;\n      if (shared.reject) return shared;\n\n      // Deduct charges\n      if (this.isCharged) {\n        const chargeCost = cost ?? this.getDefaultChargeCost();\n        if (this.charges < chargeCost) {\n          if (this.isSingleUse) {\n            return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n          }\n          return void ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.name }));\n        }\n\n        await this.addCharges(-chargeCost);\n      }\n\n      if (shared.hideChat !== true && chatMessage) {\n        shared.descriptionOnly = true;\n        Object.defineProperty(shared, \"chatCard\", {\n          get() {\n            foundry.utils.logCompatibilityWarning(\"shared.chatCard is deprecated in favor of shared.message\", {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            });\n\n            return this.message;\n          },\n        });\n        shared.message = await this.displayCard({ rollMode });\n      }\n\n      await this.executeScriptCalls(\"postUse\", {}, shared);\n\n      return shared;\n    }\n\n    /** @type {ItemAction | undefined} */\n    let action;\n    if (actionId) {\n      action = this.actions.get(actionId);\n      if (!action) throw new Error(`Could not find action by ID \"${actionId}\"`);\n    } else if (this.system.actions.length > 1 && skipDialog !== true) {\n      const actionId = await pf1.applications.ActionSelector.open({ document: this });\n      action = this.actions.get(actionId);\n    } else {\n      action = this.defaultAction;\n    }\n\n    if (!action) {\n      console.debug(`PF1 | Cancelled use of \"${this.name}\"`);\n      return null; // No action chosen\n    }\n\n    // Prevent reassigning the ActionUse's action\n    Object.defineProperties(shared, {\n      action: { value: action, writable: false, enumerable: true },\n    });\n\n    if (shared.useOptions.ammo) {\n      if (action.usesAmmo) {\n        await this.update({ \"system.ammo.default\": shared.useOptions.ammo });\n      } else {\n        console.error(\"Attempted to set ammo for action that does not use ammo\");\n      }\n    }\n\n    // TODO: Remove this variable usage\n    shared.useMeasureTemplate = action.hasTemplate && game.settings.get(\"pf1\", \"placeMeasureTemplateOnQuickRolls\");\n\n    return new ActionUse(shared).process({ skipDialog });\n  }\n\n  /**\n   * Item specific conditional targets.\n   *\n   * @abstract\n   * @param {object} results - Conditional targets\n   * @param _result\n   * @param {Record<string, string>} results - Result key to label mapping.\n   */\n\n  getConditionalTargets(results, _result) {\n    if (_result) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemPF.getConditionalTargets() with two parameters is now ItemPF.getConditionalSubTargets()\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      return this.getConditionalSubTargets(results, _result);\n    }\n  }\n\n  /**\n   * Item specific conditional sub targets.\n   *\n   * @abstract\n   * @param {string} target - Conditional target\n   * @param {Record<string, string>} result - Result key to label mapping.\n   */\n  getConditionalSubTargets(target, result) {}\n\n  /**\n   * Finds, filters and alters changes relevant to a context, and returns the result (as an array)\n   *\n   * @remarks - Always returns empty array if no actor is present.\n   * @param {\"mattack\"|\"rattack\"|\"nattack\"|\"tattack\"|\"wdamage\"|\"sdamage\"|\"rwdamage\"|\"twdamage\"|\"mwdamage\"|\"ndamage\"|\"rdamage\"|\"tdamage\"|\"mdamage\"} context - The given context.\n   * @returns {ItemChange[]} - The matching changes.\n   */\n  getContextChanges(context = [\"attack\"]) {\n    if (!this.actor) return [];\n    const targets = this.getContextStack(context);\n    return this.actor.changes.filter((c) => targets.has(c.target));\n  }\n\n  /**\n   * Retrieve stack of contexts related to the one given.\n   *\n   * @private\n   * @param {Array<string>} contexts Context subtarget ID array.\n   * @returns {Set<string>} - Modified context array.\n   */\n  getContextStack(contexts) {\n    const result = new Set(contexts);\n    for (const context of contexts) {\n      switch (context) {\n        case \"sattack\":\n        case \"wattack\":\n        case \"mattack\":\n        case \"rattack\":\n        case \"nattack\":\n        case \"tattack\":\n          result.add(\"attack\");\n          break;\n        case \"wdamage\":\n        case \"sdamage\":\n          result.add(\"damage\");\n          break;\n        case \"mwdamage\":\n        case \"rwdamage\":\n        case \"twdamage\":\n          result.add(\"damage\");\n          result.add(\"wdamage\");\n          break;\n      }\n    }\n\n    // Add generic ranged damage for ranged weapon damage and thrown weapon damage\n    if (result.has(\"rwdamage\") || result.has(\"twdamage\")) {\n      result.add(\"rdamage\");\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {object} [options] - Additional options\n   * @returns {object} An object with data to be used in rolls in relation to this item.\n   */\n  getRollData(options) {\n    const actor = this.actor;\n    const result = { ...(actor?.getRollData(options) ?? {}) };\n\n    if (!actor) pf1.utils.rollData.addStatic(result);\n\n    result.item = foundry.utils.deepClone(this.system);\n\n    // Add @class\n    const classTag = result.item.class;\n    if (classTag) result.class = result.classes?.[classTag];\n\n    // Add dictionary flag\n    const tag = this.system.tag;\n    result.item.dFlags = result.dFlags?.[tag];\n\n    result.item.bFlags = Object.fromEntries(\n      Object.entries(result.item.flags?.boolean ?? {}).map(([key, value]) => [key, value ? 1 : 0])\n    );\n\n    // Set aura strength\n    if (this.isPhysical) {\n      result.item.auraStrength = this.auraStrength;\n\n      // Resize item\n      if (this.system.resizing && result.size !== undefined) {\n        result.item.size = result.size;\n      }\n    }\n\n    // Add caster level\n    // TODO: Replace with associated class level if higher?\n    result.cl = result.item?.cl;\n\n    this._addTypeRollData(result);\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Add item type specific roll data.\n   *\n   * @abstract\n   * @internal\n   * @param {object} result - Roll data\n   */\n  // eslint-disable-next-line no-unused-vars\n  _addTypeRollData(result) {}\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if specified link can be created.\n   *\n   * @internal\n   * @param {string} type - The type of link.\n   * @param {Item} item - The target item to link to.\n   * @returns {Promise<boolean>} Whether a link to the item is possible here.\n   */\n  async _canCreateItemLink(type, item) {\n    if (!(item instanceof Item)) throw new Error(\"Item must be instance of Item document\");\n\n    if (![\"charges\", \"children\", \"supplements\", \"classAssociations\"].includes(type))\n      throw new Error(`Invalid link type: \"${type}\"`);\n\n    // Don't create link to self\n    if (item === this) return false;\n\n    const sameActor = this.actor && item.actor === this.actor;\n\n    // Link happens between items on same actor?\n    const linkOnActor = [\"children\", \"charges\"].includes(type);\n    if (linkOnActor && !sameActor) {\n      ui.notifications.warn(\"PF1.Warning.LinkOwnerMismatch\", { localize: true });\n      return false;\n    }\n\n    // Don't re-create existing links\n    const links = this.system.links?.[type] || [];\n    for (const link of links) {\n      // Use slow matching method to ensure old style links aren't ignored\n      const ti = await fromUuid(link.uuid, { relative: this.actor });\n      if (ti === item) {\n        ui.notifications.warn(\"PF1.Warning.NoMultiLink\", { localize: true });\n        return false;\n      }\n    }\n\n    switch (type) {\n      // Charge link requirements\n      case \"charges\": {\n        // Prevent item from inheriting charges from multiple sources\n        if (item.links?.charges) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: this.name,\n              target: item.name,\n              deeptarget: item.links.charges.name,\n            })\n          );\n          return false;\n        }\n        // Target is already sharing charges itself\n        const targetLinks = item.system.links?.charges ?? [];\n        if (targetLinks.length > 0) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink\", { source: this.name, target: item.name })\n          );\n          return false;\n        }\n        if (this.links?.charges) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: item.name,\n              target: this.name,\n              deeptarget: this.links.charges.name,\n            })\n          );\n          return false;\n        }\n        return true;\n      }\n      // Class association link requirements\n      case \"classAssociations\":\n        // Item must not be on actor and must be in compendium\n        if (item.actor) {\n          ui.notifications.error(\"PF1.Warning.LinkOnlyUnowned\", { localize: true });\n          return false;\n        }\n        if (!item.pack) {\n          ui.notifications.error(\"PF1.Warning.LinkOnlyCompendium\", { localize: true });\n          return false;\n        }\n        return true;\n      case \"supplements\": {\n        // Must NOT be on actor\n        if (!item.actor) return true;\n        else ui.notifications.error(\"PF1.Warning.LinkOnlyUnowned\", { localize: true });\n        break;\n      }\n      case \"children\":\n        return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @internal\n   * @param {string} type - The type of link.\n   * @param {object} item - The target item to link to.\n   * @param {string} uuid - The link identifier for the item.\n   * @returns {Array} An array to insert into this item's link data.\n   */\n  _generateLinkData(type, item, uuid) {\n    const result = {\n      name: item.name,\n      uuid,\n    };\n\n    // Remove name for various links\n    switch (type) {\n      case \"classAssociations\":\n        result.level = 1;\n      // eslint-disable-next-line no-fallthrough\n      case \"supplements\":\n        // System packs are assumed static\n        if (game.packs.get(item.pack)?.metadata.packageType === \"system\") {\n          delete result.name;\n        }\n        break;\n      case \"charges\":\n      case \"children\":\n        // Actor local links\n        delete result.name;\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates a link to another item.\n   *\n   * @param {\"children\"|\"charges\"|\"supplement\"|\"classAssociations\"} type - The type of link.\n   * @param {Item} item - The target item to link into this.\n   * @param {object} [extraData] - Additional data to store int he link\n   * @returns {Promise<boolean>} - Whether a link was created.\n   */\n  async createItemLink(type, item, extraData) {\n    if (!(await this._canCreateItemLink(type, item))) {\n      console.warn(`Can not create \"${type}\" link for ${item.name} [${item.uuid}] in ${this.name}`);\n      return false;\n    }\n\n    const links = this.toObject().system.links?.[type] ?? [];\n\n    const uuid = this.actor ? item.getRelativeUUID(this.actor) : item.uuid;\n\n    const linkData = this._generateLinkData(type, item, uuid);\n    if (extraData) foundry.utils.mergeObject(linkData, extraData);\n    links.push(linkData);\n\n    const itemUpdate = { _id: this.id, [`system.links.${type}`]: links };\n\n    // Clear value, maxFormula and per from link target to avoid odd behaviour\n    const itemUpdates = [];\n    if (type === \"charges\") {\n      itemUpdates.push({\n        _id: item.id,\n        system: { uses: { \"-=value\": null, \"-=maxFormula\": null, \"-=per\": null, \"-=rechargeFormula\": null } },\n      });\n    }\n\n    if (this.actor && itemUpdates.length > 0) {\n      await this.actor.updateEmbeddedDocuments(\"Item\", [itemUpdate, ...itemUpdates]);\n    } else {\n      await this.update(itemUpdate);\n    }\n\n    // Call link creation hook\n    Hooks.callAll(\"pf1CreateItemLink\", this, linkData, type);\n\n    return true;\n  }\n\n  /**\n   * Get item links of type\n   *\n   * @param {string} type - Link type\n   * @param {boolean} includeLinkData - Include link data, return value changes from item array to object array\n   * @param {object} [options={}] - Additional options\n   * @param {Set} [options._results] - Internal use only.\n   * @param {boolean} [options.recursive=false] - Retrieved linked items recursively.\n   * @returns {Promise<Item[]|object[]>} - Linked items, or objects with linked items and additional data\n   */\n  async getLinkedItems(type, includeLinkData = false, { recursive = false, _results } = {}) {\n    const items = this.system.links?.[type];\n    if (!items) return [];\n\n    const results = _results ?? new Set();\n    for (const l of items) {\n      if (!l.uuid) continue;\n      const item = await fromUuid(l.uuid, { relative: this.actor });\n      if (item) {\n        if (includeLinkData) {\n          if (results.some((i) => i.item === item)) continue;\n        } else if (results.has(item)) continue;\n\n        if (includeLinkData) results.add({ item, linkData: l });\n        else results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          await item.getLinkedItems(type, { recursive, includeLinkData, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Retrieve list of linked items for a type, synchronously.\n   * Intended mainly for fetching child or charge links quickly.\n   *\n   * @example\n   * ```js\n   * const childItems = item.getLinkedItemsSync(\"children\");\n   * ```\n   *\n   * @param {string} type Link type, e.g. \"children\", \"charges\", or \"classAssociations\"\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.recursive=false] - Retrieve links recursively.\n   * @param {Set<string>} [options._results] - Internal use only\n   * @returns {Item[]|object[]} Linked items or their compendium index data\n   */\n  getLinkedItemsSync(type, { recursive = false, _results } = {}) {\n    const links = this.system.links?.[type];\n    if (!links) return [];\n\n    const results = _results ?? new Set();\n    for (const linkData of links) {\n      if (!linkData.uuid) continue;\n\n      const parsed = foundry.utils.parseUuid(linkData.uuid, { relative: this.actor });\n      const item = this.actor?.items.get(parsed?.id);\n      if (!item || results.has(item)) continue;\n      results.add(item);\n\n      // Recursive\n      if (type !== \"charges\" && recursive) {\n        item.getLinkedItemsSync(type, { recursive, _results: results });\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Get all items linked by any means.\n   *\n   * @returns {Promise<Item[]>} - Linked items\n   */\n  async getAllLinkedItems() {\n    const result = [];\n\n    for (const items of Object.values(this.system.links ?? {})) {\n      for (const l of items) {\n        if (!l.uuid) continue;\n        const item = await fromUuid(l.uuid, { relative: this.actor });\n        if (item) result.push(item);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all link references to an item.\n   *\n   * @param {string} uuid - The UUID of the item to remove links to.\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.commit=true] - Commit changes to database. If false, resulting update data is returned instead.\n   * @returns {Promise<Item|object|undefined>} - Updated document, update data, or undefined\n   */\n  async removeItemLink(uuid, { commit = true } = {}) {\n    const updateData = {};\n    for (const [type, linkItems] of Object.entries(this.system.links ?? {})) {\n      const items = foundry.utils.deepClone(linkItems);\n      const idx = items.findIndex((item) => item.uuid === uuid);\n      if (idx >= 0) {\n        items.splice(idx, 1);\n        updateData[`system.links.${type}`] = items;\n      }\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      if (commit) return this.update(updateData);\n      return updateData;\n    }\n  }\n\n  /**\n   * Generates lists of change targets this item can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.buffTargets.\n   * @returns {Record<string, string>} A list of changes\n   */\n  getChangeTargets(target) {\n    const result = {};\n    // Add specific skills\n    if (target === \"skill\") {\n      if (!this.actor) {\n        for (const [s, skl] of Object.entries(pf1.config.skills)) {\n          result[`skill.${s}`] = skl;\n        }\n      } else {\n        const actorSkills = foundry.utils.mergeObject(pf1.config.skills, this.actor.system.skills, { inplace: false });\n        for (const [s, skl] of Object.entries(actorSkills)) {\n          if (!skl.subSkills) {\n            if (skl.custom) result[`skill.${s}`] = skl.name;\n            else result[`skill.${s}`] = pf1.config.skills[s];\n          } else {\n            for (const [s2, skl2] of Object.entries(skl.subSkills)) {\n              result[`skill.${s}.${s2}`] = `${pf1.config.skills[s]} (${skl2.name})`;\n            }\n          }\n        }\n      }\n    }\n    // Add static subtargets\n    else if (foundry.utils.hasProperty(pf1.config.buffTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.buffTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Sets a boolean flag on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async addItemBooleanFlag(flagName, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (Array.isArray(flags)) throw new Error(`${this.name} [${this.id}] requires migration.`);\n\n    if (flags[flagName] === undefined) {\n      await this.update({ [`system.flags.boolean.${flagName}`]: true }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a boolean flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemBooleanFlag(flagName, context = {}) {\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.boolean.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag on this item.\n   * @returns {boolean} Whether the flag was found on this item.\n   */\n  hasItemBooleanFlag(flagName) {\n    const flags = this.system.flags?.boolean ?? {};\n    return flags[flagName] === true;\n  }\n\n  /**\n   * Get all item boolean flags as array.\n   *\n   * @returns {string[]} - Flag keys\n   */\n  getItemBooleanFlags() {\n    const flags = this.system.flags?.boolean ?? {};\n    return Object.keys(flags);\n  }\n\n  /**\n   * Sets a dictionary flag value on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {number|string} value - The flag's new value.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async setItemDictionaryFlag(flagName, value, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== value) {\n      await this.update({ [`system.flags.dictionary.${flagName}`]: value }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a dictionary flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemDictionaryFlag(flagName, context = {}) {\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.dictionary.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag to get.\n   * @returns {string|number|undefined} The value stored in the flag.\n   */\n  getItemDictionaryFlag(flagName) {\n    const flags = this.system.flags?.dictionary || {};\n    return flags[flagName];\n  }\n\n  /**\n   * Get all item dictionary flags as array of objects.\n   *\n   * @returns {Record<string, *>} - All dictionary flags\n   */\n  getItemDictionaryFlags() {\n    const flags = this.system.flags?.dictionary || {};\n    return flags;\n  }\n\n  /**\n   * Attack sources for a specific action.\n   *\n   * @param {string} actionId Action ID\n   * @param {object} [options={}] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack, or undefined if the action is missing.\n   */\n  getAttackSources(actionId, { rollData } = {}) {\n    actionId ??= this.defaultAction?.id;\n\n    /** @type {pf1.components.ItemAction} */\n    const action = this.actions.get(actionId);\n    if (!action) return;\n\n    const sources = [];\n\n    const actorData = this.actor?.system,\n      itemData = this.system;\n\n    if (!actorData) return sources;\n    rollData ??= action.getRollData();\n\n    const describePart = (value, name, modifier, sort = 0) => {\n      if (value == 0) return;\n      sources.push({ value, name, modifier, sort });\n    };\n\n    const isManeuver = action.isCombatManeuver;\n\n    // Unreliable melee/ranged identification\n    const sizeBonus = Object.values(!isManeuver ? pf1.config.sizeMods : pf1.config.sizeSpecialMods)[rollData.size] || 0;\n\n    // Add size bonus\n    if (sizeBonus != 0) describePart(sizeBonus, game.i18n.localize(\"PF1.Size\"), \"size\", -20);\n\n    const changeSources = action.attackSources;\n\n    const effectiveChanges = getHighestChanges(changeSources, { ignoreTarget: true });\n    for (const ic of effectiveChanges) {\n      let value = ic.value;\n      // BAB override\n      if (action.bab && ic._id === \"_bab\") {\n        value = RollPF.safeRollSync(ic.formula, rollData).total || 0;\n      }\n      describePart(value, ic.flavor, ic.type, -800);\n    }\n\n    if (action.ability.attack) {\n      const ablMod = actorData.abilities?.[action.ability.attack]?.mod ?? 0;\n      describePart(ablMod, pf1.config.abilities[action.ability.attack], \"untyped\", -50);\n    }\n\n    // Attack bonus formula\n    // TODO: Don't pre-eval\n    const bonusRoll = RollPF.safeRollSync(action.attackBonus || \"0\", rollData, undefined, undefined, {\n      minimize: true,\n    });\n    if (bonusRoll.total != 0)\n      describePart(bonusRoll.total, bonusRoll.flavor ?? game.i18n.localize(\"PF1.AttackRollBonus\"), \"untyped\", -100);\n\n    // Masterwork or enhancement bonus\n    // Only add them if there's no larger enhancement bonus from some other source\n    const virtualEnh = action.enhancementBonus ?? (itemData.masterwork ? 1 : 0);\n    if (!effectiveChanges.find((i) => i.type === \"enh\" && i.value > virtualEnh)) {\n      if (Number.isFinite(action.enhancementBonus) && action.enhancementBonus !== 0) {\n        describePart(action.enhancementBonus, game.i18n.localize(\"PF1.EnhancementBonus\"), \"enh\", -300);\n      } else if (itemData.masterwork) {\n        describePart(1, game.i18n.localize(\"PF1.Masterwork\"), \"enh\", -300);\n      }\n    }\n\n    // Add proficiency penalty\n    try {\n      if (!this.getProficiency(true)) {\n        describePart(-4, game.i18n.localize(\"PF1.Proficiency.Penalty\"), \"untyped\", -500);\n      }\n    } catch {\n      // Ignore proficiency incompatibility.\n    }\n\n    // Broken condition\n    if (this.isBroken) {\n      describePart(-2, game.i18n.localize(\"PF1.Broken\"), \"untyped\", -500);\n    }\n\n    // Add secondary natural attack penalty\n    if (action.naturalAttack.primary !== true && itemData.subType === \"natural\") {\n      const attackBonus = action.naturalAttack?.secondary?.attackBonus || pf1.config.naturalAttacks.secondary.penalty;\n      const secondaryModifier = RollPF.safeRollSync(`${attackBonus}`, rollData).total ?? 0;\n      describePart(secondaryModifier, game.i18n.localize(\"PF1.SecondaryAttack\"), \"untyped\", -400);\n    }\n\n    // Conditional modifiers\n    const conditionals = action.conditionals.filter(\n      (c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\")\n    );\n    for (const c of conditionals) {\n      for (const cc of c.modifiers) {\n        if (cc.subTarget === \"allAttack\") {\n          const bonusRoll = RollPF.safeRollSync(cc.formula, rollData, undefined, undefined, { minimize: true });\n          if (bonusRoll.err) {\n            console.error(\"PF1 | Bad Conditional Formula:\", cc.formula, \"\\n\", cc, \"\\n\", bonusRoll.err);\n          }\n          const isRng = !bonusRoll.isDeterministic;\n          if (bonusRoll.total == 0 && !isRng) continue;\n          const value = isRng ? bonusRoll.formula : bonusRoll.total;\n          describePart(value, c.name, cc.type, -5000);\n        }\n      }\n    }\n\n    return sources.sort((a, b) => b.sort - a.sort);\n  }\n\n  /**\n   * Return attack sources for default action.\n   *\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack.\n   */\n  get attackSources() {\n    return this.getAttackSources(this.defaultAction.id);\n  }\n\n  getAllDamageSources(actionId) {\n    return this.actions.get(actionId)?.allDamageSources;\n  }\n\n  /**\n   * Generic damage source retrieval for default action, includes default conditionals and other item specific modifiers.\n   *\n   * @returns {ItemChange[]|undefined} All relevant changes, or undefined if action was not found.\n   */\n  get allDamageSources() {\n    return this.getAllDamageSources(this.defaultAction.id);\n  }\n\n  /**\n   * Is this item inside a container?\n   *\n   * @type {boolean}\n   */\n  get inContainer() {\n    return !!this.parentItem;\n  }\n\n  /**\n   * Root item.\n   *\n   * Specifically the item at bottom of the container tree.\n   *\n   * @internal\n   * @type {Item}\n   */\n  get rootItem() {\n    return this.parentItem?.rootItem ?? this;\n  }\n}\n\n/**\n * @typedef {object} ChatData\n * Data required to render an item's summary or chat card, including descriptions and properties/tags/labels\n * @property {string} description - The item's enriched description as appropriate for the current user\n * @property {string} identifiedDescription - The item's full enriched description when identified\n * @property {string} unidentifiedDescription - The item's enriched description when unidentified\n * @property {string} [actionDescription] - The enriched description of a specific action\n * @property {string[]} properties - Additional properties/labels for the item and the action\n */\n\n/**\n * @typedef {object} SharedActionData\n * A common data object used to store and share data between stages of an action's usage.\n * @property {Event | null} event - The event that triggered the action. Defaults to `null`.\n * @property {object} rollData - The singular rollData object used for all rolls in the action\n * @property {boolean} skipDialog - Whether the user-facing dialog should get skipped. Defaults to `false`.\n * @property {boolean} chatMessage - Whether a chat message should be created at the end of the action's usage. Defaults to `true`.\n * @property {ChatMessage} message - Chat message once it is created.\n * @property {string} dice - The base dice used for the action's attack rolls. Defaults to return value of `pf1.dice.D20RollPF.standardRoll`.\n * @property {boolean} fullAttack - Whether the action is a full attack. Defaults to `true`.\n * @property {string[]} attackBonus - Bonus values to be added to the attack roll formula\n * @property {string[]} damageBonus - Bonus values to be added to the damage roll formula\n * @property {ActionUseAttack[]} attacks - Array of attacks\n * @property {pf1.actionUse.ChatAttack[]} chatAttacks - Array of chat attacks for this action's use\n * @property {string} rollMode - The roll mode to be used for the creation of the chat message. Defaults to the `core.rollMode` setting.\n * @property {boolean} useMeasureTemplate - Whether to use a measure template\n * @property {object[] | null} conditionals - Conditionals\n * @property {object} conditionalPartsCommon - Common conditionals\n * @property {boolean} casterLevelCheck - Will caster level check be needed?\n * @property {boolean} concentrationCheck - Will concentration check be needed?\n * @property {object} scriptData - Return data from script calls\n * @property {ItemAction} action - The {@link ItemAction} this use is based on\n * @property {ItemPF} item - The {@link ItemPF} this use is based on\n * @property {object} chatData - Data to be passed to {@link ChatMessage.create}, excluding `content` rendered using {@link templateData} and {@link template}.\n * @property {string} [chatTemplate] - The template to be used for the creation of the chat message.\n * @property {MeasuredTemplateDocument} template - Template document.\n * @property {object} templateData - Data used to render the chat card, passed to {@link foundry.utils.renderTemplate}.\n * @property {Token[]} targets - Targeted tokens\n */\n\n/**\n * Additional options for (action) use.\n *\n * @typedef {object} UseOptions\n * @property {boolean} [primaryAttack] - Set primary attack state\n * @property {boolean} [clCheck] - Set caster level check state\n * @property {boolean} [measureTemplate] - Set measure template state\n * @property {boolean} [powerAttack] - Set power attack state\n * @property {\"normal\"|\"2h\"|\"twohanded\"|\"oh\"|\"offhand\"} [held] - Set held option (for power attack mode).\n * @property {number} [abilityMult] - Ability score damage multiplier\n * @property {string} [ammo] - Ammo item ID to use.\n * @property {boolean} [haste] - Enable Haste\n * @property {boolean} [manyshot] - Enable Manyshot\n * @property {boolean} [rapidShot] - Enable Rapid Shot\n */\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Attack item\n *\n * Non-specific combat related actions. Mainly used to populate the combat tab.\n */\nexport class ItemAttackPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Remove held option if type changed to natural attack\n    if (changed.system.subType === \"natural\") {\n      changed.system.held = null;\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Init weapon-like type if missing\n    if (this.subType === \"weapon\") {\n      this.system.weapon ??= {};\n      this.system.weapon.category ||= \"simple\";\n      this.system.weapon.type ||= \"light\";\n    }\n  }\n\n  /**\n   * Pretend-physical item.\n   *\n   * Used in action handling only.\n   *\n   * @type {boolean}\n   */\n  get isQuasiPhysical() {\n    return [\"weapon\", \"item\"].includes(this.subType);\n  }\n\n  /**\n   * Is pretend broken?\n   *\n   * @see {@link pf1.documents.item.ItemPhysicalPF.isBroken}\n   * @type {boolean}\n   */\n  get isBroken() {\n    if (!this.isQuasiPhysical) return false;\n    return this.system.broken === true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Attacks do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n\n    // Non-weapon attacks always proficient\n    if (this.subType !== \"weapon\") return true;\n\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * Creates attack from provided item.\n   *\n   * @remarks - Only supports weapon item type.\n   * @param {Item} item - Source item\n   * @throws {Error} - On unsupported type\n   * @returns {object} - Attack item data\n   */\n  static fromItem(item) {\n    if (item.type !== \"weapon\") throw new Error(`Unsupported item type \"${item.type}\"`);\n\n    const srcData = item.toObject().system;\n\n    // Convert single-use to 1 max charge\n    const uses = srcData.uses ?? {};\n    if (uses.per === \"single\") {\n      uses.per = \"charges\";\n      uses.maxFormula = \"1\";\n    }\n\n    // Get attack template\n    const attackItem = {\n      name: item.name,\n      type: \"attack\",\n      img: item.img,\n      system: {\n        subType: \"weapon\",\n        weapon: {\n          category: srcData.subType,\n          type: srcData.weaponSubtype,\n        },\n        held: srcData.held,\n        masterwork: srcData.masterwork,\n        proficient: srcData.proficient,\n        enh: srcData.enh,\n        broken: item.isBroken,\n        timeworn: srcData.timeworn,\n        cursed: srcData.cursed,\n        artifact: srcData.artifact,\n        baseTypes: srcData.baseTypes,\n        tags: srcData.tags,\n        ammo: srcData.ammo,\n        weaponGroups: srcData.weaponGroups,\n        actions: srcData.actions ?? [],\n        material: srcData.material,\n        alignments: srcData.alignments,\n        attackNotes: srcData.attackNotes ?? [],\n        effectNotes: srcData.effectNotes ?? [],\n      },\n    };\n\n    // Ensure action IDs are correct and unique\n    for (const action of attackItem.system.actions) {\n      action._id = foundry.utils.randomID(16);\n    }\n\n    return attackItem;\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.attackTypes[this.subType];\n\n    if (this.subType === \"weapon\") {\n      // Type and subtype labels\n      const wcat = itemData.weapon?.category || \"simple\";\n      const wtype = itemData.weapon?.type || \"light\";\n\n      labels.weapon ??= {};\n      const cat = pf1.config.weaponTypes[wcat];\n      labels.weapon.category = cat?._label;\n      labels.weapon.type = cat?.[wtype];\n    }\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Buff item\n *\n * More or less ephemeral effects, such as spell buffs.\n */\nexport class ItemBuffPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Add activation time when not present\n    if (changed.system?.active && changed.system?.duration?.start === undefined) {\n      foundry.utils.setProperty(changed, \"system.duration.start\", game.time.worldTime);\n    }\n\n    if (this.isActive && changed.system?.active === false) {\n      const effect = this.effect;\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {object} context - Update context options\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.system === undefined) return; // No system data updates\n\n    // Following requires actor\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Toggle buff hook\n    const isActive = changed.system?.active;\n    if (isActive !== undefined) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, isActive);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {string} userId - User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    const isActive = this.isActive;\n    if (actor && isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, true);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    // Run script call(s)\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        const startTime = context.pf1?.startTime;\n        this.executeScriptCalls(\"toggle\", { state: false, startTime });\n      }\n    }\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Call buff removal hook\n    if (this.isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, false);\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.active;\n  }\n\n  /**\n   * Toggle active effect icon as necessary.\n   *\n   * @param {object} changed Update data\n   */\n  async _updateTrackingEffect(changed) {\n    // Toggle icon if active state has changed\n    const isActive = changed.system?.active;\n    if (isActive === undefined) return;\n\n    const oldEffect = this.effect;\n\n    // Remove old AE\n    if (!isActive) {\n      oldEffect?.delete({ render: false });\n    }\n    // Add new AE or update old AE\n    else {\n      const aeData = await this.getRawEffectData();\n      aeData.active = isActive;\n      aeData.transfer = true;\n      foundry.utils.setProperty(aeData, \"flags.pf1.tracker\", true);\n\n      // Update old\n      if (oldEffect) oldEffect.update(aeData);\n      // Create new\n      else ActiveEffect.implementation.create(aeData, { parent: this });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preDelete(context, user) {\n    const effect = this.effect;\n    if (effect) {\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n      // Delete associated effect\n      // TODO: Remove this eventually, it is only needed by old items/actors\n      if (effect?.parent !== this) {\n        await effect.delete({ pf1: { delete: this.uuid } });\n      }\n    }\n\n    await super._preDelete(context, user);\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.buffTypes[itemData.subType];\n\n    if (this.system.duration) {\n      const duration = this.system.duration;\n      const unit = pf1.config.timePeriodsShort[duration.units];\n      if (unit === \"turn\") {\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n      } else if (unit && duration.value) {\n        try {\n          // TODO: Durations can be variable, variable durations need to be supported.\n          rollData ??= this.getRollData();\n          const roll = RollPF.safeRollSync(\n            duration.value,\n            rollData,\n            { formula: duration.value, item: this },\n            {},\n            { maximize: true }\n          );\n          let value;\n          if (roll.isDeterministic) {\n            value = roll.total ?? 0;\n          } else {\n            value = pf1.utils.formula.simplify(duration.value, rollData);\n          }\n          labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n        } catch (e) {\n          console.warn(`Error with buff duration formula \"${duration.value}\"`, this, e);\n        }\n      }\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Add fake CL based on buff level\n    result.cl = result.item.level;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n  }\n\n  /**\n   * Duration of the buff in seconds.\n   *\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.interactive=false]\n   * @param {object} [options.rollData] - Roll data\n   * @returns {Promise<number|null>} Duration in seconds or null if if it has no duration.\n   */\n  async getDuration({ rollData, interactive = false } = {}) {\n    const duration = this.system.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return null;\n\n    rollData ??= this.getRollData();\n\n    // Add total duration in seconds\n    let seconds = 0;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return null;\n      rollData ??= this.getRollData();\n      // TODO: Make this roll somehow known\n      const droll = await RollPF.safeRoll(formula, rollData, undefined, undefined, { allowInteractive: interactive });\n      const duration = droll.total;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    return seconds;\n  }\n\n  /** @inheritDoc */\n  async getRawEffectData({ rollData } = {}) {\n    const createData = await super.getRawEffectData();\n\n    createData.type = \"buff\";\n\n    if (this.system.conditions?.length) createData.statuses = [...this.system.conditions];\n\n    // Add buff durations\n    const duration = this.system.duration;\n\n    let endTiming = this.system.duration.end || \"turnStart\";\n\n    let seconds;\n    if (duration.units === \"turn\") {\n      endTiming = \"turnEnd\";\n      seconds = 0;\n    } else if (duration.value) {\n      seconds = await this.getDuration({ rollData });\n    }\n\n    if (Number.isFinite(seconds)) {\n      createData.duration.seconds = seconds;\n    }\n\n    // Record timing\n    createData.system ??= {};\n    createData.system.end = endTiming;\n    createData.system.initiative = game.combat?.initiative;\n\n    return createData;\n  }\n\n  /**\n   * @override\n   */\n  getRollData(options) {\n    const result = super.getRollData(options);\n\n    result.item.level = this.system.level;\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    return this.system.active ?? false;\n  }\n\n  /**\n   * Retrieve associated tracking Active Effect\n   *\n   * @type {ActiveEffect|undefined}\n   */\n  get effect() {\n    return this.effects.find((ae) => ae.getFlag(\"pf1\", \"tracker\") === true);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.active\": active }, context);\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Class-like item\n *\n * For base classes, NPC classes, racial HD, and mythic paths.\n */\nexport class ItemClassPF extends ItemPF {\n  /** @override */\n  static system = Object.freeze({\n    ...super.system,\n    hasActions: false,\n    subtypeName: true,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set level marker\n    if (changed.system.level !== undefined && changed.system.level !== this.system.level) {\n      context.pf1 ??= {};\n      context.pf1.item ??= {};\n      context.pf1.item[this.id] ??= {};\n      context.pf1.item[this.id].oldLevel = this.system.level;\n    }\n\n    // Ensure class associations remain in level order\n    const classLinks = changed.system.links?.classAssociations;\n    if (classLinks?.length) {\n      classLinks.forEach((link) => (link.level ||= 1));\n      classLinks.sort((a, b) => a.level - b.level);\n    }\n  }\n\n  /**\n   * Add or remove class associations on level change.\n   *\n   * @param {number} curLevel Current level, before the change.\n   * @param {number} newLevel New level, after the change.\n   * @param {object} [options] - Additional options\n   * @param {\"delete\"|\"update\"|\"create\"} [options.event] - Relevant event\n   */\n  async _onLevelChange(curLevel = 0, newLevel = 0, { event } = {}) {\n    const actor = this.actor;\n    if (!actor) return;\n\n    if (curLevel === newLevel) return;\n\n    // Add items associated to this class\n    if (newLevel > curLevel) {\n      const associations = this.system.links?.classAssociations ?? [];\n      const newAssociations = associations.filter((link) => link.level > curLevel && link.level <= newLevel);\n\n      const sources = new Map();\n\n      const newItems = [];\n      for (const link of newAssociations) {\n        const item = await fromUuid(link.uuid);\n        if (!item) {\n          const msg = `Could not find class association: ${link.uuid}`;\n          console.warn(link.uuid, msg, this);\n          ui.notifications?.warn(msg, { console: false });\n          continue;\n        }\n\n        sources.set(item.uuid, link);\n\n        // Apply Foundry's transformations for importing (automatically calls .toObject())\n        // This adds _stats.compendiumSource, removes extraneous permissions, resets sorting, etc.\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n        // Set associated class\n        itemData.system.class = this.system.tag;\n\n        newItems.push({ data: itemData, link });\n      }\n\n      if (newItems.length) {\n        const itemsCreationData = newItems.sort((a, b) => a.link.level - b.link.level).map((o) => o.data);\n        // Put new items at end of their types\n        const _typeSorting = {};\n        for (const item of itemsCreationData) {\n          _typeSorting[item.type] ??= actor.itemTypes[item.type].sort((a, b) => b.sort - a.sort)[0]?.sort ?? 0;\n          _typeSorting[item.type] += CONST.SORT_INTEGER_DENSITY;\n          item.sort = _typeSorting[item.type];\n        }\n        const items = await actor.createEmbeddedDocuments(\"Item\", itemsCreationData);\n\n        const classAssociations = {};\n        const updateData = { flags: { pf1: { links: { classAssociations } } } };\n        for (const item of items) {\n          const link = sources.get(item._stats?.compendiumSource);\n\n          // Set class association flags\n          classAssociations[item.id] = link?.level ?? 1;\n        }\n\n        await this.update(updateData, { render: false });\n      }\n    }\n\n    // Remove items associated to this class\n    if (newLevel < curLevel) {\n      const associations = foundry.utils.deepClone(this.getFlag(\"pf1\", \"links.classAssociations\") || {});\n\n      const itemIds = [];\n      for (const [id, level] of Object.entries(associations)) {\n        const item = actor.items.get(id);\n        if (!item) {\n          delete associations[id];\n          continue;\n        }\n\n        if (level > newLevel) {\n          itemIds.push(item.id);\n          delete associations[id];\n        }\n      }\n\n      if (event !== \"delete\") await this.setFlag(\"pf1\", \"links.classAssociations\", associations);\n\n      await Item.implementation.deleteDocuments(itemIds, { parent: actor });\n    }\n\n    // Call level change hook\n    Hooks.callAll(\"pf1ClassLevelChange\", this.actor, this, curLevel, newLevel);\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    const itemData = this.system;\n    // Reset cached HD/MT\n    // Can't prepare here as the actor uses this info before item preparation is done.\n    itemData.hitDice = undefined;\n    itemData.mythicTier = undefined;\n\n    // Soft fill default casting details when missing\n    if (itemData.casting?.type) {\n      itemData.casting.progression ??= \"high\";\n      itemData.casting.ability ??= \"int\";\n      itemData.casting.spells ??= \"arcane\";\n      itemData.casting.domainSlots ??= 1;\n      itemData.casting.cantrips ??= true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const itemData = this.system;\n\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\");\n\n    // Prepare class base save\n    {\n      const saveFormulas = useFractional\n        ? pf1.config.classFractionalSavingThrowFormulas\n        : pf1.config.classSavingThrowFormulas;\n\n      for (const save of Object.keys(pf1.config.savingThrows)) {\n        const classType = itemData.subType || \"base\";\n        let formula;\n        const saveData = itemData.savingThrows[save];\n        const saveType = saveData.value;\n        if (saveType === \"custom\") {\n          formula = saveData.custom || \"0\";\n        } else {\n          formula = saveFormulas[classType][saveType];\n        }\n        if (formula == null) formula = \"0\";\n        const total = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n        saveData.base = total;\n        if (useFractional) saveData.good = saveFormulas[classType].goodSave === true && saveType === \"high\";\n      }\n    }\n\n    // Prepare BAB\n    {\n      const babFormulas = useFractional ? pf1.config.classFractionalBABFormulas : pf1.config.classBABFormulas;\n\n      const babType = itemData.bab;\n      let formula;\n      if (babType === \"custom\") {\n        formula = itemData.babFormula || \"0\";\n      } else {\n        formula = babFormulas[babType] || \"0\";\n      }\n      itemData.babBase = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n    }\n\n    // Feed info back to actor\n    // Unlinked actors sometimes call item prep when actor isn't prepped and they're lacking .system\n    if (this.actor?.system) this._registerOnActor();\n  }\n\n  /**\n   * Register this item on actor in relevant places.\n   *\n   * @internal\n   * @returns {void}\n   */\n  _registerOnActor() {\n    const actor = this.actor;\n    if (!actor.classes) return; // actor prep has not run for some reason (unlinked actor)\n\n    const itemData = this.system;\n\n    // Don't record a link of tag is missing or empty.\n    if (!itemData.tag) return void console.error(\"Class doesn't have a tag\", this);\n\n    if (!itemData.subType) console.warn(`${this.name} lacks class type`, this);\n\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const classHpConfig = hpConfig.getClassHD(this);\n\n    const isBaseClass = (itemData.subType || \"base\") === \"base\";\n    const isMythic = itemData.subType === \"mythic\";\n\n    actor.classes[itemData.tag] = {\n      _id: this.id,\n      level: itemData.level,\n      unlevel: itemData.level,\n      name: this.name,\n      hd: itemData.hd,\n      hitDice: this.hitDice,\n      mythicTier: this.mythicTier,\n      bab: itemData.bab,\n      hp: classHpConfig.auto,\n      type: itemData.subType,\n      isBase: isBaseClass,\n      isMythic,\n      savingThrows: {\n        fort: itemData.savingThrows.fort.base,\n        ref: itemData.savingThrows.ref.base,\n        will: itemData.savingThrows.will.base,\n      },\n      fc: {\n        hp: isBaseClass ? itemData.fc.hp.value : 0,\n        skill: isBaseClass ? itemData.fc.skill.value : 0,\n        alt: isBaseClass ? itemData.fc.alt.value : 0,\n      },\n    };\n  }\n\n  /**\n   * Hit Dice\n   *\n   * @type {number}\n   */\n  get hitDice() {\n    const itemData = this.system;\n    if (itemData.hitDice === undefined) {\n      if (itemData.subType === \"mythic\") {\n        itemData.hitDice = 0;\n      } else if (itemData.customHD?.length > 0) {\n        const rollData = { item: { level: this.system.level } };\n        itemData.hitDice = RollPF.safeRollSync(itemData.customHD, rollData).total;\n      } else {\n        itemData.hitDice = itemData.level;\n      }\n    }\n\n    return itemData.hitDice;\n  }\n\n  /**\n   * Mythic Tier\n   *\n   * @type {number}\n   */\n  get mythicTier() {\n    this.system.mythicTier ??= this.subType === \"mythic\" ? this.system.level : 0;\n    return this.system.mythicTier;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  getLabels({ rollData, isolated } = {}) {\n    const labels = super.getLabels({ rollData, isolated });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.classTypes[itemData.subType];\n\n    labels.bab = pf1.config.classBAB[itemData.bab];\n    labels.saves = {\n      fort: pf1.config.classSavingThrows[itemData.savingThrows?.fort?.value],\n      ref: pf1.config.classSavingThrows[itemData.savingThrows?.ref?.value],\n      will: pf1.config.classSavingThrows[itemData.savingThrows?.will?.value],\n    };\n\n    labels.hitDie = itemData.hd;\n    if (itemData.subType !== \"mythic\") labels.hitDie = game.i18n.format(\"PF1.DieSize\", { size: itemData.hd });\n\n    labels.hasFCB = itemData.fc?.hp > 0 || itemData.fc?.skill > 0 || itemData.fc?.alt > 0;\n\n    // Remove labels that are meaningless for classes\n    delete labels.activation;\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Abstract class for physical items.\n */\nexport class ItemPhysicalPF extends ItemPF {\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return;\n\n    // Convert .hp.value into .hp.offset\n    const hp = changed.system?.hp;\n    if (hp?.value !== undefined) {\n      let max = this.system.hp?.max ?? 0;\n      const oldBase = this.system.hp?.base;\n      if (hp.base !== undefined && hp.base !== oldBase) {\n        max += hp.base - oldBase;\n      }\n      hp.offset ??= hp.value - max;\n      delete hp.value;\n    }\n\n    await this._resetChargesOnQuantityUpdate(changed);\n  }\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  static system = Object.freeze(foundry.utils.mergeObject(super.system, { isPhysical: true }, { inplace: false }));\n\n  /**\n   * @internal\n   * @param {object} system - System data\n   */\n  _preUpdateNumericValueGuard(system) {\n    super._preUpdateNumericValueGuard(system);\n\n    if (system.quantity !== undefined && (!Number.isSafeInteger(system.quantity) || system.quantity < 0)) {\n      system.quantity = 0;\n    }\n    if (system.price !== undefined && !Number.isFinite(system.price)) {\n      system.price = 0;\n    }\n    if (system.unidentified?.price !== undefined && !Number.isFinite(system.unidentified.price)) {\n      system.unidentified.price = 0;\n    }\n    if (system.hardness !== undefined && (!Number.isSafeInteger(system.hardness) || system.hardness < 0)) {\n      system.hardness = 0;\n    }\n    if (system.hp?.value !== undefined && !Number.isSafeInteger(system.hp.value)) {\n      system.hp.value = 0;\n    }\n    if (system.hp?.max !== undefined && (!Number.isSafeInteger(system.hp.max) || system.hp.max < 0)) {\n      system.hp.max = 0;\n    }\n  }\n\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const extraData = {};\n\n    // Items for NPCs should be unidentified by default if unknown\n    if (\n      data.system?.identified === undefined &&\n      this.actor && // Has actor, ignore otherwise\n      this.actor.type !== \"character\" && // Any NPCs\n      !this.actor?.hasPlayerOwner // Player owned actors ignore this\n    ) {\n      extraData[\"system.identified\"] = false;\n    }\n\n    // No HP defined, old or new\n    if (data.system?.hp?.base === undefined && data.system?.hp?.max === undefined) {\n      extraData[\"system.hp.base\"] = 10;\n    }\n\n    if (!foundry.utils.isEmpty(extraData)) {\n      this.updateSource(extraData);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.equipped === true) {\n      this.executeScriptCalls(\"equip\", { equipped: true });\n    }\n\n    // Quantity change\n    const quantity = this.system.quantity || 0;\n    if (quantity > 0) {\n      this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: 0, new: quantity } });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'equip' script calls\n    const equipped = changed.system?.equipped;\n    if (equipped != null) {\n      this.executeScriptCalls(\"equip\", { equipped });\n    }\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeQuantity' script calls\n    const oldQuantity = this._memoryVariables?.quantity;\n    if (oldQuantity !== undefined) {\n      const quantity = {\n        previous: oldQuantity,\n        new: this.system.quantity,\n      };\n\n      if (quantity.new != null && quantity.new !== quantity.previous) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity });\n      }\n    }\n\n    // Must call super last or the memory data gets cleared too soon\n    super._onMemorizedUpdate(changed, context);\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.equipped === true) {\n        this.executeScriptCalls(\"equip\", { equipped: false });\n      }\n\n      if (this.system.quantity > 0) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: this.system.quantity, new: 0 } });\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.equipped;\n  }\n\n  /**\n   * Reset charges when quantity is changed to simulate a stack.\n   *\n   * - If charges are 0\n   * - ... and quantity is reduced, reset to max\n   *\n   * @param {object} changed - Changed data\n   */\n  async _resetChargesOnQuantityUpdate(changed) {\n    // Don't care if charges are linked\n    if (this.links.charges) return;\n\n    // Only if quantity changed\n    const newQuantity = changed.system.quantity;\n    if (newQuantity === undefined) return;\n    // Don't touch if quantity is increased or remains the same\n    if ((newQuantity || 0) >= (this.system.quantity || 0)) return;\n\n    // Avoid overwriting value if the update is modifying it.\n    if (changed.system.uses?.value !== undefined) return;\n\n    const oldUses = this.system.uses ?? {};\n    if (oldUses.per && oldUses.value === 0 && oldUses.max > 0) {\n      const update = await this.recharge({ period: \"any\", commit: false });\n      if (update) {\n        changed.system.uses ??= {};\n        changed.system.uses.value = update.system.uses.value;\n      }\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Set visible name\n    if (this.showUnidentifiedData) {\n      this.name = this.system.unidentified?.name || this._source.name;\n    } else {\n      this.name = this._source.name;\n    }\n\n    // Ensure some base data has values\n    this.system.size ||= \"med\";\n    this.system.weight ??= {};\n    this.system.weight.value ||= 0;\n    this.system.quantity ||= 0;\n\n    super.prepareBaseData();\n\n    const itemData = this.system;\n    // Init base weight values in case they're missing.\n    itemData.weight ??= {};\n    itemData.weight.value ??= 0;\n    itemData.weight.total = 0;\n    itemData.weight.converted ??= {};\n\n    this.prepareDurability();\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    // Physical items\n    if (this.isPhysical && this.showUnidentifiedData) {\n      // Set unidentified description for players\n      this.system.description.value = this.system.description.unidentified;\n    }\n  }\n\n  /**\n   * Prepare dependent data for contained items.\n   *\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n    this.prepareWeight();\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.equipped\": active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Determines if the item is equipped.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.equipped || false;\n  }\n\n  /**\n   * Prepare hardness and hit points\n   *\n   * @internal\n   */\n  prepareDurability() {\n    const system = this.system;\n\n    const enh = system.enh || system.armor?.enh || 0;\n    const hardness = this._source.system.hardness || 0;\n\n    system.hardness = {\n      base: hardness,\n      total: hardness + pf1.config.itemEnhancementMods.hardness * enh,\n    };\n\n    // Establish HP structure\n    system.hp ??= {};\n    system.hp.base ??= 10;\n    system.hp.offset ||= 0;\n    system.hp.max = this._sizeAdjustedHealth() + pf1.config.itemEnhancementMods.hp * enh;\n    system.hp.value = Math.max(0, system.hp.max + system.hp.offset);\n  }\n\n  /**\n   * Adjust HP value by item size.\n   *\n   * In reference to rules established at Table 7-12 of CRB p. 175\n   *\n   * @see {@link https://aonprd.com/Rules.aspx?ID=126}\n   *\n   * @internal\n   * @returns {number} - Size adjusted health\n   */\n  _sizeAdjustedHealth() {\n    let hp = this.system.hp?.base || 10;\n\n    // Adjust HP per size\n    let itemSize = Object.keys(pf1.config.actorSizes).indexOf(this.system.size || \"med\");\n    if (itemSize < 0) itemSize = 4;\n    while (itemSize !== 4) {\n      if (itemSize > 4) {\n        hp *= 2;\n        itemSize--;\n      } else if (itemSize < 4) {\n        hp /= 2;\n        itemSize++;\n      }\n    }\n\n    return Math.max(1, Math.floor(hp));\n  }\n\n  /**\n   * Prepare this item's {@link ItemWeightData}\n   *\n   * @param {boolean} [initialize=true] - Initialize. Only used by containers.\n   */\n  prepareWeight(initialize = true) {\n    const itemData = this.system;\n    const weight = itemData.weight;\n\n    // Adjust base weight\n    // Altering weight.value directly will corrupt the weight\n    const baseWeight = weight.value * this.getWeightMultiplier();\n\n    if (initialize) weight.total = 0;\n\n    weight.total += baseWeight * itemData.quantity;\n\n    // Convert weight according metric system (lb vs kg)\n    weight.converted.value = pf1.utils.convertWeight(baseWeight);\n    weight.converted.total = pf1.utils.convertWeight(weight.total);\n  }\n\n  /**\n   * Return weight multiplier affecting this item.\n   *\n   * Such as item size dictating how heavy an armor is.\n   *\n   * @returns {number} - Multiplier, 1 for most items regardless of size.\n   */\n  getWeightMultiplier() {\n    return 1;\n  }\n\n  /**\n   * Weight scaling\n   *\n   * For use with {@link getWeightMultiplier()} across item types\n   *\n   * @internal\n   * @returns {number} - Weight multiplier\n   */\n  _getArmorWeightMultiplier() {\n    // Scale weight for weapons, armor and shields\n    const actorSize = Object.keys(pf1.config.sizeChart)[this.actor?.system.traits?.size?.value];\n    const itemSize = this.system.size || \"med\";\n    const size = this.system.resizing ? actorSize || itemSize : itemSize;\n    const mult = pf1.config.armorWeight[size];\n    return mult ?? 1;\n  }\n\n  /**\n   * Returns the displayed value of an item according to multiple options\n   *\n   * @param {object} [options] - Various optional parameters affecting value calculations\n   * @param {boolean} [options.recursive=true] - Whether the value of contained items should be included\n   * @param {number} [options.sellValue=0.5] - The sell value multiplier\n   * @param {boolean} [options.inLowestDenomination=false] - Whether the value should be returned in the lowest denomination\n   * @param {boolean} [options.forceUnidentified=false] - Override whether the value should use the unidentified price\n   * @param {boolean} [options.single=false] - Return value of singular item instead of the actual stack. Disables recursive option.\n   * @param {boolean} [options.identical=false] - Treat all items in stack as identical (same number of charges).\n   * @param {boolean} [options.maximized=false] - Pretend as if the items were fresh  (full charges)\n   * @returns {number} The item's value\n   */\n  getValue({\n    // eslint-disable-next-line no-unused-vars\n    recursive = true, // Not used by all types, so unused in this base implementation\n    sellValue = 0.5,\n    inLowestDenomination = false,\n    forceUnidentified = false,\n    single = false,\n    identical = false,\n    maximized = false,\n  } = {}) {\n    const hasFiniteCharges = this.hasFiniteCharges;\n    const maxChargesValue = hasFiniteCharges ? this.maxCharges : 0;\n    const remainingCharges = hasFiniteCharges ? (maximized ? maxChargesValue : this.charges) : 0;\n\n    const getActualValue = (identified = true, maxCharges = false) => {\n      let value = 0;\n      if (identified) value = this.system.price || 0;\n      else value = this.system.unidentified?.price || 0;\n\n      // Add charge price\n      if (identified && hasFiniteCharges) {\n        let charges = maxCharges ? maxChargesValue : remainingCharges;\n        if (!Number.isFinite(charges) || charges < 0) charges = 0;\n        value += (this.system.uses?.pricePerUse ?? 0) * charges;\n      }\n\n      if (inLowestDenomination) value *= pf1.config.currency.standardRate || 1;\n\n      if (this.isBroken) value *= pf1.config.costMultipliers.broken;\n      if (this.system.timeworn) {\n        if (hasFiniteCharges && remainingCharges === 0) value *= pf1.config.costMultipliers.depleted;\n        else value *= pf1.config.costMultipliers.timeworn;\n      }\n      return value;\n    };\n\n    // Increase value by quantity\n    const isIdentified = forceUnidentified ? false : !this.showUnidentifiedData;\n    const quantity = single ? 1 : this.system.quantity || 0;\n    let result = getActualValue(isIdentified);\n    if (quantity > 1) {\n      // If charged item, add rest of the stack as if they had full charges\n      if (hasFiniteCharges && identical !== true) result += getActualValue(isIdentified, true) * (quantity - 1);\n      // Otherwise just multiply\n      else result *= quantity;\n    }\n\n    // Modify sell value\n    if (!(this.type === \"loot\" && [\"tradeGoods\", \"treasure\"].includes(this.subType))) result *= sellValue;\n\n    return result;\n  }\n\n  /**\n   * @remarks\n   * Checks if the item is equipped and has quantity.\n   * @inheritDoc\n   */\n  get canUse() {\n    return this.system.equipped && this.system.quantity > 0;\n  }\n\n  /**\n   * Broken state\n   *\n   * Tests both explicit broken override and current health.\n   *\n   * @type {boolean}\n   */\n  get isBroken() {\n    if (this.system.broken) return true;\n\n    const hp = this.system.hp ?? {};\n    const hpMax = hp.max ?? 0;\n    if (hpMax > 0) {\n      const hpCur = hp.value ?? 0;\n      const brokenThreshold = Math.floor(hpMax / 2);\n      return hpCur <= brokenThreshold;\n    }\n\n    return false;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.broken = this.isBroken;\n\n    const itemData = this.system;\n\n    // Equipped label\n    const checkYes = '<i class=\"fa-solid fa-check\"></i>';\n    const checkNo = '<i class=\"fa-solid fa-times\"></i>';\n    labels.equipped = \"\";\n    if (itemData.equipped === true) labels.equipped = checkYes;\n    else labels.equipped = checkNo;\n\n    // Carried label\n    labels.carried = \"\";\n    if (itemData.carried === true) labels.carried = checkYes;\n    else labels.carried = checkNo;\n\n    // Identified label\n    labels.identified = \"\";\n    if (itemData.identified === true) labels.identified = checkYes;\n    else labels.identified = checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n\n    // Auto-unequip\n    if (!this.canEquip) this.system.equipped = false;\n  }\n\n  /**\n   * Can equip currently?\n   *\n   * @type {boolean}\n   */\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  /**\n   * @remarks\n   * Identified state is the only thing that can alter the result.\n   * @override\n   * @inheritDoc\n   */\n  getName(forcePlayerPerspective = false) {\n    if (game.user.isGM && forcePlayerPerspective) {\n      if (this.system.identified === false) return this.system.unidentified?.name || this.name;\n    }\n    return this.name;\n  }\n\n  get showUnidentifiedData() {\n    return !game.user.isGM && this.system.identified === false;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Convert size string to number\n    result.item.size = Object.keys(pf1.config.actorSizes).indexOf(result.item.size);\n\n    // Overwrite broken state\n    result.item.broken = this.isBroken;\n  }\n}\n\n/**\n * @typedef {object} ItemWeightData\n * An item's `weight` data. The only property to be stored is `value`, from which all other values are derived.\n * @see {@link ItemPF.prepareWeight} for generation\n * @remarks A weight property is considered \"effective\" if it is the value that is added to its parent's weight.\n *          An item with a weight of 10 lbs in a container with 50% weight reduction would increase\n *          the container's effective `weight.total` by 5 lbs, but increases the container's `weight.contents` weight by 10 lbs.\n * @property {number} value - The weight of a single item instance, in lbs\n * @property {number} total - The effective total weight of the item (including quantity and contents), in lbs\n * @property {number} [currency] - Effective weight of contained currency for containers, in lbs\n * @property {number} [contents] - Weight of contained items and currency, in lbs\n * @property {object} converted - Weight of this item, converted to the current unit system\n * @property {number} converted.value - The weight of a single item instance, in world units\n * @property {number} converted.total - The effective total weight of the item (including quantity and contents), in world units\n * @property {number} [converted.contents] - Weight of contained items and currency, in world units\n */\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Consumable item\n *\n * For potions, wands, scrolls, drugs, etc.\n */\nexport class ItemConsumablePF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @inheritDoc\n   */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.consumableTypes[this.subType];\n\n    return labels;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Container item\n *\n * Bags, backpacks, chests, etc.\n */\nexport class ItemContainerPF extends ItemPhysicalPF {\n  /** @override */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: true,\n    hasActions: false,\n  });\n\n  _initialize() {\n    this.items = new Collection();\n\n    super._initialize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.recursive === false || context.diff === false) return;\n\n    // Ensure contained item updates adhere to reason\n    const items = changed.system.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        await this._containedItemUpdate(itemId, itemData, items, context);\n      }\n    }\n  }\n\n  /**\n   * Handle contained item CRUD\n   *\n   * @internal\n   * @param {string} itemId - Item ID\n   * @param {object|null} itemData - Item's update data\n   * @param {object} items - Parent's items update object\n   * @param {object} context - Context\n   */\n  async _containedItemUpdate(itemId, itemData, items, context) {\n    // Deletion\n    if (itemId.startsWith(\"-=\")) {\n      /** @type {ItemPF} */\n      const oldItem = this.items.get(itemId.replace(/^-=/, \"\"));\n\n      if (oldItem) {\n        await oldItem._preDelete(context, game.user);\n        // TODO: Run pre-delete on everything contained by this\n      }\n      return;\n    }\n\n    /** @type {ItemPF} */\n    const oldItem = this.items.get(itemId);\n\n    let diff;\n    // Existing contained item\n    if (oldItem) {\n      await oldItem._preUpdate(itemData, context, game.user);\n      diff = oldItem.updateSource(itemData, { dryRun: true, fallback: false });\n      // Remove lingering .data if present, the above line prunes this out if done externally\n      if (\"data\" in this.system.items[itemId]) diff[\"-=data\"] = null;\n    }\n    // New contained item\n    else {\n      /** @type {ItemPF} */\n      const temp = new Item.implementation(itemData);\n      await temp._preCreate(itemData, context, game.user);\n      diff = temp.toObject();\n    }\n\n    items[itemId] = diff;\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    // Call various document workflows for changed items\n    const items = changed.system?.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        const item = this.items.get(itemId);\n        try {\n          if (itemId.startsWith(\"-=\")) {\n            // TODO: Item reference is no longer available for _onDelete workflow\n            // item._onDelete(options, userId);\n          } else if (itemData._id) {\n            item._onCreate(itemData, context, userId);\n          } else {\n            item._onUpdate(itemData, context, userId);\n          }\n        } catch (err) {\n          console.error(err, { parent: this, item });\n        }\n\n        // TODO: createDocument, deleteDocument, updateDocument hooks\n      }\n    }\n\n    super._onUpdate(changed, context, userId);\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Set base weight to weight of coins, which can be calculated without knowing contained items\n    const weightReduction = (100 - (this.system.weight?.reduction?.percent ?? 0)) / 100;\n    this.system.weight.currency = this._calculateCoinWeight() * weightReduction;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    this._prepareInventory();\n\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Prepare dependent data for contained items.\n   *\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    // Update dependant data and resources\n    for (const item of this.items) {\n      item._prepareDependentData(final);\n    }\n\n    super._prepareDependentData(final);\n  }\n\n  /**\n   * Prepare .items collection for contained items.\n   *\n   * @private\n   */\n  _prepareInventory() {\n    const prior = this.items;\n    const collection = new Collection();\n    this.system.items ??= {}; // Shim for items that haven't had template.json applied to them\n    for (const [itemId, itemData] of Object.entries(this.system.items)) {\n      try {\n        let item = prior?.get(itemId);\n        if (item) {\n          item.updateSource(new Item.implementation(itemData, { strict: false }).toObject(), { recursive: false });\n        } else {\n          // Guard against corrupt data\n          itemData.name ||= \"INVALID\";\n          itemData._id ||= itemId;\n          itemData.type ||= \"loot\";\n\n          // Create false item\n          item = new Item.implementation(itemData, { parent: this.actor, strict: false });\n          item.parentItem = this;\n        }\n        item.reset();\n        collection.set(itemId, item);\n      } catch (err) {\n        console.error(\"Error preparing contained item:\", { id: itemId, data: itemData }, this);\n        throw err;\n      }\n    }\n\n    /** @type {Collection<ItemPF>} */\n    this.items = collection;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    this.system.weight ??= {};\n    /** @type {ItemWeightData} */\n    const weight = this.system.weight;\n    weight.total = 0; // Reset\n\n    // Percentile weight reduction\n    const weightMult = (100 - (weight.reduction?.percent || 0)) / 100;\n\n    const currencyWeight = this._calculateCoinWeight();\n    weight.currency = currencyWeight * weightMult;\n\n    // Total unreduced weight of contents\n    weight.contents = this.items.reduce((total, item) => total + item.system.weight.total, 0);\n    weight.contents += currencyWeight;\n\n    const reductionFlat = weight.reduction?.value ?? 0;\n    weight.total += Math.max(0, weight.contents * weightMult - reductionFlat);\n\n    // Apply quantity\n    weight.total *= this.system.quantity || 0;\n\n    weight.converted.reduction = pf1.utils.convertWeight(reductionFlat);\n    weight.converted.contents = pf1.utils.convertWeight(weight.contents);\n    weight.converted.currency = pf1.utils.convertWeight(weight.currency);\n\n    super.prepareWeight(false);\n  }\n\n  /**\n   * @protected\n   * @param {object[]} itemsData Item creation data\n   * @param {object} [options={}] Additional options\n   * @returns {Promise<this>} Promise to the updated document.\n   */\n  async createContainerContent(itemsData, options = { renderSheet: false }) {\n    itemsData = itemsData instanceof Array ? itemsData : [itemsData];\n\n    const itemOptions = foundry.utils.deepClone(options);\n    const user = game.user;\n\n    const actuallyCreated = [];\n    const updateData = { system: { items: {} } };\n\n    // Iterate over data to create\n    for (const itemData of itemsData) {\n      // Find unique ID\n      do {\n        itemData._id = foundry.utils.randomID(16);\n      } while (this.system.items[itemData._id] !== undefined);\n\n      // Create temporary item\n      const item = new Item.implementation(itemData);\n\n      // Run pre-create workflow\n      let allowed = (await item._preCreate(itemData, options, game.user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(\"preCreateItem\", item, itemData, itemOptions, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | Item creation prevented during pre-create`);\n        continue;\n      }\n\n      // Update _stats\n      item.updateSource({\n        _stats: {\n          coreVersion: game.version,\n          systemVersion: game.system.version,\n          createdTime: Date.now(),\n          lastModifiedBy: user.id,\n        },\n      });\n\n      updateData.system.items[itemData._id] = item.toObject();\n      actuallyCreated.push(itemData._id);\n    }\n\n    await this.update(updateData, { pf1: { createContained: actuallyCreated } });\n\n    // Mimic createEmbeddedDocuments()\n    const created = this.items.filter((i) => actuallyCreated.includes(i.id));\n    if (options.renderSheet) created.forEach((i) => i.sheet.render(true));\n    return created;\n  }\n\n  async deleteContainerContent(data, context = {}) {\n    const ids = new Set(data instanceof Array ? data : [data]);\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n\n    const updateData = { system: { items: {} } };\n\n    const actuallyDeleted = [];\n\n    // Iterate over data to delete\n    for (const id of ids) {\n      const item = this.items.get(id);\n\n      // Run pre-delete workflow\n      let allowed = (await item._preDelete(context, user)) ?? true;\n      allowed &&= context.noHook || Hooks.call(`preDelete${embeddedName}`, item, context, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | ${embeddedName} deletion prevented during pre-delete`);\n        continue;\n      }\n\n      updateData.system.items[`-=${id}`] = null;\n      actuallyDeleted.push(id);\n    }\n\n    await this.update(updateData, { pf1: { removeContained: actuallyDeleted } });\n  }\n\n  async updateContainerContents(data) {\n    data = data instanceof Array ? data : [data];\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n    const options = { diff: true };\n\n    const actuallyUpdated = [];\n    const updateData = { system: { items: {} } };\n\n    // Difference each update against existing data\n    for (const changes of data) {\n      if (!changes._id) throw new Error(\"You must provide an id for every Embedded Document in an update operation\");\n\n      const item = this.items.get(changes._id);\n\n      let diff = {};\n      try {\n        diff = item.updateSource(changes, { dryRun: true, fallback: false });\n      } catch (err) {\n        console.error(err);\n        continue;\n      }\n\n      // Run pre-update workflow\n      let allowed = (await item._preUpdate(diff, options, user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(`preUpdate${embeddedName}`, item, diff, options, user.id);\n      if (allowed === false) {\n        console.debug(`PF1 | ${embeddedName} update prevented during pre-update`);\n        continue;\n      }\n\n      diff._stats = {\n        coreVersion: game.version,\n        systemVersion: game.system.version,\n        modifiedTime: Date.now(),\n        lastModifiedBy: user.id,\n      };\n\n      updateData.system.items[changes._id] = diff;\n      actuallyUpdated.push(changes._id);\n    }\n\n    await this.update(updateData, { pf1: { updateContained: actuallyUpdated } });\n  }\n\n  /**\n   * Returns the currency this item contains\n   *\n   * @param {object} [options] - Additional options affecting how the value is returned\n   * @param {boolean} [options.inLowestDenomination=false] - Whether to return the value in copper, or in gold (default)\n   * @returns {number} The total amount of currency this item contains, in gold pieces\n   */\n  getTotalCurrency({ inLowestDenomination = false } = {}) {\n    const cc = pf1.config.currency;\n\n    let total = 0;\n    for (let [unit, value] of Object.entries(this.system.currency || {})) {\n      value = Math.max(0, value || 0);\n      if (value == 0) continue;\n      total += value * (cc.rate[unit] || 1);\n    }\n\n    return inLowestDenomination ? total : total / cc.standardRate;\n  }\n\n  /**\n   * Converts currencies to the given currency type\n   *\n   * @param {CoinType} type - Converts as much currency as possible to this type.\n   * @returns {Promise<this>} The updated item\n   */\n  convertCurrency(type = \"pp\") {\n    const cp = this.getTotalCurrency({ inLowestDenomination: true });\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { currency } });\n  }\n\n  /**\n   * @returns {number} Weight of coins on the item.\n   * @private\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /** @inheritDoc */\n  getValue({ recursive = false, inLowestDenomination = false, ...options } = {}) {\n    if (options.single) recursive = false;\n    const fullOptions = { recursive, inLowestDenomination, ...options };\n    let result = super.getValue(fullOptions);\n\n    if (!recursive) return result;\n\n    // Add item's contained currencies at full value\n    result += this.getTotalCurrency({ inLowestDenomination });\n\n    // Add item's content items' values\n    for (const item of this.items) {\n      result += item.getValue(fullOptions);\n    }\n\n    return result;\n  }\n\n  /** @inheritDoc */\n  async getChatData({ chatcard, rollData } = {}) {\n    const context = await super.getChatData({ chatcard, rollData });\n    // Get contents value\n    const cpValue =\n      this.getValue({ sellValue: 1, recursive: true, inLowestDenomination: true }) -\n      this.getValue({ sellValue: 1, recursive: false, inLowestDenomination: true });\n    const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    const value =\n      game.i18n.localize(\"PF1.Containers.Contents.Value\") + \": \" + game.i18n.format(\"PF1.SplitValue\", totalValue);\n    context.properties.push(value);\n    const currency = { ...this.system.currency };\n    currency.gp ||= 0;\n    currency.gp += currency.pp * 10;\n    const coins = game.i18n.localize(\"PF1.Currency.Label\") + \": \" + game.i18n.format(\"PF1.SplitValue\", currency);\n    context.properties.push(coins);\n\n    return context;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Equipment item\n *\n * Armor, shields, wondrous items, etc.\n */\nexport class ItemEquipmentPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set equipment subtype and slot\n    const type = changed.system?.subType;\n    if (type !== undefined && type !== this.system.subType) {\n      // Set subtype\n      const subtype = changed.system?.equipmentSubtype ?? this.system.equipmentSubtype ?? \"\";\n      const subtypes = Object.keys(pf1.config.equipmentTypes[type] ?? {}).filter((o) => !o.startsWith(\"_\"));\n\n      // Current subtype is not valid for current type\n      if (!subtypes.includes(subtype)) {\n        // Clear if no subtypes exist\n        if (subtypes.length === 0) {\n          changed.system.equipmentSubtype = \"\";\n        }\n        // Set to first subtype if no valid subtype is set\n        else if (subtypes.length > 0) {\n          changed.system.equipmentSubtype = subtypes[0];\n        }\n      }\n\n      // Set slot\n      const slot = changed.system?.slot ?? this.system.slot ?? \"\";\n      const slotType = type === \"other\" ? \"wondrous\" : type; // Fix \"other\" item default slot type\n      const slotTypes = Object.keys(pf1.config.equipmentSlots[slotType] ?? {});\n      if (!slot || !slotTypes.includes(slot)) {\n        changed.system.slot = slotTypes[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    let eType = this.subType;\n    const typeKeys = Object.keys(pf1.config.equipmentTypes);\n    if (!typeKeys.includes(eType)) eType = typeKeys[0];\n\n    let eSubtype = this.system.equipmentSubtype;\n    const subtypeKeys = Object.keys(pf1.config.equipmentTypes[eType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(eSubtype)) eSubtype = subtypeKeys[0];\n\n    const showIdentified = !this.showUnidentifiedData;\n\n    const isArmor = [\"armor\", \"shield\"].includes(this.subType);\n    const isOrdinary = isArmor || [\"clothing\"].includes(this.subType);\n\n    const subtypeLabels = pf1.config.equipmentTypes[eType];\n    labels.subType = subtypeLabels._label;\n    if (showIdentified || isOrdinary) {\n      labels.childType = subtypeLabels[eSubtype];\n    } else {\n      // Obfuscate wondrous as other\n      if (this.subType === \"wondrous\") labels.subType = pf1.config.equipmentTypes.other._label;\n    }\n\n    if (isArmor && labels.childType) {\n      labels.childTypeDistinct = true;\n    }\n\n    let ac = itemData.armor.value || 0;\n    if (showIdentified) ac += itemData.armor?.enh || 0;\n\n    if (ac > 0) {\n      labels.armor = `${ac} ${game.i18n.localize(\"PF1.ACNormal\")}`;\n      labels.armorValue = ac;\n      if (labels.broken) {\n        labels.armorValueEffective = Math.floor(ac / 2);\n      }\n    }\n\n    const acp = itemData.armor?.acp || 0;\n    if (acp > 0) {\n      labels.acp = true;\n      labels.acpEffective = Math.max(0, acp + (itemData.masterwork ? -1 : 0));\n    }\n    const mdex = itemData.armor?.dex ?? null;\n    if (Number.isFinite(mdex)) labels.mdex = true;\n\n    if (this.hasSlots || [\"armor\", \"shield\"].includes(this.subType)) {\n      if (this.subType === \"armor\") {\n        labels.slot = pf1.config.equipmentSlots.armor.armor;\n      } else if (this.subType === \"shield\") {\n        labels.slot = pf1.config.equipmentSlots.shield.shield;\n      } else if (this.subType === \"clothing\") {\n        labels.slot = pf1.config.equipmentSlots.clothing.clothing;\n      } else {\n        labels.slot = pf1.config.equipmentSlots.wondrous[itemData.slot];\n      }\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  get canEquip() {\n    // Always true if not in container\n    if (!this.inContainer) return true;\n\n    switch (this.subType) {\n      case \"armor\":\n      case \"shield\":\n      case \"clothing\":\n        return false;\n      case \"wondrous\":\n      case \"other\":\n        return this.system.slot === \"slotless\";\n    }\n    return true;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const itemData = this.system;\n\n    // Add enhancement bonus\n    itemData.armor.enh ??= 0;\n\n    const enh = itemData.armor.enh || 0;\n    itemData.armor.total = (itemData.armor.value || 0) + enh;\n\n    // Feed info back to actor\n    if (itemData.equipped !== false) {\n      this.applyEquippedEffects();\n    }\n  }\n\n  /**\n   * Apply effects of equipping this item.\n   */\n  applyEquippedEffects() {\n    const itemData = this.system;\n\n    if (!this.isActive) return;\n\n    const actor = this.actor;\n    // Guard against weirdness with unlinked data (data is undefined at this state), and also basic test for if this item has actor.\n    if (!actor?.system || !actor?.equipment) return;\n\n    switch (this.subType) {\n      case \"shield\": {\n        const shieldTypes = pf1.config.shieldTypes;\n        const subtype = itemData.equipmentSubtype;\n        let shieldType = actor.equipment.shield.type;\n        if (subtype === \"other\" && shieldType < shieldTypes.other) shieldType = shieldTypes.other;\n        else if (subtype === \"lightShield\" && shieldType < shieldTypes.light) shieldType = shieldTypes.light;\n        else if (subtype === \"heavyShield\" && shieldType < shieldTypes.heavy) shieldType = shieldTypes.heavy;\n        else if (subtype === \"towerShield\" && shieldType < shieldTypes.tower) shieldType = shieldTypes.tower;\n        if (actor.equipment.shield.type !== shieldType) {\n          actor.equipment.shield.type = shieldType;\n          actor.equipment.shield.id = this.id;\n        }\n        break;\n      }\n      case \"armor\": {\n        const armorTypes = pf1.config.armorTypes;\n        const subtype = itemData.equipmentSubtype;\n        let armorType = actor.equipment.armor.type;\n        if (subtype === \"lightArmor\" && armorType < armorTypes.light) armorType = armorTypes.light;\n        else if (subtype === \"mediumArmor\" && armorType < armorTypes.medium) armorType = armorTypes.medium;\n        else if (subtype === \"heavyArmor\" && armorType < armorTypes.heavy) armorType = armorTypes.heavy;\n        if (armorType !== actor.equipment.armor.type) {\n          actor.equipment.armor.type = armorType;\n          actor.equipment.armor.id = this.id;\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Does the equipment subtype use slots.\n   *\n   * @type {boolean}\n   */\n  get hasSlots() {\n    return [\"wondrous\", \"other\"].includes(this.subType);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @remarks Supports both weapon and armor proficiencies.\n   */\n  getProficiency(weapon = true) {\n    if (weapon) return this.isProficient;\n\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    const actor = this.actor;\n    if (!actor) return true; // No actor, so always proficient\n\n    return actor.hasArmorProficiency(this);\n  }\n\n  /**\n   * Retrieve armor proficiency type required by this item.\n   *\n   * @remarks\n   * - Null if no relevant proficiency found. Possibly an error.\n   *\n   * @type {keyof typeof pf1.config.armorProficiencies | null}\n   * @throws - If used on item that is not an armor or a shield.\n   * @since PF1 v10\n   */\n  get baseArmorProficiency() {\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    // Item type to proficiency maps\n    const proficiencyMaps = {\n      armor: {\n        lightArmor: \"lgt\",\n        mediumArmor: \"med\",\n        heavyArmor: \"hvy\",\n      },\n      shield: {\n        other: \"shl\", // buckler\n        lightShield: \"shl\",\n        heavyShield: \"shl\",\n        towerShield: \"twr\",\n      },\n    };\n\n    return proficiencyMaps[subType][this.system.equipmentSubtype] ?? null;\n  }\n\n  /**\n   * @see {@link https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor}\n   *\n   * @inheritdoc\n   * @remarks - Only armor and shields get anything besides 1.\n   * @since PF1 v10\n   */\n  getWeightMultiplier() {\n    if (![\"armor\", \"shield\"].includes(this.subType)) return 1;\n\n    return this._getArmorWeightMultiplier();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Feature item\n *\n * Class features, feats, traits, templates, racial traits, etc.\n */\nexport class ItemFeatPF extends ItemPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {User} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        this.executeScriptCalls(\"toggle\", { state: false });\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    const active = changed.system?.disabled;\n    if (active !== undefined) return !active;\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.disabled\": !active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    return this.system.disabled !== true;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const { subType, abilityType } = this.system;\n\n    labels.subType = pf1.config.featTypes[subType];\n    labels.featType = pf1.config.featTypes[subType];\n\n    labels.abilityType = pf1.config.abilityTypes[this.system.abilityType]?.short;\n    if (this.subType === \"trait\") {\n      labels.traitType = pf1.config.traitTypes[this.system.traitType];\n    } else if (this.subType === \"racial\") {\n      labels.raceType = pf1.config.raceTypes[this.system.traitType];\n      labels.traitCategory = pf1.config.racialTraitCategories[this.system.traitCategory];\n    }\n\n    // Ability type\n    if (abilityType && abilityType !== \"none\") {\n      labels.abilityType = pf1.config.abilityTypes[abilityType].short;\n      labels.abilityTypeLong = pf1.config.abilityTypes[abilityType].long;\n    } else if (labels.abilityType) {\n      delete labels.abilityType;\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    // Add fake CL based on associated class level or HD\n    result.cl = result.class?.level || result.attributes?.hd?.total;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    super.getTypeChatData(data, labels, props, rollData);\n    // Add ability type label\n    if (labels.abilityType) {\n      props.push(labels.abilityType);\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Loot item\n *\n * Ammunition, gear, trade goods, etc.\n */\nexport class ItemLootPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /** @type {string} */\n  get extraType() {\n    return this.system.extraType;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Reset loot extra type when loot subtype is changed\n    if (\n      changed.system?.subType !== undefined &&\n      changed.system?.subType !== this.system.subType &&\n      changed.system?.extraType === undefined\n    ) {\n      changed.system.extraType = \"\";\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    if (!this.showUnidentifiedData) {\n      labels.subType = pf1.config.lootTypes[this.subType];\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    if (pf1.config.unequippableLoot.includes(this.subType)) return true;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Make ammo count inherently as single use.\n   *\n   * @inheritDoc\n   */\n  get isSingleUse() {\n    return this.subType === \"ammo\" || super.isSingleUse;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Race item\n */\nexport class ItemRacePF extends ItemPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasActions: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Overwrite race\n    const oldRace = actor.itemTypes.race.find((r) => r !== this);\n    if (oldRace) {\n      const oldSize = oldRace.system.size;\n      await oldRace.delete();\n\n      const context = {};\n      // Ensure actor size is updated to match the race, but only if it's same as old race\n      const actorSize = actor.system.traits.size?.base;\n      if (actorSize !== this.system.size && oldSize === actorSize) context._pf1SizeChanged = true;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    const actor = this.actor;\n\n    // Track size change\n    const newSize = changed.system?.size;\n    if (actor && newSize !== undefined) {\n      const oldSize = actor.system.traits?.size?.base;\n      if (this.system.size === oldSize && newSize !== oldSize) {\n        context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Spell item\n */\nexport class ItemSpellPF extends ItemPF {\n  /**\n   * @override\n   * @inheritDoc\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasChanges: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data Creation data\n   * @param {object} options Context options\n   * @param {User} user Triggering user\n   */\n  async _preCreate(data, options, user) {\n    await super._preCreate(data, options, user);\n\n    // Following is only if the item is added on actor\n    if (!this.actor) return;\n\n    this.constructor._adjustNewItem(this, data, false);\n  }\n\n  /** @inheritDoc */\n  static _adjustNewItem(item, data, override = false) {\n    if (!item.actor) return;\n\n    // Assign level if undefined\n    if (!Number.isFinite(data?.system?.level) || override) {\n      const book = item.system.spellbook;\n      const cls = item.actor.system.attributes?.spells?.spellbooks?.[book]?.class;\n      const level = item.system.learnedAt?.class?.[cls];\n      if (Number.isFinite(level)) {\n        foundry.utils.setProperty(item._source, \"system.level\", Math.clamp(level, 0, 9));\n      }\n    }\n\n    // Prepare if undefined\n    if (!Number.isFinite(data?.system?.preparation?.value) || override) {\n      // Only spontaneous casters auto-prepare new spells\n      if (item.spellbook?.spellPreparationMode === \"spontaneous\") {\n        foundry.utils.setProperty(item._source, \"system.preparation.value\", 1);\n        foundry.utils.setProperty(item._source, \"system.preparation.max\", 1);\n      }\n    }\n\n    // Swap non-psychic components for psychic ones\n    if (this.spellbook?.psychic === true) {\n      if (this.system.components?.verbal === true) {\n        foundry.utils.setProperty(item._source, \"components.verbal\", false);\n        foundry.utils.setProperty(item._source, \"components.thought\", true);\n      }\n      if (this.system.components?.somatic === true) {\n        foundry.utils.setProperty(item._source, \"components.somatic\", false);\n        foundry.utils.setProperty(item._source, \"components.emotion\", true);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    this._preparationPreUpdate(changed);\n  }\n\n  /**\n   * Constrains and alters prepared slot updates to result in meaningful end results.\n   *\n   * @private\n   * @param {object} changed Change data in pre-update\n   */\n  _preparationPreUpdate(changed) {\n    const prep = changed.system.preparation;\n    if (!prep) return;\n\n    const current = this.system.preparation;\n    const max = prep.max ?? current.max ?? 0;\n    const left = prep.value ?? current.value ?? 0;\n\n    // Constrain left and max to sane values\n    if (left > max) {\n      if (prep.max !== undefined) {\n        prep.value = max;\n      } else if (prep.value !== undefined) {\n        prep.max = left;\n      }\n    }\n\n    // TODO: Remove following once DataModel is implemented with relevant constraints\n    if (prep.max < 0) prep.max = 0;\n    if (prep.value < 0) prep.value = 0;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData, isolated } = {}) {\n    const labels = super.getLabels({ actionId, rollData, isolated });\n    const itemData = this.system;\n\n    // Spell Level, School, and Components\n    labels.level = pf1.config.spellLevels[itemData.level];\n    labels.school = pf1.config.spellSchools[itemData.school];\n    labels.components = this.getSpellComponents({ compact: true }).join(\" \");\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  _addTypeRollData(result) {\n    result.sl = this.spellLevel || 0;\n\n    const spellbook = this.spellbook;\n    if (spellbook) {\n      const spellAbility = spellbook.ability;\n      let ablMod = \"\";\n      if (spellAbility !== \"\") ablMod = result.abilities?.[spellAbility]?.mod;\n      result.ablMod = ablMod;\n\n      result.cl = this.casterLevel || 0;\n\n      // Add @class shortcut to @classes[classTag]\n      if (spellbook.class === \"_hd\")\n        result.class = { level: result.attributes.hd?.total ?? result.details?.level?.value ?? 0 };\n      else result.class = result.classes?.[spellbook.class] ?? {};\n\n      // Add @spellbook shortcut to @spells[bookId]\n      result.spellbook = result.spells[this.system.spellbook];\n\n      if (this.useSpellPoints()) {\n        result.sp = result.spellbook.spellPoints;\n      }\n    } else {\n      const [sl, cl] = this.constructor.getMinimumCasterLevelBySpellData(this);\n\n      result.sl = sl;\n      result.cl = cl;\n      result.ablMod = Math.floor(sl / 2);\n    }\n  }\n\n  /** @inheritDoc */\n  getConditionalTargets(targets) {\n    super.getConditionalTargets(targets);\n\n    // Add Caster Level target\n    targets.push({\n      id: \"cl\",\n      label: game.i18n.localize(\"PF1.CasterLevel\"),\n      simple: true,\n      sort: (targets.find((e) => e.id === \"dc\").sort ?? 5_000) + 100, // Sort after DC\n    });\n\n    const charges = targets.find((t) => t.id === \"charges\");\n\n    // Relabel for spellpoints\n    if (this.useSpellPoints()) charges.label = game.i18n.localize(\"PF1.SpellPointsCost\");\n    else charges.disabled = true; // Non-spellpoint spells do not use charges\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    if (rollData.item.sr) {\n      props.push(game.i18n.localize(\"PF1.SpellResistance\"));\n    }\n\n    // Add charges\n    if (this.isCharged && !this.system.atWill) {\n      if (this.useSpellPoints()) {\n        props.push(`${game.i18n.localize(\"PF1.SpellPoints\")}: ${this.charges}/${this.maxCharges}`);\n      } else {\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${this.charges}/${this.maxCharges}`);\n      }\n    }\n  }\n\n  /**\n   * Add charges to the spell or its relevant resource pool (spell points or spontaneous spells).\n   *\n   * @override\n   * @param {number} value - Number of charges to add\n   * @param {object} [data=null] - Additional data to pass to the update\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible or required.\n   */\n  async addCharges(value, data = null) {\n    if (!this.actor) return;\n    if (this.system.atWill) return;\n\n    const spellbook = this.spellbook;\n    if (!spellbook) return;\n    const isSpontaneous = spellbook.spontaneous,\n      spellbookKey = this.system.spellbook || \"primary\",\n      spellLevel = this.system.level;\n\n    if (this.useSpellPoints()) {\n      const curUses = this.getSpellUses();\n      const updateData = {};\n      updateData[`system.attributes.spells.spellbooks.${spellbookKey}.spellPoints.value`] = curUses + value;\n      await this.actor.update(updateData);\n      return this;\n    } else {\n      const newCharges = isSpontaneous\n        ? Math.max(0, (spellbook.spells?.[`spell${spellLevel}`]?.value || 0) + value)\n        : Math.max(0, (this.system.preparation?.value || 0) + value);\n\n      if (!isSpontaneous) {\n        const key = \"system.preparation.value\";\n        if (data == null) {\n          data = {};\n          data[key] = newCharges;\n          return this.update(data);\n        } else {\n          data[key] = newCharges;\n        }\n      } else {\n        const key = `system.attributes.spells.spellbooks.${spellbookKey}.spells.spell${spellLevel}.value`;\n        const actorUpdateData = {};\n        actorUpdateData[key] = newCharges;\n        await this.actor.update(actorUpdateData);\n        return this;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isCharged() {\n    if (this.system.atWill) return false;\n    return true;\n  }\n\n  /** @inheritdoc */\n  get hasFiniteCharges() {\n    if (this.system.atWill) return false;\n    return this.getDefaultChargeCost() > 0;\n  }\n\n  /** @inheritDoc */\n  get charges() {\n    return this.getSpellUses();\n  }\n\n  /** @inheritDoc */\n  get maxCharges() {\n    return this.getSpellUses(true);\n  }\n\n  /**\n   * Get default charge cost for spell actions.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - Default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    if (this.system.atWill) return 0;\n\n    if (this.useSpellPoints()) {\n      rollData ??= this.getRollData();\n      const formula = this.getDefaultChargeFormula();\n      return RollPF.safeRollSync(formula, rollData).total;\n    } else {\n      return super.getDefaultChargeCost({ rollData });\n    }\n  }\n\n  /** @inheritDoc */\n  getDefaultChargeFormula() {\n    if (this.useSpellPoints()) {\n      return this.system.spellPoints?.cost || game.settings.get(\"pf1\", \"spellPointCost\") || \"0\";\n    } else {\n      return super.getDefaultChargeFormula();\n    }\n  }\n\n  /**\n   * @remarks\n   * - Recharging individual spells for spell point, spontaneous, or hybrid spellbooks has no effect.\n   * @override\n   * @inheritDoc\n   */\n  // eslint-disable-next-line no-unused-vars\n  async recharge({ value, period = \"day\", exact = false, maximize = true, commit = true, rollData, context } = {}) {\n    const spellbook = this.spellbook,\n      mode = spellbook?.spellPreparationMode || \"prepared\";\n\n    // Can not recharge non-prepared spellbooks\n    if (mode !== \"prepared\") return;\n\n    // Spellpoints are not on spells\n    if (spellbook?.spellPoints?.useSystem ?? false) return;\n\n    if (period == \"week\") {\n      // Spells do not recharge per week\n      if (exact) return;\n      // When not recharging with exact period, downgrade to \"day\" which is normal spell restoration period\n      period = \"day\";\n    }\n\n    // Spells do not restore on non-day period\n    if (![\"day\", \"any\"].includes(period)) return;\n\n    const prep = this.system.preparation ?? {};\n\n    // No specific value given\n    maximize = !(Number.isFinite(value) && value >= 0);\n\n    // Set value\n    if (maximize) value = prep.max || 0;\n    // Clamp charge value\n    value = Math.clamp(value, 0, prep.max || 0);\n\n    // Cancel pointless or bad update\n    if (value === (prep.value || 0) || !Number.isFinite(value)) return;\n\n    const updateData = { system: { preparation: { value } } };\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * Effective spell level\n   *\n   * @remarks\n   * - Accounts for offset\n   *\n   * @type {number}\n   */\n  get spellLevel() {\n    return this.system.level + (this.system.slOffset || 0);\n  }\n\n  /**\n   * Effective caster level\n   *\n   * @remarks\n   * - Accounts for offset\n   * - Returns null if not linked to a valid spellbook.\n   *\n   * @type {number|null}\n   */\n  get casterLevel() {\n    const spellbook = this.spellbook;\n    if (!spellbook) return null;\n\n    return spellbook.cl.total + (this.system.clOffset || 0);\n  }\n\n  /**\n   * Linked spellbook\n   *\n   * @type {object|undefined}\n   */\n  get spellbook() {\n    const bookId = this.system.spellbook;\n    return this.actor?.system.attributes?.spells.spellbooks[bookId];\n  }\n\n  /**\n   * Number of remaining uses, or max.\n   *\n   * @param {boolean} max - Return max uses.\n   * @returns {number} - Uses\n   */\n  getSpellUses(max = false) {\n    const itemData = this.system;\n    if (itemData.atWill) return Number.POSITIVE_INFINITY;\n\n    const spellbook = this.spellbook;\n\n    const isSpontaneous = spellbook?.spontaneous ?? false,\n      spellLevel = itemData.level;\n\n    const maxPrepared = itemData.preparation?.max ?? 0,\n      prepared = itemData.preparation?.value ?? 0;\n\n    if (this.useSpellPoints()) {\n      if (prepared > 0) {\n        if (max) return Math.max(spellbook.spellPoints?.max ?? 0, prepared);\n        return spellbook.spellPoints?.value ?? 0;\n      }\n    } else if (isSpontaneous) {\n      if (prepared > 0) {\n        if (max) return Math.max(spellbook.spells?.[`spell${spellLevel}`]?.max || 0, prepared);\n        return spellbook.spells?.[`spell${spellLevel}`]?.value || 0;\n      }\n    } else {\n      if (max) return maxPrepared;\n      return prepared;\n    }\n\n    return 0;\n  }\n\n  /** @returns {boolean} - Whether the attached spellbok uses spell points */\n  useSpellPoints() {\n    return this.spellbook?.spellPoints?.useSystem ?? false;\n  }\n\n  /**\n   * Spell components\n   *\n   * @example\n   * Example with Discern Lies on Cleric\n   * ```js\n   * spell.getSpellComponents(); // => [\"V\", \"S\", \"M/DF\"]\n   * ```\n   * Same with compacted components\n   * ```js\n   * spell.getSpellComponents({compact:true}); // => [\"V\",\"S\", \"DF\"]\n   * ```\n   *\n   * @param {object} options - Additional options\n   * @param {boolean} [options.compact] - Remove redundant components (e.g. M/DF becomes DF for divine caster)\n   * @returns {string[]} - Component keys\n   */\n  getSpellComponents({ compact = false } = {}) {\n    const reSplit = pf1.config.re.traitSeparator,\n      srcComponents = this.system.components ?? {},\n      srcMaterials = this.system.materials ?? {};\n\n    const kind = this.spellbook?.kind,\n      //isArcane = kind === \"arcane\",\n      //isPsychic = kind === \"psychic\",\n      //isAlchemical = kind === \"alchemy\",\n      isDivine = kind === \"divine\";\n\n    const components = [];\n    const labels = pf1.config.spellComponents;\n\n    if (srcComponents.verbal) components.push(labels.verbal);\n    if (srcComponents.somatic) components.push(labels.somatic);\n    if (srcComponents.thought) components.push(labels.thought);\n    if (srcComponents.emotion) components.push(labels.emotion);\n\n    // Reverse mapping of pf1.config.divineFocus for readability\n    const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n\n    let df = srcComponents.divineFocus;\n\n    // Display focus and material only if they aren't overridden by DF variant\n    if (isDivine && df === dfVariants.MDF && compact) {\n      // Downgrade to DF since material is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.material) {\n      let material = labels.material;\n      // Display indeterminate M/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.MDF) material = `${material}/${labels.divineFocus}`;\n      if (srcMaterials.value && !compact) material = `${material} (${srcMaterials.value})`;\n      if (material) components.push(material);\n    }\n\n    if (isDivine && df === dfVariants.FDF && compact) {\n      // Downgrade to DF since focus is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.focus) {\n      let focus = labels.focus;\n      // Display indeterminate F/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.FDF) focus = `${focus}/${labels.divineFocus}`;\n      if (srcMaterials.focus && !compact) focus = `${focus} (${srcMaterials.focus})`;\n      if (focus) components.push(focus);\n    }\n\n    if (df === dfVariants.DF) components.push(labels.divineFocus);\n    if (labels.value) components.push(...srcComponents.value.split(reSplit));\n\n    return components;\n  }\n\n  /**\n   * @param {object} itemData - A spell item's data.\n   * @returns {[number,number]} - A tuple containing the spell level and caster level in order.\n   */\n  static getMinimumCasterLevelBySpellData(itemData) {\n    const learnedAt = Object.entries(itemData.system.learnedAt?.class ?? {})?.reduce((cur, [classId, level]) => {\n      const classes = classId.split(\"/\");\n      for (const cls of classes) cur.push([cls, level]);\n      return cur;\n    }, []);\n    const result = [9, 20];\n    for (const [classId, level] of learnedAt) {\n      result[0] = Math.min(result[0], level);\n\n      const tc = pf1.config.classCasterType[classId] || \"high\";\n      if (tc === \"high\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 2);\n      } else if (tc === \"med\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 3);\n      } else if (tc === \"low\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level) * 3);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Used in consumable creation\n   *\n   * @internal\n   * @param {string} string - String to convert\n   * @param {object} rollData - Roll data instance\n   * @returns {string} - Converted string\n   */\n  static _replaceConsumableConversionString(string, rollData) {\n    return string\n      .replace(/@sl/g, `${rollData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}]`)\n      .replace(/@cl/g, \"@item.cl\")\n      .replace(/@ablMod/g, `${rollData.ablMod}[${game.i18n.localize(\"PF1.AbilityScore\")}]`);\n  }\n\n  /**\n   * Convert spell into a consumable item.\n   *\n   * @param {object} origData - Spell item data\n   * @param {\"wand\"|\"scroll\"|\"potion\"} type - Consumable type\n   * @param {object} [options] - Additional options\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @returns {Promise<object|null>} - Item data for appropriate consumable, or null if dialog option was used and it was cancelled.\n   */\n  static async toConsumable(origData, type, { spellType = \"arcane\" } = {}) {\n    const isWand = type === \"wand\",\n      isPotion = type === \"potion\",\n      isScroll = type === \"scroll\";\n\n    const [minLevel, minCl] = this.getMinimumCasterLevelBySpellData(origData);\n    const level = origData.sl ?? minLevel ?? 1;\n    const cl = origData.cl ?? minCl ?? 1;\n    const materialPrice = origData.system.materials?.gpValue ?? 0;\n\n    const itemData = {\n      type: \"consumable\",\n      name: origData.name,\n      system: {\n        subType: type,\n        spellType: origData.spellType || spellType,\n        description: {},\n        identified: origData.identified ?? true,\n        unidentified: {\n          name: origData.unidentifiedName || game.i18n.localize(`PF1.CreateItem${type.capitalize()}`),\n        },\n        cl, // Caster level\n        aura: { school: origData.system.school },\n        uses: { per: \"single\" },\n        price: 0,\n        hardness: 0,\n        hp: { value: 1, max: 1 },\n        actions: origData.system.actions ?? [],\n        sources: origData.system.sources ?? [],\n      },\n    };\n\n    // Add basic item type source as source for the consumable\n    const extraSources = {\n      wand: { id: \"PZO1110\", pages: \"496\" },\n      scroll: { id: \"PZO1110\", pages: \"490-491\" },\n      potion: { id: \"PZO1110\", pages: \"477-478\" },\n    };\n    const xsrc = extraSources[type];\n    if (xsrc) {\n      const osrc = itemData.system.sources.find((s) => s.id == xsrc.id);\n      if (osrc) {\n        // Merge pages when same source already exists\n        if (osrc.pages) osrc.pages += `, ${xsrc.pages}`;\n        else osrc.pages = xsrc.pages;\n      } else {\n        itemData.system.sources.push(xsrc);\n      }\n    }\n\n    // Initialize default action\n    if (itemData.system.actions.length == 0) itemData.system.actions.push(defaultAction);\n    const defaultAction = itemData.system.actions[0] ?? pf1.components.ItemAction.schema.getInitialValue();\n\n    // Prepare new action copying over with old data if present\n\n    // Override activation as required by consumables\n    defaultAction.activation.type = \"standard\";\n    defaultAction.activation.unchained.type = \"action\";\n    defaultAction.activation.unchained.cost = 2;\n\n    // Fill in pseudo roll data object\n    const rollData = {\n      item: origData.system,\n      ablMod: Math.floor(level / 2), // Minimum usable ability modifier\n      sl: level,\n      cl,\n    };\n\n    if (isWand) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemWandOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/wand-star.jpg\";\n      itemData.system.uses.pricePerUse =\n        Math.floor(((Math.max(0.5, level) * cl * 750) / 50) * 100) / 100 + materialPrice;\n      itemData.system.hardness = 5;\n      itemData.system.hp.max = 5;\n      itemData.system.hp.value = 5;\n      // Set charges\n      itemData.system.uses.maxFormula = \"50\";\n      itemData.system.uses.value = 50;\n      itemData.system.uses.max = 50;\n      itemData.system.uses.per = \"charges\";\n    } else if (isPotion) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemPotionOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Drink\");\n      itemData.img = \"systems/pf1/icons/items/potions/minor-blue.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 50 + materialPrice;\n      itemData.system.hardness = 1;\n    } else if (isScroll) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemScrollOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/scroll-magic.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 25 + materialPrice;\n    }\n\n    const convertNotes = (data, keys = []) => {\n      if (!data) return;\n\n      // Replace attack and effect formula data\n      for (const arrKey of keys) {\n        const arr = data[arrKey];\n        if (!arr) continue;\n        for (let idx = 0; idx < arr.length; idx++) {\n          arr[idx] = this._replaceConsumableConversionString(arr[idx], rollData);\n        }\n      }\n    };\n\n    // Adjust all actions\n    for (const action of itemData.system.actions) {\n      // Convert ranges\n      // Special handling for potions\n      if (isPotion && defaultAction === action) {\n        // BUG: This is wrong for oils\n        action.range.units = \"personal\";\n        delete action.range.value;\n      }\n\n      // Convert template\n      if (action.measureTemplate?.type) {\n        action.measureTemplate.size = this._replaceConsumableConversionString(action.measureTemplate.size, rollData);\n      }\n\n      // Convert extra attacks\n      const exAtk = action.extraAttacks;\n      if (exAtk) {\n        if (exAtk.formula?.count?.length)\n          exAtk.formula.count = this._replaceConsumableConversionString(exAtk.formula.count, rollData);\n        if (exAtk.formula?.bonus?.length)\n          exAtk.formula.bonus = this._replaceConsumableConversionString(exAtk.formula.bonus, rollData);\n\n        for (const bAtk of exAtk.manual ?? []) {\n          bAtk.formula = this._replaceConsumableConversionString(bAtk.formula, rollData);\n        }\n      }\n\n      // Set damage formula\n      for (const dmgPart of action.damage?.parts ?? []) {\n        dmgPart.formula = this._replaceConsumableConversionString(dmgPart.formula, rollData);\n      }\n\n      // Set save\n      if (action.save?.type) {\n        const oldSaveDC = action.save.dc;\n        action.save.dc = `10 + ${origData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}] + ${Math.floor(\n          origData.sl / 2\n        )}[${game.i18n.localize(\"PF1.SpellcastingAbility\")}]`;\n        // Add DC offset\n        if (oldSaveDC?.length) action.save.dc += ` + (${oldSaveDC})[${game.i18n.localize(\"PF1.DCOffset\")}]`;\n      }\n\n      convertNotes(action.notes, [\"effect\", \"footer\"]);\n    }\n\n    convertNotes(itemData.system, [\"attackNotes\", \"effectNotes\"]);\n\n    // Set description\n    /** @type {ItemSpellPF} */\n    const spell = new Item.implementation(origData);\n    spell.reset();\n    // TODO: Make range and duration appear as inline rolls that scale on item CL?\n    const desc = await spell.getDescription({ charcard: false, header: true, body: true, rollData });\n    itemData.system.description.value = this._replaceConsumableConversionString(desc, rollData);\n\n    // Create and return synthetic item data\n    return new ItemPF(foundry.utils.expandObject(itemData)).toObject();\n  }\n\n  /**\n   * Open Consumable conversion dialog.\n   *\n   * Automatically calls {@link this.toConsumable} as appropriate.\n   *\n   * @param {object} itemData - Spell item data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.allowSpell=true] - Allow spell creation\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @param {object} [options.actor=undefined] - The actor the consumable is being created on.\n   * @returns {Promise<null|false|object>} - Returns null if cancelled, false if no conversion is to take place, or converted data.\n   */\n  static async toConsumablePrompt(itemData, { allowSpell = true, spellType = \"arcane\", actor = undefined } = {}) {\n    const [sl, cl] = CONFIG.Item.documentClasses.spell.getMinimumCasterLevelBySpellData(itemData);\n\n    const getFormData = (html) => {\n      if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n      const formData = foundry.utils.expandObject(new FormDataExtended(html.querySelector(\"form\")).object);\n      foundry.utils.mergeObject(itemData, formData);\n      // NaN check here to allow SL 0\n      if (Number.isNaN(itemData.sl)) itemData.sl = 1;\n      return itemData;\n    };\n\n    const createConsumable = (data, type) => this.toConsumable(data, type, { spellType: data.spellType });\n\n    const buttons = [\n      {\n        icon: \"fa-solid fa-prescription-bottle\",\n        label: game.i18n.localize(\"PF1.CreateItemPotion\"),\n        action: \"potion\",\n        default: true,\n        callback: (event, target, html) => createConsumable(getFormData(html), \"potion\"),\n      },\n      {\n        icon: \"fa-solid fa-scroll\",\n        label: game.i18n.localize(\"PF1.CreateItemScroll\"),\n        action: \"scroll\",\n        callback: (event, target, html) => createConsumable(getFormData(html), \"scroll\"),\n      },\n      {\n        icon: \"fa-solid fa-magic\",\n        label: game.i18n.localize(\"PF1.CreateItemWand\"),\n        action: \"wand\",\n        callback: (event, target, html) => createConsumable(getFormData(html), \"wand\"),\n      },\n    ];\n\n    if (allowSpell) {\n      buttons.push({\n        icon: \"fa-solid fa-hand-sparkles\",\n        label: game.i18n.localize(\"TYPES.Item.spell\"),\n        action: \"spell\",\n        callback: () => false,\n      });\n    }\n\n    const fields = foundry.data.fields;\n\n    return foundry.applications.api.DialogV2.wait({\n      window: { title: game.i18n.format(\"PF1.CreateItemForSpell\", { name: itemData.name }) },\n      position: {\n        width: \"auto\",\n        height: \"auto\",\n      },\n      classes: [\"pf1-v2\", \"create-consumable\"],\n      content: await renderTemplate(\"systems/pf1/templates/internal/create-consumable.hbs\", {\n        name: itemData.name,\n        sl,\n        cl,\n        isGM: game.user.isGM,\n        spellType,\n        fields: {\n          sl: new fields.NumberField({ min: 0, integer: true }),\n          cl: new fields.NumberField({ min: 1, integer: true }),\n          spellType: new fields.StringField({ choices: pf1.config.spellcasting.spells }),\n          identified: new fields.BooleanField({ initial: actor?.type === \"character\" }),\n          unidentifiedName: new fields.StringField(),\n        },\n        // We assume every other check done at `ActorSheetPF._alterDropItemData` has passed\n        isNPC: actor?.type === \"npc\",\n      }),\n      itemData,\n      buttons,\n      close: () => null,\n      rejectClose: false,\n    });\n  }\n\n  /**\n   * @remarks\n   * Checks for at-will and preparation status.\n   * @inheritDoc\n   */\n  get canUse() {\n    if (this.system.atWill) return true;\n\n    return (this.system.preparation?.value ?? 0) > 0;\n  }\n\n  /**\n   * Determine if this spell is domain/school spell.\n   *\n   * @type {boolean}\n   */\n  get isDomain() {\n    return this.system.domain === true;\n  }\n\n  /** @inheritDoc */\n  async getDescription({ chatcard = false, data = {}, rollData, header = true, body = true, isolated = false } = {}) {\n    const headerContent = header\n      ? renderCachedTemplate(\"systems/pf1/templates/items/headers/spell-header.hbs\", {\n          ...data,\n          ...(await this.getDescriptionData({ rollData, isolated })),\n          chatcard: chatcard === true,\n        })\n      : \"\";\n\n    let bodyContent = \"\";\n    if (body) {\n      const noDesc = \"<p class='placeholder'>\" + game.i18n.localize(\"PF1.NoDescription\") + \"</p>\";\n      bodyContent = `<div class=\"description-body\">` + (this.system.description.value || noDesc) + \"</div>\";\n    }\n\n    let separator = \"\";\n    if (header && body) separator = `<h3 class=\"description-header\">${game.i18n.localize(\"PF1.Description\")}</h3>`;\n\n    return headerContent + separator + bodyContent;\n  }\n\n  /** @inheritDoc */\n  async getDescriptionData({ rollData, isolated = false } = {}) {\n    const result = await super.getDescriptionData({ rollData, isolated });\n\n    const system = this.system;\n    result.system = system;\n\n    const defaultAction = this.defaultAction;\n    const action = defaultAction ?? {};\n\n    rollData ??= defaultAction?.getRollData() ?? this.getRollData();\n\n    const labels = this.getLabels({ rollData, isolated });\n    result.labels = labels;\n\n    labels.school = pf1.config.spellSchools[system.school];\n    labels.subschool = pf1.utils.i18n.join([...(system.subschool.names ?? [])]);\n    labels.descriptors = pf1.utils.i18n.join([...(system.descriptors.names ?? [])], \"conjunction\", false);\n\n    // Set information about when the spell is learned\n    result.learnedAt = {};\n    if (system.learnedAt) {\n      const classNames = await pf1.utils.packs.getClassIDMap();\n      for (const category of [\"class\", \"domain\", \"subDomain\", \"elementalSchool\", \"bloodline\"]) {\n        result.learnedAt[category] = pf1.utils.i18n.join(\n          Object.entries(system.learnedAt[category]).map(\n            ([classId, level]) => `${classNames[classId] || classId} ${level}`\n          )\n        );\n      }\n    }\n\n    // Set components label\n    labels.components = pf1.utils.i18n.join(this.getSpellComponents());\n\n    // Set effect label\n    const effect = action.effect;\n    if (effect) labels.effect = effect;\n\n    // Set DC and SR\n    {\n      const savingThrowDescription = action.save?.description;\n      labels.savingThrow = savingThrowDescription || game.i18n.localize(\"PF1.None\");\n\n      const sr = system.sr;\n      labels.sr = (sr === true ? game.i18n.localize(\"PF1.Yes\") : game.i18n.localize(\"PF1.No\")).toLowerCase();\n\n      if (action.range?.units !== \"personal\") result.useDCandSR = true;\n    }\n\n    const harmless = action.save?.harmless ?? false;\n    if (harmless) labels.harmless = game.i18n.localize(\"PF1.Yes\").toLowerCase();\n\n    return result;\n  }\n\n  /**\n   * Number of slots the spell takes to prepare.\n   *\n   * Quick access to .system.slotCost with additional considerations such as at-will toggle.\n   *\n   * Defaults to 1 if the data is not present, 0 if the spell is at-will.\n   *\n   * @type {number}\n   */\n  get slotCost() {\n    if (this.system.atWill) return 0;\n    return this.system.slotCost ?? 1;\n  }\n\n  /**\n   * Concentration DC\n   *\n   * @param {string} type - Type of concentration check\n   * @param {object} [options] - Additional options\n   * @throws {Error} - If type is invalid\n   * @returns {number} - DC\n   */\n  getConcentrationDC(type = \"defensive\", options = {}) {\n    const level = this.system.level || 0;\n    switch (type) {\n      // Defensive Casting\n      case \"defensive\": {\n        return 15 + level * 2;\n      }\n      // Maintain spell on damage taken\n      case \"damage\": {\n        const damage = options.damage ?? 0;\n        return 15 + level + damage;\n      }\n      // Default nonsense value\n      default: {\n        throw new Error(`Unrecgnized concentration check type: \"${type}\"`);\n      }\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Weapon item\n */\nexport class ItemWeaponPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {User} user - Triggering user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n    if (!changed.system) return;\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    // Set weapon subtype if not present\n    const newWeaponType = changed.system?.subType;\n    if (newWeaponType != null && newWeaponType !== this.system.subType) {\n      const subtype = changed.system.weaponSubtype ?? this.system.weaponSubtype ?? \"\";\n      const keys = Object.keys(pf1.config.weaponTypes[newWeaponType]).filter((o) => !o.startsWith(\"_\"));\n      if (!subtype || !keys.includes(subtype)) {\n        changed.system.weaponSubtype = keys[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const { weaponTypes } = pf1.config;\n\n    // Type and subtype labels\n    let wType = this.system.subType;\n    const typeKeys = Object.keys(weaponTypes);\n    if (!typeKeys.includes(wType)) wType = typeKeys[0];\n\n    let wSubtype = this.system.weaponSubtype;\n    const subtypeKeys = Object.keys(weaponTypes[wType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(wSubtype)) wSubtype = subtypeKeys[0];\n\n    labels.subType = weaponTypes[wType]._label;\n    labels.childType = weaponTypes[wType][wSubtype];\n\n    labels.properties = [\n      ...Object.entries(this.system.properties ?? {})\n        .filter(([_, enabled]) => enabled)\n        .map(([id]) => pf1.config.weaponProperties[id] || id),\n    ];\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    super.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    if (this.showUnidentifiedData) return;\n\n    if (labels.weaponSubtype) props.push(labels.weaponSubtype);\n  }\n\n  /** @inheritDoc */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Weapons do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /** @inheritDoc */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks\n   * Not 100% RAW correct as this applies armor table to weapons,\n   * but since Paizo did not provide a table for weapons\n   * besides stating weapons for small are half weight, we assume they use the same table.\n   *\n   * @see {@link pf1.documents.item.ItemEquipmentPF.getWeightMultiplier}\n   */\n  getWeightMultiplier() {\n    // Use same as armor, even though Paizo has only stats for halving for small and nothing else.\n    return this._getArmorWeightMultiplier();\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Implant item\n *\n * Cybernetics, magic tattoos, necrografts, demonic implants, piercings, etc.\n */\nexport class ItemImplantPF extends ItemPhysicalPF {\n  /** @inheritDoc */\n  static system = Object.freeze({ ...super.system, subtypeName: true });\n\n  /** @override */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.implanted === true) {\n      this.executeScriptCalls(\"implant\", { implanted: true });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.implanted === true) {\n        this.executeScriptCalls(\"implant\", { implanted: false });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Changed data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'implant' script calls\n    const implanted = changed.system?.implanted;\n    if (implanted != null) {\n      this.executeScriptCalls(\"implant\", { implanted });\n    }\n  }\n\n  /** @inheritDoc */\n  _activeStateChange(changed) {\n    return changed.system?.implanted;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.implantTypes[this.subType];\n\n    switch (this.subType) {\n      case \"cybertech\":\n        labels.slot = pf1.config.implantSlots.cybertech[this.system.slot] ?? pf1.config.implantSlots.cybertech.none;\n        break;\n    }\n\n    const checkYes = '<i class=\"fa-solid fa-check\"></i>';\n    const checkNo = '<i class=\"fa-solid fa-times\"></i>';\n    labels.equipped = this.system.implanted ? checkYes : checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    // Everything in containers count as carried\n    this.system.carried = true;\n\n    // Auto-unimplant\n    this.system.implanted = false;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    super.prepareWeight();\n\n    // Implanted items weigh nothing\n    const itemData = this.system;\n    const weight = itemData.weight;\n    if (itemData.implanted) {\n      weight.total = 0;\n      weight.converted.total = 0;\n\n      // If there's more than 1 in stack, restore part of the weight\n      if (itemData.quantity > 1) {\n        // Partial duplication from base physical item\n        const baseWeight = weight.value * this.getWeightMultiplier();\n        weight.total = baseWeight * (itemData.quantity - 1);\n        weight.converted.total = pf1.utils.convertWeight(weight.total);\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    if (this.system.quantity <= 0) return false;\n    if (this.subType === \"cybertech\" && this.system.disabled) return false;\n    return this.system.implanted || false;\n  }\n\n  /**\n   * Determines if the item implanted.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.implanted || false;\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.implanted\": active }, context);\n  }\n}\n","/**\n * ID field.\n *\n * Validates the field contents are alphanumeric string as expected of document IDs.\n */\nexport class IDField extends foundry.data.fields.StringField {\n  constructor(options = {}, context) {\n    if (options.choices) throw new Error(\"choices is not valid option for IDField\");\n    super(options, context);\n  }\n\n  static get _defaults() {\n    const defaults = super._defaults;\n    defaults.required = true;\n    defaults.nullable = false;\n    defaults.blank = false;\n    defaults.readonly = true;\n    defaults.initial = () => foundry.utils.randomID(16);\n    return defaults;\n  }\n\n  _validateType(value) {\n    if (typeof value !== \"string\") throw new Error(\"must be a string\");\n    if (!/^[a-z\\d]+$/i.test(value)) throw new Error(\"must be alphanumeric\");\n  }\n}\n","/**\n * DataModel that performs automatic data preparation\n *\n * Calls {@link prepareData()} on initialization and on {@link reset()}\n */\nexport class PreparedModel extends foundry.abstract.DataModel {\n  /**\n   * @override\n   * @protected\n   * @param {object} options - Constructor options\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n\n    this._safePrepareData();\n  }\n\n  /**\n   * Safely prepare data\n   *\n   * @internal\n   */\n  _safePrepareData() {\n    try {\n      this.prepareData();\n    } catch (err) {\n      console.error(err, this, { parent: this.parent });\n    }\n  }\n\n  /**\n   * Prepare data after initialization or reset.\n   *\n   * @abstract\n   * @protected\n   */\n  prepareData() {}\n}\n","import { PreparedModel } from \"./prepared-model.mjs\";\n\nimport { IDField } from \"@datafields/id-field.mjs\";\n\n/**\n * DataModel to mimic basic document-like behaviour.\n *\n * Calls {@link prepareData()} on initialization and on {@link reset()}\n *\n * Also handles `_id` nicely.\n */\nexport class DocumentLikeModel extends PreparedModel {\n  static defineSchema(options) {\n    const fields = foundry.data.fields;\n    return {\n      _id: new IDField(),\n      name: new fields.StringField({\n        required: true,\n        blank: false,\n        nullable: false,\n        initial: options.name,\n      }),\n    };\n  }\n\n  /**\n   * Internal ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n}\n","/**\n * Base model for Active Effects\n *\n * Active Effect type: `base` (the default when unspecified)\n */\nexport class AEBaseModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      // End timing\n      end: new fields.StringField({\n        required: false,\n        blank: false,\n        choices: () => pf1.config.durationEndEvents,\n        label: \"PF1.DurationEndTiming\",\n      }),\n      // Initiative this AE was started on\n      initiative: new fields.NumberField({\n        required: false,\n        initial: undefined, // HACK: Without unlinked actors start erroring about nulls\n        nullable: false,\n        label: \"PF1.Initiative\",\n      }),\n      // Arbitrary level\n      level: new fields.NumberField({\n        required: false,\n        initial: undefined, // HACK: Without unlinked actors start erroring about nulls\n        integer: true,\n        nullable: false,\n        label: \"PF1.Level\",\n      }),\n    };\n  }\n\n  /**\n   * Retrieve parent item\n   *\n   * @type {Item|null}\n   */\n  get item() {\n    const doc = this.parent?.parent;\n    if (doc instanceof Item) return doc;\n    return null;\n  }\n}\n","import { AEBaseModel } from \"./ae-base.mjs\";\n\n/**\n * Buff tracking Active Effect.\n *\n * Active Effect type: `buff`\n */\nexport class AEBuffModel extends AEBaseModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      // Nothing here yet\n    };\n  }\n\n  /** @override */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Tracker does not support disabling\n    if (data.disabled) this.parent.updateSource({ disabled: false });\n  }\n\n  /** @override */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // Buff trackers do not support disabling themselves.\n    delete changed.disabled;\n  }\n\n  /** @override */\n  async _preDelete(context, user) {\n    await super._preDelete(context, user);\n\n    // Tracker AE can not be deleted while parent item is active\n    if (this.item?.isActive) return false;\n  }\n\n  /**\n   * Is this item tracking AE\n   *\n   * @remarks\n   * - There should be only one AE with this true per item.\n   *\n   * @type {boolean}\n   */\n  get isTracker() {\n    // This being false is an error of some kind.\n    return !!this.item;\n  }\n}\n","/**\n * Compacting Mixin\n *\n * Provides framework for automatic data pruning.\n *\n * @param {T} Base - Base datamodel\n * @returns {T} - Enriched class\n */\nexport const CompactingMixin = (Base) =>\n  class extends Base {\n    /** @override */\n    toObject(source = true, clean = true) {\n      const data = super.toObject(source);\n\n      if (clean) this.constructor.pruneData(data);\n\n      return data;\n    }\n\n    /**\n     * Prune data\n     *\n     * @abstract\n     * @protected\n     * @param {object} data - Source data to prune\n     * @returns {void}\n     */\n    // eslint-disable-next-line no-unused-vars\n    static pruneData(data) {}\n  };\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\nexport class DamagePartModel extends CompactingMixin(foundry.abstract.DataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      formula: new FormulaField(),\n      types: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n    };\n  }\n\n  static migrateData(source) {\n    // Since v11, merge standard and custom type IDs into single array.\n    if (!source.types && source.type) {\n      source.types = source.type?.values ?? [];\n\n      if (typeof source.type?.custom === \"string\" && source.type.custom.length) {\n        source.types.push(source.type.custom.split(\";\").map((t) => t.trim()));\n      }\n    }\n\n    return super.migrateData(source);\n  }\n\n  _initialize(options) {\n    super._initialize(options);\n\n    Object.defineProperty(this, \"type\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\"DamagePartModel.type is deprecated in favor of DamagePartModel.types\", {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        });\n\n        const full = this.parsed;\n        return {\n          values: [...full.standard].map((d) => d.id),\n          custom: [...full.custom].join(\";\"),\n        };\n      },\n    });\n  }\n\n  /**\n   * Prune data\n   *\n   * @param {object} data - Damage part data\n   */\n  static pruneData(data) {\n    if (!data.formula) delete data.formula;\n    data.types = data.types?.map((t) => t.trim()).filter((t) => !!t);\n    if (!data.types?.length) delete data.types;\n  }\n\n  /**\n   * Parsed types\n   *\n   * @type {{standard:Set<pf1.registry.DamageType>,custom:Set<string>}}\n   */\n  get parsed() {\n    // TODO: Cache this?\n\n    const result = {\n      standard: new Set(),\n      custom: new Set(),\n      get all() {\n        return [...this.standard, ...this.custom];\n      },\n    };\n    for (const type of this.types) {\n      const d = pf1.registry.damageTypes.get(type);\n      if (d) {\n        result.standard.add(d);\n      } else {\n        result.custom.add(type);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parsed names of all types\n   *\n   * @type {Array<string>}\n   */\n  get names() {\n    return this.parsed.all.map((dt) => dt.name || dt);\n  }\n\n  /**\n   * Standard types\n   *\n   * @type {Set<pf1.registry.DamageType>}\n   */\n  get standard() {\n    return this.parsed.standard;\n  }\n\n  /**\n   * Custom types\n   *\n   * @type {Set<string>}\n   */\n  get custom() {\n    return this.parsed.custom;\n  }\n}\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Manual Extra Attack data model\n */\nexport class ExtraAttackModel extends CompactingMixin(foundry.abstract.DataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      name: new fields.StringField(),\n      formula: new FormulaField(),\n    };\n  }\n\n  static migrateData(source) {\n    // Convert very old tuple format\n    if (Array.isArray(source)) {\n      const [formula, name] = source;\n      source = { formula, name };\n    }\n\n    return super.migrateData(source);\n  }\n\n  /** @override */\n  static pruneData(data) {\n    if (!data.formula) delete data.formula;\n    if (!data.name) delete data.name;\n  }\n}\n","/**\n * Replaceable Source Mixin\n *\n * Adds function to the data model to replace source data.\n *\n * @see {@link https://github.com/foundryvtt/foundryvtt/issues/11792}\n *\n * @param {T} Base - Base datamodel\n * @returns {T} - Enriched class\n */\nexport const ReplaceableSourceMixin = (Base) =>\n  class extends Base {\n    /**\n     * Replace datamodel source\n     *\n     * @param {object} source - New source\n     * @returns {object} - Result of DataModel.updateSource()\n     */\n    replaceSource(source) {\n      source = foundry.utils.deepClone(source); // Prevent mutations to source data\n\n      this.constructor.migrateData(source);\n\n      // Clear values not present in new data\n      // Does not do deep comparisons\n      for (const [key, schema] of Object.entries(this.schema.fields)) {\n        if (schema.readonly) continue;\n        if (key in source) continue;\n        if (key in this._source) {\n          source[key] = undefined; // Delete syntax does not work here\n        }\n      }\n\n      return this.updateSource(source); // recursive:false,diff:false does not work here\n    }\n  };\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nexport class BaseMessageModel extends CompactingMixin(foundry.abstract.TypeDataModel) {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const nonEmpty = { initial: undefined, blank: false, nullable: false }; // Either undefined or something, not something but nothing\n    return {\n      subject: new fields.ObjectField(), // Message subject data\n      reference: new fields.StringField({ ...nonEmpty }), // UUID reference to whatever prompted this message\n      combat: new fields.StringField(), // Combat ID\n      config: new fields.ObjectField(), // Details about the message use scenario\n    };\n  }\n\n  static pruneData(data) {\n    for (const [key, sv] of Object.entries(data.subject ?? {})) {\n      if (typeof sv === \"object\") delete data.subject[key];\n    }\n    if (foundry.utils.isEmpty(data.subject)) delete data.subject;\n    if (!data.reference) delete data.reference;\n    if (!data.combat) delete data.combat;\n    if (foundry.utils.isEmpty(data.config)) delete data.config;\n  }\n\n  /**\n   * Additional shim for metadata shim\n   *\n   * @deprecated - Use `msg.system.config.rank` instead.\n   * @returns {{rank:number}} - Skill data\n   */\n  get skill() {\n    foundry.utils.logCompatibilityWarning(\n      \"ChatMessagePF.flags.pf1.metadata.skill.rank has been deprecated in favor of ChatMessagePF.system.config.rank\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return {\n      rank: this.config.rank,\n    };\n  }\n}\n","import { BaseMessageModel } from \"./base-message.mjs\";\n\n/**\n * Data Model for item cards.\n */\nexport class ItemMessageModel extends BaseMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      actor: new fields.StringField(), // Actor UUID (is this actually ever different from card speaker?)\n      template: new fields.StringField(), // Template UUID\n      item: new fields.SchemaField({\n        id: new fields.StringField(), // Item ID,\n        name: new fields.StringField(),\n        description: new fields.HTMLField(),\n        identified: new fields.BooleanField({ initial: true }),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (typeof source.item === \"string\") {\n      source.item = { id: source.item };\n    }\n\n    return super.migrateData(source);\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (!data.actor) delete data.actor;\n    if (!data.template) delete data.template;\n\n    if (data.item) {\n      if (!data.item.id) delete data.item.id;\n      if (data.item.identified) delete data.item.identified;\n      if (!data.item.description) delete data.item.description;\n      if (!data.item.name) delete data.item.name;\n\n      if (foundry.utils.isEmpty(data.item)) delete data.item;\n    }\n  }\n}\n","import { ItemMessageModel } from \"./item-message.mjs\";\n\n/**\n * Data Model for action cards.\n */\nexport class ActionMessageModel extends ItemMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const nonEmpty = { initial: undefined, blank: false, nullable: false }; // Either undefined or something, not something but nothing\n\n    return {\n      ...super.defineSchema(),\n      config: new fields.SchemaField({\n        critMult: new fields.NumberField({ initial: undefined, min: 1, step: 1, integer: true }),\n        nonlethal: new fields.BooleanField({ initial: false, required: false }),\n        cl: new fields.NumberField({ initial: undefined, required: false, integer: true, min: 0 }),\n        sl: new fields.NumberField({ initial: undefined, required: false, integer: true, min: 0 }),\n      }),\n      rolls: new fields.ObjectField(),\n      targets: new fields.ArrayField(new fields.StringField({ ...nonEmpty })),\n      action: new fields.SchemaField({\n        id: new fields.StringField(), // Action ID\n        name: new fields.StringField(),\n        description: new fields.HTMLField(),\n      }),\n      save: new fields.SchemaField(\n        {\n          dc: new fields.NumberField({ initial: undefined, integer: true, nullable: false }),\n          type: new fields.StringField(),\n        },\n        { initial: undefined, required: false }\n      ),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source) return;\n\n    // Old flag metadata\n    if (typeof source.action === \"string\") {\n      source.action = { id: source.action };\n    }\n\n    // PF1 v11.3\n    if (source.action?.dc !== undefined) {\n      source.save ??= {};\n      source.save.dc ??= source.action?.dc;\n    }\n\n    return super.migrateData(source);\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    if (this.action) {\n      // @deprecated\n      Object.defineProperty(this.action, \"dc\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"ChatMessagePF.system.action.dc is deprecated in favor of ChatMessagePF.system.save.dc\",\n            {\n              since: \"PF1 v11.3\",\n              until: \"PF1 v12\",\n            }\n          );\n\n          return this.save?.dc;\n        },\n      });\n    }\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (data.rolls) {\n      if (!(data.rolls.attacks?.length > 0)) delete data.rolls.attacks;\n      else {\n        for (const atk of data.rolls.attacks) {\n          if (!atk.critConfirm) delete atk.critConfirm;\n          if (!atk.critDamage?.length) delete atk.critDamage;\n          if (!atk.damage?.length) delete atk.damage;\n        }\n      }\n      if (foundry.utils.isEmpty(data.rolls)) delete data.rolls;\n    }\n\n    if (!data.targets?.length) delete data.targets;\n\n    if (data.config?.nonlethal === false) delete data.config?.nonlethal;\n    if (!Number.isFinite(data.config?.sl)) delete data.config?.sl;\n    if (!Number.isFinite(data.config?.cl)) delete data.config?.cl;\n\n    if (data.action) {\n      if (!data.action.id) delete data.action.id;\n      if (!data.action.description) delete data.action.description;\n      if (!data.action.name) delete data.action.name;\n      if (!Number.isFinite(data.action.dc)) delete data.action.dc;\n\n      if (foundry.utils.isEmpty(data.action)) delete data.action;\n    }\n\n    if (data.save?.dc === undefined) delete data.save;\n  }\n}\n","import { BaseMessageModel } from \"./base-message.mjs\";\n\n/**\n * Data Model for basic check cards.\n */\nexport class CheckMessageModel extends BaseMessageModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      dc: new fields.NumberField({ initial: undefined, nullable: false, integer: true }),\n    };\n  }\n\n  static pruneData(data) {\n    super.pruneData(data);\n\n    if (typeof data.dc !== \"number\") delete data.dc;\n  }\n}\n","/**\n * Haunt actor data model\n */\nexport class HauntModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      attributes: new fields.SchemaField({\n        hp: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            nullable: false,\n          }),\n          offset: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            nullable: false,\n          }),\n        }),\n        init: new fields.SchemaField({\n          value: new fields.NumberField({\n            initial: 10,\n            integer: true,\n            nullable: false,\n          }),\n        }),\n      }),\n      templates: new fields.ArrayField(new fields.StringField({ blank: false })),\n      traits: new fields.SchemaField({\n        size: new fields.StringField({\n          required: true,\n          initial: \"med\",\n          choices: () => pf1.config.actorSizes,\n        }),\n      }),\n      details: new fields.SchemaField({\n        alignment: new fields.StringField({\n          required: true,\n          initial: \"tn\",\n          choices: () => pf1.config.alignments,\n        }),\n        area: new fields.SchemaField({\n          size: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            min: 0,\n            nullable: false,\n          }),\n          type: new fields.StringField({\n            initial: \"circle\",\n            required: true,\n            choices: () => pf1.utils.internal.getTemplateTypes(),\n          }),\n        }),\n        aura: new fields.SchemaField({\n          custom: new fields.BooleanField({\n            initial: false,\n          }),\n          school: new fields.StringField(),\n        }),\n        cl: new fields.NumberField({\n          initial: 1,\n          integer: true,\n          min: 1,\n          nullable: false,\n        }),\n        cr: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n          }),\n        }),\n        destruction: new fields.HTMLField(),\n        effect: new fields.HTMLField(),\n        notes: new fields.HTMLField(),\n        notice: new fields.SchemaField({\n          dc: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            min: 0,\n            nullable: false,\n          }),\n          desc: new fields.StringField(),\n          value: new fields.StringField(),\n        }),\n        reset: new fields.SchemaField({\n          value: new fields.StringField(),\n          units: new fields.StringField({\n            blank: true,\n            choices: () => pf1.config.timePeriods,\n          }),\n        }),\n        trigger: new fields.StringField(),\n        weakness: new fields.StringField(),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    // Migrate Alignment info\n    const alignment = source.details?.alignment?.toLowerCase();\n    if (alignment && Object.keys(pf1.config.alignments).includes(alignment)) {\n      source.details.alignment = alignment;\n    }\n\n    // Migrate Aura info\n    if (typeof source.details?.aura === \"string\") {\n      source.details.aura = {\n        custom: true,\n        school: source.details.aura,\n      };\n    }\n\n    // Migrate Area info\n    if (typeof source.details?.area === \"string\") {\n      source.details.area = {\n        size: source.details.area.match(/\\d+/)?.[0] ?? 0,\n        type: \"circle\",\n      };\n    }\n\n    // Migrate Reset info\n    if (typeof source.details?.reset === \"string\") {\n      source.details.reset = {\n        value: source.details.reset,\n        units: \"spec\",\n      };\n    }\n\n    // Migrate Notice info\n    if (typeof source.details?.notice === \"string\") {\n      source.details.notice = {\n        value: source.details.notice,\n        dc: 0,\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.details.notes = source.details.notes.value;\n    }\n  }\n}\n","/**\n * Trap actor data model\n */\nexport class TrapModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      bypass: new fields.StringField({\n        blank: true,\n        choices: () => pf1.config.traps.bypass,\n      }),\n      cr: new fields.SchemaField({\n        base: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n        }),\n      }),\n      disarm: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        min: 0,\n        nullable: false,\n      }),\n      duration: new fields.SchemaField({\n        value: new fields.StringField(),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      effect: new fields.HTMLField(),\n      notes: new fields.HTMLField(),\n      perception: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        min: 0,\n        nullable: false,\n      }),\n      reset: new fields.SchemaField({\n        type: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.reset,\n        }),\n        value: new fields.StringField(),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      trigger: new fields.SchemaField({\n        type: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.trigger,\n        }),\n        value: new fields.StringField(),\n        vision: new fields.StringField({\n          blank: true,\n          choices: () => pf1.config.traps.vision,\n        }),\n        units: new fields.StringField({\n          blank: true,\n          initial: \"inst\",\n          choices: () => pf1.config.timePeriods,\n        }),\n      }),\n      type: new fields.StringField({\n        initial: \"mechanical\",\n      }),\n      technology: new fields.BooleanField({\n        initial: false,\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source.details) return;\n\n    // Migrate CR\n    if (source.details.cr) {\n      source.cr ??= {\n        base: source.details.cr.base,\n      };\n    }\n\n    // Migrate flat fields\n    [\"disarm\", \"effect\", \"perception\"].forEach((key) => {\n      if (source.details[key]) {\n        source[key] ??= source.details[key];\n      }\n    });\n\n    // Make sure the type is lowercase (actor breaks if type was \"Magic\" instead of \"magic\", for example)\n    if (source.details.type) {\n      const old = source.details.type;\n      for (const [key, value] of Object.entries(pf1.config.traps.types)) {\n        if (value === old) {\n          source.type ??= key;\n          break;\n        }\n      }\n      source.type ??= old;\n    }\n\n    // Migrate Duration\n    if (source.details.duration) {\n      source.duration ??= {\n        value: source.details.duration,\n        units: \"\",\n      };\n    }\n\n    // Migrate Reset\n    if (source.details.reset) {\n      source.reset ??= {\n        type: \"automatic\",\n        value: source.details.reset,\n        units: \"\",\n      };\n    }\n\n    // Migrate Trigger\n    if (source.details.trigger) {\n      source.duration ??= {\n        type: \"location\",\n        value: source.details.trigger,\n        units: \"\",\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.notes = source.details.notes.value;\n    }\n\n    // Clean up the Details\n    delete source.details;\n  }\n}\n","/**\n * Vehicle actor data model\n */\nexport class VehicleModel extends foundry.abstract.TypeDataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      attributes: new fields.SchemaField({\n        ac: new fields.SchemaField({\n          normal: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n          touch: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n          stopped: new fields.SchemaField({\n            bonus: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n            }),\n          }),\n        }),\n        hardness: new fields.SchemaField({\n          base: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n          bonus: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n          }),\n        }),\n        hp: new fields.SchemaField({\n          bonus: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n          offset: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n        }),\n        init: new fields.SchemaField({\n          value: new fields.NumberField({\n            initial: 0,\n            nullable: false,\n            integer: true,\n          }),\n        }),\n        savingThrows: new fields.SchemaField({\n          save: new fields.SchemaField({\n            base: new fields.NumberField({\n              initial: 0,\n              nullable: false,\n              integer: true,\n            }),\n          }),\n        }),\n      }),\n      crew: new fields.SchemaField({\n        value: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          nullable: false,\n        }),\n        max: new fields.NumberField({\n          initial: 1,\n          integer: true,\n          min: 1,\n          nullable: false,\n        }),\n        passengers: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          nullable: false,\n        }),\n      }),\n      currency: new fields.SchemaField({\n        pp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        gp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        sp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n        cp: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n          integer: true,\n        }),\n      }),\n      material: new fields.SchemaField({\n        base: new fields.StringField({}),\n        magicallyHardened: new fields.BooleanField({\n          initial: false,\n        }),\n      }),\n      squares: new fields.NumberField({\n        initial: 2,\n        integer: true,\n        min: 2,\n        nullable: false,\n      }),\n      traits: new fields.SchemaField({\n        size: new fields.StringField({\n          required: true,\n          initial: \"lg\",\n          choices: () => pf1.config.actorSizes,\n        }),\n        type: new fields.StringField({\n          required: true,\n          initial: \"land\",\n          choices: () => pf1.config.vehicles.type,\n        }),\n      }),\n      details: new fields.SchemaField({\n        carryCapacity: new fields.SchemaField({}),\n        acceleration: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        cost: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          nullable: false,\n        }),\n        currentSpeed: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        decks: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        description: new fields.HTMLField({}),\n        drivingCheck: new fields.StringField({}),\n        drivingDevice: new fields.StringField({}),\n        drivingSpace: new fields.StringField({}),\n        forwardFacing: new fields.StringField({}),\n        maxSpeed: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          nullable: false,\n        }),\n        propulsion: new fields.StringField({}),\n        notes: new fields.HTMLField(),\n      }),\n      driver: new fields.SchemaField({\n        skill: new fields.StringField(),\n        uuid: new fields.StringField(),\n      }),\n    };\n  }\n\n  static migrateData(source) {\n    if (!source.details) return;\n\n    // Migrate Hardess\n    if (typeof source.details.hardness === \"number\") {\n      source.attributes.hardness ??= {\n        base: source.details.hardness,\n        bonus: 0,\n      };\n\n      delete source.details.hardness;\n    }\n\n    // Migrate Crew\n    if (Number.isInteger(source.details.crew)) {\n      source.details.crew = {\n        value: source.details.crew,\n        max: source.details.crew,\n        passengers: 0,\n      };\n    }\n\n    // Migrate Notes\n    if (typeof source.details?.notes?.value === \"string\") {\n      source.details.notes = source.details.notes.value;\n    }\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\n\nconst affirmative = new Set([\"yes\", \"true\", \"1\", \"y\"]);\nconst negatory = new Set([\"no\", \"false\", \"0\", \"n\"]);\n\n/**\n * Basic item filter function for {@link findItem}\n *\n * @internal\n * @param {Item|object} item - Item or index entry to match\n * @param {object} query - Query data\n * @returns {boolean}\n */\nexport function matchItem(item, query) {\n  const { name, type } = query;\n  return item.name === name && (type ? item.type === type : true);\n}\n\n/**\n * Find item based on basic criteria.\n *\n * @internal\n * @param {string} name - Item name to search for\n * @param {object} [options] - Additional options\n * @param {string} [options.type] - Document type, such as \"buff\"\n * @returns {string|null} - Most appropriate matching item's UUID\n */\nexport async function findItem(name, { type } = {}) {\n  // Items directory has priority\n  const item = game.items.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n  if (item) return item.uuid;\n\n  const packTypePriority = {\n    items: 1_000,\n    world: 2_000,\n    module: 3_000,\n    system: 4_000,\n  };\n\n  // Sort packs by above criteria\n  const packs = [...game.packs]\n    .map((p) => ({\n      pack: p,\n      visible: p.visible ?? true,\n      disabled: p.config.pf1?.disabled ?? false,\n      sort: packTypePriority[p.metadata.packageType],\n    }))\n    .filter((p) => !p.disabled && p.visible && p.pack.metadata.type === \"Item\")\n    .sort((a, b) => a.sort - b.sort);\n\n  for (const { pack } of packs) {\n    if (!pack.indexed) await pack.getIndex();\n    const item = pack.index.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n    if (item) return item.uuid;\n  }\n\n  return null;\n}\n\n/**\n * Get most relevant roll data\n *\n * @param {ChatMessagePF} message\n * @returns {object} - Roll data\n */\nfunction getRollData(message) {\n  // Get action, item, or actor\n  let srcDoc = message.actionSource ?? message.itemSource;\n  srcDoc ??= message.speaker ? ChatMessage.getSpeakerActor(message.speaker) : null;\n  const rollData = srcDoc?.getRollData();\n\n  // Apply cached values\n  const cfg = message.system?.config;\n  if (cfg && rollData) {\n    if (cfg.cl !== undefined) rollData.cl = cfg.cl;\n    if (cfg.sl !== undefined) rollData.sl = cfg.sl;\n    if (cfg.critMult !== undefined) rollData.critMult = cfg.critMult;\n  }\n\n  return rollData;\n}\n\n/**\n * Helper class for making `CONFIG.TextEditor.enrichers` usage easier.\n */\nexport class PF1TextEnricher {\n  id;\n\n  pattern;\n\n  match;\n\n  enricher;\n\n  /**\n   * @abstract\n   * @param {Event} event Click event\n   * @param {HTMLElement} target Target element\n   */\n  click(event, target) {}\n\n  /**\n   * @abstract\n   * @param {Event} event Drag event\n   * @param {HTMLElement} target Target element\n   */\n  drag(event, target) {}\n\n  /**\n   * @param {string} id Unique identifier\n   * @param {RegExp} pattern Pattern for content matching.\n   * @param {Function} enricher Function for generating enriched content.\n   * @param {object} [interaction] Additional interaction options\n   * @param {string[]} [interaction.match] CSS selectors for triggering click or drag handler\n   * @param {Function} [interaction.click] Click handler\n   * @param {Function} [interaction.drag] Drag handler\n   */\n  constructor(id, pattern, enricher, { click, drag } = {}) {\n    if (!(pattern instanceof RegExp)) throw new Error(\"TextEnricher pattern must be a regular expression\");\n    if (!pattern.global) throw new Error(\"TextEnricher pattern must be global\");\n    this.id = id;\n    this.pattern = pattern;\n    this.enricher = enricher.bind(this);\n    if (click) this.click = click;\n    if (drag) this.drag = drag;\n  }\n}\n\n/**\n * @param {Element} el\n * @param {string} icon\n */\nfunction setIcon(el, icon) {\n  const i = document.createElement(\"i\");\n  i.inert = true;\n  i.classList.add(...icon.split(\" \"));\n  el.prepend(i, \" \");\n}\n\n/**\n * Parses duration string into distinct time and unit.\n *\n * @param {string} duration\n */\nfunction parseDuration(duration) {\n  const re = /^(?<time>\\d+)(?<unit>[a-z]+)?$/.exec(duration);\n  if (!re) return [];\n  const { time, unit } = re.groups;\n\n  const unitLabel = (() => {\n    switch (unit?.[0]?.toLowerCase()) {\n      default:\n      case \"r\":\n        return game.i18n.localize(\"PF1.Time.Period.round.Label\");\n      case \"s\":\n        return game.i18n.localize(\"PF1.Time.Period.second.Label\");\n      case \"h\":\n        return game.i18n.localize(\"PF1.Time.Period.hour.Label\");\n      case \"m\":\n        return game.i18n.localize(\"PF1.Time.Period.minute.Label\");\n    }\n  })();\n\n  return [parseInt(time), unit || \"r\", unitLabel];\n}\n\n/**\n * Create enriched element for interaction.\n *\n * @param {object} config - Element configuration\n * @param {string} [config.label] - Prefix label for the element\n * @param {string} [config.icon] - Font Awesome icon classes\n * @param {boolean} [config.click=false] - Is this a clickable element?\n * @param {boolean} [config.drag=false] - Is this draggable element?\n * @param {string} config.handler - {@link PF1TextEnricher} ID\n * @param {Record<string,string>} [config.options] - Additional options set as dataset elements.\n * @param {boolean} [config.broken=false] - Is this broken?\n * @returns {HTMLElement} - The element.\n */\nexport function createElement({ label, icon, click = false, drag = false, handler, options, broken = false } = {}) {\n  const a = document.createElement(\"a\");\n  if (click || drag) a.classList.add(\"pf1-link\");\n  else a.classList.add(\"pf1-info\");\n  if (click) a.classList.add(\"button\");\n  if (drag) {\n    a.classList.add(\"content\");\n    a.draggable = true;\n  }\n  if (icon) setIcon(a, icon);\n\n  if (label) a.append(label, \": \");\n  if (handler) a.dataset.handler = handler;\n\n  if (broken) a.classList.add(\"broken\");\n\n  setElementOptions(a, options);\n\n  a.dataset.tooltipClass = \"pf1\";\n\n  return a;\n}\n\n/**\n * Get card's speaker actor\n *\n * @param {HTMLElement} target\n * @param {ChatMessage} [message]\n * @returns {Actor|undefined}\n */\nfunction getSpeaker(target, message) {\n  const speaker = getSpeakerData(target, message);\n  if (!speaker) return;\n  return ChatMessage.implementation.getSpeakerActor(speaker);\n}\n\n/**\n * Get card's speaker data\n *\n * @param {HTMLElement} target - Element to search message card from.\n * @param {ChatMessage} [message]\n * @returns {object|undefined} - Message's speaker data or undefined\n */\nfunction getSpeakerData(target, message) {\n  message ??= getMessage(target);\n  return message?.speaker;\n}\n\n/**\n * Get Chat Message\n *\n * @param {HTMLElement} target\n * @returns {ChatMessagePF|undefined}\n */\nfunction getMessage(target) {\n  const messageId = target.closest(\"[data-message-id]\")?.dataset.messageId;\n  return game.messages.get(messageId);\n}\n\n/**\n * Get sheet actor\n *\n * @param {Element} target\n * @returns {Actor|undefined}\n */\nfunction getSheetActor(target) {\n  const appId = target.closest(\".app[data-appid]\")?.dataset.appid;\n  return ui.windows[appId]?.actor;\n}\n\n/**\n * Get relevant actors based on the enriched element data.\n *\n * @param {HTMLElement} button - Clicked element.\n * @param {boolean} required - Error if no actors are found.\n * @returns {Set<ActorPF>} - Relevant actors\n */\nexport function getRelevantActors(button, required = true) {\n  const actors = [];\n\n  const as = button.dataset.as || (button.dataset.speaker ? \"speaker\" : null);\n  const asSpeaker = as === \"speaker\";\n  const asSheet = as === \"sheet\";\n  const auto = [\"auto\", \"context\"].includes(as);\n\n  // Speaker\n  if (asSpeaker || auto) {\n    const actor = getSpeaker(button);\n    if (actor) actors.push(actor);\n  }\n\n  if (asSheet || auto) {\n    const actor = getSheetActor(button);\n    if (actor) actors.push(actor);\n  }\n\n  if (!as) {\n    // Controlled tokens\n    if (canvas.tokens.controlled.length) {\n      const tokenActors = canvas.tokens.controlled.map((t) => t.actor);\n      for (const actor of tokenActors) {\n        if (actor) actors.push(actor);\n      }\n    }\n    // Configured character\n    else {\n      const actor = game.user.character;\n      if (actor) actors.push(actor);\n    }\n  }\n\n  if (required && actors.length == 0) {\n    ui.notifications.error(game.i18n.localize(\"PF1.EnrichedText.Errors.NoActors\"), { console: false });\n    throw new Error(\"No valid actors found.\");\n  }\n\n  return new Set(actors);\n}\n\n/**\n * Add tooltip to enriched element.\n *\n * @param {Element} el Target element\n * @param {object} allowed -\n */\nexport function generateTooltip(el, allowed = {}) {\n  const { roll, formula, bonus, speaker, name, level, as, card, dc } = el.dataset;\n\n  const tooltip = [];\n  if (name) tooltip.push(name);\n  if (roll) {\n    if (/d\\d+/.test(roll)) tooltip.push(game.i18n.localize(\"PF1.Roll\") + `: ${roll}`);\n    else tooltip.push(game.i18n.format(\"PF1.TakeX\", { number: roll }));\n  } else if (formula) {\n    tooltip.push(formula);\n  }\n  if (level) tooltip.push(game.i18n.localize(\"PF1.Level\") + `: ${level}`);\n  if (bonus) tooltip.push(game.i18n.localize(\"PF1.Bonus\") + `: ${bonus}`);\n  if (speaker || as === \"speaker\") tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsSpeaker\"));\n  if (allowed.card) {\n    if (card) tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsCard\"));\n    else tooltip.push(game.i18n.localize(\"PF1.EnrichedText.Direct\"));\n  }\n\n  if (tooltip.length) el.dataset.tooltip = tooltip.join(\"<br>\");\n}\n\n/**\n * Break down options string into dataset properties.\n *\n * @internal\n * @param {Element} el Target element\n * @param {string} options Options string\n */\nexport function setElementOptions(el, options) {\n  if (!options) return;\n  for (const option of options.split(\";\")) {\n    const [key, value] = option.split(\"=\", 2);\n    if (el.dataset[key]) el.dataset[key] += \";\" + value;\n    else el.dataset[key] = value ?? true;\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSave(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { roll, bonus, type, dc } = target.dataset;\n  if (!type) throw new Error(\"No save type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n  if (dc) options.dc = parseInt(dc);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSavingThrow(type, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAbility(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { ability, bonus, roll } = target.dataset;\n  if (!ability) throw new Error(\"No ability check type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollAbilityTest(ability, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} _event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onDraw(_event, target) {\n  const { ident } = target.dataset;\n  if (!ident) throw new Error(\"No roll table defined\");\n\n  const table = await fromUuid(ident);\n  if (!table) throw new Error(`Roll table not found for \"${ident}\"`);\n  await table.draw({ roll: true, displayChat: true });\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSkill(event, target) {\n  // Add additional options\n  const options = {};\n  const { skill, bonus, roll, info, dc } = target.dataset;\n  if (!skill) throw new Error(\"No skill key defined\");\n\n  if (info) {\n    const journal = pf1.config.skillCompendiumEntries[skill];\n    if (!journal) throw new Error(`Journal entry not found for skill \"${skill}\"`);\n    return void pf1.utils.openJournal(journal);\n  }\n\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n  if (dc) options.dc = parseInt(dc);\n\n  const actors = getRelevantActors(target);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSkill(skill, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onUse(event, target) {\n  // Add additional options\n  const options = {};\n  const { type, item: itemName, action: actionIdent, speaker } = target.dataset;\n  if (!itemName) throw new Error(\"No item name defined\");\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    const item = actor.items.find((item) => {\n      if (type && item.type !== type) return false;\n      return item.name.localeCompare(itemName, undefined, { usage: \"search\" }) == 0;\n    });\n\n    if (!item) {\n      const msg = game.i18n.format(\"PF1.Warning.NoItemOnActor\", { actor: actor.name, item: itemName });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(\"PF1 | @Use |\", msg, actor);\n      continue;\n    }\n\n    let itemAction;\n    if (actionIdent) {\n      const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n      const { actionTag, actionId } = re?.groups ?? {};\n      const actionName = !actionTag && !actionId ? actionIdent : null;\n      itemAction = item.actions.find((act) => {\n        if (actionId) return act.id === actionId;\n        if (actionTag) return act.tag === actionTag;\n        return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n      });\n\n      if (!itemAction) {\n        const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, action: actionIdent });\n        ui.notifications.warn(msg, { console: false });\n        console.warn(\"PF1 | @Use |\", msg, actor);\n        continue;\n      }\n\n      itemAction.use();\n    } else {\n      item.use();\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAction(event, target) {\n  // Add additional options\n  const options = {};\n  const { action: actionIdent } = target.dataset;\n\n  const msgId = target.closest(\".chat-message[data-message-id]\")?.dataset.messageId;\n  const msg = game.messages.get(msgId);\n  const item = msg.itemSource;\n\n  if (!item) {\n    const warn = game.i18n.format(\"PF1.EnrichedText.Errors.NoItemInMessage\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.warn(\"PF1 | @Action |\", warn, msg);\n  }\n\n  const actor = item.actor;\n\n  const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n  const { actionTag, actionId } = re?.groups ?? {};\n  const actionName = !actionTag && !actionId ? actionIdent : null;\n\n  const action = item.actions.find((act) => {\n    if (actionId) return act.id === actionId;\n    if (actionTag) return act.tag === actionTag;\n    return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n  });\n\n  if (!action) {\n    const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, actor: actor.name });\n    ui.notifications.warn(msg, { console: false });\n    return void console.warn(\"PF1 | @Action |\", msg, actor);\n  }\n\n  action.use();\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onHealth(event, target) {\n  const { command, formula, speaker, nonlethal, wounds, vars, dual, card } = target.dataset;\n\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  if (nonlethal) options.asNonlethal = true;\n  if (affirmative.has(dual)) options.dualHeal = true;\n  if (wounds) options.asWounds = true;\n\n  const message = getMessage(target);\n  const speakerData = getSpeakerData(target, message);\n\n  const targetRollData = vars === \"target\";\n  let rollData = targetRollData ? null : getRollData(message);\n\n  const isHeal = command === \"heal\";\n\n  // Generate card\n  if (card && actors.size == 0) {\n    // TODO: Make card flavor better\n    pf1.chat.command(command, formula, undefined, { rollData, speaker: speakerData });\n    return;\n  }\n\n  // Apply directly\n  for (const actor of actors) {\n    if (targetRollData) rollData = actor.getRollData();\n    // Roll card\n    if (card) {\n      const tname = actor.token?.name ?? actor.name;\n      pf1.chat.command(command, formula, game.i18n.format(\"PF1.EnrichedText.Subject\", { name: tname }), {\n        rollData,\n        speaker: speakerData,\n      });\n    }\n    // Apply directly\n    else {\n      const roll = await RollPF.safeRoll(formula, rollData);\n      let value = roll.total;\n      if (isHeal) value = -value;\n      actor.applyDamage(value, { ...options, event, element: target });\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onBrowse(event, target) {\n  const { category, options } = target.dataset;\n\n  // TODO: Configure browser filters with options.\n  // TODO: Find closest browser via Sørensen–Dice coefficient or something.\n\n  const browser = pf1.applications.compendiums[category];\n\n  const filters = {};\n\n  filters.tags = target.dataset.tag?.split(\";\").map((f) => f?.trim());\n  if (filters.tags?.length) browser._queueFilters(filters);\n\n  if (browser) browser.render(true, { focus: true });\n  else ui.notifications.error(game.i18n.format(\"PF1.EnrichedText.Errors.BrowserNotFound\", { category }));\n}\n\n/**\n * Handle Condition click\n *\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n * @returns {void}\n */\nexport async function onCondition(event, target) {\n  const { condition, toggle, remove, duration, options, vars, info } = target.dataset;\n\n  const cond = pf1.registry.conditions.getAliased(condition);\n  if (!cond) throw new Error(`Condition \"${condition}\" not found!`); // TODO: Error notification\n\n  let enableConfig = !remove;\n\n  let seconds = duration;\n  // Determine duration\n  if (duration && !info) {\n    const [time, unit] = parseDuration(duration);\n    if (time) {\n      const units = {\n        s: 1,\n        r: CONFIG.time.roundTime,\n        m: 60,\n        h: 60 * 60,\n      };\n      seconds = time * (units[unit?.[0]] ?? CONFIG.time.roundTime);\n    }\n  }\n\n  if (info) {\n    /** @type {JournalEntry} */\n    const journal = cond?.journal;\n    if (!journal) throw new Error(`Journal entry not found for condition \"${condition}\"`);\n    return void pf1.utils.openJournal(journal);\n  }\n\n  const targetRollData = vars === \"target\";\n  let rollData;\n\n  if (seconds && !Number.isFinite(seconds) && !targetRollData) {\n    rollData = getRollData(getMessage(target));\n    seconds = (await RollPF.safeRoll(seconds, rollData)).total * CONFIG.time.roundTime;\n  }\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    if (!remove && seconds) {\n      // Flat number\n      if (Number.isFinite(seconds)) {\n        enableConfig = { duration: { seconds } };\n      }\n      // Roll\n      else {\n        if (targetRollData) rollData = actor.getRollData();\n        else\n          rollData ??= enableConfig = {\n            duration: { seconds: (await RollPF.safeRoll(seconds, rollData)).total * CONFIG.time.roundTime },\n          };\n      }\n    }\n\n    if (toggle) {\n      actor.toggleCondition(condition, enableConfig);\n    } else {\n      actor.setCondition(condition, enableConfig);\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onApply(event, target) {\n  const { uuid, level, vars } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  const item = await fromUuid(uuid);\n  if (!item) {\n    const warn = game.i18n.localize(\"PF1.EnrichedText.Errors.ItemNotFound\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.error(\"PF1 | @Apply |\", warn, uuid);\n  }\n\n  // TODO: Support more types (race, class, and few others should never be here)\n  if (item.type !== \"buff\") {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.EnrichedText.Errors.UnsupportedItemType\", { type: item.type })\n    );\n  }\n\n  // Prepare item\n  const itemData = game.items.fromCompendium(item, { clearFolder: true });\n  itemData.system.active = true;\n\n  let roll;\n  const targetRollData = vars === \"target\";\n  const message = getMessage(target);\n  let rollData = targetRollData ? null : getRollData(message);\n  if (!targetRollData && level?.length) {\n    roll = await RollPF.safeRoll(level, rollData);\n    itemData.system.level = roll.total;\n  }\n\n  // Apply\n  for (const actor of actors) {\n    if (targetRollData && level?.length) {\n      rollData = actor.getRollData();\n      roll = await RollPF.safeRoll(level, rollData);\n      itemData.system.level = roll.total;\n    }\n\n    // Activate existing item with same source\n    const old = actor.itemTypes[item.type].find((i) => i._stats?.compendiumSource === uuid);\n    if (old) {\n      const activationData = { system: { active: true } };\n      if (roll) activationData.system.level = roll.total;\n      old.update(activationData);\n    }\n    // Add new\n    else {\n      Item.implementation.create(itemData, { parent: actor });\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onToggle(event, target) {\n  const { name, level, enable, disable, type, vars } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  let state;\n  if (enable) state = true;\n  else if (disable) state = false;\n\n  const targetRollData = vars === \"target\";\n  const message = getMessage(target);\n  let rollData = targetRollData ? null : getRollData(message);\n\n  for (const actor of actors) {\n    //\n    let items = actor.items;\n    if (type) items = actor.itemTypes[type];\n    const item = items?.getName(name);\n\n    // TODO: Attempt to find item based on source UUID\n\n    if (item) {\n      console.debug(\n        `PF1 | @Toggle | Setting ${name} state to`,\n        state ?? !item.activeState,\n        `on ${actor.name} [${actor.uuid}]`\n      );\n      // Special handling for buffs to assign level\n      if (type === \"buff\" && level) {\n        if (targetRollData) rollData = actor.getRollData();\n        const roll = await RollPF.safeRoll(level, rollData);\n\n        item.update({\n          system: {\n            active: state ?? !item.activeState,\n            level: roll.total,\n          },\n        });\n      } else {\n        item.setActive(state ?? !item.activeState);\n      }\n    } else {\n      console.debug(`PF1 | @Toggle | ${name} not found on ${actor.name} [${actor.uuid}]`);\n      if (actors.size === 1) ui.notifications.error(\"PF1.EnrichedText.Errors.ItemNotFound\", { localize: true });\n    }\n  }\n}\n\n/**\n * Text enrichers\n */\nexport const enrichers = [\n  // @Apply\n  new PF1TextEnricher(\n    \"apply\",\n    /@Apply\\[(?<ident>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    async (match, _options) => {\n      const { ident, options, label } = match.groups;\n\n      const item = fromUuidSync(ident) ?? fromUuidSync(await findItem(ident, { type: \"buff\" }));\n\n      if (!item) console.warn(\"PF1 | @Apply | Could not find item\", ident);\n\n      const broken = !item;\n\n      const a = createElement({ label, click: true, handler: \"apply\", options, broken });\n\n      if (item) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.Item\")}: ${item.name}`;\n        a.dataset.uuid = item.uuid;\n        a.append(item.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fa-solid fa-angles-right\");\n\n      return a;\n    },\n    {\n      click: onApply,\n    }\n  ),\n  // @Toggle\n  new PF1TextEnricher(\n    \"toggle\",\n    /@Toggle\\[(?<ident>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    async (match, _options) => {\n      const { ident, options, label } = match.groups;\n      if (!ident) throw new Error(\"No target\");\n\n      const a = createElement({ label, click: true, handler: \"toggle\", options });\n\n      a.dataset.name = ident.trim();\n\n      generateTooltip(a);\n\n      a.append(label || ident);\n      if (a.dataset.enable) setIcon(a, \"fa-solid fa-toggle-on\");\n      else if (a.dataset.disable) setIcon(a, \"fa-solid fa-toggle-off\");\n      else setIcon(a, \"fa-solid fa-shuffle\");\n\n      return a;\n    },\n    {\n      click: onToggle,\n    }\n  ),\n  // @Save\n  new PF1TextEnricher(\n    \"save\",\n    /@Save\\[(?<save>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData } = {}) => {\n      const { save, options, label } = match.groups;\n      const a = createElement({ label, click: true, handler: \"save\", options });\n      const name = pf1.config.savingThrows[save];\n\n      let dc = a.dataset.dc;\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (dc?.length && !/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n        a.dataset.dc = dc;\n      }\n\n      const title = dc?.length ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      a.dataset.type = save;\n      if (dc?.length) a.dataset.sensitiveLabel = name;\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-shield-halved\");\n\n      return a;\n    },\n    {\n      click: onSave,\n    }\n  ),\n  // @Ability\n  new PF1TextEnricher(\n    \"ability\",\n    /@Ability\\[(?<ability>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { ability, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"ability\", options });\n      const title = pf1.config.abilities[ability] ?? ability;\n      a.dataset.ability = ability;\n      a.append(title);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-brain\");\n\n      return a;\n    },\n    {\n      click: onAbility,\n    }\n  ),\n  // @Skill\n  new PF1TextEnricher(\n    \"skill\",\n    /@Skill\\[(?<skill>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData }) => {\n      const { skill, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"skill\", options });\n      const name = pf1.config.skills[skill] ?? skill;\n      a.dataset.skill = skill;\n\n      if (a.dataset.info) {\n        const compendium = pf1.config.skillCompendiumEntries[skill];\n        if (!compendium) return;\n        setIcon(a, \"fa-solid fa-book\");\n      } else {\n        setIcon(a, \"fa-solid fa-hands-clapping\");\n      }\n\n      let dc = a.dataset.dc;\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (dc?.length && !/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n        a.dataset.dc = dc;\n      }\n      const title = dc?.length ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      if (dc?.length) a.dataset.sensitiveLabel = name;\n\n      generateTooltip(a);\n\n      return a;\n    },\n    {\n      click: onSkill,\n    }\n  ),\n  // @Use\n  new PF1TextEnricher(\n    \"use\",\n    /@Use\\[(?<item>.*?)(?:#(?<action>.*?))?(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n\n    (match, _options) => {\n      const { item, action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"use\", options });\n      a.append(item?.trim());\n      a.dataset.item = item?.trim();\n      if (action) {\n        const displayAction = action.replace(/^(id|tag):\\s*/, \"\")?.trim();\n        // TODO: pretty print action name if speaker option is enabled\n        a.append(` (${displayAction})`);\n        a.dataset.action = action?.trim();\n      }\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onUse,\n    }\n  ),\n  // @Action\n  new PF1TextEnricher(\n    \"action\",\n    /@Action\\[(?<action>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"action\", options });\n      // TODO: Pretty print the action name, especially if speaker option is enabled\n      a.append(action);\n      a.dataset.speaker = true;\n      a.dataset.action = action?.trim();\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onAction,\n    }\n  ),\n  // @Heal & @Damage\n  new PF1TextEnricher(\n    \"health\",\n    /@(?<command>Heal|Damage)\\[(?<formula>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { command, formula, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"health\", options });\n      a.dataset.command = command.toLowerCase();\n      a.dataset.formula = formula;\n\n      a.append(\n        game.i18n.format(`PF1.EnrichedText.Health.${command}`, {\n          value: label || formula,\n          NL: a.dataset.nonlethal ? game.i18n.localize(\"PF1.EnrichedText.Health.NL\") : \"\",\n        })\n      );\n\n      generateTooltip(a, { card: true });\n\n      if (a.dataset.command === \"heal\") setIcon(a, \"fa-solid fa-heart-pulse\");\n      else setIcon(a, \"fa-solid fa-heart-crack\");\n\n      // TODO: Make wound damage better\n\n      return a;\n    },\n    {\n      click: onHealth,\n    }\n  ),\n  // @Browse\n  new PF1TextEnricher(\n    \"browse\",\n    /@Browse\\[(?<category>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { category, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"browse\", options });\n\n      a.dataset.category = category;\n\n      let mainlabel;\n      const browser = pf1.applications.compendiumBrowser.CompendiumBrowser.BROWSERS[category];\n      if (!browser) {\n        setIcon(a, \"fa-solid fa-link-slash\");\n        a.classList.add(\"invalid\");\n        mainlabel = category;\n      } else {\n        setIcon(a, \"fa-solid fa-book\");\n        mainlabel = game.i18n.localize(browser.typeName);\n      }\n\n      mainlabel = game.i18n.format(\"PF1.EnrichedText.Browse\", { value: mainlabel });\n\n      if (label) a.append(label);\n      else a.append(mainlabel);\n\n      generateTooltip(a);\n\n      if (label) a.dataset.tooltip = mainlabel;\n      if (!browser) {\n        if (label) a.dataset.tooltip += \"<br>\";\n        a.dataset.tooltip +=\n          game.i18n.localize(\"PF1.EnrichedText.Error\") +\n          \": \" +\n          game.i18n.localize(\"PF1.EnrichedText.Errors.NoCategory\");\n      }\n\n      return a;\n    },\n    {\n      click: onBrowse,\n    }\n  ),\n  // Weight\n  new PF1TextEnricher(\"weight\", /@Weight\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>lbs|kg)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"kg\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"lbs\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n\n    let lbs = total,\n      kg = total;\n\n    if (sourceImperial) kg = pf1.utils.swapWeight(total, \"lbs\");\n    if (sourceMetric) lbs = pf1.utils.swapWeight(total, \"kg\");\n\n    const kgl = `${pf1.utils.limitPrecision(kg, 3)} ${pf1.config.weightUnitsShort.kg}`;\n    const lbsl = `${pf1.utils.limitPrecision(lbs, 3)} ${pf1.config.weightUnitsShort.lbs}`;\n\n    const isMetric = pf1.utils.getWeightSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${kgl} (${lbsl})`;\n      else label = `${lbsl} (${kgl})`;\n    } else if (isMetric) label = kgl;\n    else label = lbsl;\n\n    a.textContent = label;\n\n    return a;\n  }),\n  // Distance\n  new PF1TextEnricher(\"distance\", /@Distance\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>ft|m)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"m\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"ft\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n    let ft = total,\n      m = total;\n\n    if (sourceImperial) m = pf1.utils.swapDistance(total, \"ft\");\n    if (sourceMetric) ft = pf1.utils.swapDistance(total, \"m\");\n\n    const ml = `${pf1.utils.limitPrecision(m, 3)} ${pf1.config.measureUnitsShort.m}`;\n    const ftl = `${pf1.utils.limitPrecision(ft, 3)} ${pf1.config.measureUnitsShort.ft}`;\n\n    const isMetric = pf1.utils.getDistanceSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${ml} (${ftl})`;\n      else label = `${ftl} (${ml})`;\n    } else if (isMetric) label = ml;\n    else label = ftl;\n\n    a.textContent = label;\n\n    a.dataset.tooltip = formula;\n\n    return a;\n  }),\n  // @Condition\n  new PF1TextEnricher(\n    \"condition\",\n    /@Condition\\[(?<condition>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { condition, options, label } = match.groups;\n\n      // TODO: Find closest condition via Sørensen–Dice coefficient or something.\n      let cond = pf1.registry.conditions.getAliased(condition);\n      if (!cond) {\n        // No direct match, find closest matching conditions and take the one with longest ID\n        const condId = [\n          ...pf1.registry.conditions.keys(),\n          ...[...pf1.registry.conditions.values()].map((e) => [...e.aliases]).flat(),\n        ]\n          .filter((c) => c.startsWith(condition))\n          .sort((a, b) => b.length - a.length)[0];\n        cond = pf1.registry.conditions.getAliased(condId);\n      }\n      let text = label || cond?.name || condition;\n\n      const broken = !cond;\n\n      const a = createElement({ click: true, handler: \"condition\", options, broken });\n      if (!cond) a.classList.add(\"broken\");\n\n      a.dataset.condition = cond?.id || condition;\n\n      if (a.dataset.disable) a.dataset.remove = true;\n\n      if (a.dataset.info) {\n        setIcon(a, \"fa-solid fa-book\");\n        if (!cond?.journal) a.classList.add(\"broken\");\n      } else if (a.dataset.remove) {\n        setIcon(a, \"fa-solid fa-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Remove\", { value: text });\n      } else if (a.dataset.toggle) {\n        setIcon(a, \"fa-solid fa-plus-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Toggle\", { value: text });\n      } else {\n        setIcon(a, \"fa-solid fa-plus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Add\", { value: text });\n      }\n\n      if (a.dataset.duration) {\n        let [period, _, unit] = parseDuration(a.dataset.duration);\n        if (!period) {\n          // On parse failing, treat it as complex formula\n          period = a.dataset.duration;\n          unit = game.i18n.localize(\"PF1.Time.Period.round.Label\");\n        }\n        a.dataset.tooltip += \"<br>\" + game.i18n.format(\"PF1.EnrichedText.Condition.Duration\", { unit, period });\n        text = game.i18n.format(\"PF1.ForDuration\", {\n          subject: text,\n          duration: game.i18n.format(\"PF1.Time.Format\", { value: period, unit }),\n        });\n      }\n\n      a.append(text);\n\n      return a;\n    },\n    {\n      click: onCondition,\n    }\n  ),\n  // @Draw\n  new PF1TextEnricher(\n    \"draw\",\n    /@Draw\\[(?<ident>.*?)\\](?:\\{(?<label>.*?)\\})?/g,\n    /**\n     * @param {any} match\n     * @param {unknown} _options\n     * @returns\n     */\n    async (match, _options) => {\n      const { ident, label } = match.groups;\n\n      const table = fromUuidSync(ident) || game.tables.getName(ident);\n\n      if (!table) console.warn(\"PF1 | @Draw | Could not find roll table\", ident);\n\n      const broken = !table;\n\n      const a = createElement({ click: true, handler: \"draw\", broken });\n\n      if (table) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.RollTable\")}: ${table.name}`;\n        a.dataset.ident = table.uuid;\n\n        a.append(label || table.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fa-solid fa-th-list\");\n\n      return a;\n    },\n    {\n      click: onDraw,\n    }\n  ),\n  // Source\n  new PF1TextEnricher(\"source\", /@Source\\[(?<ident>\\w+)(?:;(?<options>.*?))?]/g, async (match, _options) => {\n    const { ident, options } = match.groups;\n\n    let source = pf1.registry.sources.get(ident);\n    if (!source) source = pf1.registry.sources.find((s) => s.abbr.toLowerCase() === ident.toLowerCase());\n\n    const a = createElement({ handler: \"source\", options, broken: !source });\n\n    if (source) {\n      a.append(source.name);\n      const pages = a.dataset.pages;\n      if (pages) a.append(\" \", game.i18n.format(\"PF1.ContentSource.Pages\", { pages }));\n\n      // Tooltip\n      const tips = [game.i18n.localize(\"PF1.ContentSource.Info.ID\") + \": \" + source.id];\n      if (source.date) tips.push(game.i18n.localize(\"PF1.ContentSource.Info.Release\") + \": \" + source.date);\n      if (source.publisher) tips.push(game.i18n.localize(\"PF1.ContentSource.Info.Publisher\") + \": \" + source.publisher);\n      a.dataset.tooltip = tips.join(\"<br>\");\n    } else {\n      a.replaceChildren(ident);\n    }\n\n    setIcon(a, \"fa-solid fa-bookmark\");\n\n    return a;\n  }),\n];\n\n/**\n * Register in setup phase so modules can alter the enrichers before they're registered\n * ... and become largely immutable without deeper modification.\n * Otherwise this could be done in init phase.\n */\nHooks.once(\"setup\", () => {\n  CONFIG.TextEditor.enrichers.push(...enrichers);\n});\n\n/**\n * Proxy click and drag events to the enrichers\n *\n * @param {JQuery<MouseEvent>} event Click event\n * @param click\n */\nconst onEnrichedInteraction = (event, click = true) => {\n  const target = event.currentTarget,\n    handler = target.dataset.handler,\n    enricher = enrichers.find((e) => e.id === handler);\n\n  if (!enricher) throw new Error(`Relevant enricher not found: ${handler}`);\n\n  if (target.classList.contains(\"broken\")) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (click) enricher.click(event, target);\n  else enricher.drag(event, target);\n};\n\n// Register click & drag handlers\nHooks.once(\"ready\", () => {\n  // Mimic Foundry listener handling for simplicity\n  // TODO: Use plain DOM instead\n  const body = $(\"body\");\n  body.on(\"click\", \"a.pf1-link.button\", (event) => onEnrichedInteraction(event, true));\n  //body.on(\"drag\", \"a.pf1-link.content\", (event) => onEnrichedInteraction(event, false));\n});\n","/**\n * Handle custom chat commands\n *\n * @param {string} command - Command\n * @param {string} message - Message\n * @param {string} comment - Comment\n * @param {object} options - Additional options\n */\nexport async function command(command, message, comment, options) {\n  command = command.toLowerCase();\n\n  console.debug(\"PF1 | Chat Command:\", { command, formula: message, comment });\n\n  let { speaker, rollData } = options;\n\n  speaker = speaker ?? ChatMessage.implementation.getSpeaker();\n  const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n  const token = actor?.token;\n\n  try {\n    switch (command) {\n      case \"d\":\n      case \"damage\":\n      case \"h\":\n      case \"heal\": {\n        rollData ??= actor?.getRollData() ?? {};\n        const roll = await new Roll(message, rollData).evaluate();\n\n        const isHealing = /^H/i.test(command);\n        const content = await renderTemplate(\"systems/pf1/templates/chat/simple-damage.hbs\", {\n          actor,\n          token,\n          isHealing,\n          css: isHealing ? \"heal\" : \"damage\",\n          value: {\n            total: roll.total * (isHealing ? -1 : 1),\n            half: Math.floor(roll.total / 2) * (isHealing ? -1 : 1),\n          },\n          roll,\n          total: roll.total,\n          details: await roll.getTooltip(),\n          hasDetails: roll.terms.length > 1 || !roll.isDeterministic,\n        });\n\n        const chatOptions = {\n          // TODO: Apply custom message type\n          rolls: [roll],\n          flavor: comment,\n          sound: CONFIG.sounds.dice,\n          speaker,\n          rollMode: game.settings.get(\"core\", \"rollMode\"),\n          content,\n          system: {\n            subject: { health: isHealing ? \"healing\" : \"damage\" },\n          },\n        };\n\n        ChatMessage.implementation.create(chatOptions);\n      }\n    }\n  } catch (err) {\n    ui.notifications.error(\"PF1.Error.CommandParse\", { localize: true, console: false });\n    console.error(\"Error handling chat command:\", { command, formula: message, comment }, \"\\n\", err);\n  }\n}\n\n/**\n * `chatMessage` hook event handler.\n *\n * @param {ChatLog} app - Chat log\n * @param {string} msg - Chat message\n * @param {object} options - Options\n * @returns {boolean|void} - False if processing is to stop. Nothing otherwise.\n */\nfunction handleChatInput(app, msg, options) {\n  const re = /^\\/(?<command>h|heal|d|damage)\\s+(?<formula>.*?)(\\s*#\\s*(?<comment>.*))?$/i.exec(msg);\n  if (!re) return;\n\n  const { command, formula, comment } = re.groups;\n\n  pf1.chat.command(command, formula, comment, options);\n\n  return false;\n}\n\nHooks.on(\"chatMessage\", handleChatInput);\n","const withinAngle = (min, max, value) => {\n  min = Math.normalizeDegrees(min);\n  max = Math.normalizeDegrees(max);\n  value = Math.normalizeDegrees(value);\n\n  if (min < max) return value >= min && value <= max;\n  return value >= min || value <= max;\n};\n\n/**\n * @param {Point} point\n * @param {Rectangle} rect\n * @returns {boolean}\n */\nconst withinRect = (point, rect) => {\n  return point.x >= rect.x && point.x < rect.x + rect.width && point.y >= rect.y && point.y < rect.y + rect.height;\n};\n\n/**\n * Applies patches to core functions to integrate Pathfinder specific measurements.\n *\n * Replacement for `CONFIG.Canvas.layers.templates.layerClass`\n */\nexport class TemplateLayerPF extends TemplateLayer {\n  /**\n   * Override to provide snapped drag for cone template direction.\n   *\n   * @override\n   * @param {Event} event\n   * Synced with Foundry v12.331\n   */\n  _onDragLeftMove(event) {\n    if (!game.settings.get(\"pf1\", \"measureStyle\")) return super._onDragLeftMove(event);\n\n    const interaction = event.interactionData;\n\n    // Snap the destination to the grid\n    const snapToGrid = !event.shiftKey;\n    if (snapToGrid) {\n      const snapMode =\n        CONST.GRID_SNAPPING_MODES.CENTER | CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT | CONST.GRID_SNAPPING_MODES.CORNER;\n      interaction.destination = this.getSnappedPoint(interaction.destination, { mode: snapMode });\n    }\n\n    // Compute the ray\n    const { origin, destination, preview } = interaction;\n    const ray = new Ray(origin, destination);\n    let distance;\n\n    // Grid type\n    if (game.settings.get(\"core\", \"gridTemplates\")) {\n      distance = canvas.grid.measurePath([origin, destination]).distance;\n    }\n    // Euclidean type\n    else {\n      const ratio = canvas.dimensions.size / canvas.dimensions.distance;\n      distance = ray.distance / ratio;\n    }\n\n    // Update the preview object\n    if (snapToGrid && preview.document.t === \"cone\") {\n      const halfAngle = CONFIG.MeasuredTemplate.defaults.angle / 2;\n      const baseDirection = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      preview.document.direction = Math.floor((baseDirection + halfAngle / 2) / halfAngle) * halfAngle;\n    } else {\n      preview.document.direction = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n    }\n    preview.document.distance = distance;\n    preview.renderFlags.set({ refreshShape: true });\n  }\n}\n\nexport class MeasuredTemplatePF extends MeasuredTemplate {\n  /**\n   * Calculates a set of x & y coordinates that the template actually should have based on type and origin\n   *\n   * @returns {{x: number, y: number}}\n   * @private\n   */\n  _getTemplateSnapCoordinates() {\n    let { x, y } = this.document;\n    const grid = canvas.grid;\n\n    if (this.document.t === \"cone\" && game.canvas.grid.isSquare) {\n      const angle = this.document.direction;\n\n      if (angle <= 45 || angle >= 315) {\n        x = Math.ceil(x / grid.size) * grid.size;\n      } else if (angle >= 135 && angle <= 225) {\n        x = Math.floor(x / grid.size) * grid.size;\n      }\n\n      if (angle >= 45 && angle <= 135) {\n        y = Math.ceil(y / grid.size) * grid.size;\n      } else if (angle >= 225 && angle <= 315) {\n        y = Math.floor(y / grid.size) * grid.size;\n      }\n    }\n\n    return { x, y };\n  }\n\n  /**\n   * Recalculate template visual element positions based on snap coordinates\n   *\n   * @private\n   */\n  _setElementOffsets() {\n    const { x: snapX, y: snapY } = this._getTemplateSnapCoordinates();\n    const offsetX = snapX - this.document.x;\n    const offsetY = snapY - this.document.y;\n\n    this.template.x = offsetX;\n    this.template.y = offsetY;\n\n    this.ruler.position.set(this.ray?.dx + 10 + offsetX, this.ray?.dy + 5 + offsetY);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshRulerText() {\n    super._refreshRulerText();\n    this._setElementOffsets();\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshPosition() {\n    super._refreshPosition();\n    this._setElementOffsets();\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _refreshTemplate() {\n    super._refreshTemplate();\n    this._setElementOffsets();\n  }\n\n  /**\n   * Get highlighted square coordinates.\n   *\n   * Supports only circle, cone and ray templates.\n   *\n   * @protected\n   * @override\n   * @returns {Point[]} - Array of grid coordinates\n   */\n  _getGridHighlightPositions() {\n    const templateType = this.document.t;\n    // In case this is not initialized, not circle or cone, or system measure templates are disabled, let Foundry handle it.\n    // Foundry's handling of Ray is perfectly usable even if slightly wrong, so no override needed.\n    if (\n      !game.settings.get(\"pf1\", \"measureStyle\") ||\n      (templateType !== \"circle\" && (templateType !== \"cone\" || canvas.grid.isHexagonal))\n    ) {\n      return super._getGridHighlightPositions();\n    }\n\n    const grid = canvas.grid;\n    const { x: ox, y: oy } = this._getTemplateSnapCoordinates();\n\n    // Test if template origin is in the center of a grid space. Apply a grace margin for odd grid sizes\n    const originInCenter = ox % grid.size === Math.ceil(grid.size / 2) && oy % grid.size === Math.ceil(grid.size / 2);\n\n    const shape = this.shape;\n    const bounds = shape.getBounds();\n    bounds.x += ox;\n    bounds.y += oy;\n    bounds.fit(canvas.dimensions.rect);\n    bounds.pad(1);\n\n    // Identify grid spaces that are in \"walking distance\" of the template origin\n    const positions = [];\n    const [i0, j0, i1, j1] = grid.getOffsetRange(bounds);\n    for (let i = i0; i < i1; i++) {\n      for (let j = j0; j < j1; j++) {\n        const offset = { i, j };\n        const { x: cx, y: cy } = grid.getCenterPoint(offset);\n\n        const distance = grid.measurePath([\n          { x: cx, y: cy },\n          { x: ox, y: oy },\n        ]).distance;\n\n        switch (templateType) {\n          case \"cone\": {\n            // Include all squares that are within \"walking distance\"\" and within 45 degrees of the cone direction\n            const angle = (Math.atan2(cy - oy, cx - ox) * 180) / Math.PI;\n            const angleDiff = Math.abs(angle - this.document.direction) % 360;\n            const docAngle = this.document.angle / 2;\n\n            if (distance < this.document.distance && (angleDiff <= docAngle || angleDiff >= 360 - docAngle)) {\n              positions.push(grid.getTopLeftPoint(offset));\n            }\n            break;\n          }\n\n          case \"circle\":\n            // If template origin lies in grid center, include all squares that have their center within the distance, otherwise only those that are strictly within\n            // Centered circles get a 2% grace margin in distance calculation to deal with uneven grid sizes\n            if (\n              originInCenter || canvas.grid.isHexagonal\n                ? distance <= this.document.distance * 1.02\n                : distance < this.document.distance\n            ) {\n              positions.push(grid.getTopLeftPoint(offset));\n            }\n            break;\n        }\n      }\n    }\n    return positions;\n  }\n\n  /**\n   * Determine tokens residing within the template bounds, based on either grid highlight logic or token center.\n   *\n   * @public\n   * @returns {Promise<Token[]>} Tokens sufficiently within the template.\n   */\n  async getTokensWithin() {\n    const shape = this.document.t,\n      dimensions = this.scene.dimensions,\n      gridSizePx = dimensions.size,\n      gridSizeUnits = dimensions.distance;\n\n    const getCenter = () => {\n      if (shape !== \"rect\") return this.center;\n      // Hack: Fix for Foundry bug where .center for rectangle template returns top-left corner instead.\n      return {\n        x: this.x + this.width / 2,\n        y: this.y + this.height / 2,\n      };\n    };\n\n    // Ensure shape and related data exists (e.g. this.ray) for getHighlightedSquares to work correctly.\n    // this.width, this.height, etc. are wrong without this\n    if (!this.shape) {\n      this._applyRenderFlags({ refreshShape: true });\n      // HACK: Wait for next tick, the template won't be finalized by Foundry until then.\n      // Likely breaks with Foundry v12 with newer PIXI version\n      await new Promise((resolve) => canvas.app.ticker.addOnce(() => resolve()), undefined, PIXI.UPDATE_PRIORITY.LOW);\n    }\n\n    const tCenter = getCenter();\n\n    const { distance, angle, direction } = this.document;\n\n    // Max distance from template center, +1 cell for proper detection, and +1 pixel for uneven grids and rounding protection\n    const maxDistance = Math.max(this.height, this.width) + gridSizePx + 1;\n    // Get tokens within max potential distance from the template\n    const relevantTokens = new Set(\n      canvas.tokens.placeables.filter((t) => new Ray(t.center, tCenter).distance - t.sizeErrorMargin <= maxDistance)\n    );\n\n    const results = new Set();\n\n    const isLargeToken = (t) => t.document.width > 1 || t.document.height > 1;\n\n    const withinCircle = (target) => {\n      const ray = new Ray(tCenter, target);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include this token if its center is within template radius\n      return raySceneLength <= distance + 1;\n    };\n\n    const withinCone = (target, minAngle, maxAngle) => {\n      const ray = new Ray(tCenter, target);\n      const rayAngle = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      const rayWithinAngle = withinAngle(minAngle, maxAngle, rayAngle);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include token if its within template distance and within the cone's angle\n      return rayWithinAngle && raySceneLength <= distance + 1;\n    };\n\n    // Rectangle has same handling everywhere\n    if (shape === \"rect\") {\n      const rect = {\n        x: this.x,\n        y: this.y,\n        width: this.shape.width,\n        height: this.shape.height,\n      };\n\n      for (const t of relevantTokens) {\n        if (isLargeToken(t)) {\n          const cells = t.getOccupiedCells({ center: true });\n          if (cells.some((c) => withinRect(c, rect))) results.add(t);\n        } else {\n          if (withinRect(t.center, rect)) results.add(t);\n        }\n      }\n    }\n    // Special handling for gridless\n    else if (canvas.grid.type === CONST.GRID_TYPES.GRIDLESS && [\"circle\", \"cone\"].includes(shape)) {\n      // Pre-calc cone data\n      let minAngle, maxAngle;\n      if (shape === \"cone\") {\n        minAngle = Math.normalizeDegrees(direction - angle / 2);\n        maxAngle = Math.normalizeDegrees(direction + angle / 2);\n      }\n\n      // TODO: Test against vision points and ensure ~third of them are inside the template instead.\n      for (const t of relevantTokens) {\n        const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n        switch (shape) {\n          case \"circle\": {\n            if (cells.some((c) => withinCircle(c))) results.add(t);\n            break;\n          }\n          case \"cone\": {\n            if (cells.some((c) => withinCone(c, minAngle, maxAngle))) results.add(t);\n            break;\n          }\n        }\n      }\n    }\n    // Non-gridless\n    else {\n      const mapCoordsToCell = ({ x, y }) => ({ x, y, width: gridSizePx, height: gridSizePx });\n\n      const highlightSquares = this._getGridHighlightPositions().map(mapCoordsToCell);\n      for (const cell of highlightSquares) {\n        for (const t of relevantTokens) {\n          const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n          if (cells.some((tc) => withinRect(tc, cell))) {\n            results.add(t);\n            relevantTokens.delete(t);\n          }\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  getHighlightLayer() {\n    return canvas.interface.grid.getHighlightLayer(this.highlightId);\n  }\n\n  /**\n   * Return origin item if any.\n   *\n   * @type {Item|pf1.components.ItemAction|null}\n   */\n  get origin() {\n    const { uuid, action: actionId } = this.document.getFlag(\"pf1\", \"origin\") ?? {};\n    if (!uuid) return null;\n    const item = fromUuidSync(uuid);\n    const action = item?.actions?.get(actionId);\n    return action ?? item ?? null;\n  }\n}\n","// TODO: Make the highlight colors configurable\nconst rangeColor = {\n  fill: Color.from(\"#FF0000\"),\n  border: Color.from(\"#FF0000\").multiply(0.9),\n};\nconst reachColor = {\n  fill: Color.from(\"#FFFF00\"),\n  border: Color.from(\"#FFFF00\").multiply(0.9),\n};\n\nclass SquareHighlight {\n  constructor(origin, fillColor = 0x00ff00, borderColor = 0x000000, name) {\n    this.origin = origin;\n    this.borderColor = borderColor;\n    this.fillColor = fillColor;\n    this._squares = [];\n\n    this._id = foundry.utils.randomID();\n    this.name = name;\n    this.layer = canvas.interface.grid.addHighlightLayer(this.name);\n  }\n\n  addSquare(x, y) {\n    this._squares.push({ x, y });\n  }\n\n  clear() {\n    this.layer?.clear();\n  }\n\n  render() {\n    const gridSize = canvas.grid.size;\n\n    this.clear();\n\n    // Highlight squares\n    const hlname = this.layer.name;\n    const ig = canvas.interface.grid;\n    for (const s of this._squares) {\n      const x = Math.floor(this.origin.x - s.x) * gridSize;\n      const y = Math.floor(this.origin.y - s.y) * gridSize;\n      ig.highlightPosition(hlname, { x, y, border: this.borderColor, color: this.fillColor });\n    }\n  }\n}\n\n/**\n * Calculates the attack for a token's attack.\n */\nclass AttackHighlightBase {\n  /** @abstract */\n  clearHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n  /** @abstract */\n  renderHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @abstract\n   * @returns {boolean}\n   */\n  get isValid() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    const attack = action?.item;\n    if (!action || !token || !attack) throw new Error(\"Invalid arguments.\");\n\n    this._id = foundry.utils.randomID();\n    this.name = `AttackHighlight.${this._id}`;\n    this.layer = canvas.interface.grid.addHighlightLayer(this.name);\n  }\n}\n\nclass GridlessHighlight extends AttackHighlightBase {\n  /** @type {number[]|undefined} */\n  #rangeStops;\n\n  /** @override */\n  get isValid() {\n    return (this.#rangeStops?.length ?? 0) >= 2;\n  }\n\n  /** @type {{x: number, y: number} | undefined} */\n  #center;\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    this.#center = {\n      x: Math.floor(token.x + (tw * gridSize) / 2),\n      y: Math.floor(token.y + (th * gridSize) / 2),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const rangeMeasurements = [minRange || 0, r];\n\n    if (rangeKey === \"ft\") {\n      // Add range increments\n      const rangeIncrements = action.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        rangeMeasurements.push((a + 1) * r);\n      }\n    }\n\n    this.#rangeStops = rangeMeasurements.map((r) => {\n      const tokenOffset = r === 0 ? 0 : (tw * gridSize) / 2;\n      return r * canvas.dimensions.distancePixels + tokenOffset;\n    });\n  }\n\n  clearHighlight() {\n    if (this.isValid) {\n      const hl = this.layer;\n      if (!hl) return;\n      hl.removeChildren();\n      this.#rangeStops = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.isValid) {\n      const hl = this.layer;\n      if (!hl) return;\n      hl.clear();\n\n      const { x, y } = this.#center;\n\n      const circle = new PIXI.Graphics();\n\n      const stops = /** @type {!number[]} */ (this.#rangeStops);\n      for (let i = stops.length - 1; i > 0; i--) {\n        const outer = stops[i];\n        const inner = stops[i - 1];\n\n        const color = [rangeColor, reachColor][(i + 1) % 2];\n\n        circle.beginFill(color.fill, 0.1);\n        circle.drawCircle(x, y, outer);\n\n        // if inner has a defined value and is not 0, then cut a hole for either the next increment or because it's the minimum range\n        if (inner) {\n          circle.beginHole();\n          circle.beginFill(reachColor.fill, 0.1);\n          circle.drawCircle(x, y, inner);\n          circle.endHole();\n        }\n      }\n      circle.endFill();\n\n      hl.addChild(circle);\n    }\n  }\n}\n\nclass SquareGridHighlight extends AttackHighlightBase {\n  /**\n   * @typedef {object} AttackReachHighlight\n   * An object containing highlights belonging to a specific attack\n   * @property {SquareHighlight} normal - Highlight for normal range\n   * @property {SquareHighlight[]} extra - Additional highlights\n   */\n\n  /** @type {AttackReachHighlight|undefined} */\n  #currentHighlight;\n\n  /** @override */\n  get isValid() {\n    return !!this.#currentHighlight;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    const origin = {\n      x: Math.floor((token.x + tw * gridSize - 0.5 * gridSize) / gridSize),\n      y: Math.floor((token.y + th * gridSize - 0.5 * gridSize) / gridSize),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n    const isFeet = rangeKey === \"ft\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const squares = {\n      normal: [],\n      reach: [],\n      extra: [],\n    };\n    const useReachRule = game.settings.get(\"pf1\", \"alternativeReachCornerRule\") !== true;\n\n    squares.normal = this.#getReachSquares(token, r, minRange, { useReachRule: isFeet ? true : useReachRule });\n\n    if (isFeet) {\n      // Add range increments\n      const ftDistance = pf1.utils.convertDistance(r)[0];\n      const userLimit = game.settings.get(\"pf1\", \"performance\").reachLimit;\n      const maxSquareRange = Math.min(\n        userLimit, // arbitrary limit to enhance performance on large canvases\n        Math.max(\n          canvas.dimensions.width / canvas.dimensions.distancePixels,\n          canvas.dimensions.height / canvas.dimensions.distancePixels\n        ) + ftDistance\n      );\n      const rangeIncrements = action.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        if ((a + 1) * ftDistance <= maxSquareRange) {\n          squares.extra.push(this.#getReachSquares(token, (a + 1) * r, a * r, { useReachRule }));\n        }\n      }\n    }\n\n    const result = {\n      normal: new SquareHighlight(origin, rangeColor.fill, rangeColor.border, this.name + \".base\"),\n      extra: [],\n    };\n\n    for (const s of squares.normal) {\n      result.normal.addSquare(s[0], s[1]);\n    }\n\n    // Add extra range squares\n    for (let a = 0; a < squares.extra.length; a++) {\n      const squaresExtra = squares.extra[a];\n\n      const color = {\n        fill: a % 2 === 1 ? rangeColor.fill : reachColor.fill,\n        border: a % 2 === 1 ? rangeColor.border : reachColor.border,\n      };\n\n      const hl = new SquareHighlight(origin, color.fill, color.border, this.name + `.${a}`);\n      for (const s of squaresExtra) {\n        hl.addSquare(s[0], s[1]);\n      }\n      result.extra.push(hl);\n    }\n\n    this.#currentHighlight = result;\n  }\n\n  /**\n   *\n   * @param {Token} token\n   * @param {number} range\n   * @param {number} minRange\n   * @param {object} options\n   * @returns {Array<Array<number,number>>} - Array of x,y coordinate tuples\n   */\n  #getReachSquares(token, range, minRange = 0, options) {\n    const result = [];\n    if (canvas.grid.type !== CONST.GRID_TYPES.SQUARE) return result;\n\n    range = pf1.utils.convertDistance(range)[0];\n    if (typeof minRange === \"number\") minRange = pf1.utils.convertDistance(minRange)[0];\n\n    // Initialize variables\n    const gridDist = canvas.scene.grid.distance;\n    const gridSize = canvas.grid.size;\n\n    // Determine token squares\n    const tokenSquares = [];\n    for (let a = 0; a < Math.floor(token.w / gridSize); a++) {\n      for (let b = 0; b < Math.floor(token.h / gridSize); b++) {\n        const x = Math.floor((token.x + gridSize * 0.5) / gridSize + a);\n        const y = Math.floor((token.y + gridSize * 0.5) / gridSize + b);\n        tokenSquares.push([x, y]);\n      }\n    }\n\n    // Determine token-based variables\n    const tokenRect = [\n      Math.floor((token.x + gridSize * 0.5) / gridSize),\n      Math.floor((token.y + gridSize * 0.5) / gridSize),\n      Math.floor(token.w / gridSize),\n      Math.floor(token.h / gridSize),\n    ];\n\n    // Create function to determine closest token square\n    const getClosestTokenSquare = (pos) => {\n      const lowest = { square: null, dist: null };\n      for (const s of tokenSquares) {\n        const dist = Math.sqrt((s[0] - pos[0]) ** 2 + (s[1] - pos[1]) ** 2);\n        if (lowest.dist == null || dist < lowest.dist) {\n          lowest.square = s;\n          lowest.dist = dist;\n        }\n      }\n\n      return lowest.square;\n    };\n\n    // Gather potential squares\n    const squareRange = Math.round(range / gridDist);\n    const wMax = squareRange * 2 + tokenRect[2];\n    const hMax = squareRange * 2 + tokenRect[3];\n    const tl = [tokenRect[0] - squareRange, tokenRect[1] - squareRange];\n    for (let a = tl[0]; a < tl[0] + wMax; a++) {\n      for (let b = tl[1]; b < tl[1] + hMax; b++) {\n        const closestSquare = getClosestTokenSquare([a, b]);\n\n        const offset = [a - tokenRect[0], b - tokenRect[1]];\n        if (\n          !(\n            a >= tokenRect[0] &&\n            a < tokenRect[0] + tokenRect[2] &&\n            b >= tokenRect[1] &&\n            b < tokenRect[1] + tokenRect[2] &&\n            minRange != null\n          ) &&\n          this.#shouldAddReachSquare([a, b], closestSquare, range, minRange, options)\n        ) {\n          result.push(offset);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  #shouldAddReachSquare(pos, closestTokenSquare, range, minRange, { useReachRule = false } = {}) {\n    const gridSize = canvas.grid.size;\n    const p0 = { x: closestTokenSquare[0] * gridSize, y: closestTokenSquare[1] * gridSize };\n    const p1 = { x: pos[0] * gridSize, y: pos[1] * gridSize };\n\n    // BUG: This will fail if user is using non 1/2/1 diagonals\n    const dist = canvas.grid.measurePath([p0, p1]).distance;\n\n    // TODO: https://github.com/foundryvtt/foundryvtt/issues/11428\n    const dist2 = useReachRule\n      ? new foundry.grid.SquareGrid({\n          size: canvas.grid.size,\n          distance: canvas.grid.distance,\n          diagonals: CONST.GRID_DIAGONALS.EQUIDISTANT,\n        }).measurePath([p0, p1]).distance\n      : null;\n\n    const reachRuleRange = pf1.utils.convertDistance(10)[0];\n    if (dist > range) {\n      // Special rule for 10-ft. reach\n      if (!(useReachRule && range === reachRuleRange)) {\n        return false;\n      }\n    }\n\n    if (minRange != null && dist <= minRange) {\n      return false;\n    }\n\n    // Special rule for minimum ranges >= 10-ft.\n    if (useReachRule && minRange >= reachRuleRange && dist2 <= reachRuleRange) {\n      return false;\n    }\n\n    return true;\n  }\n\n  clearHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.clear();\n      for (const h of this.#currentHighlight.extra) {\n        h.clear();\n      }\n      this.#currentHighlight = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.render();\n      for (const h of this.#currentHighlight.extra) {\n        h.render();\n      }\n    }\n  }\n}\n\n/** @type {AttackHighlightBase|undefined} */\nlet attackReachHighlight;\n\n/**\n * Calculates and renders the {@link AttackReachHighlight} for a token's attack.\n * If a highlight already exists, it will be removed.\n *\n * @param {Token} token - The token to calculate the attack reach for\n * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n */\nexport const showAttackReach = (token, action) => {\n  // Clear previous highlight\n  clearHighlight();\n\n  const cls = canvas.grid.type === CONST.GRID_TYPES.SQUARE ? SquareGridHighlight : GridlessHighlight;\n\n  try {\n    const highlight = new cls(token, action);\n\n    // If a highlight could be created, make it the current highlight and render it\n    if (!highlight.isValid) return;\n    attackReachHighlight = highlight;\n    attackReachHighlight.renderHighlight();\n  } catch {\n    // no action, token, or item to use to render the highlight\n  }\n};\n\nexport const clearHighlight = () => {\n  attackReachHighlight?.clearHighlight();\n  attackReachHighlight = undefined;\n};\n\n/**\n * Returns a token belonging to either an actor's UUID or a token's UUID\n *\n * @param {string} uuid - UUID of an actor or token\n * @returns {Promise<Token|null|undefined>} A Token, if one can be found\n */\nconst _getTokenByUuid = async function (uuid) {\n  if (!uuid) return;\n  /** @type {TokenDocument | Actor} */\n  const actor = await fromUuid(uuid);\n  if (actor instanceof TokenDocument) return actor.object;\n  return actor?.token ?? (actor != null ? canvas.tokens.placeables.find((o) => o.actor === actor) : null);\n};\n\n/**\n * Add listeners on the {@link ChatLog}'s HTML element, checking for hover events involving\n * chat cards' range element using event delegation.\n *\n * @param {JQuery<HTMLElement>} html - The chat log\n */\nexport function addReachListeners(html) {\n  html.on(\"pointerenter\", \".card-range\", _onMouseEnterReach);\n  html.on(\"pointerleave\", \".card-range\", _onMouseLeaveReach);\n}\n\n/**\n * Handle display of reach when a chat card's reach element is hovered\n *\n * @param {JQuery.MouseEnterEvent<HTMLElement>} event - A `mouseEnter` event\n */\nconst _onMouseEnterReach = (event) => {\n  event.preventDefault();\n  if (game.settings.get(\"pf1\", \"performance\").reachLimit < 10) return;\n\n  const reachElement = event.currentTarget;\n  const card = reachElement.closest(\".chat-card\");\n  const { tokenUuid, actionId, itemId } = card.dataset;\n  if (!(itemId && actionId && tokenUuid)) return;\n\n  _getTokenByUuid(tokenUuid).then((token) => {\n    if (!token) return;\n\n    const item = token.actor.allItems.find((item) => item.id === itemId);\n    const action = item?.actions.get(actionId);\n    if (!action) return;\n\n    showAttackReach(token, action);\n  });\n};\n\n/**\n * Handle clearing of reach highlights created by {@link _onMouseEnterReach}\n *\n * @param {JQuery.MouseLeaveEvent} event - A `mouseLeave` event\n */\nconst _onMouseLeaveReach = (event) => {\n  event.preventDefault();\n  clearHighlight();\n};\n","/**\n * Add a checkbox to enable/disable low-light vision effects to a light's configuration\n *\n * @param {AmbientLightConfig} app - The LightConfig app\n * @param {Element} html - The application HTML element\n */\nexport function addLowLightVisionToLightConfig(app, html) {\n  /** @type {AmbientLightDocument} */\n  const light = app.document;\n\n  // Create checkbox HTML element\n  const bf = new foundry.data.fields.BooleanField();\n\n  /** @type {Element} */\n  const el = bf.toFormGroup(\n    {\n      label: game.i18n.localize(\"PF1.SETTINGS.DisableLLV.Label\"),\n      hint: game.i18n.localize(\"PF1.SETTINGS.DisableLLV.Hint\"),\n    },\n    {\n      name: \"flags.pf1.disableLowLight\",\n      value: light.getFlag(\"pf1\", \"disableLowLight\") ?? false,\n    }\n  );\n\n  // Create containing fieldset\n  const field = document.createElement(\"fieldset\");\n  const legend = document.createElement(\"legend\");\n  legend.innerText = game.i18n.localize(\"PF1.Title\");\n  field.append(legend, el);\n\n  // Insert new checkbox\n  html.querySelector('section.tab[data-tab=\"advanced\"]').append(field);\n}\n\n/**\n * LLV support mixin for AmbientLight and Token\n *\n * Adds light-radius multiplication effect to both light sources.\n *\n * @param {class} Base - Base class\n * @returns {class} - Mixin class\n */\nexport const LLVMixin = (Base) =>\n  class extends Base {\n    /** @override */\n    _getLightSourceData() {\n      const data = super._getLightSourceData();\n\n      const { dim, bright } = this.getRadius(data.dim, data.bright);\n\n      // Avoid NaN and introducing keys that shouldn't be in the data\n      // Without undefined check, global illumination will cause darkvision and similar vision modes to glitch.\n      // We're assuming getRadius gives sensible values otherwise.\n      if (data.dim !== undefined) data.dim = dim;\n      if (data.bright !== undefined) data.bright = bright;\n\n      return data;\n    }\n\n    /**\n     * @param {number} dim - Dim radius\n     * @param {number} bright - Bright radius\n     * @returns {{dim:number,bright:number}} - Adjusted distances\n     */\n    getRadius(dim, bright) {\n      const result = { dim, bright };\n      let multiplier = { dim: 1, bright: 1 };\n\n      // System vision is disabled\n      if (!game.settings.get(\"pf1\", \"systemVision\")) return result;\n      // This light source has LLV handling disabled\n      if (this.document.getFlag(\"pf1\", \"disableLowLight\")) return result;\n\n      /**\n       * @param {TokenDocument} token\n       * @returns {boolean}\n       */\n      const hasSystemVision = (token) => token.getFlag(\"pf1\", \"customVisionRules\") !== true;\n\n      const token = this.object?.document;\n      if (token && !hasSystemVision(token)) return result;\n\n      const requiresSelection = game.user.isGM || game.settings.get(\"pf1\", \"lowLightVisionMode\");\n      const relevantTokens = canvas.tokens.placeables.filter((token) => {\n        const tokenDoc = token.document;\n        return (\n          token.actor?.testUserPermission(game.user, \"OBSERVER\") &&\n          (requiresSelection ? token.controlled : true) &&\n          hasSystemVision(tokenDoc)\n        );\n      });\n      const lowLightTokens = relevantTokens.filter((o) => o.actorVision.lowLight === true);\n\n      if (requiresSelection) {\n        if (lowLightTokens.length && lowLightTokens.length === relevantTokens.length) {\n          multiplier = { dim: 999, bright: 999 };\n          for (const t of lowLightTokens) {\n            const tokenVision = t.actorVision;\n            multiplier.dim = Math.min(multiplier.dim, tokenVision.lowLightMultiplier);\n            multiplier.bright = Math.min(multiplier.bright, tokenVision.lowLightMultiplierBright);\n          }\n        }\n      } else {\n        for (const t of lowLightTokens) {\n          const tokenVision = t.actorVision;\n          multiplier.dim = Math.max(multiplier.dim, tokenVision.lowLightMultiplier);\n          multiplier.bright = Math.max(multiplier.bright, tokenVision.lowLightMultiplierBright);\n        }\n      }\n\n      result.dim *= multiplier.dim;\n      result.bright *= multiplier.bright;\n\n      return result;\n    }\n  };\n\n/**\n * Re-initialize light sources.\n *\n * @remarks\n * Foundry v12 no longer initializes the lights fully on calling perception manager to do so, making the following insufficient.\n * ```js\n * canvas.perception.update({ initializeLighting: true }, true);\n * ```\n */\nexport function reinitLightSources() {\n  // On strange occasions looping lightSources directly causes the loop to become infinite\n  // ... if this early array transformation is not done.\n  // For example if token with light source is given greater priority.\n  const lights = [...canvas.effects.lightSources];\n\n  for (const light of lights) {\n    light.object?.initializeLightSource?.();\n  }\n}\n\n/**\n * Debounced call to {@link reinitLightSources}\n */\nexport const debouncedLightSourceReInit = foundry.utils.debounce(reinitLightSources, 100);\n\nHooks.on(\"renderAmbientLightConfig\", (app, html) =>\n  pf1.canvas.lowLightVision.addLowLightVisionToLightConfig(app, html)\n);\n","export class TokenPF extends Token {\n  get actorVision() {\n    const ll = this.actor.system.traits?.senses?.ll ?? {};\n    return {\n      lowLight: ll.enabled,\n      lowLightMultiplier: ll.multiplier?.dim,\n      lowLightMultiplierBright: ll.multiplier?.bright,\n    };\n  }\n\n  get disableLowLight() {\n    return this.document.getFlag(\"pf1\", \"disableLowLight\") === true;\n  }\n\n  /**\n   * @override\n   * @param {object} options - Control options\n   */\n  _onControl(options) {\n    super._onControl(options);\n\n    pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n  }\n\n  /**\n   * @override\n   * @param {object} options - Release options\n   */\n  _onRelease(options) {\n    super._onRelease(options);\n\n    pf1.canvas.lowLightVision.debouncedLightSourceReInit();\n  }\n\n  /**\n   * Override to support vision sharing and setting for minimum needed permission level.\n   *\n   * Synced with Foundry v12.331 & v13.340\n   *\n   * @override\n   * @since PF1 v10\n   */\n  _isVisionSource() {\n    if (!canvas.visibility.tokenVision || !this.hasSight) return false;\n\n    // Only display hidden tokens for the GM\n    const isGM = game.user.isGM;\n    if (this.document.hidden && !isGM) return false;\n\n    // Always display controlled tokens which have vision\n    if (this.controlled) return true;\n\n    // Otherwise, vision is ignored for GM users\n    if (isGM) return false;\n\n    // Vision sharing (explicit boolean test to avoid problems with corrupt sharing data)\n    if (this.actor?.sharesVision === true) return true;\n\n    // If a non-GM user controls no other tokens with sight, display sight\n    const guarantee = game.settings.get(\"pf1\", \"guaranteedVision\");\n    const canObserve = this.actor?.testUserPermission(game.user, guarantee) ?? false;\n    if (!canObserve) return false;\n    return !this.layer.controlled.some((t) => !t.document.hidden && t.hasSight);\n  }\n\n  /**\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The number to boost the bar by, if any.\n   * @protected\n   */\n  _getBarBoost(data) {\n    if (data.attribute === \"attributes.hp\") return { value: this.actor.system.attributes.hp.temp, color: 0xc0d6e4 };\n    if (data.attribute === \"attributes.vigor\")\n      return { value: this.actor.system.attributes.vigor.temp, color: 0xc0d6e4 };\n    return null;\n  }\n\n  /**\n   * Determines the length of the underline (bottom half-height bar overlay) on a token bar.\n   *\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The value of the bar underline, if any.\n   * @protected\n   */\n  _getBarUnderline(data) {\n    if (data.attribute === \"attributes.hp\")\n      return { value: this.actor.system.attributes.hp.nonlethal, color: 0x7d2828 };\n    return null;\n  }\n\n  /**\n   * Draw a single resource bar, given provided data.\n   *\n   * @param {number} number       The Bar number>\n   * @param {PIXI.Graphics} bar   The Bar container.\n   * @param {object} data         Resource data for this bar.\n   * @protected\n   */\n  _drawBar(number, bar, data) {\n    // Get boost value (such as temporary hit points\n    const boost = this._getBarBoost(data);\n    const underline = this._getBarUnderline(data);\n    const boostlessMax = data.max;\n\n    const val = Number(data.value);\n    data.max = Math.max(data.max, (boost?.value ?? 0) + val);\n    const pct = Math.clamp(val, 0, data.max) / data.max;\n    const boostlessPct = Math.clamp(val, 0, boostlessMax) / boostlessMax;\n\n    // Determine sizing\n    let h = Math.max(canvas.dimensions.size / 12, 8);\n    const w = this.w;\n    const bs = Math.clamp(h / 8, 1, 2);\n    if (this.document.height >= 2) h *= 1.6; // Enlarge the bar for large tokens\n\n    // Determine the color to use\n    const blk = 0x000000;\n    let color;\n    if (number === 0) color = Color.fromRGBvalues(1 - boostlessPct / 2, boostlessPct, 0);\n    else color = Color.fromRGBvalues(0.5 * boostlessPct, 0.7 * boostlessPct, 0.5 + boostlessPct / 2);\n\n    // Draw the bar\n    bar.clear();\n    // Draw background of bar\n    bar.beginFill(blk, 0.5).lineStyle(bs, blk, 1.0).drawRoundedRect(0, 0, this.w, h, 3);\n    // Draw bar boost\n    if (boost?.value > 0) {\n      const pct = Math.clamp(val + boost.value, 0, data.max) / data.max;\n      bar\n        .beginFill(boost.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, 0, pct * w, h, 2);\n    }\n\n    // Draw normal value\n    bar\n      .beginFill(color, 1.0)\n      .lineStyle(bs, blk, 1.0)\n      .drawRoundedRect(0, 0, pct * w, h, 2);\n    // Draw bar underline\n    if (underline?.value > 0) {\n      const pct = Math.clamp(underline.value, 0, data.max) / data.max;\n      bar\n        .beginFill(underline.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, h / 2, pct * w, h / 2, 2);\n    }\n\n    // Set position\n    const posY = number === 0 ? this.h - h : 0;\n    bar.position.set(0, posY);\n  }\n\n  /**\n   * Returns error margin, in pixels, for measuring to and from token center.\n   *\n   * Defined as larger of half the token's width and height.\n   *\n   * @type {number}\n   */\n  get sizeErrorMargin() {\n    return Math.max(this.w / 2, this.h / 2);\n  }\n\n  /**\n   * Return coordinates of cells the token occupies.\n   *\n   * Bug: Does not work with hex grid.\n   * Bug: Does not account for rotation.\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.center=false] - Return cell centers instead of origins\n   * @returns {Point[]} - Occupied cell coordinates.\n   */\n  getOccupiedCells({ center = false } = {}) {\n    const doc = this.document;\n    const gridSizePx = this.scene.grid.size ?? 1;\n    const { x, y, width, height } = doc;\n\n    // Offset for returning cell center\n    const offset = center ? gridSizePx / 2 : 0;\n\n    const squares = [];\n\n    const wr = width - 1,\n      hr = height - 1;\n\n    for (let x0 = 0; x0 <= wr; x0++) {\n      for (let y0 = 0; y0 <= hr; y0++) {\n        squares.push({ x: x + x0 * gridSizePx + offset, y: y + y0 * gridSizePx + offset });\n      }\n    }\n\n    return squares;\n  }\n\n  /**\n   * Is this token a square?\n   *\n   * @type {boolean}\n   */\n  get isSquare() {\n    return this.document.width === this.document.height;\n  }\n}\n","/**\n * See invisibility detection mode with respect to sight (light & darkvision)\n *\n * Replacement for `CONFIG.Canvas.detectionModes.seeInvisibility`\n */\nexport class DetectionModeInvisibilityPF extends DetectionModeInvisibility {\n  static ID = \"seeInvisibility\";\n  static LABEL = \"PF1.Sense.seeInvis\";\n  static PRIORITY = 100000;\n\n  /**\n   * Copy of DetectionModeBasicSight._testPoint instead of the one inherited from DetectionMode.\n   *\n   * Allows seeing invisible in lit areas.\n   *\n   * @override\n   */\n  _testPoint(visionSource, mode, target, test) {\n    // Blocked by walls\n    if (!this._testLOS(visionSource, mode, target, test)) return false;\n    // Otherwise allowed within range\n    if (this._testRange(visionSource, mode, target, test)) return true;\n\n    // If limited (e.g. true seeing), do not care about other light sources beyond range\n    if (mode.limited) return false;\n\n    // Allowed outside of range if lit\n    const { x, y } = test.point;\n    for (const lightSource of canvas.effects.lightSources.values()) {\n      if (!lightSource.active) continue;\n      if (lightSource.shape.contains(x, y)) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Blindsense\n *\n * Registered at `CONFIG.Canvas.detectionModes.blindSense`\n */\nexport class DetectionModeBlindSensePF extends DetectionMode {\n  static ID = \"blindSense\";\n  static LABEL = \"PF1.Sense.blindsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200100;\n\n  constructor(data = {}, ...args) {\n    data.walls = true;\n    super(data, ...args);\n  }\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: this.ID === \"blindSense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    return true;\n  }\n}\n\n/**\n * Blindsight\n *\n * Registered at `CONFIG.Canvas.detectionModes.blindSight`\n */\nexport class DetectionModeBlindSightPF extends DetectionModeBlindSensePF {\n  static ID = \"blindSight\";\n  static LABEL = \"PF1.Sense.blindsight\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200000;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: false,\n    }));\n  }\n}\n\n/**\n * Lifesense\n *\n * Registered at `CONFIG.Canvas.detectionModes.lifesense`\n */\nexport class DetectionModeLifesensePF extends DetectionMode {\n  static ID = \"lifesense\";\n  static LABEL = \"PF1.Sense.lifesense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200200;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [1, 0.1, 0.2, 1],\n      knockout: false,\n      wave: this.ID === \"lifesense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    const rv = super._canDetect(visionSource, target);\n\n    if (rv) {\n      const traits = target.actor?.system?.traits;\n      if (!traits?.living) {\n        return false;\n      }\n    }\n\n    return rv;\n  }\n}\n\n/**\n * Tremorsense\n *\n * Unlike base implementation, does not block with walls but also does not detect swimming.\n *\n * Replacement for `CONFIG.Canvas.detectionModes.feelTremor`\n */\nexport class DetectionModeTremorPF extends DetectionModeTremor {\n  static ID = \"feelTremor\";\n  static LABEL = \"PF1.Sense.tremorsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.MOVE;\n  static PRIORITY = 201000;\n\n  constructor(data = {}, ...args) {\n    data.walls = false;\n    super(data, ...args);\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    const rv = super._canDetect(visionSource, target);\n\n    if (rv) {\n      // Do not detect swimming\n      if (target.document.hasStatusEffect(CONFIG.specialStatusEffects.SWIM)) return false;\n    }\n\n    return rv;\n  }\n}\n","/**\n * Rules accurate darkvision override.\n *\n * Replacement for `CONFIG.Canvas.visionModes.darkvision`\n *\n * @remarks\n * Compared to example implementation, this does not turn dim light into bright.\n *\n * @type {VisionMode}\n */\nexport const darkvision = (() => {\n  const data = CONFIG.Canvas.visionModes.darkvision.toObject();\n  delete data.lighting.levels[VisionMode.LIGHTING_LEVELS.DIM];\n  return new VisionMode(data);\n})();\n","import { clearHighlight, showAttackReach } from \"./attack-reach.mjs\";\nimport { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Extension of core Token HUD\n *\n * @since PF1 v11\n */\nexport class TokenHUDPF extends TokenHUD {\n  /**\n   * @override\n   * @returns {Record<string, object>}\n   * Synced with Foundry v13.342\n   */\n  _getStatusEffectChoices() {\n    const core = super._getStatusEffectChoices(),\n      buffs = {};\n\n    if (!this.actor) return core;\n\n    const items = this.actor.itemTypes.buff ?? [];\n    for (const buff of items) {\n      const id = `buff-${buff.id}`;\n      buffs[id] = {\n        _id: id, // to match v12\n        id,\n        title: buff.name,\n        src: buff.img,\n        isActive: buff.isActive,\n        isOverlay: false,\n        cssClass: buff.isActive ? \"active\" : \"\",\n      };\n    }\n\n    const statuses = this.actor.statuses;\n    // Collect auxiliary conditions\n    const auxConditions = new Set();\n    for (const statusId of statuses) {\n      const condition = pf1.registry.conditions.get(statusId);\n      for (const auxStatusId of condition.statuses) auxConditions.add(auxStatusId);\n    }\n\n    // Mark auxiliary conditions\n    for (const statusId of statuses) {\n      const effect = core[statusId];\n      if (effect.isActive) continue;\n\n      // Auxiliary condition\n      if (auxConditions.has(statusId)) effect.cssClass += \" auxiliary\";\n      // Primary condition\n      else {\n        effect.isActive = true;\n        effect.cssClass += \" active\";\n      }\n    }\n\n    return { ...core, ...buffs };\n  }\n\n  // V12 and prior\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    this.addQuickActions(this, html[0]);\n  }\n\n  // V13\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    this.addQuickActions(this, this.element);\n  }\n\n  /**\n   * Add quick action buttons to token HUD.\n   *\n   * @param {TokenHUD} app - HUD app\n   * @param {Element} html - HUD element\n   */\n  async addQuickActions(app, html) {\n    const token = app.object;\n    const actor = token.actor;\n\n    const quickActions = actor?.getQuickActions?.();\n\n    if (!quickActions?.length) return;\n\n    const templateData = {\n      actions: quickActions,\n    };\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/hud/quick-actions.hbs\", templateData);\n    const fragment = template.content;\n\n    this.addQuickActionListeners(fragment);\n\n    Hooks.callAll(\"pf1RenderQuickActions\", app, token, fragment);\n\n    html.querySelector(\".col.middle\").after(fragment);\n  }\n\n  /**\n   * Add listeners to token HUD quick action element.\n   *\n   * @param {DocumentFragment} html - Quick actions element\n   */\n  addQuickActionListeners(html) {\n    const showReach = game.settings.get(\"pf1\", \"performance\").reachLimit >= 10;\n\n    const token = this.object;\n    /** @type {Actor} */\n    const actor = this.actor;\n    if (!actor) return;\n\n    for (const el of html.querySelectorAll(\".token-quick-action\")) {\n      el.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        const itemId = event.target.dataset.itemId;\n        const item = actor.items.get(itemId);\n        if (!event.ctrlKey) {\n          item.use({ ev: event, token: token.document, skipDialog: getSkipActionPrompt() });\n        } else {\n          item.displayCard({ token: token.document });\n        }\n      });\n\n      el.addEventListener(\"contextmenu\", (event) => {\n        event.preventDefault();\n        const itemId = event.target.dataset.itemId;\n        const item = actor.items.get(itemId);\n        item.sheet.render(true, { focus: true });\n      });\n\n      // Reach highlight on mouse hover\n      if (showReach) {\n        const itemId = el.dataset.itemId;\n        const item = actor.items.get(itemId);\n        const action = item.defaultAction;\n        el.addEventListener(\"pointerenter\", () => showAttackReach(token, action), { passive: true });\n        el.addEventListener(\"pointerleave\", () => clearHighlight(), { passive: true });\n      }\n    }\n  }\n\n  /*\n  // TODO: Do actual choice constraints\n  _getMovementActionChoices() {\n    const choices = super._getMovementActionChoices();\n\n    //const token = this.token.document;\n    //const allowed = token.allowedMovement;\n\n    return choices;\n  }\n  */\n}\n","import { MeasuredTemplatePF } from \"./measure.mjs\";\n\n/**\n * A helper class for building MeasuredTemplates for PF1 spells and abilities\n */\nexport class AbilityTemplate extends MeasuredTemplatePF {\n  /**\n   * Preview movement and rotation re-render throttle time in milliseconds.\n   *\n   * @private\n   */\n  static RENDER_THROTTLE = 30;\n\n  /**\n   * A factory method to create an AbilityTemplate instance using provided data\n   *\n   * @param {object} data - Data used to create the template\n   * @param {\"cone\" | \"circle\" | \"rect\" | \"ray\"} data.type - The type of template\n   * @param {number} data.distance - The distance/size of the template\n   * @param {string} [data.texture=null] - Path to template texture\n   * @param {string} [data.color=game.user.color] - Template color\n   * @param {object} [data.flags] - Additional flags stored on the template\n   * @param {object} [options]\n   * @param {pf1.components.ItemAction} [options.action]\n   * @returns {AbilityTemplate|null} - The template object, or null if the data does not produce a template\n   */\n  static fromData(data, { action } = {}) {\n    const { type, distance, flags } = data;\n    if (!type || !distance || !canvas.scene) return null;\n    if (![\"cone\", \"circle\", \"rect\", \"ray\"].includes(type)) return null;\n\n    // Prepare template data\n    const templateData = {\n      t: type,\n      distance: distance || game.system.grid.distance,\n      direction: 0,\n      x: 0,\n      y: 0,\n      flags,\n      fillColor: data.color ? data.color : game.user.color,\n      texture: data.texture ? data.texture : null,\n    };\n\n    // Additional type-specific data\n    switch (type) {\n      case \"cone\":\n        templateData.angle = game.settings.get(\"pf1\", \"measureStyle\")\n          ? game.canvas.grid.isHexagonal\n            ? 60\n            : CONFIG.MeasuredTemplate.defaults.angle\n          : CONFIG.MeasuredTemplate.defaults.originalAngle;\n        break;\n\n      case \"rect\":\n        templateData.distance = Math.sqrt(Math.pow(distance, 2) + Math.pow(distance, 2));\n        templateData.direction = 45;\n        break;\n\n      case \"ray\":\n        templateData.width = CONFIG.MeasuredTemplate.defaults.width;\n        break;\n      default:\n        break;\n    }\n\n    // Return the template constructed from the item data\n    const cls = CONFIG.MeasuredTemplate.documentClass;\n    const template = new cls(templateData, { parent: canvas.scene });\n    const object = new this(template);\n    object.action = action;\n    return object;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Creates a preview of the spell template\n   *\n   * @override\n   * @param {Event} _event - The initiating click event\n   * @returns {Promise<object>} - Result\n   */\n  async drawPreview(_event) {\n    const initialLayer = canvas.activeLayer;\n    await this.draw();\n    this.layer.activate();\n    this.layer.preview.addChild(this);\n    return this.activatePreviewListeners(initialLayer);\n  }\n\n  /* -------------------------------------------- */\n\n  // Use system style\n  pfStyle = true;\n\n  // Event handlers\n  #events;\n\n  // Initial layer\n  #initialLayer;\n\n  /**\n   * Activate listeners for the template preview\n   *\n   * @param {CanvasLayer} initialLayer  The initially active CanvasLayer to re-activate after the workflow is complete\n   * @returns {Promise<object>} Returns result object\n   */\n  activatePreviewListeners(initialLayer) {\n    this.#initialLayer = initialLayer;\n    this.pfStyle = game.settings.get(\"pf1\", \"measureStyle\") === true;\n\n    return new Promise((resolve, reject) => {\n      // Prepare events\n      this.#events = {\n        confirm: this._onConfirm.bind(this),\n        cancel: this._onCancel.bind(this),\n        move: this._onMove.bind(this),\n        rotate: this._onRotate.bind(this),\n        resolve,\n        reject,\n      };\n\n      // Prevent interactions with control icon\n      // This also allows left and right click to work correctly\n      if (this.controlIcon) this.controlIcon.removeAllListeners();\n\n      // Activate listeners\n      canvas.stage.on(\"pointermove\", this.#events.move);\n      canvas.stage.on(\"click\", this.#events.confirm);\n      canvas.app.view.addEventListener(\"contextmenu\", this.#events.cancel);\n      canvas.app.view.addEventListener(\"wheel\", this.#events.rotate);\n    });\n  }\n\n  #lastMove = 0;\n\n  // Update placement (mouse-move)\n  _onMove(event) {\n    event.stopPropagation();\n\n    // Throttle\n    const now = performance.now();\n    if (now - this.#lastMove <= this.constructor.RENDER_THROTTLE) return;\n\n    const snapMode =\n      CONST.GRID_SNAPPING_MODES.CENTER | CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT | CONST.GRID_SNAPPING_MODES.CORNER;\n\n    const center = event.data.getLocalPosition(this.layer);\n    const pos = canvas.grid.getSnappedPoint(center, { mode: snapMode });\n\n    // TODO: Adjust template size if placing in middle of a square (especially if on a token)\n\n    this.document.updateSource({\n      x: pos.x,\n      y: pos.y,\n    });\n\n    this.refresh();\n\n    this.#lastMove = now;\n  }\n\n  /**\n   * Cancel the workflow (right-click)\n   *\n   * @param {Event} event\n   */\n  _onCancel(event) {\n    console.debug(\"PF1 | Cancelling template placement for\", this.action?.item?.name ?? \"unknown\");\n\n    this._onFinish(event);\n    this.#events.reject();\n  }\n\n  // Confirm the workflow (left-click)\n  _onConfirm(event) {\n    console.debug(\"PF1 | Placing template for\", this.action?.item?.name ?? \"unknown\");\n\n    this._onFinish(event);\n\n    // Reject if template size is zero\n    if (!this.document.distance) return this.#events.reject();\n\n    // Create the template\n    // TODO: This should create the template directly and resolve with it.\n    const result = {\n      result: true,\n      place: async () => {\n        this.document = await MeasuredTemplateDocument.create(this.document.toObject(false), { parent: canvas.scene });\n        return this.document;\n      },\n      delete: () => {\n        return this.document.delete();\n      },\n    };\n\n    this.#events.resolve(result);\n  }\n\n  /**\n   * Rotate the template by 3 degree increments (mouse-wheel)\n   *\n   * @param {Event} event\n   */\n  _onRotate(event) {\n    event.preventDefault(); // Prevent browser zoom\n    event.stopPropagation(); // Prevent other handlers\n\n    let { distance, direction } = this.document,\n      delta;\n\n    if (event.ctrlKey) {\n      delta = canvas.dimensions.distance * -Math.sign(event.deltaY);\n      distance += delta;\n      if (distance < 0) distance = 0;\n    } else {\n      let snap;\n      if (this.pfStyle && this.document.t === \"cone\") {\n        delta = game.canvas.grid.isHexagonal ? 60 : 90;\n        snap = event.shiftKey ? delta : game.canvas.grid.isHexagonal ? 30 : 45;\n      } else {\n        delta = canvas.grid.type > CONST.GRID_TYPES.SQUARE ? 30 : 15;\n        snap = event.shiftKey ? delta : 5;\n      }\n      if (this.document.t === \"rect\") {\n        snap = Math.sqrt(Math.pow(5, 2) + Math.pow(5, 2));\n        distance += snap * -Math.sign(event.deltaY);\n      } else {\n        direction += snap * Math.sign(event.deltaY);\n      }\n    }\n\n    this.document.updateSource({ distance, direction });\n\n    this.refresh();\n  }\n\n  /** @override */\n  _onClickRight(event) {\n    event.stopPropagation(); // Prevent right click counting as left click\n  }\n\n  /**\n   * @param {Event} event\n   */\n  _onFinish(event) {\n    // Call Foundry's preview cleanup\n    this.layer._onDragLeftCancel(event);\n\n    // Remove listeners\n    canvas.stage.off(\"pointermove\", this.#events.move);\n    canvas.stage.off(\"click\", this.#events.confirm);\n    canvas.app.view.removeEventListener(\"contextmenu\", this.#events.cancel);\n    canvas.app.view.removeEventListener(\"wheel\", this.#events.rotate);\n\n    this.#initialLayer.activate();\n  }\n}\n","import { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { RollPF } from \"./roll.mjs\";\n\n/**\n * A class adding additional functionality to `Roll` class for d20 based Pathfinder rolls.\n */\nexport class D20RollPF extends RollPF {\n  /** @type {D20RollOptions} */\n  options;\n\n  /**\n   * Standard roll used by the system (1d20).\n   *\n   * @readonly\n   */\n  static standardRoll = \"1d20\";\n\n  /**\n   * @param {string} formula - The roll formula to parse\n   * @param {object} [data] - The data object against which to parse attributes within the formula\n   * @param {Partial<D20RollConstructorOptions>} [options] - Options\n   * @param {D20RollContext} [context] - Context\n   */\n  constructor(formula, data, options = {}, context = {}) {\n    super(formula, data, options);\n    this.options = foundry.utils.mergeObject(this.constructor.defaultOptions, options);\n\n    // Cleanup redundant options\n    if (!Number.isFinite(this.options.critical)) delete this.options.critical;\n    if (this.options.check) delete this.options.check; // Keep only if set to false\n    if (!this.options.flavor) delete this.options.flavor;\n    if (!Number.isFinite(this.options.staticRoll)) delete this.options.staticRoll;\n    if (!this.options.bonus) delete this.options.bonus;\n    if (!Number.isFinite(this.options.dc)) delete this.options.dc;\n\n    this.context = context;\n\n    this._applyStaticRoll();\n  }\n\n  /**\n   * Apply static roll, such as Take 10/20\n   *\n   * @param {boolean} [force] - Ignore evaluated state of the roll and apply static roll config anyway.\n   * @protected\n   */\n  _applyStaticRoll(force = false) {\n    // Spoof only if check isn't disabled\n    if (this.options.check === false) return;\n    // _evaluate() has _evaluated already set true and the override is needed\n    if (this._evaluated && force !== true) return;\n\n    const d20 = this.d20;\n    const result = d20.total;\n\n    const isNumeric = d20 instanceof foundry.dice.terms.NumericTerm;\n    const isDie = d20 instanceof foundry.dice.terms.Die;\n\n    if (isNumeric) {\n      this.options.staticRoll = result;\n    } else if (isDie) {\n      /* NOP */\n    } else {\n      // Conflict between numeric term and static roll\n      throw new Error(`Invalid D20RollPF formula provided: ${this._formula}`);\n    }\n\n    if (!this.isStatic) return;\n\n    const die = isDie ? d20.toJSON() : {};\n\n    // Configure static roll\n    die.number = 1;\n    die.faces = 20;\n    die.results = [\n      {\n        result: this.options.staticRoll,\n        active: true,\n      },\n    ];\n    die.method = \"manual\"; // Spoof resolver for consistency\n    die.evaluated = true;\n\n    // Record spoofed term\n    this.terms[0] = new foundry.dice.terms.Die(die);\n  }\n\n  /**\n   * Default options for D20Rolls\n   *\n   * @type {Partial<D20RollOptions>}\n   */\n  static get defaultOptions() {\n    return { critical: 20 };\n  }\n\n  /**\n   * The default handlebars template used to render the roll's dialog\n   *\n   * @type {string}\n   * @readonly\n   */\n  static DIALOG_TEMPLATE = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n\n  /**\n   * The default handlebars template used to render the roll's chat message\n   *\n   * @type {string}\n   * @readonly\n   */\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll-ext.hbs\";\n\n  /**\n   * Static roll results\n   *\n   * @enum {number}\n   * @readonly\n   */\n  static STATIC_ROLL = {\n    TEN: 10,\n    TWENTY: 20,\n  };\n\n  /**\n   * The D20 die this roll is based on.\n   *\n   * @type {Die}\n   */\n  get d20() {\n    // this.dice[0] returns wrong number if formula had, for example, a die roll inside parenthesis.\n    return this.terms[0];\n  }\n\n  /**\n   * Is this a proper check?\n   *\n   * @type {boolean}\n   */\n  get isCheck() {\n    return this.options.check !== false;\n  }\n\n  /**\n   * Is this roll a critical success? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isCrit() {\n    if (!this._evaluated) return undefined;\n    if (!Number.isFinite(this.options.critical)) return false;\n    return this.d20.total >= this.options.critical;\n  }\n\n  /**\n   * Is this roll a natural 20? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat20() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 20;\n  }\n\n  /**\n   * Is this roll a natural 1? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat1() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 1;\n  }\n\n  /**\n   * Difficulty Class\n   *\n   * @type {number|undefined}\n   */\n  get dc() {\n    return this.options.dc;\n  }\n\n  /**\n   * Is this roll a success against its DC?\n   *\n   * @remarks\n   * - Returns undefined if no DC is known or if the roll is not evaluated yet.\n   *\n   * @type {boolean|undefined}\n   */\n  get isSuccess() {\n    if (!this._evaluated) return undefined;\n    const dc = this.dc;\n    if (!Number.isFinite(dc)) return undefined;\n    if (dc <= this.total) return true;\n    return false;\n  }\n\n  /**\n   * Is this roll a failure against its DC?\n   *\n   * @remarks\n   * - Returns undefined if no DC is known or if the roll is not evaluated yet.\n   *\n   * @type {boolean|undefined}\n   */\n  get isFailure() {\n    if (!this._evaluated) return undefined;\n    const dc = this.dc;\n    if (!Number.isFinite(dc)) return undefined;\n    if (dc > this.total) return true;\n    return false;\n  }\n\n  /**\n   * DC offset\n   *\n   * @remarks\n   * - Returns NaN if no DC is defined.\n   * - Returns NaN if the roll has not been evaluated.\n   *\n   * @type {number}\n   */\n  get offset() {\n    if (!this._evaluated) return NaN;\n    return this.total - this.dc;\n  }\n\n  /**\n   * How many 5s over the DC is this?\n   *\n   * Primarily meant for things like Heal check bonus healing or similar.\n   *\n   * @remarks\n   * - Returns NaN if no DC is defined.\n   *\n   * @type {number}\n   */\n  get overBy5() {\n    return Math.floor(this.offset / 5);\n  }\n\n  /**\n   * Is this roll a misfire.\n   *\n   * @type {boolean|void}\n   */\n  get isMisfire() {\n    if (!this._evaluated) return undefined;\n    return this.natural <= (this.options.misfire ?? 0);\n  }\n\n  /**\n   * Natural roll value. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get natural() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total;\n  }\n\n  /**\n   * Is static roll (e.g. Take 20)\n   *\n   * @type {boolean}\n   */\n  get isStatic() {\n    return Number.isFinite(this.options.staticRoll) || this.d20.method === \"manual\";\n  }\n\n  /**\n   * Is not an actual roll.\n   *\n   * @type {boolean}\n   */\n  get isNonRoll() {\n    return this.d20.constructor.name !== \"Die\" && this.options.check === false;\n  }\n\n  /**\n   * Is a normal d20\n   *\n   * @type {boolean}\n   */\n  get isNormal() {\n    return this.d20.expression === this.constructor.standardRoll;\n  }\n\n  /**\n   * Modifier on the roll besides natural roll. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get bonus() {\n    if (!this._evaluated) return undefined;\n    return this.total - this.natural;\n  }\n\n  /**\n   * Return a standardized representation for the displayed formula associated with this Roll.\n   * This formula includes any {@link D20RollOptions.bonus bonus} that might not be part of this roll's {@link terms}.\n   *\n   * @type {string}\n   */\n  get formula() {\n    let formula = this.constructor.getFormula(this.terms);\n    const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n    if (this.options.bonus && !this._evaluated) formula += ` + ${this.constructor.getFormula(bonusTerms)}`;\n    return formula;\n  }\n\n  /**\n   * The flavor this roll was created with.\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor;\n  }\n\n  /**\n   * Render a {@link Dialog} for the user to enter additional bonuses, set a static roll result, or take 10/20.\n   *\n   * @param {D20RollDialogOptions} [options] - Additional options determining what options to show in the dialog\n   * @returns {Promise<this | null>} A promise that resolves when the dialog is closed\n   */\n  async promptDialog(options = {}) {\n    const { rollMode = game.settings.get(\"core\", \"rollMode\"), template = this.constructor.DIALOG_TEMPLATE } = options;\n    const d20 = this.isStatic ? this.options.staticRoll : this.d20.formula;\n    const hasDC = Number.isFinite(options.dc);\n    const editDC = game.user.isGM || !hasDC || !game.settings.get(\"pf1\", \"obscureSaveDCs\");\n    const templateData = {\n      check: true,\n      data: this.data,\n      rollMode: options.rollMode || rollMode,\n      rollModes: CONFIG.Dice.rollModes,\n      // TODO: Move this standard roll obfuscation to dialog handling\n      d20: d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20, // Do not show standard roll in the input field\n      bonus: this.options.bonus || options.bonus, // DEPRECATED: this.options.bonus to be removed with PF1 v12\n      dc: options.dc,\n      editDC,\n    };\n\n    let title = options.title || game.i18n.localize(\"PF1.Roll\");\n    // Display DC, if allowed\n    if (hasDC && editDC) title += \" (\" + game.i18n.format(\"PF1.DCThreshold\", { threshold: options.dc }) + \")\";\n\n    const dialogData = {\n      window: { title, icon: \"fa-solid fa-dice-d20\" },\n      position: { width: 420 },\n      classes: [\"pf1-v2\", \"roll-prompt\"],\n      content: await renderTemplate(template, templateData),\n      buttons: [\n        {\n          action: \"normal\",\n          default: true,\n          icon: \"fa-solid fa-dice-d20\",\n          label: game.i18n.localize(\"PF1.Normal\"),\n          callback: (event, button, html) => this._onDialogSubmit(html, null),\n        },\n        {\n          action: \"take10\",\n          label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TEN }),\n          callback: (event, button, html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TEN),\n        },\n        {\n          action: \"take20\",\n          label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TWENTY }),\n          callback: (event, button, html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TWENTY),\n        },\n      ],\n      close: () => null,\n      rejectClose: false,\n      subject: options.subject,\n      speaker: options.speaker,\n      roll: this,\n    };\n\n    if (options.dialogOptions) {\n      foundry.utils.mergeObject(dialogData, options.dialogOptions);\n    }\n\n    return foundry.applications.api.DialogV2.wait(dialogData);\n  }\n\n  /**\n   * Converts form element to object\n   *\n   * @protected\n   * @param {HTMLFormElement} html\n   * @returns {object} - Expanded form data\n   */\n  _getFormData(html) {\n    return foundry.utils.expandObject(new FormDataExtended(html).object);\n  }\n\n  /**\n   * A callback applying the user's input from the dialog to the roll and its options.\n   *\n   * @protected\n   * @param {HTMLElement} html - The dialog's submitted HTML\n   * @param {number | null} [staticRoll] - A static roll result to use instead of rolling the dice\n   * @returns {D20RollPF} This roll\n   */\n  _onDialogSubmit(html, staticRoll) {\n    if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n    const form = html.querySelector(\"form\");\n    if (!form) return this;\n    const formData = this._getFormData(form);\n\n    if (formData.bonus) this.options.bonus = formData.bonus;\n\n    if (formData.d20) {\n      const baseDice = this.constructor.parse(formData.d20, this.data);\n      // If a static roll is given as d20 input, Take X button clicks are ignored\n      if (baseDice[0] instanceof foundry.dice.terms.NumericTerm) this.options.staticRoll = baseDice[0].total;\n      else if (baseDice[0] instanceof foundry.dice.terms.Die) {\n        this.terms = [...baseDice, ...this.terms.slice(1)];\n        // d20 input is actual dice, so Take X buttons are respected\n        this.options.staticRoll = staticRoll;\n      }\n    } else {\n      // No d20 input, base die is default, so Take X buttons are respected\n      this.options.staticRoll = staticRoll;\n    }\n\n    if (formData.rollMode) {\n      this.options.rollMode = formData.rollMode;\n    }\n\n    if (Number.isFinite(formData.dc)) this.options.dc = formData.dc;\n\n    this._formula = this.constructor.getFormula(this.terms);\n\n    return this;\n  }\n\n  /**\n   * Render a Roll instance to HTML\n   *\n   * @override\n   * @param {object} [options={}] - Options which affect how the Roll is rendered\n   * @param {string} [options.flavor] - Flavor text to include\n   * @param {string} [options.template] - A custom HTML template path\n   * @param {boolean} [options.isPrivate=false] - Is the Roll displayed privately?\n   * @returns {Promise<string>} - The rendered HTML template as a string\n   * Synced with Foundry v12.331\n   */\n  async render({ flavor, template = this.constructor.CHAT_TEMPLATE, isPrivate = false } = {}) {\n    if (!this._evaluated) await this.evaluate({ allowInteractive: !isPrivate });\n\n    const templateData = {\n      onDemand: true,\n      isPrivate,\n      formula: isPrivate ? \"???\" : this._formula,\n      flavor: isPrivate ? null : (flavor ?? this.options.flavor),\n      user: game.user.id,\n      details: isPrivate ? \"\" : await this.getTooltip(),\n      total: isPrivate ? \"?\" : pf1.utils.limitPrecision(this.total, 2), // Total result\n      roll: this,\n      d20: this.d20.total, // Natural d20 roll\n      bonus: this.bonus, // Total bonus to the roll\n      precision: Math.floor((this.total - Math.floor(this.total)) * 100), // Extra precision\n      isCrit: this.isCrit,\n      isMisfire: this.isMisfire,\n      isNat20: this.isNat20,\n      isNat1: this.isNat1,\n      dc: this.dc,\n      hasDC: Number.isFinite(this.dc),\n      isSuccess: this.isSuccess,\n      isFailure: this.isFailure,\n      natural: this.natural,\n      options: this.options,\n      isStatic: this.isStatic,\n      isNormal: this.isNormal,\n      isNonRoll: this.isNonRoll,\n      get isAbnormal() {\n        if (this.isNonRoll) return false; // Technically abnormal but not override\n        return this.isStatic || !this.isNormal;\n      },\n      get abnormalTooltip() {\n        if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.d20 });\n        else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n        else return \"\";\n      },\n    };\n\n    return renderTemplate(template, templateData);\n  }\n\n  /**\n   * Transform this roll into a {@link ChatMessage} displaying the result.\n   * This function can either create a ChatMessage (by default) or return the data object that would be used to create one.\n   *\n   * @param {object} messageData - The data object to use when creating the message\n   * @param {D20RollChatOptions} options - Additional options which configure how the message is created\n   * @returns {Promise<ChatMessage | object>} The created ChatMessage document, or the object of data that would be used to create one\n   */\n  async toMessage(messageData = {}, options = {}) {\n    if (!this._evaluated) await this.evaluate();\n\n    const chatTemplate = options.chatTemplate || this.constructor.CHAT_TEMPLATE;\n    const chatTemplateData = foundry.utils.mergeObject(\n      {\n        formula: this.formula,\n        details: await this.getTooltip(),\n        roll: this,\n        d20: this.d20.total, // Natural d20 roll\n        total: pf1.utils.limitPrecision(this.total, 2), // Total result\n        bonus: this.bonus, // Total bonus to the roll\n        precision: Math.floor((this.total - Math.floor(this.total)) * 100), // Extra precision\n        isCrit: this.isCrit,\n        isMisfire: this.isMisfire,\n        isNat20: this.isNat20,\n        isNat1: this.isNat1,\n        dc: this.dc,\n        hasDC: Number.isFinite(this.dc),\n        isSuccess: this.isSuccess,\n        isFailure: this.isFailure,\n        natural: this.natural,\n        options: this.options,\n        isStatic: this.isStatic,\n        isNormal: this.isNormal,\n        isNonRoll: this.isNonRoll,\n        get isAbnormal() {\n          if (this.isNonRoll) return false; // Technically abnormal but not override\n          return this.isStatic || !this.isNormal;\n        },\n        get abnormalTooltip() {\n          if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.d20 });\n          else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n          else return \"\";\n        },\n        flavor: this.options.flavor,\n        compendiumEntry: options.compendium?.entry,\n        compendiumEntryType: options.compendium?.type,\n      },\n      options.chatTemplateData || {}\n    );\n\n    const rollMode = options.rollMode || this.options.rollMode || game.settings.get(\"core\", \"rollMode\");\n\n    messageData = foundry.utils.mergeObject(\n      {\n        type: \"check\",\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        sound: options.noSound ? undefined : CONFIG.sounds.dice,\n        content: await renderTemplate(chatTemplate, chatTemplateData),\n        system: {\n          dc: this.dc,\n          reference: options.reference,\n        },\n      },\n      messageData\n    );\n    messageData.rolls = [this]; // merge/expandObject would otherwise destroy the `Roll` instance\n\n    messageData.system ??= {};\n    if (options.subject) messageData.system.subject = options.subject;\n\n    // Add combat reference if such exists\n    const actor = ChatMessage.getSpeakerActor(messageData.speaker);\n    if (actor && game.combat?.combatants.some((c) => c.actor === actor)) {\n      foundry.utils.setProperty(messageData, \"system.combat\", game.combat.id);\n    }\n\n    const message = new ChatMessage.implementation(messageData);\n    if (rollMode) message.applyRollMode(rollMode);\n    messageData = message.toObject();\n\n    if (options.create ?? true) {\n      return ChatMessage.implementation.create(messageData, { rollMode });\n    } else {\n      return messageData;\n    }\n  }\n\n  /** @inheritDoc */\n  async _evaluate(options) {\n    this._applyBonus(); // deprecated\n    this._applyStaticRoll(true);\n    await super._evaluate(options);\n    return this;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync(options) {\n    this._applyBonus(); // deprecated\n    this._applyStaticRoll(true);\n    super._evaluateSync(options);\n    return this;\n  }\n\n  /**\n   * Apply the bonus the roll was created with or the user entered into the dialog.\n   *\n   * @deprecated\n   * @private\n   */\n  _applyBonus() {\n    if (this.options.bonus) {\n      foundry.utils.logCompatibilityWarning(\n        \"D20RollPF bonus option is deprecated in favor of including it in the base formula itself\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n      if (!(bonusTerms[0] instanceof foundry.dice.terms.OperatorTerm))\n        bonusTerms.unshift(new foundry.dice.terms.OperatorTerm({ operator: \"+\" }));\n      this.terms.push(...bonusTerms);\n      this._formula = this.constructor.getFormula(this.terms);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {string} bonus\n   */\n  addBonus(bonus) {\n    const bonusTerms = this.constructor.parse(`${bonus}`, this.data);\n    if (bonusTerms[0].operator !== \"+\") bonusTerms.unshift(new foundry.dice.terms.OperatorTerm({ operator: \"+\" }));\n    this.terms.push(...bonusTerms);\n    this._formula = this.constructor.getFormula(this.terms);\n  }\n\n  async getTooltip() {\n    const d20 = this.d20;\n    if (d20?.constructor.name === \"Die\") {\n      // Add in flavor for base check if missing\n      d20.options ??= {};\n      d20.options.flavor ||= game.i18n.localize(\"PF1.Rolls.Check.Label\");\n    }\n\n    return super.getTooltip();\n  }\n}\n\n/**\n * Performs an actor based d20 roll.\n *\n * @param {Partial<D20ActorRollOptions>} [options] - Options\n * @example Rolling a 1d20 + an actor's BAB + 2 for good behavior\n * ```js\n * const actor = game.actors.getName(\"Righteous Paladin\");\n * await pf1.dice.d20Roll({\n *   skipDialog: true, // Roll away without a dialog\n *   flavor: \"BAB\", // Add a flavor/title to the roll\n *   parts: [`${actor.system.attributes.bab.total}[BAB]`], // Use the actor's BAB\n *   dice: \"2d20kh\", // Roll 2 d20s and keep the highest\n *   bonus: \"2[Good Behavior]\", // Add a static bonus of 2\n *   rollMode: \"gmroll\", // Make roll only visible to user and GM\n * });\n * ```\n * @returns {Promise<ChatMessage | object | undefined>} The created ChatMessage document, the object of data that would be used to create one, or undefined if cancelled\n */\nexport async function d20Roll(options = {}) {\n  const {\n    skipDialog = getSkipActionPrompt(),\n    staticRoll = null,\n    chatTemplateData = {},\n    chatMessage = true,\n    compendium,\n    noSound = false,\n    flavor = \"\",\n    parts = [],\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollData = {},\n    subject,\n    bonus = \"\",\n    speaker,\n    messageData = undefined,\n    dc,\n    reference,\n  } = options;\n\n  let rollMode = options.rollMode;\n\n  const formula = [dice, ...parts].join(\" + \");\n\n  const roll = new pf1.dice.D20RollPF(formula, rollData, { flavor, staticRoll, bonus, dc }, { speaker });\n  if (!skipDialog) {\n    const title = speaker?.alias ? `${speaker.alias}: ${flavor}` : flavor;\n    const dialogResult = await roll.promptDialog({ title, rollMode, bonus, subject, speaker, dc });\n    if (dialogResult === null) return;\n\n    // Move roll mode selection from roll data\n    rollMode = roll.options.rollMode;\n    delete roll.options.rollMode;\n  }\n\n  // Move deprecated roll.options.bonus out\n  if (roll.options?.bonus) {\n    roll.addBonus(roll.options.bonus);\n    delete roll.options.bonus;\n  }\n\n  if (Hooks.call(\"pf1PreD20Roll\", roll, options) === false) return;\n\n  return roll.toMessage(\n    { ...messageData, speaker },\n    { create: chatMessage, noSound, chatTemplateData, compendium, subject, dc, reference, rollMode }\n  );\n}\n","import { RollPF } from \"./roll.mjs\";\n\n/**\n * A specialized Roll class which is used to evaluate damage rolls.\n * Provides additional utility getters for data relevant to damage rolls (e.g. damage type).\n */\nexport class DamageRoll extends RollPF {\n  /**\n   * @param {string} formula - The formula to parse.\n   * @param {object} data - The data object against which to parse attributes within the formula.\n   * @param {object} options - Additional options which customize the created Roll instance.\n   */\n  constructor(formula, data, options = {}) {\n    super(formula, data, options);\n\n    this.options.damageType ??= [\"untyped\"];\n    if (this.options.damageType instanceof Set) this.options.damageType = [...this.options.damageType];\n\n    // Add DSN dice styling based on type\n    if (game.dice3d?.isEnabled() && game.dice3d?.constructor.CONFIG().enableFlavorColorset) {\n      // FIXME: for now just randomization of the damage type since we cannot handle randomization of multiple damage types\n      const typeId = this.options.damageType[Math.floor(Math.random() * this.options.damageType.length)];\n      const type = pf1.registry.damageTypes.get(typeId);\n\n      if (type?.diceSoNice) {\n        this.options.appearance = { ...type.diceSoNice };\n      }\n    }\n  }\n\n  /**\n   * Types of damage rolls with regard to their critical status.\n   *\n   * @type {{NON_CRITICAL: string, NORMAL: string, CRITICAL: string}}\n   */\n  static TYPES = {\n    NORMAL: \"normal\",\n    CRITICAL: \"crit\",\n    NON_CRITICAL: \"nonCrit\",\n  };\n\n  /**\n   * The damage type info of this damage roll.\n   *\n   * Returns damage part model to benefit from its auxiliary functionality.\n   *\n   * @type {pf1.models.action.DamagePartModel}\n   */\n  get damageType() {\n    return new pf1.models.action.DamagePartModel({ types: this.options.damageType });\n  }\n\n  /**\n   * The type of this damage roll.\n   *\n   * @see {@link DamageRoll.TYPES}\n   * @type {\"normal\"|\"crit\"|\"nonCrit\"}\n   */\n  get type() {\n    return this.options.type;\n  }\n\n  /**\n   * Whether this damage roll is for a critical damage instance.\n   *\n   * @type {boolean}\n   */\n  get isCritical() {\n    return this.type === this.constructor.TYPES.CRITICAL;\n  }\n}\n","/**\n * Function Term override to support sizeRoll\n */\nexport class FunctionTermPF extends CONFIG.Dice.termTypes.FunctionTerm {\n  /** @override */\n  get expression() {\n    // Evaluated sizeRoll has extra term to store the roll in\n    if (this._evaluated && this.fn === \"sizeRoll\") {\n      const terms = [...this.terms];\n      terms.pop(); // Remove the result\n      return `sizeRoll(${terms.join(\",\")})`;\n    }\n    return super.expression;\n  }\n\n  /**\n   * Simpler formula expression if possible\n   *\n   * @remarks\n   * - Used mainly by {@link pf1.utils.formula.simplify()}\n   * - Unevaluated rolls can't always be simplified.\n   * @type {string}\n   */\n  get simplify() {\n    switch (this.fn) {\n      case \"sizeRoll\":\n        if (!this._evaluated) {\n          if (this.terms.length === 2) return this.terms.join(\"d\");\n          else return this.expression;\n        }\n        return this.terms.at(-1);\n      case \"if\": {\n        const cond = this.rolls[0];\n        if (!cond.isDeterministic) return this.expression;\n        if (cond.total !== 0) return this.terms[1];\n        return \"0\";\n      }\n      case \"ifelse\": {\n        const cond = this.rolls[0];\n        if (!cond.isDeterministic) return this.expression;\n        if (cond.total !== 0) return this.terms[1];\n        return this.terms[2];\n      }\n      case \"lookup\": {\n        const search = this.rolls[0];\n        if (!search.isDeterministic) return this.expression;\n        const offset = search.total;\n        const result = this.terms[offset + 1] ?? this.terms[1];\n        return result;\n      }\n    }\n    return this.expression;\n  }\n\n  /**\n   * Flavor text\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor || \"\";\n  }\n\n  /** @override */\n  get isDeterministic() {\n    if (this.fn === \"sizeRoll\") return false; // sizeRoll is never deterministic\n    return super.isDeterministic;\n  }\n\n  /** @override */\n  _evaluateSync(options = {}) {\n    super._evaluateSync(options);\n    if (this.fn === \"sizeRoll\") {\n      const result = this.rolls.at(-1);\n      result.options.flavor ||= this.flavor;\n      result.propagateFlavor(this.flavor);\n      if (!result._evaluated) result.evaluateSync(options);\n      this.result = result.total;\n    }\n    return this;\n  }\n\n  /** @override */\n  async _evaluateAsync(options = {}) {\n    await super._evaluateAsync(options);\n    if (this.fn === \"sizeRoll\") {\n      const result = this.rolls.at(-1);\n      result.options.flavor ||= this.flavor;\n      result.propagateFlavor(this.flavor);\n      if (!result._evaluated) await result.evaluate(options);\n      this.result = result.total;\n    }\n    return this;\n  }\n\n  /** @override */\n  toJSON() {\n    const json = super.toJSON();\n    json.class = super.constructor.name; // Alias to original function term to allow de-serialization to work\n    return json;\n  }\n}\n","/**\n * String Term override to support booleans as numbers\n *\n * Should be obsoleted by: https://github.com/foundryvtt/foundryvtt/issues/12139\n */\nexport class StringTermPF extends foundry.dice.terms.StringTerm {\n  constructor({ term, options } = {}) {\n    if ([\"true\", \"false\"].includes(term))\n      return new foundry.dice.terms.NumericTerm({ number: term === \"true\" ? 1 : 0, options });\n\n    super({ term, options });\n  }\n}\n","import { getHighestChanges } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\nimport { DamageRoll } from \"../dice/damage-roll.mjs\";\n\nimport { DocumentLikeModel } from \"@models/abstract/document-like-model.mjs\";\nimport { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\nimport { DamagePartModel } from \"@models/action/damage-part-model.mjs\";\nimport { ExtraAttackModel } from \"@models/action/extra-attack-model.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Action pseudo-document\n */\nexport class ItemAction extends ReplaceableSourceMixin(CompactingMixin(DocumentLikeModel)) {\n  /**\n   * Default image if the action has no image and it is not correctly linked to an item\n   *\n   * @readonly\n   */\n  static FALLBACK_IMAGE = /** @type {const} */ (\"systems/pf1/icons/skills/gray_04.jpg\");\n\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * Required by {@link pf1.applications.ItemActionSheet#_createDocumentIdLink}\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Action\",\n    label: \"PF1.Action\",\n  });\n\n  /**\n   * @param {object} data - Action data\n   * @param {*} options - Data model options\n   */\n  constructor(data, options) {\n    if (options instanceof Item) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemAction constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n\n    super(data, options);\n  }\n\n  /** @override */\n  _configure(options) {\n    super._configure(options);\n\n    // Following prevent these definitions being lost on model reset()\n    Object.defineProperties(this, {\n      // Apps\n      apps: {\n        value: {},\n        writable: false,\n        enumerable: false,\n      },\n      // Sheet cache\n      _sheet: {\n        value: null,\n        writable: true,\n        enumerable: false,\n      },\n      // Conditionals collection cache to avoid conflicts with stored array\n      _conditionals: {\n        value: new Collection(),\n        writable: false,\n        enumerable: false,\n      },\n    });\n  }\n\n  /** @override */\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const blankToNull = { nullable: true, blank: false };\n    return {\n      ...super.defineSchema({ name: () => game.i18n.localize(\"PF1.Action\") }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      description: new fields.HTMLField(),\n      tag: new fields.StringField({ blank: false, nullable: true }), // TODO: slug field\n      activation: new fields.SchemaField({\n        cost: new fields.NumberField({ initial: 1, nullable: true, min: 1, integer: true }),\n        type: new fields.StringField({ initial: \"nonaction\" }), // pf1.config.abilityActivationTypes\n        unchained: new fields.SchemaField({\n          cost: new fields.NumberField({ initial: 1, nullable: true, min: 1, integer: true }),\n          type: new fields.StringField({ initial: \"nonaction\" }), // pf1.config.abilityActivationTypes_unchained\n        }),\n      }),\n      duration: new fields.SchemaField({\n        value: new fields.StringField(),\n        units: new fields.StringField(),\n        dismiss: new fields.BooleanField({ initial: false }),\n        concentration: new fields.BooleanField({ initial: false }),\n      }),\n      // Refactor into just .target string?\n      target: new fields.SchemaField({\n        value: new fields.StringField(),\n      }),\n      range: new fields.SchemaField({\n        value: new fields.StringField({ ...blankToNull }),\n        units: new fields.StringField({ ...blankToNull }),\n        maxIncrements: new fields.NumberField({ integer: true, nullable: false, initial: 1 }),\n        minValue: new fields.StringField({ ...blankToNull }),\n        minUnits: new fields.StringField({ ...blankToNull }),\n      }),\n      uses: new fields.SchemaField({\n        autoDeductChargesCost: new fields.StringField(), // TODO: rename to cost\n        perAttack: new fields.BooleanField({ initial: false }),\n        self: new fields.SchemaField({\n          value: new fields.NumberField({ integer: true, min: 0, nullable: false, initial: 0 }),\n          maxFormula: new FormulaField(),\n          per: new fields.StringField(),\n        }),\n        spellPointCost: new FormulaField(),\n      }),\n      measureTemplate: new fields.SchemaField({\n        type: new fields.StringField(),\n        size: new FormulaField(),\n        color: new fields.ColorField(),\n        texture: new fields.FilePathField({ categories: [\"IMAGE\", \"VIDEO\"] }),\n      }),\n      bab: new FormulaField(),\n      attackName: new fields.StringField(),\n      actionType: new fields.StringField({ initial: \"other\" }), // pf1.config.itemActionTypes\n      attackBonus: new FormulaField(),\n      critConfirmBonus: new FormulaField(),\n      damage: new fields.SchemaField({\n        parts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n        critParts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n        nonCritParts: new fields.ArrayField(new fields.EmbeddedDataField(DamagePartModel)),\n      }),\n      extraAttacks: new fields.SchemaField({\n        type: new fields.StringField(), // pf1.config.extraAttacks\n        manual: new fields.ArrayField(new fields.EmbeddedDataField(ExtraAttackModel)),\n        formula: new fields.SchemaField({\n          count: new FormulaField(),\n          bonus: new FormulaField(),\n          label: new fields.StringField(),\n        }),\n      }),\n      ability: new fields.SchemaField({\n        attack: new fields.StringField(), // ability key\n        damage: new fields.StringField(), // ability key\n        max: new fields.NumberField({ integer: true, nullable: true }),\n        damageMult: new fields.NumberField({ initial: null }),\n        critRange: new fields.NumberField({ initial: 20, nullable: true, min: 0, integer: true }), // null => 0\n        critMult: new fields.NumberField({ initial: 2, nullable: true, min: 1, integer: true }), // null => 1\n      }),\n      save: new fields.SchemaField({\n        dc: new FormulaField(),\n        type: new fields.StringField(), // pf1.config.savingThrows\n        description: new fields.StringField(),\n        harmless: new fields.BooleanField({ initial: false }),\n      }),\n      notes: new fields.SchemaField({\n        effect: new fields.ArrayField(new fields.StringField()),\n        footer: new fields.ArrayField(new fields.StringField()),\n      }),\n      soundEffect: new fields.FilePathField({ categories: [\"AUDIO\"] }),\n      powerAttack: new fields.SchemaField({\n        multiplier: new fields.NumberField({ min: 0, initial: null, nullable: true }),\n        damageBonus: new fields.NumberField({ min: 0, initial: 2, integer: true }),\n        critMultiplier: new fields.NumberField({ min: 1, initial: 1, integer: true }),\n      }),\n      naturalAttack: new fields.SchemaField({\n        primary: new fields.BooleanField({ initial: true }),\n        secondary: new fields.SchemaField({\n          attackBonus: new FormulaField(),\n          damageMult: new fields.NumberField({ initial: 0.5, positive: true }),\n        }),\n      }),\n      held: new fields.StringField({ choices: () => pf1.config.weaponHoldTypes, initial: undefined, blank: true }),\n      nonlethal: new fields.BooleanField({ initial: false }),\n      splash: new fields.BooleanField({ initial: false }),\n      touch: new fields.BooleanField({ initial: false }),\n      ammo: new fields.SchemaField({\n        type: new fields.StringField({ initial: \"\" }), // pf1.config.ammoTypes\n        cost: new fields.NumberField({ integer: true, min: 0, initial: undefined }),\n        misfire: new fields.NumberField({ integer: true, min: 0, initial: null, nullable: true }),\n      }),\n      effect: new fields.StringField(),\n      area: new fields.StringField(),\n      conditionals: new fields.ArrayField(new fields.ObjectField()), // TODO\n      enh: new fields.SchemaField({\n        value: new fields.NumberField({ integer: true, min: 0, initial: null, nullable: true }),\n      }),\n      material: new fields.SchemaField({\n        normal: new fields.SchemaField({\n          value: new fields.StringField(),\n          custom: new fields.BooleanField({ initial: false }),\n        }),\n        addon: new fields.SetField(new fields.StringField({ nullable: false, blank: false })),\n      }),\n      // Trinary alignments to allow inheriting from item and to explicitly disabling alignments\n      alignments: new fields.SchemaField({\n        lawful: new fields.BooleanField({ nullable: true, initial: null }),\n        chaotic: new fields.BooleanField({ nullable: true, initial: null }),\n        good: new fields.BooleanField({ nullable: true, initial: null }),\n        evil: new fields.BooleanField({ nullable: true, initial: null }),\n      }),\n    };\n  }\n\n  /** @override */\n  static migrateData(source) {\n    if (typeof source !== \"object\") return;\n\n    source.activation ??= {};\n    source.activation.unchained ??= {};\n\n    // Added with v?\n    // .unchainedAction.activation to .activation.unchained\n    if (source.unchainedAction?.activation) {\n      source.activation.unchained = source.unchainedAction.activation;\n    }\n\n    // Inconsistent held option (PF1 v11)\n    if (source.held === \"normal\") source.held = \"1h\";\n\n    // Migrate invalid string activation cost to 1.\n    if (typeof source.activation.cost === \"string\") source.activation.cost = 1;\n    if (typeof source.activation.unchained?.cost === \"string\") source.activation.unchained.cost = 1;\n\n    if (source.enh !== undefined) {\n      if (typeof source.enh !== \"object\") {\n        source.enh = { value: source.enh ?? null };\n      }\n      // Set to null if disabled.\n      if (source.enh.override === false) {\n        source.enh.value = null;\n      }\n      // Reset odd values to null, too.\n      else if (source.enh.value !== null && typeof source.enh.value !== \"number\") {\n        source.enh.value = null;\n      }\n    }\n\n    if (source.uses?.autoDeductCharges === false) {\n      source.uses.autoDeductChargesCost = \"0\";\n    } else if (source.uses?.autoDeductCharges === true) {\n      source.uses.autoDeductChargesCost = \"1\";\n    }\n\n    // Added with v10\n    source.actionType ||= \"other\";\n    source.area ||= source.spellArea;\n\n    // Migrate unlimited to empty selection, as the two are identical in meaning\n    if (source.uses?.self?.per === \"unlimited\") {\n      delete source.uses.self.per;\n    }\n\n    const mt = source.measureTemplate;\n    if (mt) {\n      mt.color ||= mt.customColor;\n      mt.texture ||= mt.customTexture;\n    }\n\n    // Added with v11\n    if (source.range?.maxIncrements === null || source.range?.maxIncrements < 1) source.range.maxIncrements = 1;\n    if (source.spellEffect && !source.effect) source.effect = source.spellEffect;\n    if (source.naturalAttack?.primaryAttack !== undefined && source.naturalAttack?.primary === undefined) {\n      source.naturalAttack.primary = source.naturalAttack?.primaryAttack;\n    }\n    source.notes ??= {};\n    if (source.effectNotes && !source.notes.effect) source.notes.effect = source.effectNotes;\n    if (source.attackNotes && !source.notes.footer) source.notes.footer = source.attackNotes;\n\n    if (source.range?.units === \"none\") delete source.range.units;\n\n    if (source.ability?.critMult <= 0) source.ability.critMult = 1;\n\n    // Since v9, convert old damage array format of [formula, types] tuple into object\n    // DamagePartModel.migrateData can't handle this as DataModel trashes it before it reaches it\n    // See: https://github.com/foundryvtt/foundryvtt/issues/12125\n    if (source.damage) {\n      for (const key of [\"parts\", \"critParts\", \"nonCritParts\"]) {\n        const parts = source.damage[key] ?? [];\n        if (parts.some((p) => Array.isArray(p))) {\n          source.damage[key] = parts.map((p) => {\n            if (Array.isArray(p)) {\n              const [formula, type] = p;\n              return { formula, type };\n            }\n            return p;\n          });\n        }\n      }\n    }\n\n    return super.migrateData(source);\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.documents.item.ItemBasePF.getEmbeddedDocument | Item#getEmbeddedDocument()} override to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * For supporting conditionals in fromUuid()\n   *\n   * Synced with Foundry v12.331\n   *\n   * @param {string} embeddedName\n   * @param {string} id\n   * @param {object} options\n   * @returns {pf1.components.ItemConditional|undefined}\n   */\n  getEmbeddedDocument(embeddedName, id, options = {}) {\n    let result;\n    switch (embeddedName) {\n      case pf1.components.ItemConditional.metadata.name: {\n        result = this.conditionals?.get(id);\n      }\n    }\n\n    if (options.strict) throw new Error(`${embeddedName} id [${id}] does not exist in ${this.uuid}`);\n\n    return result;\n  }\n\n  /**\n   * Default damage ability\n   *\n   * @internal\n   * @type {string}\n   */\n  get _defaultDamageAbility() {\n    // TODO: Finesse handling\n    switch (this.actionType) {\n      case \"heal\":\n      case \"other\":\n      case \"rsak\":\n      case \"msak\":\n      case \"spellsave\":\n      case \"save\":\n        return null;\n      default:\n        return \"str\";\n    }\n  }\n\n  /**\n   * Default attack ability\n   *\n   * @internal\n   * @type {string}\n   */\n  get _defaultAttackAbility() {\n    switch (this.actionType) {\n      case \"mwak\":\n      case \"msak\":\n      case \"mcman\":\n        return this.actor?.system.attributes?.attack?.meleeAbility || \"str\";\n      case \"rwak\":\n      case \"twak\":\n      case \"rsak\":\n      case \"rcman\":\n        return this.actor?.system.attributes?.attack?.rangedAbility || \"dex\";\n    }\n    return null;\n  }\n\n  /**\n   * Data preparation\n   *\n   * @internal\n   */\n  prepareData() {\n    // Default action type to other if undefined.\n    // Optimally this would be in constructor only, but item action handling can cause that to be lost\n    this.actionType ||= \"other\";\n\n    this.img ||= this.item?.img || this.constructor.FALLBACK_IMAGE;\n\n    this.tag ||= pf1.utils.createTag(this.name);\n\n    // DEPRECATIONS\n    if (this.naturalAttack) {\n      Object.defineProperty(this.naturalAttack, \"primaryAttack\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemAction.naturalAttack.primaryAttack is deprecated in favor of ItemAction.naturalAttack.primary\",\n            {\n              since: \"PF1 v11\",\n              until: \"PF1 v12\",\n            }\n          );\n          return this.primary;\n        },\n      });\n    }\n\n    // Prepare ammo\n    const ammoType = this.ammo?.type;\n    this.ammo.type = ammoType === \"none\" ? null : ammoType || this.item?.system.ammo?.type || null;\n\n    if (this.ammo.type) this.ammo.cost ??= 1;\n    else this.ammo.cost = 0; // Force zero if no type defined\n\n    // Override activation\n    if (game.settings.get(\"pf1\", \"unchainedActionEconomy\")) {\n      this.activation = this.activation.unchained;\n    }\n\n    this._prepareConditionals();\n\n    // Nothing more if there's no parent. Temporary Action?\n    if (!this.item) return;\n\n    const rollData = this.getRollData();\n\n    if (this.item.type === \"spell\") {\n      // Early transform key ability reference to spellbook ability\n      // TODO: Support key ability via class-association\n      const keyAbility = this.item.spellbook?.ability;\n      if (keyAbility) {\n        if (this.ability?.damage === \"_key\") {\n          this.ability.damage = keyAbility;\n        }\n        if (this.ability?.attack === \"_key\") {\n          this.ability.attack = keyAbility;\n        }\n      }\n    }\n\n    if (this.ability?.damage === \"_default\") {\n      this.ability.damage = this._defaultDamageAbility;\n    }\n\n    if (this.ability?.attack === \"_default\") {\n      this.ability.attack = this._defaultAttackAbility;\n    }\n\n    // Prepare max personal charges\n    if (this.uses.self?.per) {\n      const maxFormula = this.uses.self.per === \"single\" ? \"1\" : this.uses.self.maxFormula;\n      const maxUses = RollPF.safeRollSync(maxFormula, rollData).total ?? 0;\n      this.uses.self.max = maxUses;\n    }\n\n    // Remove enhancement bonus override, if wrong type\n    if (this.enh?.value != null && ![\"weapon\", \"attack\"].includes(this.item.type)) {\n      this.enh.value = null;\n    }\n\n    // Initialize default damageMult if missing (for things that can't inherit it from item)\n    if (!Number.isFinite(this.ability?.damageMult)) {\n      let canHold = this.item.isPhysical || this.item.isQuasiPhysical || false;\n      if (!this.hasAttack) canHold = false;\n      if (!canHold) this.ability.damageMult = 1;\n    }\n  }\n\n  /**\n   * Normal material\n   *\n   * @remarks - Null if no material is configured in action or item.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    return this.material.normal.value || this.item.normalMaterial || null;\n  }\n\n  /**\n   * Addon materials\n   *\n   * @type {Set<string>}\n   */\n  get addonMaterial() {\n    return new Set(this.material.addon.size ? this.material.addon : this.item.addonMaterial);\n  }\n\n  /**\n   * Returns whether this action is a combat maneuver\n   *\n   * @type {boolean}\n   */\n  get isCombatManeuver() {\n    return [\"mcman\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Creates an action.\n   *\n   * @param {object[]} data - Data to initialize the action(s) with.\n   * @param {object} context - An object containing update context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the action within.\n   * @throws {Error} - If the action has no parent\n   * @returns {Promise<ItemAction[]>} - The resulting actions\n   */\n  static async create(data, context = {}) {\n    const { parent, ...updateContext } = context;\n\n    if (!(parent instanceof Item)) throw new Error(\"No parent declared\");\n\n    // Prepare new data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n\n    // Update parent\n    const actions = parent.toObject().system.actions || [];\n    actions.push(...data);\n    await parent.update({ \"system.actions\": actions }, updateContext);\n\n    // Return resulting actions\n    return data.map((o) => parent.actions.get(o._id));\n  }\n\n  /**\n   * Parent item\n   *\n   * @type {ItemPF|undefined}\n   */\n  get item() {\n    return this.parent;\n  }\n\n  /**\n   * Parent actor of the parent item\n   *\n   * @type {ActorPF|undefined}\n   */\n  get actor() {\n    return this.parent?.actor;\n  }\n\n  /**\n   * Action ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Can this action be used?\n   *\n   * Returns false if any known criteria for use limitation fails. Calls owning item's canUse functionality also.\n   *\n   * @see {@link pf1.documents.item.ItemBasePF.canUse}\n   *\n   * @type {boolean}\n   */\n  get canUse() {\n    const item = this.item;\n    if (!item.canUse) return false;\n\n    if (this.isSelfCharged) {\n      if ((this.uses.self?.value ?? 0) <= 0) return false;\n    }\n\n    if (item.isPhysical) {\n      if (item.system.quantity <= 0) return false;\n    }\n\n    if (this.isCharged) {\n      const cost = this.getChargeCostSync({ maximize: true })?.total ?? 0;\n      const charges = item.charges;\n      if (cost > 0) {\n        if (cost > charges) return false;\n      }\n    }\n\n    const ammo = this.ammo.type;\n    if (ammo) {\n      // Check if actor has any relevant ammo, regardless if they're set to default\n      if (\n        this.actor?.itemTypes.loot.filter(\n          (i) => i.subType === \"ammo\" && i.system.extraType === ammo && i.system.quantity > 0\n        ).length === 0\n      )\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Includes attack roll?\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return [\"mwak\", \"rwak\", \"twak\", \"msak\", \"rsak\", \"mcman\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Has potentially multiple attacks\n   *\n   * @type {boolean}\n   */\n  get hasMultiAttack() {\n    if (!this.hasAttack) return false;\n    const exAtk = this.extraAttacks ?? {};\n    return exAtk.manual?.length > 0 || !!exAtk.type;\n  }\n\n  /**\n   * Consumes charges on use?\n   *\n   * @type {boolean}\n   */\n  get autoDeductCharges() {\n    return this.getChargeCostSync({ maximize: true })?.total > 0;\n  }\n\n  /**\n   * Does parent item have charges?\n   *\n   * @type {boolean}\n   */\n  get isCharged() {\n    return this.item.isCharged ?? false;\n  }\n\n  /**\n   * Action has charges of its own?\n   *\n   * @type {boolean}\n   */\n  get isSelfCharged() {\n    return !!this.uses?.self?.per;\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @param {boolean} [options.minimize=false]\n   * @param {boolean} [options.maximize=false]\n   * @param {boolean} [options.interactive=false]\n   * @returns {Promise<Roll|null>} - Cost in charges for this action. Null if not charged.\n   */\n  async getChargeCost({ minimize = false, maximize = false, rollData = null, interactive = false } = {}) {\n    if (!this.isCharged) return null;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.uses.autoDeductChargesCost : this.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n\n    const roll = await RollPF.safeRoll(formula, rollData, undefined, undefined, {\n      maximize,\n      minimize,\n      allowInteractive: interactive,\n    });\n\n    // Clamp single use\n    if (this.item.isSingleUse) roll._total = Math.clamp(roll._total, -1, 1);\n\n    return roll;\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @param {boolean} [options.minimize=false]\n   * @param {boolean} [options.maximize=false]\n   * @returns {Roll|null} - Cost in charges for this action. Null if not charged.\n   */\n  getChargeCostSync({ minimize = false, maximize = false, rollData = null } = {}) {\n    if (!this.isCharged) return null;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.uses.autoDeductChargesCost : this.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n\n    if (!maximize && !minimize) maximize = true; // Enforce maximization if neither is called in case this is a die\n    const roll = RollPF.safeRollSync(formula, rollData, undefined, undefined, { maximize, minimize });\n\n    // Clamp single use\n    if (this.item.isSingleUse) roll._total = Math.clamp(roll._total, -1, 1);\n\n    return roll;\n  }\n\n  /**\n   * The action's first increment range (in system configured units)\n   *\n   * @type {number}\n   */\n  get rangeIncrement() {\n    return this.getRange({ type: \"single\" });\n  }\n\n  /**\n   * The action's exclusive minimum range.\n   *\n   * @type {number}\n   */\n  get minRange() {\n    return this.getRange({ type: \"min\" });\n  }\n\n  /**\n   * The action's maximum range (range multiplied by maximum range increments).\n   *\n   * @type {number}\n   */\n  get maxRange() {\n    return this.getRange({ type: \"max\" });\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {\"single\"|\"min\"|\"max\"} [options.type=\"single\"] - What type of range to query. Either \"single\" (for a single range increment), \"max\" or \"min\".\n   * @param {object} [options.rollData=null] - Specific roll data to pass.\n   * @returns {number|null} The given range, in system configured units, or `null` if no range is applicable.\n   */\n  getRange({ type = \"single\", rollData = null } = {}) {\n    const baseRange = this.range.units;\n    const range = type === \"min\" ? this.range.minValue : this.range.value;\n    let rangeType = type === \"min\" ? this.range.minUnits : baseRange;\n\n    // Special case of ignoring min range for invalid range types\n    if (type === \"min\" && ![\"reach\", \"ft\", \"mi\", \"seeText\"].includes(baseRange)) return 0;\n\n    if (!rangeType) {\n      if (type !== \"min\") return null;\n      // Special handling for reach minimum range to account for natural reach when no explicit minimum range is defined\n      if (baseRange === \"reach\") rangeType = \"natural\";\n      else return 0;\n    }\n\n    rollData ??= this.getRollData();\n    const singleIncrementRange = pf1.utils.calculateRange(range, rangeType, rollData)[0];\n\n    if ([\"single\", \"min\"].includes(type)) return singleIncrementRange;\n    return singleIncrementRange * this.range.maxIncrements;\n  }\n\n  /**\n   * Has measured template?\n   *\n   * @type {boolean}\n   */\n  get hasTemplate() {\n    const { type, size } = this.measureTemplate;\n    return !!type && !!size;\n  }\n\n  /**\n   * Does the action implement a damage roll as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return !!this.damage.parts?.length;\n  }\n\n  /**\n   * Effective critical range when accounting for broken status and action type.\n   *\n   * Returns null when crit is not possible.\n   *\n   * @type {number|null}\n   */\n  get critRange() {\n    if (this.ability?.critRange <= 0) return null;\n    if (this.item.isBroken || this.isCombatManeuver) return 20;\n    return this.ability?.critRange || 20;\n  }\n\n  /**\n   * Misfire threshold\n   *\n   * @remarks - Zero if action does not misfire.\n   *\n   * @type {number}\n   */\n  get misfire() {\n    const misfire = this.ammo?.misfire ?? null;\n    if (Number.isFinite(misfire)) return misfire;\n    return this.item.system.ammo?.misfire ?? 0;\n  }\n\n  /**\n   * Get power attack, deadly aim or piranha strike multiplier.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData=null] - Roll data instance\n   * @returns {number} - Effective multiplier\n   */\n  getPowerAttackMult({ rollData = null } = {}) {\n    rollData ??= this.getRollData();\n\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n\n    let mult = rollData.action?.powerAttack?.multiplier;\n    // Use defined override\n    if (mult) return mult;\n\n    // Determine default based on attack type and held option\n    mult = 1;\n    if (this.item.subType === \"natural\") {\n      // Primary\n      if (rollData.action.naturalAttack?.primary) {\n        const ablDmgMult = rollData.action.ability?.damageMult ?? 1;\n        // Primary attack gets +50% damage like with two-handing if ability score multiplier is 1.5x or higher\n        if (ablDmgMult >= 1.5) mult = 1.5;\n      }\n      // Secondary\n      else {\n        mult = 0.5;\n      }\n    } else {\n      if (held === \"2h\") mult = 1.5;\n      else if (held === \"oh\") mult = 0.5;\n    }\n\n    return mult;\n  }\n\n  /**\n   * Does the item have range defined.\n   *\n   * @type {boolean}\n   */\n  get hasRange() {\n    const units = this.range?.units;\n    if (!units) return false;\n    return !!units;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Does the item provide an amount of healing instead of conventional damage?\n   *\n   * @returns {boolean}\n   */\n  get isHealing() {\n    return this.actionType === \"heal\" && this.hasDamage;\n  }\n\n  get hasEffect() {\n    return this.hasDamage || this.notes.effect.length > 0;\n  }\n\n  /**\n   * Does the Item implement a saving throw as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasSave() {\n    return !!this.save?.type;\n  }\n\n  /**\n   * @param {object} [rollData] - Data to pass to the roll. If none is given, get new roll data.\n   * @returns {number} The Difficulty Class for this action.\n   */\n  getDC(rollData = null) {\n    rollData ??= this.getRollData();\n    let result = 10;\n\n    // Get conditional save DC bonus\n    /** @type {number} */\n    const dcBonus = rollData.dcBonus ?? 0;\n\n    if (this.item.type === \"spell\") {\n      /** @type {object} */\n      const spellbook = this.item.spellbook;\n      if (spellbook) {\n        /** @type {string} */\n        let formula = spellbook.baseDCFormula;\n\n        /** @type {object} - Item action \"data\" */\n        const data = rollData.action;\n        if (data.save.dc) formula += ` + ${data.save.dc}`;\n\n        /** @type {number} */\n        const dcSchoolBonus = rollData.attributes.spells?.school?.[this.item.system.school]?.dc ?? 0;\n        /** @type {number} */\n        const universalDCBonus = rollData.attributes?.spells?.school?.all?.dc ?? 0;\n\n        return RollPF.safeRollSync(formula, rollData).total + dcBonus + dcSchoolBonus + universalDCBonus;\n      } else {\n        // Assume standard base formula for spells with minimum required abilty score\n        /** @type {number} */\n        const level = this.item.system.level ?? 1;\n        const minAbl = Math.floor(level / 2);\n        return 10 + level + minAbl + dcBonus;\n      }\n    } else {\n      const dcFormula = this.save.dc?.toString() || \"0\";\n      result = RollPF.safeRollSync(dcFormula, rollData).total + dcBonus;\n      return result;\n    }\n  }\n\n  /**\n   * Effective enhancement bonus\n   *\n   * Action's enhancement override or what is inherited from item.\n   *\n   * @remarks\n   * - Null if not enhanced.\n   *\n   * @type {number|null}\n   */\n  get enhancementBonus() {\n    return this.enh?.value ?? this.item.system.enh ?? null;\n  }\n\n  /**\n   * Is ranged rather than melee.\n   *\n   * @type {boolean}\n   */\n  get isRanged() {\n    return [\"rwak\", \"twak\", \"rsak\", \"rcman\"].includes(this.actionType);\n  }\n\n  /**\n   * Is spell-like action\n   *\n   * @remarks\n   * - Action type is set to melee/ranged spell attack or spell save.\n   *\n   * @type {boolean}\n   */\n  get isSpell() {\n    return [\"rsak\", \"msak\", \"spellsave\"].includes(this.actionType);\n  }\n\n  /**\n   * An array of changes affecting this action's damage\n   *\n   * @type {ItemChange[]}\n   */\n  get damageSources() {\n    // Build damage context\n    const contexts = [pf1.const.actionTypeToContext[this.actionType] ?? \"damage\"];\n    if (this.isRanged) contexts.push(\"rdamage\");\n    else contexts.push(\"mdamage\");\n    if (this.item.subType === \"natural\") contexts.push(\"ndamage\");\n\n    const changes = this.item.getContextChanges(contexts);\n    if (changes.length == 0) return [];\n    return getHighestChanges(changes, { ignoreTarget: true });\n  }\n\n  /**\n   * All relevant Changes the action's damage.\n   *\n   * @type {ItemChange[]}\n   */\n  get allDamageSources() {\n    const conds = this.conditionals\n      .filter((c) => c.default)\n      .filter((c) => c.modifiers.find((m) => m.target === \"damage\"));\n    const rollData = this.getRollData();\n\n    if (!rollData) return [];\n\n    const mods = Object.keys(pf1.config.bonusTypes);\n\n    // Turn relevant conditionals into structure accepted by getHighestChanges\n    const fakeCondChanges = [];\n    for (const c of conds) {\n      for (const m of c.modifiers) {\n        if (m.target !== \"damage\") continue;\n        let roll;\n        let isDeterministic;\n        try {\n          roll = new RollPF(m.formula, rollData);\n          isDeterministic = roll.isDeterministic;\n          if (isDeterministic) roll.evaluateSync();\n        } catch (err) {\n          // This is very noisy but needed to help track down the problem\n          console.error(\n            \"Invalid conditional formula:\",\n            { formula: m.formula, conditional: c, action: this, item: this.item },\n            \"\\n\",\n            err\n          );\n        }\n        const isModifier = mods.includes(m.type);\n        fakeCondChanges.push({\n          flavor: c.name,\n          value: isDeterministic ? roll.total : m.formula,\n          modifier: isModifier ? m.type : \"untyped\", // Turn unrecognized types to untyped\n          type: isModifier ? undefined : m.type, // Preserve damage type if present\n          formula: m.formula,\n        });\n      }\n    }\n\n    const allChanges = [...this.damageSources, ...fakeCondChanges];\n\n    // Add enhancement bonus\n    const enh = this.enhancementBonus;\n    if (enh) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        value: enh,\n        type: \"enh\",\n        formula: enh.toString(),\n      });\n    }\n\n    // Add special cases specific to the item\n    // Broken\n    if (this.item.isBroken) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.Broken\"),\n        value: -2,\n        type: \"untyped\",\n        formula: \"-2\",\n      });\n    }\n\n    return getHighestChanges(allChanges, { ignoreTarget: true });\n  }\n\n  /**\n   * @param {object} [options]\n   * @internal\n   * @returns {object}\n   */\n  getRollData(options) {\n    const item = this.item;\n    const result = item?.getRollData({ ...options, cache: false }) ?? {};\n\n    result.action = pf1.utils.deepClone(this);\n    result.dc = this.hasSave ? this.getDC(result) : 0;\n\n    if (item?.type === \"spell\") {\n      // Add per school CL bonus\n      // TODO: Move to item roll data generation?\n      result.cl += result.attributes?.spells?.school?.[item.system.school]?.cl ?? 0;\n    }\n\n    // Determine size bonus\n    if (this.hasAttack) {\n      /** @type {number} */\n      const size = result.size || 4;\n      result.sizeBonus = Object.values(this.isCombatManeuver ? pf1.config.sizeSpecialMods : pf1.config.sizeMods)[size];\n    }\n\n    // BAB override\n    if (result.action.bab) {\n      const bab = RollPF.safeRollSync(result.action.bab, result).total;\n      foundry.utils.setProperty(result, \"attributes.bab.total\", bab || 0);\n    }\n\n    // Add @bab alias\n    result.bab = result.attributes?.bab?.total || 0;\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Replace conditionals array with collection\n   *\n   * @internal\n   */\n  _prepareConditionals() {\n    /** @type {Collection<pf1.components.ItemConditional>} */\n    const collection = this._conditionals;\n    /** @type {Collection<pf1.components.ItemConditional>} */\n    const prior = new Collection(collection.entries());\n    collection.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    for (const condData of this._source.conditionals) {\n      /** @type {pf1.components.ItemConditional} */\n      let conditional;\n      if (prior && prior.has(condData._id)) {\n        conditional = prior.get(condData._id);\n        conditional.replaceSource(condData);\n      } else {\n        conditional = new pf1.components.ItemConditional(condData, { parent: this, strict: false });\n      }\n\n      collection.set(conditional.id, conditional);\n    }\n\n    /** @type {Collection<pf1.components.ItemConditional>} */\n    this.conditionals = collection;\n  }\n\n  /**\n   * Delete this action\n   *\n   * @returns {Promise<Item>} - Updated parent item document.\n   */\n  async delete() {\n    /** @type {Array<object>} - Array of raw action data */\n    const actions = this.item.toObject().system.actions;\n    actions.findSplice((a) => a._id == this.id);\n\n    // Preemptively close applications\n    const promises = [];\n    for (const app of Object.values(this.apps)) {\n      promises.push(app.close({ pf1: { action: \"delete\" }, submit: false, force: true }));\n    }\n    await Promise.all(promises);\n\n    // Delete action\n    return this.item.update({ \"system.actions\": actions });\n  }\n\n  /**\n   * Update the action\n   *\n   * TODO: BROKEN\n   *\n   * @param {object} updateData - Update data\n   * @param {object} context - Update context\n   */\n  async update(updateData, context = {}) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    delete updateData._id; // Prevent ID drift\n    this.updateSource(updateData);\n\n    const updates = this.item.actions.map((a) => a.toObject());\n\n    await this.item.update({ \"system.actions\": updates }, context);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Data Generation\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this action's parent item, but with this action's data,\n   * regardless of whether it is the first action or not.\n   *\n   * @see {@link ItemPF#getChatData}\n   * @param {object} [chatDataOptions] - Options passed to {@link ItemPF#getChatData} affecting the chat data\n   * @returns {Promise<import(\"../documents/item/item-pf.mjs\").ChatData>} Chat data for this action's parent and this action\n   */\n  async getChatData(chatDataOptions = {}) {\n    return this.item.getChatData({ ...chatDataOptions, actionId: this.id });\n  }\n\n  /**\n   * Returns labels related to this particular action\n   *\n   * @param {object} [options]\n   * @param {object} [options.rollData] - Pre-determined roll data. If not provided, finds the action's own roll data.\n   * @param {boolean} [options.isolated] - Are these labels generated for isolated information (that is, need more details)\n   * @returns {Record<string, string>} This action's labels\n   */\n  getLabels({ rollData, isolated = false } = {}) {\n    const labels = {};\n    rollData ??= this.getRollData();\n\n    const hasActor = !!this.actor;\n\n    // Activation method\n    if (this.activation) {\n      /** @type {object} - Activation data */\n      const activation = this.activation;\n      if (activation) {\n        /** @type {boolean} */\n        const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n        const activationTypes = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypes_unchained\n          : pf1.config.abilityActivationTypes;\n        const activationTypesPlural = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypesPlurals_unchained\n          : pf1.config.abilityActivationTypesPlurals;\n\n        /** @type {string} */\n        const activationType = activation.type || \"nonaction\";\n        if (activation.type === \"special\") {\n          labels.activation = activationTypes.special;\n        } else if (activation.cost > 1 && !!activationTypesPlural[activationType]) {\n          labels.activation = [activation.cost.toString(), activationTypesPlural[activationType]].filterJoin(\" \");\n        } else {\n          labels.activation = [\n            [\"minute\", \"hour\", \"action\"].includes(activationType) && activation.cost ? activation.cost.toString() : \"\",\n            activationTypes[activationType],\n          ].filterJoin(\" \");\n        }\n      }\n    }\n\n    // Duration\n    // Set duration label\n    const duration = this.duration;\n    switch (duration?.units) {\n      case \"spec\":\n        labels.duration = duration.value;\n        break;\n      case \"seeText\":\n      case \"inst\":\n      case \"perm\":\n        labels.duration = pf1.config.timePeriods[duration.units];\n        break;\n      case \"turn\": {\n        const unit = pf1.config.timePeriods[duration.units];\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n        break;\n      }\n      case \"round\":\n      case \"minute\":\n      case \"hour\":\n      case \"day\":\n      case \"month\":\n      case \"year\":\n        if (duration.value) {\n          const unit = pf1.config.timePeriods[duration.units];\n          labels.durationFormula = duration.value;\n          labels.variableDuration = /@\\w/.test(duration.value);\n          let roll, value;\n          try {\n            roll = new RollPF(duration.value, rollData);\n            // Outside of actor\n            if (isolated) {\n              const _rollData = foundry.utils.deepClone(rollData);\n              const minroll = new RollPF(duration.value, _rollData);\n              minroll.evaluateSync({ minimize: true });\n              // Spoof level 20\n              _rollData.cl = 20;\n              foundry.utils.setProperty(_rollData, \"attributes.hd.total\", 20);\n              foundry.utils.setProperty(_rollData, \"attributes.bab.total\", 20);\n              _rollData.bab = 20;\n              foundry.utils.setProperty(_rollData, \"class.level\", 20);\n              const maxroll = new RollPF(duration.value, _rollData);\n              maxroll.evaluateSync({ maximize: true });\n              if (minroll.total !== maxroll.total) value = `${minroll.total} - ${maxroll.total}`;\n              else value = `${minroll.total}`;\n            }\n            // On actor\n            else {\n              if (roll.isDeterministic) {\n                roll.evaluateSync();\n                value = roll.total;\n              } else {\n                let formula = pf1.utils.formula.unflair(duration.value || \"0\");\n                formula = RollPF.replaceFormulaData(formula || \"0\", rollData);\n                value = pf1.utils.formula.compress(pf1.utils.formula.simplify(formula));\n              }\n            }\n\n            labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n          } catch (err) {\n            console.error(\n              \"Error in duration formula:\",\n              { formula: duration.value, rollData, roll },\n              roll?.err ?? err,\n              this\n            );\n          }\n        }\n        break;\n    }\n\n    // Dismissable, but only if special duration isn't used\n    // TODO: Better i18n support\n    if (labels.duration && duration.units !== \"spec\") {\n      if (duration.dismiss) labels.duration += \" \" + game.i18n.localize(\"PF1.DismissableMark\");\n      if (duration.concentration)\n        labels.duration = game.i18n.format(\"PF1.ConcentationDuration\", { duration: labels.duration });\n    }\n\n    // Difficulty Class\n    if (this.hasSave) {\n      /** @type {number} */\n      const totalDC = rollData.dc + (rollData.dcBonus ?? 0);\n      labels.save = game.i18n.format(\"PF1.DCThreshold\", { threshold: totalDC });\n    }\n\n    // Range\n    if (this.hasRange) {\n      const rangeUnit = this.range.units;\n      const rangeValue = this.range.value;\n      /** @type {string} */\n      const rangeLabel = pf1.config.distanceUnits[rangeUnit];\n      labels.range = rangeLabel;\n      switch (rangeUnit) {\n        case \"spec\":\n          labels.range = rangeValue || labels.range;\n          break;\n        // Implicit ranges\n        case \"personal\":\n        case \"touch\":\n        case \"melee\":\n        case \"reach\":\n        case \"unlimited\":\n        case \"seeText\":\n          // Display as is\n          break;\n        // Explicit and spell ranges\n        case \"ft\":\n        case \"mi\":\n        case \"close\":\n        case \"medium\":\n        case \"long\": {\n          const range = this.getRange({ type: \"single\", rollData });\n          // Ranges with explicit formulas\n          const isMetric = pf1.utils.getDistanceSystem() === \"metric\";\n          // getRange() gives only feet or meters\n          const [d, u] = pf1.utils.simplifyRange(range, isMetric ? \"m\" : \"ft\");\n          labels.range = game.i18n.format(\"PF1.RangeFormat\", {\n            distance: new Intl.NumberFormat(undefined).format(d),\n            units: pf1.config.measureUnitsShort[u],\n          });\n\n          // Spell ranges also include their label\n          if ([\"close\", \"medium\", \"long\"].includes(rangeUnit)) {\n            labels.range += ` (${rangeLabel})`;\n          }\n          break;\n        }\n      }\n\n      // Special formatting when no actor present\n      if (!hasActor) {\n        const units = pf1.utils.getDistanceSystem();\n        switch (rangeUnit) {\n          case \"close\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeShortMetric\" : \"PF1.SpellRangeShort\"\n            )})`;\n            break;\n          case \"medium\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeMediumMetric\" : \"PF1.SpellRangeMedium\"\n            )})`;\n            break;\n          case \"long\":\n            labels.range = `${rangeLabel} (${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeLongMetric\" : \"PF1.SpellRangeLong\"\n            )})`;\n            break;\n        }\n      }\n    }\n\n    // Targets\n    const targets = this.target?.value;\n    if (targets) labels.targets = targets;\n\n    // Set area label\n    if (this?.area) labels.area = this.area;\n\n    // Action type\n    labels.actionType = pf1.config.itemActionTypes[this.actionType];\n\n    return labels;\n  }\n\n  // -----------------------------------------------------------------------\n\n  /**\n   * Get all appropriate context changes for attack rolls.\n   *\n   * @see {@link ItemPF.getContextChanges}\n   */\n  get attackSources() {\n    const contexts = [\"~attackCore\"];\n    if (this.isCombatManeuver) contexts.push(\"cmb\");\n    if (this.isRanged) contexts.push(\"rattack\");\n    else contexts.push(\"mattack\");\n\n    // TODO: Query from item itself\n    const isNatural = this.item.subType === \"natural\";\n    if (isNatural) contexts.push(\"nattack\");\n\n    switch (this.actionType) {\n      case \"twak\":\n        contexts.push(\"tattack\");\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"mwak\":\n      case \"rwak\":\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"msak\":\n      case \"rsak\":\n        contexts.push(\"sattack\");\n        break;\n    }\n\n    return this.item.getContextChanges(contexts);\n  }\n\n  /**\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\n   *\n   * @param {object} [options] - Options\n   * @param {object} [options.data] - Roll data\n   * @param {Array<string>} [options.extraParts] - Additional attack parts\n   * @param {string} [options.bonus] - Additional attack bonus\n   * @param {boolean} [options.primary=true] - Treat as primary natural attack\n   * @param {pf1.components.ItemChange[]} [options.extraChanges] - Additional changes\n   * @returns {Promise<D20RollPF>}\n   */\n  async rollAttack({ data = null, extraParts = [], extraChanges = [], bonus = null, primary = true, ...options } = {}) {\n    if (typeof options.primaryAttack === \"boolean\") {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemAttack.rollAttack()'s `primaryAttack` option is deprecated in favor of `primary`\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      primary = options.primaryAttack;\n    }\n    const rollData = data ?? this.getRollData();\n    /** @type {object} - Item \"data\" */\n    const itemData = rollData.item;\n    /** @type {object} - Action \"data\" */\n    const actionData = rollData.action;\n\n    const config = {};\n\n    itemData.primaryAttack = primary;\n\n    // Add misc bonuses/penalties\n    itemData.proficiencyPenalty = -4;\n\n    // Determine ability score modifier\n    /** @type {string} */\n    const abl = actionData.ability.attack;\n\n    // Define Roll parts\n    const parts = [];\n\n    // Add size bonus\n    if (rollData.sizeBonus !== 0) parts.push(`@sizeBonus[${game.i18n.localize(\"PF1.Size\")}]`);\n\n    /** @type {object} - Ability \"data\" */\n    const ability = rollData.abilities?.[abl];\n    // Add ability modifier\n    if (ability && ability?.mod !== 0) {\n      parts.push(`@abilities.${abl}.mod[${pf1.config.abilities[abl]}]`);\n    }\n\n    // Get relevant changes\n    const changes = this.attackSources;\n    changes.push(...extraChanges);\n\n    // Add masterwork bonus to changes (if applicable)\n    if ([\"mwak\", \"rwak\", \"twak\", \"mcman\", \"rcman\"].includes(this.actionType) && this.item.system.masterwork) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"1\",\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: 1,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add enhancement bonus to changes\n    if (this.enhancementBonus) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: this.enhancementBonus.toString(),\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: this.enhancementBonus,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add bonus parts\n    parts.push(...extraParts);\n    // Add attack bonus\n    if (typeof actionData.attackBonus === \"string\" && ![\"\", \"0\"].includes(actionData.attackBonus)) {\n      parts.push(actionData.attackBonus);\n    }\n    // Backwards compatibility\n    else if (typeof actionData.attackBonus === \"number\") {\n      itemData.attackBonus = actionData.attackBonus;\n      parts.push(`@item.attackBonus[${game.i18n.localize(\"PF1.AttackRollBonus\")}]`);\n    }\n\n    // Add proficiency penalty\n    try {\n      config.proficient = this.item.getProficiency(true);\n    } catch (error) {\n      // Treat as proficient if there's proficiency incompatibility.\n      config.proficient = true;\n    }\n\n    // Add secondary natural attack penalty\n    const isNatural = this.item.subType === \"natural\";\n    const isNaturalSecondary = isNatural && primary === false;\n    config.secondaryPenalty = isNaturalSecondary ? pf1.config.naturalAttacks.secondary.penalty : \"0\";\n\n    // Add bonus\n    rollData.bonus = 0;\n    if (bonus) {\n      // TODO: Do not pre-roll\n      const roll = await RollPF.safeRoll(bonus, rollData);\n      rollData.bonus = roll.total;\n    }\n\n    // Options for D20RollPF\n    const rollOptions = {\n      critical: this.critRange,\n    };\n\n    if (this.ammo.type && this.ammo.cost > 0) {\n      const misfire = this.misfire;\n      if (misfire > 0) rollOptions.misfire = misfire;\n    }\n\n    // call pre attack hook before changes are filtered and before specific [parts] from config and roll data are created\n    Hooks.call(\"pf1PreAttackRoll\", this, config, rollData, rollOptions, parts, changes);\n\n    // Get attack bonus\n    const hightest = getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    );\n\n    for (const c of hightest) {\n      let value = c.value;\n      // BAB override\n      if (actionData.bab && c._id === \"_bab\") {\n        value = RollPF.safeRollSync(c.formula, data).total || 0;\n      }\n      if (value == 0) continue;\n      parts.push(`${value}[${RollPF.cleanFlavor(c.flavor)}]`);\n    }\n\n    // Convert config to roll part\n    if (config.secondaryPenalty != 0) {\n      const terms = RollPF.parse(config.secondaryPenalty);\n      if (terms.length > 1) config.secondaryPenalty = `(${config.secondaryPenalty})`;\n      parts.push(`${config.secondaryPenalty}[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n    }\n\n    if (rollData.bonus != 0) {\n      parts.push(`@bonus[${game.i18n.localize(\"PF1.SituationalBonus\")}]`);\n    }\n\n    if (!config.proficient) {\n      parts.push(`@item.proficiencyPenalty[${game.i18n.localize(\"PF1.Proficiency.Penalty\")}]`);\n    }\n\n    const roll = new pf1.dice.D20RollPF(\n      [rollData.d20 || pf1.dice.D20RollPF.standardRoll, ...parts.filter((p) => !!p)].join(\"+\"),\n      rollData,\n      rollOptions\n    );\n\n    try {\n      await roll.evaluate();\n    } catch (err) {\n      throw new Error(`Attack roll evaluation failed:\\n${roll.formula}\\n`, { cause: err });\n    }\n\n    // Cleanup roll data that was altered here.\n    delete rollData.bonus;\n\n    Hooks.call(\"pf1AttackRoll\", this, roll, config);\n\n    return roll;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll damage for an action.\n   *\n   * @param {object} [options] - Options configuring the damage roll\n   * @param {object | null} [options.data=null] - rollData to be used\n   * @param {boolean} [options.critical=false] - Whether to roll critical damage\n   * @param {string[]} [options.extraParts] - Additional strings added to the roll formula\n   * @param {object} [options.conditionalParts=[]] - Conditional data sets\n   * @param {boolean} [options.primaryAttack] - Whether this is the primary attack\n   * @returns {Promise<DamageRoll[]>} Created damage rolls, one roll per damage part\n   */\n  async rollDamage({\n    data = null,\n    critical = false,\n    extraParts = [],\n    conditionalParts = {},\n    primaryAttack = true,\n  } = {}) {\n    const rollData = data ?? this.getRollData();\n    /** @type {object} - Item \"data\" */\n    const itemData = rollData.item;\n    /** @type {object} - Action \"data\" */\n    const actionData = rollData.action;\n\n    if (!this.hasDamage) {\n      throw new Error(\"You may not make a Damage Roll with this Action.\");\n    }\n\n    const isNatural = this.item.subType === \"natural\";\n\n    // Determine critical multiplier\n    rollData.critMult = 1;\n    if (critical) rollData.critMult = actionData.ability.critMult;\n    // Determine ability multiplier\n    if (rollData.ablMult == null) {\n      /** @type {string} */\n      const held = actionData?.held || itemData?.held || \"1h\";\n      rollData.ablMult =\n        actionData?.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    }\n\n    // Define Roll parts\n    const parts = [];\n    const addParts = (property, type) => {\n      parts.push(\n        ...(this.damage[property]?.map((damage) => ({\n          base: damage.formula,\n          extra: [],\n          damageType: damage.types,\n          type,\n        })) ?? [])\n      );\n\n      // add typed conditionals\n      conditionalParts[`damage.${type}`]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type });\n      });\n    };\n\n    addParts(\"parts\", \"normal\");\n    if (critical) addParts(\"critParts\", \"crit\");\n    else addParts(\"nonCritParts\", \"nonCrit\");\n\n    /**\n     * Initialize changes to empty array so mods can still add changes for healing \"attacks\" via the pre-roll hook below\n     *\n     * @type {ItemChange[]}\n     */\n    let changes = [];\n    if (!this.isHealing) {\n      // Gather changes\n      changes = this.damageSources;\n\n      // Add enhancement bonus to changes\n      if (this.enhancementBonus) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: this.enhancementBonus.toString(),\n            operator: \"add\",\n            target: \"damage\",\n            type: \"enh\",\n            value: this.enhancementBonus,\n            flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n          })\n        );\n      }\n\n      // Add broken penalty\n      if (this.item.isBroken) {\n        const label = game.i18n.localize(\"PF1.Broken\");\n        parts[0].extra.push(`-2[${label}]`);\n      }\n    }\n\n    // call pre damage hook before changes are filtered and before specific [parts] from roll data are created\n    Hooks.call(\"pf1PreDamageRoll\", this, rollData, parts, changes);\n\n    // Get damage bonus\n    getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).forEach((c) => {\n      let value = c.value;\n      // Put in parenthesis if there's a chance it is more complex\n      if (/[\\s+-?:]/.test(value)) value = `(${value})`;\n      parts[0].extra.push(`${value}[${c.flavor}]`);\n    });\n\n    // Determine ability score modifier\n    /** @type {string} */\n    const abl = actionData.ability.damage;\n    /** @type {object} - Ability \"data\" */\n    const ability = rollData.abilities?.[abl];\n    if (ability) {\n      // Determine ability score bonus\n      /** @type {number} */\n      const max = actionData.ability?.max ?? Infinity;\n      if (ability.mod < 0) rollData.ablDamage = Math.min(max, ability.mod);\n      else rollData.ablDamage = Math.floor(Math.min(max, ability.mod) * rollData.ablMult);\n\n      // Determine ability score label\n      /** @type {string} */\n      const ablLabel = pf1.config.abilities[abl];\n\n      // Add ability score\n      parts[0].extra.push(`@ablDamage[${ablLabel}]`);\n    }\n\n    // Ensure previous data does not infect things here\n    delete rollData.previous;\n    delete rollData.base;\n\n    // Create roll\n    const rolls = [];\n    for (let a = 0; a < parts.length; a++) {\n      const part = parts[a];\n      let rollParts = [];\n      if (a === 0) rollParts = [...part.extra, ...extraParts];\n      const formula = [part.base, ...rollParts].join(\" + \");\n      // Skip empty formulas instead of erroring on them\n      if (formula.length == 0) continue;\n      let roll;\n      try {\n        roll = await new DamageRoll(formula, rollData, {\n          damageType: part.damageType,\n          type: part.type,\n        }).evaluate();\n        // Add to result\n        rolls.push(roll);\n      } catch (err) {\n        console.error(\"Error with damage formula:\", formula, this);\n        throw err;\n      }\n\n      const firstDie = roll.dice[0];\n\n      // Add first normal damage instance as @base damage data in roll data\n      if (a === 0 && !critical) {\n        rollData.base = {\n          total: roll.total,\n          dice: firstDie?.expression,\n          die: { size: firstDie?.faces, count: firstDie?.number },\n        };\n      }\n\n      // Store some details as @previous\n      rollData.previous = {\n        total: roll.total,\n        dice: firstDie?.expression,\n        die: { size: firstDie?.faces, count: firstDie?.number },\n      };\n    }\n\n    return rolls;\n  }\n\n  /**\n   * Generates a list of targets this modifier can have.\n   *\n   * @returns {Record<string, string>} Target ID to label mapping.\n   */\n  getConditionalTargets() {\n    const hasAttack = this.hasAttack,\n      hasDamage = this.hasDamage,\n      hasSave = this.hasSave;\n\n    const results = [\n      { id: \"attack\", sort: 1_000, label: pf1.config.conditionalTargets.attack._label, disabled: !hasAttack },\n      {\n        id: \"critMult\",\n        sort: 2_000,\n        label: pf1.config.conditionalTargets.critMult._label,\n        disabled: !hasAttack,\n        simple: true,\n      },\n      { id: \"damage\", sort: 3_000, label: pf1.config.conditionalTargets.damage._label, disabled: !hasDamage },\n      { id: \"size\", sort: 4_000, label: pf1.config.conditionalTargets.size._label, disabled: !hasDamage, simple: true },\n      { id: \"dc\", sort: 5_000, label: game.i18n.localize(\"PF1.DC\"), disabled: !hasSave, simple: true },\n      {\n        id: \"effect\",\n        sort: 6_000,\n        label: pf1.config.conditionalTargets.effect._label,\n        choices: {},\n        /** @type {boolean} */\n        get disabled() {\n          return foundry.utils.isEmpty(this.choices);\n        },\n      },\n      {\n        id: \"misc\",\n        sort: 7_000,\n        label: pf1.config.conditionalTargets.misc._label,\n        choices: {},\n        /** @type {boolean} */\n        get disabled() {\n          return foundry.utils.isEmpty(this.choices);\n        },\n      },\n      {\n        id: \"charges\",\n        sort: 8_000,\n        label: game.i18n.localize(\"PF1.ChargeCost\"),\n        disabled: !this.isCharged,\n        simple: true,\n      },\n    ];\n\n    // Add additional item-specific targets\n    this.item.getConditionalTargets(results);\n\n    // Fill in sub-targets\n    for (const entry of results) {\n      this.getConditionalSubTargets(entry);\n    }\n\n    // Convert results into its final form\n    const result = {};\n    for (const entry of results.sort((a, b) => a.sort - b.sort)) {\n      if (entry.disabled) continue;\n      if (!entry.simple && foundry.utils.isEmpty(entry.choices)) continue;\n      result[entry.id] = entry;\n    }\n\n    return result;\n  }\n\n  /**\n   * Generates lists of conditional sub-targets this action can have.\n   *\n   * @param {object} entry - The target entry\n   * @param {*} _results - Unused. Deprecated option\n   * @returns {object} - Same as the target entry parameter with added info.\n   */\n  getConditionalSubTargets(entry, _results) {\n    // @deprecated - Remove after PF1 v12\n    if (typeof entry === \"string\" || _results)\n      throw new Error(\"ItemAction#getConditionalSubTargets() called with invalid arguments\");\n\n    entry.choices ??= {};\n\n    /** @type {string} */\n    const targetId = entry.id;\n\n    // Add static targets\n    /** @type {object} */\n    const subTargets = pf1.config.conditionalTargets[targetId];\n    if (subTargets) {\n      for (const [key, label] of Object.entries(subTargets)) {\n        if (!key.startsWith(\"_\") && !key.startsWith(\"~\")) entry.choices[key] = label;\n      }\n    }\n\n    // Add subtargets depending on attacks\n    if ([\"attack\", \"damage\"].includes(targetId)) {\n      // Add specific attacks\n      if (this.hasAttack) {\n        entry.choices[\"attack_0\"] = `${game.i18n.localize(\"PF1.Attack\")} 1`;\n\n        const exAtk = this.extraAttacks;\n        if (exAtk?.manual?.length) {\n          exAtk.manual.forEach((part, index) => {\n            entry.choices[`attack_${index + 1}`] = part.name;\n          });\n        }\n      } else {\n        delete entry.choices[\"rapidShotDamage\"];\n      }\n    }\n\n    this.item.getConditionalSubTargets?.(entry);\n\n    return entry;\n  }\n\n  /**\n   * Generates lists of conditional modifier bonus types applicable to a formula.\n   *\n   * @param {string} target - The target key as defined in {@link pf1.config.conditionTargets}.\n   * @returns {Record<string, string>} A list of bonus types.\n   */\n  getConditionalModifierTypes(target) {\n    const result = {};\n    if (target === \"attack\" || target === \"damage\") {\n      // Add types from pf1.config.bonusTypes\n      for (const [k, v] of Object.entries(pf1.config.bonusTypes)) {\n        result[k] = v;\n      }\n    }\n    if (target === \"damage\") {\n      for (const damageType of pf1.registry.damageTypes) {\n        result[damageType.id] = damageType.name;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generates a list of critical applications for a given formula target.\n   *\n   * @param {string} target - The target key as defined in {@link pf1.config.conditionalTargets}.\n   * @returns {Record<string, string>} A list of critical applications.\n   */\n  getConditionalCritical(target) {\n    let result = {};\n    // Attack bonuses can only apply as critical confirm bonus\n    if (target === \"attack\") {\n      result = { ...result, normal: \"PF1.Normal\", crit: \"PF1.CriticalConfirmBonus\" };\n    }\n    // Damage bonuses can be multiplied or not\n    if (target === \"damage\") {\n      result = { ...result, normal: \"PF1.Normal\" };\n      if (this.hasAttack) {\n        result = { ...result, crit: \"PF1.OnCritBonusFormula\", nonCrit: \"PF1.NonMultBonusFormula\" };\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generate attacks.\n   *\n   * @param {object} [options] - Options\n   * @param {boolean} [options.full=true] - Full attack\n   * @param {object} [options.rollData] - Roll data\n   * @param {boolean} [options.resolve=false] - If the bonuses are to be resolved directly.\n   * @param {boolean} [options.conditionals=false] - Include conditional modifications. Requires `resolve` to be enabled.\n   * @param {boolean} [options.bonuses=false] - Include other bonuses. Requires `resolve` to be enabled.\n   * @returns {Array<object>} - Array of attack data\n   */\n  getAttacks({ full = true, rollData, resolve = false, conditionals = false, bonuses = false } = {}) {\n    rollData ||= this.getRollData();\n\n    const exAtkCfg = pf1.config.extraAttacks[this.extraAttacks?.type] ?? {};\n\n    const bonusToAll = exAtkCfg.modToAll;\n\n    /**\n     * Counter for unnamed or other numbered attacks, to be incremented with each usage.\n     * Starts at 1 to account for the base attack.\n     */\n    let unnamedAttack = 0;\n    const unnamedAttackNames = new Set();\n    /**\n     * @param {string} name\n     * @param {string} template\n     * @returns {string}\n     */\n    const getUniqueName = (name, template) => {\n      if (template && template.indexOf(\"{0}\") == -1) template = null;\n      let label = name;\n      while (unnamedAttackNames.has(label) || !label) {\n        unnamedAttack += 1;\n        if (template) {\n          if (game.i18n.has(template)) label = game.i18n.format(template, { 0: unnamedAttack });\n          else label = template.replace(\"{0}\", unnamedAttack);\n        } else label = game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: unnamedAttack });\n      }\n      unnamedAttackNames.add(label);\n      return label;\n    };\n\n    rollData.attackCount = 0;\n\n    /**\n     * Replace roll data that won't be available after\n     *\n     * @param {string} formula\n     * @param {object} data\n     * @returns {string}\n     */\n    const replaceSpecificRollData = (formula, data) => {\n      return formula.replace(/@\\w+\\b/, (m) => {\n        const p = m.slice(1);\n        if (p in data) return data[p];\n        return m;\n      });\n    };\n\n    const _rollData = {\n      attackCount: 0,\n      attackSetCount: 0,\n      formulaicAttack: 0,\n    };\n\n    const flavor = game.i18n.localize(exAtkCfg.flavor || \"\");\n    let formula = `(${exAtkCfg.bonus || \"0\"} + ${bonusToAll || \"0\"})` + (flavor ? `[${flavor}]` : \"\");\n    formula = replaceSpecificRollData(formula, _rollData);\n    formula = pf1.utils.formula.simplify(formula); // Reduce (0 + 0) to 0 or other similar cases\n    const attacks = [{ bonus: formula, label: getUniqueName(this.attackName) }];\n\n    // Extra attacks\n    if (full) {\n      rollData.fullAttack = 1;\n      /** @type {boolean} */\n      const unchainedEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n      let attackCount = 0;\n\n      const parseAttacks = async (countFormula, bonusFormula, label, bonusLabel) => {\n        // Soft assign zero formula to deal with empty string causing parameter init to fail\n        countFormula ||= \"0\";\n        bonusFormula ||= \"0\";\n        if (!countFormula || countFormula == \"0\") return;\n\n        const exAtkCount =\n          RollPF.safeRollSync(countFormula, rollData, undefined, undefined, { minimized: true })?.total ?? 0;\n        if (exAtkCount <= 0) return;\n\n        try {\n          for (let i = 0; i < exAtkCount; i++) {\n            const _rollData = {\n              attackCount: (attackCount += 1),\n              attackSetCount: i,\n              formulaicAttack: i + 1, // Add and update attack counter\n            };\n\n            /** @type {string} */\n            let formula = bonusFormula;\n            if (bonusToAll) formula += ` + ${bonusToAll}`;\n            formula = replaceSpecificRollData(formula, _rollData);\n\n            /** @type {string} */\n            const alabel = game.i18n.has(label) ? game.i18n.format(label, { 0: i + 1 }) : label?.replace(\"{0}\", i + 1);\n\n            attacks.push({\n              bonus: bonusLabel ? `(${formula})[${bonusLabel}]` : `(${formula})`,\n              formula,\n              flavor: bonusLabel,\n              // Continue counting if similar to initial attack name\n              // If formulaic attacks have a non-default name, number them with their own counter; otherwise, continue unnamed attack numbering\n              label: getUniqueName(alabel, label),\n              rollData: _rollData,\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      if (exAtkCfg.iteratives && !unchainedEconomy) {\n        parseAttacks(\n          pf1.config.iterativeExtraAttacks,\n          pf1.config.iterativeAttackModifier,\n          null,\n          game.i18n.localize(\"PF1.Iterative\")\n        );\n      }\n\n      // Add attacks defined by configuration\n      if (exAtkCfg.count) {\n        parseAttacks(exAtkCfg.count, exAtkCfg.bonus, exAtkCfg.attackName, flavor);\n      }\n\n      // Add manually entered explicit extra attacks\n      if (exAtkCfg.manual) {\n        const extraAttacks = this.extraAttacks?.manual ?? [];\n        for (const { name, formula } of extraAttacks) {\n          if (name) unnamedAttackNames.add(name);\n          attacks.push({\n            bonus: formula,\n            // Use defined label, or fall back to continuously numbered default attack name\n            label: name || getUniqueName(),\n          });\n        }\n      }\n\n      // Add custom extra attack formula\n      if (exAtkCfg.formula) {\n        const formulaCfg = this.extraAttacks.formula ?? {};\n        parseAttacks(formulaCfg.count, formulaCfg.bonus, formulaCfg.label);\n      }\n    }\n\n    // TODO: Move this to be part of the output data as formulas\n    if (resolve) {\n      const condBonuses = new Array(attacks.length).fill(0);\n      if (conditionals) {\n        // Conditional modifiers\n        const conds = this.conditionals.filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"));\n        for (const c of conds) {\n          for (const cc of c.modifiers) {\n            const bonusRoll = RollPF.safeRollSync(cc.formula, rollData, undefined, undefined, { minimize: true });\n            if (bonusRoll.total == 0) continue;\n            if (cc.subTarget?.match(/^attack\\.(\\d+)$/)) {\n              const atk = parseInt(RegExp.$1, 10);\n              if (atk in condBonuses) condBonuses[atk] += bonusRoll.total;\n            }\n          }\n        }\n      }\n\n      let totalBonus = 0;\n      if (bonuses) {\n        const sources = this.item.getAttackSources(this.id, { rollData });\n        totalBonus = sources.reduce((total, src) => {\n          /** @type {number|string}} */\n          let value = src.value;\n          if (typeof value === \"string\") {\n            const roll = RollPF.safeRollSync(value, rollData, undefined, undefined, { minimize: true });\n            value = roll.total;\n          }\n          return total + value;\n        }, 0);\n      }\n\n      attacks.forEach((atk, i) => {\n        rollData.attackCount = i;\n        const roll = RollPF.safeRollSync(atk.bonus, rollData, undefined, undefined, { minimize: true });\n        atk.bonus = roll.total + totalBonus + condBonuses[i];\n        delete rollData.attackCount;\n      });\n    }\n\n    return attacks;\n  }\n\n  /**\n   * Use action.\n   *\n   * Wrapper for {@link pf1.documents.item.ItemPF.use() ItemPF.use()}\n   *\n   * @param {object} options - Options passed to `ItemPF.use()`.\n   * @returns {Promise<void>} - Returns what `ItemPF.use()` returns.\n   */\n  async use(options = {}) {\n    options.actionId = this.id;\n\n    // TODO: ItemPF.use() and this.use() relation needs to be flipped.\n\n    return this.item.use(options);\n  }\n\n  /**\n   * Prune data\n   *\n   * @internal\n   * @param {object} data - Raw data (e.g. product of {@link toObject()})\n   */\n  static pruneData(data) {\n    // Aggressive data size reduction\n\n    if (!data.img) delete data.img;\n    if (!data.tag) delete data.tag;\n    if (!data.bab) delete data.bab;\n    if (data.enh?.value === null) delete data.enh.value;\n    if (foundry.utils.isEmpty(data.enh)) delete data.enh;\n    if (!data.attackName) delete data.attackName;\n    if (!data.attackBonus) delete data.attackBonus;\n    if (!data.critConfirmBonus) delete data.critConfirmBonus;\n    if (!data.measureTemplate?.type) delete data.measureTemplate;\n    if (!data.extraAttacks?.type) delete data.extraAttacks;\n    if (data.extraAttacks) {\n      if (!data.extraAttacks.formula) delete data.extraAttacks.formula;\n      if (!data.extraAttacks.count) delete data.extraAttacks.count;\n      if (!data.extraAttacks.label) delete data.extraAttacks.label;\n      if (data.extraAttacks.manual?.length == 0) delete data.extraAttacks.manual;\n    }\n    if (!data.uses?.self?.per) delete data.uses?.self;\n    if (data.uses?.spellPointCost === \"\") delete data.uses?.spellPointCost;\n    if (data.save && !data.save.type) {\n      // Preserve description even if there's no save (TODO: Maybe cull it anyway?)\n      if (!data.save.description) delete data.save.description;\n      // RAW preserving harmless=true here is pointless if there's no save.\n      if (data.save.harmless === false) delete data.save.harmless;\n      if (data.save.harmless !== true && !data.save.description) delete data.save;\n      else {\n        delete data.save.type;\n        delete data.save.dc;\n      }\n    }\n    if (!data.held) delete data.held;\n    if (!data.duration?.units) delete data.duration;\n    if (data.duration?.dismiss === false) delete data.duration.dismiss;\n    if (data.duration?.concentration === false) delete data.duration.concentration;\n    if (!data.target?.value) delete data.target;\n    if (!data.uses?.autoDeductChargesCost) delete data.uses?.autoDeductChargesCost;\n    if (data.uses?.perAttack === false) delete data.uses.perAttack;\n    if (foundry.utils.isEmpty(data.uses)) delete data.uses;\n\n    if (!data.ability?.damage) {\n      delete data.ability?.damage;\n      delete data.ability?.damageMult;\n      delete data.ability?.max;\n    }\n    if ([\"other\", \"save\", \"spellSave\", \"healing\"].includes(data.actionType || \"other\")) {\n      delete data.ability?.attack;\n      delete data.ability?.critMult;\n      delete data.ability?.critRange;\n    }\n    if (data.ability?.critMult <= 0) data.ability.critMult = 1;\n    if (data.ability?.critRange <= 0) {\n      delete data.ability?.critMult;\n      data.ability.critRange = null;\n    }\n    if (!data.ability?.attack) delete data.ability?.attack;\n    if (data.ability?.damageMult === null) delete data.ability?.damageMult;\n    if (data.ability?.max === null) delete data.ability.max;\n    if (foundry.utils.isEmpty(data.ability)) delete data.ability;\n\n    if (data.powerAttack?.multiplier === null) delete data.powerAttack?.multiplier;\n\n    if (!data.area) delete data.area;\n    if (!data.effect) delete data.effect;\n    if (data.notes?.effect) {\n      if (data.notes.effect.length === 0) delete data.notes.effect;\n    }\n    if (data.notes?.footer) {\n      if (data.notes.footer.length === 0) delete data.notes.footer;\n    }\n    if (foundry.utils.isEmpty(data.notes)) delete data.notes;\n\n    if (!data.range?.units) delete data.range;\n    else {\n      if (!data.range?.minUnits) delete data.range?.minValue;\n      if (data.range?.maxIncrements === 1) delete data.range?.maxIncrements;\n    }\n\n    if (data.damage) {\n      if (data.damage.parts?.length == 0) delete data.damage.parts;\n      if (data.damage.critParts?.length == 0) delete data.damage.critParts;\n      if (data.damage.nonCritParts?.length == 0) delete data.damage.nonCritParts;\n      if (Object.keys(data.damage).length == 0) delete data.damage;\n    }\n\n    if (data.material) {\n      if (!data.material.normal?.value && !data.material.normal?.custom) delete data.material?.normal;\n      if (!(data.material.addon?.length > 0)) delete data.material?.addon;\n      if (Object.keys(data.material).length == 0) delete data.material;\n    }\n\n    // Diff based cleanup (don't do this for everything, to avoid defaults changing causing problems)\n    const defaults = this.schema.getInitialValue();\n    const diff = foundry.utils.diffObject(defaults, data);\n    if (!diff.naturalAttack) delete data.naturalAttack;\n    if (!diff.alignments) delete data.alignments;\n\n    // Prune child models\n    // HACK: .toObject() only clones _source and thus never calls .toObject() on the child models\n    if (data.damage) {\n      for (const parts of Object.values(data.damage)) {\n        for (const part of parts) {\n          DamagePartModel.pruneData(part);\n        }\n      }\n    }\n\n    if (data.extraAttacks?.manual?.length) {\n      for (const exAtk of data.extraAttacks.manual) {\n        ExtraAttackModel.pruneData(exAtk);\n      }\n    }\n\n    if (data.conditionals?.length === 0) delete data.conditionals;\n\n    if (data.ammo?.type === \"\") delete data.ammo.type;\n    if (data.ammo?.misfire === null) delete data.ammo.misfire;\n    if (data.ammo?.cost === null || data.ammo?.cost === undefined) delete data.ammo?.cost;\n    if (foundry.utils.isEmpty(data.ammo)) delete data.ammo;\n\n    if (!data.soundEffect) delete data.soundEffect;\n    if (!data.description) delete data.description;\n\n    if (!data.splash) delete data.splash;\n    if (!data.touch) delete data.touch;\n    if (!data.nonlethal) delete data.nonlethal;\n  }\n\n  /**\n   * Current sheet.\n   *\n   * @remarks\n   * - Initializes a new sheet if one doesn't exist yet.\n   *\n   * @type {pf1.applications.component.ItemActionSheet}\n   */\n  get sheet() {\n    this._sheet ??= new pf1.applications.component.ItemActionSheet(this);\n    return this._sheet;\n  }\n\n  /**\n   * Render all connected application instances.\n   *\n   * @param {boolean} [force=false] - Force rendering\n   * @param {object} [context={}] - Optional context\n   */\n  render(force = false, context = {}) {\n    // TODO: Support AppV2\n    Object.values(this.apps).forEach((app) => app.render(force, context));\n  }\n\n  /* DEPRECATIONS */\n\n  /** @deprecated - No replacement */\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.defaultData has been deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.schema.getInitialValue();\n  }\n\n  /**\n   * @deprecated - Use the action directly instead\n   * @returns {this}\n   */\n  get data() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemAction.data has been deprecated. Use the data directly on the action instead.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return this;\n  }\n\n  /** @deprecated - No replacement */\n  static get defaultDamageType() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.defaultDamageType is deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return [];\n  }\n\n  /**\n   * Has sound effect?\n   *\n   * @deprecated - Test `!!action.soundEffect` instead.\n   * @type {boolean}\n   */\n  get hasSound() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemAction.hasSound is deprecated with no replacement. Test !!action.soundEffect instead.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return !!this.soundEffect;\n  }\n\n  /**\n   * Effective ammo type.\n   *\n   * @deprecated - Use `action.ammo.type` instead.\n   * @type {string|null}\n   */\n  get ammoType() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.ammoType is deprecated in favor of ItemAction.ammo.type\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.ammo.type;\n  }\n\n  /**\n   * Area\n   *\n   * @deprecated - Use `action.area` instead.\n   * @type {string}\n   */\n  get spellArea() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.spellArea is deprecated in favor of ItemAction.area\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.area;\n  }\n\n  /**\n   * Effective per-attack ammo cost.\n   *\n   * @deprecated - Use `action.ammo.cost` instead.\n   * @type {number}\n   */\n  get ammoCost() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.ammoCost is deprecated in favor of ItemAction.ammo.cost\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.ammo.cost;\n  }\n\n  /**\n   * @deprecated - Use `action.effect` instead\n   */\n  get spellEffect() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.spellEffect is deprecated in favor of ItemAction.effect\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.effect;\n  }\n\n  /** @deprecated - Use `action.notes.footer` instead */\n  get attackNotes() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.attackNotes is deprecated in favor of ItemAction.notes.footer\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.notes?.footer;\n  }\n\n  /** @deprecated - Use `action.notes.effect` instead */\n  get effectNotes() {\n    foundry.utils.logCompatibilityWarning(\"ItemAction.effectNotes is deprecated in favor of ItemAction.notes.effect\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n    return this.notes?.effect;\n  }\n}\n","import { getChangeFlat, getSourceInfo } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\nimport { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Change datamodel\n */\nexport class ItemChange extends ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Change\",\n    label: \"Change\", // TODO: i18n\n  });\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        blank: false,\n        initial: () => foundry.utils.randomID(8),\n        required: true,\n        readonly: true,\n      }),\n      formula: new FormulaField(),\n      operator: new fields.StringField({ blank: false, initial: \"add\", choices: [\"add\", \"set\"] }),\n      target: new fields.StringField({ blank: true, required: false }),\n      type: new fields.StringField({ blank: false, required: false, initial: \"untyped\" }),\n      priority: new fields.NumberField({ initial: 0, required: false }),\n      value: new fields.NumberField({ initial: 0, required: false }),\n      flavor: new fields.StringField({ blank: true, initial: undefined, required: false }),\n      continuous: new fields.BooleanField({ initial: undefined, required: false }),\n    };\n  }\n\n  static migrateData(source) {\n    // Update terminology\n    if (source.subTarget) {\n      source.target = source.subTarget;\n      delete source.subTarget;\n    }\n    if (source.modifier) {\n      source.type = source.modifier;\n      delete source.modifier;\n    }\n    // Script operator is no longer supported\n    // And migrate legacy operators\n    if (source.operator === \"script\") source.operator = \"add\";\n    else if (source.operator === \"+\") source.operator = \"add\";\n    else if (source.operator === \"=\") source.operator = \"set\";\n\n    return super.migrateData(source);\n  }\n\n  constructor(data, options = {}) {\n    super(data, options);\n    this.updateTime = new Date();\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange#subTarget is deprecated in favor of ItemChange#target\", {\n      since: \"PF1 v11.4\",\n      until: \"PF1 v12\",\n    });\n    return this.target;\n  }\n\n  get modifier() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange#modifier is deprecated in favor of ItemChange#type\", {\n      since: \"PF1 v11.4\",\n      until: \"PF1 v12\",\n    });\n    return this.type;\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.documents.item.ItemBasePF.getEmbeddedDocument | Item#getEmbeddedDocument()} override to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * @override\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n    // Required to overcome Foundry's _id special case\n    Object.defineProperty(this, \"_id\", {\n      value: this._source._id,\n      writable: false,\n      configurable: true,\n    });\n    this.prepareData();\n  }\n\n  /**\n   * Prepare in-memory data.\n   *\n   * @internal\n   */\n  prepareData() {\n    this.flavor ||= this.parent?.name.replace(/\\[|\\]/g, \"\") || this.type;\n  }\n\n  /**\n   * Creates a change.\n   *\n   * @param {object[]} data - Data to initialize the change(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the change within.\n   * @returns {Promise<ItemChange[]>} The resulting changes, or an empty array if nothing was created.\n   */\n  static async create(data, { parent = null } = {}) {\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => new this(dataObj).toObject());\n\n      const oldChangeData = parent.toObject().system.changes ?? [];\n\n      // Catalog existing IDs\n      const ids = new Set(oldChangeData.map((c) => c._id));\n      // Remove invalid IDs\n      ids.delete(undefined);\n      ids.delete(\"\");\n      // Ensure new data has unique IDs that don't conflict with old\n      const newIds = new Set();\n      for (const c of data) {\n        c._id ||= foundry.utils.randomID(8);\n        while (ids.has(c._id)) c._id = foundry.utils.randomID(8);\n        ids.add(c._id);\n        newIds.add(c._id);\n      }\n\n      // Update parent\n      const newChangeData = [...oldChangeData, ...data];\n      await parent.update({ \"system.changes\": newChangeData });\n\n      // Return results\n      return [...parent.changes.filter((c) => newIds.has(c._id))];\n    }\n\n    return [];\n  }\n\n  async delete() {\n    const item = this.parent;\n    if (!item) throw new Error(\"Can not delete Change not in an item\");\n    const changes = item.toObject().system.changes ?? [];\n    const changeId = this.id;\n    changes.findSplice((c) => c._id === changeId);\n    return item.update({ \"system.changes\": changes });\n  }\n\n  /**\n   * Change ID\n   *\n   * @type {string}\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * CSS Template Class\n   *\n   * @type {string}\n   */\n  get cssClass() {\n    if (this.isSimple) return \"simple\";\n    if (this.isDeferred) return \"roll\";\n    return \"deterministic\";\n  }\n\n  /**\n   * Is simple?\n   *\n   * Simple changes are evaluated before roll data becomes available.\n   *\n   * @type {boolean}\n   */\n  get isSimple() {\n    const targetData = pf1.config.buffTargets[this.target];\n    return targetData?.simple ?? false;\n  }\n\n  /**\n   * Is deferred?\n   *\n   * Deferred changes are evaluated only when rolled.\n   *\n   * @type {boolean}\n   */\n  get isDeferred() {\n    const targetData = pf1.config.buffTargets[this.target];\n    if (targetData) return targetData.deferred ?? false;\n\n    // Also any per-skill change is deferred\n    return /^skill\\./.test(this.target);\n  }\n\n  /**\n   * Does this change distance of something?\n   *\n   * Affects mostly presentation.\n   *\n   * @type {boolean}\n   */\n  get isDistance() {\n    return /speed|sense/i.test(this.target);\n  }\n\n  get source() {\n    console.warn(\"ItemChange.source does not exist\");\n    return null;\n  }\n\n  getSourceInfoTargets(actor) {\n    switch (this.target) {\n      case \"aac\":\n      case \"sac\":\n      case \"nac\":\n        return [\"system.attributes.ac.normal.total\", \"system.attributes.ac.flatFooted.total\"];\n    }\n\n    // Return default targets\n    return getChangeFlat(actor, this.target, this.type);\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Data to update with\n   */\n  _preUpdate(data) {\n    // Make sure sub-target is valid\n    /*\n    // BUG: This does not work reliably for much anything but skills\n    const targetCategory = data.target?.split(\".\").shift();\n    if (targetCategory) {\n      const target = data.target || this.target;\n      const changeTargets = this.parent.getChangeTargets(targetCategory);\n      if (changeTargets[target] == null) {\n        console.error(`Invalid change target ${target}, resetting.`);\n        data.target = \"\";\n      }\n    }\n    */\n  }\n\n  /**\n   * @override\n   */\n  updateSource(data, options) {\n    // Shallow copy to avoid altering things for caller\n    data = { ...data };\n    // Prevent ID alterations\n    if (this.id && data._id) delete data._id;\n\n    return super.updateSource(data, options);\n  }\n\n  /**\n   * Update this change.\n   *\n   * @param {object} data - Update data\n   * @param {object} options - Additional options\n   * @param {object} context - Update context\n   * @throws {Error} - If change has no parent to update or the change does not exist on parent.\n   * @returns {Promise<Item|null>} - Updated parent, or null if no update was performed (e.g. nothing changed)\n   */\n  async update(data, options = {}, context = {}) {\n    if (!this.parent) throw new Error(\"ItemChange has no parent to update.\");\n\n    this.updateTime = new Date();\n\n    this._preUpdate(data);\n    // Prevent ID alterations\n    if (data._id) delete data._id;\n\n    const changes = this.parent.toObject().system.changes ?? [];\n\n    const idx = changes.findIndex((change) => change._id === this.id);\n    if (idx >= 0) {\n      // Temporary change to validate the update\n      const tc = new this.constructor(this.toObject());\n      const updated = tc.updateSource(data);\n      // Omit update if nothing would change\n      if (foundry.utils.isEmpty(updated)) return null;\n\n      changes[idx] = tc.toObject();\n      return this.parent.update({ \"system.changes\": changes }, context);\n    } else {\n      throw new Error(`Change #${this.id} not found on parent ${this.parent.uuid}`);\n    }\n  }\n\n  /**\n   * Safely apply this change to an actor, catching any errors.\n   *\n   * @internal\n   * @see {@link ItemChange#applyChange}\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   */\n  _safeApplyChange(actor, targets = null, { applySourceInfo = true } = {}) {\n    try {\n      this.applyChange(actor, targets, { applySourceInfo });\n    } catch (error) {\n      if (this.parent?.isOwner || actor.isOwner) {\n        const msgSourceReference = this.parent\n          ? `from ${this.parent.name} [${this.parent.uuid}] to ${actor.name}`\n          : `to ${actor.name} [${actor.uuid}]]`;\n        const errorMessage = `Failed to apply ItemChange ${this.id} ${msgSourceReference}`;\n        const errorData = {\n          change: this,\n          parent: this.parent,\n          actor,\n          targets,\n        };\n        Hooks.onError(\"ItemChange#applyChange\", error, {\n          msg: errorMessage,\n          log: \"error\",\n          data: errorData,\n        });\n        ui.notifications?.error(error.message, { console: false });\n      }\n    }\n  }\n\n  /**\n   * Applies this change to an actor.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   * @param {object} [options.rollData] - Roll data\n   */\n  applyChange(actor, targets = null, { applySourceInfo = true, rollData } = {}) {\n    // Prepare change targets\n    targets ??= this.getTargets(actor);\n\n    rollData ??= this.parent ? this.parent.getRollData({ refresh: true }) : actor.getRollData({ refresh: true });\n\n    const overrides = actor.changeOverrides;\n    for (const t of targets) {\n      const override = overrides[t];\n      const operator = this.operator;\n\n      // HACK: Data prep change application creates overrides; only changes meant for manual comparison lack them,\n      // and those do not have to be applied to the actor.\n      // This hack enables calling applyChange on Changes that are not meant to be applied, but require a call to\n      // determine effective operator and/or value.\n      if (!override) continue;\n\n      let value = 0;\n      if (this.formula) {\n        if (!isNaN(this.formula)) {\n          value = parseFloat(this.formula);\n        } else if (this.isDeferred && RollPF.parse(this.formula).some((t) => !t.isDeterministic)) {\n          value = RollPF.replaceFormulaData(this.formula, rollData, { missing: 0 });\n        } else {\n          value = RollPF.safeRollSync(\n            this.formula,\n            rollData,\n            { formula: this.formula, target: t, change: this, rollData },\n            { suppressError: this.parent && !this.parent.isOwner },\n            { maximize: true }\n          ).total;\n        }\n      }\n\n      this.value = value;\n\n      if (!t) continue;\n\n      const prior = override[operator][this.type];\n\n      switch (operator) {\n        case \"add\":\n          {\n            let base = foundry.utils.getProperty(actor, t);\n\n            // Don't change non-existing ability scores\n            if (base == null) {\n              if (t.match(/^system\\.abilities/)) continue;\n              base = 0;\n            }\n\n            // Deferred formula\n            if (typeof value === \"string\") break;\n\n            if (typeof base === \"number\") {\n              // Skip positive dodge modifiers if lose dex to AC is in effect\n              if (actor.changeFlags.loseDexToAC && value > 0 && this.type === \"dodge\" && this.isAC) continue;\n\n              if (pf1.config.stackingBonusTypes.includes(this.type)) {\n                // Add stacking bonus\n                foundry.utils.setProperty(actor, t, base + value);\n                override[operator][this.type] = (prior ?? 0) + value;\n              } else {\n                // Use higher value only\n                const diff = !prior ? value : Math.max(0, value - (prior ?? 0));\n                foundry.utils.setProperty(actor, t, base + diff);\n                override[operator][this.type] = Math.max(prior ?? 0, value);\n              }\n            }\n          }\n          break;\n\n        case \"set\":\n          foundry.utils.setProperty(actor, t, value);\n          override[operator][this.type] = value;\n          break;\n      }\n\n      if (applySourceInfo) this.applySourceInfo(actor);\n\n      // Adjust ability modifier\n      const modifierChanger = t.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.(?:total|penalty|base)$/);\n      const abilityTarget = modifierChanger?.[1];\n      if (abilityTarget) {\n        const ability = actor.system.abilities[abilityTarget];\n        ability.mod = pf1.utils.getAbilityModifier(ability.total, {\n          damage: ability.damage,\n          penalty: ability.penalty,\n        });\n      }\n    }\n  }\n\n  /**\n   * Does this target any kind of AC?\n   *\n   * @type {boolean}\n   */\n  get isAC() {\n    return [\"ac\", \"aac\", \"sac\", \"nac\", \"tac\", \"ffac\"].includes(this.target);\n  }\n\n  /**\n   * Applies this change's info to an actor's `sourceInfo`.\n   * Info is only added if either the {@link type | modifier type} allows stacking or the {@link value} is higher than the previous value.\n   * If the modifier type is not stacking and this change's info is added, existing and now ineffective info entries are removed.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @returns {void}\n   */\n  applySourceInfo(actor) {\n    const sourceInfoTargets = this.getSourceInfoTargets(actor);\n    const value = this.value;\n\n    // This Change's info entry data\n    const infoEntry = {\n      value,\n      operator: this.operator,\n      name: this.parent ? this.parent.name : this.flavor,\n      modifier: this.type,\n      type: this.parent ? this.parent.type : null,\n      change: this,\n    };\n\n    switch (this.operator) {\n      case \"add\":\n        if (pf1.config.stackingBonusTypes.includes(this.type)) {\n          // Always add stacking entries\n          const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n          for (const si of sourceInfoTargets) {\n            getSourceInfo(actor.sourceInfo, si)[sourceInfoGroup].push(infoEntry);\n          }\n        } else {\n          for (const infoTarget of sourceInfoTargets) {\n            const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n            const sInfo = getSourceInfo(actor.sourceInfo, infoTarget)[sourceInfoGroup];\n\n            // Assume this Change's info entry should be added\n            let doAdd = true;\n\n            // The value of the this Change's source info entry for this specific target\n            let sumValue = value;\n\n            // Check if there already is an info entry with which this Change should be combined\n            // This is the case for `enhancement` and `base` entries otherwise sharing parent and target\n            const existingInfoEntry = sInfo.find((infoEntry) => {\n              const hasSameParent = infoEntry.change?.parent === this.parent;\n              const isEnh =\n                (infoEntry.change?.type === \"base\" && this.type === \"enh\") ||\n                (infoEntry.change?.type === \"enh\" && this.type === \"base\");\n              const hasSameTarget = infoEntry.change?.target === this.target;\n              return hasSameParent && isEnh && hasSameTarget;\n            });\n            if (existingInfoEntry) {\n              doAdd = false;\n              if (existingInfoEntry.change?.type === \"base\") {\n                // This Change enhances an existing base\n                existingInfoEntry.value += value;\n                continue;\n              } else {\n                // This Change replaces an existing `enhancement` entry with its own `base` entry, using the sum of both values\n                sumValue += existingInfoEntry.value;\n                // Check whether the combined entry should exist, or if another entry is already better than it\n                const hasHighestValue = !sInfo.some((infoEntry) => {\n                  const isSameModifier = infoEntry.modifier === infoEntry.modifier;\n                  const target = infoEntry.change?.target;\n                  const isSameTarget = target ? target === this.target : true;\n                  const hasHigherValue = infoEntry.value > sumValue;\n                  return isSameModifier && isSameTarget && hasHigherValue;\n                });\n                // If the merged entry is the best, replace the existing entry with it\n                sInfo.findSplice(\n                  (entry) => entry === existingInfoEntry,\n                  hasHighestValue ? { ...infoEntry, value: sumValue } : undefined\n                );\n              }\n            }\n\n            // Determine whether there is an entry with a higher value; remove entries with lower values\n            if (this.type) {\n              for (const oldEntry of sInfo) {\n                if (!oldEntry.type) continue;\n                const isSameType = oldEntry.change?.type === oldEntry.type;\n                if (!isSameType) continue;\n                if (oldEntry.value < sumValue) {\n                  sInfo.splice(sInfo.indexOf(oldEntry), 1);\n                } else {\n                  doAdd = false;\n                }\n              }\n            }\n\n            if (doAdd) sInfo.push({ ...infoEntry });\n          }\n        }\n        break;\n      case \"set\": {\n        for (const si of sourceInfoTargets) {\n          getSourceInfo(actor.sourceInfo, si).positive.push({ ...infoEntry });\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * @see {@link getChangeFlat}\n   * @param {ActorPF} actor - Actor instance\n   * @returns {Array<string>} - Valid targets for this change on specified actor\n   */\n  getTargets(actor) {\n    return getChangeFlat(actor, this.target, this.type, this.value);\n  }\n\n  static pruneData(data) {\n    // Null priority is pointless\n    if (data.priority === null) delete data.priority;\n\n    // Clear undefined values\n    for (const [key, value] of Object.entries(data)) {\n      if (value === undefined) delete data[key];\n    }\n  }\n\n  toObject(source, prune) {\n    const data = super.toObject(source, prune);\n\n    // Cleanup: Following are never meant to be stored\n    delete data.value;\n    delete data.continuous;\n\n    return data;\n  }\n}\n","import { CompactingMixin } from \"@models/mixins/compacting-mixin.mjs\";\nimport { PreparedModel } from \"@models/abstract/prepared-model.mjs\";\nimport { IDField } from \"@datafields/id-field.mjs\";\n\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\nimport { FormulaField } from \"@datafields/formula-field.mjs\";\n\n/**\n * Conditional modifier bundle.\n */\nexport class ItemConditional extends ReplaceableSourceMixin(CompactingMixin(PreparedModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Conditional\",\n    label: \"Conditional\", // TODO: i18n\n  });\n\n  constructor(data, options) {\n    if (options instanceof pf1.components.ItemAction) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemConditional constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      _id: new IDField(),\n      name: new fields.StringField(),\n      default: new fields.BooleanField({ initial: false }),\n      modifiers: new fields.ArrayField(new fields.EmbeddedDataField(ItemConditionalModifier)),\n    };\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.component.ItemAction.getEmbeddedDocument | ItemAction#getEmbeddedDocument()} to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  /**\n   * For supporting modifiers in fromUuid()\n   *\n   * Synced with Foundry v12.331\n   *\n   * @param {string} embeddedName\n   * @param {string} id\n   * @param {object} options\n   * @returns {pf1.components.ItemConditionalModifier|undefined}\n   */\n  getEmbeddedDocument(embeddedName, id, options = {}) {\n    let result;\n    switch (embeddedName) {\n      case \"Modifier\": {\n        result = this.modifiers?.get(id);\n      }\n    }\n\n    if (options.strict) throw new Error(`${embeddedName} id [${id}] does not exist in ${this.uuid}`);\n\n    return result;\n  }\n\n  _configure(options) {\n    super._configure(options);\n\n    // Following prevent these definitions being lost on model reset()\n    Object.defineProperties(this, {\n      // Modifiers collection cache to avoid conflicts with stored array\n      _modifiers: {\n        value: new Collection(),\n        writable: false,\n        enumerable: false,\n      },\n    });\n  }\n\n  /**\n   * @internal\n   */\n  prepareData() {\n    this._prepareModifiers();\n  }\n\n  /**\n   * @internal\n   */\n  _prepareModifiers() {\n    /** @type {Collection<ItemConditionalModifier>} */\n    const collection = this._modifiers;\n    const prior = new Collection(collection.entries());\n    collection.clear(); // TODO: Remove specific entries after the loop instead of full clear here\n\n    // HACK: this causes modifier datamodels to be re-initialized\n    // It would be better for the system if we didn't make this persistent reference guarantee\n    for (const mod of this.modifiers) {\n      let modifier = null;\n      if (prior && prior.has(mod.id)) {\n        modifier = prior.get(mod.id);\n        if (mod !== modifier) modifier.replaceSource(mod._source);\n      } else {\n        modifier = mod;\n      }\n\n      collection.set(modifier.id, modifier);\n    }\n\n    this.modifiers = collection;\n  }\n\n  /**\n   * Create new conditional\n   *\n   * @param {object|object[]} data - Data to create conditional(s) from.\n   * @param {object} context - Context data\n   * @param {ItemAction} context.parent Parent action to add the conditional to.\n   * @throws {Error} - If no valid parent is defined.\n   * @returns {Proimise<ItemConditional[]>} - Created conditionals\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (!(parent instanceof pf1.components.ItemAction))\n      throw new Error(\"Can not create conditionals without parent ItemAction\");\n\n    if (!Array.isArray(data)) data = [data];\n\n    // Prepare data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n    const conditionals = parent.toObject().conditionals || [];\n    conditionals.push(...data);\n\n    // Update parent\n    await parent.update({ conditionals });\n\n    // Return results\n    return data.map((o) => parent.conditionals.get(o._id));\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemConditional.defaultData has been deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.schema.getInitialValue();\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Update conditional\n   *\n   * @param {object} updateData\n   * @param {object} options\n   */\n  async update(updateData, options = {}) {\n    if (options.dryRun) return this.updateSource(updateData, { dryRun: true });\n\n    this.updateSource(updateData);\n\n    const conditionals = this.parent.conditionals.map((t) => t.toObject());\n    await this.parent.update({ conditionals });\n  }\n\n  /**\n   * Delete conditional\n   */\n  async delete() {\n    const conditionals = this.parent.conditionals.map((t) => t.toObject());\n    conditionals.findSplice((c) => c._id === this.id);\n    return this.parent.update({ conditionals });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  static pruneData(data) {\n    if (!data.default) delete data.default;\n    if (!(data.modifiers?.length > 0)) delete data.modifiers;\n    else {\n      for (const m of data.modifiers) {\n        ItemConditionalModifier.pruneData(m);\n      }\n    }\n  }\n}\n\n/**\n * Individual modifier in a conditional bundle.\n */\nexport class ItemConditionalModifier extends ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel)) {\n  /**\n   * Metadata mimicking Foundry documents\n   *\n   * @internal\n   * @readonly\n   */\n  static metadata = Object.freeze({\n    name: \"Modifier\",\n    label: \"Modifier\", // TODO: i18n\n  });\n\n  /**\n   * @param {object} data\n   * @param {object} options\n   */\n  constructor(data, options) {\n    if (options instanceof pf1.components.ItemAction) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemConditionalModifier constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      _id: new IDField(),\n      formula: new FormulaField(),\n      target: new fields.StringField(), // modifier on what?\n      subTarget: new fields.StringField(), // which attack is this targeting?\n      type: new fields.StringField({ initial: \"untyped\" }), // Bonus type\n      damageType: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n      critical: new fields.StringField({ initial: undefined }), // Does this target normal or critical confirm? or which kind of damage is this in relation to crits?\n    };\n  }\n\n  /**\n   * Retrieve UUID\n   *\n   * Relies on {@link pf1.component.ItemConditional.getEmbeddedDocument | ItemConditional#getEmbeddedDocument()} to function with fromUuid() and similar functions.\n   *\n   * @type {string}\n   */\n  get uuid() {\n    return this.parent.uuid + `.${this.constructor.metadata.name}.${this.id}`;\n  }\n\n  static migrateData(source) {\n    if (source.damageType && !Array.isArray(source.damageType)) {\n      const custom =\n        source.damageType.custom\n          ?.split(\";\")\n          .map((t) => t?.trim())\n          .filter((t) => !!t) ?? [];\n      const standard = source.damageType.values ?? [];\n      source.damageType = [...standard, ...custom];\n    }\n\n    // Move effect.dc and effect.cl to dc and cl\n    if (source.target === \"effect\") {\n      if ([\"dc\", \"cl\"].includes(source.subTarget)) {\n        source.target = source.subTarget;\n        source.subTarget = undefined;\n      }\n    }\n    // Remove redundant subtarget\n    if ([\"cl\", \"dc\"].includes(source.target)) source.subTarget = undefined;\n    // Move misc.charges to charges\n    if (source.target === \"misc\") {\n      if (source.subTarget === \"charges\") {\n        source.target = source.subTarget;\n        source.subTarget = undefined;\n      }\n    }\n\n    // Initialize defaults for attack and damage modifiers if not present\n    if (source.target === \"damage\") {\n      if (!source.subTarget) source.subTarget = \"allDamage\";\n      if (!source.critical) source.critical = \"normal\";\n    }\n    if (source.target === \"attack\") {\n      if (!source.subTarget) source.subTarget = \"allAttack\";\n      if (!source.critical) source.critical = \"normal\";\n    }\n\n    return super.migrateData(source);\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemConditionalModifier.defaultData has been deprecated with no replacement.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    return this.schema.getInitialValue();\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Part ID string\n   *\n   * @type {string}\n   */\n  get partID() {\n    const parts = [this.target];\n    if (this.subTarget) parts.push(this.subTarget);\n    if (this.critical) parts.push(this.critical);\n    return parts.join(\".\");\n  }\n\n  /**\n   * Create conditional modifier\n   *\n   * @param {object} data - Creation data\n   * @param {object} context - Context data\n   * @param {ItemConditional} context.parent - Parent conditional\n   * @returns {Promise<ItemConditionalModifier[]>} - Created modifiers\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n    if (!(parent instanceof pf1.components.ItemConditional))\n      throw new Error(\"Conditional modifier's parent must be a Conditional\");\n\n    if (!Array.isArray(data)) data = [data];\n\n    const modifiers = parent.toObject().modifiers ?? [];\n\n    // Prepare data\n    data = data.map((dataObj) => new this(dataObj).toObject());\n    modifiers.push(...data);\n\n    // Update parent\n    await parent.update({ modifiers });\n\n    // Return results\n    return data.map((o) => parent.modifiers.get(o._id));\n  }\n\n  /**\n   * Update modifier\n   *\n   * @param {object} updateData\n   * @param {object} [options]\n   * @returns {Promise<ItemAction>} - Updated action\n   */\n  async update(updateData, options = {}) {\n    if (options.dryRun) return this.updateSource(updateData, { dryRun: true });\n\n    this.updateSource(updateData);\n\n    const modifiers = this.parent.modifiers.map((m) => m.toObject());\n    return this.parent.update({ modifiers });\n  }\n\n  /**\n   * Delete this individual modifier.\n   *\n   * @returns {Promise<ItemAction>} - Updated action\n   */\n  async delete() {\n    const modifiers = this.parent.toObject().modifiers ?? [];\n    const idx = modifiers.findIndex((m) => m._id === this.id);\n    if (idx < 0) throw new Error(`Modifier not found in parent ${this.parent.name}`);\n\n    modifiers.splice(idx, 1);\n    return this.parent.update({ modifiers });\n  }\n\n  /**\n   * @internal\n   * @param {object} data\n   */\n  static pruneData(data) {\n    if (!data.type) delete data.type;\n    if (!data.formula) delete data.formula;\n    if (!data.critical || data.critical === \"normal\") delete data.critical;\n    if (!data.target) delete data.target;\n    if (!data.subTarget) delete data.subTarget;\n\n    if (![\"attack\", \"damage\"].includes(data.target)) {\n      delete data.critical;\n    }\n\n    // Damage type is only meaningful with damage target\n    if (data.target !== \"damage\") delete data.damageType;\n    else {\n      if (data.damageType?.length) {\n        data.damageType = [...new Set(data.damageType)].filter((t) => !!t);\n      }\n      if (!(data.damageType?.length > 0)) delete data.damageType;\n    }\n\n    // These don't use bonus typing\n    if ([\"damage\", \"size\", \"charges\", \"critMult\", \"cl\", \"sl\"].includes(data.target)) {\n      delete data.type;\n    }\n  }\n}\n","import { PreparedModel } from \"@models/abstract/prepared-model.mjs\";\nimport { ReplaceableSourceMixin } from \"@models/mixins/replaceable-source.mjs\";\n\n/**\n * Script Call\n */\nexport class ItemScriptCall extends ReplaceableSourceMixin(PreparedModel) {\n  constructor(data, options) {\n    if (options instanceof foundry.abstract.DataModel) {\n      foundry.utils.logCompatibilityWarning(\"ItemScriptCall second constructor parameter is no longer plain parent.\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      options = { parent: options };\n    }\n    super(data, options);\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        required: true,\n        blank: false,\n        readonly: true,\n        initial: () => foundry.utils.randomID(8),\n      }),\n      name: new fields.StringField({ required: true, initial: () => game.i18n.localize(\"PF1.ScriptCalls.NewName\") }),\n      img: new fields.FilePathField({ required: false, blank: false, categories: [\"IMAGE\"] }),\n      type: new fields.StringField({\n        required: true,\n        blank: false,\n        nullable: false,\n        initial: \"script\",\n        choices: [\"script\", \"macro\"],\n      }),\n      value: new fields.StringField({ required: true, nullable: false, blank: true }),\n      category: new fields.StringField({ required: false }),\n      hidden: new fields.BooleanField({ initial: false, required: false }),\n    };\n  }\n\n  static migrateData(source) {\n    if (source.type == \"macro\") {\n      source.name = \"\";\n      source.img = \"\";\n    }\n\n    return super.migrateData(source);\n  }\n\n  /** @deprecated */\n  get data() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemScriptCall.data is deprecated in favor of directly accessing the data.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n    return this;\n  }\n\n  /** @deprecated */\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\"ItemScriptCall.defaultData is deprecated with no replacement.\", {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    });\n\n    return this.schema.getInitialValue();\n  }\n\n  prepareData() {\n    if (this.type === \"macro\") {\n      const macro = fromUuidSync(this.value);\n      this.name = macro?.name || `${game.i18n.localize(\"PF1.Unknown\")} (${game.i18n.localize(\"DOCUMENT.Macro\")})`;\n      this.img = macro?.img || \"icons/svg/hazard.svg\";\n    }\n  }\n\n  /**\n   * Creates a script call.\n   *\n   * @param {object[]} data - Data to initialize the script call(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the script call within.\n   * @returns {Promise<ItemScriptCall[]>} - The resulting script calls, or an empty array if nothing was created.\n   */\n  static async create(data, context) {\n    const { parent } = context;\n\n    if (!(parent instanceof pf1.documents.item.ItemPF))\n      throw new Error(\"Can not create script calls outside of items.\");\n\n    // Prepare data\n    data = data.map((dataObj) => new ItemScriptCall(dataObj, { parent }).toObject());\n    const newScriptCallData = parent.toObject().system.scriptCalls || [];\n    newScriptCallData.push(...data);\n\n    // TODO: Ensure new script calls don't have ID conflicts\n\n    // Update parent\n    await parent.update({ \"system.scriptCalls\": newScriptCallData });\n\n    // Return results\n    return data.map((o) => parent.scriptCalls.get(o._id));\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {boolean} */\n  get hide() {\n    return this.hidden && !game.user.isGM;\n  }\n\n  /**\n   * Get macro delegate for executing this script call with.\n   *\n   * @returns {Promise<Macro>} - Actual macro or its delegate\n   */\n  async getDelegate() {\n    if (this.type === \"script\") {\n      return new Macro({\n        type: \"script\",\n        command: this.value,\n        name: this.name,\n      });\n    } else {\n      return fromUuid(this.value);\n    }\n  }\n\n  async update(data, options = {}) {\n    if (this.parent != null) {\n      const idx = this.parent.system.scriptCalls.findIndex((o) => o._id === this.id);\n      if (idx >= 0) {\n        data = Object.entries(data).reduce((cur, o) => {\n          cur[`system.scriptCalls.${idx}.${o[0]}`] = o[1];\n          return cur;\n        }, {});\n        return this.parent.update(data, options);\n      }\n    }\n  }\n\n  // Opens up the editor for this script call\n  async edit({ editable = true } = {}) {\n    // For Macros\n    if (this.type === \"macro\") {\n      const macro = await fromUuid(this.value);\n      if (!macro) return void ui.notifications.error(game.i18n.format(\"PF1.Error.NoMacroID\", { id: this.value }));\n\n      macro.sheet.render(true, { focus: true, editable });\n    }\n    // For regular script calls\n    else {\n      const scriptEditor = new pf1.applications.ScriptEditor({\n        command: this.value,\n        name: this.name,\n        parent: this.parent,\n        script: this.id,\n        scriptCall: true,\n      });\n      scriptEditor.render(true);\n\n      const result = await scriptEditor.awaitResult();\n      if (result) {\n        return this.update({ value: result.command, name: result.name });\n      }\n    }\n  }\n\n  /**\n   * Executes the script.\n   *\n   * @param {object} shared - An object passed between script calls, and which is passed back as a result of ItemPF.executeScriptCalls.\n   * @param {object} extraParams - A dictionary containing extra parameters to pass on to the call.\n   * @returns {Promise<*>} - Script return value if any\n   */\n  async execute(shared, extraParams = {}) {\n    // Add variables to the evaluation scope\n    const item = this.parent;\n    const actor = item.actor;\n    const action = shared.action ?? null;\n    const token = actor?.token?.object ?? actor?.getActiveTokens(false, false)[0];\n\n    const scm = await this.getDelegate();\n    if (!scm) return;\n\n    // Create temporary macro for handling execution context and other utility\n    return scm.execute({ item, actor, token, shared, action, ...extraParams });\n  }\n}\n","export class ContextNote extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      text: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n      target: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n    };\n  }\n\n  static migrateData(source) {\n    if (source.subTarget) {\n      // Transfer a special tuple format target\n      if (source.target === \"spell\" && source.subTarget === \"effect\") {\n        source.target = \"spellEffect\";\n      }\n      // Otherwise transfer subtarget to target\n      else {\n        source.target = source.subTarget;\n      }\n    }\n\n    return super.migrateData(source);\n  }\n}\n","/**\n * Convert Distance\n *\n * @example\n * With metric enabled\n * ```hbs\n * {{convertDistance 5}} -> 1.5\n * ```\n * With imperial\n * ```hbs\n * {{convertDistance 9 \"m\"}} -> 30\n * ```\n *\n * @see {@link pf1.utils.convertDistance}\n * @internal\n * @group Handlebars\n * @param {number} value\n * @param {string} [type]\n */\nexport function convertDistance(value, type) {\n  return Number.isFinite(value)\n    ? pf1.utils.convertDistance(value, typeof type === \"string\" ? type : undefined)[0]\n    : value;\n}\n\n/**\n * Action Range\n *\n * @example\n * ```hbs\n * {{actionRange someAction actionRollData}} -> 30 ft\n * ```\n *\n * @group Handlebars\n * @internal\n * @param {pf1.components.ItemAction} action\n * @param {object} rollData\n * @returns {string}\n */\nexport function actionRange(action, rollData) {\n  if (!action?.hasRange) return null;\n\n  const range = action.range.value;\n  const rangeType = action.range.units;\n\n  if (!rangeType) return null;\n  if (rangeType === \"spec\") return null; // Special is its own thing\n\n  rollData ??= action.getRollData();\n\n  let [rng, unit] = pf1.utils.calculateRange(range, rangeType, rollData);\n\n  [rng, unit] = pf1.utils.simplifyRange(rng, unit);\n\n  return game.i18n.format(\"PF1.RangeFormat\", { distance: rng, units: pf1.config.measureUnitsShort[unit] || unit });\n}\n\n/**\n * Action Damage\n *\n * @example\n * ```hbs\n * {{actionDamage someAction}} -> 3d6\n * ```\n * @see {@link pf1.utils.formula.actionDamage}\n * @group Handlebars\n * @internal\n * @param {ItemAction} action - Action\n * @param {object} [_rollData] - Deprecated\n * @param {object} [options] - Additional options\n * @returns {string} - Damage string\n */\nexport function actionDamage(action, _rollData, options) {\n  if (!action.hasDamage) return null;\n  return pf1.utils.formula.actionDamage(action, { simplify: options?.hash?.combine ?? true });\n}\n\n/**\n * Alt numberFormat helper to provide non-fixed point decimals and pretty fractionals\n *\n * @example\n * ```hbs\n * {{numberFormatAlt 5.52 decimals=1}} -> 5.5\n * {{numberFormatAlt 5 decimals=1}} -> 5\n * {{numberFormatAlt 5.5 fraction=true}} -> 5 1/2\n * ```\n * Compare with core helper\n * ```hbs\n * {{numberFormat 5.52 decimals=1}} -> 5.5\n * {{numberFormat 5 decimals=1}} -> 5.0\n * ```\n *\n * @group Handlebars\n * @internal\n * @param {number} number\n * @param {object} [context]\n * @param {object} [context.hash]\n * @param {boolean} [context.hash.fraction] - Format as fractional.\n * @param {number} [context.hash.decimals] - Display up to this many decimals. Has no effect with fractional.\n * @returns {number|string} - Formatted number\n */\nexport function numberFormatAlt(number, { hash } = {}) {\n  if (hash.fraction) return pf1.utils.fractionalToString(number);\n  else return pf1.utils.limitPrecision(number, hash.decimals);\n}\n\n/**\n * Register Handlebars Helpers as part of system initialization\n *\n * @group Handlebars\n * @internal\n */\nexport function register() {\n  const helpers = {\n    convertDistance,\n    actionRange,\n    actionDamage,\n    numberFormatAlt,\n  };\n\n  for (const [id, fn] of Object.entries(helpers)) {\n    if (id in Handlebars.helpers) console.error(`PF1 | Masking \"${id}\" HBS helper`);\n    Handlebars.registerHelper(id, fn);\n  }\n}\n","/**\n * Measure the distance between two pixel coordinates\n * See BaseGrid.measureDistance for more details\n *\n * @deprecated\n * @param segments\n * @param options\n */\nexport function measureDistances(segments, options = {}) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.canvas.measureDistances() is deprecated in favor of canvas.grid.measureDistances() and canvas.grid.measurePath()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n  return canvas.grid.measureDistances(segments, options);\n}\n","import { ItemSelector } from \"module/applications/item-selector.mjs\";\nimport { ActorSelector } from \"module/applications/actor-selector.mjs\";\n\n/**\n * Choose actor from list.\n *\n * This is simplified interface to {@link pf1.applications.ActorSelector}\n *\n * @param {ActorSelectorOptions} options - Selection options\n * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n */\nexport async function getActor(options) {\n  options.document ??= false;\n  return ActorSelector.wait(options);\n}\n\n/**\n * Choose item from actor.\n *\n * This is simplified interface to {@link pf1.applications.ItemSelector}\n *\n * @param {getItemOptions} options - Options\n * @returns {Promise<Item|string|null>} - Chosen item or null.\n */\nexport async function getItem(options = {}) {\n  options.document ??= true;\n\n  if (!options.type && !options.subType && !options.filterFunc && !options.items)\n    throw new Error(\"Insufficient filter rules provided.\");\n\n  options.filterFunc ||= (item) => {\n    return (!options.type || item.type === options.type) && (!options.subType || item.subType === options.subType);\n  };\n\n  if (!options.window) options.window = {};\n\n  // Provide nice basic title\n  if (!options.window.title && !options.filterFunc && options.type) {\n    options.window.title = game.i18n.format(\"PF1.SelectSpecific\", {\n      specifier: options.subType\n        ? pf1.config[`${options.type}Types`]?.[options.subType]\n        : game.i18n.localize(CONFIG.Item.typeLabels[options.type]),\n    });\n  }\n\n  return ItemSelector.wait(options);\n}\n\n/**\n * Query for a number from current user.\n *\n * @example\n * ```js\n * const num = await pf1.utils.dialog.getNumber({\n *   placeholder: \"NaN\",\n *   hint: \"Amazing\",\n *   label: \"Gimme a number\",\n * });\n * ```\n *\n * @param {object} [options={}] Additional options\n * @param {number} [options.min=null] Minimum value\n * @param {number} [options.max=null] Maximum value\n * @param {number} [options.step] Value stepping\n * @param {string} [options.title] Dialog title\n * @param {string} [options.label] A label preceding the number input.\n * @param {string} [options.hint] A hint displayed under the input.\n * @param {number} [options.initial] Initial value\n * @param {string} [options.placeholder] Placeholder value or description.\n * @param {string[]} [options.classes=[]] CSS classes to add.\n * @param {Function} [options.render] Render callback. Passed onto DialogV2.\n * @param {object} [options.dialog={}] Additional dialog options. Merged with the other DialogV2 options.\n * @returns {Promise<number|null>} Provided value or null if dialog was cancelled.\n */\nexport async function getNumber({\n  title,\n  label,\n  hint,\n  initial,\n  placeholder,\n  min,\n  max,\n  step,\n  classes = [],\n  render: renderCallback,\n  dialog: dialogOptions = {},\n} = {}) {\n  const templateData = { value: initial, min, max, step, placeholder, label, hint };\n  const content = await renderTemplate(\"systems/pf1/templates/apps/get-number.hbs\", templateData);\n\n  const options = {\n    window: { title: title || game.i18n.localize(\"PF1.Application.GetNumber.Title\") },\n    classes: [\"pf1-v2\", \"get-number\", ...classes],\n    content,\n    position: {\n      width: 260,\n    },\n    buttons: [\n      {\n        icon: \"fa-solid fa-check\",\n        label: \"PF1.Application.GetNumber.Confirm\",\n        action: \"confirm\",\n        default: true,\n        callback: (event, target, html) => {\n          if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n          return html.querySelector(\"form input[name='number']\").valueAsNumber;\n        },\n      },\n    ],\n    render: (event, html) => {\n      if (html instanceof foundry.applications.api.DialogV2) html = html.element; // v12 & v13 cross-compatibility\n\n      // Select contents of the number input\n      html.querySelector(\"form input[name='number']\").select();\n\n      renderCallback?.(event, html);\n    },\n    close: () => NaN,\n    rejectClose: false,\n  };\n\n  return foundry.applications.api.DialogV2.wait(foundry.utils.mergeObject(options, dialogOptions));\n}\n","/**\n * Split copper currency into multiple currencies favoring the one with highest rates.\n *\n * @param {number} cp - Copper\n * @param {object} [options] - Additional options\n * @param {CoinType[]} [options.omit=[]] - Omit these types from the result. Baseline currency can not be omitted.\n * @param {boolean} [options.pad=true] - Pad return value by including zeroed currencies\n * @param {boolean} [options.standard=true] - If true, no coinage of greater value than the {@link pf1.config.currency.standard standard currency} is included.\n * @returns {Record<CoinType,number>} The various currencies.\n */\nexport function split(cp, { omit = [], standard = true, pad = true } = {}) {\n  const cc = pf1.config.currency;\n\n  const rates = Object.entries(cc.rate)\n    .filter(([key]) => !omit.includes(key))\n    .sort((a, b) => b[1] - a[1]);\n\n  const maxRate = standard ? cc.standardRate : Infinity;\n\n  const currencies = {};\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value != 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[cc.base] = cp;\n  }\n\n  return currencies;\n}\n\n/**\n * Merges provided currencies into specified type.\n *\n * @param {object} currency - Currency object with keys according to {@link pf1.config.currencies}\n * @param {CoinType} [type] - Return coinage, defaults to {@link pf1.config.currency.base baseline currency}.\n * @returns {number} - Merged currency\n */\nexport function merge({ ...currency } = {}, type) {\n  const { rate: rates, base } = pf1.config.currency;\n  type ||= pf1.config.currency.base;\n\n  let copper = 0;\n  for (let [type, value] of Object.entries(currency)) {\n    value ??= 0;\n    if (!Number.isFinite(value)) throw new Error(`Invalid currency value \"${value}\" for type \"${type}\"`);\n    if (value == 0) continue;\n    /** @type {number|undefined} */\n    const rate = rates[type];\n    if (rate) {\n      copper += value * rate;\n    } else {\n      if (type === base) copper += value;\n      else throw new Error(`Invalid currency type: \"${type}\"`);\n    }\n  }\n\n  if (type === base) return copper;\n  return copper / rates[type];\n}\n\n/**\n * Convert given amount of copper to some other currency, excess is placed on less valuable coinage.\n *\n * @param {number} cp - Copper quantity\n * @param {CoinType} [target] - Target unit. Defaults to {@link pf1.config.currency.standard standard currency}.\n * @param {object} [options] - Additional options\n * @param {boolean} [options.pad] - Pad return value by including zeroed currencies\n * @returns {Record<CoinType,number>} - Resulting conversion\n */\nexport function convert(cp, target, { pad = true } = {}) {\n  if (!Number.isFinite(cp) || !(cp >= 0)) throw new Error(`Invalid currency quantity: ${cp}`);\n\n  const cc = pf1.config.currency;\n  target ||= cc.standard;\n\n  if (target !== cc.base && cc.rate[target] === undefined) throw new Error(`Invalid currency type \"${target}\"`);\n\n  const { base, rate } = cc;\n  const rates = Object.entries(rate).sort((a, b) => b[1] - a[1]);\n\n  /** @type {number} */\n  const maxRate = rate[target] ?? 1;\n\n  const currencies = {};\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value !== 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[base] = cp;\n  }\n\n  return currencies;\n}\n","/**\n * @internal\n * @typedef {RollTerm|FormulaPart} AnyTerm\n */\n\n/**\n * Removes flairs from a formula.\n *\n * @param {string} formula Formula\n * @returns {string} Stripped formula\n */\nexport const unflair = (formula) => formula.replace(/\\[[^\\]]*]/g, \"\");\n\n/**\n * Compress basic math and space in produced formula.\n *\n * @param {string} formula - Formula to compress\n * @returns {string} - Compressed formula\n */\nexport const compress = (formula) =>\n  formula\n    .replace(/\\s+/g, \"\") // remove whitespaces\n    .replace(/\\+-/g, \"-\") // + -n = -n\n    .replace(/--/g, \"+\") // - -n = +n\n    .replace(/-\\+/g, \"-\") // - +n = -n\n    .replace(/\\+\\++/g, \"+\"); // + +n = +n\n\n/**\n * @param {AnyTerm} t - Term to test\n * @returns {boolean} - Is deemed simple.\n */\nconst isSimpleTerm = (t) => t instanceof foundry.dice.terms.NumericTerm || t?.simple || false;\n\nclass FormulaPart {\n  /** @type {AnyChunk[]} */\n  terms = [];\n  simple = false;\n\n  constructor(terms = [], simple = false, evaluate = true) {\n    this.terms = terms.filter((t) => !!t);\n    this.simple = simple;\n\n    if (evaluate) this.evaluate();\n  }\n\n  get isDeterministic() {\n    return this.terms.every((t) => t.isDeterministic);\n  }\n\n  #formula;\n  get formula() {\n    if (this.#formula) return this.#formula;\n\n    const f = this.terms\n      .map((t) => {\n        if (t.isDeterministic) return `${t.total}`;\n        else if (t instanceof foundry.dice.terms.FunctionTerm) return `${t.simplify || t.expression}`;\n        // Dice eat up prefix parentheticals in v12\n        else if (\n          t instanceof foundry.dice.terms.Die &&\n          t._number instanceof Roll &&\n          t._number.terms.length == 1 &&\n          t._number.terms[0] instanceof foundry.dice.terms.ParentheticalTerm\n        ) {\n          // Simplify prefix parenthetical part of (X)dY\n          const formula = t._number.terms[0].roll.formula;\n          const iformula = simplify(formula);\n          t._number = new Roll.defaultImplementation(iformula).evaluateSync({ maximize: true });\n          return t.formula;\n        } else {\n          return t.formula;\n        }\n      })\n      .join(\"\");\n\n    const roll = new Roll.defaultImplementation(f);\n    if (roll.isDeterministic) this.#formula = roll.evaluateSync({ minimize: true }).total.toString();\n    else this.#formula = f;\n\n    return this.#formula;\n  }\n\n  _total = null;\n\n  evaluate() {\n    const roll = new Roll.defaultImplementation(this.formula).evaluateSync({ minimize: true });\n    this._total = roll.total;\n  }\n\n  get total() {\n    if (this._total === null) {\n      console.error(\"Must be evaluated first!\", this);\n      throw new Error(\"Must be evaluated first!\");\n    }\n    return this._total;\n  }\n}\n\n/**\n * Combine [\"-\", term] into single {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to handle\n * @returns {Array<AnyTerm>} - New terms\n */\nfunction negativeTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.OperatorTerm && term.operator === \"-\") {\n      // Add preceding + if operators are fully consumed\n      if (!(nterms.at(-1) instanceof foundry.dice.terms.OperatorTerm)) {\n        const nt = new foundry.dice.terms.OperatorTerm({ operator: \"+\" });\n        nt._evaluated = true;\n        nterms.push(nt);\n      }\n      nterms.push(new FormulaPart([term, terms.shift()], true));\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n *\n * @param {AnyTerm[]} terms - Terms to handle\n * @returns {Array<AnyTerm>} - Reduced terms\n */\nfunction stringTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.StringTerm) {\n      // Partial dice terms combine left\n      if (/^d\\d/.test(term.expression)) {\n        nterms.push(new FormulaPart([nterms.pop(), term]));\n      }\n      // Rest combine right\n      else {\n        nterms.push(new FormulaPart([term, terms.shift()]));\n      }\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n * Combine [term, operator, term] cases into singular {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to combine\n * @param {string[]} operators - Operators to look for\n * @param {boolean} simpleOnly - Only combine simple terms\n * @returns {AnyTerm[]} - Product\n */\nfunction triTermOps(terms, operators, simpleOnly = false) {\n  const eterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof foundry.dice.terms.OperatorTerm && operators.includes(term.operator)) {\n      // Only combine simple terms\n      if (simpleOnly && !(isSimpleTerm(eterms.at(-1)) && isSimpleTerm(terms[0]))) {\n        // Fall through\n      }\n      // Combine all\n      else {\n        const left = eterms.pop(),\n          right = terms.shift();\n        eterms.push(new FormulaPart([left, term, right], isSimpleTerm(left) && isSimpleTerm(right)));\n        continue;\n      }\n    }\n    eterms.push(term);\n  }\n\n  return eterms;\n}\n\n/**\n * Replace 0dX with 0\n *\n * Alters terms in-place.\n *\n * @param {foundry.dice.terms.RollTerm[]} terms - Term array\n * @returns {foundry.dice.terms.RollTerm[]} - Same term array as it was given.\n */\nfunction replaceZeroDice(terms) {\n  for (let i = 0; i < terms.length; i++) {\n    const term = terms[i];\n    if (term instanceof foundry.dice.terms.Die && term.number === 0) {\n      terms.splice(i, 1, foundry.dice.terms.RollTerm.fromData({ number: 0, class: \"NumericTerm\", _evaluated: true }));\n    }\n  }\n\n  return terms;\n}\n\n/**\n * Simplifies formula to very basic level.\n *\n * @param {string} formula - Formula\n * @param {object} [rollData={}] - Roll data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict] - Attempt to return something even slightly valid even with bad formulas\n * @returns {string} - Simpler formula\n * @throws {Error} - On invalid formula\n */\nexport function simplify(formula, rollData = {}, { strict = true } = {}) {\n  formula = compress(Roll.replaceFormulaData(unflair(formula), rollData, { missing: 0 }));\n\n  // Produce nicer formula\n  formula = Roll.defaultImplementation\n    .parse(formula)\n    .map((t) => {\n      if (t instanceof foundry.dice.terms.ParentheticalTerm) {\n        if (t.isDeterministic) {\n          // Parenthetical term doesn't have separate evaluate calls yet\n          t.evaluate({ minimize: true });\n          const v = t.total;\n          return `${v}`;\n        } else {\n          const iformula = simplify(t.roll.formula);\n          const isSingleTerm = Roll.defaultImplementation.parse(iformula).length === 1;\n          if (isSingleTerm) return iformula;\n          else return `(${iformula})`;\n        }\n      }\n      return t.formula;\n    })\n    .join(\"\");\n\n  const roll = new Roll.defaultImplementation(formula);\n\n  // Evaluate\n  try {\n    roll.evaluateSync({ minimize: true });\n  } catch (err) {\n    if (strict) throw err;\n    else return compress(formula);\n  }\n\n  // Old evaluation, fails with parenthetical terms followed by d6 or the like\n  //terms.forEach((term) => term.evaluateSync({ minimize: true }));\n  let terms = replaceZeroDice(roll.terms);\n\n  // Negatives (combine - with the following term)\n  terms = negativeTerms(terms);\n\n  // PEMDAS\n  // Foundry doesn't support juxtaposition so it's not handled here\n\n  // Exponents\n  terms = triTermOps(terms, [\"**\"]);\n  // Multiply/Divide\n  terms = triTermOps(terms, [\"/\", \"*\"]);\n  // Conditionals\n  terms = triTermOps(terms, [\"==\", \"===\", \">\", \">=\", \"<\", \"<=\", \"!=\", \"!==\"]);\n  // Plus/Minus\n  terms = triTermOps(terms, [\"+\", \"-\"], true);\n  // String terms\n  terms = stringTerms(terms);\n\n  // Make final pass\n  const final = new FormulaPart(terms, undefined, false);\n\n  return final.formula.replace(/ \\+ 0\\b/g, \"\");\n}\n\n/**\n * Get action's damage formula.\n *\n * @internal\n * @param {ItemAction} action - Action\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simplify] - Simplify and compress the resulting formula before returning.\n * @param {boolean} [options.strict] - Strict option to pass to {@link pf1.utils.formula.simplify simplify}.\n * @returns {string} - Damage string\n */\nexport function actionDamage(action, { simplify = true, strict = true } = {}) {\n  const actor = action.actor,\n    item = action.item,\n    actorData = actor?.system;\n\n  const parts = [];\n\n  const lazy = {\n    get rollData() {\n      this._cache ??= action.getRollData();\n      return this._cache;\n    },\n  };\n\n  const handleFormula = (formula, change) => {\n    try {\n      switch (typeof formula) {\n        case \"string\": {\n          // Ensure @item.level and similar gets parsed correctly\n          const rd = formula.indexOf(\"@\") >= 0 ? (change?.parent?.getRollData() ?? lazy.rollData) : {};\n          if (formula != 0) {\n            const newformula = pf1.utils.formula.simplify(formula, rd, { strict });\n            if (newformula != 0) parts.push(newformula);\n          }\n          break;\n        }\n        case \"number\":\n          if (formula != 0) parts.push(`${formula}`);\n          break;\n      }\n    } catch (err) {\n      console.error(`Action damage formula parsing error with \"${formula}\"`, err, \"\\n\", { action, change });\n      parts.push(\"NaN\");\n    }\n  };\n\n  const handleParts = (parts) => parts.forEach(({ formula }) => handleFormula(formula));\n\n  // Normal damage parts\n  handleParts(action.damage.parts);\n\n  const isNatural = action.item.subType === \"natural\";\n\n  // Include ability score only if the string isn't too long yet\n  const dmgAbl = action.ability.damage;\n  if (dmgAbl) {\n    const ablMax = action.ability?.max ?? Infinity;\n    const dmgAblBaseMod = Math.min(actorData?.abilities?.[dmgAbl]?.mod ?? 0, ablMax);\n    const held = action.held || item?.system.held || \"1h\";\n    let ablDmgMult =\n      action.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    if (isNatural && !(action.naturalAttack?.primary ?? true)) {\n      ablDmgMult = action.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n    if (dmgAblMod != 0) parts.push(dmgAblMod);\n  }\n\n  // Include damage parts that don't happen on crits\n  handleParts(action.damage.nonCritParts);\n\n  // Include general sources. Item enhancement bonus is among these.\n  action.allDamageSources.forEach((s) => handleFormula(s.formula, s));\n\n  // Something probably went wrong\n  // Early exit from invalid formulas\n  if (parts.length === 0 || parts.some((p) => p === \"NaN\")) {\n    console.warn(\"Action damage resulted in invalid formula:\", parts.join(\" + \"), action);\n    return \"NaN\";\n  }\n\n  const semiFinal = pf1.utils.formula.compress(parts.join(\"+\"));\n  if (!simplify) return semiFinal;\n\n  // Simplification turns 1d12+1d8+6-8+3-2 into 1d12+1d8-1\n  try {\n    const rollData = semiFinal.indexOf(\"@\") >= 0 ? lazy.rollData : undefined;\n    const final = pf1.utils.formula.simplify(semiFinal, rollData, { strict });\n    return pf1.utils.formula.compress(final);\n  } catch (err) {\n    console.error(\"Invalid action damage formula:\", parts.join(\" + \"), action, err);\n    return \"NaN\";\n  }\n}\n","/**\n * Returns the result of a roll of die, which changes based on different sizes.\n *\n * Applies size change damage progression as per Paizo's FAQ entry for it.\n *\n * @see https://paizo.com/paizo/faq/v5748nruor1fm#v5748eaic9t3f\n *\n * @param {number} origCount - The original number of die to roll.\n * @param {number} origSides - The original number of sides per die to roll.\n * @param {string|number} [targetSize=\"M\"] - The target size to change the die to.\n *   Can be a string of values \"F\", \"D\", \"T\", \"S\", \"M\", \"L\", \"H\", \"G\" or \"C\" for the different sizes.\n *   Can also be a number in the range of 0 to 8, where 4 is Medium.\n * @param {string|number} [initialSize=\"M\"] - The initial size of the creature. See targetSize above.\n * @returns {Die[]|NumericTerm[]} The resulting roll.\n */\nexport function sizeRoll(origCount, origSides, targetSize = \"M\", initialSize = \"M\") {\n  // Return NaN from invalid input\n  if (!Number.isFinite(origCount) || !Number.isFinite(origSides)) {\n    return [new foundry.dice.terms.NumericTerm({ number: NaN })];\n  }\n\n  const _getSizeIndex = (size) => {\n    if (typeof size === \"string\") return Object.values(pf1.config.sizeChart).indexOf(size.toUpperCase());\n    return size;\n  };\n\n  targetSize = _getSizeIndex(targetSize);\n  initialSize = _getSizeIndex(initialSize);\n\n  // Do no conversion if no size change is occurring\n  if (targetSize === initialSize) {\n    // Special case for 1d1\n    if (origCount === 1 && origSides === 1) return [new foundry.dice.terms.NumericTerm({ number: 1 })];\n    return [new foundry.dice.terms.Die({ number: origCount, faces: origSides })];\n  }\n\n  // Special rules\n  // \"If the die type is not referenced on this chart\"\n  if (origCount > 1) {\n    // D10\n    if (origSides === 10) {\n      if (targetSize < initialSize) {\n        initialSize--;\n      } else {\n        origCount *= 2;\n        initialSize++;\n      }\n      origSides = 8;\n    }\n    // D4\n    else if (origSides === 4) {\n      // 2d4=1d8, 3d4=2d6, 4d4=2d8, 5d4=3d6, 6d4=3d8, etc...\n      origSides = origCount % 2 == 0 ? 8 : 6;\n      origCount = Math.floor((origCount + 1) / 2);\n    }\n  }\n\n  // D12\n  // Each d12 counts as 2d6\n  if (origSides === 12) {\n    origCount *= 2;\n    origSides = 6;\n  }\n\n  // Get initial die type\n  let currentDie = `${origCount}d${origSides}`;\n  const c = pf1.config.sizeDie;\n\n  // \"If the exact number of original dice is not found on this chart...\"\n  if (c.indexOf(currentDie) === -1 && [6, 8].includes(origSides)) {\n    // Xd6: \"find the next lowest number of d6 on the chart and use that number of d8 as the original damage value\"\n    let shifted;\n    const fc = c.map((d) => d.split(\"d\").map((n) => Number(n)));\n    if (origSides === 6) {\n      shifted = fc.filter(([c, s]) => c < origCount && s === origSides).at(-1);\n    }\n    // Xd8: \"find the next highest number of d8 on the chart and use that number of d6 as the original damage value\"\n    else if (origSides === 8) {\n      shifted = fc.filter(([c, s]) => c > origCount && s === origSides).at(0);\n    } else {\n      // Paizo has not provided instructions how to resolve this\n    }\n\n    if (shifted) {\n      const [count, sides] = shifted;\n      // Swap d6 to d8 and vice versa\n      const newSides = sides === 6 ? 8 : 6;\n      currentDie = `${count}d${newSides}`;\n    }\n  }\n\n  // Pick an index from the chart\n  let index = c.indexOf(currentDie);\n  if (index === -1 && currentDie === \"1d1\") index = 0;\n  let formula = currentDie;\n  // If found, shift size\n  if (index >= 0) {\n    const d6Index = c.indexOf(\"1d6\");\n    const d8Index = c.indexOf(\"1d8\");\n    let sizeOffset = initialSize - targetSize;\n    let curSize = initialSize;\n\n    // When decreasing in size (e.g. from medium to small)\n    while (sizeOffset > 0) {\n      if (curSize <= 4 || index <= d8Index) {\n        index--;\n        sizeOffset--;\n        curSize--;\n      } else {\n        index -= 2;\n        sizeOffset--;\n        curSize--;\n      }\n    }\n    // When increasing in size (e.g. from medium to large)\n    while (sizeOffset < 0) {\n      if (curSize <= 3 || index <= d6Index) {\n        index++;\n        sizeOffset++;\n        curSize++;\n      } else {\n        index += 2;\n        sizeOffset++;\n        curSize++;\n      }\n    }\n\n    index = Math.max(0, Math.min(c.length - 1, index));\n    formula = c[index];\n  }\n\n  if (index === -1) {\n    ui.notifications.warn(game.i18n.format(\"PF1.Warning.NoSizeDie\", { fallback: currentDie, formula }));\n  }\n\n  const [number, faces] = formula.split(\"d\").map((n) => parseInt(n));\n  if (!faces || (number === 1 && faces === 1)) {\n    return [new foundry.dice.terms.NumericTerm({ number })];\n  }\n  return [new foundry.dice.terms.Die({ number, faces })];\n}\n\n/**\n * `sizeReach()` roll function handler.\n *\n * Return reach information for defined size and stature.\n *\n * @param {string|number} [size=\"M\"] {@link pf1.config.sizeChart} key or offset\n * @param {boolean} [reach=false] Reach weapon\n * @param {\"tall\"|\"long\"} [stature=\"tall\"] Character stature\n * @returns {number} -\n */\nexport const sizeReach = (size = \"M\", reach = false, stature = \"tall\") => {\n  if (typeof size === \"number\") size = Object.values(pf1.config.sizeChart)[size];\n  size = Object.entries(pf1.config.sizeChart).find((o) => o[1] === size)[0];\n\n  return pf1.documents.actor.ActorPF.getReach(size, stature)[reach ? \"reach\" : \"melee\"];\n};\n\n/**\n * `sizeRoll()` roll function handler.\n *\n * @internal\n * @param {number} count - Number of dice\n * @param {number} sides - Number of sides\n * @param {number|string} target - Target size\n * @param {number|string} initial - Initial size\n * @returns {number} - Ignore. Placeholder number.\n */\nfunction sizeRollFn(count, sides, target, initial) {\n  /** @type {Die[]|NumericTerm[]} */\n  const [rt] = sizeRoll(count, sides, target, initial);\n\n  this.terms.push(rt.formula);\n\n  if (rt instanceof foundry.dice.terms.Die) {\n    const roll = Roll.defaultImplementation.fromTerms([rt]);\n    roll.options.final = true;\n    this.rolls.push(roll);\n    return 0; // The roll can not be evaluated here due to lacking eval opts.\n  }\n  // NumericTerm\n  else {\n    return rt.number;\n  }\n}\n\n/**\n * `if-else` roll function\n *\n * Syntax:\n * ifelse(condition, if-true, if-else)\n *\n * @example\n * ```txt\n * ifelse(@powerAttackPenalty, 4, 0)\n * ```\n *\n * @param {*} condition - Condition\n * @param {*} ifTrue - Result if condition is true\n * @param {*} ifFalse - Result if condition is false\n * @returns {number} - Result\n */\nfunction ifelse(condition, ifTrue, ifFalse) {\n  return condition ? ifTrue : ifFalse;\n}\n\n/**\n * `if` roll function\n *\n * Alias for ifelse() with last parameter defaulting to 0.\n *\n * @param {*} condition - Condition\n * @param {*} ifTrue - Result if condition is true\n * @returns {number} - Result\n */\nfunction _if(condition, ifTrue) {\n  return ifelse(condition, ifTrue, 0);\n}\n\n/**\n * `lookup` roll function\n *\n * Syntax:\n * lookup(condition, fallback, ...results)\n *\n * @example\n * ```txt\n * lookup(1d4, 0, 4, 3, 2, 1)\n * lookup(@cl, 0, 3, 2, 1)\n * ```\n *\n * @param {number} condition - Condition\n * @param {number} fallback - Fallback if the condition goes out of range\n * @param  {...any} results - Potential results\n * @returns {number} - Result\n */\nfunction lookup(condition, fallback, ...results) {\n  // TODO: mark die terms disabled that are not in the end result\n  return results[condition - 1] ?? fallback;\n}\n\n/**\n * Roll functions\n *\n * @example\n * ```js\n * eq(a,b) // equal (a === b)\n * ne(a,b) // not equal (a !== b)\n * lt(a,b) // less than (a < b)\n * lte(a,b) // less than or equal (a <= b)\n * gt(a,b) // greater than (a > b)\n * gte(a,b) // greater than or equal (a >= b)\n * and(a, b, ...) // all true\n * or(a, b, ...) // some true\n * xor(a, b, ...) // one true\n * not(a) // not (!a)\n * ```\n */\nexport const functions = {\n  sizeRoll: sizeRollFn,\n  sizeReach,\n  lookup,\n  ifelse,\n  if: _if,\n  eq: (a, b) => (a === b ? 1 : 0),\n  ne: (a, b) => (a !== b ? 1 : 0),\n  lt: (a, b) => (a < b ? 1 : 0),\n  lte: (a, b) => (a <= b ? 1 : 0),\n  gt: (a, b) => (a > b ? 1 : 0),\n  gte: (a, b) => (a >= b ? 1 : 0),\n  and: (...args) => (args.every((a) => !!a) ? 1 : 0),\n  or: (...args) => (args.some((a) => !!a) ? 1 : 0),\n  xor: (...args) => (args.filter((a) => !!a).length == 1 ? 1 : 0),\n  not: (a) => !a,\n};\n","/**\n * Initialize `CONFIG.statusEffects`\n *\n * @returns {Array<object>} - Status effects array\n */\nexport function getConditions() {\n  const core = CONFIG.statusEffects.filter((c) => c.id !== \"dead\");\n  let sys = pf1.registry.conditions.map((condition) => {\n    const status = condition.toStatusEffect();\n\n    // Copy of Foundry's deprecation code\n    for (const [oldKey, newKey] of Object.entries({ label: \"name\", icon: \"img\" })) {\n      const msg = `StatusEffectConfig#${oldKey} has been deprecated in favor of StatusEffectConfig#${newKey}`;\n      Object.defineProperty(status, oldKey, {\n        get() {\n          foundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n          return this[newKey];\n        },\n        set(value) {\n          foundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n          this[newKey] = value;\n        },\n        enumerable: false,\n        configurable: true,\n      });\n    }\n\n    return status;\n  });\n\n  if (game.settings.get(\"pf1\", \"coreEffects\")) sys.push(...core);\n\n  sys.sort((a, b) => a.name.localeCompare(b.name));\n\n  const deadCond = sys.findSplice((c) => c.id === \"dead\");\n  sys = [deadCond, ...sys];\n\n  return sys;\n}\n","/**\n * Add static helper data to roll data.\n *\n * Static data:\n * - `@step`: 5 (represents single step which is always 5 internally, even if it can be 1.5m in the final result)\n *\n * @param {object} rollData - Roll data to modify\n */\nexport function addStatic(rollData) {\n  rollData.step = 5;\n}\n","/**\n * Convert string array into joined string according to current language.\n *\n * @param {Array<string>} strings - Array of strings to join\n * @param {\"c\"|\"d\"|\"u\"} type - conjunction = and, disjunction = or, unit = neither. Only the first letter matters.\n * @param {boolean} short - If true, effectively same as type being set to \"u\"\n * @returns {string} - Formatted string of all traits.\n */\nexport function join(strings, type = \"u\", short = true) {\n  type = {\n    c: \"conjunction\",\n    d: \"disjunction\",\n    u: \"unit\",\n  }[type[0]];\n\n  return new Intl.ListFormat(game.i18n.lang, { style: short ? \"short\" : \"long\", type }).format(strings);\n}\n\nexport const numberFormat = new Intl.NumberFormat(undefined).format;\n","/**\n * Fetch mapping of class identifier to class name.\n *\n * @returns {Record<string,string>}\n */\nexport async function getClassIDMap() {\n  if (this.classIDMap) return this.classIDMap;\n\n  const packTypePriority = {\n    world: 4_000,\n    module: 3_000,\n    system: 2_000,\n  };\n\n  // Sort packs by above criteria, higher priority last so they override earlier entries\n  let packs = [...game.packs]\n    .map((p) => ({\n      pack: p,\n      visible: p.visible ?? true,\n      disabled: p.config.pf1?.disabled ?? false,\n      sort: packTypePriority[p.metadata.packageType],\n    }))\n    .filter((p) => !p.disabled && p.visible && p.pack.metadata.type === \"Item\")\n    .sort((a, b) => a.sort - b.sort);\n\n  await Promise.all(packs.map((p) => p.pack.getIndex({ fields: [\"system.tag\", \"system.subType\"] })));\n\n  // Only take packs with Just classes, assume first item being class is good enough for this\n  packs = packs.filter((p) => p.pack.index.size > 0 && [...p.pack.index][0]?.type === \"class\");\n\n  const classes = {};\n\n  for (const { pack } of packs) {\n    for (const entry of pack.index) {\n      if (entry.system?.subType && ![\"base\", \"npc\"].includes(entry.system?.subType)) continue;\n\n      const tag = entry.system?.tag;\n      if (!tag) continue;\n\n      classes[tag] = entry.name;\n    }\n  }\n\n  this.classIDMap = classes;\n  return classes;\n}\n","import { NoAutocomplete } from \"@app/mixins/no-autocomplete.mjs\";\n\nconst { HandlebarsApplicationMixin, ApplicationV2 } = foundry.applications.api;\n\n/**\n * Party Rest Configuration Dialog\n */\nexport class PartyRestConfig extends HandlebarsApplicationMixin(NoAutocomplete(ApplicationV2)) {\n  constructor(config, options) {\n    super(options);\n\n    config.hours ??= null;\n    this.restConfig = config;\n\n    this.constructor._prepareActors(config);\n\n    this.constructor._calculateHours(config, config.hours === null);\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    form: {\n      handler: this._onSubmit,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n    classes: [\"pf1-v2\", \"party-rest\", \"standard-form\"],\n    window: {\n      title: \"PF1.Application.XPDistributor.Title\",\n      minimizable: false,\n      resizable: true,\n    },\n    actions: {\n      rest: this._onRest,\n      toggle: this._onToggleCategory,\n      sheet: { handler: this._onOpenSheet, buttons: [2] }, // 2: Context menu\n    },\n    position: {\n      width: 500,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/party-rest.hbs\",\n    },\n    footer: {\n      template: \"templates/generic/form-footer.hbs\",\n    },\n  };\n\n  static _prepareActors(config) {\n    const { longTermCare, restoreHealth, restoreUses, restOptions } = config;\n\n    config.actors = config.actors\n      .map((a) => {\n        if ([\"haunt\", \"vehicle\", \"trap\"].includes(a.type)) return null;\n\n        const conscious = this._isConscious(a);\n        return {\n          name: a.token?.name || a.name,\n          img: a.token?.img || a.prototypeToken?.texture?.src || a.img,\n          uuid: a.uuid,\n          conscious,\n          watch: conscious,\n          options: {\n            ...restOptions,\n            longTermCare,\n            restoreHealth,\n            restoreUses,\n          },\n        };\n      })\n      .filter((a) => !!a);\n  }\n\n  static _isConscious(actor) {\n    /** @type {pf1.applications.settings.HealthConfigModel} */\n    const hpConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorHpConfig = hpConfig.getActorConfig(this.actor);\n\n    const vigor = actorHpConfig.rules.useWoundsAndVigor;\n\n    // TODO: Wounds & Vigor\n    if (vigor) {\n      const hp = actor.system.attributes.wounds;\n      return hp.value >= hp.threshold;\n    }\n    // normal health\n    else {\n      const hp = actor.system.attributes.hp;\n      return hp.value + hp.temp >= 0;\n    }\n  }\n\n  static _calculateHours(config, updateTime = true) {\n    const nowatch = config.watches === \"none\";\n    const duo = config.watches === \"duo\";\n    const solo = !duo;\n\n    // Count watchers and pretend zero watchers results in math related to single person sleeping\n    const active = nowatch ? 1 : Math.max(1, config.actors.filter((a) => a.watch).length);\n\n    const cfg = pf1.config.partyRest[active] ?? Object.values(pf1.config.partyRest).at(-1);\n\n    let hours = config.hours;\n    // Skip time update if it was manually adjusted\n    if (updateTime) {\n      if (solo) hours = cfg.hours;\n      else hours = cfg.double ?? cfg.hours;\n      config.hours = hours;\n    }\n\n    // Set time needed per watch\n    if (active > 1) {\n      const watchTime = Math.clamp(hours, 0, 24);\n      config.watchTime = watchTime / (solo ? active : Math.floor(active / 2));\n    } else {\n      config.watchTime = 0;\n    }\n\n    // Check if double watches are available for this group with this many watchers\n    config.duo = cfg.double ?? false;\n    if (!config.duo && duo) config.watches = \"solo\";\n  }\n\n  get title() {\n    return game.i18n.localize(\"PF1.Application.PartyRest.Title\");\n  }\n\n  /** @override */\n  _prepareContext() {\n    const config = this.restConfig;\n\n    return {\n      id: this.id,\n      ...config,\n      buttons: [\n        {\n          type: \"button\",\n          label: \"PF1.Rest\",\n          icon: \"fa-solid fa-bed\",\n          action: \"rest\",\n        },\n      ],\n    };\n  }\n\n  /**\n   * Toggle rest category for all participants.\n   *\n   * @param {Event} event - Click event\n   * @param {Element} el - Clicked element\n   */\n  static _onToggleCategory(event, el) {\n    const config = this.restConfig;\n\n    const toggle = el.dataset.toggle;\n    const isWatch = toggle === \"watch\";\n    const state = config.actors.some((a) => (isWatch ? !a.watch : !a.options[toggle]));\n    config.actors.forEach((a) => {\n      if (isWatch) a.watch = state;\n      else a.options[toggle] = state;\n    });\n\n    if (isWatch) this.constructor._calculateHours(config);\n\n    this.render();\n  }\n\n  /**\n   * Rest button handler\n   *\n   * @param {Event} event - Click event\n   * @param {Element} _el - Clicked element\n   */\n  static async _onRest(event, _el) {\n    event.pf1NoRender = true;\n\n    // Ensure current state is submitted\n    await this._onSubmitForm(this.options.form, event);\n\n    const config = this.restConfig;\n\n    // Disable inputs\n    const content = this.element.querySelector(\".window-content\");\n    content.classList.add(\"resting\");\n    for (const el of content.querySelectorAll(\"input,button\")) {\n      el.disabled = true;\n    }\n\n    const rv = await this.constructor._performRest(config);\n    if (rv !== false) {\n      ui.notifications.info(\n        game.i18n.format(\"PF1.Application.PartyRest.Rested\", {\n          people: config.actors.length,\n          hours: pf1.utils.limitPrecision(config.hours, 1),\n        })\n      );\n    } else {\n      config.cancelled = true;\n    }\n    this.resolve(config);\n    this.close();\n  }\n\n  /**\n   * Perform rest on each individual actor\n   *\n   * @internal\n   * @param {object} config - Rest configuration\n   * @returns {Promise<boolean|void>} - False if cancelled, nothing otherwise.\n   */\n  static async _performRest(config) {\n    if (Hooks.call(\"pf1PrePartyRest\", config) === false) return false;\n\n    const { actors, hours } = config;\n\n    const promises = [];\n    for (const actorData of actors) {\n      const { restoreHealth, restoreUses, longTermCare, ...options } = actorData.options;\n      const actor = fromUuidSync(actorData.uuid);\n      if (!actor) continue;\n      const p = actor.performRest({ ...options, restoreHealth, restoreDailyUses: restoreUses, longTermCare });\n      promises.push(p);\n    }\n\n    await Promise.allSettled(promises);\n\n    if (hours > 0 && game.user.isGM) await game.time.advance(Math.floor(hours * 3_600));\n\n    Hooks.callAll(\"pf1PartyRest\", config);\n  }\n\n  /**\n   * @param {Event} event - Triggering event\n   * @param {Element} form - Form element\n   * @param {FormDataExtended} formData - Form data\n   */\n  static _onSubmit(event, form, formData) {\n    const config = this.restConfig;\n\n    formData = foundry.utils.expandObject(formData.object);\n    formData.actors = Object.values(formData.actors).map((a, idx) => foundry.utils.mergeObject(config.actors[idx], a));\n    foundry.utils.mergeObject(config, formData);\n\n    this.constructor._calculateHours(config, event.target.name !== \"hours\");\n\n    if (event.pf1NoRender !== true) this.render();\n  }\n\n  /**\n   * @override\n   */\n  close(...args) {\n    super.close(...args);\n    this.resolve(null);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   * @param {Element} target - Target element\n   */\n  static _onOpenSheet(event, target) {\n    fromUuidSync(target.dataset.actorUuid).sheet.render(true);\n  }\n\n  static async quickRest({\n    actors = [],\n    hours,\n    restoreUses = true,\n    restoreHealth = true,\n    longTermCare = true,\n    restOptions = {},\n    watches = \"none\",\n  } = {}) {\n    const config = { actors, hours, restoreUses, restoreHealth, longTermCare, restOptions, watches };\n\n    this._prepareActors(config);\n\n    this._calculateHours(config, hours === undefined);\n\n    await this._performRest(config);\n\n    return config;\n  }\n\n  static async open(options) {\n    return new Promise((resolve) => {\n      const rd = new PartyRestConfig(options);\n      rd.resolve = resolve;\n      rd.render(true, { focus: true });\n    });\n  }\n}\n\n/**\n * Rest Party\n *\n * Time is passed if used by the GM.\n *\n * @param {options} options - Additional options\n * @param {Actor[]} options.actors - Actors to rest\n * @param {boolean} [options.watches=true] - People keep watch shifts.\n * @param {number} [options.hours=null] - How many hours to rest.\n * @param {boolean} [options.restoreHealth] - Restore health\n * @param {boolean} [options.restoreUses] - Restore daily uses\n * @param {boolean} [options.longTermCare] - Apply long term care\n * @param {object} [options.restOptions] - Additional options to pass to {@link ActorPF.performRest}\n * @returns {object|null} - Object with configuration resting was performed with, null if cancelled.\n */\nexport async function rest({\n  actors = [],\n  watches = true,\n  hours = null,\n  restoreHealth = true,\n  restoreUses = true,\n  longTermCare = false,\n  skipDialog = false,\n  restOptions = {},\n} = {}) {\n  actors = actors.filter((a) => a instanceof Actor && a.isOwner);\n  if (actors.length == 0) throw new Error(\"No valid actors chosen to rest\");\n\n  if (typeof watches === \"boolean\") watches = watches ? \"solo\" : \"none\";\n\n  if (skipDialog) {\n    return PartyRestConfig.quickRest({ actors, hours, restoreUses, restoreHealth, longTermCare, restOptions });\n  } else {\n    return PartyRestConfig.open({ actors, watches, hours, restoreUses, restoreHealth, longTermCare, restOptions });\n  }\n}\n","import { RollPF } from \"@dice/roll.mjs\";\n\n/**\n * Creates a tag from a string.\n *\n * @example\n * ```js\n * pf1.utils.createTag(\"Wizard of Oz 2\"); // => \"wizardOfOz2\"\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false}); // => wizardofoz2\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false,allowUpperCase:true}); // => WizardofOz2\n * pf1.utils.createTag(\"d'Artagnan\"); // => dartagnan\n * pf1.utils.createTag(\"d'Artagnan\", {allowUpperCase:true}); // => dArtagnan\n * ```\n *\n * @param {string} str - String to convert\n * @param {object} [options] - Additional options\n * @param {boolean} [options.allowUpperCase=false] - Do not forcibly lowercase everything.\n * @param {boolean} [options.camelCase=true] - Automatic camel case\n * @param {string | Function} [options.replacement=\"\"] - Replacement for disallowed characters.\n * @param {boolean} [options.allowInitialNumbers=false] - If false, number prefix is removed.\n * @param {boolean} [options.allowUnderScore=true] - If false, underscore is removed.\n * @returns {string} - String suitable as a tag\n */\nexport function createTag(\n  str,\n  {\n    allowUpperCase = false,\n    camelCase = true,\n    replacement = \"\",\n    allowInitialNumbers = false,\n    allowUnderScore = true,\n  } = {}\n) {\n  if (!str) return \"\";\n\n  str = str\n    .normalize(\"NFD\") // Normalize\n    .replace(/\\p{Diacritic}/gu, \"\") // Remove diacritics\n    .replace(/[^a-zA-Z0-9_\\s]/g, replacement) // Replace remaining non-latin letters\n    // Camel case and such\n    .split(/\\s+/)\n    .map((s, a) => {\n      if (!allowUpperCase) s = s.toLowerCase();\n      if (a > 0 && camelCase) s = s.substring(0, 1).toUpperCase() + s.substring(1);\n      return s;\n    })\n    .join(\"\");\n\n  if (!allowUnderScore) str = str.replaceAll(\"_\", \"\");\n\n  // Remove number prefix\n  if (!allowInitialNumbers) str = str.replace(/^\\d+/, \"\");\n\n  return str;\n}\n\n/**\n * Turn some fractional numbers into pretty strings.\n *\n * @remarks\n * - Only supports the following fractions: 1/4, 1/3, 1/2, 2/3, 3/4\n *\n * @param {number} n - Number to transform\n * @returns {string} - Representation of the fraction\n */\nexport const fractionalToString = (n) => {\n  const base = Math.floor(n);\n  const f = pf1.utils.limitPrecision(n - base, 3, \"round\");\n  if (f === 0) return `${base}`;\n  const rv = [];\n  if (base !== 0) rv.push(base);\n  if (f === 0.25) rv.push(\"1/4\");\n  else if (f === 0.333) rv.push(\"1/3\");\n  else if (f === 0.5) rv.push(\"1/2\");\n  else if (f === 0.667) rv.push(\"2/3\");\n  else if (f === 0.75) rv.push(\"3/4\");\n  return rv.join(\" \");\n};\n\n/**\n * Challenge Rating helper functions.\n */\nexport class CR {\n  /**\n   * Parse CR string to produce a numeric representation\n   *\n   * Parses 1/8, 1/6, 1/4, 1/3, and 1/2 as exact decimals. Everything else is treated as regular number string and passed through parseFloat().\n   *\n   * @param {string} value - String to transform\n   * @returns {number} - Transformed number\n   */\n  static fromString(value) {\n    if (value === \"1/8\") return 0.125;\n    if (value === \"1/6\") return 0.1625;\n    if (value === \"1/4\") return 0.25;\n    if (value === \"1/3\") return 0.3375;\n    if (value === \"1/2\") return 0.5;\n    return parseFloat(value);\n  }\n\n  /**\n   * Convert number to string representation.\n   *\n   * @param {number} value - Number to transform\n   * @returns {string} - String representation\n   */\n  static fromNumber(value = 0) {\n    if (value === 0.125) return \"1/8\";\n    if (value === 0.1625) return \"1/6\";\n    if (value === 0.25) return \"1/4\";\n    if (value === 0.3375) return \"1/3\";\n    if (value === 0.5) return \"1/2\";\n    if (!Number.isNumeric(value)) return \"0\";\n    return value?.toString() ?? \"\";\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  static getXP(cr) {\n    if (cr < 1.0) return Math.floor(Math.max(400 * cr, 0));\n    return pf1.config.CR_EXP_LEVELS[cr] || null;\n  }\n}\n\n/**\n * Converts feet to what the world is using as a measurement unit.\n *\n * @example\n * With metric enabled\n * ```js\n * pf1.utils.convertDistance(30); // => [9, \"m\"]\n * ```\n *\n * @param {number} value - The value (in feet) to convert.\n * @param {\"ft\"|\"mi\"} type - The original type to convert from. Either 'ft' (feet, default) or 'mi' (miles, in which case the result is in km (metric))\n * @returns {[range:number, unit:string]} An array containing the converted value in index 0 and the new unit key in index 1 (for use in {@link pf1.config.measureUnits}, for example)\n */\nexport const convertDistance = (value, type = \"ft\") => {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round(value * 1.6 * 100) / 100, \"km\"];\n        default:\n          return [Math.round((value / 5) * 1.5 * 100) / 100, \"m\"];\n      }\n    default:\n      if (![\"ft\", \"mi\"].includes(type)) type = \"ft\";\n      return [value, type];\n  }\n};\n\n/**\n * Simplify range value to something more humanly readable but not necessarily precise\n *\n * @param {number} range\n * @param {string} type\n * @returns {[range:number, unit:string]} - Tuple of new range and unit\n */\nexport function simplifyRange(range, type = \"ft\") {\n  switch (type) {\n    case \"km\":\n      if (range < 0.8) return [Math.floor(range * 1_000), \"m\"];\n      break;\n    case \"m\":\n      if (range > 0) {\n        if (range % 1_000 === 0) return [Math.floor(range / 1000), \"km\"];\n        if (range > 800) return [limitPrecision(range / 1000, 2), \"km\"];\n      }\n      break;\n    case \"mi\":\n      if (range < 0.3) return [Math.floor(range * 5_280), \"ft\"];\n      break;\n    case \"ft\":\n      if (range > 2_000) {\n        if (range % 5_280 === 0) {\n          return [Math.floor(range / 5_280), \"mi\"];\n        }\n        return [limitPrecision(range / 5_280, 2), \"mi\"];\n      }\n      break;\n  }\n\n  return [range, type];\n}\n\n/**\n * Converts what the world is using as a measurement unit to feet.\n *\n * @param {number} value - The value (in the world's measurement unit) to convert back.\n * @param {string} type - The target type to convert back to. Either 'ft' (feet, default) or 'mi' (miles, in which case the expected given value should be in km (metric))\n * @returns {number} The resulting value.\n */\nexport const convertDistanceBack = (value, type = \"ft\") => {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round((value / 1.6) * 100) / 100, \"mi\"];\n        default:\n          return [Math.round(((value * 5) / 1.5) * 100) / 100, \"ft\"];\n      }\n    default:\n      return [value, type];\n  }\n};\n\n/**\n * Convert feet or meters distance to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapDistance(30, \"ft\"); // => 9\n * pf1.utils.swapDistance(9, \"m\"); // => 30\n * ```\n * @param {number} value - Feet or meters\n * @param {\"ft\"|\"m\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Feet or meters, opposite of what set type was\n */\nexport function swapDistance(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"ft\":\n      return Math.round(((value * 100) / 5) * 1.5) / 100; // to meters\n    case \"m\":\n      return Math.round(((value * 100) / 1.5) * 5) / 100; // to feet\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Convert pounds or kilograms weight to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapWeight(5, \"kg\"); // => 10\n * pf1.utils.swapWeight(10, \"lbs\"); // => 5\n * ```\n * @param {number} value - Pounds or kilos\n * @param {\"kg\"|\"lbs\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Pounds or kilos, opposite of what set type was\n */\nexport function swapWeight(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"kg\":\n      return value * 2; // to lbs\n    case \"lbs\":\n      return value / 2; // to kg\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Calculate overland speed per hour\n *\n * @see {@link https://www.aonprd.com/Rules.aspx?Name=Movement&Category=Exploration Exploration Movement rules}\n *\n * @example\n * With metric metric enabled\n * ```js\n * overlandSpeed(9); // => {speed:6, unit:'km'}\n * ```\n * With imperial\n * ```js\n * overlandSpeed(40); // => {speed:4, unit:'mi'}\n * ```\n *\n * @param {number} speed - Tactical speed\n * @returns {{speed:number,unit:string}} - Object with overland speed and unit.\n */\nexport function overlandSpeed(speed) {\n  const system = getDistanceSystem();\n  const variant = system === \"metric\" ? game.settings.get(\"pf1\", \"overlandMetricVariant\") : \"default\";\n  const { per, out, unit } = pf1.config.overlandSpeed[system][variant];\n\n  return { speed: (speed / per) * out, unit };\n}\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getDistanceSystem = () => {\n  let system = game.settings.get(\"pf1\", \"distanceUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getWeightSystem = () => {\n  let system = game.settings.get(\"pf1\", \"weightUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @typedef Point\n * @property {number} x X coordinate\n * @param {number} y Y coordinate\n */\n\n/**\n * @typedef MeasureState\n * @param {number} diagonals Number of diagonals passed so far.\n * @param {number} cells Total cells in distance\n */\n\n/**\n * Measure distance between two points.\n *\n * @deprecated\n * @example\n * ```js\n * pf1.utils.measureDistance(token, game.user.targets.first());\n * ```\n * @param {Point} p0 - Start point on canvas\n * @param {Point} p1 - End point on canvas\n * @param {object} [options] - Measuring options.\n * @param {\"5105\"|\"555\"} [options.diagonalRule=\"5105\"] - Used diagonal rule. Defaults to 5/10/5 PF measuring.\n * @param {Ray} [options.ray=null] - Pre-generated ray to use instead of the points.\n * @param {MeasureState} [options.state] - Optional state tracking across multiple measures.\n * @returns {number} - Grid distance between the two points.\n */\nexport const measureDistance = (\n  p0,\n  p1,\n  { ray = null, diagonalRule = \"5105\", state = { diagonals: 0, cells: 0 } } = {}\n) => {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.measureDistance() is deprecated in favor of canvas.grid.measurePath()\",\n    {\n      since: \"PF1 v11\",\n      until: \"PF1 v12\",\n    }\n  );\n\n  // TODO: Optionally adjust start and end point to closest grid\n  ray ??= new Ray(p0, p1);\n  const gs = canvas.dimensions.size,\n    nx = Math.ceil(Math.abs(ray.dx / gs)),\n    ny = Math.ceil(Math.abs(ray.dy / gs));\n\n  // Get the number of straight and diagonal moves\n  const nDiagonal = Math.min(nx, ny),\n    nStraight = Math.abs(ny - nx);\n\n  state.diagonals += nDiagonal;\n\n  let cells = 0;\n  // Standard Pathfinder diagonals: double distance for every odd.\n  if (diagonalRule === \"5105\") {\n    const nd10 = Math.floor(state.diagonals / 2) - Math.floor((state.diagonals - nDiagonal) / 2);\n    cells = nd10 * 2 + (nDiagonal - nd10) + nStraight;\n  }\n  // Equal distance diagonals\n  else cells = nStraight + nDiagonal;\n\n  state.cells += cells;\n  return cells * canvas.dimensions.distance;\n};\n\n/**\n * Converts lbs to what the world is using as a measurement unit.\n *\n * @param {number} value - The value (in lbs) to convert.\n * @returns {number} The converted value. In the case of the metric system, converts to kg.\n */\nexport const convertWeight = (value) => {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n      return value / 2;\n    default:\n      return value;\n  }\n};\n\n/**\n * Converts back to lbs from what the world is using as a measurement unit.\n *\n * @example\n * With metric enabled\n * ```js\n * pf1.utils.convertWeightBack(10); // => 20\n * ```\n * With default imperial\n * ```js\n * pf1.utils.convertWeightBack(10); // => 10\n * ```\n *\n * @param {number} value - The value to convert back to lbs.\n * @returns {number} The converted value. In the case of the metric system, converts from kg.\n */\nexport const convertWeightBack = (value) => {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      return value * 2; // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n    default:\n      return value;\n  }\n};\n\n/**\n * Sort an array in-place using a language-aware comparison function that can sort by a property key.\n * If no property key is provided, the array is sorted directly.\n *\n * @template T\n * @param {T[]} arr The array to sort\n * @param {string} [propertyKey=\"\"] The property key to sort by, if any; can be a dot-separated path\n * @param {object} [sortOptions] - Options affecting the sorting of elements\n * @param {boolean} sortOptions.numeric - Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\n * @param {boolean} sortOptions.ignorePunctuation - Whether punctuation should be ignored.\n * @returns {T[]} The sorted array\n */\nexport const naturalSort = (arr, propertyKey = \"\", { numeric = true, ignorePunctuation = false } = {}) => {\n  const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), { numeric, ignorePunctuation });\n  return arr.sort((a, b) => {\n    const propA = propertyKey ? (propertyKey in a ? a[propertyKey] : foundry.utils.getProperty(a, propertyKey)) : a;\n    const propB = propertyKey ? (propertyKey in b ? b[propertyKey] : foundry.utils.getProperty(b, propertyKey)) : b;\n    return collator.compare(propA, propB);\n  });\n};\n\n/**\n * Opens journal or journal page.\n *\n * Pages are opened in collapsed state.\n *\n * @param {string} uuid - UUID to journal or journal page\n * @param {object} [options={}] - Additional rendering options\n * @returns {JournalEntry|JournalEntryPage|null} - Opened document\n */\nexport async function openJournal(uuid, options = {}) {\n  const journal = await fromUuid(uuid);\n\n  if (journal instanceof JournalEntryPage) {\n    journal.parent.sheet.render(true, {\n      pageId: journal.id,\n      editable: false,\n      collapsed: true,\n      width: 600,\n      height: 700,\n      ...options,\n    });\n  } else {\n    journal.sheet.render(true, { editable: false, ...options });\n  }\n\n  return journal;\n}\n\n/**\n * A simple binary search to be used on sorted arrays\n *\n * @internal\n * @template T\n * @param {T[]} searchArr - Sorted Array to be searched\n * @param {T} el - Element to be compared to array values\n * @param {function(T, T): number} compare_fn - Comparison function to be apply el to every element in ar. Should return an positive/ negative integer or 0 if matching.\n * @returns {number} Index where search is found or negative index indicating where it would be inserted\n */\nexport const binarySearch = (searchArr, el, compare_fn) => {\n  let m = 0,\n    n = searchArr.length - 1;\n  while (m <= n) {\n    const k = (n + m) >> 1,\n      cmp = compare_fn(el, searchArr[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n};\n\n/**\n * Generate permutations of an array. Complexity is O(n!).\n * Should be safe up to 7, though you should probably consider something else if you're reaching that high often.\n *\n * @internal\n * @template T\n * @param {T[]} perm - The Array to be generated upon\n * @returns {Array.<T[]>|false} An Array containing all Array permutations or false if failed.\n */\nfunction uniquePermutations(perm) {\n  perm = perm.map((p) => p.trim()).filter((p) => p?.length > 0);\n\n  if (perm.length > 7) {\n    console.warn(\"Array too large. Not attempting.\", perm);\n    return false;\n  }\n\n  const total = new Set();\n\n  for (let i = 0; i < perm.length; i = i + 1) {\n    const rest = uniquePermutations(perm.slice(0, i).concat(perm.slice(i + 1)));\n\n    if (!rest.length) {\n      total.add([perm[i]]);\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        total.add([perm[i]].concat(rest[j]));\n      }\n    }\n  }\n  return [...total];\n}\n\n/**\n * Searches through compendia quickly using the system generated index caches.\n * Exact matches excluding punctuation and case are prioritized before searching word order permutations.\n *\n * @param {string} searchTerm - The name of the Document being searched for\n * @param {object} [options] - Provides a filter to limit search to specific packs or Document types\n * @param {string[]} [options.packs] - An array of packs to search in\n * @param {\"Actor\"|\"Item\"|\"Scene\"|\"JournalEntry\"|\"Macro\"|\"RollTable\"|\"Playlist\"} [options.type] - A Document type to limit which packs are searched in\n * @param {string} [options.docType] - Document type, such as \"loot\" or \"npc\"\n * @param {boolean} [options.disabled=false] - Include packs disabled for compendium browser.\n * @returns {{pack: CompendiumCollection, index: object}|false} The index and pack containing it or undefined if no match is found\n */\nexport const findInCompendia = (searchTerm, { packs = [], type, docType, disabled = false } = {}) => {\n  if (packs?.length) packs = packs.flatMap((o) => game.packs.get(o) ?? []);\n  else packs = game.packs.filter((o) => !type || o.metadata.type == type);\n  if (!disabled) packs = packs.filter((o) => o.config?.pf1?.disabled !== true);\n\n  searchTerm = searchTerm.toLocaleLowerCase();\n\n  for (const pack of packs) {\n    if (!pack.fuzzyIndex) pack.fuzzyIndex = pf1.utils.internal.sortArrayByName([...pack.index]);\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    const found = binarySearch(filteredIndex, searchTerm, (sp, it) =>\n      sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n    );\n    if (found > -1) {\n      const entry = pack.index.get(filteredIndex[found]._id);\n      return { pack, index: entry };\n    }\n  }\n\n  let searchMutations = uniquePermutations(searchTerm.split(/[, _-]/));\n  if (searchMutations) searchMutations = searchMutations.map((o) => o.join(\" \"));\n  else {\n    // If array is too long, search for just a reversed version and one that pivots around commas/ semicolons\n    searchMutations = [null];\n    searchMutations.push(searchTerm.split(/[ _-]/).reverse().join(\" \"));\n    searchMutations.push(\n      searchTerm\n        .split(/[,;] ?/)\n        .reverse()\n        .flatMap((o) => o.split(\" \"))\n        .join(\" \")\n    );\n  }\n\n  for (const pack of packs) {\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    // Skip first mutation since it is already searched for manually before computing mutations\n    for (let mut = 1; mut < searchMutations.length; mut++) {\n      const found = binarySearch(filteredIndex, searchMutations[mut], (sp, it) =>\n        sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n      );\n      if (found > -1) {\n        const entry = pack.index.get(filteredIndex[found]._id);\n        if (entry) return { pack, index: entry };\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * enrichHTML but with inline rolls not rolled\n *\n * Exists because core devs refused to have it in Foundry itself: https://github.com/foundryvtt/foundryvtt/issues/10557\n *\n * {@inheritDoc TextEditor.enrichHTML}\n *\n * @experimental - This may be removed without warning.\n * @param {string} content HTML content in string format to be enriched.\n * @param {options} [options] Additional options passed to enrichHTML\n * @param {object} [options.rollData] Roll data object\n * @param {boolean} [options.secrets] Display secrets\n * @param {boolean} [options.rolls=false] Roll inline rolls. If false, the roll formula is shown instead as if /r had been used.\n * @param {boolean} [options.documents] Parse content links\n * @returns {string} - Enriched HTML string\n * Synchronized with Foundry VTT v12.331 & v13.339\n */\nexport async function enrichHTMLUnrolled(\n  content,\n  { secrets, documents, links, embeds, rolls = false, rollData, relativeTo } = {}\n) {\n  let pcontent = await TextEditor.enrichHTML(content, {\n    secrets,\n    documents,\n    links,\n    embeds,\n    rolls,\n    rollData,\n    relativeTo,\n  });\n\n  if (rolls !== true) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = pcontent;\n    const text = TextEditor_getTextNodes(html);\n\n    rollData = rollData instanceof Function ? rollData() : rollData || {};\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    await TextEditor_replaceTextContent(text, rgx, (match) => pf1.utils.internal.createInlineFormula(match, rollData));\n\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Re-implementation of TextEditor##getTextNodes() since v13 made it fully private.\n *\n * Needed by {@link enrichHTMLUnrolled}\n *\n * @param {HTMLElement} parent\n * Synced with v13.339\n */\nfunction TextEditor_getTextNodes(parent) {\n  const text = [];\n  const walk = document.createTreeWalker(parent, NodeFilter.SHOW_TEXT);\n  while (walk.nextNode()) text.push(walk.currentNode);\n  return text;\n}\n\n/**\n * Re-implementation of TextEditor##replaceTextContent() since v13 made it fully private.\n *\n * Needed by {@link enrichHTMLUnrolled}\n *\n * @param text\n * @param rgx\n * @param func\n * @param options\n * Synced with v13.339\n */\nasync function TextEditor_replaceTextContent(text, rgx, func, options = {}) {\n  let replaced = false;\n  for (const t of text) {\n    const matches = t.textContent.matchAll(rgx);\n    for (const match of Array.from(matches).reverse()) {\n      let result;\n      try {\n        result = await func(match);\n      } catch (err) {\n        Hooks.onError(\"TextEditor.enrichHTML\", err, { log: \"error\" });\n      }\n      if (result) {\n        TextEditor_replaceTextNode(t, match, result, options);\n        replaced = true;\n      }\n    }\n  }\n  return replaced;\n}\n\n/**\n * Re-implementation of TextEditor##replaceTextNode() since v13 made it fully private.\n *\n * Needed by {@link TextEditor_replaceTextContent}\n *\n * @param text\n * @param match\n * @param replacement\n * @param options\n * @param options.replaceParent\n * Synced with v13.339\n */\nfunction TextEditor_replaceTextNode(text, match, replacement, { replaceParent = false } = {}) {\n  let target = text;\n  if (match.index > 0) target = text.splitText(match.index);\n  if (match[0].length < target.length) target.splitText(match[0].length);\n  const parent = target.parentElement;\n  if (parent.parentElement && parent.childNodes.length < 2 && replaceParent) parent.replaceWith(replacement);\n  else target.replaceWith(replacement);\n}\n\n/**\n * Resolve range formula to numeric value.\n *\n * @param {string} [formula] Range formula. Only used with \"mi\", \"ft\", \"m\", \"km\" and similar types.\n * @param {\"natural\"|\"melee\"|\"touch\"|\"reach\"|\"close\"|\"medium\"|\"long\"|\"mi\"} [type=\"ft\"] Formula type\n * @param {object} [rollData] Roll data for evaluating the formula\n * @returns {number} Range in feet for the defined formula\n */\nexport const calculateRangeFormula = (formula, type = \"ft\", rollData = {}) => {\n  switch (type) {\n    case \"natural\":\n      return rollData.traits?.reach?.natural?.melee ?? 0;\n    case \"melee\":\n    case \"touch\":\n      return rollData.range?.melee ?? 0;\n    case \"reach\":\n      return rollData.range?.reach ?? 0;\n    case \"close\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.close, rollData).total;\n    case \"medium\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.medium, rollData).total;\n    case \"long\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.long, rollData).total;\n    case \"mi\":\n      return RollPF.safeRollSync(formula, rollData).total * 5_280;\n    case \"m\":\n      return (RollPF.safeRollSync(formula, rollData).total / 1.5) * 5;\n    case \"km\":\n      return ((RollPF.safeRollSync(formula, rollData).total * 1_000) / 1.5) * 5;\n    default:\n      return RollPF.safeRollSync(formula, rollData).total;\n  }\n};\n\n/**\n * Calculates range formula and converts it.\n *\n * Wrapper around {@link calculateRangeFormula} and {@link convertDistance}\n *\n * @example\n * Simple example\n * ```js\n * const [range,unit] = calculateRange(\"@level\", \"mi\", { level:2 });\n * // => range:10560, unit:\"ft\"\n * ```\n *\n * @param {string} formula - Range formula\n * @param {string} type - Type fed to calculateRangeFormula\n * @param {object} rollData - Roll data fed to calculateRangeFormula\n * @returns {[range:number, unit:string]} - Range value and unit tuple\n */\nexport function calculateRange(formula, type = \"ft\", rollData = {}) {\n  const value = calculateRangeFormula(formula, type, rollData);\n  return convertDistance(value, \"ft\");\n}\n\n/**\n * Refreshes all actor data and re-renders sheets.\n *\n * @internal\n * @param {object} [options] - Additional options\n * @param {boolean} [options.renderOnly=false] - If false, actors are reset also.\n * @param {boolean} [options.renderForEveryone=false] - Deprecated. If true, other players are told to re-render, too.\n */\nexport function refreshActors({ renderOnly = false, renderForEveryone = false } = {}) {\n  // Reset base actors\n  if (!renderOnly) {\n    game.actors.forEach((a) => a.reset());\n\n    // Reset unlinked actors in all scenes\n    game.scenes.forEach((scene) =>\n      scene.tokens\n        .filter((t) => t.actor && !t.isLinked)\n        .map((t) => t.actor)\n        .forEach((a) => a.reset())\n    );\n  }\n\n  // Render system sheets. Doesn't matter if this renders more than necessary\n  pf1.utils.renderApplications({ systemOnly: true });\n\n  if (renderForEveryone) {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.utils.refreshActors() renderForEveryone option is deprecated with no replacement.\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n\n    game.socket.emit(\"pf1\", \"refreshActorSheets\");\n  }\n}\n\n/**\n * Re-render all open applications. Optionally limiting to just the the system apps.\n *\n * @param {object} [options] - Additional options\n * @param {boolean} [options.systemOnly=false] - Render only system apps.\n * @param {boolean} [options.force] - Force render\n */\nexport async function renderApplications({ systemOnly = false, force } = {}) {\n  const applications = [];\n  for (const app of Object.values(ui.windows)) {\n    if (systemOnly && !app.options.classes.includes(\"pf1\")) continue;\n    applications.push(app);\n  }\n  for (const app of foundry.applications.instances.values()) {\n    if (systemOnly && !app.options.classes.includes(\"pf1-v2\")) continue;\n    applications.push(app);\n  }\n\n  applications.sort((a, b) => a.position.zIndex - b.position.zIndex);\n\n  for (const app of applications) {\n    if (app.minimized) continue;\n    app.render(force, { zIndex: app.position.zIndex });\n  }\n\n  console.debug(\"PF1 |\", applications.length, \"application(s) re-rendered\");\n}\n\n/**\n * Refresh all actor, item and action sheets.\n *\n * @internal\n * @param {object} [options] Additional options\n * @param {boolean} [options.reset=true] Reset underlying document.\n * @param {boolean} [options.actor] Include actor sheets\n * @param {boolean} [options.item] Include item sheets\n * @param {boolean} [options.action] Include action sheets\n */\nexport function refreshSheets({ reset = true, actor = true, item = true, action = true } = {}) {\n  Object.values(ui.windows).forEach((app) => {\n    if (\n      (actor && app instanceof ActorSheet) ||\n      (item && app instanceof ItemSheet) ||\n      (action && app instanceof pf1.applications.component.ItemActionSheet)\n    ) {\n      if (reset && app.object instanceof Document) app.object.reset();\n      app.render();\n    }\n  });\n}\n\n/**\n * Deeply difference an object against some other, returning the update keys and values.\n * Unlike foundry.utils.diffObject, this function also deeply compares arrays.\n *\n * @internal\n * @deprecated - Will be removed with PF1 v12\n * @param {object} original       An object comparing data against which to compare\n * @param {object} other          An object containing potentially different data\n * @param {object} [options={}]   Additional options which configure the diff operation\n * @param {boolean} [options.inner=false]  Only recognize differences in other for keys which also exist in original\n * @param {boolean} [options.keepLength=false]  Keep array length intact, possibly having to insert empty objects\n * @returns {object}               An object of the data in other which differs from that in original\n */\nexport const diffObjectAndArray = (original, other, { inner = false, keepLength = false } = {}) => {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.diffObjectAndArray() is deprecated with no replacement.\", {\n    since: \"PF1 v11\",\n    until: \"PF1 v12\",\n  });\n\n  function _difference(v0, v1) {\n    const t0 = foundry.utils.getType(v0);\n    const t1 = foundry.utils.getType(v1);\n    if (t0 !== t1) return [true, v1];\n    if (t0 === \"Array\") {\n      if (v0.length !== v1.length) return [true, v1];\n      const d = [];\n      for (let a = 0; a < v0.length; a++) {\n        const d2 = diffObjectAndArray(v0[a], v1[a], { inner, keepLength });\n        if (!foundry.utils.isEmpty(d2)) d.push(d2);\n        else if (keepLength) d.push({});\n      }\n      if (d.length > 0) return [true, d];\n      return [false, d];\n    }\n    if (t0 === \"Object\") {\n      if (foundry.utils.isEmpty(v0) !== foundry.utils.isEmpty(v1)) return [true, v1];\n      const d = diffObjectAndArray(v0, v1, { inner, keepLength });\n      return [!foundry.utils.isEmpty(d), d];\n    }\n    return [v0 !== v1, v1];\n  }\n\n  // Recursively call the _difference function\n  return Object.keys(other).reduce((obj, key) => {\n    if (inner && !(key in original)) return obj;\n    const [isDifferent, difference] = _difference(original[key], other[key]);\n    if (isDifferent) obj[key] = difference;\n    return obj;\n  }, {});\n};\n\n/**\n * Determines what ability modifier is appropriate for a given score.\n *\n * @example\n * ```js\n * pf1.utils.getAbilityModifier(15); // => 2\n * pf1.utils.getAbilityModifier(6, { damage: 1 }); // => -2\n * ```\n *\n * @param {number} [score] - The score to find the modifier for.\n * @param {object} [options={}] - Options for this function.\n * @param {number} [options.penalty=0] - A penalty value to take into account.\n * @param {number} [options.damage=0] - Ability score damage to take into account.\n * @returns {number} The modifier for the given score.\n */\nexport function getAbilityModifier(score = null, options = {}) {\n  if (score != null) {\n    const penalty = Math.abs(options.penalty ?? 0);\n    const damage = Math.abs(options.damage ?? 0);\n    return Math.max(-5, Math.floor((score - 10) / 2) - Math.floor(penalty / 2) - Math.floor(damage / 2));\n  }\n  return 0;\n}\n\n/**\n * Create throttling function.\n *\n * Returned function will execute after defined delay. Multiple calls will be discarded until the callback is executed and new timeout can start.\n *\n * @param {Function} callback - Callback function\n * @param {number} delay - Delay in milliseconds\n * @returns {Function}\n */\nexport function throttle(callback, delay) {\n  let timeoutId = -1;\n  return () => {\n    if (timeoutId <= 0) {\n      timeoutId = setTimeout(() => {\n        timeoutId = -1;\n        callback();\n      }, delay);\n    }\n    return timeoutId;\n  };\n}\n\n/**\n * Create limiting function\n *\n * The function is called immediately, unless it was recently called in which case the call is discarded until defined amount of time has passed.\n *\n * @param {Function} callback - Function to call\n * @param {number} ms - Milliseconds that must pass before the wrapped function can be called again.\n * @returns {Function} - Limited function\n */\nexport function limit(callback, ms = 100) {\n  let lastCall = 0;\n  return (...args) => {\n    const t0 = performance.now();\n    if (t0 - lastCall < ms) return;\n    lastCall = t0;\n    callback(...args);\n  };\n}\n\n/**\n * Get iterator for all actors.\n *\n * @param {object} [options] - Options for which actors to fetch.\n * @param {Array<string>|null} [options.types=null] - Array of actor types to accept. Returns all if null.\n * @param {boolean} [options.base=true] - Return base actors (from game.actors).\n * @param {string|Scene|null} [options.scene=null] - Specific scene. Sets `scenes` and `base` to false.\n * @param {boolean} [options.scenes=false] - All scenes.\n * @param {boolean} [options.linked=true] - Get linked actors from scenes.\n * @param {boolean} [options.unlinked=true] - Get unlinked actors from scenes.\n * @param {Array<string|User>} [options.users=[game.user]] - Test specific users permission, either User instances or user IDs. Defaults to current user.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER] - What permission level (`CONST.DOCUMENT_OWNERSHIP_LEVELS`) to test user for, if user is defined.\n *\n * @yields {Actor} - Relevant actors\n */\nexport function* getActors({\n  base = true,\n  types = null,\n  scene = null,\n  scenes = false,\n  linked = true,\n  unlinked = true,\n  users = [game.user],\n  ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,\n} = {}) {\n  users = users.map((user) => (user instanceof User ? user : game.users.get(user)));\n\n  const testUsers = (actor) => (users.length ? users.some((user) => actor.testUserPermission(user, ownership)) : true);\n\n  if (base) {\n    for (const actor of [...game.actors]) {\n      if (types && !types.includes(actor.type)) continue;\n      if (!testUsers(actor)) continue;\n      yield actor;\n    }\n  }\n\n  let sceneList;\n  if (scene) {\n    if (scene instanceof Scene) sceneList = [scene];\n    else sceneList = [game.scenes.get(scene)];\n  } else if (scenes) {\n    sceneList = [...game.scenes];\n  }\n\n  for (const scene of sceneList) {\n    for (const token of [...scene.tokens]) {\n      const actor = token.actor;\n      if (!actor) continue;\n\n      if (types && !types.includes(actor.type)) continue;\n\n      // Test at least one user has appropriate ownership\n      if (!testUsers(actor)) continue;\n\n      const isLinked = token.isLinked;\n      // Yield linked only if such are desired and we didn't already return base actors\n      if (isLinked && linked && !base) yield actor;\n      // Yield unlinked only if desired\n      else if (!isLinked && unlinked) yield actor;\n    }\n  }\n}\n\n/**\n * Parse alignment string and provide breakdown of it.\n *\n * Each alignment is either 0 or 1, except for neutral which can reach 2 for true neutral.\n *\n * @param {string} align - Alignment string.\n * @returns {{lawful:number, evil:number, chaotic:number, good:number, neutral:number}}\n * @since PF1 v10\n */\nexport function parseAlignment(align) {\n  const lawful = align.includes(\"l\") ? 1 : 0;\n  const evil = align.includes(\"e\") ? 1 : 0;\n  const chaotic = align.includes(\"c\") ? 1 : 0;\n  const good = align.includes(\"g\") ? 1 : 0;\n  const neutral = align == \"tn\" ? 2 : align.includes(\"n\") ? 1 : 0;\n  return { lawful, evil, chaotic, good, neutral };\n}\n\n/**\n * Limit precision.\n *\n * Reduces number of decimals but does not insist on those decimals to be there.\n *\n * @beta\n * @param {number} number - Number to adjust\n * @param {number} [decimals] - Maximum number of decimals\n * @param {\"floor\"|\"ceil\"|\"round\"} [method] - Rounding method.\n * @returns {number} - Adjusted number\n */\nexport function limitPrecision(number, decimals = 2, method = \"floor\") {\n  const mult = Math.pow(10, decimals);\n  return Math[method](number * mult) / mult;\n}\n\n/**\n * Tests if two items are in same sub-group.\n *\n * This does not test main grouping (that is, item type itself).\n *\n * @param {ItemPF} item0 - First item to test\n * @param {ItemPF} item1 - Second item to test\n * @returns {boolean} - Equivalency\n */\nexport function isItemSameSubGroup(item0, item1) {\n  if (item0.type === \"spell\") {\n    // Spells sort by spell level instead of subtype\n    return item0.system.spellbook === item1.system.spellbook && item0.system.level === item1.system.level;\n  }\n\n  if (item0.subType) return item0.subType === item1.subType;\n\n  // Assume everything else is only categorized by main type\n  return true;\n}\n\n/**\n * Clone value.\n *\n * Similar to `foundry.utils.deepClone()` but does not return references for DataModel instances.\n *\n * @remarks\n * - Documents are returned as references (unless source option is enabled)\n * - PIXI graphics are returned as references\n * - DataModels are extracted like objects with `parent` excluded\n * - Unsupported objects call .toObject() when present, otherwise as references\n *\n * @param {object} original - Original data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict=false] - Throw an error if a reference would be returned.\n * @param {boolean} [options.source=false] - Return source data instead for supporting data.\n * @throws {Error} - With strict mode if reference would be returned.\n * @returns {object} - Cloned object\n */\nexport function deepClone(original, { strict = false, source = false } = {}) {\n  return _deepClone(original, strict, source);\n}\n\n/**\n * Faster deepClone() without destructuring.\n *\n * @internal\n * @param {*} original - Original data\n * @param {boolean} strict - Strict mode\n * @param {boolean} source - Clone source data\n * @param {number} _depth - Recursion depth\n * @returns {*} - Cloned data\n */\nfunction _deepClone(original, strict = false, source = false, _depth = 0) {\n  if (_depth > 100) {\n    throw new Error(\"Maximum depth exceeded. Be sure your object does not contain cyclical data structures.\");\n  }\n  _depth++;\n\n  // Simple types (null, undefined, number, string, bigint, function,...)\n  if (typeof original !== \"object\" || original === null) return original;\n\n  // Does not clone injected extra data\n  if (Array.isArray(original)) return original.map((value) => _deepClone(value, strict, source, _depth));\n\n  // Dates\n  if (original instanceof Date) return new Date(original);\n\n  // Return documents as is\n  if (original instanceof foundry.abstract.Document) {\n    if (source) return original.toObject();\n    if (strict) throw new Error(\"Document instance encountered\");\n    return original;\n  }\n\n  if (original instanceof PIXI.DisplayObject) {\n    if (strict) throw new Error(\"PIXI graphic encountered\");\n    return original;\n  }\n\n  // Unsupported advanced objects\n  if (original instanceof foundry.abstract.DataModel) {\n    if (source) return original.toObject();\n    // Otherwise treat as regular object\n  } else if (original.constructor && original.constructor !== Object) {\n    if (typeof original.toObject === \"function\") return original.toObject();\n    else if (typeof original.toJSON === \"function\") return original.toJSON();\n    if (strict) throw new Error(`Unsupported advanced object: ${original.constructor.name}`);\n    return original;\n  }\n\n  // DataModels and other plain objects\n  const clone = {};\n  for (const k of Object.keys(original)) {\n    clone[k] = _deepClone(original[k], strict, source, _depth);\n  }\n\n  return clone;\n}\n","const fields = foundry.data.fields;\n\n/**\n * The Base Registry class, providing shared functionality for all registries in the system.\n *\n * @abstract\n * @group Base Classes\n * @template {RegistryEntry} Model\n * @augments {foundry.utils.Collection<Model>}\n */\nexport class Registry extends foundry.utils.Collection {\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @type {typeof Model}\n   */\n  static model = null;\n\n  /**\n   * An array of data used to initialize this registry.\n   *\n   * @protected\n   * @type {Array<object>}\n   */\n  static _defaultData = [];\n\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @see {@link Registry.model}\n   * @type {Model}\n   */\n  model;\n\n  constructor() {\n    super();\n    Object.defineProperty(this, \"model\", { value: this.constructor.model, writable: false, enumerable: false });\n    this._initialize();\n  }\n\n  /**\n   * The name of the registry\n   *\n   * @type {string}\n   */\n  get name() {\n    return this.constructor.name;\n  }\n\n  /**\n   * Initializes the registry with its default data.\n   *\n   * @remarks This method is called automatically when the registry is instantiated.\n   *  It should be self-reliant and not require any other setup.\n   * @private\n   */\n  _initialize() {\n    this.clear();\n    for (const element of this.constructor._defaultData) {\n      try {\n        const content = new this.model({ ...element, namespace: \"pf1\" });\n        super.set(content.id, content);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Allow modules to register their own content\n    Hooks.callAll(`pf1Register${this.name}`, this);\n\n    this.setup();\n  }\n\n  /**\n   * Post-registry initialization entry preparation\n   *\n   * @abstract\n   * @protected\n   */\n  setup() {}\n\n  /**\n   * Localize registry and all their entries.\n   *\n   * Called in `i18nInit`.\n   *\n   * @protected\n   */\n  localize() {\n    for (const element of this) {\n      element.localize();\n    }\n  }\n\n  /**\n   * Sets the value of a key in the registry.\n   *\n   * @param {string} id - ID of the value to set.\n   * @param {Model} content - The value to set.\n   * @returns {Registry} The registry itself, after the value has been set.\n   */\n  set(id, content) {\n    const cls = this.model;\n    if (!(content instanceof cls)) {\n      throw new Error(`Registry '${this.name}' can only register ${cls.name}`);\n    }\n    return super.set(id, content);\n  }\n\n  /**\n   * Registers a new instance of {@link Model} with the registry, using a partial of its data as the base.\n   *\n   * @example\n   * ```js\n   * pf1.registry.damageTypes.register(\"my-module\", \"my-damage-type\", {\n   *   name: \"My Damage Type\",\n   *   img: \"icons/svg/damage.svg\",\n   *   category: \"physical\",\n   * });\n   * ```\n   * @param {string} namespace - The namespace for which this value is registered.\n   * @param {string} id - The unique key of the value.\n   * @param {object} value - A {@link Partial} of the data to use as the base for the new value.\n   * @returns {Registry} The registry itself, after the value has been registered.\n   */\n  register(namespace, id, value) {\n    if (!namespace || !id) throw new Error(\"Registering requires both a namespace and an ID\");\n    if (this.has(id)) {\n      throw new Error(`Registry '${this.name}' already has a key '${id}'`);\n    }\n    return this.set(id, new this.model({ ...value, namespace, _id: id }));\n  }\n\n  /**\n   * Unregisters a value from the registry, or if no id is provided, all values belonging to the namespace.\n   *\n   * @param {string} namespace - The namespace for which this value is unregistered.\n   * @param {string} [id] - The unique key of the value, or `undefined` to unregister all values belonging to the namespace.\n   */\n  unregister(namespace, id) {\n    if (!namespace) throw new Error(\"Unregistering requires a namespace\");\n    if (id) {\n      const entry = this.get(id);\n      if (entry && entry.namespace === namespace) this.delete(id);\n      else throw new Error(`Registry '${this.name}' has no key '${id}'`);\n    } else {\n      for (const entry of this) {\n        if (entry.namespace === namespace) this.delete(entry.id);\n      }\n    }\n  }\n\n  /**\n   * Returns the contents of this registry as object, using ids as keys.\n   *\n   * @param {boolean} [source=false] - Whether to include the source data instead of its prepared data for each value.\n   * @returns {{ [id: string]: object }} The data of each value in the registry, by id\n   */\n  toObject(source = false) {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.toObject(source)]));\n  }\n\n  /**\n   * Returns an object of the registry's contents, with the id as key and the name as value.\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.sort] - Sort result\n   * @returns {{ [id: string]: string }} The names of each value in the registry, by id\n   */\n  getLabels({ sort = true } = {}) {\n    const entries = this.map((registryObject) => [registryObject.id, registryObject.name]);\n    if (sort) {\n      const collator = new Intl.Collator(game.i18n.lang, { numeric: true, ignorePunctuation: false });\n      entries.sort(([_0, a], [_1, b]) => collator.compare(a, b));\n    }\n    return Object.fromEntries(entries);\n  }\n}\n\n/**\n * The Base Registry Object class, providing shared functionality for all registry objects in the system.\n * For the required data, see {@link defineSchema}.\n *\n * @abstract\n * @group Base Classes\n */\nexport class RegistryEntry extends foundry.abstract.DataModel {\n  /** @override */\n  static defineSchema() {\n    return {\n      _id: new fields.StringField({ required: true, blank: false, readonly: true }),\n      name: new fields.StringField({ required: false, initial: \"\", localize: true }),\n      flags: new fields.ObjectField({ required: false, initial: {} }),\n      namespace: new fields.StringField({ required: true, blank: false }),\n    };\n  }\n\n  /**\n   * The unique key of the value.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  _initialize() {\n    super._initialize();\n\n    this.prepareData();\n  }\n\n  /**\n   * Prepares the data of the registry entry.\n   *\n   * @abstract\n   * @protected\n   */\n  prepareData() {}\n\n  /**\n   * Localize fields\n   *\n   * @protected\n   */\n  localize() {\n    for (const [name, field] of Object.entries(this.constructor.schema.fields)) {\n      if (field instanceof fields.StringField && field.options.localize === true)\n        this[name] = game.i18n.localize(this[name]);\n    }\n  }\n}\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single damage type entry in the {@link DamageTypes} registry.\n *\n * @group Damage Types\n */\nexport class DamageType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      abbr: new fields.StringField({ required: false, blank: false, nullable: true, initial: null }),\n      icon: new fields.StringField({ required: false, initial: \"\" }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      category: new fields.StringField({\n        required: true,\n        blank: false,\n        initial: \"misc\",\n        choices: () => DamageTypes.CATEGORIES,\n      }),\n      isModifier: new fields.BooleanField({ required: false, initial: false }),\n      color: new fields.StringField({ required: true, initial: \"black\" }),\n      resist: new fields.BooleanField({ initial: true }),\n      diceSoNice: new fields.SchemaField(\n        {\n          colorset: new fields.StringField({ required: false }),\n          texture: new fields.StringField({ required: false }),\n          material: new fields.StringField({ required: false }),\n        },\n        {\n          initial: undefined,\n          required: false,\n        }\n      ),\n    };\n  }\n\n  get isEnergy() {\n    return this.category === \"energy\";\n  }\n\n  get isPhysical() {\n    return this.category === \"physical\";\n  }\n\n  get isUtility() {\n    return this.category === \"misc\";\n  }\n}\n\n/**\n * The singleton registry of damage types.\n *\n * At runtime this registry is accessible as `pf1.registry.damageTypes`.\n *\n * @group Damage Types\n * @see {@link Registry}\n * @see {@link DamageType}\n * @augments {Registry<DamageType>}\n */\nexport class DamageTypes extends Registry {\n  /** @inheritdoc */\n  static model = DamageType;\n\n  /**\n   * An array of allowed categories of damage types.\n   */\n  static CATEGORIES = /** @type {const} */ ([\"physical\", \"energy\", \"misc\"]);\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"untyped\",\n      name: \"PF1.DamageTypes.untyped.Label\",\n      icon: \"ra ra-uncertainty\",\n      resist: false,\n      category: \"misc\",\n    },\n    {\n      _id: \"slashing\",\n      name: \"PF1.DamageTypes.slashing.Label\",\n      abbr: \"PF1.DamageTypes.slashing.Abbr\",\n      icon: \"ra ra-sword\",\n      color: \"yellow\",\n      category: \"physical\",\n    },\n    {\n      _id: \"piercing\",\n      name: \"PF1.DamageTypes.piercing.Label\",\n      abbr: \"PF1.DamageTypes.piercing.Abbr\",\n      icon: \"ra ra-spear-head\",\n      color: \"blue\",\n      category: \"physical\",\n    },\n    {\n      _id: \"bludgeoning\",\n      name: \"PF1.DamageTypes.bludgeoning.Label\",\n      abbr: \"PF1.DamageTypes.bludgeoning.Abbr\",\n      icon: \"ra ra-large-hammer\",\n      color: \"red\",\n      category: \"physical\",\n    },\n    {\n      _id: \"fire\",\n      name: \"PF1.DamageTypes.fire.Label\",\n      icon: \"ra ra-fire\",\n      color: \"orange\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"fire\",\n        texture: \"fire\",\n      },\n    },\n    {\n      _id: \"cold\",\n      name: \"PF1.DamageTypes.cold.Label\",\n      icon: \"ra ra-frost-emblem\",\n      color: \"aqua\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"ice\",\n        texture: \"ice\",\n      },\n    },\n    {\n      _id: \"electric\",\n      name: \"PF1.DamageTypes.electricity.Label\",\n      icon: \"ra ra-lightning-bolt\",\n      color: \"yellow\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"lightning\",\n        texture: \"ice\",\n      },\n    },\n    {\n      _id: \"acid\",\n      name: \"PF1.DamageTypes.acid.Label\",\n      icon: \"ra ra-acid\",\n      color: \"lime\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"acid\",\n        texture: \"marble\",\n      },\n    },\n    {\n      _id: \"sonic\",\n      name: \"PF1.DamageTypes.sonic.Label\",\n      icon: \"ra ra-horn-call\",\n      color: \"#00aedb\",\n      category: \"energy\",\n      diceSoNice: {\n        colorset: \"astralsea\",\n        texture: \"astral\",\n      },\n    },\n    {\n      _id: \"force\",\n      name: \"PF1.DamageTypes.force.Label\",\n      icon: \"ra ra-doubled\",\n      color: \"#a200ff\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"force\",\n        texture: \"stars\",\n      },\n    },\n    {\n      _id: \"negative\",\n      name: \"PF1.DamageTypes.negative.Label\",\n      icon: \"ra ra-skull\",\n      color: \"#765898\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"necrotic\",\n        texture: \"skulls\",\n      },\n    },\n    {\n      _id: \"positive\",\n      name: \"PF1.DamageTypes.positive.Label\",\n      icon: \"ra ra-sunbeams\",\n      color: \"#f8ed62\",\n      category: \"misc\",\n      diceSoNice: {\n        colorset: \"prism\",\n        texture: \"stainedglass\",\n      },\n    },\n    {\n      _id: \"precision\",\n      name: \"PF1.Precision\",\n      icon: \"ra ra-archery-target\",\n      isModifier: true,\n    },\n    {\n      _id: \"nonlethal\",\n      name: \"PF1.Nonlethal\",\n      icon: \"ra ra-hand\",\n      isModifier: true,\n    },\n    {\n      _id: \"areaOfEffect\",\n      name: \"PF1.DamageTypes.areaOfEffect.Label\",\n      icon: \"ra ra-bomb-explosion\",\n      isModifier: true,\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc DamageTypes}\n *\n * @group Damage Types\n * @type {DamageTypes}\n */\nexport let damageTypes;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single material type entry in the {@link Materials} registry.\n *\n * @group Materials\n */\nexport class Material extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({\n        required: false,\n        localize: true,\n        initial: (data) => `PF1.Materials.Types.${data._id}`,\n      }),\n      shortName: new fields.StringField({ required: false, initial: undefined, blank: false, localize: true }),\n      treatedAs: new fields.StringField({ required: false, initial: undefined, blank: false }),\n      addon: new fields.BooleanField({ required: false, initial: false }),\n      intrinsic: new fields.BooleanField({ required: false, initial: false }), // Always available, same as base materials\n      primitive: new fields.BooleanField({ required: false, initial: false }),\n      baseMaterial: new fields.ArrayField(new fields.StringField(), { required: false, initial: [] }),\n      hardness: new fields.NumberField({ required: false, initial: 10, integer: true, min: 0 }),\n      hardnessMultiplier: new fields.NumberField({ required: false, initial: null, nullable: true, min: 0 }),\n      healthPerInch: new fields.NumberField({ required: false, initial: null, integer: true, min: 0, nullable: true }),\n      healthBonus: new fields.NumberField({ required: false, initial: 0, integer: true, min: 0 }),\n      healthMultiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n      masterwork: new fields.BooleanField({ required: false, initial: false }),\n      allowed: new fields.SchemaField({\n        lightBlade: new fields.BooleanField({ required: false, initial: true }),\n        oneHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        twoHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        rangedWeapon: new fields.BooleanField({ required: false, initial: true }),\n        buckler: new fields.BooleanField({ required: false, initial: true }),\n        lightShield: new fields.BooleanField({ required: false, initial: true }),\n        heavyShield: new fields.BooleanField({ required: false, initial: true }),\n        towerShield: new fields.BooleanField({ required: false, initial: true }),\n        lightArmor: new fields.BooleanField({ required: false, initial: true }),\n        mediumArmor: new fields.BooleanField({ required: false, initial: true }),\n        heavyArmor: new fields.BooleanField({ required: false, initial: true }),\n      }),\n      armor: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      dr: new fields.BooleanField({ required: false, initial: false }),\n      incompatible: new fields.ArrayField(new fields.StringField(), {\n        required: false,\n        initial: [],\n      }),\n      price: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        perPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        ammunition: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        oneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        twoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedOneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedTwoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        shield: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        mediumArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        heavyArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        enhancement: new fields.SchemaField({\n          // Bonus cost to apply enhancement. One time price increase on first enhancement.\n          weapon: new fields.NumberField({ required: false, initial: 0, min: 0 }),\n        }),\n      }),\n      shield: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      weight: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        bonusPerPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n      }),\n    };\n  }\n\n  /**\n   * Is this a basic material that items without special materials are made of?\n   *\n   * @type {boolean}\n   */\n  get basic() {\n    return !this.baseMaterial.length && !this.addon;\n  }\n\n  /**\n   * Check if a given material is okay to be added to our materials list\n   *\n   * @param {ItemPF} item - Whether we're checking weapons or equipment\n   * @returns {boolean} - Whether the material is allowed for the given item\n   */\n  isAllowed(item) {\n    // Let's end this early if we can never be allowed\n    if (this.basic) return false;\n    const type = item.type,\n      subtype = item.system.subType,\n      baseMaterial = item.baseMaterial;\n    let result = false;\n\n    if (this.baseMaterial.length && baseMaterial && !this.baseMaterial.includes(baseMaterial)) {\n      return result;\n    }\n\n    // Check whether the material is allowed for the given item\n    switch (type) {\n      case \"spell\": {\n        result = true;\n        break;\n      }\n      case \"weapon\":\n      case \"attack\": {\n        const weaponCategory = type === \"weapon\" ? item.system.weaponSubtype : item.system.weapon?.type || \"all\";\n\n        switch (weaponCategory) {\n          case \"light\":\n            result = this.allowed.lightBlade;\n            break;\n          case \"1h\":\n            result = this.allowed.oneHandBlade;\n            break;\n          case \"2h\":\n            result = this.allowed.twoHandBlade;\n            break;\n          case \"ranged\":\n            result = this.allowed.rangedWeapon;\n            break;\n          case \"all\": // We're prepping an Attack and don't care (don't have the info anyways)\n            result =\n              this.allowed.lightBlade ||\n              this.allowed.oneHandBlade ||\n              this.allowed.twoHandBlade ||\n              this.allowed.rangedWeapon; // Essentially, filter out any that are armor-only.\n            break;\n          default:\n            // Shouldn't find this\n            return false;\n        }\n        break;\n      }\n      case \"equipment\": {\n        if (subtype === \"shield\" && item.system.equipmentSubtype === \"other\") {\n          result = this.allowed.buckler;\n        } else {\n          result = this.allowed[item.system.equipmentSubtype];\n        }\n        break;\n      }\n    }\n\n    if (result && this.addon) {\n      // If we're an addon, we need to check if the addon is valid for the item\n      return this.isValidAddon(item) ?? false;\n    }\n    return result; // Finally made it through the gauntlet!\n  }\n\n  /**\n   * Check if a given addon material is valid for the chosen material\n   *\n   * @param {ItemPF|Material|string} material - Item, material, or material ID for which to test if this addon is valid.\n   * @returns {boolean|null} - Null if the provided parameter is invalid, boolean otherwise.\n   */\n  isValidAddon(material) {\n    // Convert item and material IDs to actual material\n    if (material instanceof Item) material = pf1.registry.materials.get(material.normalMaterial);\n    else if (typeof material === \"string\") material = pf1.registry.materials.get(material);\n\n    if (!(material instanceof Material)) {\n      if (this.intrinsic) return true;\n      return null; // Material not found or is invalid data\n    }\n\n    if (this.addon === material.addon) return false; // Both are addons or both are not addons\n\n    return !this.incompatible.includes(material.id);\n  }\n}\n\n/**\n * The singleton registry of materials.\n *\n * At runtime this registry is accessible as `pf1.registry.materials`.\n *\n * @group Materials\n * @see {@link Registry}\n * @see {@link Material}\n * @augments {Registry<Material>}\n */\nexport class Materials extends Registry {\n  /** @inheritdoc */\n  static model = Material;\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"cloth\",\n      hardness: 0,\n      healthPerInch: 2,\n      healthMultiplier: 0.07,\n    },\n    {\n      _id: \"leather\",\n      hardness: 2,\n      healthPerInch: 5,\n      healthMultiplier: 0.17,\n    },\n    {\n      _id: \"adamantine\",\n      baseMaterial: [\"steel\"],\n      hardness: 20,\n      healthPerInch: 40,\n      dr: true,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 60.0,\n        lightWeapon: 3000.0,\n        oneHandWeapon: 3000.0,\n        twoHandWeapon: 3000.0,\n        rangedOneHandWeapon: 3000.0,\n        rangedTwoHandWeapon: 3000.0,\n        lightArmor: 5000.0,\n        mediumArmor: 10000.0,\n        heavyArmor: 15000.0,\n      },\n    },\n    {\n      _id: \"alchemicalSilver\",\n      shortName: \"PF1.Materials.Types.silver\",\n      baseMaterial: [\"steel\"],\n      hardness: 8,\n      healthPerInch: 10,\n      incompatible: [\"adamantine\", \"coldIron\", \"mithral\", \"nexavaranSteel\", \"silversheen\", \"sunsilver\"],\n      dr: true,\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 2.0,\n        lightWeapon: 20.0,\n        oneHandWeapon: 90.0,\n        twoHandWeapon: 180.0,\n        rangedOneHandWeapon: 90.0,\n        rangedTwoHandWeapon: 180.0,\n      },\n    },\n    {\n      _id: \"angelSkin\",\n      baseMaterial: [\"leather\"],\n      hardness: 5,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.17,\n      price: {\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"aszite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 750.0,\n        heavyArmor: 1000.0,\n      },\n      weight: {\n        multiplier: 1.1,\n      },\n    },\n    {\n      _id: \"blackwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 20.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"blightQuartz\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 200.0,\n        lightWeapon: 2500.0,\n        oneHandWeapon: 2500.0,\n        twoHandWeapon: 2500.0,\n        rangedOneHandWeapon: 2500.0,\n        rangedTwoHandWeapon: 2500.0,\n      },\n    },\n    {\n      _id: \"bloodCrystal\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        ammunition: 30.0,\n        lightWeapon: 1500.0,\n        oneHandWeapon: 1500.0,\n        twoHandWeapon: 1500.0,\n        rangedOneHandWeapon: 1500.0,\n        rangedTwoHandWeapon: 1500.0,\n      },\n    },\n    {\n      _id: \"caphorite\",\n      baseMaterial: [\"steel\"],\n      // No official hardness stat\n      // No official hp per inch stat\n      // Only allowed to be used for ammunition so these stats are not necessary\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n      },\n    },\n    {\n      _id: \"coldIron\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      price: {\n        multiplier: 2.0,\n        enhancement: {\n          weapon: 2_000,\n        },\n      },\n    },\n    {\n      _id: \"cryptstone\",\n      baseMaterial: [\"stone\", \"steel\", \"wood\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"darkleafCloth\",\n      baseMaterial: [\"leather\", \"cloth\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: -10,\n      },\n      healthMultiplier: 4.0,\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 1500.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"darkwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 10.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"dragonhide\",\n      baseMaterial: [\"leather\"],\n      hardness: 10,\n      healthPerInch: 10, // Typically ½ and 1 inch thick\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        buckler: false,\n        towerShield: false,\n      },\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"druchite\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 12.0,\n        lightWeapon: 1200.0,\n        oneHandWeapon: 1200.0,\n        twoHandWeapon: 1200.0,\n        rangedOneHandWeapon: 1200.0,\n        rangedTwoHandWeapon: 1200.0,\n        lightArmor: 1000.0,\n        mediumArmor: 1500.0,\n        heavyArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"eelHide\",\n      baseMaterial: [\"leather\"],\n      hardness: 2,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -1,\n        maxDex: 1,\n      },\n      price: {\n        lightArmor: 1200.0,\n        mediumArmor: 1800.0,\n      },\n    },\n    {\n      _id: \"elysianBronze\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"fireForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"frostForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"glaucite\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 3.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"greenwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      price: {\n        perPound: 50.0,\n        ammunition: 6.0,\n        lightWeapon: 300.0,\n        oneHandWeapon: 300.0,\n        twoHandWeapon: 300.0,\n        rangedOneHandWeapon: 300.0,\n        rangedTwoHandWeapon: 300.0,\n        shield: 150.0,\n        lightArmor: 150.0,\n        mediumArmor: 150.0,\n        heavyArmor: 150.0,\n      },\n    },\n    {\n      _id: \"griffonMane\",\n      baseMaterial: [\"cloth\"],\n      hardness: 1,\n      healthPerInch: 4,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 2.0,\n      price: {\n        perPound: 50.0,\n        lightArmor: 200.0,\n      },\n    },\n    {\n      _id: \"heatstonePlating\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightArmor: 800.0,\n        mediumArmor: 1000.0,\n      },\n      weight: {\n        bonusPerPound: 0.2,\n      },\n    },\n    {\n      _id: \"horacalcum\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.25, // Horacalcum actually has additional multiplier over health per inch\n      price: {\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        lightArmor: 10000.0,\n        mediumArmor: 30000.0,\n        heavyArmor: 60000.0,\n      },\n    },\n    {\n      _id: \"inubrix\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 100.0,\n        lightWeapon: 5000.0,\n        oneHandWeapon: 5000.0,\n        twoHandWeapon: 5000.0,\n        rangedOneHandWeapon: 5000.0,\n        rangedTwoHandWeapon: 5000.0,\n      },\n    },\n    /* This is added for completenss' sake, but it's not an applicable material outside of constructs.\n    {\n      _id: \"irespanBasalt\",\n      baseMaterial: [\"stone\"],\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 10,\n      price: {\n        perPound: 0.5,\n      },\n    },\n    */\n    {\n      _id: \"lazurite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 1500.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3500.0,\n      },\n    },\n    {\n      _id: \"liquidGlass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10,\n      healthPerInch: 10,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 250.0,\n        ammunition: 16.0,\n        lightWeapon: 800.0,\n        oneHandWeapon: 800.0,\n        twoHandWeapon: 800.0,\n        rangedOneHandWeapon: 800.0,\n        rangedTwoHandWeapon: 800.0,\n      },\n    },\n    {\n      _id: \"livingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 35,\n      healthMultiplier: 1.16,\n      price: {\n        perPound: 250.0,\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 100.0,\n        lightArmor: 500.0,\n        mediumArmor: 1000.0,\n        heavyArmor: 1500.0,\n      },\n    },\n    {\n      _id: \"mithral\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      armor: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      shield: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      price: {\n        perPound: 500, // Non-armor/shield only\n        shield: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 4000.0,\n        heavyArmor: 9000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"nexavaranSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      treatedAs: \"coldIron\",\n      price: {\n        multiplier: 1.5,\n        enhancement: {\n          weapon: 3_000,\n        },\n      },\n    },\n    {\n      _id: \"noqual\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      shield: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 2000.0,\n        lightArmor: 4000.0,\n        mediumArmor: 8000.0,\n        heavyArmor: 12000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"paueliel\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 15.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"pyresteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 15,\n      allowed: {\n        buckler: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"siccatite\",\n      baseMaterial: [\"steel\"],\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"silversheen\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 750.0,\n        oneHandWeapon: 750.0,\n        twoHandWeapon: 750.0,\n        rangedOneHandWeapon: 750.0,\n        rangedTwoHandWeapon: 750.0,\n      },\n    },\n    {\n      _id: \"singingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      armor: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      shield: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      healthMultiplier: 0.67,\n      price: {\n        perPound: 600.0,\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        shield: 7000.0,\n        lightArmor: 750.0,\n        mediumArmor: 9000.0,\n        heavyArmor: 12000.0,\n      },\n    },\n    {\n      _id: \"spireSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 2000.0,\n        oneHandWeapon: 2000.0,\n        twoHandWeapon: 2000.0,\n        rangedOneHandWeapon: 2000.0,\n        rangedTwoHandWeapon: 2000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"steel\",\n      hardness: 10,\n      healthPerInch: 30,\n    },\n    {\n      _id: \"sunsilk\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"sunsilver\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 8,\n      healthPerInch: 10,\n      masterwork: true,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 25.0,\n      },\n    },\n    {\n      _id: \"throneglass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10, // \"as durable as steel\"\n      healthPerInch: 30, // \"as durable as steel\"\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 13000.0,\n        oneHandWeapon: 13000.0,\n        twoHandWeapon: 13000.0,\n      },\n    },\n    {\n      _id: \"viridium\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 200.0,\n        oneHandWeapon: 200.0,\n        twoHandWeapon: 200.0,\n        rangedOneHandWeapon: 200.0,\n        rangedTwoHandWeapon: 200.0,\n      },\n    },\n    {\n      _id: \"voidglass\",\n      baseMaterial: [\"glass\", \"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      price: {\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        shield: 3000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 4500.0,\n      },\n    },\n    {\n      _id: \"whipwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      healthBonus: 5, // Grants flat +5 hp bonus to item regardless of anything else\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"wyroot\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n    },\n    {\n      _id: \"bone\",\n      primitive: true,\n      hardness: 5, // Actually half of whatever the base material is for weapons, 5 is true for armor\n      healthPerInch: null, // Same as base material\n    },\n    {\n      _id: \"bronze\",\n      primitive: true,\n      hardness: 9,\n      healthPerInch: 30, // Not officially statted, but speaks of steel\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"glass\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"gold\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 10.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"obsidian\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        multiplier: 0.5,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"stone\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 0.25,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"wood\",\n      hardness: 5,\n      healthPerInch: 10,\n    },\n    {\n      _id: \"magic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n    {\n      _id: \"epic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc Materials}\n *\n * @group Materials\n * @type {Materials}\n */\nexport let materials;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single script call category/trigger.\n *\n * @group Script Call Categories\n */\nexport class ScriptCallCategory extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      itemTypes: new fields.ArrayField(new fields.StringField({})),\n      info: new fields.StringField({ required: true, blank: false, initial: \"\" }, { localize: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of script call categories/trigger events.\n * At runtime this registry is accessible as `pf1.registry.scriptCalls`.\n *\n * @group Script Call Categories\n * @see {@link Registry}\n * @see {@link ScriptCallCategory}\n * @augments {Registry<ScriptCallCategory>}\n */\nexport class ScriptCalls extends Registry {\n  /** @inheritdoc */\n  static model = ScriptCallCategory;\n\n  /** @inheritdoc */\n  static _defaultData = /** @type {const} */ ([\n    // Use\n    {\n      _id: \"use\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.Use.Name\",\n      info: \"PF1.ScriptCalls.Use.Info\",\n    },\n    // Post-Use\n    {\n      _id: \"postUse\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.PostUse.Name\",\n      info: \"PF1.ScriptCalls.PostUse.Info\",\n    },\n    // Equip\n    {\n      _id: \"equip\",\n      itemTypes: [\"weapon\", \"equipment\", \"loot\"],\n      name: \"PF1.ScriptCalls.Equip.Name\",\n      info: \"PF1.ScriptCalls.Equip.Info\",\n    },\n    // Implant\n    {\n      _id: \"implant\",\n      itemTypes: [\"implant\"],\n      name: \"PF1.ScriptCalls.Implant.Name\",\n      info: \"PF1.ScriptCalls.Implant.Info\",\n    },\n    // Toggle\n    {\n      _id: \"toggle\",\n      itemTypes: [\"buff\", \"feat\"],\n      name: \"PF1.ScriptCalls.Toggle.Name\",\n      info: \"PF1.ScriptCalls.Toggle.Info\",\n    },\n    // Change Quantity\n    {\n      _id: \"changeQuantity\",\n      itemTypes: [\"loot\", \"equipment\", \"weapon\", \"implant\", \"consumable\", \"container\"],\n      name: \"PF1.ScriptCalls.ChangeQuantity.Name\",\n      info: \"PF1.ScriptCalls.ChangeQuantity.Info\",\n    },\n    // Change Level\n    {\n      _id: \"changeLevel\",\n      itemTypes: [\"buff\", \"class\"],\n      name: \"PF1.ScriptCalls.ChangeLevel.Name\",\n      info: \"PF1.ScriptCalls.ChangeLevel.Info\",\n    },\n  ]);\n}\n\n/**\n * {@inheritDoc ScriptCalls}\n *\n * @group Script Call Categories\n * @type {ScriptCalls}\n */\nexport let scriptCalls;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nimport { ItemChange } from \"@component/change.mjs\";\n\nconst omitFields = (obj, keys) => {\n  for (const key of keys) delete obj[key];\n  return obj;\n};\n\n/**\n * Condition's status HUD behaviour configuration.\n *\n * @group Conditions\n */\nexport class StatusHudModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      show: new fields.BooleanField({ required: false, initial: true, label: \"Show in token status HUD\" }),\n      include: new fields.SetField(new fields.StringField({ choices: () => Object.keys(game.model.Actor) }), {\n        initial: [],\n        required: false,\n        label: \"Required actor types.\",\n      }),\n      exclude: new fields.SetField(new fields.StringField({ choices: () => Object.keys(game.model.Actor) }), {\n        initial: [],\n        required: false,\n        label: \"Excluded actor types. Has no effect if include list is populated.\",\n      }),\n    };\n  }\n\n  /**\n   * Allowed actor types.\n   *\n   * @remarks\n   * - Undefined if no limitations are present.\n   *\n   * @type {Array<string>|undefined}\n   */\n  get actorTypes() {\n    if (this.include.size) return [...this.include];\n    if (this.exclude.size) return Object.keys(game.model.Actor).filter((type) => !this.exclude.has(type));\n    return undefined;\n  }\n}\n\n/**\n * A single condition entry in the {@link Condition} registry.\n *\n * @group Conditions\n */\nexport class Condition extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      ...super.defineSchema(),\n      aliases: new fields.SetField(new fields.StringField({ blank: false, nullable: false })),\n      texture: new fields.StringField({ required: true }),\n      track: new fields.StringField({\n        required: false,\n        blank: false,\n        nullable: true,\n        initial: null,\n        choices: () => Conditions.TRACKS,\n      }),\n      mechanics: new fields.SchemaField({\n        changes: new fields.ArrayField(\n          new fields.SchemaField({ ...omitFields(ItemChange.defineSchema(), [\"_id\", \"value\", \"flavor\"]) })\n        ),\n        flags: new fields.SetField(new fields.StringField({ blank: false })),\n        contexts: new fields.SetField(new fields.StringField({ blank: false })),\n      }),\n      journal: new fields.StringField({ nullable: true, blank: false, required: false }),\n      showInDefense: new fields.BooleanField({ required: false, initial: true }),\n      showInAction: new fields.BooleanField({ required: false, initial: true }),\n      showInBuffsTab: new fields.BooleanField({ required: false, initial: true }),\n      hud: new fields.EmbeddedDataField(StatusHudModel),\n      statuses: new fields.SetField(new fields.StringField()), // Secondary statuses\n    };\n  }\n\n  /**\n   * Convert condition to format expected by `CONFIG.statusEffects`.\n   *\n   * @returns {object} - Base object\n   */\n  toStatusEffect() {\n    return {\n      id: this.id,\n      name: this.name,\n      img: this.texture,\n      hud: this.hud.show ? this.hud : false,\n    };\n  }\n}\n\n/**\n * The singleton registry of condition types.\n * At runtime this registry is accessible as `pf1.registry.conditions`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Condition}\n * @augments {Registry<Condition>}\n */\nexport class Conditions extends Registry {\n  /** @inheritdoc */\n  static model = Condition;\n\n  /**\n   * An array of allowed tracks of condition advancement.\n   */\n  static TRACKS = /** @type {const} */ ([\"dying\", \"fear\", \"lethargy\", \"movement\"]);\n\n  /**\n   * @internal\n   */\n  static SET_TO_ZERO = /** @type {const} */ ({\n    formula: 0,\n    type: \"untypedPerm\",\n    operator: \"set\",\n    priority: 1001,\n    continuous: true,\n  });\n\n  /**\n   * @internal\n   */\n  static HUD_EXCLUDE_INANIMATE = /** @type {const} */ ({\n    exclude: [\"haunt\", \"trap\", \"vehicle\"],\n  });\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"bleed\",\n      aliases: [\"bleeding\"],\n      name: \"PF1.Condition.bleed\",\n      texture: \"systems/pf1/icons/conditions/bleed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.L6DTocj1PbOtuspU\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"blind\",\n      aliases: [\"blinded\", \"blinding\"],\n      name: \"PF1.Condition.blind\",\n      texture: \"icons/svg/blind.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.A9KUpd2bsdZZsQqj\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n        // Perception checks, and spellcraft checks for non-verbal components\n        contexts: [\"skill.per\", \"skill.spl\"],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"confused\",\n      aliases: [\"confuse\", \"confusing\"],\n      name: \"PF1.Condition.confused\",\n      texture: \"systems/pf1/icons/conditions/confused.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.J2yma0xciBKRUh9t\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"cowering\",\n      aliases: [\"cower\"],\n      name: \"PF1.Condition.cowering\",\n      texture: \"systems/pf1/icons/conditions/cowering.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eNW5geiJqrnAjjNu\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dazed\",\n      aliases: [\"daze\", \"dazing\"],\n      name: \"PF1.Condition.dazed\",\n      texture: \"systems/pf1/icons/conditions/dazed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.2A6Gk60pLDKR2zT0\",\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dazzled\",\n      aliases: [\"dazzle\", \"dazzling\"],\n      name: \"PF1.Condition.dazzled\",\n      texture: \"systems/pf1/icons/conditions/dazzled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.xHUnCadQ2qYsfvV0\",\n      mechanics: {\n        changes: [\n          {\n            formula: -1,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        contexts: [\"skill.per\"],\n      },\n      showInDefense: false,\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"dead\",\n      name: \"PF1.Condition.dead\",\n      texture: \"icons/svg/skull.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.YvycF7bsU1hPm4pX\",\n      track: \"dying\",\n      showInBuffsTab: false,\n    },\n    {\n      _id: \"deaf\",\n      aliases: [\"deafen\", \"deafened\", \"deafening\"],\n      name: \"PF1.Condition.deaf\",\n      texture: \"icons/svg/deaf.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.3uIamlB0L1UZUwoF\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"init\",\n            type: \"untyped\",\n          },\n        ],\n        // Any skills that take perception modifiers (perception itself and spellcraft when identifying spellcasting with verbal components)\n        // Language dependant saves\n        contexts: [\"savingThrow.will\", \"skill.per\", \"skill.spl\"],\n      },\n      showInAction: false, // TODO: Add configuration that this is to be true for spells only\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"disabled\",\n      aliases: [\"disable\", \"disabling\"],\n      statuses: [\"staggered\"],\n      name: \"PF1.Condition.disabled\",\n      texture: \"systems/pf1/icons/conditions/disabled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.dtHHibCiKZzdjyvp\",\n      track: \"dying\",\n      // TODO: Add card tag whenever any \"strenuous\" activity performed\n      showInDefense: false,\n    },\n    {\n      _id: \"dying\",\n      name: \"PF1.Condition.dying\",\n      texture: \"systems/pf1/icons/conditions/dying.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.zG6xEGMIerpbnND0\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"entangled\",\n      aliases: [\"entangle\", \"entangling\"],\n      name: \"PF1.Condition.entangled\",\n      texture: \"icons/svg/net.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.oxmugd8SoxVjvRRl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Tag any spellcasting to hint at potential need to roll concentration\n      },\n    },\n    {\n      _id: \"exhausted\",\n      aliases: [\"exhaust\", \"exhausting\"],\n      name: \"PF1.Condition.exhausted\",\n      texture: \"systems/pf1/icons/conditions/exhausted.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ITxxh53qgl74wWcE\",\n      mechanics: {\n        changes: [\n          {\n            formula: -6,\n            target: \"strPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -6,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"fatigued\",\n      aliases: [\"fatigue\", \"fatiguing\"],\n      name: \"PF1.Condition.fatigued\",\n      texture: \"icons/svg/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.AVaxTNildXRzYnQm\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"strPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"flatFooted\",\n      aliases: [\"flatfooted\"],\n      name: \"PF1.Condition.flatFooted\",\n      texture: \"systems/pf1/icons/conditions/flat-footed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eSvkrrl3US7RJTai\",\n      mechanics: {\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"frightened\",\n      aliases: [\"frighten\", \"frightening\"],\n      name: \"PF1.Condition.frightened\",\n      texture: \"systems/pf1/icons/conditions/frightened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.uqpJ7ZMnWF5qjOTl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Include in any card\n      },\n      track: \"fear\",\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"grappled\",\n      aliases: [\"grapple\", \"grappling\"],\n      name: \"PF1.Condition.grappled\",\n      texture: \"systems/pf1/icons/conditions/grappled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.i4gHNAVajJWs4cFI\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dexPen\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n        // TODO: Display on spellcasting\n        // TODO: Display on using two-handed actions\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"helpless\",\n      name: \"PF1.Condition.helpless\",\n      texture: \"systems/pf1/icons/conditions/helpless.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.6dtCytJsNkO8Hwq4\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"incorporeal\",\n      name: \"PF1.Condition.incorporeal\",\n      texture: \"systems/pf1/icons/conditions/incorporeal.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.acqGBiMxTbXZ47zU\",\n      mechanics: {\n        changes: [\n          {\n            formula: 0,\n            target: \"nac\",\n            type: \"base\",\n            operator: \"set\",\n            priority: -10,\n          },\n          {\n            formula: \"max(1, @abilities.cha.mod)\",\n            operator: \"add\",\n            target: \"ac\",\n            type: \"deflection\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"invisible\",\n      name: \"PF1.Condition.invisible\",\n      texture: \"icons/svg/invisible.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.Wr2ZWUZcyVWQ4GtX\",\n      // TODO: Display in attack card for potential contextual +2 that was missed\n      showInDefense: false,\n    },\n    {\n      _id: \"nauseated\",\n      aliases: [\"nausea\", \"nauseating\"],\n      name: \"PF1.Condition.nauseated\",\n      texture: \"systems/pf1/icons/conditions/nauseated.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ySiyyK1BMAyKPY4I\",\n      // TODO: Display on any more strenuous action than move action\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"panicked\",\n      aliases: [\"panic\", \"panicking\"],\n      name: \"PF1.Condition.panicked\",\n      texture: \"icons/svg/terror.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.nGTsTfpWcJTTU3rk\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      // TODO: Display in any attack card as the condition denies attacking but we don't enforce that\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"paralyzed\",\n      aliases: [\"paralyze\", \"paralyzing\"],\n      statuses: [\"helpless\"], // Secondary statuses\n      name: \"PF1.Condition.paralyzed\",\n      texture: \"systems/pf1/icons/conditions/paralyzed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.24p2Koq4FFCLDKnj\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n          {\n            ...this.SET_TO_ZERO,\n            target: \"str\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"petrified\",\n      aliases: [\"petrify\", \"petrifying\"],\n      statuses: [\"helpless\", \"unconscious\"], // Secondary statuses\n      name: \"PF1.Condition.petrified\",\n      texture: \"systems/pf1/icons/conditions/petrified.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ayGQWwbrhAc99pkH\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"pinned\",\n      aliases: [\"pin\", \"pinning\"],\n      name: \"PF1.Condition.pinned\",\n      texture: \"systems/pf1/icons/conditions/pinned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.poCq8gXdDi5leaMT\",\n      mechanics: {\n        changes: [\n          {\n            formula: \"min(0, @abilities.dex.mod)\",\n            target: \"dexMod\",\n            type: \"untyped\",\n            operator: \"set\",\n            priority: 1001,\n            continuous: true,\n          },\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"cmd\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      // TODO: Display in spellcasting actions\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"prone\",\n      name: \"PF1.Condition.prone\",\n      texture: \"icons/svg/falling.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.VbagnIPQS523dwxa\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"mattack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"shaken\",\n      aliases: [\"shaking\"],\n      name: \"PF1.Condition.shaken\",\n      texture: \"systems/pf1/icons/conditions/shaken.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.XxLUswkCuXnXmA5T\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"sickened\",\n      aliases: [\"sick\", \"sickening\"],\n      name: \"PF1.Condition.sickened\",\n      texture: \"systems/pf1/icons/conditions/sickened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.7LwCMwrX3tchvrjW\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"wdamage\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"sleep\",\n      aliases: [\"sleeping\"],\n      statuses: [\"helpless\", \"unconscious\"], // Secondary statuses\n      name: \"PF1.Condition.sleep\",\n      texture: \"icons/svg/sleep.svg\",\n      journal: null,\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"squeezing\",\n      aliases: [\"squeeze\"],\n      name: \"PF1.Condition.squeezing\",\n      texture: \"systems/pf1/icons/conditions/squeezing.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.jzeZ0Uf31CAMZra9\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"stable\",\n      aliases: [\"stabilize\", \"stabilized\"],\n      name: \"PF1.Condition.stable\",\n      texture: \"systems/pf1/icons/conditions/stable.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.krgVb43Vd62dqpYr\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInAction: false,\n      showInDefense: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"staggered\",\n      aliases: [\"stagger\", \"staggering\"],\n      name: \"PF1.Condition.staggered\",\n      texture: \"systems/pf1/icons/conditions/staggered.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.TTp8q9Vb2PNAujWu\",\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"stunned\",\n      aliases: [\"stun\", \"stunning\"],\n      name: \"PF1.Condition.stunned\",\n      texture: \"icons/svg/stoned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ZgsBPY0uVCVl6SGh\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"unconscious\",\n      name: \"PF1.Condition.unconscious\",\n      statuses: [\"helpless\"], // Secondary statuses\n      texture: \"systems/pf1/icons/conditions/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.kHwbZ38VHCa1wkUF\",\n      mechanics: {\n        // TODO: Cause helpless secondary condition instead\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      hud: {\n        ...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE),\n      },\n    },\n    {\n      _id: \"burrow\",\n      aliases: [\"burrowing\", \"burrowed\"],\n      name: \"EFFECT.StatusBurrow\",\n      texture: \"icons/svg/mole.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"fly\",\n      aliases: [\"flying\"],\n      name: \"EFFECT.StatusFlying\",\n      texture: \"icons/svg/wing.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"hover\",\n      aliases: [\"hovering\"],\n      name: \"EFFECT.StatusHover\",\n      texture: \"icons/svg/wingfoot.svg\",\n      track: \"movement\",\n    },\n    {\n      _id: \"swim\",\n      aliases: [\"swimming\"],\n      name: \"EFFECT.StatusSwim\",\n      texture: \"systems/pf1/icons/actions/swim.svg\",\n      track: \"movement\",\n    },\n  ];\n\n  /**\n   * Get condition by ID, including any that have it as alias.\n   *\n   * @experimental\n   * @param {string} id\n   * @returns {Condition|void}\n   */\n  getAliased(id) {\n    // TODO: Cache alias-to-condition mapping?\n    return this.get(id) ?? this.find((entry) => entry.aliases.has(id));\n  }\n\n  /**\n   * Get all conditions that have belong to a given track\n   *\n   * @param {string} track - The given track to check for\n   * @returns {string[]} - An array of all conditions in the given track\n   */\n  conditionsInTrack(track) {\n    return this.contents.filter((condition) => condition.track === track).map((condition) => condition.id);\n  }\n\n  /**\n   * Get all tracks and their conditions\n   *\n   * @returns {string[][]} - Condition tracks\n   */\n  trackedConditions() {\n    return this.tracks.map((track) => this.conditionsInTrack(track));\n  }\n\n  /**\n   * The allowed tracks.\n   *\n   * @see {@link Conditions.TRACKS}\n   *\n   * @type {string[]}\n   */\n  get tracks() {\n    return this.constructor.TRACKS;\n  }\n}\n\n/**\n * {@inheritDoc Conditions}\n *\n * @group Conditions\n * @type {Conditions}\n */\nexport let conditions;\n","import { Registry } from \"./base-registry.mjs\";\nimport { RegistryEntry } from \"./base-registry.mjs\";\n\n// Notes\n// PPC = Player Companion\n// PRG is in rare cases used to refer to core rulebook, but also sometimes to refer to the game in its entirety\n// PCh = Pathfinder Chronicles\n\nclass URLField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (!/^https?:\\/\\/[\\w\\d.]+\\.\\w+/.test(value)) throw new Error(\"Must be a valid URL\");\n  }\n}\n\nclass DateField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (value && Number.isNaN(Date.parse(value))) {\n      throw new Error(\"Must be valid date in YYYY-MM-DD format.\");\n    }\n  }\n}\n\nexport class Source extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const optionalString = (options = {}) =>\n      new fields.StringField({ required: false, nullable: true, blank: true, initial: undefined, ...options });\n\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({ nullable: false, blank: false, required: true }),\n      abbr: new fields.StringField({ nullable: false, blank: false, required: false, initial: undefined }), // Add constraints\n      date: new DateField({ required: false, nullable: true, blank: false, initial: undefined }),\n      pages: new fields.NumberField({\n        required: false,\n        integer: true,\n        min: 1,\n        initial: undefined,\n        label: \"Page count\",\n      }),\n      isbn: optionalString(), // TODO: Validate ISBN\n      publisher: new fields.StringField({ required: false, blank: false, nullable: false, initial: \"Paizo\" }), // Assume Paizo\n      level: new fields.NumberField({\n        required: false,\n        min: 1,\n        integer: true,\n        initial: undefined,\n        label: \"Starting level\",\n      }),\n      tieIn: optionalString(),\n      url: new URLField({ required: false, nullable: true, blank: true, initial: undefined }),\n      legacy: new fields.BooleanField({ required: false, initial: false, label: \"D&D 3.5 Material\" }),\n      type: optionalString({ choices: () => this.TYPES }),\n    };\n  }\n\n  /**\n   * An array of allowed types of sources.\n   *\n   * core: Core book\n   * companion: Player companion\n   * setting: Campaign setting book\n   * ap: Adventure path\n   * pg: Adventure path - player guide\n   * comic: Comic\n   * pfs: Pathfinder Society\n   * module: Module\n   *\n   * @internal\n   */\n  static TYPES = /** @type {const} */ ([\"core\", \"setting\", \"ap\", \"module\", \"companion\", \"pg\", \"comic\", \"pfs\"]);\n}\n\n/**\n * The singleton registry of sources.\n *\n * At runtime this registry is accessible as `pf1.registry.sources`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Source}\n * @augments {Registry<Source>}\n */\nexport class Sources extends Registry {\n  /** @inheritDoc */\n  static model = Source;\n\n  /**\n   * Book type prefix\n   *\n   * @internal\n   */\n  static PREFIXES = /** @type {const} */ ({\n    companion: \"PPC\", // Pathfinder Player Companion\n  });\n\n  /** @inheritDoc */\n  static _defaultData = /** @type {const} */ ([\n    {\n      _id: \"PZO1110\",\n      name: \"Core Rulebook\",\n      abbr: \"CRB\",\n      date: \"2009-08-13\",\n      pages: 576,\n      isbn: \"978-1-60125-150-3\",\n      url: \"https://paizo.com/products/btpy88yj\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1114\",\n      name: \"GameMastery Guide\",\n      abbr: \"GMG\",\n      date: \"2010-06-23\",\n      pages: 320,\n      isbn: \"978-1-60125-217-3\",\n      url: \"https://paizo.com/products/btpy8ffn\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1112\",\n      name: \"Bestiary [1]\",\n      date: \"2009-10-21\",\n      pages: 320,\n      isbn: \"978-1-60125-183-1\",\n      url: \"https://paizo.com/products/btpy8auu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1116\",\n      name: \"Bestiary 2\",\n      date: \"2010-12-29\",\n      pages: 320,\n      isbn: \"978-1-60125-268-5\",\n      url: \"https://paizo.com/products/btpy8hif\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1120\",\n      name: \"Bestiary 3\",\n      date: \"2011-12-21\",\n      pages: 320,\n      isbn: \"978-1-60125-378-1\",\n      url: \"https://paizo.com/products/btpy8odu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1127\",\n      name: \"Bestiary 4\",\n      date: \"2013-10-30\",\n      pages: 320,\n      isbn: \"978-1-60125-575-4\",\n      url: \"https://paizo.com/products/btpy91ds\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1133\",\n      name: \"Bestiary 5\",\n      date: \"2015-11-18\",\n      pages: 320,\n      isbn: \"978-1-60125-792-5\",\n      url: \"https://paizo.com/products/btpy9g9x\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1137\",\n      name: \"Bestiary 6\",\n      date: \"2017-04-26\",\n      pages: 320,\n      isbn: \"978-1-60125-931-8\",\n      url: \"https://paizo.com/products/btpy9r1y\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1129\",\n      name: \"Advanced Class Guide\",\n      abbr: \"ACG\",\n      date: \"2015-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-671-3\",\n      url: \"https://paizo.com/products/btpy978v\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1115\",\n      name: \"Advanced Player's Guide\",\n      abbr: \"APG\",\n      date: \"2010-08-05\",\n      pages: 320,\n      isbn: \"978-1-60125-246-3\",\n      url: \"https://paizo.com/products/btpy8fo1\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1121\",\n      name: \"Advanced Race Guide\",\n      abbr: \"ARG\",\n      date: \"2012-06-20\",\n      pages: 256,\n      isbn: \"978-1-60125-390-3\",\n      url: \"https://paizo.com/products/btpy8rv2\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1138\",\n      name: \"Adventurer's Guide\",\n      date: \"2017-05-24\",\n      pages: 192,\n      isbn: \"978-1-60125-938-7\",\n      url: \"https://paizo.com/products/btpy9sjo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1128\",\n      name: \"Strategy Guide\",\n      date: \"2015-03-25\",\n      pages: 160,\n      isbn: \"978-1-60125-626-3\",\n      url: \"https://paizo.com/products/btpy99sk\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1132\",\n      name: \"Occult Adventures\",\n      abbr: \"OA\",\n      date: \"2015-07-29\",\n      pages: 272,\n      isbn: \"978-1-60125-762-8\",\n      url: \"https://paizo.com/products/btpy9egu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1131\",\n      name: \"Pathfinder Unchained\",\n      date: \"2015-04-29\",\n      pages: 256,\n      isbn: \"978-1-60125-715-4\",\n      url: \"https://paizo.com/products/btpy9c25\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1136\",\n      name: \"Villain Codex\",\n      date: \"2016-11-16\",\n      pages: 256,\n      isbn: \"978-1-60125-906-6\",\n      url: \"https://paizo.com/products/btpy9oo7\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1130\",\n      name: \"Monster Codex\",\n      abbr: \"MC\",\n      date: \"2014-10-22\",\n      pages: 256,\n      isbn: \"978-1-60125-686-7\",\n      url: \"https://paizo.com/products/btpy9926\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1135\",\n      name: \"Horror Adventures\",\n      date: \"2016-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-849-6\",\n      url: \"https://paizo.com/products/btpy9n5a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1126\",\n      name: \"Mythic Adventures\",\n      date: \"2013-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-549-5\",\n      url: \"https://paizo.com/products/btpy8ywe\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1124\",\n      name: \"NPC Codex\",\n      date: \"2012-11-21\",\n      pages: 320,\n      isbn: \"978-1-60125-467-2\",\n      url: \"https://paizo.com/products/btpy8v3a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1125\",\n      name: \"Ultimate Campaign\",\n      date: \"2013-05-29\",\n      pages: 256,\n      isbn: \"978-1-60125-498-6\",\n      url: \"https://paizo.com/products/btpy8x64\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1118\",\n      name: \"Ultimate Combat\",\n      abbr: \"UC\",\n      date: \"2011-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-359-0\",\n      url: \"https://paizo.com/products/btpy8mcz\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1123\",\n      name: \"Ultimate Equipment\",\n      abbr: \"UE\",\n      date: \"2012-08-16\",\n      pages: 400,\n      isbn: \"978-1-60125-449-8\",\n      url: \"https://paizo.com/products/btpy8tmc\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1134\",\n      name: \"Ultimate Intrigue\",\n      abbr: \"UI\",\n      date: \"2016-03-30\",\n      pages: 256,\n      isbn: \"978-1-60125-826-7\",\n      url: \"https://paizo.com/products/btpy9j6p\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1117\",\n      name: \"Ultimate Magic\",\n      abbr: \"UM\",\n      date: \"2011-05-08\",\n      pages: 256,\n      isbn: \"978-1-60125-299-9\",\n      url: \"https://paizo.com/products/btpy8k8r\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1139\",\n      name: \"Book of the Damned\",\n      date: \"2017-09-27\",\n      pages: 258,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9tok\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1140\",\n      name: \"Ultimate Wilderness\",\n      abbr: \"UW\",\n      date: \"2017-11-15\",\n      pages: 288,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9ujo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1141\",\n      name: \"Planar Adventures\",\n      abbr: \"PA\",\n      date: \"2018-06-27\",\n      pages: 192,\n      isbn: \"978-1-64078-044-6\",\n      url: \"https://paizo.com/products/btpya1am\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Player's Guide\",\n      date: \"2007-09-01\",\n      pages: 16,\n      isbn: \"978-1-60125-059-9\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8bd9\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9001\",\n      name: \"Rise of the Runelords #1: Burnt Offerings\",\n      abbr: \"RotR-1\",\n      date: \"2007-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-035-3\",\n      url: \"https://paizo.com/products/btpy7zkr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9002\",\n      name: \"Rise of the Runelords #2: The Skinsaw Murders\",\n      abbr: \"RotR-2\",\n      date: \"2007-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-037-7\",\n      url: \"https://paizo.com/products/btpy8029\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9003\",\n      name: \"Rise of the Runelords #3: The Hook Mountain Massacre\",\n      abbr: \"RotR-3\",\n      date: \"2007-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-038-4\",\n      url: \"https://paizo.com/products/btpy80e8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9004\",\n      name: \"Rise of the Runelords #4: Fortress of the Stone Giants\",\n      abbr: \"RotR-4\",\n      date: \"2007-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-039-1\",\n      url: \"https://paizo.com/products/btpy80hm\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9005\",\n      name: \"Rise of the Runelords #5: Sins of the Saviors\",\n      abbr: \"RotR-5\",\n      date: \"2007-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-040-7\",\n      url: \"https://paizo.com/products/btpy815p\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9006\",\n      name: \"Rise of the Runelords #6: Spires of Xin-Shalast\",\n      abbr: \"RotR-6\",\n      date: \"2008-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-041-4\",\n      url: \"https://paizo.com/products/btpy817c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-2S\",\n      name: \"Curse of the Crimson Throne Player's Guide\",\n      date: \"2008-02-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy806v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1021\",\n      name: \"Curse of the Crimson Throne\",\n      date: \"2016-10-01\",\n      pages: 480,\n      isbn: \"978-1-60125-890-8\",\n      url: \"https://paizo.com/products/btpy9nme\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9007\",\n      name: \"Curse of the Crimson Throne #1: Edge of Anarchy\",\n      abbr: \"CotCT-1\",\n      date: \"2008-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-088-9\",\n      url: \"https://paizo.com/products/btpy81xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9008\",\n      name: \"Curse of the Crimson Throne #2: Seven Days to the Grave\",\n      abbr: \"CotCT-2\",\n      date: \"2008-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-091-9\",\n      url: \"https://paizo.com/products/btpy82qy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9009\",\n      name: \"Curse of the Crimson Throne #3: Escape From Old Korvosa\",\n      abbr: \"CotCT-3\",\n      date: \"2008-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-092-6\",\n      url: \"https://paizo.com/products/btpy82t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9010\",\n      name: \"Curse of the Crimson Throne #4: A History of Ashes\",\n      abbr: \"CotCT-4\",\n      date: \"2008-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-093-3\",\n      url: \"https://paizo.com/products/btpy82u9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9011\",\n      name: \"Curse of the Crimson Throne #5: Skeletons of Scarwall\",\n      abbr: \"CotCT-5\",\n      date: \"2008-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-099-5\",\n      url: \"https://paizo.com/products/btpy83yw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9012\",\n      name: \"Curse of the Crimson Throne #6: Crown of Fangs\",\n      abbr: \"CotCT-6\",\n      date: \"2008-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-109-1\",\n      url: \"https://paizo.com/products/btpy84el\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9401\",\n      name: \"Second Darkness Player's Guide\",\n      date: \"2008-08-01\",\n      pages: 32,\n      isbn: \"978-1-60125-142-8\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy84en\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9013\",\n      name: \"Second Darkness #1: Shadow in the Sky\",\n      date: \"2008-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-115-2\",\n      url: \"https://paizo.com/products/btpy84em\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9014\",\n      name: \"Second Darkness #2: Children of the Void\",\n      date: \"2008-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-127-5\",\n      url: \"https://paizo.com/products/btpy85ed\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9015\",\n      name: \"Second Darkness #3: The Armageddon Echo\",\n      date: \"2008-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-128-2\",\n      url: \"https://paizo.com/products/btpy85ep\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9016\",\n      name: \"Second Darkness #4: Endless Night\",\n      date: \"2008-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-129-9\",\n      url: \"https://paizo.com/products/btpy85er\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9017\",\n      name: \"Second Darkness #5: A Memory of Darkness\",\n      date: \"2008-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-130-5\",\n      url: \"https://paizo.com/products/btpy86j6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9018\",\n      name: \"Second Darkness #6: Descent into Midnight\",\n      date: \"2009-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-131-2\",\n      url: \"https://paizo.com/products/btpy86v1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9404\",\n      name: \"Legacy of Fire Player's Guide\",\n      date: \"2009-03-01\",\n      pages: 32,\n      isbn: \"978-1-60125-168-8\",\n      tieIn: \"Legacy of Fire\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8737\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9019\",\n      name: \"Legacy of Fire #1: Howl of the Carrion King\",\n      abbr: \"LoF-1\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-159-6\",\n      url: \"https://paizo.com/products/btpy8735\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9020\",\n      name: \"Legacy of Fire #2: House of the Beast\",\n      abbr: \"LoF-2\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-160-2\",\n      url: \"https://paizo.com/products/btpy86xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9021\",\n      name: \"Legacy of Fire #3: The Jackal's Price\",\n      abbr: \"LoF-3\",\n      date: \"2009-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-161-9\",\n      url: \"https://paizo.com/products/btpy87uv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9022\",\n      name: \"Legacy of Fire #4: The End of Eternity\",\n      abbr: \"LoF-4\",\n      date: \"2009-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-173-2\",\n      url: \"https://paizo.com/products/btpy87ux\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9023\",\n      name: \"Legacy of Fire #5: The Impossible Eye\",\n      abbr: \"LoF-5\",\n      date: \"2009-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-179-4\",\n      url: \"https://paizo.com/products/btpy88tp\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9024\",\n      name: \"Legacy of Fire #6: The Final Wish\",\n      abbr: \"LoF-6\",\n      date: \"2009-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-185-5\",\n      url: \"https://paizo.com/products/btpy89a2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-5E\",\n      name: \"Council of Thieves Player's Guide\",\n      date: \"2009-08-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy89m7\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9025\",\n      name: \"Council of Thieves #1: The Bastards of Erebus\",\n      abbr: \"CoT-1\",\n      date: \"2009-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-190-9\",\n      url: \"https://paizo.com/products/btpy89a4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9026\",\n      name: \"Council of Thieves #2: The Sixfold Trial\",\n      abbr: \"CoT-2\",\n      date: \"2009-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-196-1\",\n      url: \"https://paizo.com/products/btpy89vw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9027\",\n      name: \"Council of Thieves #3: What Lies in Dust\",\n      abbr: \"CoT-3\",\n      date: \"2009-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-197-8\",\n      url: \"https://paizo.com/products/btpy8b8h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9028\",\n      name: \"Council of Thieves #4: The Infernal Syndrom\",\n      abbr: \"CoT-4\",\n      date: \"2009-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-198-5\",\n      url: \"https://paizo.com/products/btpy8b9h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9029\",\n      name: \"Council of Thieves #5: Mother of Flies\",\n      abbr: \"CoT-5\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-199-2\",\n      url: \"https://paizo.com/products/btpy8bc1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9030\",\n      name: \"Council of Thieves #6: The Twice-Damned Prince\",\n      abbr: \"CoT-6\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-226-5\",\n      url: \"https://paizo.com/products/btpy8d54\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-6E\",\n      name: \"Kingmaker Player's Guide\",\n      date: \"2010-03-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy8dqh\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9031\",\n      name: \"Kingmaker #1: Stolen Land\",\n      date: \"2010-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-229-6\",\n      url: \"https://paizo.com/products/btpy8dhc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9032\",\n      name: \"Kingmaker #2: Rivers Run Red\",\n      date: \"2010-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-233-3\",\n      url: \"https://paizo.com/products/btpy8dml\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9033\",\n      name: \"Kingmaker #3: The Varnhold Vanishing\",\n      date: \"2010-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-234-0\",\n      url: \"https://paizo.com/products/btpy8e7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9034\",\n      name: \"Kingmaker #4: Blood for Blood\",\n      date: \"2010-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-251-7\",\n      url: \"https://paizo.com/products/btpy8b7w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9035\",\n      name: \"Kingmaker #5: War of the River Kings\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-252-4\",\n      url: \"https://paizo.com/products/btpy8b7u\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9036\",\n      name: \"Kingmaker #6: Sound of a Thousand Screams\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-253-1\",\n      url: \"https://paizo.com/products/btpy8b7x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-7E\",\n      name: \"Serpent's Skull Player's Guide\",\n      date: \"2010-07-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy8g6d\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9037\",\n      name: \"Serpent's Skull #1: Soul for Smuggler's Shiv\",\n      date: \"2010-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-254-8\",\n      url: \"https://paizo.com/products/btpy8b7v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9038\",\n      name: \"Serpent's Skull #2: Racing to Ruin\",\n      date: \"2010-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-273-9\",\n      url: \"https://paizo.com/products/btpy8ddc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9039\",\n      name: \"Serpent's Skull #3: City of Seven Spears\",\n      date: \"2010-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-274-6\",\n      url: \"https://paizo.com/products/btpy8h6h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9040\",\n      name: \"Serpent's Skull #4: Vaults of Madness\",\n      date: \"2010-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-275-3\",\n      url: \"https://paizo.com/products/btpy8dde\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9041\",\n      name: \"Serpent's Skull #5: The Thousand Fangs Below\",\n      date: \"2011-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-276-0\",\n      url: \"https://paizo.com/products/btpy8ddf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9042\",\n      name: \"Serpent's Skull #6: Sanctum of the Serpent God\",\n      date: \"2011-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-307-1\",\n      url: \"https://paizo.com/products/btpy8g3i\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-8E\",\n      name: \"Carrion Crown Player's Guide\",\n      date: \"2011-03-01\",\n      pages: 15,\n      url: \"https://paizo.com/products/btpy8j0q\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9043\",\n      name: \"Carrion Crown #1: The Haunting of Harrowstone\",\n      abbr: \"CC-1\",\n      date: \"2011-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-308-8\",\n      url: \"https://paizo.com/products/btpy8g7a\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9044\",\n      name: \"Carrion Crown #2: Trial of the Beast\",\n      abbr: \"CC-2\",\n      date: \"2011-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-309-5\",\n      url: \"https://paizo.com/products/btpy8g7b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9045\",\n      name: \"Carrion Crown #3: Broken Moon\",\n      abbr: \"CC-3\",\n      date: \"2011-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-310-1\",\n      url: \"https://paizo.com/products/btpy8g7c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9046\",\n      name: \"Carrion Crown #4: Wake of the Watcher\",\n      abbr: \"CC-4\",\n      date: \"2011-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-311-8\",\n      url: \"https://paizo.com/products/btpy8g7d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9047\",\n      name: \"Carrion Crown #5: Ashes at Dawn\",\n      abbr: \"CC-5\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-312-5\",\n      url: \"https://paizo.com/products/btpy8g7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9048\",\n      name: \"Carrion Crown #6: Shadows of Gallowspire\",\n      abbr: \"CC-6\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-313-2\",\n      url: \"https://paizo.com/products/btpy8g7t\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-9E\",\n      name: \"Jade Regent Player's Guide\",\n      date: \"2011-07-27\",\n      pages: 28,\n      url: \"https://paizo.com/products/btpy8mh3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9049\",\n      name: \"Jade Regent #1: The Brinewall Legacy\",\n      date: \"2011-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-361-3\",\n      url: \"https://paizo.com/products/btpy8j35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9050\",\n      name: \"Jade Regent #2: Night of Frozen Shadows\",\n      date: \"2011-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-366-8\",\n      url: \"https://paizo.com/products/btpy8jrr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9051\",\n      name: \"Jade Regent #3: The Hungry Storm\",\n      date: \"2011-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-374-3\",\n      url: \"https://paizo.com/products/btpy8kgv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9052\",\n      name: \"Jade Regent #4: Forest of Spirits\",\n      date: \"2011-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-380-4\",\n      url: \"https://paizo.com/products/btpy8l2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9053\",\n      name: \"Jade Regent #5: Tide of Honor\",\n      date: \"2012-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-385-9\",\n      url: \"https://paizo.com/products/btpy8mh0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9054\",\n      name: \"Jade Regent #6: The Empty Throne\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-400-9\",\n      url: \"https://paizo.com/products/btpy8mh1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-10E\",\n      name: \"Skull and Shackles Player's Guide\",\n      date: \"2012-02-01\",\n      pages: 30,\n      url: \"https://paizo.com/products/btpy8rwc\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9055\",\n      name: \"Skull & Shackles #1: The Wormwood Mutiny\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-404-7\",\n      url: \"https://paizo.com/products/btpy8mh2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9056\",\n      name: \"Skull & Shackles #2: Raiders of the Fever Sea\",\n      date: \"2012-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-409-2\",\n      url: \"https://paizo.com/products/btpy8moe\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9057\",\n      name: \"Skull & Shackles #3: Tempest Rising\",\n      date: \"2012-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-413-9\",\n      url: \"https://paizo.com/products/btpy8mof\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9058\",\n      name: \"Skull & Shackles #4: Island of Empty Eyes\",\n      date: \"2012-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-416-0\",\n      url: \"https://paizo.com/products/btpy8mog\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9059\",\n      name: \"Skull & Shackles #5: The Price of Infamy\",\n      date: \"2012-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-421-4\",\n      url: \"https://paizo.com/products/btpy8moh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9060\",\n      name: \"Skull & Shackles #6: From Hell's Heart\",\n      date: \"2012-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-422-1\",\n      url: \"https://paizo.com/products/btpy8moi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Anniversary Edition Player's Guide\",\n      date: \"2012-07-01\",\n      pages: 17,\n      url: \"https://paizo.com/products/btpy8tgl\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1002\",\n      name: \"Rise of the Runelords Anniversary Edition\",\n      abbr: \"RotRAE\",\n      date: \"2012-07-01\",\n      pages: 432,\n      isbn: \"978-1-60125-436-8\",\n      url: \"https://paizo.com/products/btpy8tc0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-11E\",\n      name: \"Shattered Star Player's Guide\",\n      date: \"2012-08-01\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy8txj\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9061\",\n      name: \"Shattered Star #1: Shards of Sin\",\n      date: \"2012-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-452-8\",\n      url: \"https://paizo.com/products/btpy8tmh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9062\",\n      name: \"Shattered Star #2: Curse of the Lady's Light\",\n      date: \"2012-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-459-7\",\n      url: \"https://paizo.com/products/btpy8run\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9063\",\n      name: \"Shattered Star #3: The Asylum Stone\",\n      date: \"2012-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-469-6\",\n      url: \"https://paizo.com/products/btpy8sds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9064\",\n      name: \"Shattered Star #4: Beyond the Doomsday Door\",\n      date: \"2012-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-474-0\",\n      url: \"https://paizo.com/products/btpy8t35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9065\",\n      name: \"Shattered Star #5: Into the Nightmare Rift\",\n      date: \"2012-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-487-0\",\n      url: \"https://paizo.com/products/btpy8tdh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9066\",\n      name: \"Shattered Star #6: The Dead Heart of Xin\",\n      date: \"2013-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-491-7\",\n      url: \"https://paizo.com/products/btpy8tvr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-12E\",\n      name: \"Reign of Winter Player's Guide\",\n      date: \"2013-02-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy8x1t\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9067\",\n      name: \"Reign of Winter #1: The Snows of Summer\",\n      date: \"2013-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-492-4\",\n      url: \"https://paizo.com/products/btpy8ubg\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9068\",\n      name: \"Reign of Winter #2: The Shackled Hut\",\n      date: \"2013-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-493-1\",\n      url: \"https://paizo.com/products/btpy8uwz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9069\",\n      name: \"Reign of Winter #3: Maiden, Mother, Crone\",\n      date: \"2013-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-494-8\",\n      url: \"https://paizo.com/products/btpy8xbz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9070\",\n      name: \"Reign of Winter #4: The Frozen Stars\",\n      date: \"2013-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-495-5\",\n      url: \"https://paizo.com/products/btpy8vss\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9071\",\n      name: \"Reign of Winter #5: Rasputin Must Die!\",\n      date: \"2013-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-496-2\",\n      url: \"https://paizo.com/products/btpy8wbv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9072\",\n      name: \"Reign of Winter #6: The Witch Queen's Revenge\",\n      date: \"2013-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-497-9\",\n      url: \"https://paizo.com/products/btpy8wve\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-13E\",\n      name: \"Wrath of the Righteous Player's Guide\",\n      date: \"2013-08-09\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy919c\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9073\",\n      name: \"Wrath of the Righteous #1: The Worldwound Incursion\",\n      date: \"2013-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-553-2\",\n      url: \"https://paizo.com/products/btpy8x8e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9074\",\n      name: \"Wrath of the Righteous #2: Sword of Valor\",\n      date: \"2013-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-568-6\",\n      url: \"https://paizo.com/products/btpy8xsi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9075\",\n      name: \"Wrath of the Righteous #3: Demon's Heresy\",\n      date: \"2013-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-577-8\",\n      url: \"https://paizo.com/products/btpy8yor\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9076\",\n      name: \"Wrath of the Righteous #4: The Midnight Isles\",\n      date: \"2013-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-585-3\",\n      url: \"https://paizo.com/products/btpy8z6x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9077\",\n      name: \"Wrath of the Righteous #5: Herald of the Ivory Labyrinth\",\n      date: \"2014-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-586-0\",\n      url: \"https://paizo.com/products/btpy909v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9078\",\n      name: \"Wrath of the Righteous #6: City of Locusts\",\n      date: \"2014-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-587-7\",\n      url: \"https://paizo.com/products/btpy921g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-14E\",\n      name: \"Mummy's Mask Player's Guide\",\n      date: \"2014-03-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy94z3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9079\",\n      name: \"Mummy's Mask #1: The Half-Dead City\",\n      date: \"2014-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-588-4\",\n      url: \"https://paizo.com/products/btpy94qz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9080\",\n      name: \"Mummy's Mask #2: Empty Graves\",\n      date: \"2014-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-589-1\",\n      url: \"https://paizo.com/products/btpy94vv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9081\",\n      name: \"Mummy's Mask #3: Shifting Sands\",\n      date: \"2014-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-590-7\",\n      url: \"https://paizo.com/products/btpy94qb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9082\",\n      name: \"Mummy's Mask #4: Secrets of the Sphinx\",\n      date: \"2014-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-591-4\",\n      url: \"https://paizo.com/products/btpy9386\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9083\",\n      name: \"Mummy's Mask #5: The Slave Trenches of Hakotep\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-592-1\",\n      url: \"https://paizo.com/products/btpy97at\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9084\",\n      name: \"Mummy's Mask #6: Pyramid of the Sky Pharaoh\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-593-8\",\n      url: \"https://paizo.com/products/btpy97av\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-15E\",\n      name: \"Iron Gods Player's Guide\",\n      date: \"2014-08-05\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy98lf\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9085\",\n      name: \"Iron Gods #1: Fires of Creation\",\n      date: \"2014-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-673-7\",\n      url: \"https://paizo.com/products/btpy95br\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9086\",\n      name: \"Iron Gods #2: Lords of Rust\",\n      date: \"2014-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-678-2\",\n      url: \"https://paizo.com/products/btpy95bs\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9087\",\n      name: \"Iron Gods #3: The Choking Tower\",\n      date: \"2014-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-688-1\",\n      url: \"https://paizo.com/products/btpy95bt\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9088\",\n      name: \"Iron Gods #4: Valley of the Brain Collectors\",\n      date: \"2014-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-704-8\",\n      url: \"https://paizo.com/products/btpy95bu\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9089\",\n      name: \"Iron Gods #5: Palace of Fallen Stars\",\n      date: \"2014-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-711-6\",\n      url: \"https://paizo.com/products/btpy95bv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9090\",\n      name: \"Iron Gods #6: The Divinity Drive\",\n      date: \"2015-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-724-6\",\n      url: \"https://paizo.com/products/btpy95bw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-16E\",\n      name: \"Giantslayer Player's Guide\",\n      date: \"2015-01-25\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9bsv\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9091\",\n      name: \"Giantslayer #1: Battle of Bloodmarch Hill\",\n      date: \"2015-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-725-3\",\n      url: \"https://paizo.com/products/btpy96ps\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9092\",\n      name: \"Giantslayer #2: The Hill Giant's Pledge\",\n      date: \"2015-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-726-0\",\n      url: \"https://paizo.com/products/btpy98t4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9093\",\n      name: \"Giantslayer #3: Forge of the Giant God\",\n      date: \"2015-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-727-7\",\n      url: \"https://paizo.com/products/btpy98t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9094\",\n      name: \"Giantslayer #4: Ice Tomb of the Giant Queen\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-728-4\",\n      url: \"https://paizo.com/products/btpy98t6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9095\",\n      name: \"Giantslayer #5: Anvil of Fire\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-729-1\",\n      url: \"https://paizo.com/products/btpy98t7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9096\",\n      name: \"Giantslayer #6: Shadow of the Storm Tyrant\",\n      date: \"2015-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-730-7\",\n      url: \"https://paizo.com/products/btpy98t8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-17E\",\n      name: \"Hell's Rebels Player's Guide\",\n      date: \"2015-08-12\",\n      pages: 34,\n      url: \"https://paizo.com/products/btpy9g44\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9097\",\n      name: \"Hell's Rebels #1: In Hell's Bright Shadow\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-768-0\",\n      url: \"https://paizo.com/products/btpy98t9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9098\",\n      name: \"Hell's Rebels #2: Turn of the Torrent\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-784-0\",\n      url: \"https://paizo.com/products/btpy98ta\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9099\",\n      name: \"Hell's Rebels #3: Dance of the Damned\",\n      date: \"2015-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-788-8\",\n      url: \"https://paizo.com/products/btpy98tb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90100\",\n      name: \"Hell's Rebels #4: A Song of Silver\",\n      date: \"2015-12-01\",\n      pages: 128,\n      isbn: \"978-1-60125-795-6\",\n      url: \"https://paizo.com/products/btpy98tf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90101\",\n      name: \"Hell's Rebels #5: The Kintargo Contract\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-800-7\",\n      url: \"https://paizo.com/products/btpy98td\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90102\",\n      name: \"Hell's Rebels #6: Breaking the Bones of Hell\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-808-3\",\n      url: \"https://paizo.com/products/btpy9i8d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-18E\",\n      name: \"Hell's Vengeance Player's Guide\",\n      date: \"2016-02-25\",\n      pages: 20,\n      url: \"https://paizo.com/products/btpy9jva\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90103\",\n      name: \"Hell's Vengeance #1: The Hellfire Compact\",\n      date: \"2016-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-818-2\",\n      url: \"https://paizo.com/products/btpy9gds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90104\",\n      name: \"Hell's Vengeance #2: Wrath of Thrune\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-824-3\",\n      url: \"https://paizo.com/products/btpy9h32\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90105\",\n      name: \"Hell's Vengeance #3: The Inferno Gate\",\n      date: \"2016-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-827-4\",\n      url: \"https://paizo.com/products/btpy9hj9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90106\",\n      name: \"Hell's Vengeance #4: For Queen & Empire\",\n      date: \"2016-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-836-6\",\n      url: \"https://paizo.com/products/btpy9ics\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90107\",\n      name: \"Hell's Vengeance #5: Scourge of the Godclaw\",\n      date: \"2016-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-842-7\",\n      url: \"https://paizo.com/products/btpy9ips\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90108\",\n      name: \"Hell's Vengeance #6: Hell Comes to Westcrown\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-851-9\",\n      url: \"https://paizo.com/products/btpy9jd0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-19E\",\n      name: \"Strange Aeons Player's Guide\",\n      date: \"2016-08-17\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9nrw\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90109\",\n      name: \"Strange Aeons #1: In Search of Sanity\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-882-3\",\n      url: \"https://paizo.com/products/btpy9k5o\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90110\",\n      name: \"Strange Aeons #2: The Thrushmoor Terror\",\n      date: \"2016-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-892-2\",\n      url: \"https://paizo.com/products/btpy9l3g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90111\",\n      name: \"Strange Aeons #3: Dreams of the Yellow King\",\n      date: \"2016-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-899-1\",\n      url: \"https://paizo.com/products/btpy9mbj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90112\",\n      name: \"Strange Aeons #4: The Whisper Out of Time\",\n      date: \"2016-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-908-0\",\n      url: \"https://paizo.com/products/btpy9n12\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90113\",\n      name: \"Strange Aeons #5: What Grows Within\",\n      date: \"2017-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-913-4\",\n      url: \"https://paizo.com/products/btpy9nd3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90114\",\n      name: \"Strange Aeons #6: Black Stars Beckon\",\n      date: \"2017-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-919-6\",\n      url: \"https://paizo.com/products/btpy9nd9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-20E\",\n      name: \"Ironfang Invasion Player's Guide\",\n      date: \"2017-03-16\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9sc5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90115\",\n      name: \"Ironfang Invasion #1: Trail of the Hunted\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-926-4\",\n      url: \"https://paizo.com/products/btpy9npj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90116\",\n      name: \"Ironfang Invasion #2: Fangs of War\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-932-5\",\n      url: \"https://paizo.com/products/btpy9npk\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90117\",\n      name: \"Ironfang Invasion #3: Assault on Longshadow\",\n      date: \"2017-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-935-6\",\n      url: \"https://paizo.com/products/btpy9p1h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #4: Siege of Stone\",\n      date: \"2017-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-940-0\",\n      url: \"https://paizo.com/products/btpy9pn4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #5: Prisoners of the Blight\",\n      date: \"2017-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-943-1\",\n      url: \"https://paizo.com/products/btpy9npn\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90120\",\n      name: \"Ironfang Invasion #6: Vault of the Onyx Citadel\",\n      date: \"2017-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-952-3\",\n      url: \"https://paizo.com/products/btpy9pno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-21E\",\n      name: \"Ruins of Azlant Player's Guide\",\n      date: \"2017-08-03\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9uir\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90121\",\n      name: \"Ruins of Azlant #1: The Lost Outpost\",\n      date: \"2017-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-964-6\",\n      url: \"https://paizo.com/products/btpy9qya\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90122\",\n      name: \"Ruins of Azlant #2: Into the Shattered Continent\",\n      date: \"2017-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-972-1\",\n      url: \"https://paizo.com/products/btpy9uk0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90123\",\n      name: \"Ruins of Azlant #3: The Flooded Cathedral\",\n      date: \"2017-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-981-3\",\n      url: \"https://paizo.com/products/btpy9uk2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90124\",\n      name: \"Ruins of Azlant #4: City in the Deep\",\n      date: \"2017-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-988-2\",\n      url: \"https://paizo.com/products/btpy9x2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90125\",\n      name: \"Ruins of Azlant #5: Tower of the Drowned Dead\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-998-1\",\n      url: \"https://paizo.com/products/btpy9xa1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90126\",\n      name: \"Ruins of Azlant #6: Beyond the Veiled Past\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-009-5\",\n      url: \"https://paizo.com/products/btpy9xf0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-22E\",\n      name: \"War for the Crown Player's Guide\",\n      date: \"2018-03-22\",\n      pages: 18,\n      url: \"https://paizo.com/products/btpya08v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90127\",\n      name: \"War for the Crown #1: Crownfall\",\n      date: \"2018-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-015-6\",\n      url: \"https://paizo.com/products/btpy9zk7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90128\",\n      name: \"War for the Crown #2: Songbird, Scion, Saboteur\",\n      date: \"2018-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-025-5\",\n      url: \"https://paizo.com/products/btpya04x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90129\",\n      name: \"War for the Crown #3: The Twilight Child\",\n      date: \"2018-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-032-3\",\n      url: \"https://paizo.com/products/btpya0fi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90130\",\n      name: \"War for the Crown #4: City in the Lion's Eye\",\n      date: \"2018-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-037-8\",\n      url: \"https://paizo.com/products/btpy9wmy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90131\",\n      name: \"War for the Crown #5: The Reaper's Right Hand\",\n      date: \"2018-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-045-3\",\n      url: \"https://paizo.com/products/btpy9x04\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90132\",\n      name: \"War for the Crown #6: The Six-Legend Soul\",\n      date: \"2018-07-01\",\n      pages: 96,\n      isbn: \"978-1-64078-052-1\",\n      url: \"https://paizo.com/products/btpy9xdq\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-23E\",\n      name: \"Return of the Runelords Player's Guide\",\n      date: \"2018-09-05\",\n      pages: 14,\n      url: \"https://paizo.com/products/btq01su5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90133\",\n      name: \"Return of the Runelords #1: Secrets of Roderic's Cove\",\n      date: \"2018-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-062-0\",\n      url: \"https://paizo.com/products/btpy9y26\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90134\",\n      name: \"Return of the Runelords #2: It Came from Hollow Mountain\",\n      date: \"2018-09-01\",\n      pages: 96,\n      isbn: \"978-1-64078-070-5\",\n      url: \"https://paizo.com/products/btpy9z14\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90135\",\n      name: \"Return of the Runelords #3: Runeplague\",\n      date: \"2018-10-01\",\n      pages: 96,\n      isbn: \"978-1-64078-079-8\",\n      url: \"https://paizo.com/products/btpy9zsl\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90136\",\n      name: \"Return of the Runelords #4: Temple of the Peacock Spirit\",\n      date: \"2018-11-01\",\n      pages: 96,\n      isbn: \"978-1-64078-091-0\",\n      url: \"https://paizo.com/products/btpya0b5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90137\",\n      name: \"Return of the Runelords #5: The City Outside of Time\",\n      date: \"2018-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-098-9\",\n      url: \"https://paizo.com/products/btq01vak\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90138\",\n      name: \"Return of the Runelords #6: Rise of New Thassilon\",\n      date: \"2019-01-01\",\n      pages: 96,\n      isbn: \"978-1-64078-106-1\",\n      url: \"https://paizo.com/products/btq01w1w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-24E\",\n      name: \"Tyrant's Grasp Player's Guide\",\n      date: \"2019-02-08\",\n      pages: 9,\n      url: \"https://paizo.com/products/btq01xdp\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90139\",\n      name: \"Tyrant's Grasp #1: The Dead Roads\",\n      date: \"2019-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-111-5\",\n      url: \"https://paizo.com/products/btq01ws3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90140\",\n      name: \"Tyrant's Grasp #2: Eulogy for Roslar's Coffer\",\n      date: \"2019-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-119-1\",\n      url: \"https://paizo.com/products/btq01x4b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90141\",\n      name: \"Tyrant's Grasp #3: Last Watch\",\n      date: \"2019-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-126-9\",\n      url: \"https://paizo.com/products/btq01x4f\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90142\",\n      name: \"Tyrant's Grasp #4: Gardens of Gallowspire\",\n      date: \"2019-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-134-4\",\n      url: \"https://paizo.com/products/btq01xj6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90143\",\n      name: \"Tyrant's Grasp #5: Borne by the Sun's Grace\",\n      date: \"2019-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-140-5\",\n      url: \"https://paizo.com/products/btq01znj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90144\",\n      name: \"Tyrant's Grasp #6: Midwives to Death\",\n      date: \"2019-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-144-3\",\n      url: \"https://paizo.com/products/btq01zno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9500\",\n      name: \"Hollow's Last Hope\",\n      date: \"2007-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9501\",\n      name: \"Crown of the Kobold King\",\n      date: \"2007-06-01\",\n      pages: 32,\n      level: 2,\n      isbn: \"978-1-60125-048-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9502\",\n      name: \"Conquest of Bloodsworn Vale\",\n      date: \"2007-07-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-049-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9503\",\n      name: \"Seven Swords of Sin\",\n      date: \"2007-08-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-050-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9504\",\n      name: \"Gallery of Evil\",\n      date: \"2007-09-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-051-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9505\",\n      name: \"Entombed with the Pharaohs\",\n      date: \"2007-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-052-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-TC1\",\n      name: \"Into the Haunted Forest\",\n      date: \"2007-11-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-108-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9506\",\n      name: \"Carnival of Tears\",\n      date: \"2007-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-055-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9507\",\n      name: \"Guardians of Dragonfall\",\n      date: \"2007-12-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-056-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9508\",\n      name: \"Hangman's Noose\",\n      date: \"2008-01-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-073-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9509\",\n      name: \"Crucible of Chaos\",\n      date: \"2008-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-074-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9510\",\n      name: \"River into Darkness\",\n      date: \"2008-03-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-075-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9511\",\n      name: \"The Demon Within\",\n      date: \"2008-04-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-076-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9512\",\n      name: \"Flight of the Red Raven\",\n      date: \"2008-05-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-101-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-2\",\n      name: \"Revenge of the Kobold King\",\n      date: \"2008-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9513\",\n      name: \"Tower of the Last Baron\",\n      date: \"2008-06-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-102-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9514\",\n      name: \"Treasure of Chimera Cove\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-119-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9515\",\n      name: \"Hungry Are the Dead\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-120-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9516\",\n      name: \"The Pact Stone Pyramid\",\n      date: \"2008-11-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-145-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9517\",\n      name: \"Clash of the Kingslayers\",\n      date: \"2009-01-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-125-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9518\",\n      name: \"Blood of Dragonscar\",\n      date: \"2009-03-01\",\n      pages: 32,\n      level: 15,\n      isbn: \"978-1-60125-170-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9519\",\n      name: \"Beyond the Vault of Souls\",\n      date: \"2009-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-174-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9520NM\",\n      name: \"Crypt of the Everflame\",\n      date: \"2009-08-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-186-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9521\",\n      name: \"Carrion Hill\",\n      date: \"2009-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-206-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9522\",\n      name: \"Masks of the Living God\",\n      date: \"2009-12-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-207-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9523\",\n      name: \"Realm of the Fellnight Queen\",\n      date: \"2010-02-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-224-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9524\",\n      name: \"City of Golden Death\",\n      date: \"2010-04-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-225-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9525\",\n      name: \"From Shore to Sea\",\n      date: \"2010-06-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-257-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-4\",\n      name: \"Master of the Fallen Fortress\",\n      date: \"2010-06-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-365-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9526\",\n      name: \"Curse of the Riven Sky\",\n      date: \"2010-07-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-258-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9527\",\n      name: \"The Witchwar Legacy\",\n      date: \"2010-09-01\",\n      pages: 32,\n      level: 17,\n      isbn: \"978-1-60125-279-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9528\",\n      name: \"The Godsmouth Heresy\",\n      date: \"2010-12-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-280-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9529\",\n      name: \"Cult of the Ebon Destroyers\",\n      date: \"2011-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-317-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9530\",\n      name: \"Tomb of the Iron Medusa\",\n      date: \"2011-04-01\",\n      pages: 32,\n      level: 14,\n      isbn: \"978-1-60125-318-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9531\",\n      name: \"Academy of Secrets\",\n      date: \"2011-06-01\",\n      pages: 32,\n      level: 13,\n      isbn: \"978-1-60125-343-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-5\",\n      name: \"We Be Goblins!\",\n      date: \"2011-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9532\",\n      name: \"The Harrowing\",\n      date: \"2011-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-355-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9533\",\n      name: \"Feast of Ravenmoor\",\n      date: \"2011-09-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-367-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9534\",\n      name: \"The Ruby Phoenix Tournament\",\n      date: \"2012-01-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-381-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9535\",\n      name: \"The Midnight Mirror\",\n      date: \"2012-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-401-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9536\",\n      name: \"No Response from Deepmar\",\n      date: \"2012-05-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-410-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-6\",\n      name: \"Dawn of the Scarlet Sun\",\n      date: \"2012-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9537\",\n      name: \"The Moonscar\",\n      date: \"2012-08-01\",\n      pages: 32,\n      level: 16,\n      isbn: \"978-1-60125-426-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9538\",\n      name: \"Murder's Mark\",\n      date: \"2012-10-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-447-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9539\",\n      name: \"Broken Chains\",\n      date: \"2013-03-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-461-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9540\",\n      name: \"Fangwood Keep\",\n      date: \"2013-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-476-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9541\",\n      name: \"Doom Comes to Dustpawn\",\n      date: \"2013-05-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-504-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-7\",\n      name: \"We Be Goblins Too!\",\n      date: \"2013-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9542\",\n      name: \"The Dragon's Demand\",\n      date: \"2013-07-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-527-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9543\",\n      name: \"Wardens of the Reborn Forge\",\n      date: \"2013-12-01\",\n      pages: 64,\n      level: 12,\n      isbn: \"978-1-60125-555-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9544\",\n      name: \"Tears at Bitter Manor\",\n      date: \"2014-03-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-613-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-8\",\n      name: \"Risen from the Sands\",\n      date: \"2014-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9545\",\n      name: \"The Emerald Spire Superdungeon\",\n      date: \"2014-06-01\",\n      pages: 160,\n      level: 1,\n      isbn: \"978-1-60125-655-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9546\",\n      name: \"Plunder & Peril\",\n      date: \"2014-11-01\",\n      pages: 64,\n      level: 4,\n      isbn: \"978-1-60125-680-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9547\",\n      name: \"Daughters of Fury\",\n      date: \"2015-02-01\",\n      pages: 64,\n      level: 3,\n      isbn: \"978-1-60125-706-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-9\",\n      name: \"We Be Goblins Free!\",\n      date: \"2015-06-01\",\n      pages: 16,\n      level: 4,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9548\",\n      name: \"Feast of Dust\",\n      date: \"2015-11-01\",\n      pages: 64,\n      level: 11,\n      isbn: \"978-1-60125-735-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9549\",\n      name: \"The House on Hook Street\",\n      date: \"2015-12-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-790-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9550\",\n      name: \"Down the Blighted Path\",\n      date: \"2016-02-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-815-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9551\",\n      name: \"Ire of the Storm\",\n      date: \"2016-05-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-830-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-10\",\n      name: \"We B4 Goblins!\",\n      date: \"2016-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9552\",\n      name: \"Gallows of Madness\",\n      date: \"2016-08-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-854-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9553\",\n      name: \"Seers of the Drowned City\",\n      date: \"2016-11-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-902-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGENA001\",\n      name: \"Heroes for Highdelve\",\n      date: \"2017-08-01\",\n      pages: 20,\n      level: 1,\n      isbn: \"978-1-64078-002-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGAUNTLET\",\n      name: \"The Gauntlet\",\n      date: \"2018-05-01\",\n      pages: 16,\n      level: 8,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-12\",\n      name: \"We Be 5uper Goblins!\",\n      date: \"2018-06-01\",\n      pages: 16,\n      level: 6,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9554\",\n      name: \"Cradle of Night\",\n      date: \"2018-12-01\",\n      pages: 64,\n      level: 8,\n      isbn: \"978-1-60125-991-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-14\",\n      name: \"We Be Heroes?\",\n      date: \"2019-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9402\",\n      name: \"Elves of Golarion\",\n      date: \"2008-10-01\",\n      isbn: \"978-1-60125-143-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9403\",\n      name: \"Osirion, Land of Pharaohs\",\n      date: \"2008-12-01\",\n      isbn: \"978-1-60125-144-2\",\n      url: \"https://paizo.com/products/btpy86j7\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9405\",\n      name: \"Taldor, Echoes of Glory\",\n      date: \"2009-04-01\",\n      isbn: \"978-1-60125-169-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9406\",\n      name: \"Qadira, Gateway to the East\",\n      date: \"2009-06-01\",\n      isbn: \"978-1-60125-180-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9407\",\n      name: \"Cheliax, Empire of Devils\",\n      date: \"2009-08-01\",\n      isbn: \"978-1-60125-191-6\",\n      tieIn: \"Council of Thieves\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9408\",\n      name: \"Dwarves of Golarion\",\n      date: \"2009-12-01\",\n      isbn: \"978-1-60125-204-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9409\",\n      name: \"Andoran, Spirit of Liberty\",\n      date: \"2010-01-01\",\n      isbn: \"978-1-60125-205-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9410\",\n      name: \"Adventurer's Armory\",\n      abbr: \"AA\",\n      date: \"2010-04-01\",\n      isbn: \"978-1-60125-222-7\",\n      tieIn: \"Kingmaker\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9411\",\n      name: \"Gnomes of Golarion\",\n      date: \"2010-05-01\",\n      isbn: \"978-1-60125-223-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9412\",\n      name: \"Sargava, the Lost Colony\",\n      date: \"2010-06-01\",\n      isbn: \"978-1-60125-255-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9413\",\n      name: \"Orcs of Golarion\",\n      date: \"2010-08-01\",\n      isbn: \"978-1-60125-256-2\",\n      tieIn: \"Serpent's Skull\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9414\",\n      name: \"Inner Sea Primer\",\n      date: \"2010-11-01\",\n      isbn: \"978-1-60125-277-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9415\",\n      name: \"Halflings of Golarion\",\n      date: \"2011-01-01\",\n      isbn: \"978-1-60125-278-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9416\",\n      name: \"Faiths of Purity\",\n      date: \"2011-04-01\",\n      isbn: \"978-1-60125-314-9\",\n      tieIn: \"Carrion Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9417\",\n      name: \"Humans of Golarion\",\n      date: \"2011-06-01\",\n      isbn: \"978-1-60125-315-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9418\",\n      name: \"Faiths of Balance\",\n      date: \"2011-07-01\",\n      isbn: \"978-1-60125-316-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9419\",\n      name: \"Goblins of Golarion\",\n      date: \"2011-08-01\",\n      isbn: \"978-1-60125-362-0\",\n      tieIn: \"Jade Regent\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9420\",\n      name: \"Faiths of Corruption\",\n      date: \"2011-10-01\",\n      isbn: \"978-1-60125-375-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9421\",\n      name: \"Dragon Empires Primer\",\n      date: \"2012-01-01\",\n      isbn: \"978-1-60125-386-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9422\",\n      name: \"Pirates of the Inner Sea\",\n      abbr: \"PotIS\",\n      date: \"2012-02-01\",\n      isbn: \"978-1-60125-405-4\",\n      tieIn: \"Skull & Shackles\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9423\",\n      name: \"Blood of Fiends\",\n      date: \"2012-04-01\",\n      isbn: \"978-1-60125-423-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9424\",\n      name: \"Blood of Angels\",\n      date: \"2012-07-01\",\n      isbn: \"978-1-60125-438-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9425\",\n      name: \"Varisia, Birthplace of Legends\",\n      date: \"2012-08-02\",\n      isbn: \"978-1-60125-453-5\",\n      tieIn: \"Shattered Star\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9426\",\n      name: \"Knights of the Inner Sea\",\n      date: \"2012-09-01\",\n      isbn: \"978-1-60125-460-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9427\",\n      name: \"Blood of the Night\",\n      date: \"2012-12-06\",\n      isbn: \"978-1-60125-470-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9428\",\n      name: \"People of the North\",\n      date: \"2013-01-22\",\n      isbn: \"978-1-60125-475-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9429\",\n      name: \"Animal Archive\",\n      date: \"2013-02-13\",\n      isbn: \"978-1-60125-488-7\",\n      tieIn: \"Reign of Winter\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9430\",\n      name: \"Dungeoneer's Handbook\",\n      abbr: \"DHB\",\n      date: \"2013-03-08\",\n      isbn: \"978-1-60125-510-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9431\",\n      name: \"Champions of Purity\",\n      date: \"2013-04-16\",\n      isbn: \"978-1-60125-511-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9432\",\n      name: \"Kobolds of Golarion\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-512-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9433\",\n      name: \"Quests & Campaigns\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-513-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9434\",\n      name: \"Dragonslayer's Handbook\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-526-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9435\",\n      name: \"Pathfinder Society Primer\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-534-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9436\",\n      name: \"Faiths & Philosophies\",\n      date: \"2013-08-19\",\n      isbn: \"978-1-60125-543-3\",\n      tieIn: \"Wrath of the Righteous\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9437\",\n      name: \"Demon Hunter's Handbook\",\n      date: \"2013-08-17\",\n      isbn: \"978-1-60125-554-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9438\",\n      name: \"Mythic Origins\",\n      date: \"2013-09-25\",\n      isbn: \"978-1-60125-569-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9439\",\n      name: \"Blood of the Moon\",\n      date: \"2013-10-21\",\n      isbn: \"978-1-60125-578-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9440\",\n      name: \"Magical Marketplace\",\n      abbr: \"MM\",\n      date: \"2013-12-11\",\n      isbn: \"978-1-60125-600-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9441\",\n      name: \"People of the Sands\",\n      date: \"2014-01-09\",\n      isbn: \"978-1-60125-601-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9442\",\n      name: \"Bastards of Golarion\",\n      date: \"2014-02-06\",\n      isbn: \"978-1-60125-602-7\",\n      tieIn: \"Mummy's Mask\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9443\",\n      name: \"Champions of Balance\",\n      date: \"2014-03-25\",\n      isbn: \"978-1-60125-603-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9444\",\n      name: \"Undead Slayer's Handbook\",\n      abbr: \"USH\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-604-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9445\",\n      name: \"Alchemy Manual\",\n      abbr: \"AM\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-605-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9446\",\n      name: \"The Harrow Handbook\",\n      date: \"2014-05-28\",\n      isbn: \"978-1-60125-650-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9447\",\n      name: \"Blood of the Elements\",\n      date: \"2014-06-25\",\n      isbn: \"978-1-60125-654-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9448\",\n      name: \"People of the River\",\n      date: \"2014-07-25\",\n      isbn: \"978-1-60125-666-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9449\",\n      name: \"People of the Stars\",\n      date: \"2014-08-14\",\n      isbn: \"978-1-60125-674-4\",\n      tieIn: \"Iron Gods\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9450\",\n      name: \"Champions of Corruption\",\n      date: \"2014-09-10\",\n      isbn: \"978-1-60125-679-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9451\",\n      name: \"Advanced Class Origins\",\n      date: \"2014-10-22\",\n      isbn: \"978-1-60125-689-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9452\",\n      name: \"Ranged Tactics Toolbox\",\n      date: \"2014-11-24\",\n      isbn: \"978-1-60125-705-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9453\",\n      name: \"Giant Hunter's Handbook\",\n      date: \"2014-12-17\",\n      isbn: \"978-1-60125-712-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9454\",\n      name: \"Familiar Folio\",\n      abbr: \"FF\",\n      date: \"2015-01-28\",\n      isbn: \"978-1-60125-731-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9455\",\n      name: \"Melee Tactics Toolbox\",\n      date: \"2015-03-25\",\n      isbn: \"978-1-60125-732-1\",\n      tieIn: \"Giant Slayer\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9456\",\n      name: \"Heroes of the Wild\",\n      date: \"2015-04-29\",\n      isbn: \"978-1-60125-733-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9457\",\n      name: \"Cohorts and Companions\",\n      date: \"2015-05-27\",\n      isbn: \"978-1-60125-734-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9458\",\n      name: \"Monster Summoner's Handbook\",\n      date: \"2015-06-24\",\n      isbn: \"978-1-60125-758-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9459\",\n      name: \"Dirty Tactics Toolbox\",\n      date: \"2015-09-02\",\n      isbn: \"978-1-60125-763-5\",\n      tieIn: \"Hell's Rebels\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9460\",\n      name: \"Heroes of the Streets\",\n      date: \"2015-09-30\",\n      isbn: \"978-1-60125-769-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9461\",\n      name: \"Occult Origins\",\n      abbr: \"OO\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-785-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9462\",\n      name: \"Black Markets\",\n      abbr: \"BM\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-789-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9463\",\n      name: \"Weapon Master's Handbook\",\n      date: \"2015-11-18\",\n      isbn: \"978-1-60125-796-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9464\",\n      name: \"Agents of Evil\",\n      date: \"2015-12-16\",\n      isbn: \"978-1-60125-801-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9465\",\n      name: \"Arcane Anthology\",\n      abbr: \"AA\",\n      date: \"2016-01-27\",\n      isbn: \"978-1-60125-814-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9466\",\n      name: \"Blood of Shadows\",\n      date: \"2016-02-24\",\n      isbn: \"978-1-60125-820-5\",\n      tieIn: \"Hell's Vengeance\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9467\",\n      name: \"Armor Master's Handbook\",\n      date: \"2016-04-27\",\n      isbn: \"978-1-60125-829-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9468\",\n      name: \"Magic Tactics Toolbox\",\n      date: \"2016-05-25\",\n      isbn: \"978-1-60125-838-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9469\",\n      name: \"Spymaster's Handbook\",\n      date: \"2016-06-29\",\n      isbn: \"978-1-60125-844-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9470\",\n      name: \"Legacy of Dragons\",\n      date: \"2016-08-04\",\n      isbn: \"978-1-60125-853-3\",\n      tieIn: \"Strange Aeons\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9471\",\n      name: \"Haunted Heroes Handbook\",\n      date: \"2016-08-31\",\n      isbn: \"978-1-60125-884-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9472\",\n      name: \"Divine Anthology\",\n      date: \"2016-09-28\",\n      isbn: \"978-1-60125-894-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9473\",\n      name: \"Blood of the Beast\",\n      date: \"2016-11-16\",\n      isbn: \"978-1-60125-901-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9474\",\n      name: \"Paths of the Righteous\",\n      date: \"2016-12-14\",\n      isbn: \"978-1-60125-910-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9475\",\n      name: \"Healer's Handbook\",\n      abbr: \"HH\",\n      date: \"2017-01-25\",\n      isbn: \"978-1-60125-914-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9476\",\n      name: \"Heroes of the High Court\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-920-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9477\",\n      name: \"Psychic Anthology\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-928-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9478\",\n      name: \"Monster Hunter's Handbook\",\n      date: \"2017-03-29\",\n      isbn: \"978-1-60125-933-2\",\n      tieIn: \"Ironfang Invasion\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9479\",\n      name: \"Heroes of the Darklands\",\n      date: \"2017-04-26\",\n      isbn: \"978-1-60125-936-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9480\",\n      name: \"Legacy of the First World\",\n      date: \"2017-05-31\",\n      isbn: \"978-1-60125-941-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9481\",\n      name: \"Adventurer's Armory 2\",\n      abbr: \"AA2\",\n      date: \"2017-06-28\",\n      isbn: \"978-1-60125-945-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9482\",\n      name: \"Blood of the Sea\",\n      date: \"2017-07-26\",\n      isbn: \"978-1-60125-955-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9483\",\n      name: \"Elemental Master's Handbook\",\n      date: \"2017-08-17\",\n      isbn: \"978-1-60125-965-3\",\n      tieIn: \"Ruins of Azlant\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9484\",\n      name: \"Antihero's Handbook\",\n      date: \"2017-09-20\",\n      isbn: \"978-1-60125-973-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9485\",\n      name: \"Blood of the Coven\",\n      date: \"2017-10-18\",\n      isbn: \"978-1-60125-982-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9486\",\n      name: \"People of the Wastes\",\n      date: \"2017-11-15\",\n      isbn: \"978-1-60125-990-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9487\",\n      name: \"Potions & Poisons\",\n      abbr: \"P&P\",\n      date: \"2017-12-13\",\n      isbn: \"978-1-64078-000-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9488\",\n      name: \"Disciple's Doctrine\",\n      date: \"2018-01-31\",\n      isbn: \"978-1-64078-011-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9489\",\n      name: \"Merchant's Manifest\",\n      date: \"2018-03-28\",\n      isbn: \"978-1-64078-026-2\",\n      tieIn: \"War for the Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9490\",\n      name: \"Blood of the Ancients\",\n      date: \"2018-05-30\",\n      isbn: \"978-1-64078-038-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9491\",\n      name: \"Heroes from the Fringe\",\n      date: \"2018-08-29\",\n      isbn: \"978-1-64078-053-8\",\n      tieIn: \"Return of the Runelords\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9492\",\n      name: \"Plane-Hopper's Handbook\",\n      date: \"2018-09-19\",\n      isbn: \"978-1-64078-071-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9493\",\n      name: \"Martial Arts Handbook\",\n      date: \"2018-11-14\",\n      isbn: \"978-1-64078-092-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9494\",\n      name: \"Wilderness Origins\",\n      date: \"2019-01-30\",\n      isbn: \"978-1-64078-107-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9495\",\n      name: \"Heroes of Golarion\",\n      date: \"2019-03-27\",\n      isbn: \"978-1-64078-120-7\",\n      tieIn: \"Tyrant's Grasp\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9496\",\n      name: \"Chronicle of Legends\",\n      date: \"2019-05-29\",\n      isbn: \"978-1-64078-136-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO1106\",\n      name: \"Pathfinder Chronicles: Guide to Korvosa\",\n      date: \"2008-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-078-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1105\",\n      name: \"Pathfinder Chronicles: Gazetteer\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-077-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1107\",\n      name: \"Pathfinder Chronicles: Classic Monsters Revisited\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-079-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1108\",\n      name: \"Pathfinder Chronicles: Guide to Darkmoon Vale\",\n      date: \"2008-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-100-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1111\",\n      name: \"Pathfinder Chronicles: Campaign Setting\",\n      date: \"2008-08-01\",\n      pages: 256,\n      isbn: \"978-1-60125-112-1\",\n      url: \"https://paizo.com/products/btpy84eo\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9202\",\n      name: \"Pathfinder Chronicles: Gods and Magic\",\n      date: \"2008-10-01\",\n      pages: 32,\n      isbn: \"978-1-60125-139-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9204\",\n      name: \"Pathfinder Chronicles: Into the Darklands\",\n      date: \"2008-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-140-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9205\",\n      name: \"Pathfinder Chronicles: Guide to Absalom\",\n      date: \"2008-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-141-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9207\",\n      name: \"Pathfinder Chronicles: Dragons Revisited\",\n      date: \"2009-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-165-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9208\",\n      name: \"Pathfinder Chronicles: Dark Markets: A Guide to Katapesh\",\n      date: \"2009-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-166-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9209\",\n      name: \"Pathfinder Chronicles: The Great Beyond\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-167-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9210\",\n      name: \"Pathfinder Chronicles: Dungeon Denizens Revisited\",\n      abbr: \"DDR\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-172-5\",\n      type: \"setting\",\n      legacy: true,\n    },\n    {\n      _id: \"PZO9211\",\n      name: \"Pathfinder Chronicles: Seekers of Secrets\",\n      abbr: \"SoS\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9213\",\n      name: \"Pathfinder Chronicles: Princes of Darkness\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-189-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9214\",\n      name: \"Pathfinder Chronicles: Cities of Golarion\",\n      date: \"2009-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9216\",\n      name: \"Pathfinder Chronicles: Classic Horrors Revisited\",\n      date: \"2010-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-202-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9217E\",\n      name: \"Pathfinder Chronicles: Guide to the River Kingdoms\",\n      date: \"2010-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-203-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9219\",\n      name: \"Pathfinder Chronicles: NPC Guide\",\n      date: \"2010-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-219-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9220\",\n      name: \"Pathfinder Chronicles: Classic Treasures Revisited\",\n      date: \"2010-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-220-3\",\n      type: \"setting\",\n      url: \"https://paizo.com/products/btpy8dmn\",\n    },\n    {\n      _id: \"PZO9221\",\n      name: \"Pathfinder Chronicles: Faction Guide\",\n      abbr: \"FG\", //  PCh:FG\n      date: \"2010-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-221-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9222\",\n      name: \"Pathfinder Chronicles: Heart of the Jungle\",\n      date: \"2010-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-247-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9223\",\n      name: \"Pathfinder Chronicles: City of Strangers\",\n      date: \"2010-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-248-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9227\",\n      name: \"Misfit Monsters Redeemed\",\n      date: \"2010-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-270-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9225\",\n      name: \"Lords of Chaos\",\n      date: \"2010-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-250-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9229\",\n      name: \"Lost Cities of Golarion\",\n      date: \"2011-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-272-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9226\",\n      name: \"The Inner Sea World Guide\",\n      abbr: \"ISWG\",\n      date: \"2011-03-01\",\n      pages: 320,\n      isbn: \"978-1-60125-269-2\",\n      url: \"https://paizo.com/products/btpy8ief\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9231\",\n      name: \"Rule of Fear\",\n      date: \"2011-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-301-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9232\",\n      name: \"Rival Guide\",\n      date: \"2011-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-302-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9233\",\n      name: \"Undead Revisited\",\n      date: \"2011-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-303-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9234\",\n      name: \"Dungeons of Golarion\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-304-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9235\",\n      name: \"Pathfinder Society Field Guide\",\n      abbr: \"PSFG\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-305-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9237\",\n      name: \"Inner Sea Magic\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-360-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9238\",\n      name: \"Lands of the Linnorm Kings\",\n      date: \"2011-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-365-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9239\",\n      name: \"Horsemen of the Apocalypse\",\n      date: \"2011-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-373-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9240\",\n      name: \"Dragon Empires Gazetteer\",\n      date: \"2011-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-379-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9241\",\n      name: \"Mythical Monsters Revisited\",\n      date: \"2012-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-384-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9243\",\n      name: \"Distant Worlds\",\n      date: \"2012-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-403-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9244\",\n      name: \"Isles of the Shackles\",\n      date: \"2012-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-408-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9245\",\n      name: \"Giants Revisited\",\n      date: \"2012-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-412-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9246\",\n      name: \"Lost Kingdoms\",\n      date: \"2012-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-415-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9248\",\n      name: \"Magnimar, City of Monuments\",\n      date: \"2012-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-446-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9249\",\n      name: \"Paths of Prestige\",\n      date: \"2012-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-451-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9250\",\n      name: \"Artifacts & Legends\",\n      date: \"2012-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-458-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9251\",\n      name: \"Inner Sea Bestiary\",\n      abbr: \"ISB\",\n      date: \"2012-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-468-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9252\",\n      name: \"Mystery Monsters Revisited\",\n      date: \"2012-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-473-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9253\",\n      name: \"Irrisen, Land of Eternal Winter\",\n      date: \"2013-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-486-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9255\",\n      name: \"Chronicle of the Righteous\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-506-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9256\",\n      name: \"Fey Revisited\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-507-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9257\",\n      name: \"Castles of the Inner Sea\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-508-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9258\",\n      name: \"Dragons Unleashed\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-525-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9259\",\n      name: \"The Worldwound\",\n      date: \"2013-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-532-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9261\",\n      name: \"Demons Revisited\",\n      date: \"2013-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-552-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9262\",\n      name: \"Mythic Realms\",\n      date: \"2013-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-567-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9263\",\n      name: \"Towns of the Inner Sea\",\n      date: \"2013-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-576-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9264\",\n      name: \"Inner Sea NPC Codex\",\n      date: \"2013-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-594-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9265\",\n      name: \"Osirion, Legacy of Pharaohs\",\n      date: \"2014-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-595-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9267\",\n      name: \"Inner Sea Gods\",\n      abbr: \"ISG\",\n      date: \"2014-04-01\",\n      pages: 320,\n      isbn: \"978-1-60125-597-6\",\n      url: \"https://paizo.com/products/btpy94wj\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9268\",\n      name: \"Inner Sea Combat\",\n      abbr: \"ISC\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-598-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9269\",\n      name: \"Occult Mysteries\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-649-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9270\",\n      name: \"Numeria, Land of Fallen Stars\",\n      abbr: \"NLFS\",\n      date: \"2014-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-653-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9272\",\n      name: \"Technology Guide\",\n      abbr: \"TG\",\n      date: \"2014-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-672-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9273\",\n      name: \"Undead Unleashed\",\n      date: \"2014-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-677-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9274\",\n      name: \"Ships of the Inner Sea\",\n      date: \"2014-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-702-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9275\",\n      name: \"Lost Treasures\",\n      date: \"2014-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-703-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9276\",\n      name: \"Belkzen, Hold of the Orc Hordes\",\n      date: \"2015-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-710-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9278\",\n      name: \"Tombs of Golarion\",\n      date: \"2015-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-720-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9279\",\n      name: \"Andoran, Birthplace of Freedom\",\n      date: \"2015-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-721-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9283\",\n      name: \"Inner Sea Monster Codex\",\n      date: \"2015-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-752-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9281\",\n      name: \"Hell Unleashed\",\n      date: \"2015-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-757-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9284\",\n      name: \"Occult Bestiary\",\n      date: \"2015-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-767-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9280\",\n      name: \"Inner Sea Races\",\n      abbr: \"ISR\",\n      date: \"2015-09-01\",\n      pages: 256,\n      isbn: \"978-1-60125-722-2\",\n      url: \"https://paizo.com/products/btpy9g9v\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9285\",\n      name: \"Distant Shores\",\n      date: \"2015-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-787-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9286\",\n      name: \"Occult Realms\",\n      date: \"2015-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-794-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9287\",\n      name: \"Cheliax, The Infernal Empire\",\n      date: \"2015-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-799-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9289\",\n      name: \"Darklands Revisited\",\n      date: \"2016-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-819-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9290\",\n      name: \"Inner Sea Faiths\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-825-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9291\",\n      name: \"Heaven Unleashed\",\n      date: \"2016-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-828-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9292\",\n      name: \"Inner Sea Intrigue\",\n      date: \"2016-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-837-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9293\",\n      name: \"Path of the Hellknight\",\n      date: \"2016-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-843-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9295\",\n      name: \"Planes of Power\",\n      date: \"2016-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-883-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9296\",\n      name: \"Inner Sea Temples\",\n      date: \"2016-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-893-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9297\",\n      name: \"Horror Realms\",\n      date: \"2016-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-900-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9298\",\n      name: \"The First World, Realm of the Fey\",\n      date: \"2016-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-909-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9299\",\n      name: \"Qadira, Jewel of the East\",\n      date: \"2017-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-912-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92101\",\n      name: \"Lands of Conflict\",\n      date: \"2017-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-927-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92102\",\n      name: \"Aquatic Adventures\",\n      date: \"2017-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-944-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92105\",\n      name: \"Taldor, the First Empire\",\n      date: \"2017-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-999-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92107\",\n      name: \"Inner Sea Taverns\",\n      date: \"2018-02-01\",\n      pages: 64,\n      isbn: \"978-1-64078-016-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92108\",\n      name: \"Nidal, Land of Shadows\",\n      date: \"2018-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-033-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92109\",\n      name: \"Distant Realms\",\n      date: \"2018-06-01\",\n      pages: 64,\n      isbn: \"978-1-64078-046-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92111\",\n      name: \"Sandpoint, Light of the Lost Coast\",\n      date: \"2018-10-01\",\n      pages: 64,\n      isbn: \"978-1-64078-080-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92104\",\n      name: \"Construct Handbook\",\n      date: \"2018-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-989-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92112\",\n      name: \"Faiths of Golarion\",\n      date: \"2018-12-01\",\n      pages: 64,\n      isbn: \"978-1-64078-099-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92114\",\n      name: \"Concordance of Rivals\",\n      date: \"2019-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-127-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92116\",\n      name: \"Druma, Profit and Prophecy\",\n      date: \"2019-08-01\",\n      pages: 64,\n      isbn: \"978-1-64078-141-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"DYN0031-E\",\n      name: \"Worldscape #1\",\n      date: \"2016-10-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oco\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0032-E\",\n      name: \"Worldscape #2\",\n      date: \"2016-11-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oza\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0033-E\",\n      name: \"Worldscape #3\",\n      date: \"2016-12-21\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcq\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0034-E\",\n      name: \"Worldscape #4\",\n      date: \"2017-01-25\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcu\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0035-E\",\n      name: \"Worldscape #5\",\n      date: \"2017-02-22\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcy\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0036-E\",\n      name: \"Worldscape #6\",\n      date: \"2017-04-05\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9sgk\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0046-HC\",\n      name: \"Spiral of Bones\",\n      date: \"2019-02-09\",\n      pages: 136,\n      type: \"comic\",\n      isbn: \"978-1-5241-0738-3\",\n      url: \"https://paizo.com/products/btq01x8j\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0010-A\",\n      name: \"Pathfinder Comics #10\",\n      date: \"2013-10-23\",\n      pages: 32,\n      type: \"comic\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"PZOPSS0310E\",\n      name: \"Pathfinder Society Scenario #3–10: The Immortal Conundrum\",\n      date: \"2011-11-01\",\n      pages: 24,\n      type: \"pfs\",\n    },\n    {\n      _id: \"PZOPSS0000E\",\n      name: \"Pathfinder Society Roleplaying Guild Guide\",\n      date: \"2019-08-09\",\n      pages: 44,\n      type: \"pfs\",\n    },\n  ]);\n}\n\n/**\n * @type {Sources}\n */\nexport let sources;\n","/**\n * Migration category tracker for {@link MigrationState}\n */\nexport class MigrationCategory {\n  /** @type {import(\"./migration-state.mjs\").MigrationState} */\n  state;\n\n  id;\n  label;\n  isNumber = false;\n  processed = 0;\n  invalid = 0;\n  errors = [];\n  current = null;\n  total = null;\n  ignored = 0;\n  completed = false;\n\n  /**\n   *\n   * @param {string} id - Category ID\n   * @param {string} label - Label\n   * @param {boolean} isNumber - Is numeric\n   * @param {MigrationState} state - State tracker instance\n   */\n  constructor(id, label, isNumber, state) {\n    this.state = state;\n    this.id = id;\n    this.label = game.i18n.localize(label);\n    this.isNumber = isNumber;\n    if (isNumber) {\n      //this.total = 0;\n      this.processed = 0;\n    }\n  }\n\n  get progress() {\n    return this.ignored + this.invalid + this.processed;\n  }\n\n  get percentage() {\n    if (this.total === 0) return 1;\n    return this.progress / this.total;\n  }\n\n  get hasTotal() {\n    return this.total !== null;\n  }\n\n  get progressLabel() {\n    return `${pf1.utils.limitPrecision(this.percentage * 100, 1)} %`;\n  }\n\n  /**\n   * Signal that an entry has started processing.\n   *\n   * @param {any} entry - Whatever was started processing.\n   */\n  startEntry(entry) {\n    this.current = entry;\n    this.state.emit(this, { entry, action: \"process\", actionState: \"start\", processing: this.processed + 1 });\n  }\n\n  /**\n   * Signal that an entry has finished processing.\n   *\n   * @param {any} entry - Whatever was finished processing with.\n   */\n  finishEntry(entry) {\n    this.current = null;\n    this.processed += 1;\n    this.state.emit(this, { entry, action: \"process\", actionState: \"finish\", processed: this.processed });\n  }\n\n  recordError(entry, error) {\n    this.errors.push({ entry, error });\n  }\n\n  /**\n   * Signal that a specific entry was ignored.\n   *\n   * @param {any} entry - Whatever was ignored.\n   */\n  ignoreEntry(entry) {\n    this.ignored += 1;\n    this.state.emit(this, { entry, action: \"ignore\" });\n  }\n\n  /**\n   * Add unspecific ignored entries.\n   *\n   * @param {number} ignored - Number of ignored entries\n   */\n  addIgnored(ignored) {\n    this.ignored += ignored;\n    this.state.emit(this, { action: \"info\", ignored, total: this.total, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of items in this category.\n   *\n   * @param {number} total - Total number of entries in category\n   */\n  setTotal(total) {\n    this.total = total;\n    this.state.emit(this, { action: \"info\", total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of invalid items in this category.\n   *\n   * @param {number} total - Total number of invalid entries in the category\n   */\n  setInvalid(total) {\n    this.invalid = total;\n    this.state.emit(this, { action: \"info\", total: this.total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  setProgress(value) {\n    this.current = null;\n    this.processed = value;\n  }\n\n  /**\n   * Signal the start of processing this category.\n   */\n  start() {\n    this.completed = false;\n    this.state.emit(this, { action: \"start\" });\n  }\n\n  /**\n   * Signal the finishing of processing this category.\n   */\n  finish() {\n    this.completed = true;\n    this.state.emit(this, { action: \"finish\" });\n  }\n\n  /**\n   * Return name of currently processed entry.\n   *\n   * @remarks\n   * - Null if no entry is being processed currently.\n   *\n   * @type {string|null}\n   */\n  get currentName() {\n    const current = this.current;\n    if (!current) return null;\n\n    if (current instanceof ChatMessage) return `${current.timestamp} [${current.id}]`;\n    if (current instanceof foundry.abstract.Document) return current.name;\n    if (current instanceof CompendiumCollection) {\n      if (game.i18n.has(current.metadata.label)) return game.i18n.localize(current.metadata.label);\n      return current.metadata.label;\n    }\n    return null;\n  }\n\n  getInvalidEntries() {\n    let collection;\n    switch (this.id) {\n      case \"actors\":\n      case \"items\":\n      case \"scenes\":\n        collection = game[this.id];\n        break;\n      default:\n        return [];\n    }\n\n    const results = [];\n    for (const id of collection.invalidDocumentIds) {\n      results.push({ id, entry: collection.getInvalid(id) });\n    }\n\n    return results;\n  }\n\n  getErrorEntries() {\n    return this.errors;\n  }\n}\n","import { MigrationCategory } from \"./migration-category.mjs\";\n\n/**\n * State object for tracking migration progress.\n */\nexport class MigrationState {\n  /**\n   * Display label\n   *\n   * @type {string}\n   */\n  label;\n\n  /**\n   * @type {Record<number, Function>}\n   */\n  callbacks = {};\n\n  /**\n   * @type {Record<string, MigrationCategory>}\n   */\n  categories = {};\n\n  completed = false;\n\n  /**\n   * Compendium unlocking state\n   *\n   * @type {boolean}\n   */\n  unlock = false;\n\n  constructor(label) {\n    if (label) label = game.i18n.localize(label);\n    this.label = label;\n  }\n\n  /**\n   * @param {string} category - Category ID\n   * @param {string} label - Display label\n   * @param {boolean} isNumber - Does the category track a number\n   * @returns {MigrationCategory} - Created category\n   */\n  createCategory(category, label, isNumber) {\n    if (!this.categories[category]) {\n      this.categories[category] = new MigrationCategory(category, label, isNumber, this);\n      this.emit(this.categories[category], { action: \"new\" });\n    }\n    return this.categories[category];\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} category - Category or the overall state\n   * @param {object} info - Category or state specific data\n   */\n  emit(category, info) {\n    for (const callback of Object.values(this.callbacks)) {\n      try {\n        callback(this, category, info);\n      } catch (err) {\n        console.error(err, callback);\n      }\n    }\n  }\n\n  start() {\n    this.completed = false;\n    this.emit(this, { action: \"start\" });\n  }\n\n  finish() {\n    this.completed = true;\n    this.emit(this, { action: \"finish\" });\n  }\n\n  get errors() {\n    return Object.values(this.categories).reduce((total, c) => total + c.errors.length, 0);\n  }\n\n  get invalid() {\n    return Object.values(this.categories).reduce((total, c) => total + c.invalid, 0);\n  }\n\n  get ignored() {\n    return Object.values(this.categories).reduce((total, c) => total + c.ignored, 0);\n  }\n}\n","export class MigrationIssuesDialog extends Dialog {\n  /**\n   * Present simple dialog with issues within a migration category.\n   *\n   * @param {MigrationCategory} category\n   */\n  static async open(category) {\n    const templateData = {\n      errors: category.getErrorEntries(),\n      invalid: category.getInvalidEntries(),\n    };\n\n    return this.prompt({\n      title: game.i18n.localize(\"PF1.Migration.Dialog.Issues\") + \" – \" + category.label,\n      content: await renderTemplate(\"systems/pf1/templates/apps/migration-issues.hbs\", templateData),\n      rejectClose: false,\n      options: {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"migration-issues\"],\n        jQuery: false,\n        width: 620,\n        height: \"auto\",\n        resizable: true,\n      },\n    });\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Copy ID/UUID to clipboard\n    jq.on(\"click\", \".issue .id a\", (ev) => {\n      const el = ev.target;\n      const { id, uuid } = el.dataset;\n      game.clipboard.copyPlainText(uuid || id);\n      const type = uuid ? \"UUID\" : \"ID\";\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label: \"\", type, id: uuid || id }));\n    });\n  }\n}\n","import { MigrationState } from \"../../migration/migration-state.mjs\";\nimport { MigrationIssuesDialog } from \"./migration-issues-dialog.mjs\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * Migration progress tracking dialog\n */\nexport class MigrationDialog extends HandlebarsApplicationMixin(ApplicationV2) {\n  /**\n   * Migration state object.\n   *\n   * @type {MigrationState}\n   */\n  migrationState;\n  /**\n   * Autoclose migration dialog once done\n   *\n   * @type {boolean}\n   */\n  autoClose;\n  /**\n   * Ignore documents with appropriate migration marker.\n   *\n   * @type {boolean}\n   */\n  fastMigration;\n\n  constructor(options) {\n    super(options);\n\n    this.migrationState = options.stateTracker;\n\n    this.autoClose = options.autoClose ?? false;\n    this.fastMigration = options.fast ?? true;\n\n    this.migrationState.callbacks[this.appId] = this._onMigration.bind(this);\n  }\n\n  get title() {\n    const label = game.i18n.localize(\"PF1.Migration.Dialog.Title\");\n    if (this.migrationState.label) return `${label}: ${this.migrationState.label}`;\n    return label;\n  }\n\n  static DEFAULT_OPTIONS = {\n    tag: \"form\",\n    classes: [\"pf1-v2\", \"migration\"],\n    window: {\n      resizable: true,\n    },\n    position: {\n      top: 200,\n      width: \"auto\",\n      height: \"auto\",\n    },\n    actions: {\n      \"show-details\": this._showDetails,\n      \"reload-all\": this._reloadClients,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: \"systems/pf1/templates/apps/migration-progress.hbs\",\n    },\n    status: {\n      template: \"systems/pf1/templates/apps/migration-status.hbs\",\n    },\n  };\n\n  /**\n   * @override\n   * @param {object} options\n   */\n  async _prepareContext(options) {\n    await super._prepareContext(options);\n\n    return this.migrationState;\n  }\n\n  /** @override */\n  _onRender(context, options) {\n    super._onRender(context, options);\n\n    if (this.migrationState.completed && this.migrationState.typeChanges !== true && this.autoClose) {\n      setTimeout(() => this.close(), 5_000);\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @param {HTMLElement} target\n   * @this {MigrationDialog}\n   */\n  static _reloadClients(event) {\n    event.preventDefault();\n\n    game.socket.emit(\"reload\");\n    foundry.utils.debouncedReload();\n  }\n\n  /**\n   * @param { Event } event\n   * @param { HTMLElement } target\n   * @this {MigrationDialog}\n   */\n  static _showDetails(event) {\n    event.preventDefault();\n\n    const el = event.target.closest(\".category\");\n    const categoryId = el.dataset.category;\n    const category = this.migrationState.categories[categoryId];\n\n    MigrationIssuesDialog.open(category);\n  }\n\n  _lastProcessUpdate = 0;\n  /**\n   * @param {MigrationState} state\n   * @param {MigrationCategory} category\n   * @param {object} info\n   */\n  _onMigration(state, category, info) {\n    const parts = [\"form\"];\n    switch (info.action) {\n      case \"finish\":\n        if (state.completed) parts.push(\"status\");\n        break;\n      case \"process\": {\n        // Ignore process updates if they come too frequently\n        const t0 = performance.now();\n        if (t0 - this._lastProcessUpdate < 200 && this.state !== this.constructor.RENDER_STATES.RENDERED) return;\n        this._lastProcessUpdate = t0;\n        break;\n      }\n    }\n    this.render({ parts });\n  }\n\n  /**\n   * @override\n   * @param {object} options\n   */\n  async _preClose(options) {\n    await super._preClose(options);\n\n    delete this.migrationState.callbacks[this.appId];\n  }\n\n  /**\n   * Initialize migration dialog and migration state tracker if necessary.\n   *\n   * @param {MigrationState} [state] - Existing state tracker if any\n   * @param {string} [label] - Label associated with the tracker\n   * @param {object} [dialogOptions={}] - Dialog options\n   * @returns {Promise<MigrationDialog>} - Active state tracker\n   */\n  static async initialize(state, label, dialogOptions = {}) {\n    state ??= new MigrationState(label);\n    state.label ||= label;\n\n    const app = new this({ stateTracker: state, autoClose: dialogOptions.autoClose ?? false });\n    await app.render({ dialogOptions, force: true });\n\n    return app;\n  }\n}\n","export const movedAssets = {\n  \"systems/pf1/icons/conditions/bleed.png\": \"systems/pf1/icons/conditions/bleed.svg\",\n  \"systems/pf1/icons/conditions/confused.png\": \"systems/pf1/icons/conditions/confused.svg\",\n  \"systems/pf1/icons/conditions/cowering.png\": \"systems/pf1/icons/conditions/cowering.svg\",\n  \"systems/pf1/icons/conditions/dazed.png\": \"systems/pf1/icons/conditions/dazed.svg\",\n  \"systems/pf1/icons/conditions/dazzled.png\": \"systems/pf1/icons/conditions/dazzled.svg\",\n  \"systems/pf1/icons/conditions/exhausted.png\": \"systems/pf1/icons/conditions/exhausted.svg\",\n  \"systems/pf1/icons/conditions/frightened.png\": \"systems/pf1/icons/conditions/frightened.svg\",\n  \"systems/pf1/icons/conditions/grappled.png\": \"systems/pf1/icons/conditions/grappled.svg\",\n  \"systems/pf1/icons/conditions/helpless.png\": \"systems/pf1/icons/conditions/helpless.svg\",\n  \"systems/pf1/icons/conditions/incorporeal.png\": \"systems/pf1/icons/conditions/incorporeal.svg\",\n  \"systems/pf1/icons/conditions/nauseated.png\": \"systems/pf1/icons/conditions/nauseated.svg\",\n  \"systems/pf1/icons/conditions/paralyzed.png\": \"systems/pf1/icons/conditions/paralyzed.svg\",\n  \"systems/pf1/icons/conditions/pinned.png\": \"systems/pf1/icons/conditions/pinned.svg\",\n  \"systems/pf1/icons/conditions/shaken.png\": \"systems/pf1/icons/conditions/shaken.svg\",\n  \"systems/pf1/icons/conditions/sickened.png\": \"systems/pf1/icons/conditions/sickened.svg\",\n  \"systems/pf1/icons/conditions/squeezing.png\": \"systems/pf1/icons/conditions/squeezing.svg\",\n  \"systems/pf1/icons/conditions/staggered.png\": \"systems/pf1/icons/conditions/staggered.svg\",\n  \"systems/pf1/icons/conditions/screaming.png\": \"systems/pf1/icons/conditions/cowering.svg\",\n  // Duplicated from Core\n  \"systems/pf1/icons/conditions/entangled.png\": \"icons/svg/net.svg\",\n  \"systems/pf1/icons/conditions/fear.png\": \"icons/svg/terror.svg\",\n  \"systems/pf1/icons/conditions/prone.png\": \"icons/svg/falling.svg\",\n  \"systems/pf1/icons/conditions/sleep.png\": \"icons/svg/sleep.svg\",\n  \"systems/pf1/icons/conditions/stunned.png\": \"icons/svg/stoned.svg\",\n};\n","import { MigrationDialog } from \"@app/migration/migration-dialog.mjs\";\nimport { MigrationState } from \"./migration/migration-state.mjs\";\n\nexport { movedAssets as assets } from \"./migration/asset-moves.mjs\";\n\nexport const UPDATE_CHUNK_SIZE = 50;\n\n/**\n * Moved compendium content.\n */\nexport const moved = /** @type {const} */ ({\n  // Trapfinding (v10)\n  \"Compendium.pf1.class-abilities.Item.OhHKCLQXoMlYNodk\": \"Compendium.pf1.class-abilities.Item.pEODJDoTk7uhCZY7\",\n  // Trap Sense (v10)\n  \"Compendium.pf1.class-abilities.Item.fb00TzBa32sSisGb\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n  // Danger Sense (v10)\n  \"Compendium.pf1.class-abilities.Item.4bcGnKYf9beV0nfa\": \"Compendium.pf1.class-abilities.Item.sTlu3zgAEDdJnER5\",\n  // Fast Movement (v10)\n  \"Compendium.pf1.class-abilities.Item.dvQdP8QfrDA9Lxzk\": \"Compendium.pf1.class-abilities.Item.9EX00obqhGHcrOdp\",\n  // A Thousand Faces (v11)\n  \"Compendium.pf1.class-abilities.Item.cBwQdqQ4KmVBck3t\": \"Compendium.pf1.class-abilities.Item.MXj2WoyW7vLxiVYw\",\n  // Poison Use (v11)\n  \"Compendium.pf1.class-abilities.Item.kKaz5A6XbuxgVvhO\": \"Compendium.pf1.class-abilities.Item.A54sLfcyoR5HGNbP\",\n  \"Compendium.pf1.class-abilities.Item.AmsnoKelAxLttUbj\": \"Compendium.pf1.class-abilities.Item.A54sLfcyoR5HGNbP\",\n  // Trap Sense (V11)\n  \"Compendium.pf1.class-abilities.Item.KbhRBQE5ZyYedJo6\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n});\n\nexport const compendiumRenames = /** @type {const}*/ ({\n  racialhd: \"racial-hd\",\n  commonbuffs: \"buffs\",\n  mythicpaths: \"mythic-paths\",\n  \"pf1e-rules\": \"rules\",\n  \"sample-macros\": \"macros\",\n});\n\nexport function registerRedirects() {\n  for (const [oldUuid, newUuid] of Object.entries(moved)) {\n    CONFIG.compendium.uuidRedirects[oldUuid] = newUuid;\n  }\n\n  const prefix = `Compendium.${game.system.id}`;\n  for (const [oldName, newName] of Object.entries(compendiumRenames)) {\n    CONFIG.compendium.uuidRedirects[`${prefix}.${oldName}`] = `${prefix}.${newName}`;\n  }\n}\n\n/**\n * Material ID changes done with v10.5\n */\nconst materialChanges = {\n  nexavarianSteel: \"nexavaranSteel\",\n  alchemicalsilver: \"alchemicalSilver\",\n  angelskin: \"angelSkin\",\n  bloodcrystal: \"bloodCrystal\",\n  coldiron: \"coldIron\",\n  darkleafcloth: \"darkleafCloth\",\n  eelhide: \"eelHide\",\n  elysianbronze: \"elysianBronze\",\n  fireforgedsteel: \"fireForgedSteel\",\n  frostforgedsteel: \"frostForgedSteel\",\n  griffonmane: \"griffonMane\",\n  liquidglass: \"liquidGlass\",\n  livingsteel: \"livingSteel\",\n  singingsteel: \"singingSteel\",\n  spiresteel: \"spireSteel\",\n};\n\nconst contextMarker = () => ({ pf1: { action: \"migration\" } });\n\n/**\n * An indicator for whether the system is currently migrating the world.\n *\n * @type {boolean}\n */\n// As the `pf1` global does not use this ES module but a cloned copy, this value\n// only exists for the documentation. Always use `pf1.migrations.isMigrating` instead!\nexport let isMigrating = false; // eslint-disable-line prefer-const -- pf1.migrations.isMigrating is changed at runtime\n\n/**\n * Test if provided document has been migrated to current version.\n *\n * @remarks\n * - This only tests migration flag. If the document has been updated with outdated data since, this will return false positive.\n *\n * @param {foundry.abstract.Document} doc - Any document to test\n * @returns {boolean} - Migration matches current version\n */\nexport function isMigrated(doc) {\n  const migration = doc.flags?.pf1?.migration; // No getFlag() to support pack index entries\n  if (migration) {\n    const v = pf1.utils.SemanticVersion.fromString(migration);\n    return !v.isLowerThan(pf1.utils.SemanticVersion.fromString(game.system.version));\n  }\n  return false;\n}\n\n/**\n * Initialize {@link MigrationState} and {@link MigrationDialog}\n *\n * @param {MigrationState} [state] - State tracker\n * @param {string} [label] - Label\n * @param {object} [dialog=null] - If falsy, disable dialog. Otherwise options for the dialog.\n * @returns {MigrationState} - Original state or newly initialized one.\n */\nasync function initializeStateAndDialog(state, label, dialog = null) {\n  state ??= new MigrationState(label);\n  if (dialog) await MigrationDialog.initialize(state, label, dialog);\n\n  return state;\n}\n\n/**\n * Conform type update to Foundry requirements.\n *\n * v13 requires the new format while v12 has no clue of it.\n *\n * @remarks\n * - Update data MUST be expanded\n *\n * @param {object} updateData - Update data\n * @param {object} original - Original data\n */\nfunction conformTypeUpdate(updateData, original) {\n  if (game.release.generation < 13) return;\n  if (!updateData.type) return;\n  if (updateData.type === (original.type || \"base\")) return;\n\n  updateData[\"==system\"] = foundry.utils.mergeObject(original.system, updateData.system, {\n    performDeletions: true,\n    inplace: false,\n  });\n\n  delete updateData.system;\n}\n\n/**\n * Perform a system migration for the entire World,\n * applying migrations for Actors, Items, Scenes, Tokens and Compendium packs\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.systemPacks=false] - Migrate system packs.\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog={}] - Progress dialog options. Set to falsy to disable the dialog.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.server=false] - Perform server-side migration of packs.\n * @returns {Promise<void>} - A Promise which resolves once the migration is completed\n */\nexport async function migrateWorld({\n  unlock = false,\n  fast = true,\n  server = false,\n  systemPacks = false,\n  state,\n  dialog = {},\n} = {}) {\n  const isGM = game.user.isGM;\n\n  if (systemPacks) {\n    foundry.utils.logCompatibilityWarning(\n      \"pf1.migrations.migrateWorld() systemPacks parameter is deprecated in favor of pf1.migrations.migrateSystem()\",\n      {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      }\n    );\n  }\n\n  // Deny migration if migration is in progress and there's an active GM,\n  // otherwise assume it's an error and allow migration to start anew.\n  // Don't check for the setting to avoid migration state getting stuck, only trust the in-memory state\n  if (pf1.migrations.isMigrating && game.users.activeGM) {\n    return void ui.notifications.error(game.i18n.localize(\"PF1.Migration.InProgress\"));\n  }\n\n  if (isGM) await game.settings.set(\"pf1\", \"migrating\", true);\n\n  pf1.migrations.isMigrating = true;\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"world\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.World\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n\n  const startMessage = game.i18n.format(\"PF1.Migration.Start\", { version: game.system.version });\n  const smsgId = ui.notifications.info(startMessage, { permanent: true, console: false });\n  console.log(\"PF1 | Migration | Starting...\");\n\n  if (isGM) {\n    await _migrateWorldSettings();\n  }\n\n  // Pre-register  migration categories so they all show on the dialog immediately\n  if (dialog) {\n    state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n    state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n    state.createCategory(\"chat\", \"PF1.Migration.Category.Chat\", true);\n    state.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n    state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n    // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n    await new Promise((resolve) => setTimeout(resolve, 100));\n  }\n\n  // Migrate World Actors\n  const actorMigration = migrateActors({ state, fast, noHooks: true });\n\n  // Migrate World Items\n  const itemMigration = migrateItems({ state, fast, noHooks: true });\n\n  let packMigration = Promise.resolve(),\n    chatMigration = Promise.resolve();\n\n  if (isGM) {\n    // Migrate chat messages\n    chatMigration = migrateMessages({ state, fast, noHooks: true });\n\n    // Migrate Compendium Packs\n    const packs = game.packs.filter((p) => {\n      const source = p.metadata.packageType;\n      // Ignore modules, adventures, etc.\n      if (![\"world\", \"system\"].includes(source)) return false;\n      // Ignore system packs unless configured to include them\n      if (source === \"system\" && !systemPacks) return false;\n      // Ignore unsupported pack types\n      return [\"Actor\", \"Item\", \"Scene\"].includes(p.metadata.type);\n    });\n\n    packMigration = migrateCompendiums(packs, { unlock, fast, server, state, noHooks: true });\n  }\n\n  // Migrate Unlinked Actors\n  await actorMigration; // Base actors must be migrated before unlinked actors are migrated\n  const sceneMigration = migrateScenes({ state, fast, noHooks: true });\n\n  // Wait for migrations to finish\n  await Promise.allSettled([itemMigration, packMigration, sceneMigration, chatMigration]);\n\n  // Remove start message\n  ui.notifications.remove(smsgId);\n\n  // Remove migration notification\n  ui.notifications.info(game.i18n.format(\"PF1.Migration.End\", { version: game.system.version }), { console: false });\n  console.log(\"PF1 | Migration | Completed!\");\n\n  if (isGM) {\n    // Set the migration as complete\n    await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n\n    await game.settings.set(\"pf1\", \"migrating\", false);\n  }\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"world\" });\n}\n\n/**\n * Migrate actors directory.\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast] - If true, skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @returns {Promise<void>}\n */\nexport async function migrateActors({ fast, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"actors\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Actors\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n\n  console.log(\"PF1 | Migration | Actors directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.actors.size);\n  tracker.setInvalid(game.actors.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const actor of game.actors) {\n    if (!actor.isOwner || (fast && isMigrated(actor))) {\n      tracker.ignoreEntry(actor);\n      continue;\n    }\n\n    tracker.startEntry(actor);\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), undefined, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Actor: ${actor.name} | Applying updates`);\n        await actor.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker.recordError(actor, err);\n      console.error(`PF1 | Migration | Actor: ${actor.name} | Error`, err);\n    }\n    tracker.finishEntry(actor);\n  }\n\n  console.log(\"PF1 | Migration | Actors directory complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"actors\" });\n}\n\n/**\n * Migrate items directory.\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state] - Internal only.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @returns {Promise<void>}\n */\nexport async function migrateItems({ fast = true, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"items\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Items\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n\n  console.log(\"PF1 | Migration | Items directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.items.size);\n  tracker.setInvalid(game.items.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const item of game.items) {\n    if (!item.isOwner || (fast && isMigrated(item))) {\n      tracker.ignoreEntry(item);\n      continue;\n    }\n\n    tracker.startEntry(item);\n\n    try {\n      const updateData = await migrateItemData(item.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Item: ${item.name} | Applying updates`);\n        await item.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker.recordError(item, err);\n      console.error(`PF1 | Migration | Item: ${item.name} | Error`, err);\n    }\n    tracker.finishEntry(item);\n  }\n\n  tracker.finish();\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Items directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"items\" });\n}\n\n/**\n * Migrate all scenes.\n *\n * @see {@link migrateScene}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.fast=true] - Skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {object} [options.dialog=null] - Dialog configuration.\n * @returns {Promise<void>}\n */\nexport async function migrateScenes({ fast, state, noHooks = false, dialog = null } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"scenes\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Scenes\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n  console.log(\"PF1 | Migration | Scene directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.scenes.size);\n  tracker.setInvalid(game.scenes.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const scene of game.scenes) {\n    tracker.startEntry(scene);\n    await migrateScene(scene, { fast, state, tracker });\n    tracker.finishEntry(scene);\n  }\n\n  tracker.finish();\n\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Scene directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"scenes\" });\n}\n\n/**\n * Migrate compendiums.\n *\n * @see {@link migrateCompendium}\n *\n * @param {Array<string|WorldCollection>|null} [packs=null] - Array of pack IDs or packs to migrate. If null, all packs will be migrated.\n * @param {object} [options={}] - Additional options to pass along.\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.server=false] - Perform server-side migration\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog=null] - Display migration dialog. Falsy disables.\n * @returns {Promise<void>} - Promise that resolves once all migrations are complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendiums(\n  packs = null,\n  { unlock = false, fast = true, state, server = false, noHooks = false, dialog = null } = {}\n) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"packs\", packs: foundry.utils.deepClone(packs) });\n\n  if (packs === null) packs = [...game.packs];\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Packs\", dialog);\n  if (state) {\n    state.unlock = unlock;\n    state.fast = fast;\n  }\n\n  if (localState) state?.start();\n\n  const tracker = state?.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n\n  tracker?.start();\n  tracker?.setTotal(packs.length);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  for (const pack of packs) {\n    if (!unlock && pack.locked) {\n      console.debug(\"PF1 | Migration |\", pack.name, \"| Ignored!\");\n      tracker?.ignoreEntry(pack);\n      continue;\n    }\n\n    tracker?.startEntry(pack);\n\n    try {\n      const done = await migrateCompendium(pack, { unlock, fast, server, noHooks: true, tracker });\n      if (done === false) {\n        tracker?.ignoreEntry(pack);\n        continue;\n      }\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error\\n`, err);\n      tracker?.recordError({ name: game.i18n.localize(pack.metadata.label), uuid: pack.metadata.id }, err);\n    }\n\n    tracker?.finishEntry(pack);\n  }\n\n  tracker?.finish();\n  if (localState) state?.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"packs\", packs: foundry.utils.deepClone(packs) });\n}\n\n/**\n * Migrate system compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {boolean} [options.fast=false] - Skip unmigrated documents.\n * @param {boolean} [options.server] - Call server-side migration on data. Developers only.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {object} [options.dialog={}] - Migration dialog options. Falsy disables the dialog.\n * @returns {Promise<void>}\n */\nexport async function migrateSystem({ unlock = true, fast = false, server = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"system\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.System\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n  console.debug(\"PF1 | Migration | System migration starting...\");\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"system\");\n\n  await migrateCompendiums(packs, { unlock, fast, server, state, dialog: false, noHooks: true });\n\n  console.debug(\"PF1 | Migration | System migration complete!\");\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"system\" });\n}\n\n/**\n * Migrate module compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.server=true] - Call server-side migration. Developers only.\n * @param {object} [options.dialog={}] - Dialog options. Falsy disables the dialog.\n * @param {MigrationState} [options.state] - Internal only. State tracker instance.\n * @returns {Promise<void>}\n */\nexport async function migrateModules({ unlock = true, server = true, fast = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"modules\" });\n\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Modules\", dialog);\n  state.unlock = unlock;\n  state.fast = fast;\n\n  state.start();\n  console.debug(\"PF1 | Migration | Module pack migration starting...\");\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"module\");\n  await migrateCompendiums(packs, { unlock, fast, server, state, noHooks: true });\n\n  console.debug(\"PF1 | Migration | Module pack migration complete!\");\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"modules\" });\n}\n\n/* -------------------------------------------- */\n\n/**\n * Apply migration rules to all Documents within a single Compendium pack\n *\n * @param {CompendiumCollection|string} pack - Compendium (or its ID) to migrate\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendium will be ignored.\n * @param {boolean} [options.fast=true] - Skip documents marked as migrated for current version.\n * @param {boolean} [options.noHooks=false] - If true, no migration hooks will be fired.\n * @param {MigrationCategory} [options.tracker] - Internal only. Tracker instance.\n * @param {boolean} [options.marker=true] - Add migration marker to migrated documents.\n * @param {boolean} [options.server=false] - Call server-side migration. Developers only.\n * @returns {Promise<void>} - Promise that resolves once migration is complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendium(\n  pack,\n  { unlock = false, fast = true, server = false, marker = true, noHooks = false, tracker } = {}\n) {\n  if (typeof pack === \"string\") {\n    pack = game.packs.get(pack);\n    if (!pack) throw new Error(`Compendium \"${pack}\" not found.`);\n  }\n\n  if (pack.locked && !unlock) {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Locked; Ignoring.`);\n    return false;\n  }\n\n  const docType = pack.metadata.type;\n  if (![\"Actor\", \"Item\", \"Scene\", \"RollTable\", \"Macro\", \"JournalEntry\"].includes(docType)) {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Unsupported document type: ${docType}; Ignoring.`);\n    return false;\n  }\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"pack\", collection: pack });\n\n  // Iterate over compendium entries - applying fine-tuned migration functions\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Starting...`);\n\n  const wasLocked = pack.locked;\n\n  // Server-side migration; only useful for development\n  if (server) {\n    if (wasLocked) await pack.configure({ locked: false });\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Server-side migration starting...`);\n    await pack.migrate();\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Server-side migration done!`);\n    ui.notifications.clear(); // Do aggressive clearing\n  } else {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Skipped server-side migration`);\n  }\n\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Fetching ${pack.index.size} document(s)`);\n\n  /** @type {Actor[]|JournalEntry[]|Item[]} */\n  const documents = await pack.getDocuments();\n\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Building update data...`);\n\n  // Collect updates\n  const updates = [];\n\n  async function applyUpdates() {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Applying update(s) to ${updates.length} document(s)`);\n\n    if (pack.locked) await pack.configure({ locked: false });\n\n    // Commit updates\n    try {\n      await getDocumentClass(docType).updateDocuments(updates, { pack: pack.collection, ...contextMarker() });\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error:`, err);\n      tracker?.recordError({ name: game.i18n.localize(pack.metadata.label), uuid: pack.metadata.id }, err);\n    }\n  }\n\n  while (documents.length) {\n    const document = documents.shift();\n    if (fast && isMigrated(document)) continue;\n\n    try {\n      let updateData;\n      switch (docType) {\n        case \"Item\":\n          updateData = await migrateItemData(document.toObject(), undefined, { item: document });\n          break;\n        case \"Actor\":\n          updateData = await migrateActorData(document.toObject(), undefined, { actor: document });\n          break;\n        case \"Scene\": {\n          await migrateScene(document);\n          break;\n        }\n      }\n\n      if (updateData && !foundry.utils.isEmpty(updateData)) {\n        updateData._id = document.id;\n        updates.push(updateData);\n      }\n    } catch (err) {\n      tracker?.recordError(document, err);\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error!`, err);\n    }\n\n    if (updates.length >= pf1.migrations.UPDATE_CHUNK_SIZE) {\n      await applyUpdates();\n      updates.length = 0; // Clear update array\n    }\n  }\n\n  if (updates.length) {\n    await applyUpdates();\n  } else {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | No updates needed`);\n  }\n\n  if (wasLocked) await pack.configure({ locked: true });\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"pack\", collection: pack });\n\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Complete!`);\n}\n\n/**\n * Migrates world settings.\n */\nasync function _migrateWorldSettings() {}\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers               */\n/* -------------------------------------------- */\n\n/**\n * Migrate data in tokens that is no longer used.\n *\n * @param {object} tokenData Token data\n * @param {object} [options] - Additional options\n * @param {TokenDocument} [options.token] - Token document\n * @param {boolean} [options.marker=true] - Add migration marker\n */\nexport async function migrateTokenData(tokenData, { token, marker = true }) {\n  const flags = tokenData.flags?.pf1 ?? {};\n\n  const updateData = {};\n\n  // Remove obsolete flags\n  if (flags.lowLightVision !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVision\"] = null;\n  }\n  if (flags.lowLightVisionMultiplier !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplier\"] = null;\n  }\n  if (flags.lowLightVisionMultiplierBright !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplierBright\"] = null;\n  }\n\n  // Remove disabled but still in use flags\n  if (flags.disableLowLight === false) {\n    updateData[\"flags.pf1.-=disableLowLight\"] = null;\n  }\n  if (flags.staticSize === false) {\n    updateData[\"flags.pf1.-=staticSize\"] = null;\n  }\n  if (flags.customVisionRules === false) {\n    updateData[\"flags.pf1.-=customVisionRules\"] = null;\n  }\n\n  // Remove data from v9 vision handling\n  // Added with PF1 v9.4\n  if (!flags.customVisionRules) {\n    let visionMode, range;\n    // Attempt to preserve vision range after migration\n    if (tokenData.sight.visionMode !== \"basic\") {\n      if (tokenData.sight.range !== 0) range = 0;\n      visionMode = \"basic\";\n    }\n\n    // HACK: Foundry V13 does not allow deleting these to reset them, so we reset them via temporary document\n    const { saturation, brightness, attenuation, contrast } = TokenDocument.schema.getInitialValue().sight;\n    updateData.sight = { saturation, brightness, attenuation, contrast, range, visionMode };\n\n    if (tokenData.detectionModes?.length) updateData[\"detectionModes\"] = [];\n  }\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return updateData;\n}\n\n/**\n * Migrate token.\n *\n * @param {TokenDocument} token - Token to migrate\n * @returns {Promise<TokenDocument|null>} - Promise to updated document,. or null if no update was done.\n */\nexport async function migrateToken(token) {\n  const tokenData = token.toObject();\n  const updateData = await migrateTokenData(tokenData, { token });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return token.update(foundry.utils.expandObject(updateData), contextMarker());\n  }\n}\n\n/**\n * Migrate singular actor document.\n *\n * @param {Actor} actor - Actor to migrate.\n * @returns {Promise<void>}\n */\nexport async function migrateActor(actor) {\n  console.debug(\"PF1 | Migration | Starting |\", actor.name, actor.uuid);\n\n  const updateData = await migrateActorData(actor.toObject(), actor.token, { actor });\n  if (!foundry.utils.isEmpty(updateData)) {\n    await actor.update(updateData, contextMarker());\n  }\n\n  await migrateActiveEffectsToItems(actor);\n\n  console.debug(\"PF1 | Migration | Finished |\", actor.name, actor.uuid);\n}\n\n/**\n * Migrate active effects from actor to items that should own them instead.\n *\n * Added with PF1 v10\n *\n * @param {ActorPF} actor\n */\nexport async function migrateActiveEffectsToItems(actor) {\n  const p = [];\n\n  for (const ae of actor.effects) {\n    // Ignore all cases that would indicate this is not the old tracker AE\n    // Essentially verify the AE does absolutely nothing on its own, as the old AEs had no good markers.\n    if (ae.statuses.size > 0) continue;\n    if (ae.transfer) continue;\n    if (ae.disabled) continue;\n    if (ae.type !== \"base\") continue;\n    if (!ae.origin) continue;\n    if (ae.changes.length !== 0) continue;\n    if (ae.description.length > 0) continue;\n    if (Object.keys(ae.flags).some((k) => ![\"pf1\"].includes(k))) continue; // Non-PF1 flags\n\n    const item = await fromUuid(ae.origin, { relative: actor });\n    if (!item) continue;\n    if (item.name !== ae.name) continue;\n\n    // Transfer tracker AE to item\n    if (item.effect?.type !== \"buff\") {\n      const aeData = ae.toObject();\n      aeData.transfer = true;\n      aeData.type = \"buff\";\n\n      const p0 = ActiveEffect.implementation.create(aeData, { parent: item });\n      p.push(p0);\n    }\n\n    // Delete old in all cases.\n    // CAUTION: This is technically destructive as the above criteria is NOT foolproof.\n    p.push(ae.delete());\n  }\n\n  await Promise.all(p);\n}\n\n/**\n * Migrate a single Actor document to incorporate latest data model changes\n * Return an Object of updateData to be applied\n *\n * @param {ActorData} actorData   The actor data to derive an update from\n * @param {TokenDocument} token\n * @param {object} [options] - Additional options\n * @param {Actor} [options.actor] - Associated actor document\n * @param {boolean} [options.marker=true] - Add migration marker\n * @returns {object} - The updateData to apply\n */\nexport async function migrateActorData(actorData, token, { actor, marker = true } = {}) {\n  // Ignore module introduced types\n  if (actorData.type.indexOf(\".\") !== -1) return {};\n\n  const updateData = {};\n\n  _migrateActorEncumbrance(actorData, updateData);\n  _migrateActorNoteArrays(actorData, updateData);\n  _migrateActorSpeed(actorData, updateData);\n  _migrateActorSpellbookCL(actorData, updateData);\n  _migrateActorSpellbookSlots(actorData, updateData);\n  _migrateActorSpellbookPrep(actorData, updateData);\n  _migrateActorSpellbookKind(actorData, updateData, actor);\n  _migrateActorConcentration(actorData, updateData);\n  _migrateActorBaseStats(actorData, updateData);\n  _migrateUnusedActorCreatureType(actorData, updateData);\n  _migrateActorSpellbookDCFormula(actorData, updateData);\n  _migrateActorHPAbility(actorData, updateData);\n  _migrateActorCR(actorData, updateData);\n  _migrateAttackAbility(actorData, updateData);\n  _migrateActorDefenseAbility(actorData, updateData);\n  _migrateActorSpellbookUsage(actorData, updateData);\n  _migrateActorNullValues(actorData, updateData);\n  _migrateActorSpellbookDomainSlots(actorData, updateData);\n  _migrateActorStatures(actorData, updateData);\n  _migrateActorInitAbility(actorData, updateData);\n  _migrateActorChangeRevamp(actorData, updateData);\n  _migrateActorCMBRevamp(actorData, updateData);\n  _migrateCarryBonus(actorData, updateData);\n  _migrateBuggedValues(actorData, updateData);\n  _migrateSpellbookUsage(actorData, updateData);\n  _migrateActorHP(actorData, updateData);\n  _migrateActorSenses(actorData, updateData, token);\n  _migrateActorInvaliddSkills(actorData, updateData);\n  _migrateActorSkillRanks(actorData, updateData);\n  _migrateActorSkillJournals(actorData, updateData);\n  _migrateActorSubskillData(actorData, updateData);\n  _migrateActorDRandER(actorData, updateData);\n  _migrateActorTraits(actorData, updateData);\n  _migrateActorProficiencies(actorData, updateData);\n  _migrateActorFlags(actorData, updateData);\n  _migrateActorUnusedData(actorData, updateData);\n\n  // Migrate Owned Items\n  const items = [];\n  for (const item of actorData.items ?? []) {\n    // Migrate the Owned Item\n    const itemData = item instanceof Item ? item.toObject() : item;\n    const itemDoc = actor?.items.get(itemData._id);\n    try {\n      const itemUpdate = await migrateItemData(itemData, actor, { item: itemDoc });\n\n      // Update the Owned Item\n      if (!foundry.utils.isEmpty(itemUpdate)) {\n        itemUpdate._id = itemData._id;\n        items.push(foundry.utils.expandObject(itemUpdate));\n      }\n    } catch (err) {\n      console.error(\n        `Error migrating Item \"${item.name}\" [${itemDoc?.uuid ?? itemData._id}] on actor \"${actorData.name}\" [${\n          actor?.uuid ?? actorData._id\n        }]`\n      );\n      throw new Error(`Item \"${item.name}\" [${itemData._id}] failed migration: ${err.message}`, { cause: err });\n    }\n  }\n  if (items.length > 0) updateData.items = items;\n\n  // Active Effects\n  await _migrateActorActiveEffects(actorData, updateData, actor);\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return foundry.utils.expandObject(updateData);\n}\n\n/* -------------------------------------------- */\n\n/**\n *  Migrate singular item document.\n *\n * @param {Item} item - Item document to update.\n * @returns {Promise<Item|null>} - Promise to updated item document, or null if no update was performed.\n */\nexport async function migrateItem(item) {\n  let updated = false;\n  const updateData = await migrateItemData(item.toObject(), item.actor, { item });\n  if (!foundry.utils.isEmpty(updateData)) {\n    updated = true;\n    await item.update(updateData, contextMarker());\n  }\n\n  await migrateItemActiveEffects(item);\n\n  return updated ? item : null;\n}\n\n/**\n * Migrate active effects on an item.\n *\n * @param {Item} item\n * @returns {Promise<ActiveEffect[]|null>} - Updated active effects, or null if no updates were needed.\n */\nexport async function migrateItemActiveEffects(item) {\n  const itemData = item.toObject();\n\n  const updateData = {};\n  await _migrateItemDataActiveEffects(itemData, updateData);\n\n  if (updateData.effects?.length) {\n    return item.updateEmbeddedDocuments(\"ActiveEffect\", updateData.effects);\n  }\n\n  return null;\n}\n\n/**\n * Migrate active effects in item data\n *\n * @internal\n * @remarks\n *  - Exposed to allow system tests to run on it.\n * @param {object} itemData - Item data\n * @param {object} updateData - Object to hold update data\n */\nexport async function _migrateItemDataActiveEffects(itemData, updateData) {\n  const { effects = [] } = itemData;\n\n  const updates = [];\n  for (const effect of effects) {\n    let updateData = {};\n\n    // Convert method of tracker identification\n    if (itemData.type === \"buff\") {\n      if (effect.flags?.pf1?.tracker && effect.type === \"base\") {\n        updateData.type = \"buff\";\n        updateData[\"flags.pf1.-=tracker\"] = null;\n      }\n    }\n\n    const duration = effect.flags?.pf1?.duration;\n    if (duration) {\n      // Transfer initiative value to system data\n      const init = effect.flags?.pf1?.duration?.initiative;\n      if (init !== undefined) {\n        if (effect.system?.initiative === undefined) updateData[\"system.initiative\"] = init;\n      }\n\n      // End timing\n      const endTiminig = effect.flags?.pf1?.duration?.end;\n      if (endTiminig !== undefined) {\n        if (!effect.system?.end) updateData[\"system.end\"] = endTiminig;\n      }\n\n      updateData[\"flags.pf1.-=duration\"] = null;\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      updateData._id = effect._id;\n\n      updateData = foundry.utils.expandObject(updateData);\n      conformTypeUpdate(updateData, effect);\n\n      updates.push(updateData);\n    }\n  }\n\n  if (updates.length) {\n    updateData.effects = updates;\n  }\n}\n\n/**\n * Migrate a single Item document to incorporate latest data model changes\n *\n * @param {object} itemData    The item data to derive an update from\n * @param {Actor} actor - Parent actor document\n * @param {object} [options] - Additional options\n * @param {number} [options._depth=0] - Internal only. Recursion depth tracking.\n * @param {Item} [options.item] - Item document\n * @param {boolean} [options.marker=true] - Add migration marker\n * @returns {object} - The updateData to apply\n */\nexport async function migrateItemData(itemData, actor = null, { item, _depth = 0, marker = true } = {}) {\n  const updateData = {};\n\n  // Migrate data to system\n  if (itemData.system == null && itemData.data != null) {\n    itemData = foundry.utils.deepClone(itemData);\n    itemData.system = itemData.data;\n    delete itemData.data;\n  }\n\n  // Ignore module introduced types\n  if (!Object.keys(game.system.documentTypes.Item).includes(itemData.type)) return {};\n\n  _migrateItemFlags(itemData, updateData);\n  _migrateItemArrayTypes(itemData, updateData);\n  _migrateFlagsArrayToObject(itemData, updateData);\n  _migrateWeaponImprovised(itemData, updateData);\n  _migrateItemSpellDescription(itemData, updateData);\n  _migrateClassDynamics(itemData, updateData);\n  _migrateClassType(itemData, updateData);\n  _migrateClassCasting(itemData, updateData);\n  _migrateSpellDivineFocus(itemData, updateData);\n  _migrateWeaponCategories(itemData, updateData);\n  _migrateArmorCategories(itemData, updateData);\n  _migrateArmorMaxDex(itemData, updateData);\n  _migrateArmorACP(itemData, updateData);\n  _migrateItemSize(itemData, updateData);\n  _migrateItemFeatAbilityTypes(itemData, updateData);\n  _migrateClassLevels(itemData, updateData);\n  _migrateSavingThrowTypes(itemData, updateData);\n  _migrateCR(itemData, updateData);\n  _migrateItemChanges(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemContextNotes(itemData, updateData);\n  _migrateEquipmentSize(itemData, updateData);\n  _migrateSpellCosts(itemData, updateData);\n  _migrateSpellPreparation(itemData, updateData, { item });\n  _migrateLootEquip(itemData, updateData);\n  await _migrateItemLinks(itemData, updateData, { item, actor });\n  _migrateItemProficiencies(itemData, updateData);\n  _migrateItemNotes(itemData, updateData);\n  _migrateScriptCalls(itemData, updateData);\n  _migrateItemActionToActions(itemData, updateData, { item, actor });\n  _migrateItemChargeCost(itemData, updateData);\n  _migrateItemLimitedUses(itemData, updateData);\n  _migrateItemWeight(itemData, updateData);\n  _migrateItemHealth(itemData, updateData);\n  _migrateContainerReduction(itemData, updateData);\n  _migrateContainerPrice(itemData, updateData);\n  _migrateItemType(itemData, updateData);\n  _migrateItemLearnedAt(itemData, updateData);\n  _migrateItemTuples(itemData, updateData);\n  _migrateEquipmentCategories(itemData, updateData);\n  _migrateSpellDescriptors(itemData, updateData);\n  _migrateItemTraits(itemData, updateData);\n  _migrateRaceItemCreatureType(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemMaterials(itemData, updateData);\n  _migrateSpellSubschool(itemData, updateData);\n  _migrateItemDefaultAmmo(itemData, updateData);\n  _migrateItemDurability(itemData, updateData);\n  _migrateItemHeld(itemData, updateData);\n  _migrateItemUnusedData(itemData, updateData);\n\n  // Migrate action data\n  const alreadyHasActions = itemData.system.actions instanceof Array && itemData.system.actions.length > 0;\n  const itemActionData = alreadyHasActions ? itemData.system.actions : updateData[\"system.actions\"];\n  if (itemActionData instanceof Array) {\n    const newActionData = itemActionData.map((action) => migrateItemActionData(action, updateData, { itemData, item }));\n\n    const additions = foundry.utils.diffObject(itemActionData, newActionData);\n    const deletions = foundry.utils.diffObject(newActionData, itemActionData);\n    // Update only if something changed. Bi-directional testing for detecting deletions.\n    if (!foundry.utils.isEmpty(additions) || !foundry.utils.isEmpty(deletions)) {\n      updateData[\"system.actions\"] = newActionData;\n    }\n  }\n\n  // Migrate container .inventoryItems array to .items map\n  // Introduced with PF1 v10\n  if (itemData.system?.inventoryItems instanceof Array) {\n    updateData[\"system.items\"] = {};\n    for (const sitem of itemData.system.inventoryItems) {\n      sitem._id ||= foundry.utils.randomID(16);\n\n      // Deal with corrupt items or v9 or older items\n      sitem.system ??= {};\n      try {\n        if (\"data\" in sitem) {\n          sitem.system = foundry.utils.mergeObject(sitem.data, sitem.system, { inplace: false });\n          delete sitem.data;\n        }\n\n        const subItem = new Item.implementation(sitem, { strict: false });\n\n        const itemUpdateData = await migrateItemData(subItem.toObject(), actor, { _depth: _depth + 1 });\n        subItem.updateSource(itemUpdateData);\n\n        updateData[\"system.items\"][sitem._id] = subItem.toObject();\n      } catch (err) {\n        console.error(\"Failed to migrate container content:\", { item: sitem, parent: item, actor });\n      }\n    }\n\n    updateData[\"system.-=inventoryItems\"] = null;\n  }\n\n  // Migrate container items\n  const migrateContainerItems = async (items) => {\n    if (!items) return;\n    for (const [itemId, itemData] of Object.entries(items)) {\n      try {\n        // Basic validation\n        const subItem = new Item.implementation(itemData, { strict: false });\n\n        // Migrate\n        const subUpdate = await migrateItemData(subItem.toObject(), actor, { item: subItem, _depth: _depth + 1 });\n\n        if (!foundry.utils.isEmpty(subUpdate)) {\n          const diff = subItem.updateSource(subUpdate);\n          updateData[\"system.items\"] ??= {};\n          updateData[\"system.items\"][itemId] = diff;\n        }\n      } catch (err) {\n        console.error(\"PF1 | Migration | Error\", err, item);\n      }\n    }\n  };\n\n  await migrateContainerItems(itemData.system.items);\n\n  await _migrateItemDataActiveEffects(itemData, updateData);\n\n  // Record migrated version\n  if (marker && !foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  // Return the migrated update data\n  return updateData;\n}\n\n// Added with PF1 v10\nfunction _migrateActionLimitedUses(action, itemData) {\n  // Only physical items can be single use\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (action.uses?.self?.per === \"single\") {\n      action.uses.self.per = \"charges\";\n      action.uses.self.maxFormula = \"1\";\n    }\n  }\n}\n\n/**\n * Migrates a single action within an item.\n *\n * @param {object} actionData - The action's data, which also serves as the update data to pass on.\n * @param {object} updateData - Item update data\n * @param {object} [options] - Additional options\n * @param {Item} [options.item=null] - Parent item document this action is in.\n * @param {object} options.itemData - Parent item data\n * @returns {object} The resulting action data.\n */\nexport function migrateItemActionData(actionData, updateData, { itemData, item = null } = {}) {\n  actionData = foundry.utils.deepClone(actionData);\n\n  const action = item?.actions?.get(actionData._id);\n\n  // Migrations that must be done before datamodel cleans the needed data out\n  _migrateActionDamageType(actionData, itemData);\n  _migrateActionLimitedUses(actionData, itemData);\n  _migrateActionExtraAttacks(actionData, itemData);\n  _migrateActionAmmunitionUsage(actionData, itemData, updateData);\n  _migrateActionDuration(actionData, itemData);\n  _migrateActionMaterials(actionData, itemData);\n\n  actionData = new pf1.components.ItemAction(actionData, { strict: false }).toObject(true, true);\n\n  _migrateActionConditionals(actionData, itemData, { action });\n\n  // Return the migrated update data\n  return actionData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate singular scene document.\n *\n * @param {Scene} scene - Scene document to update.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @param {boolean} [options.fast] - Skip already migrated\n * @returns {Promise<void>}\n */\nexport async function migrateScene(scene, { fast = true, state, tracker } = {}) {\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Starting...`);\n  try {\n    await migrateSceneTokens(scene, { fast, state, tracker });\n    await migrateSceneActors(scene, { fast, state, tracker });\n\n    // Mark last migrated version\n    if (game.user.isGM) await scene.setFlag(\"pf1\", \"migration\", game.system.version);\n  } catch (err) {\n    tracker?.recordError(scene, err);\n    console.error(`PF1 | Migration | Scene: ${scene.name} | Error`, err);\n  }\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Complete!`);\n}\n\n/**\n * Migrate tokens in a single scene.\n *\n * @param {Scene} scene - The Scene to Update\n * @param {object} [options] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n */\nexport async function migrateSceneTokens(scene, { fast = true, state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (!token.isOwner) continue;\n\n    if (fast && isMigrated(token)) continue;\n\n    try {\n      await migrateToken(token);\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/**\n * Migrate unlinked actors on a single scene.\n *\n * @param {Scene} scene - Scene to migrate actors in.\n * @param {object} [options] - Additional options\n * @param {boolean} [options.fast=true] - Ignore already migrated documents.\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateSceneActors(scene, { fast = true, state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (token.isLinked) continue;\n    const actor = token.actor;\n    if (!actor?.isOwner) continue;\n\n    if (fast && isMigrated(actor)) continue;\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), token, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        if (!(updateData.items?.length > 0)) delete updateData.items;\n        if (!(updateData.effects?.length > 0)) delete updateData.effects;\n        if (!foundry.utils.isEmpty(updateData)) await actor.update(updateData, contextMarker());\n      }\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/* -------------------------------------------- */\n\nfunction _migrateActorEncumbrance(ent, updateData) {\n  const arr = {\n    \"system.attributes.encumbrance.level\": \"attributes.encumbrance.-=level\",\n    \"system.attributes.encumbrance.levels.light\": \"attributes.encumbrance.levels.-=light\",\n    \"system.attributes.encumbrance.levels.medium\": \"attributes.encumbrance.levels.-=medium\",\n    \"system.attributes.encumbrance.levels.heavy\": \"attributes.encumbrance.levels.-=heavy\",\n    \"system.attributes.encumbrance.levels.carry\": \"attributes.encumbrance.levels.-=carry\",\n    \"system.attributes.encumbrance.levels.drag\": \"attributes.encumbrance.levels.-=drag\",\n    \"system.attributes.encumbrance.carriedWeight\": \"attributes.encumbrance.-=carriedWeight\",\n  };\n  for (const [key, updateKey] of Object.entries(arr)) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (value !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  }\n}\n\n/**\n * Convert array based flags into object.\n *\n * @param ent\n * @param updateData\n */\nfunction _migrateFlagsArrayToObject(ent, updateData) {\n  const flags = ent.system.flags;\n  if (!flags) return;\n  const bflags = flags.boolean,\n    dflags = flags.dictionary;\n\n  if (Array.isArray(bflags)) {\n    // Compatibility with old data: Convert old array into actual dictionary.\n    updateData[\"system.flags.boolean\"] = bflags.reduce((flags, flag) => {\n      flags[flag] = true;\n      return flags;\n    }, {});\n  }\n\n  if (Array.isArray(dflags)) {\n    updateData[\"system.flags.dictionary\"] = dflags.reduce((flags, [key, value]) => {\n      flags[key] = value;\n      return flags;\n    }, {});\n  }\n}\n\nfunction _migrateActorNoteArrays(ent, updateData) {\n  const list = [\"system.attributes.acNotes\", \"system.attributes.cmdNotes\", \"system.attributes.srNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && value instanceof Array) {\n      updateData[k] = value.join(\"\\n\");\n    }\n  }\n}\n\nfunction _migrateActorSpeed(ent, updateData) {\n  const arr = [\n    \"attributes.speed.land\",\n    \"attributes.speed.climb\",\n    \"attributes.speed.swim\",\n    \"attributes.speed.fly\",\n    \"attributes.speed.burrow\",\n  ];\n  for (const k of arr) {\n    let value = foundry.utils.getProperty(ent.system, k);\n    if (typeof value === \"string\") value = parseInt(value);\n    if (typeof value === \"number\") {\n      updateData[`system.${k}.base`] = value;\n    } else if (value === null) {\n      updateData[`system.${k}.base`] = 0;\n    } else if (value?.total !== undefined) {\n      // Delete derived data\n      updateData[`system.${k}.-=total`] = null;\n    }\n\n    // Add maneuverability\n    if (k === \"attributes.speed.fly\" && foundry.utils.getProperty(ent.system, `${k}.maneuverability`) === undefined) {\n      updateData[`system.${k}.maneuverability`] = \"average\";\n    }\n  }\n\n  // Remove bad fly maneuverability entry if it exists\n  if (ent.system.attributes?.speed?.flyManeuverability !== undefined) {\n    updateData[\"system.attributes.speed.-=flyManeuverability\"] = null;\n  }\n}\n\nfunction _migrateActorSpellbookSlots(ent, updateData) {\n  for (const spellbookSlot of Object.keys(\n    foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (\n      foundry.utils.getProperty(ent.system, `attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`) == null\n    ) {\n      updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`] = true;\n    }\n\n    for (let a = 0; a < 10; a++) {\n      const baseKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.base`;\n      const base = foundry.utils.getProperty(ent, baseKey);\n\n      if (base === undefined) {\n        const maxKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.max`;\n        const max = foundry.utils.getProperty(ent, maxKey);\n        if (typeof max === \"number\" && max > 0) {\n          updateData[baseKey] = max.toString();\n        }\n      } else {\n        const newBase = parseInt(base);\n        if (newBase > 0) {\n          if (newBase !== base) updateData[baseKey] = newBase;\n        } else {\n          // Remove pointless default value not present in new actors either\n          updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.-=base`] = null;\n        }\n      }\n    }\n  }\n}\n\n// Remove inconsistently used .spontaneous permanently recorded boolean\n// Added with PF1 v10\nfunction _migrateActorSpellbookPrep(actorData, updateData) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    const wasSpontaneous = book.spontaneous;\n    if (wasSpontaneous === undefined) continue;\n\n    const usesAuto = book.autoSpellLevelCalculation ?? false;\n    const usesSpellpoints = book.spellPoints.useSystem === true;\n    if (!usesAuto && !usesSpellpoints) {\n      // Set prep type to match old spontaneous toggle\n      updateData[`system.attributes.spells.spellbooks.${bookId}.spellPreparationMode`] = wasSpontaneous\n        ? \"spontaneous\"\n        : \"prepared\";\n\n      // Set progression type to high to match old behaviour\n      updateData[`system.attributes.spells.spellbooks.${bookId}.casterType`] = \"high\";\n    }\n\n    updateData[`system.attributes.spells.spellbooks.${bookId}.-=spontaneous`] = null;\n  }\n}\n\n/**\n * Migrate spellbook kind (arcane, divine, psychic, ...)\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} actor - Actor document\n */\nfunction _migrateActorSpellbookKind(actorData, updateData, actor) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (book.kind === undefined && book.inUse) {\n      // Attempt to get data from class\n      const castingClass =\n        !!book.class && book.class !== \"_hd\" ? actor.itemTypes.class.find((i) => i.system.tag === book.class) : null;\n      let kind = castingClass?.system.casting?.spells;\n\n      if (!kind) {\n        // Attempt to determine kind without access to source class\n        kind = \"arcane\"; // Default to arcane if all else fails\n        if (book.arcaneSpellFailure) kind = \"arcane\";\n        else if (book.psychic) kind = \"psychic\";\n        else if (book.spellPreparationMode === \"prepared\" && book.ability === \"int\") kind = \"alchemy\";\n        else if (book.class !== \"_hd\") kind = \"divine\";\n      }\n\n      updateData[`system.attributes.spells.spellbooks.${bookId}.kind`] = kind;\n    }\n  }\n}\n\nfunction _migrateActorBaseStats(actorData, updateData) {\n  const deleteEntries = {\n    \"system.attributes.hd.base\": \"system.attributes.hd.-=base\",\n    \"system.attributes.savingThrows.fort.value\": \"system.attributes.savingThrows.fort.-=value\",\n    \"system.attributes.savingThrows.ref.value\": \"system.attributes.savingThrows.ref.-=value\",\n    \"system.attributes.savingThrows.will.value\": \"system.attributes.savingThrows.will.-=value\",\n  };\n\n  for (const [path, dPath] of Object.entries(deleteEntries)) {\n    if (foundry.utils.getProperty(actorData, path) !== undefined) {\n      updateData[dPath] = null;\n    }\n  }\n\n  // Delete HP base if it's not non-zero or actor has any classes\n  if (actorData.system.attributes?.hp?.base !== undefined) {\n    if (!(actorData.system.attributes?.hp?.base > 0) || actorData.items.some((i) => i.type === \"class\")) {\n      updateData[\"system.attributes.hp.-=base\"] = null;\n    }\n  }\n}\n\nfunction _migrateUnusedActorCreatureType(ent, updateData) {\n  const type = foundry.utils.getProperty(ent.system, \"attributes.creatureType\");\n  if (type != undefined) updateData[\"system.attributes.-=creatureType\"] = null;\n}\n\nfunction _migrateActorSpellbookDCFormula(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.baseDCFormula`;\n    const curFormula = foundry.utils.getProperty(ent, key);\n    if (!curFormula) updateData[key] = \"10 + @sl + @ablMod\";\n  }\n}\n\nfunction _migrateActorSpellbookName(ent, updateData) {\n  const spellbooks = Object.entries(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const [bookId, book] of spellbooks) {\n    if (book.altName !== undefined) {\n      const key = `system.attributes.spells.spellbooks.${bookId}`;\n      updateData[`${key}.-=altName`] = null;\n      if (book.altName.length) updateData[`${key}.name`] = book.altName;\n    }\n  }\n}\n\nfunction _migrateActorSpellbookCL(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.cl`;\n    const curBase = parseInt(foundry.utils.getProperty(ent, key + \".base\"));\n    const curFormula = foundry.utils.getProperty(ent, key + \".formula\");\n    if (curBase > 0) {\n      if (curFormula.length > 0) updateData[`${key}.formula`] = curFormula + \" + \" + curBase;\n      else updateData[`${key}.formula`] = curFormula + curBase;\n      updateData[`${key}.base`] = 0;\n    }\n  }\n}\n\nfunction _migrateActorConcentration(ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const k of spellbooks) {\n    // Delete unused .concentration from old actors\n    const key = `system.attributes.spells.spellbooks.${k}`;\n    const oldValue = foundry.utils.getProperty(ent, `${key}.concentration`);\n    const isString = typeof oldValue === \"string\";\n    if (Number.isFinite(oldValue) || isString) updateData[`${key}.-=concentration`] = null;\n    if (isString) {\n      // Assume erroneous bonus formula location and combine it with existing bonus formula.\n      const formulaKey = `${key}.concentrationFormula`;\n      const formula = [oldValue];\n      formula.push(foundry.utils.getProperty(ent, formulaKey) || \"\");\n      updateData[formulaKey] = formula.filter((f) => f !== 0 && f?.toString().trim().length).join(\" + \");\n    }\n  }\n}\n\nfunction _migrateActorHPAbility(ent, updateData) {\n  // Set HP ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.hpAbility\") === undefined) {\n    updateData[\"system.attributes.hpAbility\"] = \"con\";\n  }\n\n  // Set Fortitude save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.fort.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.fort.ability\"] = \"con\";\n  }\n\n  // Set Reflex save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.ref.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.ref.ability\"] = \"dex\";\n  }\n\n  // Set Will save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.will.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.will.ability\"] = \"wis\";\n  }\n}\n\nfunction _migrateItemArrayTypes(ent, updateData) {\n  const conditionals = ent.system.conditionals;\n  if (conditionals != null && !(conditionals instanceof Array)) {\n    updateData[\"system.conditionals\"] = [];\n  }\n\n  const contextNotes = ent.system.contextNotes;\n  if (contextNotes != null && !(contextNotes instanceof Array)) {\n    if (contextNotes instanceof Object) updateData[\"system.contextNotes\"] = Object.values(contextNotes);\n    else updateData[\"system.contextNotes\"] = [];\n  }\n}\n\nfunction _migrateWeaponImprovised(ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  const value = foundry.utils.getProperty(ent.system, \"weaponType\");\n  if (value === \"improv\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.properties.imp\"] = true;\n  }\n}\n\n// Migrates the weird .shortDescription back to .description.value\n// Added with PF1 v10\nfunction _migrateItemSpellDescription(itemData, updateData) {\n  if (itemData.type !== \"spell\") return;\n\n  if (itemData.system.shortDescription) {\n    updateData[\"system.-=shortDescription\"] = null;\n\n    // If description.value exists, it's the older oversized pre-rendered version that is unwanted\n    updateData[\"system.description.value\"] = itemData.system.shortDescription;\n  }\n}\n\nfunction _migrateSpellDivineFocus(item, updateData) {\n  if (item.type !== \"spell\") return;\n\n  const df = foundry.utils.getProperty(item.system, \"components.divineFocus\");\n  if (typeof df === \"boolean\") updateData[\"system.components.divineFocus\"] = Number(df);\n}\n\nfunction _migrateClassDynamics(ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  const bab = ent.system.bab;\n  if (typeof bab === \"number\") updateData[\"system.bab\"] = \"low\";\n\n  const stKeys = [\"system.savingThrows.fort.value\", \"system.savingThrows.ref.value\", \"system.savingThrows.will.value\"];\n  for (const key of stKeys) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (typeof value === \"number\") updateData[key] = \"low\";\n  }\n}\n\nfunction _migrateClassType(ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  if (ent.system.classType !== undefined && ent.system.subType === undefined) {\n    updateData[\"system.subType\"] = \"base\";\n  }\n}\n\n// Added with PF1 v10\nfunction _migrateClassCasting(itemData, updateData) {\n  const casting = itemData.system?.casting;\n  if (!casting) return;\n\n  if (!casting.type) {\n    updateData[\"system.-=casting\"] = null;\n    return;\n  }\n\n  // domainSlots -> domain\n  if (casting.domainSlots !== undefined) {\n    updateData[\"system.casting.domain\"] = casting.domain ?? casting.domainSlots ?? 1;\n    updateData[\"system.casting.-=domainSlots\"] = null;\n  }\n}\n\nfunction _migrateWeaponCategories(ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  // Change category\n  const type = ent.system.weaponType;\n  if (type === \"misc\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"other\";\n  } else if (type === \"splash\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"splash\";\n  }\n\n  const changeProp = [\"simple\", \"martial\", \"exotic\"].includes(type);\n  if (changeProp && ent.system.weaponSubtype == null) {\n    updateData[\"system.weaponSubtype\"] = \"1h\";\n  }\n\n  // Change light property\n  const lgt = foundry.utils.getProperty(ent.system, \"properties.lgt\");\n  if (lgt != null) {\n    updateData[\"system.properties.-=lgt\"] = null;\n    if (lgt === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"light\";\n    }\n  }\n\n  // Change two-handed property\n  const two = foundry.utils.getProperty(ent.system, \"properties.two\");\n  if (two != null) {\n    updateData[\"system.properties.-=two\"] = null;\n    if (two === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"2h\";\n    }\n  }\n\n  // Change melee property\n  const melee = foundry.utils.getProperty(ent.system, \"weaponData.isMelee\");\n  if (melee != null) {\n    updateData[\"system.weaponData.-=isMelee\"] = null;\n    if (melee === false && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"ranged\";\n    }\n  }\n}\n\nfunction _migrateArmorCategories(ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const oldType = foundry.utils.getProperty(ent.system, \"armor.type\");\n  if (oldType == null) return;\n\n  if (oldType === \"clothing\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"clothing\";\n  } else if (oldType === \"shield\") {\n    updateData[\"system.equipmentType\"] = \"shield\";\n    updateData[\"system.equipmentSubtype\"] = \"lightShield\";\n  } else if (oldType === \"misc\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"wondrous\";\n  } else if ([\"light\", \"medium\", \"heavy\"].includes(oldType)) {\n    updateData[\"system.equipmentType\"] = \"armor\";\n    updateData[\"system.equipmentSubtype\"] = `${oldType}Armor`;\n  }\n\n  updateData[\"system.armor.-=type\"] = null;\n}\n\n/**\n * Convert string armor max dex to number.\n *\n * Introduced with PF1 v10\n *\n * @param item\n * @param updateData\n */\nfunction _migrateArmorMaxDex(item, updateData) {\n  if (item.type !== \"equipment\") return;\n\n  let maxDex = item.system.armor?.dex;\n  // Skip valid states\n  if (maxDex === undefined || maxDex === null) return;\n  if (typeof maxDex === \"number\") return;\n\n  // Convert string to number\n  maxDex = parseInt(maxDex);\n  if (Number.isInteger(maxDex)) {\n    updateData[\"system.armor.dex\"] = maxDex;\n  }\n  // Assume corrupt value otherwise\n  else {\n    updateData[\"system.armor.-=dex\"] = null;\n  }\n}\n\n// Introduced with PF1 v11.4\nfunction _migrateArmorACP(item, updateData) {\n  const acp = parseInt(item.system.armor?.acp ?? 0);\n\n  // Fix negative ACP\n  if (acp < 0) {\n    updateData[\"system.armor.acp\"] = Math.floor(Math.abs(acp));\n  }\n}\n\nfunction _migrateEquipmentCategories(item, updateData) {\n  if (item.type !== \"equipment\") return;\n\n  const subtype = updateData[\"system.subType\"] ?? item.system.subType;\n  if (subtype !== \"misc\") return;\n\n  switch (item.system.equipmentSubtype) {\n    case \"wondrous\":\n      updateData[\"system.subType\"] = \"wondrous\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"clothing\":\n      updateData[\"system.subType\"] = \"clothing\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"other\":\n      updateData[\"system.subType\"] = \"other\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n  }\n}\n\nfunction _migrateSpellDescriptors(item, updateData) {\n  if (item.type !== \"spell\" || item.system.types === undefined) return;\n\n  const current = item.system.types\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .filter((x) => x)\n    .map((x) => x.trim());\n\n  const value = [];\n  const custom = [];\n  const entries = Object.entries(pf1.config.spellDescriptors);\n  current.forEach((c) => {\n    const exists = entries.find(([k, v]) => c.toLowerCase() === k.toLowerCase() || c.toLowerCase() === v.toLowerCase());\n    if (exists) {\n      value.push(exists[0]);\n    } else {\n      custom.push(c);\n    }\n  });\n\n  updateData[\"system.-=types\"] = null;\n  updateData[\"system.descriptors.value\"] = value;\n  updateData[\"system.descriptors.custom\"] = custom.join(\"; \");\n}\n\nfunction _migrateSpellSubschool(item, updateData) {\n  if (item.type !== \"spell\" || item.system.subschool === undefined || typeof item.system.subschool !== \"string\") return;\n\n  // Split current custom string into options\n  const customSubschools = item.system.subschool\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .map((x) => x.trim())\n    .filter((x) => x);\n\n  // Attempt to parse custom entries\n  const values = [];\n  const entries = Object.entries(pf1.config.spellSubschools);\n  ssLoop: for (const subschool of customSubschools) {\n    for (const [ssId, ssLabel] of entries) {\n      if (subschool in pf1.config.spellSubschools) {\n        values.push(ssId);\n        continue ssLoop;\n      }\n      const re = new RegExp(ssLabel, \"i\");\n      if (re.test(subschool)) {\n        values.push(ssId);\n        continue ssLoop;\n      }\n    }\n    values.push(subschool);\n  }\n\n  updateData[\"system.subschool\"] = values;\n}\n\nfunction _migrateItemDefaultAmmo(itemData, updateData) {\n  const ammoId = itemData.flags?.pf1?.defaultAmmo;\n  if (!ammoId) return;\n  if (!itemData.system?.ammo?.default) {\n    updateData[\"system.ammo.default\"] = ammoId;\n  }\n  updateData[\"flags.pf1.-=defaultAmmo\"] = null;\n}\n\nfunction _migrateRaceItemCreatureType(itemData, updateData) {\n  if (itemData.type !== \"race\") return;\n\n  if (itemData.system.creatureType) {\n    if (!itemData.system.creatureTypes?.length) updateData[\"system.creatureTypes\"] = [itemData.system.creatureType];\n    updateData[\"system.-=creatureType\"] = null;\n  }\n\n  if (Array.isArray(itemData.system.subTypes)) {\n    const subtypes = [];\n    const oldTypes = itemData.system.subTypes.flat();\n    for (const subtype of oldTypes) {\n      if (!subtype) continue; // Should not happen\n      const lowerCaseKey = subtype.charAt(0).toLowerCase() + subtype.slice(1).replace(\" \", \"\");\n      if (lowerCaseKey in pf1.config.creatureSubtypes) {\n        subtypes.push(lowerCaseKey);\n      } else {\n        subtypes.push(subtype);\n      }\n    }\n    if (!itemData.system.creatureSubtypes?.length) updateData[\"system.creatureSubtypes\"] = subtypes;\n    updateData[\"system.-=subTypes\"] = null;\n  }\n}\n\nfunction _migrateItemDurability(itemData, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) return;\n\n  const max = itemData.system?.hp?.max;\n  if (max !== undefined) {\n    if (itemData.system?.hp?.base === undefined) {\n      updateData[\"system.hp.base\"] = Number(max ?? 10);\n    }\n    updateData[\"system.hp.-=max\"] = null;\n  }\n  const value = itemData.system?.hp?.value;\n  if (value !== undefined) {\n    if (itemData.system?.hp?.offset === undefined) {\n      // Attempt to provide offset from old data\n      updateData[\"system.hp.offset\"] = max > 0 ? value - max : 0;\n    }\n    updateData[\"system.hp.-=value\"] = null;\n  }\n}\n\nfunction _migrateItemSize(ent, updateData) {\n  // Convert custom sizing in weapons\n  if (ent.type === \"weapon\") {\n    const wdSize = foundry.utils.getProperty(ent.system, \"weaponData.size\");\n    if (wdSize) {\n      // Move old\n      updateData[\"system.size\"] = wdSize;\n      updateData[\"system.weaponData.-=size\"] = null;\n      return;\n    }\n  }\n\n  const oldSize = ent.system.size;\n  if ([\"spell\", \"class\", \"buff\", \"feat\"].includes(ent.type)) {\n    // Remove size from abstract items\n    if (oldSize !== undefined) {\n      updateData[\"system.-=size\"] = null;\n    }\n  } else {\n    // Add default size to everything else if not present\n    if (oldSize === undefined) {\n      updateData[\"system.size\"] = \"med\";\n    }\n  }\n}\n\nfunction _migrateItemFeatAbilityTypes(itemData, updateData) {\n  if (itemData.type !== \"feat\") return;\n\n  const type = itemData.system.abilityType;\n  // Convert \"none\" and other invalid values (e.g. null or \"n/a\") to \"na\"\n  // Added with PF1 v10\n  if (pf1.config.abilityTypes[type] === undefined) {\n    updateData[\"system.abilityType\"] = \"na\";\n  }\n}\n\nfunction _migrateClassLevels(ent, updateData) {\n  const level = ent.system.levels;\n  if (typeof level === \"number\" && ent.system.level == null) {\n    updateData[\"system.level\"] = level;\n    updateData[\"system.-=levels\"] = null;\n  }\n}\n\nfunction _migrateSavingThrowTypes(ent, updateData) {\n  if (\n    foundry.utils.getProperty(ent.system, \"save.type\") == null &&\n    typeof foundry.utils.getProperty(ent.system, \"save.description\") === \"string\"\n  ) {\n    const desc = foundry.utils.getProperty(ent.system, \"save.description\");\n    if (desc.match(/REF/i)) updateData[\"system.save.type\"] = \"ref\";\n    else if (desc.match(/FORT/i)) updateData[\"system.save.type\"] = \"fort\";\n    else if (desc.match(/WILL/i)) updateData[\"system.save.type\"] = \"will\";\n  }\n}\n\nfunction _migrateCR(ent, updateData) {\n  // Migrate CR offset\n  const crOffset = ent.system.crOffset;\n  if (typeof crOffset === \"number\") {\n    updateData[\"system.crOffset\"] = crOffset.toString();\n  }\n}\n\nfunction _migrateItemChanges(itemData, updateData) {\n  // Migrate changes\n  const changes = itemData.system.changes;\n  if (Array.isArray(changes)) {\n    const newChanges = [];\n    for (const c of changes) {\n      let cd;\n      if (Array.isArray(c)) {\n        cd = {\n          formula: c[0],\n          target: c[1],\n          subTarget: c[2],\n          type: c[3],\n        };\n      } else {\n        cd = foundry.utils.deepClone(c); // Avoid mutating source data so diff works properly\n      }\n      // Value should not exist, yet it was added previously by using derived data for updates.\n      delete cd.value;\n\n      newChanges.push(new pf1.components.ItemChange(cd, { strict: false }).toObject());\n    }\n\n    // Alter the changes list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(changes, newChanges)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newChanges, changes))\n    ) {\n      updateData[\"system.changes\"] = newChanges;\n    }\n  }\n\n  /** @type {object[]} */\n  const oldChanges = updateData[\"system.changes\"] ?? itemData.system?.changes ?? [];\n  const newChanges = [];\n  let updateChanges = false;\n  for (const change of oldChanges) {\n    const cd = new pf1.components.ItemChange(foundry.utils.deepClone(change), { strict: false }).toObject(true, true);\n    const diff = foundry.utils.diffObject(change, cd);\n    if (!foundry.utils.isEmpty(diff)) {\n      updateChanges = true;\n    }\n\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/\\.subSkills\\./.test(cd.target)) {\n      cd.target = cd.target.replace(\".subSkills.\", \".\");\n      updateChanges = true;\n    }\n    // Remove use of penalty bonus type\n    // @since PF1 v10\n    if (cd.type === \"penalty\") {\n      // Convert the special ability score case to specific target\n      if ([\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"].includes(cd.target)) {\n        cd.target = `${cd.target}Pen`;\n      }\n      // Convert all to untyped changes\n      cd.type = \"untyped\";\n      updateChanges = true;\n    }\n    newChanges.push(cd);\n  }\n  if (updateChanges) {\n    updateData[\"system.changes\"] = newChanges;\n  }\n}\n\nfunction _migrateItemContextNotes(itemData, updateData) {\n  // Migrate context notes\n  const oldNotes = itemData.system.contextNotes;\n  if (Array.isArray(oldNotes) && oldNotes?.length > 0) {\n    const newNotes = [];\n\n    for (const oldNote of oldNotes) {\n      let newNote = foundry.utils.deepClone(oldNote);\n\n      // Transform old tuple.\n      if (Array.isArray(oldNote)) {\n        newNote = { text: oldNote[0], target: oldNote[1], subTarget: oldNote[2] };\n      }\n\n      newNote = new pf1.components.ContextNote(newNote).toObject();\n\n      newNotes.push(newNote);\n    }\n\n    // Alter the context note list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(oldNotes, newNotes)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newNotes, oldNotes))\n    ) {\n      updateData[\"system.contextNotes\"] = newNotes;\n    }\n  }\n\n  const notes = updateData[\"system.contextNotes\"] ?? oldNotes ?? [];\n  let updateNotes = false;\n  const newNotes = [];\n  for (const note of notes) {\n    const newNote = { ...note };\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/^skill\\..+\\.subSkills\\..+$/.test(note.target)) {\n      newNote.target = note.target.replace(\".subSkills.\", \".\");\n      updateNotes = true;\n    }\n    newNotes.push(newNote);\n  }\n  if (updateNotes) {\n    updateData[\"system.contextNotes\"] = newNotes;\n  }\n}\n\nfunction _migrateItemChangeFlags(item, updateData) {\n  const flags = item.system?.changeFlags;\n  if (!flags) return;\n\n  // Dwarf-like encumbrance to distinct no medium/heavy encumbrance\n  if (flags.noEncumbrance !== undefined) {\n    if (flags.noEncumbrance === true) {\n      updateData[\"system.changeFlags.noMediumEncumbrance\"] = true;\n      updateData[\"system.changeFlags.noHeavyEncumbrance\"] = true;\n    }\n    updateData[\"system.changeFlags.-=noEncumbrance\"] = null;\n  }\n}\n\nfunction _migrateEquipmentSize(ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const size = ent.system.size;\n  if (!size) {\n    updateData[\"system.size\"] = \"med\";\n  }\n}\n\n// Migrate .weight number to .weight.value\n// Migrate .baseWeight that was briefly introduced in 0.81\nfunction _migrateItemWeight(ent, updateData) {\n  const baseWeight = ent.system.baseWeight,\n    weight = ent.system.weight;\n\n  // Skip items of inappropriate type\n  const isPhysical = CONFIG.Item.documentClasses[ent.type]?.isPhysical;\n  if (!isPhysical) {\n    if (weight !== undefined) {\n      // Ensure inappropriate items don't have spurious weight, which breaks data prep\n      updateData[\"system.-=weight\"] = null;\n    }\n    return;\n  }\n\n  if (Number.isFinite(weight)) {\n    updateData[\"system.weight.value\"] = weight;\n  } else if (weight == null || typeof weight !== \"object\") {\n    // Convert any other values to just 0 weight, e.g. null\n    updateData[\"system.weight.value\"] = 0;\n  }\n\n  // If baseWeight exists and looks reasonable, use it for base weight instead\n  if (baseWeight !== undefined) {\n    if (Number.isFinite(baseWeight) && baseWeight > 0) {\n      updateData[\"system.weight.value\"] = baseWeight;\n    }\n    updateData[\"system.-=baseWeight\"] = null;\n  }\n}\n\nfunction _migrateItemHealth(item, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[item.type]?.isPhysical;\n\n  const hp = item.system.hp;\n  if (isPhysical) {\n    if (hp) {\n      // Fix invalid data type\n      if (typeof hp.max === \"string\") updateData[\"system.hp.max\"] = parseInt(hp.max);\n      if (typeof hp.value === \"string\") updateData[\"system.hp.value\"] = parseInt(hp.value);\n    } else {\n      // Restore missing HP data\n      updateData[\"system.hp.value\"] = 10;\n      updateData[\"system.hp.max\"] = 10;\n    }\n  } else if (item.type !== \"class\" && hp !== undefined) {\n    updateData[\"system.-=hp\"] = null;\n  }\n}\n\nfunction _migrateSpellCosts(ent, updateData) {\n  if (ent.type !== \"spell\") return;\n\n  const spellPointCost = foundry.utils.getProperty(ent.system, \"spellPoints.cost\");\n  if (spellPointCost == null) {\n    updateData[\"system.spellPoints.cost\"] = \"1 + @sl\";\n  }\n\n  const slotCost = ent.system.slotCost;\n  if (slotCost == null) {\n    updateData[\"system.slotCost\"] = 1;\n  }\n\n  const autoDeduct = ent.system.preparation?.autoDeductCharges;\n  if (autoDeduct !== undefined) {\n    if (autoDeduct === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.preparation.-=autoDeductCharges\"] = null;\n  }\n}\n\n/**\n * Migrate spell preparation\n *\n * Added with PF1 v10\n *\n * @param {object} itemData\n * @param {object} updateData\n * @param {object} context\n * @param {Item} [context.item=null]\n */\nfunction _migrateSpellPreparation(itemData, updateData, { item = null } = {}) {\n  if (itemData.type !== \"spell\") return;\n\n  const spellbook = item?.spellbook;\n  const prepMode = spellbook?.spellPreparationMode || \"prepared\";\n  const usesSpellPoints = spellbook?.spellPoints?.useSystem ?? false;\n  const isPrepared = usesSpellPoints ? false : prepMode === \"prepared\";\n\n  const prep = itemData.system.preparation ?? {};\n  if (prep.maxAmount !== undefined) {\n    if (!(prep.max > 0)) {\n      // Migrate even older non number max amount\n      if (typeof prep.maxAmount !== \"number\") prep.maxAmount = 0;\n      updateData[\"system.preparation.max\"] = prep.maxAmount ?? 0;\n    }\n    updateData[\"system.preparation.-=maxAmount\"] = null;\n  }\n  if (prep.spontaneousPrepared !== undefined) {\n    if (!(prep.value > 0) && !isPrepared) {\n      updateData[\"system.preparation.value\"] = prep.spontaneousPrepared ? 1 : 0;\n    }\n    updateData[\"system.preparation.-=spontaneousPrepared\"] = null;\n  }\n  if (prep.preparedAmount !== undefined) {\n    if (!(prep.value > 0) && isPrepared) {\n      updateData[\"system.preparation.value\"] = Math.max(\n        prep.preparedAmount,\n        updateData[\"system.preparation.value\"] || 0\n      );\n    }\n    updateData[\"system.preparation.-=preparedAmount\"] = null;\n  }\n}\n\nfunction _migrateLootEquip(ent, updateData) {\n  if (ent.type === \"loot\" && typeof ent.system.equipped !== \"boolean\") {\n    updateData[\"system.equipped\"] = false;\n  }\n}\n\nconst _migrateItemLinks = async function (itemData, updateData, { item, actor }) {\n  const linkData = itemData.system.links ?? {};\n  for (const [linkType, oldLinks] of Object.entries(linkData)) {\n    let updated = false;\n    const links = foundry.utils.deepClone(oldLinks);\n    for (const link of links) {\n      const type = link.dataType;\n      if (type !== undefined) {\n        if (type === \"data\") {\n          delete link.dataType;\n        } else if (type === \"world\") {\n          // Reconstruct world item UUID\n          link.uuid = link.id.replace(/^world\\./, \"Item.\");\n          delete link.id;\n          delete link.dataType;\n        } else if (type === \"compendium\") {\n          // Reconstruct compendium UUID\n          link.uuid = `Compendium.${link.id}`;\n          delete link.id;\n          delete link.dataType;\n        }\n        delete link.img;\n        updated = true;\n      }\n\n      // Convert ID to relative UUID\n      if (link.id !== undefined && actor) {\n        link.uuid = actor.items?.get(link.id)?.getRelativeUUID(actor);\n        if (link.uuid) {\n          delete link.id;\n          updated = true;\n        }\n      }\n\n      if (actor && link.uuid) {\n        let linked = await fromUuid(link.uuid, { relative: actor });\n        // Attempt to recover bad links to other actors\n        if (linked?.actor) {\n          // Attempt to adjust owned item\n          if (linked.actor !== actor) linked = actor.items.get(linked.id);\n          const newLink = linked?.getRelativeUUID(actor);\n          // Successful recovery?\n          if (linked && newLink !== link.uuid) {\n            link.uuid = newLink;\n            updated = true;\n          }\n        }\n      }\n\n      // Transform non-relative UUIDs to new format\n      if (link.uuid?.[0] !== \".\" && link.uuid) {\n        const uuid = pf1.utils.internal.uniformUuid(link.uuid, actor);\n        if (link.uuid !== uuid) {\n          link.uuid = uuid;\n          updated = true;\n        }\n      }\n\n      // Handle moved compendium content\n      if (link.uuid) {\n        const movedUuid = moved[link.uuid];\n        if (movedUuid) {\n          link.uuid = movedUuid;\n          updated = true;\n        }\n      }\n\n      // Remove unused data\n      if (link._index !== undefined || link.hiddenLinks !== undefined) {\n        delete link._index;\n        delete link.hiddenLinks;\n        updated = true;\n      }\n\n      // Clear out invalid links with just a name or no info at all\n      const keys = Object.keys(link);\n      if (keys.length < 1 || (keys.length === 1 && keys.includes(\"name\"))) {\n        link._delete = true;\n        updated = true;\n      }\n    }\n\n    if (updated) {\n      updateData[`system.links.${linkType}`] = links.filter((i) => i._delete !== true);\n    }\n  }\n};\n\nfunction _migrateItemProficiencies(item, updateData) {\n  // Added with PF1 v10\n  // Migrate sim/mar to simple/martial\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (item.system.weaponProf?.value?.some((p) => oldKeys.includes(p))) {\n    const nwprof = item.system.weaponProf.value.map((p) => wprofmap[p] || p);\n    updateData[\"system.weaponProf.value\"] = nwprof;\n  }\n}\n\nfunction _migrateItemNotes(ent, updateData) {\n  const list = [\"system.attackNotes\", \"system.effectNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && !(value instanceof Array)) {\n      updateData[k] = [];\n      if (typeof value === \"string\" && value.length > 0) {\n        updateData[k] = value.trim().split(/[\\n\\r]/);\n      }\n    }\n  }\n}\n\n/**\n * @remarks\n * - Exposed in API solely to provide for system tests.\n * @internal\n * @param {object} itemData\n * @param {object} updateData\n * @param {object} [options]\n * @param {ItemPF} [options.item]\n * @param {ActorPF} [options.actor]\n */\nexport function _migrateItemActionToActions(itemData, updateData, { actor, item } = {}) {\n  const hasOldAction =\n    !!itemData.system.actionType || !!itemData.system.activation?.type || !!itemData.system.measureTemplate;\n\n  // Cleanup old data\n  if (itemData.system.actionType !== undefined) updateData[\"system.-=actionType\"] = null;\n  if (itemData.system.activation !== undefined) updateData[\"system.-=activation\"] = null;\n  if (itemData.system.measureTemplate !== undefined) updateData[\"system.-=measureTemplate\"] = null;\n\n  // Already has actions\n  if (itemData.system.actions?.length) return;\n\n  // Proceed with old action cleanup\n\n  // The following is very blunt force migration that includes lots of bad data that shouldn't be incldued\n  if (!hasOldAction) return;\n\n  // Transfer data to an action\n  const actionData = {};\n  for (const k of Object.keys(itemData.system)) {\n    actionData[k] = itemData.system[k];\n  }\n\n  // Transfer name and image\n  if ([\"weapon\", \"attack\"].includes(itemData.type)) {\n    actionData.name = game.i18n.localize(\"PF1.Attack\");\n  } else {\n    actionData.name = game.i18n.localize(\"PF1.Use\");\n  }\n\n  // Clear description\n  delete actionData.description;\n\n  // Add spell data\n  // Make sure it has an activation type\n  actionData.activation ??= {};\n  actionData.activation.type ||= \"standard\";\n  actionData.activation.unchained ??= {};\n  actionData.activation.unchained.type ||= \"action\";\n  actionData.activation.unchained.cost ??= 2;\n\n  if (itemData.type === \"spell\") {\n    // Transfer spell duration\n    actionData.duration ??= {};\n    actionData.duration.value = itemData.system.spellDuration;\n\n    // Transfer spell point cost\n    if (actor) {\n      const spellbookKey = itemData.system.spellbook;\n      const spellbook = actor.system.attributes?.spells?.spellbooks?.[spellbookKey];\n      if (spellbook.spellPoints?.useSystem) {\n        const oldSpellPointCostFormula = itemData.system.spellPoints?.cost;\n        if (oldSpellPointCostFormula) actionData.uses.autoDeductChargesCost = oldSpellPointCostFormula;\n      }\n    }\n  }\n\n  // Fix power attack multiplier being non-number\n  const paMult = actionData.powerAttack?.multiplier;\n  if (typeof paMult === \"string\") {\n    if (paMult === \"\") delete actionData.powerAttack.multiplier;\n    else actionData.powerAttack.multiplier = parseInt(paMult);\n  }\n\n  // Clean out old attack and effect notes\n  if (itemData.system.attackNotes !== undefined) updateData[\"system.-=attackNotes\"] = null;\n  if (itemData.system.effectNotes !== undefined) updateData[\"system.-=effectNotes\"] = null;\n\n  updateData[\"system.actions\"] = [new pf1.components.ItemAction(actionData).toObject()];\n}\n\nfunction _migrateScriptCalls(item, updateData) {\n  if (!(item.system.scriptCalls?.length > 0)) return;\n  let updated = false;\n\n  // Clear out unused name and image for linked macros.\n  const scripts = foundry.utils.deepClone(item.system.scriptCalls);\n  for (const script of scripts) {\n    if (script.type == \"macro\") {\n      if (script.name || script.img) {\n        script.name = \"\";\n        script.img = \"\";\n        updated = true;\n      }\n    }\n  }\n\n  if (updated) {\n    updateData[\"system.scriptCalls\"] = scripts;\n  }\n}\n\n/**\n * Convert tuple learnedAt values into key:value pairs directly in the object.\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemLearnedAt(item, updateData) {\n  const learnedAt = item.system.learnedAt ?? {};\n  for (const [category, value] of Object.entries(learnedAt)) {\n    if (Array.isArray(value)) {\n      updateData[`system.learnedAt.${category}`] = value.reduce((learned, [classId, level]) => {\n        // Skip invalid entries\n        if (typeof classId !== \"string\" || classId.length == 0) return learned;\n        // Split combined entries and transform them to object format\n        for (let clsId of classId.split(\"/\")) {\n          clsId = clsId.trim().replace(\".\", \"-\"); // Sanitize\n          if (clsId) learned[clsId] = level;\n        }\n        return learned;\n      }, {});\n    }\n  }\n}\n\n/**\n * Migrate action..\n * - ... usesAmmo boolean away\n * - ... ammoType to item.system.ammo.type\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n * @param {object} updateData - Item update data\n */\nfunction _migrateActionAmmunitionUsage(action, itemData, updateData) {\n  if (action.usesAmmo === false) {\n    delete action.ammoType;\n  }\n  if (action.usesAmmo === true) {\n    if (!itemData.system.ammo?.type && !updateData[\"system.ammo.type\"]) {\n      updateData[\"system.ammo.type\"] = action.ammoType;\n      action.ammoType = \"\"; // Inherit from item\n    }\n\n    // Same as base item\n    if (itemData.system.ammo?.type == action.ammoType) delete action.ammoType;\n  }\n\n  // Migrate .ammoType to .ammo.type\n  if (action.ammoType) {\n    action.ammo ??= {};\n    action.ammo.type = action.ammoType;\n  }\n  delete action.ammoType;\n\n  // Delete empty ammo type (inherited)\n  if (action.ammo && !action.ammo.type) {\n    delete action.ammo.type;\n  }\n\n  // Uses ammo is no longer used\n  delete action.usesAmmo;\n}\n\n// Action duration\n// Added with PF1 v10\nfunction _migrateActionDuration(action, itemData) {\n  action.duration ??= {};\n\n  // Something has caused \"null\" string durations for some people, this clears it.\n  if (action.duration.value === \"null\") action.duration.value = \"\";\n\n  // Swap units to \"special\" if undefined and formula exists\n  if (!action.duration.units && !!action.duration.value) {\n    action.duration.units = \"spec\";\n  }\n\n  // Swap \"instantaneous\" formula to instantaneous unit\n  if (action.duration.value === \"instantaneous\") {\n    delete action.duration.value;\n    action.duration.units = \"inst\";\n  }\n\n  // Convert easy special values to actual duration info\n  if (action.duration.units === \"spec\") {\n    const value = action.duration.value || \"\";\n\n    switch (value) {\n      case \"1 round\":\n      case \"1 full round\":\n        action.duration.value = \"1\";\n        action.duration.units = \"round\";\n        break;\n      case \"1 min.\":\n      case \"1 minute\":\n        action.duration.value = \"1\";\n        action.duration.units = \"minute\";\n        break;\n      case \"1 hour\":\n        action.duration.value = \"1\";\n        action.duration.units = \"hour\";\n        break;\n      case \"8 hours\":\n        action.duration.value = \"8\";\n        action.duration.units = \"hour\";\n        break;\n      case \"24 hours\":\n        action.duration.value = \"24\";\n        action.duration.units = \"hour\";\n        break;\n      case \"1 day\":\n        action.duration.value = \"1\";\n        action.duration.units = \"day\";\n        break;\n      case \"permanent\":\n        delete action.duration.value;\n        action.duration.units = \"perm\";\n        break;\n      case \"see below\":\n      case \"see text\":\n        delete action.duration.value;\n        action.duration.units = \"seeText\";\n        break;\n    }\n  }\n}\n\nfunction _migrateActionMaterials(action, itemData) {\n  let addons = action.material?.addon;\n  if (addons) {\n    // Since PF1 v10.5\n    if (addons.some((ma) => !!materialChanges[ma])) {\n      action.material.addon = action.material.addon.map((ma) => materialChanges[ma] || ma);\n      addons = action.material.addon; // Ensure following code gets updated addons\n    }\n\n    // Convert Throneglass into non-addon material\n    // Since PF1 v10.3\n    const tg = \"throneglass\";\n    if (addons.includes(tg)) {\n      action.material.addon = action.material.addon.filter((ma) => ma !== tg);\n      action.material.normal.value ||= tg;\n    }\n  }\n\n  // Since PF1 v10.5\n  const newMat = materialChanges[action.material?.normal?.value];\n  if (newMat) action.material.normal.value = newMat;\n}\n\n/**\n * Added with PF1 v10\n *\n * @param {object} action\n * @param {object} itemData\n */\nfunction _migrateActionExtraAttacks(action, itemData) {\n  // Convert tuples into objects\n  if (action.attackParts?.length) {\n    const parts = action.attackParts ?? [];\n    if (parts.some((p) => Array.isArray(p))) {\n      action.attackParts = parts.map((part) => (Array.isArray(part) ? { formula: part[0], name: part[1] } : part));\n    }\n\n    // Ensure formulas are strings\n    for (const part of action.attackParts) part.formula = `${part.formula}`;\n  }\n\n  // Unify extra attacks structure\n  action.extraAttacks ??= {};\n\n  if (action.attackParts !== undefined) {\n    action.extraAttacks.manual = action.attackParts ?? [];\n    delete action.attackParts;\n  }\n\n  if (action.formulaicAttacks !== undefined) {\n    action.extraAttacks.formula ??= {};\n    action.extraAttacks.formula.count = action.formulaicAttacks?.count?.formula || \"\";\n    action.extraAttacks.formula.bonus = action.formulaicAttacks?.bonus?.formula || \"\";\n    action.extraAttacks.formula.label = action.formulaicAttacks?.label || \"\";\n    delete action.formulaicAttacks;\n  }\n\n  if (!action.extraAttacks.type) {\n    // Convert existing formulas to standard options\n    if (\n      action.extraAttacks.formula?.count === \"min(3, ceil(@attributes.bab.total / 5) - 1)\" &&\n      action.extraAttacks.formula?.bonus === \"@formulaicAttack * -5\"\n    ) {\n      action.extraAttacks.type = \"standard\";\n      delete action.extraAttacks.formula.count;\n      delete action.extraAttacks.formula.bonus;\n      delete action.extraAttacks.formula.label;\n\n      if (action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"advanced\";\n      } else {\n        delete action.extraAttacks.manual;\n      }\n    } else {\n      if (action.extraAttacks.formula?.count?.length || action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"custom\";\n      }\n    }\n\n    // Delete unused data\n    if (!action.extraAttacks.formula?.count) delete action.extraAttacks?.formula?.count;\n    if (!action.extraAttacks.formula?.bonus) delete action.extraAttacks?.formula?.bonus;\n    if (!action.extraAttacks.formula?.label) delete action.extraAttacks?.formula?.label;\n    if (!(action.extraAttacks.manual?.length > 0)) delete action.extraAttacks?.manual;\n  }\n\n  if (foundry.utils.isEmpty(action.extraAttacks.formula)) {\n    delete action.extraAttacks.formula;\n  }\n}\n\nfunction _migrateItemChargeCost(item, updateData) {\n  const toggle = item.system.uses?.autoDeductCharges;\n  if (toggle !== undefined) {\n    // Mimic old setting by setting cost to 0\n    if (toggle === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.uses.-=autoDeductCharges\"] = null;\n  }\n  // Special handling for cantrips if the above didn't match\n  else if (item.system.level === 0 && item.system.uses?.autoDeductChargesCost === undefined) {\n    const defaultAction = item.system.actions?.[0];\n    // Check for presence of obsoleted autoDeductCharges in first action\n    if (\n      defaultAction?.uses?.autoDeductCharges === true &&\n      updateData[\"system.uses.autoDeductChargesCost\"] === undefined\n    ) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n  }\n}\n\n// Added with PF1 v10\nfunction _migrateItemLimitedUses(itemData, updateData) {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (itemData.system.uses?.per === \"unlimited\") {\n    updateData[\"system.uses.per\"] = \"\";\n  }\n\n  // Only physical items have single use, convert use cases to 1 charge\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (itemData.system.uses?.per === \"single\") {\n      updateData[\"system.uses.per\"] = \"charges\";\n      updateData[\"system.uses.maxFormula\"] = \"1\";\n    }\n  }\n}\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nfunction _migrateActionDamageType(action, itemData) {\n  if (!action.damage) return;\n\n  // Determine data paths using damage types\n  const damageGroupPaths = [\"parts\", \"critParts\", \"nonCritParts\"];\n  for (const damageGroupKey of damageGroupPaths) {\n    if (!action.damage[damageGroupKey]) continue;\n\n    // v9 migration of array damage format\n    action.damage[damageGroupKey] = action.damage[damageGroupKey].map((part) => {\n      if (Array.isArray(part)) {\n        const [formula, type] = part;\n        return { formula, type };\n      }\n      return part;\n    });\n\n    // Other old data format changes\n    const damageGroup = action.damage[damageGroupKey];\n    for (const damagePart of damageGroup) {\n      const damageType = damagePart.type;\n      if (!damageType) continue;\n\n      // Convert damage types\n      if (typeof damageType === \"string\") {\n        damagePart.types = _Action_ConvertDamageType(damageType);\n        if (!damagePart.types.length) damagePart.types = damageType.split(\";\");\n        delete damagePart.type;\n      }\n      // Move existing array\n      else if (damageType instanceof Array) {\n        damagePart.types = damageType;\n        delete damagePart.type;\n      }\n    }\n  }\n}\n\n/**\n * @param {object} actionData - Action data\n * @param {object} itemData - Parent item data\n * @param {object} options\n * @param {pf1.components.ItemAction} [options.action]\n */\nfunction _migrateActionConditionals(actionData, itemData, { action } = {}) {\n  for (const conditional of actionData.conditionals ?? []) {\n    // Create conditional ID\n    conditional._id ??= foundry.utils.randomID(16);\n\n    conditional.modifiers ??= [];\n    if (!Array.isArray(conditional.modifiers)) {\n      conditional.modifiers = Object.values(conditional.modifiers);\n    }\n\n    for (const modifier of conditional.modifiers) {\n      // Create modifier ID\n      modifier._id ??= foundry.utils.randomID(16);\n\n      let reResult;\n      // Convert modifier subtarget\n      if ((reResult = modifier.subTarget?.match(/^attack\\.([0-9]+)/))) {\n        modifier.subTarget = `attack_${reResult[1]}`;\n      }\n\n      // Remove excess sheet data that was previously incorrectly added\n      delete modifier.targets;\n      delete modifier.subTargets;\n      delete modifier.conditionalModifierTypes;\n      delete modifier.conditionalCritical;\n\n      // Convert modifier damage type\n      if (modifier.target === \"damage\" && !modifier.damageType?.length && modifier.type) {\n        modifier.damageType = _Action_ConvertDamageType(modifier.type);\n        if (!modifier.damageType.length) modifier.damageType = modifier.type.split(\";\");\n        modifier.type = \"\";\n      }\n\n      pf1.components.ItemConditionalModifier.pruneData(modifier);\n    }\n  }\n\n  // Filter through the datamodel\n  if (actionData.conditionals?.length) {\n    actionData.conditionals = actionData.conditionals.map((c) =>\n      new pf1.components.ItemConditional(c, { strict: false }).toObject(true, true)\n    );\n  }\n}\n\nfunction _migrateActorCR(ent, updateData) {\n  // Migrate base CR\n  const cr = foundry.utils.getProperty(ent.system, \"details.cr\");\n  if (typeof cr === \"number\") {\n    updateData[\"system.details.cr.base\"] = cr;\n  } else if (cr == null) {\n    updateData[\"system.details.cr.base\"] = 1;\n  }\n\n  // Remove derived data if present\n  if (foundry.utils.getProperty(ent.system, \"details.cr.total\") !== undefined) {\n    updateData[\"system.details.cr.-=total\"] = null;\n  }\n}\n\nfunction _migrateAttackAbility(ent, updateData) {\n  const cmbAbl = foundry.utils.getProperty(ent.system, \"attributes.cmbAbility\");\n  if (cmbAbl === undefined) updateData[\"system.attributes.cmbAbility\"] = \"str\";\n\n  const meleeAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.meleeAbility\");\n  if (meleeAbl === undefined) updateData[\"system.attributes.attack.meleeAbility\"] = \"str\";\n\n  const rangedAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.rangedAbility\");\n  if (rangedAbl === undefined) updateData[\"system.attributes.attack.rangedAbility\"] = \"dex\";\n}\n\nfunction _migrateActorSpellbookUsage(ent, updateData) {\n  const spellbookUsage = foundry.utils.getProperty(ent.system, \"attributes.spells.usedSpellbooks\");\n  if (spellbookUsage !== undefined) {\n    updateData[\"system.attributes.spells.-=usedSpellbooks\"] = null;\n  }\n}\n\nfunction _migrateActorNullValues(ent, updateData) {\n  // Prepare test data\n  const entries = { \"system.attributes.energyDrain\": foundry.utils.getProperty(ent.system, \"attributes.energyDrain\") };\n  for (const [k, a] of Object.entries(ent.system.abilities || {})) {\n    entries[`system.abilities.${k}.damage`] = a.damage;\n    entries[`system.abilities.${k}.drain`] = a.drain;\n    entries[`system.abilities.${k}.penalty`] = a.penalty;\n  }\n\n  // Set null values to 0\n  for (const [k, v] of Object.entries(entries)) {\n    if (v === null) {\n      updateData[k] = 0;\n    }\n  }\n}\n\nfunction _migrateActorSpellbookDomainSlots(ent, updateData) {\n  const spellbooks = foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {};\n\n  for (const [k, b] of Object.entries(spellbooks)) {\n    if (b.domainSlotValue !== undefined) continue;\n    const key = `system.attributes.spells.spellbooks.${k}.domainSlotValue`;\n    updateData[key] = 1;\n  }\n}\n\nfunction _migrateActorStatures(ent, updateData) {\n  const stature = foundry.utils.getProperty(ent.system, \"traits.stature\");\n\n  if (stature === undefined) {\n    updateData[\"system.traits.stature\"] = \"tall\";\n  }\n}\n\n// Migrate weapon proficiencies\n// Converts sim and mar to simple and martial\n// Added with PF1 v10\nfunction _migrateActorProficiencies(actorData, updateData) {\n  const wprofs = updateData[\"system.traits.weaponProf\"] ?? actorData.system.traits?.weaponProf;\n  if (!wprofs?.length) return;\n\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  if (wprofs.some((p) => !!wprofmap[p])) {\n    const nwprofs = wprofs.map((p) => wprofmap[p] || p);\n    updateData[\"system.traits.weaponProf\"] = nwprofs;\n  }\n}\n\nfunction _migrateActorDefenseAbility(ent, updateData) {\n  const normalACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.normal.ability\");\n  if (normalACAbl === undefined) updateData[\"system.attributes.ac.normal.ability\"] = \"dex\";\n  const touchACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.touch.ability\");\n  if (touchACAbl === undefined) updateData[\"system.attributes.ac.touch.ability\"] = \"dex\";\n\n  // CMD\n  const cmdDexAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.dexAbility\");\n  if (cmdDexAbl === undefined) updateData[\"system.attributes.cmd.dexAbility\"] = \"dex\";\n  const cmdStrAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.strAbility\");\n  if (cmdStrAbl === undefined) updateData[\"system.attributes.cmd.strAbility\"] = \"str\";\n}\n\nfunction _migrateActorInitAbility(ent, updateData) {\n  const abl = foundry.utils.getProperty(ent.system, \"attributes.init.ability\");\n\n  if (abl === undefined) {\n    updateData[\"system.attributes.init.ability\"] = \"dex\";\n  }\n}\n\nfunction _migrateActorCMBRevamp(ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"attributes.cmb.total\") !== undefined) {\n    updateData[\"system.attributes.cmb.-=total\"] = null;\n  }\n}\n\nfunction _migrateActorChangeRevamp(ent, updateData) {\n  // Skills\n  Object.keys(ent.system.skills ?? {}).forEach((s) => {\n    const path = `system.skills.${s}.`;\n    if (foundry.utils.getProperty(ent, path + \"changeBonus\") !== undefined) {\n      updateData[path + \"-=changeBonus\"] = null;\n    }\n\n    // Check for subskill\n    Object.keys(foundry.utils.getProperty(ent, `system.skills.${s}.subSkills`) ?? {}).forEach((s2) => {\n      const subPath = `system.skills.${s}.subSkills.${s2}.`;\n      if (foundry.utils.getProperty(ent, subPath + \"changeBonus\") !== undefined) {\n        updateData[subPath + \"-=changeBonus\"] = null;\n      }\n    });\n  });\n\n  // Remove derived data\n  const derivedKeys = {\n    \"system.attributes.hp.max\": \"attributes.hp.-=max\",\n    \"system.attributes.ac.normal.total\": \"attributes.ac.normal.-=total\",\n    \"system.attributes.ac.touch.total\": \"attributes.ac.touch.-=total\",\n    \"system.attributes.ac.flatFooted.total\": \"attributes.ac.flatFooted.-=total\",\n    \"system.attributes.cmd.total\": \"attributes.cmd.-=total\",\n    \"system.attributes.cmd.flatFootedTotal\": \"attributes.cmd.-=flatFootedTotal\",\n    \"system.attributes.sr.total\": \"attributes.sr.-=total\",\n    \"system.attributes.init.total\": \"attributes.init.-=total\",\n  };\n\n  Object.entries(derivedKeys).forEach(([key, updateKey]) => {\n    if (foundry.utils.getProperty(ent, key) !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  });\n}\n\nfunction _migrateActorInvaliddSkills(actor, updateData) {\n  const skills = actor.system.skills;\n  if (!skills) return;\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) {\n      updateData[`system.skills.-=${key}`] = null;\n      continue;\n    }\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) {\n        updateData[`system.skills.${key}.subSkills.-=${subKey}`] = null;\n      }\n    }\n  }\n}\n\n/**\n * Migrate abnormal skill rank values to 0.\n * Primarily changing nulls to 0 to match new actors.\n *\n * @param ent\n * @param updateData\n */\nfunction _migrateActorSkillRanks(ent, updateData) {\n  const skills = ent.system.skills;\n  if (!skills) return; // Unlinked with no skill overrides of any kind\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) continue;\n    if (!Number.isFinite(sklData.rank)) updateData[`system.skills.${key}.rank`] = 0;\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (!Number.isFinite(subSklData.rank)) updateData[`system.skills.${key}.subSkills.${subKey}.rank`] = 0;\n    }\n  }\n}\n\nfunction _migrateCarryBonus(ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.bonus.user\") === undefined) {\n    let bonus = foundry.utils.getProperty(ent.system, \"abilities.str.carryBonus\");\n    if (bonus !== undefined) {\n      bonus = bonus || 0;\n      updateData[\"system.details.carryCapacity.bonus.user\"] = bonus;\n    }\n    updateData[\"system.abilities.str.-=carryBonus\"] = null;\n  }\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.multiplier.user\") === undefined) {\n    let mult = foundry.utils.getProperty(ent.system, \"abilities.str.carryMultiplier\");\n    if (mult !== undefined) {\n      mult = mult || 1;\n      updateData[\"system.details.carryCapacity.multiplier.user\"] = mult - 1;\n    }\n    updateData[\"system.abilities.str.-=carryMultiplier\"] = null;\n  }\n}\n\nfunction _migrateBuggedValues(ent, updateData) {\n  // Convert to integers\n  const convertToInt = [\n    \"system.details.xp.value\",\n    \"system.currency.pp\",\n    \"system.currency.gp\",\n    \"system.currency.sp\",\n    \"system.currency.cp\",\n    \"system.altCurrency.pp\",\n    \"system.altCurrency.gp\",\n    \"system.altCurrency.sp\",\n    \"system.altCurrency.cp\",\n  ];\n  for (const key of convertToInt) {\n    const oldValue = foundry.utils.getProperty(ent, key),\n      value = parseInt(oldValue ?? 0);\n    if (oldValue !== value) {\n      updateData[key] = value;\n    }\n  }\n}\n\nfunction _migrateSpellbookUsage(ent, updateData) {\n  const usedSpellbooks = ent.items\n    .filter((i) => i.type === \"spell\")\n    .reduce((cur, i) => {\n      if (!i.system.spellbook) return cur;\n      if (cur.includes(i.system.spellbook)) return cur;\n      cur.push(i.system.spellbook);\n      return cur;\n    }, []);\n\n  for (const bookKey of usedSpellbooks) {\n    const path = `system.attributes.spells.spellbooks.${bookKey}.inUse`;\n    if (foundry.utils.getProperty(ent, path) !== true) {\n      updateData[path] = true;\n    }\n  }\n}\n\nfunction _migrateActorHP(ent, updateData) {\n  // Migrate HP, Wounds and Vigor values from absolutes to relatives, which is a change in 0.80.16\n  for (const k of [\"system.attributes.hp\", \"system.attributes.wounds\", \"system.attributes.vigor\"]) {\n    const value = foundry.utils.getProperty(ent, `${k}.value`);\n\n    // Fill offset if missing\n    if (foundry.utils.getProperty(ent, `${k}.offset`) == null) {\n      const max = foundry.utils.getProperty(ent, `${k}.max`) ?? 0;\n      updateData[`${k}.offset`] = (value ?? 0) - max;\n    }\n    // Value is no longer used if it exists\n\n    if (value !== undefined) {\n      updateData[`${k}.-=value`] = null;\n    }\n  }\n}\n\nfunction _migrateActorSenses(ent, updateData, token) {\n  const oldSenses = ent.system.traits?.senses;\n\n  if (!oldSenses) return;\n\n  if (typeof oldSenses === \"string\") {\n    const tokenData = token ?? ent.prototypeToken;\n\n    updateData[\"system.traits.senses\"] = {\n      dv: { value: tokenData.brightSight },\n      ts: { value: 0 },\n      bs: { value: 0 },\n      bse: { value: 0 },\n      ll: {\n        enabled: tokenData.flags?.pf1?.lowLightVision,\n        multiplier: {\n          dim: tokenData.flags?.pf1?.lowLightVisionMultiplier ?? 2,\n          bright: tokenData.flags?.pf1?.lowLightVisionMultiplierBright ?? 2,\n        },\n      },\n      sid: false,\n      tr: { value: 0 },\n      si: false,\n      sc: { value: 0 },\n      custom: oldSenses,\n    };\n  }\n\n  // Migrate boolean Scent sense to number\n  if (typeof oldSenses?.sc === \"boolean\") {\n    updateData[\"system.traits.senses.sc\"] = { value: oldSenses.sc ? 30 : 0 };\n  }\n\n  // Migrate boolean true seeing to number\n  if (typeof oldSenses?.tr === \"boolean\") {\n    updateData[\"system.traits.senses.tr\"] = { value: oldSenses.tr ? 120 : 0 };\n  }\n\n  for (const id of [\"dv\", \"ts\", \"ls\", \"bs\", \"bse\", \"sc\", \"tr\"]) {\n    const sense = oldSenses?.[id];\n    if (foundry.utils.getType(sense) !== \"Object\") {\n      updateData[`system.traits.senses.${id}`] = { value: sense || 0 };\n    }\n  }\n}\n\nfunction _migrateActorSkillJournals(ent, updateData) {\n  const reOldJournalFormat = /^[a-zA-Z0-9]+$/;\n  for (const [skillKey, sklData] of Object.entries(ent.system.skills ?? {})) {\n    if (!sklData) continue;\n    for (const [subSkillKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (subSklData.journal?.match(reOldJournalFormat)) {\n        updateData[`system.skills.${skillKey}.subSkills.${subSkillKey}.journal`] = `JournalEntry.${subSklData.journal}`;\n      }\n    }\n\n    if (sklData.journal?.match(reOldJournalFormat)) {\n      updateData[`system.skills.${skillKey}.journal`] = `JournalEntry.${sklData.journal}`;\n    }\n  }\n}\n\nfunction _migrateActorSubskillData(actor, updateData) {\n  for (const [skillId, skillData] of Object.entries(actor.system.skills ?? {})) {\n    if (!skillData) continue;\n    for (const [subSkillId, subSkillData] of Object.entries(skillData.subSkills ?? {})) {\n      if (!subSkillData) continue;\n      if (subSkillData.mod !== undefined) {\n        // Remove permanently stored .mod which is derived value\n        // Added with PF1 v9\n        updateData[`system.skills.${skillId}.subSkills.${subSkillId}.-=mod`] = null;\n      }\n    }\n  }\n}\n\nfunction _migrateActorDRandER(ent, updateData) {\n  const oldDR = ent.system.traits?.dr;\n  const oldER = ent.system.traits?.eres;\n\n  if (typeof oldDR === \"string\") {\n    updateData[\"system.traits.dr\"] = {\n      value: [],\n      custom: oldDR,\n    };\n  }\n\n  if (typeof oldER === \"string\") {\n    updateData[\"system.traits.eres\"] = {\n      value: [],\n      custom: oldER,\n    };\n  }\n}\n\n/**\n * @param trait\n * @since PF1 v11\n */\nfunction _migrateAnyTrait(trait) {\n  if (!trait) return null; // Missing\n  if (Array.isArray(trait)) return null; // Already in final format\n\n  const all = new Set();\n\n  // Pull standard choices\n  if (Array.isArray(trait.value) && trait.value.length) {\n    trait.value.forEach((v) => all.add(v));\n  }\n  // Convert older plain string custom traits to array\n  if (typeof trait.custom == \"string\") {\n    trait.custom =\n      trait.custom\n        ?.split(pf1.config.re.traitSeparator)\n        .map((x) => x.trim())\n        .filter((x) => x) ?? [];\n  }\n  // Pull custom choices\n  if (Array.isArray(trait.custom) && trait.custom.length) {\n    trait.custom.forEach((v) => all.add(v));\n  }\n\n  return [...all];\n}\n\nfunction _migrateActorTraits(actor, updateData) {\n  const keys = [\"di\", \"dv\", \"ci\", \"languages\", \"armorProf\", \"weaponProf\"];\n\n  for (const key of keys) {\n    const trait = actor.system.traits?.[key];\n    if (!trait) continue; // Missing\n    if (Array.isArray(trait)) continue; // Already in final format\n\n    const selections = _migrateAnyTrait(trait);\n    if (selections) updateData[`system.traits.${key}`] = selections;\n  }\n}\n\n/**\n * @param itemData\n * @param updateData\n */\nfunction _migrateItemTraits(itemData, updateData) {\n  const keys = [\n    \"armorProf\",\n    \"descriptors\",\n    \"subschool\",\n    \"languages\",\n    \"weaponGroups\",\n    \"weaponProf\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"conditions\",\n  ];\n\n  for (const key of keys) {\n    const trait = itemData.system?.[key];\n    if (!trait) continue; // Missing\n    if (Array.isArray(trait)) continue; // Already in final format\n\n    const selections = _migrateAnyTrait(trait);\n    if (selections) updateData[`system.${key}`] = selections;\n  }\n}\n\n/**\n * @param actorData\n * @param updateData\n * @since PF1 v10\n */\nfunction _migrateActorFlags(actorData, updateData) {\n  const flags = actorData.flags?.pf1;\n  if (!flags) return;\n\n  const getUniformValue = (v) => {\n    if (v === \"true\" || v === \"yes\" || v === true) return true;\n    if (v === \"false\" || v === \"no\" || v === false) return false;\n    return null;\n  };\n\n  // visionPermission to visionSharing\n  if (flags.visionPermission) {\n    updateData[\"flags.pf1.visionSharing.default\"] = getUniformValue(flags.visionPermission.default);\n    updateData[\"flags.pf1.visionSharing.users\"] = Object.fromEntries(\n      Object.entries(flags.visionPermission?.users ?? {}).map(([uid, data]) => [uid, getUniformValue(data.level)])\n    );\n\n    // Cleanup pointless users\n    for (const [uid, shared] of Object.entries(updateData[\"flags.pf1.visionSharing.users\"])) {\n      if (shared === null) {\n        delete updateData[\"flags.pf1.visionSharing.users\"][uid];\n      }\n    }\n    if (foundry.utils.isEmpty(updateData[\"flags.pf1.visionSharing.users\"])) {\n      delete updateData[\"flags.pf1.visionSharing.users\"];\n    }\n\n    // Cleanup pointless default\n    if (updateData[\"flags.pf1.visionSharing.default\"] !== true) {\n      delete updateData[\"flags.pf1.visionSharing.default\"];\n    }\n\n    updateData[\"flags.pf1.-=visionPermission\"] = null;\n  }\n\n  // Cleanup vision sharing\n  // Added with PF1 v11.4\n  if (flags.visionSharing) {\n    let noDefault = false,\n      noUsers = false;\n\n    updateData[\"flags.pf1.visionSharing\"] ??= {};\n    updateData[\"flags.pf1.visionSharing\"].users ??= {};\n\n    if (flags.visionSharing.default !== undefined) {\n      const _default = getUniformValue(flags.visionSharing.default);\n      // Remove redundant value\n      if (_default !== true) {\n        updateData[\"flags.pf1.visionSharing\"][\"-=default\"] = null;\n        noDefault = true;\n      }\n      // Fix value\n      else if (_default !== flags.visionSharing.default) {\n        updateData[\"flags.pf1.visionSharing\"][\"default\"] = _default;\n      }\n    }\n\n    let users = 0; // Count retained users\n    for (const [uid, _enabled] of Object.entries(flags.visionSharing.users ?? {})) {\n      users++;\n      const enabled = getUniformValue(_enabled);\n      // Remove redundant value\n      if (enabled === null || !game.users.get(uid)) {\n        updateData[\"flags.pf1.visionSharing\"].users[`-=${uid}`] = null;\n        users--;\n      }\n      // Fix value\n      else if (_enabled !== enabled) {\n        updateData[\"flags.pf1.visionSharing\"].users[uid] = enabled;\n      }\n    }\n\n    // Delete users if no user configs remain\n    if (!users) {\n      delete updateData[\"flags.pf1.visionSharing\"]?.users;\n      updateData[\"flags.pf1.visionSharing\"] ??= {};\n      updateData[\"flags.pf1.visionSharing\"][\"-=users\"] = null;\n      noUsers = true;\n    }\n\n    // Delete flags if nothing is left\n    if (noDefault && noUsers) {\n      delete updateData[\"flags.pf1.visionSharing\"];\n      updateData[\"flags.pf1.-=visionSharing\"] = null;\n    }\n  }\n}\n\nfunction _Action_ConvertDamageType(damageTypeString) {\n  const separator = /(?:\\s*\\/\\s*|\\s+and\\s+|\\s+or\\s+)/i;\n  const damageTypeList = [\n    {\n      tests: [\"b\", \"blunt\", \"bludgeoning\"],\n      result: \"bludgeoning\",\n    },\n    {\n      tests: [\"p\", \"pierce\", \"piercing\"],\n      result: \"piercing\",\n    },\n    {\n      tests: [\"s\", \"slash\", \"slashing\"],\n      result: \"slashing\",\n    },\n    {\n      tests: [\"f\", \"fire\"],\n      result: \"fire\",\n    },\n    {\n      tests: [\"cold\", \"c\"],\n      result: \"cold\",\n    },\n    {\n      tests: [\"e\", \"electric\", \"electricity\", \"electrical\"],\n      result: \"electric\",\n    },\n    {\n      tests: [\"a\", \"acid\"],\n      result: \"acid\",\n    },\n    {\n      tests: [\"sonic\"],\n      result: \"sonic\",\n    },\n    {\n      tests: [\"force\"],\n      result: \"force\",\n    },\n    {\n      tests: [\"neg\", \"negative\"],\n      result: \"negative\",\n    },\n    {\n      tests: [\"pos\", \"positive\"],\n      result: \"positive\",\n    },\n    {\n      tests: [\"u\", \"untyped\", \"untype\"],\n      result: \"untyped\",\n    },\n  ];\n\n  const damageTypes = damageTypeString.split(separator).map((o) => o.toLowerCase());\n  const result = [];\n  for (const damageTest of damageTypeList) {\n    for (const testString of damageTest.tests) {\n      if (damageTypes.includes(testString)) {\n        result.push(damageTest.result);\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction _migrateContainerPrice(item, updateData) {\n  if (item.type !== \"container\") return;\n\n  // .basePrice was merged into .price with PF1 v9\n  if (item.system.basePrice !== undefined) {\n    updateData[\"system.price\"] = item.system.basePrice;\n    updateData[\"system.-=basePrice\"] = null;\n  }\n  if (item.system.unidentified?.basePrice !== undefined) {\n    updateData[\"system.unidentified.price\"] = item.system.unidentified.basePrice;\n    updateData[\"system.unidentified.-=basePrice\"] = null;\n  }\n}\n\nfunction _migrateContainerReduction(item, updateData) {\n  if (item.type !== \"container\") return;\n  if (item.system.weightReduction !== undefined) {\n    updateData[\"system.weight.reduction.percent\"] = item.system.weightReduction;\n    updateData[\"system.-=weightReduction\"] = null;\n  }\n}\n\nfunction _migrateItemType(ent, updateData) {\n  const type = ent.type;\n  const oldType = ent.system[`${type}Type`];\n  if (oldType == null) return;\n  updateData[\"system.subType\"] = oldType;\n  updateData[`system.-=${type}Type`] = null;\n}\n\n/**\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v10\n */\nfunction _migrateItemFlags(itemData, updateData) {\n  if (!itemData.flags?.pf1) return;\n\n  if (itemData.flags.pf1.abundant !== undefined) {\n    if (itemData.system.abundant === undefined) {\n      updateData[\"system.abundant\"] = Boolean(itemData.flags.pf1.abundant);\n    }\n    updateData[\"flags.pf1.-=abundant\"] = null;\n  }\n}\n\nfunction _migrateItemMaterials(itemData, updateData) {\n  for (const materialPath of [\"material\", \"armor.material\"]) {\n    const material = foundry.utils.getProperty(itemData.system, materialPath);\n    if (!material) continue;\n\n    // Convert incorrect material addon data\n    const tg = \"throneglass\";\n    // Weapon\n    if (material?.addon) {\n      let addon = material.addon;\n      if (!Array.isArray(addon)) {\n        updateData[`system.${material}.addon`] = Object.entries(addon)\n          .filter(([_, chosen]) => chosen)\n          .map(([key]) => key);\n        addon = updateData[`system.${materialPath}.addon`];\n      }\n      // Convert Throneglass into main material\n      // Since PF1 v10.3\n      if (addon.includes(tg)) {\n        updateData[`system.${materialPath}.addon`] = addon.filter((ma) => ma !== tg);\n        if (!itemData.system.material?.normal?.value) {\n          updateData[`system.${materialPath}.normal.value`] = tg;\n        }\n      }\n    }\n\n    // Convert material IDs\n    // Since PF1 v10.5\n    const addons = updateData[`system.${materialPath}.addon`] ?? material?.addon ?? [];\n    if (addons?.some((ma) => !!materialChanges[ma])) {\n      updateData[`system.${materialPath}.addon`] = addons.map((ma) => materialChanges[ma] ?? ma);\n    }\n\n    const newMat = materialChanges[material?.normal?.value];\n    if (newMat) updateData[`system.${materialPath}.normal.value`] = newMat;\n  }\n}\n\n/**\n * Migrate item held option.\n *\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v11\n */\nfunction _migrateItemHeld(itemData, updateData) {\n  if (itemData.system.held === \"normal\") {\n    updateData[\"system.held\"] = \"1h\";\n  }\n}\n\n/**\n * Removes data that the system has added to items that is now unused with no new location.\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemUnusedData(item, updateData) {\n  // .priceUnits was never used, removal added with PF1 v9\n  if (item.system.priceUnits !== undefined) {\n    updateData[\"system.-=priceUnits\"] = null;\n  }\n\n  // .description.chat was never used\n  if (item.system.description?.chat !== undefined) {\n    updateData[\"system.description.-=chat\"] = null;\n  }\n\n  // .identifiedName was made obsolete with PF1 v9\n  if (item.system.identifiedName !== undefined) {\n    updateData[\"system.-=identifiedName\"] = null;\n  }\n\n  // Creating items in containers added typeName for no reason (in 0.82.5 and older)\n  if (item.system.typeName !== undefined) {\n    updateData[\"system.-=typeName\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.weaponData !== undefined) {\n    updateData[\"system.-=weaponData\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.range !== undefined) {\n    updateData[\"system.-=range\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.primaryAttack !== undefined) {\n    updateData[\"system.-=primaryAttack\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.activation !== undefined) {\n    updateData[\"system.-=activation\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.unchainedAction !== undefined) {\n    updateData[\"system.-=unchainedAction\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.measureTemplate !== undefined) {\n    updateData[\"system.-=measureTemplate\"] = null;\n  }\n\n  // useCustomTag not used since PF1 v10\n  if (item.system.useCustomTag !== undefined) {\n    updateData[\"system.-=useCustomTag\"] = null;\n    if (item.system.useCustomTag === false && item.system.tag !== undefined) {\n      updateData[\"system.-=tag\"] = null;\n    }\n  }\n\n  // ammoType seems to have never been actually used, but it was stored in items\n  if (item.system.ammoType !== undefined) {\n    updateData[\"system.-=ammoType\"] = null;\n    // Move it anyway just in case, if missing\n    if (!item.system.ammo?.type && item.system.ammoType) {\n      updateData[\"system.ammo.type\"] = item.system.ammoType;\n    }\n  }\n}\n\n/**\n * Migrate Active Effect data.\n * - Removes pf1_ status ID prefixes.\n *\n * Added with PF1 v10\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} [actor] - Actor document\n * @param actor\n */\nconst _migrateActorActiveEffects = async (actorData, updateData, actor) => {\n  // Migate Active Effects\n  const effects = [];\n  for (const ae of actorData.effects ?? []) {\n    const aeUpdate = await migrateActiveEffectData(ae, actor);\n    if (!foundry.utils.isEmpty(aeUpdate)) {\n      aeUpdate._id = ae._id;\n      effects.push(aeUpdate);\n    }\n  }\n\n  if (effects.length) updateData.effects = effects;\n};\n\nfunction _migrateActorUnusedData(actor, updateData) {\n  // Obsolete vision\n  if (foundry.utils.getProperty(actor.system, \"attributes.vision\") !== undefined) {\n    updateData[\"system.attributes.-=vision\"] = null;\n  }\n\n  if (foundry.utils.getProperty(actor.prototypeToken, \"flags.pf1.lowLightVision\") !== undefined) {\n    updateData[\"prototypeToken.flags.pf1.-=lowLightVision\"] = null;\n  }\n\n  // XP max is purely derived value\n  if (actor.system.details?.xp?.max !== undefined) {\n    updateData[\"system.details.xp.-=max\"] = null;\n  }\n\n  // Actor resources have always been derived data\n  if (actor.system.resources !== undefined) {\n    updateData[\"system.-=resources\"] = null;\n  }\n\n  // Conditions no longer are permanently stored in actor data (since PF1 v10)\n  if (actor.system.attributes?.conditions !== undefined) {\n    updateData[\"system.attributes.-=conditions\"] = null;\n  }\n\n  // details.level is derived data\n  if (actor.system.details?.level !== undefined) {\n    updateData[\"system.details.-=level\"] = null;\n  }\n\n  // details.tooltip was for old token tooltip (removed with v11) actor overrides\n  if (actor.system.details?.tooltip) {\n    updateData[\"system.details.-=tooltip\"] = null;\n  }\n}\n\n/**\n * Flatten item tuple arrays\n * Since PF1 v9\n *\n * @param item\n * @param updateData\n */\nfunction _migrateItemTuples(item, updateData) {\n  // Race subtypes\n  if (item.type === \"race\") {\n    if (item.system.subTypes?.length) {\n      if (typeof item.system.subTypes[0] !== \"string\") {\n        updateData[\"system.subTypes\"] = item.system.subTypes.flat();\n      }\n    }\n  }\n\n  // Tags\n  if (item.system.tags?.length) {\n    if (typeof item.system.tags[0] !== \"string\") {\n      updateData[\"system.tags\"] = item.system.tags.flat();\n    }\n  }\n\n  // Feat class associations\n  const classAssociations = item.system.associations?.classes;\n  if (classAssociations?.length) {\n    if (typeof classAssociations[0] !== \"string\") {\n      updateData[\"system.associations.classes\"] = classAssociations.flat();\n    }\n  }\n}\n\n/**\n * Migrate Active Effect data\n *\n * @param {object} ae Active Effect data\n * @param {Actor} actor Actor\n */\nconst migrateActiveEffectData = async (ae, actor) => {\n  if (!actor) return;\n\n  const updateData = {};\n\n  // Fix broken AE\n  if (!ae.name) updateData.name = \"No Name\";\n\n  /**\n   * @param {string} origin Origin string\n   * @returns {string|undefined} Relative UUID, if origin was found\n   */\n  const getNewRelativeOrigin = async (origin) => {\n    if (typeof origin !== \"string\") return; // Invalid origin type, recorded by SBC?\n    const newOrigin = await fromUuid(origin, { relative: actor });\n    if (newOrigin instanceof Item && actor && newOrigin.actor === actor) {\n      return newOrigin.getRelativeUUID(actor);\n    }\n  };\n\n  // Convert no longer used flags.pf1.prigin to origin, if no origin is present\n  const originFlag = ae.flags?.pf1?.origin;\n  if (originFlag) {\n    if (!ae.origin) {\n      const newOrigin = await getNewRelativeOrigin(originFlag);\n      if (newOrigin) updateData.origin = newOrigin;\n    }\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=origin\"] = null;\n  }\n\n  // Convert origin to relative origin\n  if (ae.origin) {\n    const newOrigin = await getNewRelativeOrigin(ae.origin);\n    // Avoid empty updates\n    if (newOrigin && ae.origin !== newOrigin) {\n      updateData.origin = newOrigin;\n    }\n  }\n\n  // Remove pf1_ prefix from status effects\n  if (ae.statuses.some((s) => s.startsWith(\"pf1_\"))) {\n    updateData.statuses = Array.from(new Set(ae.statuses.map((s) => s.replace(/^pf1_/, \"\"))));\n  }\n\n  return updateData;\n};\n\n/**\n * Migrate Roll JSON\n *\n * Creates clone of the roll object.\n *\n * @param {object} roll JSON\n * @param {boolean} inplace - Update in-place, modifying the original object\n * @returns {object|void} - Updated roll object or undefined if nothing was changed\n */\nexport function migrateRollData(roll, inplace = false) {\n  roll = inplace ? roll : foundry.utils.deepClone(roll);\n  let updated = false;\n\n  // Fix corrupt roll class\n  if ([\"RollPF2\", \"RollPF$1\"].includes(roll.class)) {\n    roll.class = \"RollPF\";\n    updated = true;\n  }\n\n  // Delve deeper into the roll object\n  for (const term of roll.terms ?? []) {\n    // _number used in Die terms\n    if (typeof term._number === \"object\" && \"class\" in term._number && \"terms\" in term._number) {\n      const updatedRoll = migrateRollData(term._number, true);\n      if (updatedRoll) updated = true;\n    }\n    // roll used in parenthetical terms\n    if (typeof term.roll === \"object\" && \"class\" in term.roll && \"terms\" in term.roll) {\n      const updatedRoll = migrateRollData(term.roll, true);\n      if (updatedRoll) updated = true;\n    }\n  }\n\n  return updated ? roll : undefined;\n}\n\n/**\n * Migrate Chat Message data\n *\n * @param {object} cmData - Chat message data (such as result of msg.toObject())\n * @returns {object} - Update data\n */\nexport function migrateMessageData(cmData) {\n  const updateData = {};\n\n  const flags = cmData.flags?.pf1;\n\n  const metadata = flags?.metadata;\n  if (metadata) {\n    updateData.type = \"action\";\n\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=metadata\"] = null;\n    updateData.system = metadata;\n\n    if (typeof updateData.system.item !== \"object\") updateData.system.item = { id: updateData.system.item };\n    if (typeof updateData.system.action !== \"object\") updateData.system.action = { id: updateData.system.action };\n  }\n\n  const ident = flags?.identifiedInfo;\n  if (ident) {\n    updateData.system ??= {};\n    updateData.system.item ??= {};\n    updateData.system.item.identified = ident.identified ?? true;\n    updateData.system.item.name = ident.name;\n    updateData.system.item.description = ident.description;\n    updateData.system.action ??= {};\n    updateData.system.action.name = ident.actionName;\n    updateData.system.action.description = ident.actionDescription;\n\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=identifiedInfo\"] = null;\n  }\n\n  // Speed is moved to config\n  if (metadata?.speed) {\n    updateData.system ??= {};\n    updateData.system.config ??= {};\n    updateData.system.config.speed = metadata.speed;\n  }\n\n  // Skill rank reference is moved to config\n  if (metadata?.skill) {\n    updateData.system ??= {};\n    updateData.system.config ??= {};\n    updateData.system.config.rank = metadata.skill.rank;\n  }\n\n  if (flags?.subject) {\n    updateData.system ??= {};\n    updateData.system.subject = flags.subject;\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=subject\"] = null;\n  }\n\n  if (typeof updateData.system?.subject === \"string\") {\n    updateData.system.subject = { info: updateData.system.subject };\n  }\n\n  // Migrate rolls\n  if (cmData.rolls?.length) {\n    let updated = false;\n    const newRolls = [];\n    for (let roll of cmData.rolls) {\n      if (typeof roll !== \"string\") break; // Fail if the data is not in expected format\n      roll = JSON.parse(roll);\n      const newRoll = migrateRollData(roll);\n      if (newRoll) {\n        roll = newRoll;\n        updated = true;\n      }\n      newRolls.push(JSON.stringify(roll));\n    }\n    if (updated) {\n      updateData.rolls = newRolls;\n    }\n  }\n\n  // TODO: System rolls\n  /*\n  if (cmData.system?.rolls) {\n    for (const atk of cmData.system.rolls.attacks ?? []) {\n      const updateData = migrateRollJson(atk.attack); // D20RollPF\n      if (atk.damage) {\n        for (const dmg of atk.damage) {\n          const updateData = migrateRollJson(dmg); // DamageRoll\n        }\n      }\n    }\n  }\n  */\n\n  return updateData;\n}\n\n/**\n *\n * @param {ChatMessage} cm - Chat Message document\n * @param {object} [options] - Additional options\n * @param {boolean} [options.commit=true] - If false, no update is performed. Returns update data instead.\n * @param {MigrationState} [options.state] - State tragger. Internal use only.\n * @returns {Promise<ChatMessage|object|null>} - Returns null if no update is needed, promise if commit is true, object otherwise.\n */\nexport async function migrateMessage(cm, { commit = true, state } = {}) {\n  const updateData = foundry.utils.expandObject(migrateMessageData(cm.toObject()));\n\n  if (!!updateData.type && updateData.type !== cm.type) {\n    if (state) {\n      state.typeChanges = true;\n    } else console.warn(\"Document type changed! Refresh required!\");\n\n    conformTypeUpdate(updateData, cm.toObject());\n  }\n\n  if (foundry.utils.isEmpty(updateData)) return null;\n\n  if (commit) return cm.update(updateData);\n  return updateData;\n}\n\n/**\n * Migrate chat messages.\n *\n * @param {object} options - Additional options\n * @param {boolean} [options.fast=true] - Skip already migrated documents.\n * @param {MigrationState} [options.state] - Internal only. State tracker.\n * @param {*} [options.dialog=null] - Dialog configuration.\n * @param {boolean} [options.noHooks=false]\n */\nexport async function migrateMessages({ fast, state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"chat\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state = await initializeStateAndDialog(state, \"PF1.Migration.Category.Chat\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"chat\", \"PF1.Migration.Category.Chat\", true);\n\n  console.log(\"PF1 | Migration | Chat log starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.messages.size);\n  tracker.setInvalid(game.messages.invalidDocumentIds.size);\n\n  // HACK: Yield thread for smooth dialog experience. Without this the dialog seems to hitch.\n  if (dialog) await new Promise((resolve) => setTimeout(resolve, 100));\n\n  const updates = [];\n\n  const applyUpdates = async () => {\n    try {\n      console.debug(\"PF1 | Migration | Chat Log | Applying updates to\", updates.length, \"chat message(s)\");\n      await ChatMessage.updateDocuments(updates);\n    } catch (err) {\n      console.error(\"Error migrating chat messages\\n\", err, \"\\n\", { updates });\n    }\n    updates.length = 0;\n\n    // HACK: Yield to keep UI somewhat responsive, without this it can become completely unresponsive for a long period of time\n    // This issue probably can happen with the other document types, but is especially prone to happening with messages\n    await new Promise((resolve) => setTimeout(resolve, 0));\n  };\n\n  // Do actual migration\n  // One by one migration, this is slow but works\n  for (const msg of game.messages) {\n    if (fast && isMigrated(msg)) {\n      tracker.ignoreEntry(msg);\n      continue;\n    }\n\n    tracker.startEntry(msg);\n    try {\n      const updateData = migrateMessageData(msg.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        updateData._id = msg.id;\n        updates.push(updateData);\n\n        if (state && updateData.type && updateData.type !== msg.type) {\n          state.typeChanges = true;\n        }\n      }\n    } catch (err) {\n      console.error(err, msg);\n      tracker.recordError(msg, err);\n    }\n    tracker.finishEntry(msg);\n\n    if (updates.length >= pf1.migrations.UPDATE_CHUNK_SIZE) await applyUpdates();\n  }\n\n  if (updates.length) await applyUpdates();\n\n  // Migration complete\n  console.log(\"PF1 | Migration | Chat log complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"chat\" });\n}\n","/**\n * The core API provided by the system, available via the global `pf1`.\n *\n * @module\n */\n\n// Imports for side effects\nimport \"./less/pf1.less\";\nimport \"./module/hmr.mjs\";\nimport \"./module/patch-core.mjs\";\nimport \"module/compendium-directory.mjs\";\nimport \"./module/chatlog.mjs\";\n\n// Import Modules\nimport { moduleToObject } from \"./module/utils/internal.mjs\";\nimport { initializeSocket } from \"./module/socket.mjs\";\nimport { SemanticVersion } from \"./module/utils/semver.mjs\";\nimport * as macros from \"./module/documents/macros.mjs\";\nimport * as chatUtils from \"./module/utils/chat.mjs\";\nimport { initializeModuleIntegration } from \"./module/modules.mjs\";\nimport { ActorPFProxy } from \"@actor/actor-proxy.mjs\";\nimport { ItemPFProxy } from \"@item/item-proxy.mjs\";\nimport * as tours from \"module/tours.mjs\";\n\n// New API\nimport * as PF1 from \"./module/config.mjs\";\nimport * as PF1CONST from \"./module/const.mjs\";\nimport * as applications from \"./module/applications/_module.mjs\";\nimport * as documents from \"./module/documents/_module.mjs\";\nimport * as models from \"./module/models/_module.mjs\";\nimport * as actionUse from \"./module/action-use/_module.mjs\";\nimport * as chat from \"./module/chat/_module.mjs\";\nimport * as _canvas from \"./module/canvas/_module.mjs\";\nimport * as dice from \"./module/dice/_module.mjs\";\nimport * as components from \"./module/components/_module.mjs\";\nimport * as utils from \"./module/utils/_module.mjs\";\nimport * as registry from \"./module/registry/_module.mjs\";\nimport * as migrations from \"./module/migration.mjs\";\nimport * as calendar from \"./module/calendar.mjs\";\n\nimport { registerTokenRuler } from \"./module/canvas/token-ruler.mjs\";\n\n// ESM exports, to be kept in sync with globalThis.pf1\nexport {\n  actionUse,\n  applications,\n  _canvas as canvas,\n  components,\n  PF1 as config,\n  PF1CONST as const,\n  dice,\n  documents,\n  models,\n  migrations,\n  registry,\n  tours,\n  utils,\n  chat,\n};\n\nglobalThis.pf1 = moduleToObject({\n  actionUse,\n  applications,\n  canvas: _canvas,\n  components,\n  config: PF1,\n  const: PF1CONST,\n  dice,\n  documents,\n  models,\n  migrations,\n  registry,\n  utils,\n  chat,\n  // Initialize skip confirm prompt value\n  skipConfirmPrompt: false,\n});\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\nHooks.once(\"init\", function () {\n  console.log(`PF1 | Initializing Pathfinder 1 System`);\n\n  migrations.registerRedirects();\n\n  // Temp store\n  Object.defineProperty(pf1, \"_temp\", {\n    value: {},\n    enumerable: false,\n    writable: false,\n  });\n\n  // Global exports\n  globalThis.RollPF = dice.RollPF;\n\n  // Record Configuration Values\n  CONFIG.PF1 = pf1.config;\n\n  // Canvas\n  CONFIG.Canvas.layers.templates.layerClass = _canvas.TemplateLayerPF;\n\n  // Measured Template\n  CONFIG.MeasuredTemplate.objectClass = _canvas.MeasuredTemplatePF;\n  CONFIG.MeasuredTemplate.defaults.originalAngle = CONFIG.MeasuredTemplate.defaults.angle;\n  CONFIG.MeasuredTemplate.defaults.angle = 90; // PF1 uses 90 degree angles\n\n  // Token\n  CONFIG.Token.objectClass = _canvas.TokenPF;\n  CONFIG.Token.hudClass = _canvas.TokenHUDPF;\n  CONFIG.Token.documentClass = documents.TokenDocumentPF;\n\n  // Document classes\n  CONFIG.Actor.documentClass = ActorPFProxy;\n  CONFIG.Actor.documentClasses = {\n    character: documents.actor.ActorCharacterPF,\n    npc: documents.actor.ActorNPCPF,\n    haunt: documents.actor.ActorHauntPF,\n    trap: documents.actor.ActorTrapPF,\n    vehicle: documents.actor.ActorVehiclePF,\n  };\n  CONFIG.Actor.dataModels.haunt = models.actor.HauntModel;\n  CONFIG.Actor.dataModels.trap = models.actor.TrapModel;\n  CONFIG.Actor.dataModels.vehicle = models.actor.VehicleModel;\n\n  CONFIG.Item.documentClass = ItemPFProxy;\n  CONFIG.Item.documentClasses = {\n    attack: documents.item.ItemAttackPF,\n    buff: documents.item.ItemBuffPF,\n    class: documents.item.ItemClassPF,\n    consumable: documents.item.ItemConsumablePF,\n    container: documents.item.ItemContainerPF,\n    equipment: documents.item.ItemEquipmentPF,\n    feat: documents.item.ItemFeatPF,\n    loot: documents.item.ItemLootPF,\n    race: documents.item.ItemRacePF,\n    spell: documents.item.ItemSpellPF,\n    weapon: documents.item.ItemWeaponPF,\n    implant: documents.item.ItemImplantPF,\n  };\n\n  // Active Effects\n  CONFIG.ActiveEffect.documentClass = documents.ActiveEffectPF;\n  CONFIG.ActiveEffect.legacyTransferral = false; // TODO: Remove once legacy transferral is no longer default.\n  CONFIG.ActiveEffect.dataModels.base = models.ae.AEBaseModel;\n  CONFIG.ActiveEffect.dataModels.buff = models.ae.AEBuffModel;\n\n  // Combat\n  CONFIG.Combat.documentClass = documents.CombatPF;\n  CONFIG.Combatant.documentClass = documents.CombatantPF;\n\n  // Chat\n  CONFIG.ChatMessage.documentClass = documents.ChatMessagePF;\n\n  CONFIG.ChatMessage.dataModels.base = models.chat.BaseMessageModel;\n  CONFIG.ChatMessage.dataModels.item = models.chat.ItemMessageModel;\n  CONFIG.ChatMessage.dataModels.action = models.chat.ActionMessageModel;\n  CONFIG.ChatMessage.dataModels.check = models.chat.CheckMessageModel;\n\n  // UI classes\n  CONFIG.ui.items = applications.ItemDirectoryPF;\n\n  // Dice config\n  CONFIG.Dice.rolls.unshift(dice.RollPF);\n\n  CONFIG.Dice.rolls.push(dice.D20RollPF);\n  CONFIG.Dice.rolls.push(dice.DamageRoll);\n\n  // Replace core terms to provide custom functionality\n  CONFIG.Dice.termTypes.FunctionTerm = pf1.dice.terms.FunctionTermPF;\n  CONFIG.Dice.termTypes.StringTerm = pf1.dice.terms.StringTermPF;\n\n  // Roll functions\n  for (const [key, fn] of Object.entries(pf1.utils.roll.functions)) {\n    CONFIG.Dice.functions[key] = fn;\n  }\n\n  // Combat time progression\n  CONFIG.time.roundTime = 6;\n\n  // Low-Light Vision mixin\n  CONFIG.AmbientLight.objectClass = _canvas.lowLightVision.LLVMixin(CONFIG.AmbientLight.objectClass);\n  CONFIG.Token.objectClass = _canvas.lowLightVision.LLVMixin(CONFIG.Token.objectClass);\n\n  // Register System Settings\n  documents.settings.registerSystemSettings();\n  pf1.utils.internal.setDefaultSceneScaling();\n\n  // Preload Handlebars Templates\n  utils.handlebars.preload();\n  // Register helpers\n  utils.handlebars.helpers.register();\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFCharacter, {\n    label: \"PF1.Sheet.PC\",\n    types: [\"character\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPC, {\n    label: \"PF1.Sheet.NPC\",\n    types: [\"npc\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLite, {\n    label: \"PF1.Sheet.NPCLite\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLoot, {\n    label: \"PF1.Sheet.NPCLoot\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFHaunt, {\n    label: \"PF1.Sheet.Haunt\",\n    types: [\"haunt\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFTrap, {\n    label: \"PF1.Sheet.Trap\",\n    types: [\"trap\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFVehicle, {\n    label: \"PF1.Sheet.Vehicle\",\n    types: [\"vehicle\"],\n    makeDefault: true,\n  });\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF, {\n    label: \"PF1.Sheet.Item\",\n    types: [\"class\", \"feat\", \"spell\", \"consumable\", \"equipment\", \"loot\", \"weapon\", \"buff\", \"attack\", \"race\", \"implant\"],\n    makeDefault: true,\n  });\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF_Container, {\n    label: \"PF1.Sheet.Container\",\n    types: [\"container\"],\n    makeDefault: true,\n  });\n\n  DocumentSheetConfig.registerSheet(JournalEntryPage, \"pf1\", applications.journal.JournalTextPageSheetPF1, {\n    types: [\"text\"],\n    makeDefault: false,\n    label: \"PF1.Sheet.TextPage\",\n  });\n\n  applications.journal.registerV13PageSheet();\n\n  // Register detection modes\n  for (const mode of Object.values(pf1.canvas.detectionModes)) {\n    CONFIG.Canvas.detectionModes[mode.ID] = new mode({\n      id: mode.ID,\n      label: mode.LABEL,\n      type: mode.DETECTION_TYPE ?? DetectionMode.DETECTION_TYPES.SIGHT,\n    });\n  }\n\n  // Register vision modes\n  CONFIG.Canvas.visionModes.darkvision = pf1.canvas.visionModes.darkvision;\n\n  // Initialize socket listener\n  initializeSocket();\n\n  // Initialize module integrations\n  initializeModuleIntegration();\n\n  // Initialize registries with initial/built-in data\n  const registries = /** @type {const} */ ([\n    [\"damageTypes\", registry.DamageTypes],\n    [\"materials\", registry.Materials],\n    [\"scriptCalls\", registry.ScriptCalls],\n    [\"conditions\", registry.Conditions],\n    [\"sources\", registry.Sources],\n  ]);\n\n  for (const [registryName, registryClass] of registries) {\n    pf1.registry[registryName] = new registryClass();\n  }\n\n  Object.defineProperty(pf1.documents, \"customRolls\", {\n    value: function (message, speaker, rollData) {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.documents.customRolls() is deprecated in favor of pf1.chat.command()\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      const re = /^\\/(?<command>h|heal|d|damage)\\s+(?<formula>.*?)(\\s*#\\s*(?<comment>.*))?$/i.exec(message);\n      if (!re) throw new Error(`Failed to parse message: ${message}`);\n\n      const { command, formula, comment } = re.groups;\n      return pf1.chat.command(command, formula, comment, { speaker, rollData });\n    },\n  });\n\n  Object.defineProperty(pf1.registry, \"materialTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.registry.materialTypes has been moved to pf1.registry.materials.\", {\n        since: \"PF1 v11\",\n        until: \"PF1 v12\",\n      });\n      return pf1.registry.materials;\n    },\n  });\n\n  // @deprecated - pf1.config.measureTemplateTypes to CONFIG.MeasuredTemplate.types\n  Object.defineProperty(pf1.config, \"measureTemplateTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.config.measureTemplateTypes is deprecated in favor of CONFIG.MeasuredTemplate.types\",\n        {\n          since: \"PF1 v11\",\n          until: \"PF1 v12\",\n        }\n      );\n\n      return pf1.utils.internal.getTemplateTypes();\n    },\n  });\n\n  //Calculate conditions for world\n  CONFIG.statusEffects = pf1.utils.init.getConditions();\n  // Add swim as special condition\n  CONFIG.specialStatusEffects.SWIM = \"swim\";\n\n  // Register controls\n  documents.controls.registerSystemControls();\n\n  // Register compendium browsers\n  pf1.applications.compendiumBrowser.CompendiumBrowser.registerDefault();\n\n  // Delay pack preparation after babele is ready if it is in use\n  if (game.modules.get(\"babele\")?.active && game.settings.get(\"pf1\", \"integration\").babele)\n    Hooks.once(\"babele.ready\", preparePacks);\n  else Hooks.once(\"ready\", preparePacks);\n\n  // Register token ruler without breaking v12 support\n  registerTokenRuler();\n\n  calendar.register();\n\n  // Call post-init hook\n  Hooks.callAll(\"pf1PostInit\");\n});\n\n/**\n * Prepare pack related data.\n */\nfunction preparePacks() {\n  // Pre-load class ID map for better UX\n  console.debug(\"PF1 | Pre-caching class ID map\");\n  pf1.utils.packs.getClassIDMap();\n}\n\n// Load Quench test in development environment\nif (import.meta.env.DEV) {\n  await import(\"./module/test/index.mjs\");\n}\n\n/* -------------------------------------------- */\n/*  Foundry VTT Setup                           */\n/* -------------------------------------------- */\n\n// Pre-translation passes\nHooks.once(\"i18nInit\", function () {\n  // Localize pf1.config objects once up-front\n  const toLocalize = [\n    \"abilities\",\n    \"abilitiesShort\",\n    \"alignments\",\n    \"alignmentsShort\",\n    \"currencies\",\n    \"distanceUnits\",\n    \"itemActionTypes\",\n    \"senses\",\n    \"skills\",\n    \"timePeriods\",\n    \"timePeriodsShort\",\n    \"durationEndEvents\",\n    \"savingThrows\",\n    \"ac\",\n    \"featTypes\",\n    \"featTypesPlurals\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"raceTypes\",\n    \"conditionTypes\",\n    \"lootTypes\",\n    \"flyManeuverabilities\",\n    \"favouredClassBonuses\",\n    \"abilityTypes\",\n    \"weaponGroups\",\n    \"weaponTypes\",\n    \"weaponProperties\",\n    \"spellComponents\",\n    \"spellDescriptors\",\n    \"spellSchools\",\n    \"spellSubschools\",\n    \"spellLevels\",\n    \"spellcasting\",\n    \"armorProficiencies\",\n    \"weaponProficiencies\",\n    \"actorSizes\",\n    \"abilityActivationTypes\",\n    \"abilityActivationTypesPlurals\",\n    \"limitedUsePeriods\",\n    \"equipmentTypes\",\n    \"equipmentSlots\",\n    \"implantSlots\",\n    \"implantTypes\",\n    \"consumableTypes\",\n    \"attackTypes\",\n    \"buffTypes\",\n    \"divineFocus\",\n    \"classSavingThrows\",\n    \"classBAB\",\n    \"classTypes\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"measureUnits\",\n    \"measureUnitsShort\",\n    \"weightUnitsShort\",\n    \"languages\",\n    \"weaponHoldTypes\",\n    \"auraStrengths\",\n    \"conditionalTargets\",\n    \"bonusTypes\",\n    \"abilityActivationTypes_unchained\",\n    \"abilityActivationTypesPlurals_unchained\",\n    \"actorStatures\",\n    \"ammoTypes\",\n    \"damageResistances\",\n    \"vehicles\",\n    \"woundThresholdConditions\",\n    \"changeFlags\",\n    \"hauntTemplateLabels\",\n    \"traps\",\n  ];\n\n  // Localize pf1.const objects\n  const toLocalizeConst = [\"messageVisibility\"];\n\n  // Config (sub-)objects to be sorted\n  const toSort = new Set([\n    \"bonusTypes\",\n    \"skills\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"conditionTypes\",\n    \"consumableTypes\",\n    \"creatureTypes\",\n    \"creatureSubtypes\",\n    \"featTypes\",\n    \"weaponProperties\",\n    \"spellSchools\",\n    \"languages\",\n  ]);\n\n  const collator = new Intl.Collator(game.i18n.lang, { numeric: true, ignorePunctuation: false });\n\n  /**\n   * Helper function to recursively localize object entries\n   *\n   * @param {object} obj - The object to be localized\n   * @param {string} cat - The object's name\n   * @returns {object} The localized object\n   */\n  const doLocalize = (obj, cat) => {\n    // Create tuples of (key, localized object/string)\n    const localized = Object.entries(obj).map(([key, value]) => {\n      if (typeof value === \"string\") return [key, game.i18n.localize(value)];\n      else if (typeof value === \"object\") return [key, doLocalize(value, `${cat}.${key}`)];\n      return [key, value];\n    });\n\n    if (toSort.has(cat)) {\n      // Sort simple strings, fall back to sorting by label for objects/categories\n      localized.sort(([akey, aval], [bkey, bval]) => {\n        // Move misc to bottom of every list\n        if (akey === \"misc\") return 1;\n        else if (bkey === \"misc\") return -1;\n\n        // Regular sorting of localized strings\n        const labelA = typeof aval === \"string\" ? aval : aval._label;\n        const labelB = typeof bval === \"string\" ? bval : bval._label;\n        return collator.compare(labelA, labelB);\n      });\n    }\n\n    // Get the localized and sorted object out of tuple\n    return Object.fromEntries(localized);\n  };\n\n  const doLocalizePaths = (obj, paths = []) => {\n    for (const path of paths) {\n      const value = foundry.utils.getProperty(obj, path);\n      if (value) {\n        foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n      }\n    }\n  };\n\n  const doLocalizeKeys = (obj, keys = []) => {\n    for (const path of Object.keys(foundry.utils.flattenObject(obj))) {\n      const key = path.split(\".\").at(-1);\n      if (keys.includes(key)) {\n        const value = foundry.utils.getProperty(obj, path);\n        if (value) {\n          foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n        }\n      }\n    }\n  };\n\n  // Localize and sort CONFIG objects\n  for (const o of toLocalize) {\n    pf1.config[o] = doLocalize(pf1.config[o], o);\n  }\n\n  for (const o of toLocalizeConst) {\n    pf1.const[o] = doLocalize(pf1.const[o], o);\n  }\n\n  // Localize buff targets\n  const localizeLabels = [\n    \"buffTargets\",\n    \"buffTargetCategories\",\n    \"contextNoteTargets\",\n    \"contextNoteCategories\",\n    \"ageCategories\",\n    \"vehicleMaterials\",\n  ];\n  for (const l of localizeLabels) {\n    for (const [k, v] of Object.entries(pf1.config[l])) {\n      pf1.config[l][k].label = game.i18n.localize(v.label);\n    }\n  }\n\n  // Extra attack structure\n  doLocalizeKeys(pf1.config.extraAttacks, [\"label\", \"flavor\"]);\n\n  // Level-up data\n  doLocalizePaths(pf1.config.levelAbilityScoreFeature, [\"name\", \"system.description.value\"]);\n\n  // Point buy data\n  doLocalizeKeys(pf1.config.pointBuy, [\"label\"]);\n\n  // Caster type labels\n  doLocalizeKeys(pf1.config.caster.type, [\"label\"]);\n  doLocalizeKeys(pf1.config.caster.progression, [\"label\", \"hint\"]);\n\n  // Localize registry data\n  for (const registry of Object.values(pf1.registry)) {\n    if (registry instanceof pf1.registry.Registry) registry.localize();\n  }\n\n  calendar.localize();\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so documents exist\n */\nHooks.once(\"setup\", () => {\n  calendar.finalize();\n\n  Hooks.callAll(\"pf1PostSetup\");\n});\n\n/* -------------------------------------------- */\n\n/**\n * Once the entire VTT framework is initialized, check to see if we should perform a data migration\n */\nHooks.once(\"ready\", async function () {\n  // Migrate data\n  const NEEDS_MIGRATION_VERSION = \"11.5\";\n  let PREVIOUS_MIGRATION_VERSION = game.settings.get(\"pf1\", \"systemMigrationVersion\");\n  if (typeof PREVIOUS_MIGRATION_VERSION === \"number\") {\n    PREVIOUS_MIGRATION_VERSION = PREVIOUS_MIGRATION_VERSION.toString() + \".0\";\n  } else if (\n    typeof PREVIOUS_MIGRATION_VERSION === \"string\" &&\n    PREVIOUS_MIGRATION_VERSION.match(/^([0-9]+)\\.([0-9]+)$/)\n  ) {\n    PREVIOUS_MIGRATION_VERSION = `${PREVIOUS_MIGRATION_VERSION}.0`;\n  }\n  const needMigration = SemanticVersion.fromString(NEEDS_MIGRATION_VERSION).isHigherThan(\n    SemanticVersion.fromString(PREVIOUS_MIGRATION_VERSION)\n  );\n\n  if (needMigration) {\n    const options = {};\n    // Omit dialog for new worlds with presumably nothing to migrate\n    if (PREVIOUS_MIGRATION_VERSION === \"0.0.0\") options.dialog = false;\n    else console.debug(\"PF1 | Migration |\", PREVIOUS_MIGRATION_VERSION, \"to\", game.system.version);\n\n    // Use lack of actors and items as soft block against new world migration\n    if (game.actors.size || game.items.size) {\n      await pf1.migrations.migrateWorld(options);\n    } else {\n      if (game.user.isGM) {\n        // Set the migration as complete\n        await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n      }\n    }\n  }\n\n  // Inform users who aren't running migration\n  if (!game.user.isGM && game.settings.get(\"pf1\", \"migrating\")) {\n    ui.notifications.warn(\"PF1.Migration.InProgress\", { localize: true });\n  }\n\n  // Migrate system settings\n  await documents.settings.migrateSystemSettings();\n\n  // Populate `pf1.applications.compendiums`\n  pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers();\n\n  // Show changelog\n  if (!game.settings.get(\"pf1\", \"dontShowChangelog\")) {\n    const v = game.settings.get(\"pf1\", \"changelogVersion\");\n    const changelogVersion = SemanticVersion.fromString(v);\n    const curVersion = SemanticVersion.fromString(game.system.version);\n\n    if (curVersion.isHigherThan(changelogVersion)) {\n      const app = new pf1.applications.ChangeLogWindow(true);\n      app.render(true, { focus: true });\n      game.settings.set(\"pf1\", \"changelogVersion\", curVersion.toString());\n    }\n  }\n\n  Hooks.callAll(\"pf1PostReady\");\n});\n\n/* -------------------------------------------- */\n/*  Other Hooks                                 */\n/* -------------------------------------------- */\n\nHooks.on(\n  \"renderChatMessage\",\n  /**\n   * @param {ChatMessage} cm - Chat message instance\n   * @param {JQuery<HTMLElement>} jq - JQuery instance\n   * @param {object} options - Render options\n   */\n  (cm, jq, options) => {\n    const html = jq[0];\n\n    // Hide roll info\n    chatUtils.hideRollInfo(cm, jq, options);\n\n    // Hide GM sensitive info\n    chatUtils.hideGMSensitiveInfo(cm, html, options);\n\n    // Display placeholder if no description is present.\n    const desc = html.querySelector(\".card-content .item-description\");\n    if (desc && !desc.textContent.trim()) {\n      desc.append(game.i18n.localize(\"PF1.NoDescription\"));\n    }\n\n    // Hide non-visible targets for players\n    if (!game.user.isGM) chatUtils.hideInvisibleTargets(cm, html);\n\n    // Create target callbacks\n    chatUtils.addTargetCallbacks(cm, jq);\n\n    // Alter target defense options\n    chatUtils.alterTargetDefense(cm, jq);\n\n    // Optionally collapse the content\n    if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) {\n      html.querySelector(\".card-content\")?.classList.add(\"hidden\");\n    }\n\n    // Optionally hide chat buttons\n    if (game.settings.get(\"pf1\", \"hideChatButtons\")) {\n      for (const button of html.querySelectorAll(\".card-buttons\")) button.remove();\n    }\n\n    // Alter ammo recovery options\n    chatUtils.alterAmmoRecovery(cm, jq);\n  }\n);\n\nHooks.on(\"renderChatMessage\", (cm, [html]) => pf1.utils.chat.addListeners(cm, html));\nHooks.on(\"renderChatMessage\", (_, html) => _canvas.attackReach.addReachListeners(html));\n\nHooks.on(\"renderActorDirectory\", (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n  for (const li of html.querySelectorAll(\"li.actor\")) {\n    li.addEventListener(\n      \"drop\",\n      pf1.applications.CurrencyTransfer._directoryDrop.bind(undefined, li.dataset.documentId || li.dataset.entryId)\n    );\n  }\n});\n\nHooks.on(\"renderItemDirectory\", (app, html) => {\n  if (html instanceof jQuery) html = html[0]; // v12/v13 cross compatibility\n  for (const li of html.querySelectorAll(\"li.item\")) {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.dataset.documentId || li.dataset.entryId)\n    );\n  }\n});\n\nHooks.on(\"dropActorSheetData\", (act, sheet, data) => {\n  if (data.type === \"Currency\") {\n    sheet._onDropCurrency(event, data);\n    return false;\n  }\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n// Delay hotbarDrop handler registration to allow modules to override it.\nHooks.once(\"ready\", () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\n    let macro;\n    const { type, uuid } = data;\n    switch (type) {\n      case \"Item\":\n        macro = macros.createItemMacro(uuid, slot);\n        break;\n      case \"pf1Action\":\n        macro = macros.createActionMacro(uuid, slot);\n        break;\n      case \"skill\":\n        macro = macros.createSkillMacro(data.skill, uuid, slot);\n        break;\n      case \"save\":\n        macro = macros.createSaveMacro(data.save, uuid, slot);\n        break;\n      case \"defenses\":\n      case \"cmb\":\n      case \"concentration\":\n      case \"cl\":\n      case \"attack\":\n      case \"abilityScore\":\n      case \"initiative\":\n      case \"bab\":\n        macro = macros.createMiscActorMacro(type, uuid, slot, data);\n        break;\n      default:\n        return true;\n    }\n\n    if (macro == null || macro instanceof Promise) return false;\n  });\n});\n\n// Render TokenConfig\nHooks.on(\n  \"renderTokenConfig\",\n  /**\n   * @param {TokenConfig} app - Config application\n   * @param {JQuery<HTMLElement>} html - HTML element\n   */\n  async (app, html) => {\n    // Add vision inputs\n    let token = app.document ?? app.object;\n    // Prototype token\n    if (token instanceof Actor) token = token.prototypeToken;\n    if (!token?.id) return; // Default Token Config\n\n    const flags = token.flags?.pf1 ?? {};\n\n    // Add static size checkbox\n    const sizingTemplateData = { flags, appId: app.id };\n    const sizeContent = await renderTemplate(\n      \"systems/pf1/templates/foundry/token/token-sizing.hbs\",\n      sizingTemplateData\n    );\n\n    const systemVision = game.settings.get(\"pf1\", \"systemVision\");\n\n    /** @type {HTMLElement} */\n    html = html instanceof jQuery ? html[0] : html;\n\n    html\n      .querySelector('.tab[data-tab=\"appearance\"] input[name=\"width\"]')\n      .closest(\".form-group\")\n      .insertAdjacentHTML(\"afterEnd\", sizeContent);\n\n    const visionTab = html.querySelector(`.tab[data-tab=\"vision\"]`);\n\n    // Disable vision elements if custom vision is disabled\n    const enableCustomVision = flags.customVisionRules === true || !systemVision;\n\n    const toggleCustomVision = (enabled) => {\n      // Disable vision mode selection\n      visionTab.querySelector(\"select[name='sight.visionMode']\").disabled = !enabled;\n\n      // Disable detection mode tab\n      let dmTab;\n      if (game.release.generation >= 13)\n        dmTab = visionTab.querySelector(\".detection-mode\").parentElement; // V12 and prior\n      else dmTab = visionTab.querySelector(\".tab[data-tab='detection']\");\n\n      for (const el of dmTab.querySelectorAll(\"input,select\")) {\n        if (el.name === \"flags.pf1.customVisionRules\") continue;\n        el.disabled = !enabled;\n      }\n\n      // Disable detection mode tab buttons via CSS\n      // TODO: Apply inert property instead\n      dmTab.classList.toggle(\"disabled\", !enabled);\n    };\n\n    if (!enableCustomVision) toggleCustomVision(enableCustomVision);\n\n    const visionContent = await renderTemplate(\"systems/pf1/templates/foundry/token/custom-vision.hbs\", {\n      enabled: enableCustomVision || !systemVision,\n      noSystemVision: !systemVision,\n      appId: app.id,\n    });\n\n    visionTab.insertAdjacentHTML(\"beforeEnd\", visionContent);\n\n    // Add listener for custom vision rules checkbox\n    // Soft toggle to work nicer with Foundry's preview behaviour\n    visionTab.querySelector(`input[name=\"flags.pf1.customVisionRules\"]`).addEventListener(\"change\", async (event) => {\n      toggleCustomVision(event.target.checked);\n    });\n\n    // Resize windows\n    app.setPosition();\n  }\n);\n\n// V13\nHooks.on(\"renderSettings\", (app, html) => {\n  if (!(game.release.generation >= 13)) return;\n  if (!(app instanceof CONFIG.ui.settings)) return;\n\n  const template = document.createElement(\"template\");\n  template.innerHTML = `<section class=\"flexcol\" id=\"pf1-details\">\n    <h4 class=\"divider\">${game.i18n.localize(\"PF1.Title\")}</h4>\n    <button type=\"button\" data-action=\"pf1-changelog\">\n      <i class=\"fa-solid fa-receipt\" inert></i>\n      ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-documentation\">\n      <i class=\"fa-solid fa-book\" inert></i>\n      ${game.i18n.localize(\"PF1.Help.Label\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-troubleshooter\">\n      <i class=\"fa-solid fa-screwdriver-wrench\" inert></i>\n      ${game.i18n.localize(\"PF1.Troubleshooter.Button\")}\n    </button>\n  </section>`;\n\n  Object.assign(app.options.actions, {\n    \"pf1-changelog\": () => {\n      const chlog =\n        Object.values(ui.windows).find((app) => app instanceof applications.ChangeLogWindow) ??\n        new applications.ChangeLogWindow();\n      chlog.render(true, { focus: true });\n    },\n    \"pf1-documentation\": () => pf1.applications.helpBrowser.openUrl(\"Help/Home\"),\n    \"pf1-troubleshooter\": () => pf1.applications.Troubleshooter.open(),\n  });\n\n  const details = html.querySelector(\"section.info\");\n  details.after(template.content);\n});\n\n// Render Sidebar (V12 and prior)\nHooks.on(\"renderSidebarTab\", (app, html) => {\n  if (!(app instanceof Settings)) return;\n\n  const details = document.getElementById(\"game-details\");\n\n  const template = document.createElement(\"template\");\n  template.innerHTML = `<h2>${game.i18n.localize(\"PF1.Title\")}</h2>\n  <div id='pf1-details'>\n    <button type=\"button\" data-action=\"pf1-changelog\">\n      <i class=\"fa-solid fa-receipt\" inert></i>\n      ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-documentation\">\n      <i class=\"fa-solid fa-book\" inert></i>\n      ${game.i18n.localize(\"PF1.Help.Label\")}\n    </button>\n    <button type=\"button\" data-action=\"pf1-troubleshooter\">\n      <i class=\"fa-solid fa-screwdriver-wrench\" inert></i>\n      ${game.i18n.localize(\"PF1.Troubleshooter.Button\")}\n    </button>\n  </div>`;\n\n  for (const button of template.content.querySelectorAll(\"button\")) {\n    switch (button.dataset.action) {\n      case \"pf1-changelog\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          const chlog =\n            Object.values(ui.windows).find((app) => app instanceof applications.ChangeLogWindow) ??\n            new applications.ChangeLogWindow();\n          chlog.render(true, { focus: true });\n        });\n        break;\n      case \"pf1-documentation\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n        });\n        break;\n      case \"pf1-troubleshooter\":\n        button.addEventListener(\"click\", (ev) => {\n          ev.preventDefault();\n          pf1.applications.Troubleshooter.open();\n        });\n        break;\n    }\n  }\n\n  details.after(template.content);\n});\n\nHooks.on(\"controlToken\", () => {\n  // Refresh lighting to (un)apply low-light vision parameters to them\n  canvas.perception.update(\n    {\n      initializeLighting: true,\n    },\n    true\n  );\n});\n\n/* ------------------------------- */\n/* Expire active effects\n/* ------------------------------- */\n\n/**\n * Expire Active Effects from Tokens\n *\n * Triggers duration end handling of active effects on currently viewed scene.\n *\n * Called with `updateWorldTime` and `canvasReady` events.\n */\nfunction expireFromTokens() {\n  if (!game.users.activeGM?.isSelf) return;\n\n  for (const t of canvas.tokens.placeables) {\n    if (!t.actor) continue;\n\n    // Skip tokens in combat to avoid too early expiration\n    if (t.combatant?.combat?.started) continue;\n\n    try {\n      t.actor.expireActiveEffects();\n    } catch (err) {\n      console.error(`PF1 | Failed to expire active effects from token: ${t.name} [${t.document?.uuid}]\\n`, err);\n    }\n  }\n}\n\n// On game time change\nHooks.on(\"updateWorldTime\", () => expireFromTokens());\n\n// On canvas render\nHooks.on(\"canvasReady\", () => expireFromTokens());\n\n// Ensure correct token sizing\nHooks.on(\"canvasReady\", async (canvas) => {\n  if (!game.user.isGM) return;\n\n  /** @type {TokenDocument[]} */\n  const tokens = canvas.scene?.tokens.filter((t) => t.actor);\n  if (!tokens.length) return;\n\n  console.debug(\"PF1 | Ensuring correct sizing of\", tokens.length, \"tokens(s)...\");\n  for (const token of tokens) {\n    const actor = token.actor;\n\n    try {\n      actor._updateTokenSize?.();\n    } catch (err) {\n      console.error(\"PF1 | Failed to adjust token size for\", token.name, \"\\n\", actor, \"\\n\", err);\n    }\n  }\n});\n\n// Refresh skip state (alleviates sticky modifier issue #1572)\nwindow.addEventListener(\"focus\", () => (pf1.skipConfirmPrompt = false), { passive: true });\n","/**\n * Initialize module compatibility/integration code.\n *\n * Currently integrated modules:\n * - Drag Ruler\n * - DSN (scattered game.dice3d usage)\n */\nexport function initializeModuleIntegration() {\n  const integration = game.settings.get(\"pf1\", \"integration\");\n  // Drag Ruler <https://foundryvtt.com/packages/drag-ruler>\n  if (game.modules.get(\"drag-ruler\")?.active && integration.dragRuler) {\n    Hooks.once(\"dragRuler.ready\", (SpeedProvider) => {\n      class Pf1SpeedProvider extends SpeedProvider {\n        get colors() {\n          return [\n            { id: \"walk\", default: 0x00ff00, name: \"PF1.SETTINGS.DragRulerWalk\" },\n            { id: \"dash\", default: 0xffff00, name: \"PF1.SETTINGS.DragRulerDash\" },\n            { id: \"run\", default: 0xff8000, name: \"PF1.SETTINGS.DragRulerRun\" },\n          ];\n        }\n\n        getRanges(token) {\n          const baseSpeed = pf1.utils.convertDistance(this.getBaseSpeed(token))[0];\n          const rollData = token.actor.getRollData(),\n            inHeavyArmor = rollData.armor.type >= pf1.config.armorTypes.heavy,\n            inHeavyLoad = rollData.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy;\n\n          let runMultiplier = 4;\n          if (inHeavyArmor || inHeavyLoad) runMultiplier = 3;\n          return [\n            { range: baseSpeed, color: \"walk\" },\n            { range: baseSpeed * 2, color: \"dash\" },\n            { range: baseSpeed * runMultiplier, color: \"run\" },\n          ];\n        }\n\n        getBaseSpeed(token) {\n          //const { i: x, j: y } = canvas.grid.getOffset(token);\n          const useElevation = this.getSetting(\"useElevation\");\n          const speeds = token.actor.system.attributes.speed;\n\n          if (useElevation && token.document.elevation > 0) {\n            const flySpeed = speeds.fly.total;\n            if (flySpeed > 0) {\n              return flySpeed;\n            }\n          }\n\n          if (useElevation && token.document.elevation < 0) {\n            const burrowSpeed = speeds.burrow.total;\n            if (burrowSpeed > 0) {\n              return burrowSpeed;\n            }\n          }\n\n          return speeds.land.total;\n        }\n\n        get settings() {\n          return [\n            {\n              id: \"useElevation\",\n              name: \"PF1.SETTINGS.DragRulerUseElevationName\",\n              hint: \"PF1.SETTINGS.DragRulerUseElevationHint\",\n              scope: \"world\",\n              type: Boolean,\n              default: true,\n            },\n          ];\n        }\n      }\n\n      /* global dragRuler */\n      dragRuler.registerSystem(\"pf1\", Pf1SpeedProvider);\n    });\n  }\n}\n","/**\n * Wrapper to register Token Ruler for Foundry v13 in a way that does not break v12 support.\n *\n * TODO:\n * - Refactor after v12 support is removed\n */\nexport function registerTokenRuler() {\n  if (!(game.release.generation >= 13)) return;\n\n  class TokenRulerPF extends CONFIG.Token.rulerClass {\n    //    static WAYPOINT_LABEL_TEMPLATE = \"systems/pf1/templates/hud/waypoint-label.hbs\";\n\n    /** @override */\n    /*\n    _getWaypointLabelContext(waypoints) {\n      const data = super._getWaypointLabelContext(waypoints);\n\n      const tokenDoc = this.token.document;\n      const actor = tokenDoc?.actor;\n      if (!actor) return data;\n\n      const scale = this.token.scene.grid.distance;\n\n      for (const wpd of data) {\n        this.applyWaypointSpeedData(wpd.waypoint, wpd.waypoint.measurement.cost / scale);\n      }\n\n      return data;\n    }\n    */\n\n    /**\n     * @experimental\n     * @param {string} type\n     * @returns {MovementInfo|undefined}\n     */\n    getMovement(type) {\n      /** @type {TokenDocumentPF} */\n      const tokenDoc = this.token.document;\n      /** @type {ActorPF} */\n      const actor = tokenDoc?.actor;\n\n      const move = actor.getMovement(type);\n      if (!move) return;\n\n      // Adjust speed to be in steps\n      move.speed /= pf1.const.step;\n\n      // TODO: Homebrew for run speed modifier\n      //actor.changeFlags.noHeavyEncumbrance\n      //actor.changeFlags.heavyArmorFullSpeed\n\n      return move;\n    }\n\n    /**\n     * @internal\n     * @param {object} wp - Waypoint\n     * @param {number} cost - Steps\n     */\n    applyWaypointSpeedData(wp, cost) {\n      const move = this.getMovement(wp.action);\n      const baseSpeed = move.speed;\n\n      // TODO: Metric support\n      let factor = baseSpeed > 0 ? Math.ceil(cost / baseSpeed) : 10;\n      // Explicit max speed\n      if (factor > move.max) factor = 10;\n      // Factor jumps, ignore max speed since these are for formatting\n      if (move.factors) factor = move.factors[factor] ?? factor;\n\n      wp.speed = {\n        step: cost <= 5,\n        factor,\n        factorBound: Math.clamp(factor, 0, move.max),\n        factorBase: Math.ceil(cost / baseSpeed),\n        singleMove: factor <= 1,\n        doubleMove: factor <= 2 && factor > 1,\n        running: factor > 2,\n        runningFar: factor > 4, // Run feat\n        exceedMovement: factor > 5, // Exceeding move speed limits\n      };\n    }\n\n    /** @override */\n    /*\n    _getSegmentStyle(waypoint) {\n      const { width, color, alpha } = super._getSegmentStyle(waypoint);\n\n      return { width, color, alpha };\n    }\n    */\n\n    /** @override */\n    _getGridHighlightStyle(waypoint, offset) {\n      if (!this.token.actor) return super._getGridHighlightStyle(waypoint, offset);\n\n      // TODO: Fall back to default if scene config is weird\n      // return super._getGridHighlightStyle(waypoint, offset);\n\n      const move = this.getMovement(waypoint.action);\n      if (!move) return super._getGridHighlightStyle(waypoint, offset);\n\n      const totalCost = waypoint.measurement.cost;\n      const scale = this.token.scene.grid.distance;\n      const scaledCost = totalCost / scale;\n\n      if (totalCost == 0) {\n        // TODO: Detect immobility by other means than lacking move speed\n        if (move.speed == 0) return pf1.config.tokenRuler.grid.immobile;\n        return pf1.config.tokenRuler.grid.start;\n      }\n\n      this.applyWaypointSpeedData(waypoint, scaledCost);\n\n      const factor = scaledCost <= 1 && move.speed > 0 && move.step ? 0 : waypoint.speed.factor;\n\n      switch (factor) {\n        case 0:\n          return pf1.config.tokenRuler.grid.step;\n        case 1: // Single move\n          return pf1.config.tokenRuler.grid.move;\n        case 2: // Double move\n          return pf1.config.tokenRuler.grid.move2;\n        case 3: // Run\n          return pf1.config.tokenRuler.grid.move3;\n        case 4: // Run\n          return pf1.config.tokenRuler.grid.run;\n        case 5: // Run feat\n          return pf1.config.tokenRuler.grid.run2;\n        default: // Exceed movement\n          return pf1.config.tokenRuler.grid.exceed;\n      }\n    }\n  }\n\n  CONFIG.Token.rulerClass = TokenRulerPF;\n\n  // Movement action details\n  // Foundry defaults climb, crawl and jump to use double movement\n  CONFIG.Token.movement.actions.climb.getCostFunction = () => (cost) => cost;\n  CONFIG.Token.movement.actions.crawl.getCostFunction = () => (cost) => cost;\n  CONFIG.Token.movement.actions.jump.getCostFunction = () => (cost) => cost;\n}\n","/**\n * `init` hook handler.\n */\nexport function register() {\n  if (game.release.generation < 13) return;\n\n  // Golarian calendar is largely identical to Gregorian calendar\n  // Source: https://paizo.com/community/blog/v5748dyo5la5m?Time-on-GolarionDays-of-the-Week\n  const gregorian = CONFIG.time.earthCalendarConfig;\n  const calendar = foundry.utils.deepClone(gregorian);\n\n  calendar.name = \"PF1.Calendar.Label\";\n  delete calendar.description;\n\n  calendar.days.values = calendar.days.values.map((day) => ({\n    ...day, // Copy Gregorian data\n    name: `PF1.Calendar.Days.${day.ordinal}.Name`,\n    abbreviation: undefined, // `PF1.Calendar.Days.${i}.Abbr`, // No official abbreviations\n  }));\n\n  calendar.months.values = calendar.months.values.map((month) => ({\n    ...month, // Copy Gregorian data\n    name: `PF1.Calendar.Months.${month.ordinal}.Name`,\n    abbreviation: undefined, // `PF1.Calendar.Months.${i}.Abbr`, // No official abbreviations\n  }));\n\n  // Defined inline to support v12\n  class GolarianCalendarData extends foundry.data.CalendarData {\n    /**\n     * Earth year offset\n     */\n    static YEAR_OFFSET = 2700;\n\n    /**\n     * Set world time based on Earth time\n     *\n     * @example\n     * Set current date\n     * ```js\n     * const d = new Date();\n     * const day = d.getDate();\n     * const year = d.getFullYear();\n     * const month = d.getMonth();\n     * game.time.calendar.set({ day, year, month, hour:12, minute:0, second:0 });\n     * ```\n     *\n     * @experimental\n     * @param {object} components - Components as accepted by `game.time.set()`\n     * @returns {Promise<*>} - Result from `game.time.set(...)`\n     */\n    async setEarthTime(components = {}) {\n      if (\"year\" in components) components.year += this.constructor.YEAR_OFFSET;\n      return game.time.set(components);\n    }\n\n    /**\n     * Synchronizes world time with canonical time in terms of Earth-Golarion equivalency.\n     *\n     * Hours, minutes and seconds are preserved from current world time unless explicitly given.\n     *\n     * @param {object} [options] - Additional options\n     * @param {number} [options.hour] - Exact hours\n     * @param {number} [options.minute] - Exact minutes\n     * @param {number} [options.second] - Exact seconds\n     * @experimental\n     * @returns {Promise<*>} - Result from `game.time.set(...)`\n     */\n    async syncCanonical({ hour, minute, second } = {}) {\n      // Preserve part of old time if undefined\n      const oldtime = game.time.components;\n      hour ??= oldtime.hour;\n      minute ??= oldtime.minute;\n      second ??= oldtime.second;\n\n      // Determine new world time in format Foundry expects\n      const d = new Date();\n      const year = d.getFullYear();\n      const gregorian = game.time.earthCalendar;\n      const isLeapYear = gregorian.isLeapYear(year);\n      const month = d.getMonth();\n      // Foundry tracks days from start of year, months are untracked in data form\n      let day = d.getDate(); // Day of current month\n      const months = gregorian.months.values;\n      for (let i = 0; i < month; i++) {\n        if (isLeapYear) day += months[i].leapDays ?? months[i].days;\n        else day += months[i].days;\n      }\n\n      return this.setEarthTime({ day, year, hour, minute, second });\n    }\n  }\n\n  CONFIG.time.golarianCalendarConfig = calendar;\n  CONFIG.time.golarianCalendarClass = GolarianCalendarData;\n\n  // Register as active world calendar as expected by Foundry\n  CONFIG.time.worldCalendarConfig = calendar;\n  CONFIG.time.worldCalendarClass = GolarianCalendarData;\n\n  console.debug(\"PF1 | Golarian calendar registered\");\n}\n\n/**\n * `i18nInit` hook handler to localize calendar strings\n */\nexport function localize() {\n  if (!CONFIG.time.golarianCalendarConfig) return; // In case registering failed or was disabled for some reason\n\n  const calendar = CONFIG.time.golarianCalendarConfig;\n\n  calendar.name = game.i18n.localize(calendar.name);\n  calendar.description = game.i18n.localize(calendar.description);\n\n  /*\n  // Core calendar does not actually have the following localized\n  for (const month of calendar.months.values) {\n    month.name = game.i18n.localize(month.name);\n    if (month.abbreviation) month.abbreviation = game.i18n.localize(month.abbreviation);\n  }\n  for (const day of calendar.days.values) {\n    day.name = game.i18n.localize(day.name);\n    if (day.abbreviation) day.abbreviation = game.i18n.localize(day.abbreviation);\n  }\n  */\n}\n\n/**\n * `setup` hook handler, when `game.time` has been initialized.\n */\nexport function finalize() {\n  if (!CONFIG.time.golarianCalendarConfig) return; // In case registering failed or was disabled for some reason\n\n  // Provide initialized golarian calendar even if something overrides world calendar\n  game.time.golarianCalendar = new CONFIG.time.golarianCalendarClass(CONFIG.time.golarianCalendarConfig, {\n    strict: true,\n  });\n}\n"],"names":["origFunc","TextEditor","_createContentLink","async","match","relativeTo","name","a","call","this","indexOf","args","split","label","pop","length","forEach","o","key","value","firstChild","className","classList","add","setAttribute","lastChild","textContent","Roll","fromData","data","includes","class","original_handleShareImage","ImagePopout","_handleShareImage","image","title","caption","uuid","showTitle","doc","fromUuid","Item","KeyboardManager","prototype","_onFocusIn","event","formElements","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","target","isContentEditable","some","cls","releaseKeys","Object","defineProperty","get","selector","map","el","join","document","querySelectorAll","buttons","spells","items","bestiary","feats","classes","races","buffs","wide","compendiumButtonClick","preventDefault","type","dataset","category","pf1","applications","compendiums","_render","focus","toggleCompendiumVisibility","html","entries","unshift","game","i18n","localize","icon","condition","li","jQuery","pack","packs","config","disabled","callback","configure","Hooks","on","app","querySelector","element","release","generation","createElement","append","info","button","innerText","addEventListener","displayCompendiumVisibility","hiddenIcon","tooltip","ariaLabel","prepend","getMessage","messages","messageId","isOwnedSpellCard","msg","item","itemSource","isOwner","actor","spellCardContextMenu","id","fromUuidSync","system","reference","ChatMessage","closest","parentElement","scrollIntoView","block","rollConcentration","spellbook","rollCL","isValidChangeTarget","filters","valid","ar","include","exclude","fn","ir","getBuffTargets","buffTargets","foundry","utils","deepClone","contextNotes","contextNoteTargets","allowSkills","buffTargetCategories","skills","skillTargets","_skillTargets","s","skillId","slice","startsWith","skill","getSkillInfo","fullName","allowSpells","spell","books","attributes","spellbooks","primary","secondary","tertiary","spelllike","spellTargets","_spellbookTargets","schoolId","keys","spellSchools","push","re","exec","subKey","groups","subLabel","fullKey","mainLabel","concn","moduleToObject","module","result","toString","initialValue","cmdStr","maxValue","clearValue","op","operator","abs","rawValue","isAbsolute","isNegative","parseInt","parseFloat","Number","isFinite","Math","min","isNaN","console","warn","initial","command","createInlineFormula","rollData","_options","formula","closing","_createInlineRoll","rollCls","defaultImplementation","resolvedFormula","replaceFormulaData","trim","pLabel","roll","isDeterministic","evaluateSync","total","simplify","innerHTML","parent","relative","parseUuid","embedded","itemId","Error","getBuffTargetDictionary","targetCategories","contextNoteCategories","categories","values","reduce","cur","options","validity","naturalSort","getTemplateTypes","fromEntries","CONST","MEASURED_TEMPLATE_TYPES","CONFIG","MeasuredTemplate","types","keepUpdateArray","sourceObj","targetObj","keepPath","newValue","getProperty","Array","isArray","newArray","getType","subData","expandObject","mergeObject","setProperty","setDefaultSceneScaling","scaling","units","getDistanceSystem","grid","distance","defaults","width","inputArr","elem","toLocaleLowerCase","numeric","ignorePunctuation","uniformUuid","runSocketFunction","senderId","isFirstGM","users","activeGM","isSelf","sender","eventType","source","sourceActor","dest","destActor","sourceContainer","destContainer","amount","CurrencyTransfer","transfer","sourceAlt","destAlt","alterChatTargetAttribute","message","contentHTML","$","content","save","valueElem","find","targetUuid","isFailure","addClass","removeClass","isSuccess","update","prop","testUserPermission","targetActor","itemData","toObject","implementation","create","deleteEmbeddedDocuments","hasPermission","USER_PERMISSIONS","SETTINGS_MODIFY","refreshActors","renderOnly","err","log","SemanticVersion","static","constructor","major","minor","patch","preRelease","buildMetaData","fromString","str","RegExp","$1","$2","$3","$4","$5","isHigherThan","otherVersion","isLowerThan","isSame","findOldMacro","macros","m","canExecute","visible","isAuthor","createItemMacro","slot","macro","Macro","img","flags","displaySheet","user","assignHotbarMacro","createActionMacro","_slot","action","logCompatibilityWarning","since","until","actions","ui","notifications","error","format","actionMacro","createSkillMacro","skillInfo","createSaveMacro","saveId","saveName","capitalize","createMiscActorMacro","getBookLabel","bookId","book","attack","isMelee","ability","abilities","hideRollInfo","cm","jq","whisper","isBlind","blind","text","addExtraGMInfo","isGM","metadata","identified","cardContent","insertAdjacentHTML","getIdentifiedBlock","hasUniqueActionName","renderTemplate","hideGMSensitiveInfo","gmSensitiveUuid","obj","Token","TokenDocument","remove","showDCs","settings","getSpeakerActor","speaker","DOCUMENT_OWNERSHIP_LEVELS","OBSERVER","node","childNodes","nodeName","children","sensitiveLabel","gmSensitiveInner","inlineEls","fromJSON","unescape","nroll","safeRollSync","escape","JSON","stringify","results","rollEls","replaceChildren","filter","contains","tagName","detailEls","alterAmmoRecovery","recoveryData","getFlag","each","attackIndex","index","ammoId","recovered","i","ia","alterTargetDefense","defenseData","targetEl","targetDefense","saveEl","savingThrow","hideInvisibleTargets","recursive","targetsElem","canvas","ready","once","targetElems","targets","from","hasVisible","t","token","object","isVisible","isObserver","isSecret","getTokenByUuid","addTargetCallbacks","_mouseEnterCallback","_onHoverIn","hoverOutOthers","_mouseLeaveCallback","_onHoverOut","_imageClickCallback","toggle","shiftKey","controlled","chat","panToToken","control","releaseOthers","imgElem","ev","passive","targetACClick","targetSavingThrowClick","addListeners","onToggleDescription","onButton","currentTarget","buttonActionId","getLinkedItem","asNonlethal","nonlethal","attackType","systemRolls","attacks","isCritical","instances","addInstances","damageRolls","dmg","d","models","DamagePartModel","damageType","damage","critDamage","actionSource","applyDamageOptions","critMult","interactive","documents","ActorPF","applyDamage","ammoItem","ammoQuantity","ammoRecovery","failed","chance","recoverChance","random","promises","addCharges","setFlag","Promise","all","count","as","dc","actors","tokens","character","noSound","errored","rollSavingThrow","catch","cause","getConcentrationDC","compendiumEntry","openJournal","desc","_collapsedDescription","popout","windows","appid","setPosition","duration","animatePan","center","_event","displayDefenseCard","rollMode","ActorBasePF","Actor","getDefaultArtwork","actorData","super","defaultIcons","texture","src","reset","_itemTypes","_rollData","_initialized","_initialize","getItemByTag","tag","itemTypes","base","getName","defineProperties","getId","identifier","activeOwner","u","active","sort","b","getCombatants","combat","combatants","c","sharesVision","visionFlag","default","_effectsWithDuration","effects","effect","allApplicableEffects","_hasDuration","toggleStatusEffect","statusId","overlay","interaction","status","statusEffects","e","_id","_","buffId","buff","isActive","activeState","state","setActive","registry","conditions","setCondition","aeData","statuses","has","core","toggleCondition","getConditionImmunities","ci","traits","list","Set","condToImmMap","confuse","daze","dazzle","fatigue","fear","conditionsInTrack","sicken","paralyze","petrify","stun","cond","getInitiativeOptions","expireActiveEffects","getMovement","ActorPFProxy","Proxy","construct","documentClasses","ItemBasePF","createDialog","createOptions","folders","template","context","renderOptions","dialogOptions","applicationOptions","top","left","height","scale","zIndex","k","v","dialogOption","creationData","CreateDialog","waitPrompt","defaultName","subType","documentName","collection","getEmbeddedCollection","collections","takenNames","baseNameKey","hasTypeData","typeNameKey","subtypeName","typeLabels","baseName","_onCreateOperation","operation","syntheticActor","casting","bookData","p","createSpellbook","level","_onLevelChange","_updateTrackingEffect","speeds","speedUpdates","const","movementKeys","fly","maneuverability","flyManeuverability","_pf1NoSupplements","_createSupplements","_onUpdateOperation","changed","updates","oldLevel","newLevel","_pf1SizeChanged","size","_onDeleteOperation","prevLevel","usedBook","inUse","race","allSupplements","Collection","t0","performance","now","collect","classLink","_depth","supplements","links","t1","debug","newItemData","supplement","extraItem","fromCompendium","clearFolder","old","set","newItem","lastSortOrder","createData","isPhysical","quantity","oldItemsOfSameType","max","MIN_SAFE_INTEGER","SORT_INTEGER_DENSITY","newItems","createEmbeddedDocuments","render","allItems","internal","si","getRelativeUUID","updateEmbeddedDocuments","forcePlayerPerspective","canUse","getEmbeddedDocument","embeddedName","components","ItemAction","ItemChange","changes","ItemPFProxy","PF1Tour","Tour","apps","Map","previousStep","hasPrevious","steps","stepIndex","StepsEnum","step","replaceAll","toUpperCase","getStepIndexById","findIndex","openCompendiumBrowser","compendium","comp","openCompendium","strict","applicationClass","force","closeCompendium","compApps","compendiumBrowser","CompendiumBrowser","Compendium","_debug","delete","close","_log","loglevel","namespace","currentStep","_warn","expandCompendiumFolder","folder","clickFolder","expanded","folderEl","click","exit","closeApps","complete","appId","PF1ActorSheetTour","activeSheet","openSheet","compendiumId","getDocument","actorId","sheet","api","ApplicationV2","start","sidebar","activateTab","previous","GO_TO_BASIC_MONSTERS","_postStep","HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM","_preStep","HIGHLIGHT_SHEET","tabs","tab","setting","group","SPELLBOOKS_CONFIGURATION","targetElement","registerPF1Tours","tours","register","costlessActivation","currency","rate","pp","gp","sp","standard","standardRate","casterProgression","castsPerDay","prepared","low","med","high","spontaneous","hybrid","prestige","spellsPreparedPerDay","spellSubschools","calling","charm","compulsion","creation","figment","glamer","haunted","healing","pattern","phantasm","polymorph","scrying","shadow","summoning","teleportation","spellSubschoolsMap","abj","con","div","enc","evo","ill","nec","trs","uni","misc","acpA","acpS","mDexA","mDexS","dex","int","wis","cha","strMod","dexMod","conMod","intMod","wisMod","chaMod","strPen","dexPen","conPen","intPen","wisPen","chaPen","carryStr","carryMult","simple","reach","ageCategory","ageCategoryPhysical","ageCategoryMental","deferred","unskills","strSkills","dexSkills","conSkills","intSkills","wisSkills","chaSkills","allChecks","strChecks","dexChecks","conChecks","intChecks","wisChecks","chaChecks","landSpeed","climbSpeed","swimSpeed","burrowSpeed","flySpeed","allSpeeds","ac","aac","sac","nac","tac","ffac","bab","wattack","sattack","mattack","nattack","rattack","tattack","wdamage","mwdamage","rwdamage","twdamage","rdamage","mdamage","ndamage","sdamage","critConfirm","allSavingThrows","fort","ref","will","cmb","cmd","ffcmd","init","mhp","wounds","vigor","spellResist","bonusFeats","bonusSkillRanks","concentration","cl","sensedv","sensets","sensebse","sensebs","sensels","sensesc","sensetr","defense","savingThrows","abilityChecks","health","speed","senses","sheetSections","interface","browse","classType","weapon","hideEmpty","weaponLike","subTypes","proficient","natural","classFeat","feat","racial","racialAbility","equipment","consumable","miscFeat","inventory","equip","armor","slots","equipmentType","equipmentSubtype","implants","labels","gear","unequippableLoot","ammo","lootType","tradeGoods","container","features","featType","trait","buffType","perm","temp","school","combatlite","catKey","sectKey","section","path","iface","slow","medium","fast","nonaction","free","swift","immediate","move","full","aoo","round","minute","hour","special","reaction","oh","na","long","short","ex","su","normal","touch","flatFooted","fine","dim","tiny","sm","lg","huge","grg","col","tall","young","modifiers","adult","middleAge","venerable","ng","cg","ln","tn","cn","le","ne","ce","arrow","bolt","repeatingBolt","slingBullet","gunBullet","dragoonBullet","dart","siege","humanoid","nonhumanoid","lgt","hvy","shl","twr","none","light","heavy","untyped","untypedPerm","enh","dodge","haste","inherent","deflection","morale","luck","sacred","insight","resist","profane","competence","circumstance","alchemical","progression","lowLightVision","seeInDarkness","seeInvisibility","immuneToMorale","loseDexToAC","noMediumEncumbrance","noHeavyEncumbrance","mediumArmorFullSpeed","heavyArmorFullSpeed","custom","sorcerer","wizard","cleric","oracle","druid","psychic","shaman","witch","alchemist","bard","hunter","inquisitor","investigator","magus","mesmerist","occultist","skald","spiritualist","summoner","summonerUnchained","antipaladin","bloodrager","paladin","ranger","goodSaveBonus","goodSave","npc","mythic","bleed","curse","deaf","deathEffects","disease","energyDrain","exhausted","moraleEffects","mindAffecting","poison","sleep","_label","allAttack","hasteAttack","rapidShotAttack","allDamage","hasteDamage","rapidShotDamage","potion","drug","scroll","wand","rod","staff","pharmaceutical","critical","melee","meleeWeapon","meleeSpell","ranged","rangedWeapon","rangedSpell","spellEffect","sr","broken","timeworn","depleted","adlet","aeon","aether","agathion","air","android","angel","aquatic","archon","astomoi","asura","augmented","azata","behemoth","blight","catfolk","changeling","chaotic","clockwork","cold","colossus","daemon","darkFolk","deepOne","demodand","demon","derro","devil","dwarf","earth","elemental","elf","evil","extraplanar","fire","giant","gnome","goblinoid","good","gray","greatOldOne","grippli","halfling","hive","herald","human","incorporeal","inevitable","kaiju","kami","kasatha","kitsune","kyton","lawful","leshy","manasaputra","mortic","munavri","native","nightshade","oni","orc","phantom","protean","psychopomp","qlippoth","rakshasa","ratfolk","reptilian","robot","sahkil","samsaran","sasquatch","shapechanger","skinwalker","spawnOfRovagug","swarm","troop","vanara","vishkanya","water","wayang","wildHunt","aberration","animal","dragon","fey","magicalBeast","monstrousHumanoid","ooze","outsider","plant","undead","vermin","cp","loot","haunt","basic","trap","vehicle","personal","ft","mi","spec","seeText","unlimited","turnStart","initiative","turnEnd","quadruped","shield","wondrous","slotless","head","headband","eyes","shoulders","neck","chest","body","belt","wrists","hands","ring","feet","clothing","other","lightArmor","mediumArmor","heavyArmor","lightShield","heavyShield","towerShield","iteratives","manual","advanced","flurry","bonus","attackName","flavor","modToAll","unflurry","hp","alt","deltas","positive","negative","abilityScore","clumsy","poor","average","perfect","belligerent","itemBound","chained","elusive","freeRoaming","increasedArea","latent","persistent","possessing","spiteful","tenacious","unyielding","vaporous","variant","cr","crBonus","crBonusTag","cybertech","arm","brain","ears","legs","mwak","rwak","twak","msak","rsak","mcman","rcman","spellsave","heal","hardness","aboleth","abyssal","aklo","ancientosiriani","androffan","aquan","auran","azlanti","boggard","celestial","common","cyclops","dark","draconic","drowsign","druidic","dwarven","dziriak","elven","gnoll","goblin","hallit","ib","ignan","infernal","jistka","kelish","kuru","lashunta","necril","orvian","osiriani","polyglot","reptoid","rougarou","shadowtongue","shoanti","sphinx","strix","sylvan","syrinx","taldane","tekritanin","tengu","terran","thassilonian","tien","treant","triaxian","undercommon","vanaran","varisian","vegepygmy","vudrani","yaddithian","description","single","day","week","charges","tool","food","herb","adventuring","animalGear","reagent","remedy","treasure","entertainment","power","km","penalty","overlandSpeed","imperial","per","out","unit","metric","rounded","exact","hours","double","points","epic","monstrous","featSkills","magical","movement","offense","weakness","traitSeparator","bs","bse","dv","ts","tr","ll","ls","sid","sc","tower","acr","apr","art","blf","clm","crf","dip","dev","dis","esc","han","hea","kar","kdu","ken","kge","khi","klo","kna","kno","kpl","kre","lin","lor","prf","pro","rid","sen","slt","spl","ste","sur","swm","umd","verbal","somatic","thought","emotion","material","divineFocus","acid","darkness","death","electricity","languageDependent","meditative","pain","ruse","sonic","arcane","divine","alchemy","inst","turn","month","year","immobile","color","alpha","move2","move3","run","run2","exceed","swimSkill","factors","climbSkill","crawl","w","h","minChoicesForSearch","magic","faith","social","campaign","cosmic","exemplar","faction","family","mount","region","religion","drawback","electricEyes","sound","vision","arcaneEye","clairvoyance","trueSeeing","bypass","lock","hiddenSwitch","hiddenLock","automatic","repair","trigger","genetic","location","proximity","timed","visual","mechanical","darkvision","leather","wood","stone","metal","space","land","sea","axes","bladesHeavy","bladesLight","bows","crossbows","firearms","flails","hammers","monk","polearms","siegeEngines","spears","thrown","tribal","martial","firearm","ato","blc","brc","dea","dst","dbl","fin","frg","grp","imp","mnk","nnl","rch","sct","sma","slf","snd","spc","thr","trp","exotic","assault","indirect","direct","splash","kg","lbs","publicroll","gmroll","blindroll","selfroll","BaseFilter","choices","randomID","writable","configurable","registerIndexFields","handledTypes","choice","activeChoiceCount","indexField","compendiumIndexFields","setup","prepareChoices","hasChoices","number","applyFilter","entry","getData","TEMPLATE","localizeLabel","activeCount","contents","field","activateListeners","root","UMD","prepare","prepareLowerInfo","new_result","_targetLower","_lower","_targetLowerCodes","lowerCodes","_bitflags","bitflags","Result","_indexes","len","indexes","open","targetLen","highlighted","matchI","indexesI","opened","parts","char","substr","highlight","normalizeScore","_score","score","denormalizeScore","KeysResult","NULL","NEGATIVE_INFINITY","_nextBeginningIndexes","E","normalizedScore","pow","prepareSearch","search","spaceSearches","containsSpace","searches","_info","toLowerCase","getPrepared","targetPrepared","preparedCache","getPreparedSearch","searchPrepared","preparedSearchCache","limit","INFINITY","getValue","isPrepared","objResults","keyI","noTarget","algorithm","preparedSearch","allowSpaces","allowPartialMatch","algorithmSpaces","searchLower","searchLowerCodes","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","prepareNextBeginningIndexes","backtrackCount","lastMatch","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","calculateScore","matches","extraMatchGroupCount","uniqueBeginningIndexes","matchesBest","seen_indexes","first_seen_index_last_search","searchesLen","changeslen","resetNextBeginningIndexes","nextBeginningIndexesChanges","hasAtLeast1Match","allowPartialMatchScores","indexesIsConsecutiveSubstring","newBeginningIndex","toReplace","j","allowSpacesResult","remove_accents","replace","normalize","strLen","lower","lowerCode","charCodeAt","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","prepareBeginningIndexes","lastIsBeginning","lastIsBeginningI","keysSpacesBestScores","tmpTargets","tmpResults","tmp","segs","x","Infinity","noResults","q","r","f","poll","peek","replaceTop","searchBitflags","go","threshold","resultsLen","limitedCount","targetsLen","push_result","keysLen","outer","keysBitflags","scoreFn","cleanup","clear","exports","Application","expandedFilters","_query","_loadingInfo","initialize","_debouncedRender","debounce","_boundResetDragHide","_resetDragHide","bind","_startGlobalListenerts","_stopGlobalListeners","defaultOptions","window","innerHeight","resizable","scrollY","dragDrop","dragSelector","dropSelector","registerDefault","BROWSERS","ItemBrowser","FeatBrowser","SpellBrowser","ClassBrowser","RaceBrowser","CreatureBrowser","BuffBrowser","initializeBrowsers","getIndexes","packNames","resultPromise","indexingPromises","getIndex","finally","_mapEntry","model","inplace","__pack","__packLabel","__uuid","getUuid","__name","fuzzysort","_renderEntries","ENTRY_TEMPLATE","typeName","filterClasses","isPackIncluded","indexCount","entryCount","acc","_activateFilterQueue","filterQueue","idToFilter","tags","filterId","filterName","_queueFilters","unorderedEntries","loadPackIndex","flat","indexed","onError","getFilteredEntries","activeFilters","every","collator","Intl","Collator","compare","selectionStart","input","_element","Function","selectionEnd","query","collapsed","_entries","itemCount","filteredItemCount","loading","loadingInfo","_refocus","_priorState","RENDER_STATES","NONE","_initLazyScrolling","filterContent","_onClickEntry","_onReload","_onClearFilters","header","_onFilterHeaderClick","_onCustomSearchFilter","_onAction","ContextMenu","_getEntryContextOptions","then","stopPropagation","editable","locked","getDocumentClass","canUserCreate","importFromCompendium","renderSheet","clipboard","copyPlainText","_canDragStart","_onDragStart","dataTransfer","setData","setTimeout","capture","removeEventListener","filterContents","listEnd","IntersectionObserver","observer","isIntersecting","currentCount","newEntries","unobserve","newHtml","_dragDrop","rootMargin","observe","NoAutocomplete","Base","_renderFrame","frame","autocomplete","DocumentSheetV2","HandlebarsApplicationMixin","ActorTraitSelector","form","handler","_updateDocument","submitOnClose","submitOnChange","closeOnSubmit","minimizable","position","sheetConfig","scrollable","footer","_searchFilter","_collator","lang","subject","attribute","searchIndex","_name","_searchIndex","_preparePartContext","partId","isEditable","chosen","cssClass","hideSearch","traitSelector","hasCustom","splitCustom","_onRender","_onSearch","customInput","_onCustomInput","_onActiveCustomInput","_deleteCustomTag","attrib","checked","indeterminate","test","_onChangeForm","isComposing","repeat","last","customTag","SEARCH_INCLUDE_ID","els","formConfig","formData","FormData","updateData","union","DragDropApplicationMixin","BaseApplication","DragDropApplication","createDragDropHandlers","permissions","dragstart","drop","_canDragDrop","callbacks","dragover","_onDragOver","_onDrop","DragDrop","AbstractListSelector","_save","addEntry","_onAddEntry","deleteEntry","_onDeleteEntry","dragDropHighlightTimeout","dragDropType","row","dragData","setDragImage","_temp","dragDropData","clearDragHighlights","clearTimeout","dragEventData","getDragEventData","moveToBeforeId","movedId","splice","fields","dtypes","dataCount","_getNewEntry","_getUpdateData","DamageResistanceSelector","isDR","resistances","originalEntries","damageOBJ","damageTypes","dType","isModifier","damages","damageResistances","materials","dr","treatedAs","allowed","lightBlade","oneHandBlade","twoHandBlade","shortName","operators","true","false","_initializeApplicationOptions","rv","_onResistanceCustomChange","_onResistanceChange","index2","updateValue","dtype","val","floor","String","ActorRestDialog","_rest","_prepareContext","performRest","PointBuyCalculator","_onAbilityControl","ablValues","abilityCost","usedPoints","spentPoints","pointBuy","limitsArr","ldata","l","limits","invalidPoints","ablKey","abl","Widget_ItemPicker","columns","_items","parentElem","rootElem","parseHTML","rowElem","itemElem","widthRate","css","offsetLeft","offsetBottom","_onClickItem","_cancelCallback","_onCancel","parentNode","cancel","attr","AbstractSettingsApplication","resetForm","_onFormReset","phraseKey","configKey","assign","activeTab","tabGroups","schema","updateSource","RollPF","totalHalved","safeRoll","suppressError","evalOpts","evaluate","warning","cleanFlavor","getTermTooltipData","term","ttdata","getTooltipData","expression","getTooltip","dice","numericParts","terms","idx","arr","DiceTerm","FunctionTerm","prior","NumericTerm","OperatorTerm","CHAT_TEMPLATE","isPrivate","_evaluated","allowInteractive","templateData","details","limitPrecision","hasDetails","FormulaField","StringField","_toInput","parse","ExperienceConfigModel","abstract","DataModel","defineSchema","disable","BooleanField","track","SchemaField","openDistributor","migrateData","disableExperienceTracking","openXpDistributor","progressionOptions","ExperienceConfig","enabled","hasCustomFormula","HealthConfigModel","auto","NumberField","maximized","variantRules","useWoundsAndVigor","useWoundThresholds","woundThresholdOptions","pc","rules","integer","rounding","blank","nullable","healthRoundingOptions","continuous","getClassHD","actorType","getActorConfig","continuity","hitdice","PC","NPC","Racial","variants","up","nearest","down","healthContinuityOptions","prepareDerivedData","HealthConfig","templates","showWoundsVigorWarning","hdId","hdData","IntegrationConfigModel","diceSoNice","dragRuler","babele","IntegrationConfig","dsnFound","modules","drFound","bFound","PerformanceConfigModel","reachLimit","PerformanceConfig","registerSystemSettings","scope","Boolean","onChange","migrations","isMigrating","registerMenu","hint","restricted","requiresReload","LIMITED","OWNER","perception","initializeLighting","initializeVision","refreshLighting","refreshVision","FRIENDLY","NEUTRAL","HOSTILE","TokenConfig","refreshSheets","placeables","_applyRenderFlags","redrawEffects","migrateSystemSettings","storage","removeItem","getSkipActionPrompt","skipConfirmPrompt","LevelUpForm","FormApplication","simulacra","mold","fcb","unavailable","available","visibility","new","used","useBackgroundSkills","isMythic","levelUp","hd","upgrades","added","isEnhanced","isNull","isValid","isAvailable","isModified","hasPlayerOwner","DICE_ROLL_MODES","PRIVATE","_initData","_initChoices","createTag","isLevelUp","isNewClass","increaseLevel","resolve","addClassWizard","_prepareAssociations","associations","assocs","classAssociations","hpOptions","fc","icons","ICONS","visibilityOptions","messageVisibility","tier","tierAbilityScores","levelAbilityScores","delta","raw","ranks","adv","next","_getNextAbilityScoreLandmark","isReady","table","hdt","gained","_getDefaultHealthOption","_getDefaultHitPoints","ceil","_prepareHealthData","hpConfig","clsConf","hitDie","dieHealth","newHD","oldHD","hpAbl","hpAbility","hpMod","mod","cfg","isFavouredClass","getLevelData","totalHD","mythicTier","totalMythicTier","oldSaves","newSaves","bg","tempActor","isMindless","advSkillRanks","bgSkillRanks","hitDice","perLevel","skillsPerLevel","backgroundSkillClasses","bgranks","backgroundSkillsPerLevel","bonusSkillRankFormula","getRollData","getFeatCount","babBase","favoredClassTypes","_updateObject","_onClickAbilityScoreOperator","_openItemSheet","_onCommit","_onSkip","itemUuid","_adjustAbilityScore","_adjustAbilityScoreValue","abls","cost","_adjustAbilityScoreCost","tierAbilityScoreMult","levelAbilityScoreMult","_initFCBChoices","_initHPChoices","highest","maxLeft","_getHealthFormula","dieSize","_spoofHealthRoll","toJSON","_getHealthRoll","_disableSheet","cardData","newFeatures","toAnchor","outerHTML","hpValue","fcKey","oldFeatCount","itemUpdates","ablUpdate","_updateAbilityScore","extra","featCount","createChatMessage","style","cursor","change","prevValue","levelAbilityScoreFeature","rolls","messageData","CHAT_MESSAGE_STYLES","OOC","getSpeaker","SELF","applyRollMode","altCurrency","notification","order","_curRange","_calcTotal","formField","amounts","_failed","i18nKey","_directoryDrop","docDestId","destDoc","actorUuid","containerId","sourceDoc","allowConversion","sourceCurrency","destCurrency","originalSource","totalAmount","totalSource","newSource","convert","socket","emit","minRequired","inCopper","templatePaths","preload","loadTemplates","renderCachedTemplate","Handlebars","partials","allowProtoMethodsByDefault","allowProtoPropertiesByDefault","preventIndent","ActorSheetPF","ActorSheet","_filters","sections","searchCompositioning","searchRefresh","searchDelay","searchDelayEvent","effectiveSearch","_itemUpdates","_hiddenElems","_skillsLocked","_expandedItems","_activeEdits","navSelector","contentSelector","currentPrimaryTab","_tabs","currentSpellbookKey","isMetricDist","owner","limited","isCharacter","hasHD","usesAnySpellbook","sourceData","skillsLocked","weight","getWeightSystem","weightUnitsShort","tactical","measureUnitsShort","overland","unchainedActions","caster","casterPreparation","_source","inCharacterGeneration","hasProficiencies","numAttacks","iterativeExtraAttacks","iters","fromRange","attackCount","iterativeAttackModifier","hasCurrency","hasAltCurrency","enrichHTMLOptions","secrets","bio","biography","pBio","enrichHTMLUnrolled","biographyHTML","notes","pNotes","notesHTML","_prepareItem","getLabels","sizeModifier","sizeMods","baseBonus","shared","general","meleeAbility","rangedAbility","genericAttacks","abilityMod","modifier","cpValue","calculateTotalItemValue","inLowestDenomination","totalValue","pad","totalLabel","arbitrary","arbitrarySkills","skillCompendiumEntries","journal","untrained","rt","rank","subSkills","subSkillId","subSkill","issues","missing","excess","_prepareTraits","_prepareSenseLabels","parseResistances","eres","_prepareItems","encumbrance","_computeEncumbrance","_prepareSkillsets","_prepareSkills","healthConfig","_prepareHiddenElements","hiddenElems","magicItems","unidentified","carried","aura","unidentifiedName","strength","auraStrengths","auraStrength","identifyDC","dataFilters","firstClass","browser","inheritedEffects","appliedEffects","ae","condImmunities","creatureSubtypes","showInBuffsTab","immune","inherited","_editorState","restoreEditState","isPhysicalLike","isQuasiPhysical","isSingleUse","isCharged","hasResource","maxCharges","noMaxCharges","hasUses","defaultAction","actionId","hasAction","getScriptCalls","hasAttack","hasMultiAttack","hasDamage","hasRange","hasEffect","_canShowRange","range","getRange","getAttacks","conditionals","bonuses","attackBonuses","atk","attackArray","attackSummary","usesAmmo","ammoRemaining","showUnidentifiedData","isEmpty","isStack","destroyed","isBroken","uncharged","equipped","implanted","typeLabel","xpUnbound","_prepareSection","_prepareItemForSection","price","sellValue","stack","di","conditionTypes","languages","armorProf","armorProficiencies","weaponProf","weaponProficiencies","creatureTypes","selected","cssId","allowUpperCase","camelCase","convertDistance","_prepareSpellbook","bookKey","hasCantrips","autoSpellLevelCalculation","autoSpellLevelTotal","spellPreparationMode","casterType","spellLevel","usesSlots","canPrepare","spellLevels","uses","hasIssues","lowAbilityScore","lowLevel","known","preparation","invalidSlots","mismatchSlots","invalidKnown","mismatchKnown","domain","isSchool","invalidLevelData","levelData","sets","adventure","background","localeCompare","skl","backgroundOnlySkills","skillsets","useBGSkills","skillRanks","bgAllowed","bgUsed","sentToBG","subSkl","carriedWeight","load","levels","carryLabel","pct","clamp","encumbered","encumbranceLevels","aboveHead","overhead","offGround","carry","dragPush","drag","qdrIn","qdr","filterLists","_initializeFilterItemList","_onToggleFilter","sb","_searchFilterChange","_searchFilterCompositioning","_onItemSummary","_onItemEdit","contextmenu","_hideShowElement","_onOpenCompendiumEntry","_onOpenCompendiumBrowser","_activateExtendedTooltip","deactivate","_onSpanTextInput","_adjustActorPropertyBySpan","_onInputText","originalEvent","_selectOnClick","_onRollAbilityTest","_onRollBAB","_onRollAttack","_onRollInitiative","_onRollSavingThrow","_onArbitrarySkillCreate","_onSkillCreate","_onSkillEdit","_onSkillDelete","_itemActivationControl","_onRollSkillCheck","_onTraitSelector","_onResistanceSelector","_onRest","_onPointBuyCalculator","_onControlAlignment","_onSensesSelector","_onItemCreate","_onItemDelete","_onItemGive","_onItemSplit","_onItemCard","_quickChangeItemQuantity","_quickEquipItem","_quickCarryItem","_quickIdentifyItem","_itemPreparedToggle","_duplicateItem","_quickAction","_convertCurrency","_setItemUses","el0","converted","activate","direction","TooltipManager","TOOLTIP_DIRECTIONS","LEFT","_onLevelUp","_setSpellUses","_setMaxSpellUses","_onRollConcentration","_onRollCL","off","_setItemActive","_setBuffLevel","_onToggleCondition","_onEditCondition","_onToggleSkillLock","tooltipExtended","bonusTypes","_getTooltipContext","sources","paths","callAll","tooltipDirection","fullId","lazy","_cache","getNotes","getContextNotesParsed","n","subHeader","detail","NaN","CR","fromNumber","offset","getSourceDetails","mode","tD","tB","tR","unhindered","tU","oD","oU","sizeSpecialMods","cmbAbility","hasAbility","sign","drain","undrained","baseMod","unmod","acp","mdex","maxDexBonus","asfSources","itemASF","spellFailure","implant","physical","mental","stature","signed","empty","isBoolean","unlevel","formatter","NumberFormat","signDisplay","attackSources","dmgSources","names","nonCritParts","isNatural","ablMax","dmgAblBaseMod","held","ablDmgMult","damageMult","abilityDamageHeldMultipliers","naturalAttack","dmgAblMod","allDamageSources","maxIncrements","mu","carryCapacity","multiplier","bonusMults","isQuadruped","smult","encumbranceMultipliers","decimals","featSources","skillSources","isBG","fcSkills","fullSkillId","skillIdParts","mainId","shift","subTarget","ablMod","spellPoints","subschool","descriptors","isNumber","newEl","noCap","getAttribute","endsWith","maxName","forbiddenClasses","allowRelative","replaceChild","adjustNumberByStringCommand","readOnly","select","_onDragSkillStart","skillElem","mainSkill","_onDragMiscStart","_onDragSaveStart","_i","ul","verbose","bringToFront","displayCard","_mouseWheelAdd","isInput","WheelEvent","ctrlKey","increase","deltaY","wheelStep","MouseEvent","_commitItemUsesBound","_commitItemUses","setItemUpdate","_updateItems","curValue","oldEl","toNearest","for","_getSubmitData","hasClass","hide","slideDown","slideUp","conditionId","relevantAEs","bottom","getBoundingClientRect","rounds","dialog","getNumber","seconds","time","roundTime","cat0","cat1","part","clsId","spellbookKey","openItemSummary","instant","listEl","expandedId","summary","inert","getChatData","chatcard","firstElementChild","origValue","wheelEvent","getSelection","anchorNode","removeAllRanges","keyHandler","_onSubmit","parents","mainSkillData","skillData","cs","_editSkill","isBackground","baseTag","allowUnderScore","SkillEditor","addCallback","mainSkillId","confirm","DialogV2","rejectClose","modal","deleteSkill","SensesSelector","alignmentsShort","alignment","use","curQuantity","newQuantity","property","_prepareDuplicateItem","rename","original","_stats","duplicateSource","relatedItems","searchUnusedName","existingNames","newName","iter","identNames","unidentNames","currencyType","convertCurrency","categoryId","sectionId","_sortNewItem","oldItems","oldItem","isItemSameSubGroup","linked","findAllLinks","getLinkedItemsSync","targetActorId","getActor","clickEl","renderOpts","SplitStack","wait","keep","createDocuments","rollAbilityTest","rollBAB","maneuver","rollAttack","rollInitiative","createCombatants","rerollInitiative","savingthrow","_applySectionFilter","hasASF","hasSpellbooks","spellbookSections","spellbookSpells","classId","arcaneSpellFailure","asf","allClasses","_0","_1","ct","findSplice","cat","featureSections","ablType","abilityType","typelabel","abilityTypes","found","discrepancy","buffSections","attackSections","cweapons","showInCombat","cspells","cfeat","classfeat","racefeat","miscfeat","cequipment","cconsumables","classSections","_filterSection","spellbookData","quickActions","getQuickActions","_preparedOnly","_hideEmpty","inFilters","_hidden","rollSkill","_searchFilterCommit","show","saveEditState","_renderInner","listId","preventClose","preventRender","_onDropCurrency","_onDropItem","sourceItem","fromDropData","sameActor","keepId","clearSort","_onSortItem","altKey","_alterDropItemData","_onDropItemCreate","deleteContainerContent","fromActor","fromItemsDir","isClass","_adjustNewItem","itemDatas","specifier","getItem","spellType","kind","resultData","ItemSpellPF","toConsumablePrompt","allowSpell","_focusTabByItem","tabId","isAlt","denomination","calculateSellItemValue","sellMultiplier","_disableFields","getElementsByTagName","ActorSheetPFCharacter","xpSettings","disableExperience","showXpBar","minimumExperience","getLevelExp","hasClasses","xp","xpTrack","CHARACTER_EXP_LEVELS","ActorSheetPFNPC","_adjustCR","ActorSheetPFNPCLite","ActorSheetPFNPCLoot","itemValueDenomination","isLootSheet","baseCurrency","getTotalCurrency","cpSellValue","noEquip","ActorSheetPFHaunt","measureTemplateTypes","alignments","noDesc","destruction","pDestruction","destructionHTML","pEffect","effectHTML","pTemplates","hauntTemplates","enrichHTML","templateLinks","link","hauntTemplateLabels","area","convertDistanceBack","ActorSheetPFTrap","getPerceptionModifier","traps","trapTypes","hasTriggerRange","hasTriggerTime","hasPerceptionTrigger","disarm","rollPerception","ActorSheetPFVehicle","isMetricDistance","vehicleSizes","vehicles","pDesc","descriptionHTML","driver","_computeDriverData","driverSkill","skillBonus","stopped","acceleration","currentSpeed","speedOverland","currentSpeedOverland","maxSpeed","maxSpeedOverland","_ev","invCat","convertibleKeys","driverId","allSkills","SpeedEditor","isMetric","isNumeric","Widget_CategorizedItemPicker","hidden","categoryItems","hasVisibleChoices","_onFirstRender","behaviour","FlagSelector","valueObject","decimalPlaces","ItemSheetPF","ItemSheet","_actionUpdates","isolated","itemType","owned","canClassLink","inContainer","isWeapon","isAttack","isWeaponLike","isNaturalAttack","isSpell","isImplant","isEquipment","hasClassLink","classTag","classData","hitDieSizes","wealth","maximize","minimize","inheritCharges","defaultChargeFormula","getDefaultChargeFormula","limitedUsePeriods","isRechargeable","limitedUsePeriodOrder","isActivatable","showBothDescriptions","showIdentified","isIdentified","showIdentifiedData","unchainedActionEconomy","identify","strengthLabel","spellcasting","hasSpellbook","descriptionAttributes","isRelative","constraints","fakeValue","inputValue","priceDecimals","forceUnidentified","fakeName","isRange","current","disableEquipping","canEquip","masterwork","isClassFeature","isTemplate","classSkills","skilldata","isCS","materialCategories","_prepareMaterialsAndAddons","alignmentTypes","_prepareAlignments","addon","materialAddons","wsubtype","weaponSubtype","isRanged","properties","weaponCategories","weaponTypes","equipmentCategories","equipmentTypes","equipmentSlots","hasMultipleSlots","hasSlots","hasSubCategory","variableHands","topDescription","implantTypes","isCybertech","implantSlots","isSpontaneousLike","useSystem","isPreparedSpell","usesSpellpoints","isAtWill","atWill","spellbookChoices","n0","n1","getDescriptionData","dfVariants","MDF","FDF","df","noDurationTiming","isMythicPath","favouredClassBonuses","isBaselikeClass","isRacialHD","isNPCClass","isPCClass","actorHealthConfig","hasSpellType","canUseAmmo","defaultAmmo","invalidDefaultAmmo","extraType","traitsMap","spellDescriptors","weaponGroups","traitKey","showPriority","ch","chData","isDeferred","isCustom","isSimple","isAdd","isSet","isValidType","priority","changePriority","noteTargets","causedConditions","distanceUnits","attackNotes","_prepareItemFlags","distanceUnit","descriptor","_prepareContentSource","getDescription","enrichOptions","pIdentDesc","unidentDesc","pUnidentDesc","pTopDesc","instrDesc","instructions","pInstrDesc","pScripts","_prepareScriptCalls","pLinks","_prepareLinks","EDIT_TRACKING","_getContentSources","main","_selectContentSource","bookSources","extras","datestamp","publisher","date","abbr","edition","Date","materialList","addonList","basicList","isAllowed","addons","basics","alignmentChoices","help","linkData","linkedItem","boolean","dictionary","scriptCalls","oldData","oldLinks","linkType","typedLinks","targetName","relativeInput","setCustomValidity","convertWeight","convertWeightBack","getWeightMultiplier","reduction","relativeKeys","nHpVal","hpVal","nHpBase","hpBase","realMax","maxFormula","_onHoverTooltip","tooltipType","_onHoverWeightTooltip","_onHoverPriceTooltip","mValue","inline","_validateFormula","hasActor","RIGHT","_onActionEdit","_onActionSummary","_onActionControl","_onOpenTextEditor","_openHelpBrowser","_onEntrySelector","_onFlagSelector","ContentSourceEditor","isProficient","proficiency","_onScriptCallEdit","_onScriptCallControl","_openLinkedItem","_onNoteControl","_onNoteTargetControl","_onCreateChange","_onCardNoteControl","_onLinkControl","_onTextAreaDrop","_onOpenChangeMenu","_onEditChange","_createAttack","_createSpellbook","_onItemSelector","_onSpeedEdit","_setActionUses","_onScriptCallDrop","setActionUpdate","_updateActions","script","newScripts","ItemScriptCall","edit","eventData","getContentLink","helpBrowser","openUrl","url","changeId","pf1Link","dropData","srcDoc","actionData","parentItem","targetActionId","prevActions","targetIdx","srcIdx","_onChangeDrop","_onLinksDrop","origin","osrc","targetItem","extraData","createItemLink","targetChangeId","removed","curr","actionDescription","getUniqueActionName","act","newActionData","HTMLEditor","_onDuplicateChange","_onDeleteChange","dismissLockedTooltip","ChangeEditor","ContextNote","getInitialValue","note","noteIndex","sortable","part1","deleted","displayValue","attackItem","ItemAttackPF","fromItem","showInQuickbar","newAttack","flag","EntrySelector","filterFunc","ItemSheetPF_Container","_prepareContents","usystem","coinage","merge","itemValue","_openItemSummary","animation","_onItemTake","_quickItemActionControl","createContainerContent","nextElementSibling","droppedItem","rootItem","containerItems","dropTarget","targetId","siblings","siblingId","SortingHelpers","performIntegerSort","updateContainerContents","ItemCreateDialog","moved","_updateCreationData","getDefaultName","FormDataExtended","initialData","getSubtypes","classTypes","attackTypes","featTypes","consumableTypes","lootTypes","buffTypes","_prepareFormContext","_formatFolderSelectOptions","subtypes","_key0","label0","_key1","label1","subtype","defaultType","documentTypes","first","promise","_onClose","ItemActionSheet","actionType","isHealing","isCombatManeuver","canCrit","critRange","hasCritDamage","critParts","hasNonCritDamage","isSelfCharged","chargedUsePeriods","showMaxChargeFormula","self","canInputRange","canInputMinRange","minUnits","isRangeFormula","canInputDuration","itemName","itemEnh","usesSpellPoints","parentOwned","activation","hasActivationType","abilityActivationTypes","abilityActivationTypes_unchained","showMaxRangeIncrements","isWeaponAttack","inheritedAmmoType","inheritedMisfire","misfire","ammoTypes","minRangeAvailable","getConditionalTargets","conditionalTargets","hasConditionalTargets","conditional","targetEntry","subTargets","conditionalModifierTypes","getConditionalModifierTypes","conditionalCritical","getConditionalCritical","addonMaterial","isPureRanged","canHold","inheritedHeld","weaponHoldTypes","heldAbilityMultiplier","hasKeyAbility","keyAbility","keyAbilityLabel","_key","attackAbility","_default","_defaultAttackAbility","damageAbility","_defaultDamageAbility","paMultiplier","getPowerAttackMult","extraAttacksTypes","extraAttacks","extraAttacksConfig","allowCustom","isValidAddon","normalMaterial","trackStaleEditors","_onEditImage","_onAttackControl","_onDamageControl","_onClickDamageType","_onNoteEntryControl","_onConditionalControl","_onAlignmentChecked","ItemConditional","ItemConditionalModifier","k2","k3","damageParts","damagePart","damageIndex","DamageTypeSelector","updateCallback","damageArray","conditionalEl","modifierEl","manualExtraAttacks","attackPart","FilePicker","previousValue","preserveArray","k0","k1","oldConds","oldC","oldM","array","_sheet","_state","_createDocumentIdLink","idLink","_renderOuter","BOOLEAN_OPERATOR","CheckboxFilter","baseFilter.BaseFilter","booleanOperator","_choiceQuery","_debouncedFilterChoices","getChoicesFromConfig","configObject","labelKey","innerSet","innerKey","innerValue","autoSort","sorted","hasControls","MIN_SEARCH_CHOICES","hasSearch","prepareBooleanOperator","fieldData","defaultBooleanOperator","observedValues","flatMap","autoLocalize","localizeChoices","i18nPrefix","localizePrefix","toggleChoice","activeChoices","testMethod","choiceQuery","checkbox","choiceKey","SearchFilter","cleanQuery","matchingChoices","choiceSet","TextFilter","inputs","placeholder","_parseInput","textInput","NumberRangeFilter","parsedInput","ItemTypeFilter","WeaponTypeFilter","WeaponSubtypeFilter","WeaponPropertyFilter","weaponProperties","WeaponGroupFilter","EquipmentTypeFilter","EquipmentSubtypeFilter","ItemSlotFilter","ConsumableTypeFilter","MiscItemTypeFilter","ItemPriceFilter","ItemCasterLevelFilter","PackFilter","usedPacks","orderedPacks","TagFilter","SourceFilter","SourceEntry","registrySources","__source","allowInitialNumbers","SpellSchoolFilter","SpellSubschoolFilter","configChoices","SpellDescriptorFilter","SpellLearnedByClassFilter","classNames","getClassIDMap","SpellLearnedByDomainFilter","SpellLearnedBySubdomainFilter","SpellLearnedByBloodlineFilter","SpellLevelFilter","activeLearnedAtFilters","activeLevelChoices","learnedAt","learnedAtChoice","learnedAtLevel","levelChoice","FeatTypeFilter","FeatClassFilter","ClassTypeFilter","ClassHitDieFilter","ClassBaseAttackBonusFilter","classBAB","ClassSkillPointsFilter","ClassSavingThrowFilter","classSavingThrows","noneFilterResult","ClassFortitudeFilter","ClassReflexFilter","ClassWillFilter","CreatureTypeFilter","CreatureSubTypeFilter","BuffTypeFilter","CreatureCRFilter","commonFilters.PackFilter","buffFilters.BuffTypeFilter","commonFilters.SourceFilter","commonFilters.TagFilter","classFilters.ClassTypeFilter","classFilters.ClassHitDieFilter","classFilters.ClassBaseAttackBonusFilter","classFilters.ClassSkillPointsFilter","classFilters.ClassFortitudeFilter","classFilters.ClassReflexFilter","classFilters.ClassWillFilter","creatureFilters.CreatureCRFilter","featFilter.FeatTypeFilter","featFilter.FeatClassFilter","itemFilters.ItemTypeFilter","itemFilters.WeaponTypeFilter","itemFilters.WeaponSubtypeFilter","itemFilters.WeaponPropertyFilter","itemFilters.WeaponGroupFilter","itemFilters.EquipmentTypeFilter","itemFilters.EquipmentSubtypeFilter","itemFilters.ItemSlotFilter","itemFilters.ConsumableTypeFilter","itemFilters.MiscItemTypeFilter","itemFilters.ItemPriceFilter","itemFilters.ItemCasterLevelFilter","equipmentSubtypes","at","raceFilters.CreatureTypeFilter","raceFilters.CreatureSubTypeFilter","spellFilter.SpellSchoolFilter","spellFilter.SpellSubschoolFilter","spellFilter.SpellDescriptorFilter","spellFilter.SpellLearnedByClassFilter","spellFilter.SpellLearnedByDomainFilter","spellFilter.SpellLearnedBySubdomainFilter","spellFilter.SpellLearnedByBloodlineFilter","spellFilter.SpellLevelFilter","learnedAtLevels","learnedAtSource","addHeaders","page","maxLevel","JournalEntry","pages","headers","npage","nlevel","JournalTextPageSheetPF1","JournalTextPageSheet","enriched","editor","registerV13PageSheet","unregisterV1Sheet","DocumentSheetConfig","unregisterSheet","JournalEntryPage","registerV2Sheet","sheets","JournalEntryPageProseMirrorSheet","registerSheet","makeDefault","editorToggledState","editors","rendered","renderContext","ProseMirror","dom","serializeString","instance","view","ActionSelector","_onClickAction","ChatAttack","actionUse","hasCritConfirm","AttackDamage","damageRows","hasCards","cards","effectNotes","effectNotesHTML","notesOnly","setAction","setAmmo","setRollData","critCount","ablMult","setEffectNotesHTML","addAttack","noAttack","extraParts","conditionalParts","extraChanges","critConfirmBonus","parsedConfirmResult","getDefenseDC","armorAsDR","method","Dice","fulfillment","methods","d20","baseCritMult","isCrit","critMultBonus","addDamage","repeatCount","rollDamage","totalDamage","addEffectNotes","noteSources","explosionRadius","explode","isNat20","isNat1","_createInlineRolls","inlineRoll","crit","finalize","half","ERR_REQUIREMENT","freeze","NO_ACTOR_PERM","DISABLED","INSUFFICIENT_QUANTITY","INSUFFICIENT_CHARGES","MISSING_AMMO","INSUFFICIENT_AMMO","DISALLOWED_ACTION_TYPE","ActionUse","checkRequirements","noManeuvers","cache","D20RollPF","standardRoll","dcBonus","chargeCost","chargeCostBonus","createAttackDialog","AttackDialog","alterRollData","useOptions","powerAttack","primaryAttack","clCheck","measureTemplate","manyshot","rapidShot","pointBlankShot","abilityMult","flanking","highGround","charge","fullAttack","atkBonus","attackBonus","dmgBonus","damageBonus","manyShot","useMeasureTemplate","abilityDamageMultOverride","basePowerAttackBonus","powerAttackBonus","paMult","powerAttackPenalty","condId","naturalAttacks","casterLevelCheck","concentrationCheck","generateAttacks","forceFullAttack","allAttacks","ActionUseAttack","ammos","getAmmo","ammoCost","abundant","autoSelectAmmo","ammoType","availableAmmo","_filterAmmo","isDefault","subtractAmmo","ammoUsage","usage","updateAmmoUsage","chatAtk","chatAttack","remaining","handleConditionals","rollDataConds","modKey","conditionalRoll","partString","partID","flavoredFormula","conditionalPartsCommon","checkAttackRequirements","generateChatAttacks","addAttacks","addEmptyAttack","hasAmmo","saveDC","getDC","_getConditionalParts","conditionalTemplates","addPart","templateKey","templateStr","parsedStr","powerAttackCritBonus","critMultiplier","chatAttacks","addFootnotes","typeMap","footnotes","promptMeasureTemplate","mt","dist","distancePixels","scene","dimensions","maxDist","maximum","AbilityTemplate","actorSheet","sheetRendered","drawPreview","place","handleDiceSoNice","dice3d","isEnabled","chatData","mergeRolls","skipRolls","showRoll","pools","pool","showForRoll","attackPool","PoolTerm","critPool","getMessageData","OTHER","soundEffect","sounds","extraText","enrichNotes","itemChatData","formatTextNotes","commonProperties","addGenericPropertyLabels","combatProps","addCombatPropertyLabels","clNotes","dcSchoolNotes","clSchoolNotes","tokenUuid","identifiedDescription","unidentifiedDescription","hasSave","gmSensitiveLabel","rangeUnits","rangeLabel","spellFailureRoll","spellFailureSuccess","generateChatMetadata","totalChargeCost","useSpellPoints","showInAction","materialKey","normalMaterialAction","normalMaterialItem","baseMaterialItem","addonMaterialAction","addonMaterialItem","materialAddonNames","actionAlignments","itemAlignments","attackPenalty","woundThresholds","woundThresholdConditions","sl","attackRolls","damageRoll","executeScriptCalls","scriptData","postMessage","chatTemplate","chatMessage","hideChat","getTargets","getTokensWithin","combatant","isDefeated","_getDefenseDCParts","check","babIdent","prepareChargeCost","baseCostRoll","getChargeCost","process","skipDialog","measureResult","reqErr","code","perAttack","reject","premessage_promises","totalCost","updateTokenTargets","broadcastActivity","appOptions","initAmmoUsage","initAttacks","isPrimaryAttack","_toggleExtraAttack","allAmmo","validAmmoChoices","setAttackAmmo","rollModes","hasDamageAbility","isThrown","isMeleeWeaponAttackAction","isRangedWeaponAttackAction","isFeat","hasTemplate","inheritable","mult","_onToggleFlag","_onChangeAttribute","_onSelectChange","_onToggleConditional","_onAmmoSelectClick","_onAmmoControlClick","_onAmmoClick","_unfocusElements","_hideExtraAttacks","_showExtraAttacks","resolveAttack","selectedIndex","cancelable","translationString","attackBonusTotal","listElem","defaultAmmoId","ammoData","oldAbundant","ChangeLogWindow","lastVersion","autoDisplay","dontShowAgain","xhr","XMLHttpRequest","onload","_processChangelog","response","statusText","responseURL","send","changelog","md","converter","showdown","Converter","latestVersion","version","latestMajor","latest","majorPatches","legacy","currentVersion","lines","line","makeHtml","patches","toggleDamageType","_toggleDamageType","customTypes","allTypes","standardTypes","categoryOrder","dt","sortOrder","dm","categoryObj","o2","idxA","idxB","AbstractDocumentSelector","delay","compositioning","_getSections","searchTerm","showSectionHeaders","searchInput","_onSearchComposition","_resolveResult","ItemSelector","itemList","HelpBrowserPF","forward","_forwardInHistory","back","_backInHistory","home","_home","_backwardHistory","_forwardHistory","_currentPage","extensions","defaultExtensions","noHeaderId","ghCompatibleHeaderId","prefixHeaderId","currentUrl","hasHistoryBack","hasHistoryForward","pageContent","slugify","getCurrentHistoryObject","contentElement","scrollTop","headerElement","getElementById","href","removeAttribute","stopImmediatePropagation","regex","_offset","_string","foundrySrc","getRoute","ScriptEditor","_promises","submit","awaitResult","resolved","resolvePromises","_onSave","convertKeys","noSystemVision","prototypeToken","gridUnits","isToken","DocumentSheet","_callbacks","skillName","isSubSkill","isStaticSkill","skillTag","documentType","skillCoreUpdateData","newData","oldSubSkillId","oldSkillId","tagChanged","msgOpts","documentClass","_openCompendiumEntry","_onCompendiumControls","reportValidity","canAdd","stub","_getHeaderButtons","sidx","_onDropContentSource","dropIndex","addVisionSharingContextMenu","entryId","documentId","visionSharingSheet","offsetTop","innerWidth","VisionSharingSheet","_onReset","_getUniformValue","_config","players","userId","oldUsers","userUpdateKeys","unsetFlag","_html","ExperienceDistributor","_doSplitReward","_doFullReward","_bonusXP","_actors","getActorData","characters","npcs","totalExperience","toLocaleString","splitExperience","bonusXP","isNPC","actorID","_giveExperience","splitEvenly","isSafeInteger","updateDocuments","getXP","getCR","_shouldActorBeSelected","xpLabel","fromCombat","copyUuid","onCopyUuid","uniqueId","getID","defaultPriority","earlyPriority","latePriority","early","late","isValidOp","_onChangeTargetControl","inParent","oldOptions","ItemDirectoryPF","renderUpdateKeys","Troubleshooter","migrate","_runMigration","_openHelp","unlock","reprocess","migrating","world","unlockPacks","report","kb","discord","channel","faq","helpmodule","migrateWorld","server","migrateModules","migrationButtons","ActorSelector","ownership","actorList","splitValue","valueAsNumber","slider","oldStack","newStack","HTMLField","_processSubmitData","submitData","ApplyDamage","bonusType","asWounds","isMagic","resistanceIds","damageIds","adamantine","extraOptions","damageOptions","dualHeal","enumerable","woundsAndVigor","_prepareInstances","_evaluateAttack","_prepareTargets","apply","_onApply","hasPhysical","hasEnergy","multiTarget","isUtility","_addContextTags","ids","materialId","align","ADAMANTINE_THRESHOLD","adamantineId","ADAMANTINE_ID","_addTargetData","_refreshTarget","y","prev","equals","typeIds","enhancement","enhancementBonus","hasEnhancement","hasDRMagic","drEntries","_parseResistanceEntry","type0","type1","am","em","enhancementMaterialPenetration","alignmentId","unknownTypes","isEnergy","hpconfig","hasHardness","ratio","getResistances","visibleDR","visibleER","_getRelevantDamageTypes","effectiveHardness","_needsHardnessAdjust","_applyHardnessAdjust","effective","haveDIV","haveDER","enable","typeId","resistanceType","res","allDamageTypes","commonTypes","enrichResistance","hasGeneric","intersects","isER","_isReducedBy","_applyReduction","overflow","_processImmunities","immunities","immunized","immunity","_processReductions","reductions","rdata","isMixed","isUntyped","physicalReduction","energyReduction","energy","reduced","targetReduction","generalReduction","gr","individual","updated","applyDamageOpts","_getTargetDamageOptions","targetCount","ins","subtitle","isFlag","isFlat","newKeys","ActiveEffectPF","ActiveEffect","_preCreate","isTemporary","isTracker","hideFromToken","turns","isSuppressed","ChatMessagePF","identifiedInfo","_initRollObject","maybeRollObject","hasItemSource","templateId","targetIds","prepareBaseData","_setTitle","alias","actionName","getHTML","isRoll","events","renderChatMessagePF","renderHTML","clean","pruneData","_onCreate","_onCreateCheck","sceneId","tokenId","scenes","refMsg","addCombatTrackerContextOptions","duplicateCombatantInitiativeDialog","combatantId","duplicateWithData","messageHookPriorityHack","CombatPF","Combat","updateTurn","messageOptions","currentId","roller","rollerName","opts","dialogData","showInitiativeDialog","getInitiativeRoll","cRollMode","PUBLIC","toMessage","chatTemplateData","_onUpdate","worldTime","_onNewTurn","_preUpdate","diff","_isForwardTime","skipped","_detectSkippedTurns","_handleSkippedTurns","_processEndTurn","_processTurnStart","_processInitiative","r0","rd","roundChange","currentTurn","timeOffset","advanceTime","turnTimeOffset","rechargeItems","period","_onDelete","started","xpCfg","CombatantPF","Combatant","updateResource","resource","_getInitiativeFormula","defaultParts","SHIFT_KEYS","registerSystemControls","keybindings","uneditable","onDown","onUp","TokenDocumentPF","_preCreateSetSize","deleteFlags","sizeKey","sizeConf","tokenSizes","scaleX","scaleY","_getTrackedAttributesFromObject","bar","hpPart","_getTrackedAttributesFromSchema","getBarAttribute","barName","alternative","_syncSenses","detectionModes","baseRange","sight","visionMode","basicMode","lightPerception","blindsight","blackAndWhite","trueseeing","trr","_sortDetectionModes","visionDefaults","Canvas","visionModes","fieldName","_detectMode","DetectionMode","BASIC_MODE_ID","PRIORITY","allowedMovement","movementModes","movementId","applyChanges","changeOverrides","changeTargetData","getSortChangePriority","targetA","targetB","typeA","typeB","prioA","_sortChanges","changeFlags","chflagItems","hasChanges","getSourceInfo","sourceInfo","refreshDerivedData","continuousChanges","flats","createOverride","_safeApplyChange","applySourceInfo","cc","skillBasePrio","aSort","bSort","getChangeFlat","modifierType","subskill","speedKey","schoolDC","schoolCL","concnMatch","bookCL","sklKey","spread","subSklKey","pf1GetChangeFlat","setSourceInfoByName","srcInfo","getHighestChanges","ignoreTarget","highestTemplate","highestID","stackingBonusTypes","addDefaultChanges","Spellbook","addSpell","SpellbookLevel","SpellbookSlots","domainMax","domainUnused","SpellRanges","calculateRange","SpellbookMode","isSpontaneous","isSemiSpontaneous","Resource","_configure","itemFlags","_visionSharingSheet","_getSourceLabel","bFlags","dFlags","dEntries","_prepareChanges","_prepareTypeChanges","applyActiveEffects","prepareConditions","expiredEffects","startTime","startRound","aeInit","end","disableActiveEffects","deleteActiveEffects","disableBuffs","reason","deleteAEContext","disableAEContext","shieldTypes","armorTypes","resources","_resetInherentTotals","pf1PrepareBaseActorData","userPenalty","refreshAbilityModifiers","fractionalToString","_prepareSenses","_prepareClassSkills","_finalizeTraits","_prepareCreatureType","living","senseId","sense","_prepareNaturalReach","getReach","skillSet","csSources","csItem","classSkillName","isClassSkill","skillKey","hasArmorProficiency","aprof","baseArmorProficiency","baseTypes","hasWeaponProficiency","override","wprof","_updateSpellBook","domainSlots","domainSlotValue","casts","unused","castsPerDayTables","hasProgressionChoices","preparedForLevelTables","bookClassId","bookClass","refresh","_generateSpellbookCache","bookInfo","spellbookAbility","spellSlotAbilityScoreBonus","spellSlotAbilityBonusFormula","spellSlotAbilityScore","spellSlotAbilityMod","getAbilityModifier","clTotal","classLevelTotal","autoFormula","autoSpellLevelCalculationFormula","autoBonus","autoTotal","clBonus","woundThresholdChangeTargets","newCL","woundPenalty","concFormula","concentrationFormula","formulaRoll","rollBonus","classAbilityMod","getAbilityBonus","getSpellSlotIncrease","useAuto","autoSpellLevels","isPure","isHybrid","pure","classLevel","castsForLevels","preparedForLevels","castsModAllLevelsFormula","castPerDayAllOffsetFormula","castsModAllLevels","prepModAllLevelsFormula","preparedAllOffsetFormula","prepModAllLevels","castsOffsetFormula","castPerDayOffsetFormula","castsOffset","prepOffsetFormula","preparedOffsetFormula","prepOffset","abilityBonusSlots","preparedForLevel","maxSlots","prep","maxLevelByAblScore","noAbilityLimit","levelSpells","lvlSlots","slotCost","isDomain","domainRemaining","domainSlotsRemaining","bookKeys","allSpells","updateSpellbookInfo","maxBonus","encPen","gearPen","_applyArmorPenalties","acpSkill","prepareItemLinks","_prepareDependentData","updateItemResources","natReach","prepareSpecificDerivedData","prepareCMB","_prepareOverlandSpeeds","warnOnDuplicate","shrAtk","genAtk","cmbAbl","cmbAblMod","pf1PrepareDerivedActorData","totalAtk","updateWoundThreshold","backgroundSkills","acAbl","acTouchAbl","cmdDexAbl","dexAbility","acAblMod","acTouchAblMod","cmdDexAblMod","maxDex","acAblKey","flatFootedTotal","reducedSpeed","sInfo","encLevel","encLevels","eqData","_prepareArmorData","speedValue","getReducedMovementSpeed","encACPPenalty","encMaxDex","encLabel","maxDexLabel","attackACPPenalty","eqType","isShieldOrArmor","itemACP","bsInfo","getProficiency","mDex","itemMDex","ignoreNull","sInfoA","brokenId","totalACP","prepareLinks","sourceDetails","dexDenied","changeGrp","sourceGroups","typeBonuses","srcValue","isDistance","isAC","stacking","_getInherentTotalsKeys","armorBonus","shieldBonus","skillKeys","_getBaseValueFillKeys","getTokenDocument","sizeValue","staticSize","maxSizeIndex","sizeChart","sizeIndex","maxVigor","excessVigorDamage","absoluteKeys","ablData","absKey","cbooks","prepMode","prog","progs","_detectHealthChange","updateVision","visionUpdate","getActiveTokens","initializeVisionSource","debouncedLightSourceReInit","sourceUser","hasProperty","visionSharing","_updateTokenSize","_onCreateDescendantDocuments","arguments","updateConditionTracks","_handleConditionTracks","previousConditions","tracks","trackedConditions","conditionGroup","disableConditionId","_conditionToggleNotify","setConditions","_onDeleteDescendantDocuments","updatedConditions","_cleanItemLinksTo","toRemove","_enumChildren","child","removeItemLink","commit","oldBook","cantrips","filterJoin","parentSkill","haveParentSkill","skillDataPathPart","conds","_getContextConditions","props","swim","climb","rollOptions","d20Roll","atkData","atkAbl","unchained","reverse","wt","wT","getWoundThresholdData","describePart","getDefenseHeaders","damageVulnerabilities","reSplit","cres","initiativeOptions","toCreate","inCombat","untokened","savingThrowId","changeBonus","abilityId","dataPathCheck","acNotes","cmdNotes","srNotes","saveNotes","drNotes","erNotes","vulnerability","showInDefense","wTlabel","saves","fastHealing","regen","canPopout","TypeError","newTrackState","disableTrackEntries","toDelete","oldAe","autoDelete","deleteContext","trender","createContext","hasCondition","mechanics","contexts","counter","type2","typeId0","typeId1","type0name","type1name","currentHealth","woundAdjust","newHP","nld","newHp","forceDialog","reductionDefault","tOptions","addTempHP","curTHP","newTHP","getWoundThresholdMultiplier","woundMult","woundLevel","hpActorConfig","penaltyBase","curHP","tempHP","maxHP","wtMult","wtMod","changeFlatKeys","fk","allNotes","getContainerContents","getContextNotes","string","noteSource","saveKey","spellbookNotes","concentrationNotes","noteObjects","enrichContextNotes","noteObj","subnote","getCarryCapacity","getCarriedWeight","_calculateCoinWeight","divisor","coins","carryMultiplier","encumbranceLoads","multiplierCount","getCurrency","currencies","armorData","skipRefresh","addStatic","temporaryRollDataFields","combats","viewed","hpKey","sizes","maxAgeOffset","ageCategories","negLevels","parseAlignment","effectiveSize","reachStruct","qi","haveAnyCharges","maxCharge","getChargeCostSync","getDefaultChargeCost","recharging","newMod","bonusRoll","bonusFeatFormula","hasItemBooleanFlag","flagName","resetSpellbookUsage","restorePoints","restoreFormula","restoreRoll","rechargeOptions","itemUpdate","recharge","_restingHeal","longTermCare","restoreHealth","restoreDailyUses","healUpdate","spellbookUpdates","restOptions","modifyTokenAttribute","isDelta","isBar","isResource","BaseCharacterPF","hpData","oldHpData","oldAblData","_onDeltaUpdates","deltaLabels","feedback","conf","dmgKey","ablName","fontSize","textData","anchor","TEXT_ANCHOR_POINTS","CENTER","TOP","BOTTOM","fill","stroke","strokeThickness","jitter","sinceLast","createScrollingText","baseSize","baseAge","ageValue","tempChanges","pf1AddDefaultChanges","_calculateMaxHealth","useFractional","hasGoodSave","goodSaveFormula","classFractionalSavingThrowFormulas","addSKillChanges","classSkillBonus","strAbl","strAbility","fortAbl","refAbl","willAbl","liteValues","valfn","trget","naturalAC","normalAC","enhAC","armorTarget","baseAC","enhACEffective","brokenAdjust","flyKey","flyValue","flyManeuverabilityValues","sizeStealthMods","sizeFlyMods","lookupStatement","changeData","changeObj","pcClasses","npcClasses","racialHD","pushHealth","manualHealth","autoHealth","hpPerHD","hpPerTier","tiers","maxedHD","computeHealth","baseLabel","ablRE","actorHpConfig","wtData","canon","validItems","itemTrait","hasInfo","traitId","ActorCharacterPF","tokenUpdate","actorLink","disposition","TOKEN_DISPOSITIONS","_updateExp","xpData","isInteger","totalXP","maxExp","curXp","prone","moveInfo","tokenRuler","burrow","ActorNPCPF","_prepareCR","newXP","crTotal","crOffset","getCRExp","ActorHauntPF","_prepareTemplates","prepareHealth","crDetail","ActorTrapPF","triggerType","visionType","trapPerceptionModifiers","ActorVehiclePF","sizeMod","sizeModSpecial","stoppedTotal","vehicleMaterials","magicallyHardened","squares","_prepareDriverData","driverBase","szCMBMod","abilityDamage","abilityDrain","ItemPF","hasActions","hasIdentifier","adjustsSize","adjustedSize","adjustedVision","adjustsVision","_preUpdateNumericValueGuard","keepPaths","_chargePreUpdate","memoryVariables","baseMaterial","firstAction","hasFiniteCharges","autoDeductCharges","autoDeductChargesCost","_rechargeUses","actionUpdate","_rechargeActions","rechargeFormula","changedActions","fullDescription","fullInfo","firstDamage","actorSizes","parsed","capacity","actionTypes","final","_updateMaxUses","_prepareActions","_prepareIdentifier","adjustContained","noAction","isPassive","_updateInheritedCharges","replaceSource","extraParams","scripts","execute","_transformContainerUpdateData","memorizeVariables","containerItem","baseUpdate","_memoryVariables","memKeys","_hasSizeUpdate","_hasVisionUpdate","activeChanged","_activeStateChange","_onMemorizedUpdate","iuses","getRawEffectData","altChatData","isVersatile","extended","childTypeDistinct","childType","distanceValues","saveDesc","timePeriods","enhBonus","getTypeChatData","harmless","usesPer","descriptionOnly","_result","getConditionalSubTargets","getContextChanges","getContextStack","resizing","_addTypeRollData","_canCreateItemLink","deeptarget","_generateLinkData","packageType","getLinkedItems","includeLinkData","_results","getAllLinkedItems","linkItems","getChangeTargets","actorSkills","s2","skl2","addItemBooleanFlag","removeItemBooleanFlag","getItemBooleanFlags","setItemDictionaryFlag","removeItemDictionaryFlag","getItemDictionaryFlag","getItemDictionaryFlags","getAttackSources","isManeuver","sizeBonus","effectiveChanges","ic","virtualEnh","isRng","getAllDamageSources","srcData","cursed","artifact","wcat","wtype","ItemBuffPF","oldEffect","_preDelete","timePeriodsShort","getDuration","endTiming","ItemClassPF","classLinks","curLevel","newAssociations","itemsCreationData","_typeSorting","compendiumSource","itemIds","deleteDocuments","saveFormulas","classSavingThrowFormulas","saveData","saveType","babFormulas","classFractionalBABFormulas","classBABFormulas","babType","babFormula","_registerOnActor","classHpConfig","isBaseClass","isBase","customHD","hasFCB","ItemPhysicalPF","oldBase","_resetChargesOnQuantityUpdate","oldQuantity","oldUses","prepareDurability","prepareWeight","itemEnhancementMods","_sizeAdjustedHealth","itemSize","baseWeight","_getArmorWeightMultiplier","actorSize","armorWeight","identical","maxChargesValue","remainingCharges","getActualValue","pricePerUse","costMultipliers","hpMax","checkYes","checkNo","ItemConsumablePF","ItemContainerPF","_containedItemUpdate","dryRun","fallback","weightReduction","percent","_prepareInventory","weightMult","currencyWeight","reductionFlat","itemsData","itemOptions","actuallyCreated","noHook","coreVersion","systemVersion","createdTime","lastModifiedBy","createContained","created","actuallyDeleted","removeContained","actuallyUpdated","modifiedTime","updateContained","fullOptions","ItemEquipmentPF","slotType","slotTypes","eType","typeKeys","eSubtype","subtypeKeys","isArmor","isOrdinary","subtypeLabels","armorValue","armorValueEffective","acpEffective","applyEquippedEffects","shieldType","armorType","ItemFeatPF","traitType","traitTypes","raceType","raceTypes","traitCategory","racialTraitCategories","abilityTypeLong","ItemLootPF","ItemRacePF","oldRace","newSize","oldSize","_preparationPreUpdate","getSpellComponents","compact","spellAbility","casterLevel","getMinimumCasterLevelBySpellData","curUses","getSpellUses","newCharges","actorUpdateData","slOffset","clOffset","maxPrepared","srcComponents","srcMaterials","isDivine","spellComponents","tc","classCasterType","_replaceConsumableConversionString","toConsumable","origData","isWand","isPotion","isScroll","minLevel","minCl","materialPrice","gpValue","xsrc","convertNotes","arrKey","exAtk","bAtk","dmgPart","oldSaveDC","charcard","getFormData","createConsumable","headerContent","bodyContent","separator","savingThrowDescription","useDCandSR","ItemWeaponPF","newWeaponType","wType","wSubtype","ItemImplantPF","IDField","_defaults","required","readonly","_validateType","PreparedModel","_safePrepareData","prepareData","DocumentLikeModel","AEBaseModel","TypeDataModel","durationEndEvents","AEBuffModel","CompactingMixin","SetField","ExtraAttackModel","ReplaceableSourceMixin","BaseMessageModel","ObjectField","sv","ItemMessageModel","ActionMessageModel","ArrayField","CheckMessageModel","HauntModel","notice","TrapModel","technology","VehicleModel","crew","passengers","decks","drivingCheck","drivingDevice","drivingSpace","forwardFacing","propulsion","affirmative","findItem","enrichers","matchItem","packTypePriority","PF1TextEnricher","enricher","global","setIcon","parseDuration","unitLabel","draggable","setElementOptions","tooltipClass","getSpeakerData","getRelevantActors","asSpeaker","asSheet","getSheetActor","tokenActors","generateTooltip","card","option","onSave","staticRoll","onAbility","onDraw","ident","draw","displayChat","onSkill","onUse","actionIdent","itemAction","actionTag","onAction","msgId","onHealth","vars","dual","speakerData","targetRollData","isHeal","tname","onBrowse","onCondition","getAliased","enableConfig","onApply","activationData","onToggle","displayAction","NL","mainlabel","isDual","sourceMetric","sourceImperial","swapWeight","kgl","lbsl","swapDistance","ml","ftl","aliases","tables","tips","onEnrichedInteraction","handleChatInput","comment","chatOptions","withinRect","point","rect","TemplateLayerPF","TemplateLayer","_onDragLeftMove","interactionData","snapToGrid","snapMode","GRID_SNAPPING_MODES","EDGE_MIDPOINT","CORNER","destination","getSnappedPoint","preview","ray","Ray","measurePath","halfAngle","angle","baseDirection","normalizeDegrees","toDegrees","renderFlags","refreshShape","MeasuredTemplatePF","_getTemplateSnapCoordinates","isSquare","_setElementOffsets","snapX","snapY","offsetX","offsetY","ruler","dx","dy","_refreshRulerText","_refreshPosition","_refreshTemplate","_getGridHighlightPositions","templateType","isHexagonal","ox","oy","originInCenter","bounds","shape","getBounds","fit","positions","i0","j0","i1","j1","getOffsetRange","cx","cy","getCenterPoint","angleDiff","atan2","PI","docAngle","getTopLeftPoint","gridSizePx","gridSizeUnits","ticker","addOnce","PIXI","UPDATE_PRIORITY","LOW","tCenter","getCenter","maxDistance","relevantTokens","sizeErrorMargin","isLargeToken","withinCone","minAngle","maxAngle","rayAngle","rayWithinAngle","raySceneLength","getOccupiedCells","GRID_TYPES","GRIDLESS","cells","mapCoordsToCell","highlightSquares","cell","getHighlightLayer","highlightId","rangeColor","Color","border","multiply","reachColor","SquareHighlight","fillColor","borderColor","_squares","layer","addHighlightLayer","addSquare","gridSize","hlname","ig","highlightPosition","AttackHighlightBase","clearHighlight","renderHighlight","GridlessHighlight","rangeStops","tw","th","rangeKey","minRange","rangeMeasurements","rangeIncrements","tokenOffset","hl","removeChildren","circle","Graphics","stops","inner","beginFill","drawCircle","beginHole","endHole","endFill","addChild","SquareGridHighlight","currentHighlight","isFeet","useReachRule","getReachSquares","ftDistance","userLimit","maxSquareRange","squaresExtra","SQUARE","gridDist","tokenSquares","tokenRect","getClosestTokenSquare","pos","lowest","square","sqrt","squareRange","wMax","hMax","tl","closestSquare","shouldAddReachSquare","closestTokenSquare","p0","p1","dist2","SquareGrid","diagonals","GRID_DIAGONALS","EQUIDISTANT","reachRuleRange","attackReachHighlight","showAttackReach","addReachListeners","_onMouseEnterReach","_onMouseLeaveReach","_getTokenByUuid","LLVMixin","_getLightSourceData","bright","getRadius","hasSystemVision","requiresSelection","tokenDoc","lowLightTokens","actorVision","lowLight","tokenVision","lowLightMultiplier","lowLightMultiplierBright","reinitLightSources","lights","lightSources","initializeLightSource","addLowLightVisionToLightConfig","toFormGroup","legend","TokenPF","disableLowLight","_onControl","_onRelease","_isVisionSource","hasSight","guarantee","_getBarBoost","_getBarUnderline","_drawBar","boost","underline","boostlessMax","boostlessPct","fromRGBvalues","lineStyle","drawRoundedRect","posY","wr","hr","x0","y0","DetectionModeInvisibilityPF","DetectionModeInvisibility","_testPoint","visionSource","_testLOS","_testRange","lightSource","DetectionModeBlindSensePF","DETECTION_TYPES","walls","getDetectionFilter","_detectionFilter","OutlineOverlayFilter","outlineColor","knockout","wave","ID","_canDetect","DetectionModeBlindSightPF","DetectionModeLifesensePF","DetectionModeTremorPF","DetectionModeTremor","MOVE","hasStatusEffect","specialStatusEffects","SWIM","lighting","VisionMode","LIGHTING_LEVELS","DIM","TokenHUDPF","TokenHUD","_getStatusEffectChoices","isOverlay","auxConditions","auxStatusId","addQuickActions","fragment","addQuickActionListeners","after","showReach","originalAngle","initialLayer","activeLayer","activatePreviewListeners","pfStyle","_onConfirm","_onMove","rotate","_onRotate","controlIcon","removeAllListeners","stage","lastMove","RENDER_THROTTLE","getLocalPosition","_onFinish","MeasuredTemplateDocument","snap","_onClickRight","_onDragLeftCancel","_applyStaticRoll","isDie","Die","_formula","isStatic","die","faces","evaluated","TEN","TWENTY","isCheck","overBy5","isMisfire","isNonRoll","isNormal","getFormula","bonusTerms","promptDialog","DIALOG_TEMPLATE","hasDC","editDC","_onDialogSubmit","STATIC_ROLL","_getFormData","baseDice","onDemand","precision","isAbnormal","abnormalTooltip","compendiumEntryType","_evaluate","_applyBonus","_evaluateSync","addBonus","DamageRoll","enableFlavorColorset","appearance","NORMAL","CRITICAL","NON_CRITICAL","TYPES","FunctionTermPF","termTypes","propagateFlavor","_evaluateAsync","json","StringTermPF","StringTerm","_conditionals","blankToNull","FilePathField","dismiss","minValue","spellPointCost","ColorField","EmbeddedDataField","unchainedAction","spellArea","customColor","customTexture","FALLBACK_IMAGE","_prepareConditionals","maxUses","updateContext","dataObj","_total","rangeIncrement","maxRange","rangeType","singleIncrementRange","baseDCFormula","dcSchoolBonus","universalDCBonus","dcFormula","damageSources","actionTypeToContext","mods","fakeCondChanges","allChanges","condData","chatDataOptions","isUnchainedActionEconomy","activationTypes","activationTypesPlural","abilityActivationTypesPlurals_unchained","abilityActivationTypesPlurals","activationType","durationFormula","variableDuration","minroll","maxroll","unflair","compress","totalDC","rangeUnit","rangeValue","simplifyRange","itemActionTypes","proficiencyPenalty","isNaturalSecondary","secondaryPenalty","hightest","applyChange","addParts","isExtra","ablDamage","ablLabel","rollParts","firstDie","nonCrit","exAtkCfg","bonusToAll","unnamedAttack","unnamedAttackNames","getUniqueName","replaceSpecificRollData","attackSetCount","formulaicAttack","unchainedEconomy","parseAttacks","countFormula","bonusFormula","bonusLabel","exAtkCount","minimized","alabel","formulaCfg","condBonuses","totalBonus","diffObject","component","defaultData","defaultDamageType","hasSound","updateTime","oldChangeData","newIds","newChangeData","targetData","getSourceInfoTargets","msgSourceReference","errorMessage","errorData","overrides","modifierChanger","abilityTarget","sourceInfoTargets","infoEntry","sourceInfoGroup","infoTarget","doAdd","sumValue","existingInfoEntry","hasSameParent","isEnh","hasSameTarget","hasHighestValue","isSameModifier","isSameTarget","hasHigherValue","oldEntry","prune","_modifiers","_prepareModifiers","newScriptCallData","getDelegate","scriptEditor","scriptCall","scm","actionRange","rng","actionDamage","hash","combine","numberFormatAlt","fraction","helpers","registerHelper","measureDistances","segments","renderCallback","rates","maxRate","copper","omit","isSimpleTerm","FormulaPart","_number","ParentheticalTerm","iformula","triTermOps","simpleOnly","eterms","right","replaceZeroDice","RollTerm","negativeTerms","nterms","nt","stringTerms","handleFormula","newformula","handleParts","dmgAbl","semiFinal","sizeRoll","origCount","origSides","targetSize","initialSize","_getSizeIndex","currentDie","sizeDie","shifted","sides","d6Index","d8Index","sizeOffset","curSize","sizeReach","ifelse","ifTrue","ifFalse","sizeRollFn","fromTerms","lookup","if","_if","eq","lt","lte","gt","gte","and","or","xor","not","getConditions","sys","toStatusEffect","oldKey","newKey","deadCond","numberFormat","strings","ListFormat","classIDMap","PartyRestConfig","restConfig","_prepareActors","_calculateHours","rest","_onToggleCategory","_onOpenSheet","restoreUses","conscious","_isConscious","watch","nowatch","watches","duo","solo","partyRest","watchTime","isWatch","_el","pf1NoRender","_onSubmitForm","_performRest","people","cancelled","allSettled","advance","quickRest","binarySearch","searchArr","compare_fn","cmp","uniquePermutations","concat","TextEditor_replaceTextNode","replacement","replaceParent","splitText","replaceWith","calculateRangeFormula","spellRangeFormulas","diffObjectAndArray","keepLength","isDifferent","difference","_difference","v0","v1","d2","_deepClone","Document","DisplayObject","clone","CR_EXP_LEVELS","substring","embeds","pcontent","TextEditor_getTextNodes","walk","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","currentNode","rgx","TextEditor_replaceTextContent","func","replaced","matchAll","docType","fuzzyIndex","sortArrayByName","filteredIndex","it","searchMutations","mut","getActors","unlinked","User","testUsers","sceneList","Scene","isLinked","item0","item1","ms","lastCall","diagonalRule","gs","nx","ny","nDiagonal","nStraight","nd10","propertyKey","propA","propB","pageId","neutral","renderForEveryone","renderApplications","systemOnly","throttle","timeoutId","Registry","_defaultData","unregister","registryObject","RegistryEntry","DamageType","DamageTypes","CATEGORIES","colorset","Material","intrinsic","primitive","hardnessMultiplier","healthPerInch","healthBonus","healthMultiplier","buckler","incompatible","perPound","ammunition","lightWeapon","oneHandWeapon","twoHandWeapon","rangedOneHandWeapon","rangedTwoHandWeapon","bonusPerPound","Materials","ScriptCallCategory","ScriptCalls","omitFields","StatusHudModel","actorTypes","Condition","Conditions","TRACKS","hud","HUD_EXCLUDE_INANIMATE","SET_TO_ZERO","URLField","DateField","Source","optionalString","isbn","tieIn","Sources","companion","MigrationCategory","processed","invalid","errors","ignored","completed","progress","percentage","hasTotal","progressLabel","startEntry","actionState","processing","finishEntry","recordError","ignoreEntry","addIgnored","setTotal","setInvalid","setProgress","finish","currentName","timestamp","CompendiumCollection","getInvalidEntries","invalidDocumentIds","getInvalid","getErrorEntries","MigrationState","createCategory","MigrationIssuesDialog","Dialog","prompt","MigrationDialog","migrationState","autoClose","fastMigration","stateTracker","_onMigration","_showDetails","_reloadClients","typeChanges","debouncedReload","_lastProcessUpdate","RENDERED","_preClose","compendiumRenames","racialhd","commonbuffs","mythicpaths","registerRedirects","oldUuid","newUuid","uuidRedirects","prefix","oldName","materialChanges","nexavarianSteel","alchemicalsilver","angelskin","bloodcrystal","coldiron","darkleafcloth","eelhide","elysianbronze","fireforgedsteel","frostforgedsteel","griffonmane","liquidglass","livingsteel","singingsteel","spiresteel","isMigrated","migration","initializeStateAndDialog","conformTypeUpdate","performDeletions","migrateActors","noHooks","localState","tracker","migrateActorData","migrateItems","migrateItemData","migrateScenes","migrateScene","migrateCompendiums","migrateCompendium","marker","wasLocked","getDocuments","applyUpdates","UPDATE_CHUNK_SIZE","migrateTokenData","tokenData","lowLightVisionMultiplier","lowLightVisionMultiplierBright","customVisionRules","saturation","brightness","attenuation","contrast","migrateToken","migrateActiveEffectsToItems","_migrateActorEncumbrance","ent","updateKey","_migrateActorNoteArrays","_migrateActorSpeed","_migrateActorSpellbookCL","curBase","curFormula","_migrateActorSpellbookSlots","spellbookSlot","baseKey","maxKey","newBase","_migrateActorSpellbookPrep","wasSpontaneous","usesAuto","_migrateActorSpellbookKind","castingClass","_migrateActorConcentration","oldValue","isString","formulaKey","_migrateActorBaseStats","deleteEntries","dPath","_migrateUnusedActorCreatureType","_migrateActorSpellbookDCFormula","_migrateActorHPAbility","_migrateActorCR","_migrateAttackAbility","_migrateActorDefenseAbility","_migrateActorSpellbookUsage","_migrateActorNullValues","_migrateActorSpellbookDomainSlots","_migrateActorStatures","_migrateActorInitAbility","_migrateActorChangeRevamp","subPath","_migrateActorCMBRevamp","_migrateCarryBonus","_migrateBuggedValues","convertToInt","_migrateSpellbookUsage","usedSpellbooks","_migrateActorHP","_migrateActorSenses","oldSenses","brightSight","_migrateActorInvaliddSkills","sklData","subSklData","_migrateActorSkillRanks","_migrateActorSkillJournals","reOldJournalFormat","subSkillKey","_migrateActorSubskillData","subSkillData","_migrateActorDRandER","oldDR","oldER","_migrateActorTraits","selections","_migrateAnyTrait","_migrateActorProficiencies","wprofs","wprofmap","sim","mar","nwprofs","_migrateActorFlags","getUniformValue","visionPermission","uid","noDefault","noUsers","_enabled","_migrateActorUnusedData","itemDoc","_migrateActorActiveEffects","migrateItemActiveEffects","_migrateItemDataActiveEffects","endTiminig","_migrateItemFlags","_migrateItemArrayTypes","_migrateFlagsArrayToObject","bflags","dflags","_migrateWeaponImprovised","_migrateItemSpellDescription","shortDescription","_migrateClassDynamics","stKeys","_migrateClassType","_migrateClassCasting","_migrateSpellDivineFocus","_migrateWeaponCategories","weaponType","changeProp","two","_migrateArmorCategories","oldType","_migrateArmorMaxDex","_migrateArmorACP","_migrateItemSize","wdSize","_migrateItemFeatAbilityTypes","_migrateClassLevels","_migrateSavingThrowTypes","_migrateCR","_migrateItemChanges","newChanges","cd","oldChanges","updateChanges","_migrateItemChangeFlags","_migrateItemContextNotes","oldNotes","newNotes","oldNote","newNote","updateNotes","_migrateEquipmentSize","_migrateSpellCosts","autoDeduct","_migrateSpellPreparation","maxAmount","spontaneousPrepared","preparedAmount","_migrateLootEquip","_migrateItemLinks","_migrateItemProficiencies","oldKeys","nwprof","_migrateItemNotes","_migrateScriptCalls","_migrateItemActionToActions","_migrateItemChargeCost","_migrateItemLimitedUses","_migrateItemWeight","_migrateItemHealth","_migrateContainerReduction","_migrateContainerPrice","basePrice","_migrateItemType","_migrateItemLearnedAt","learned","_migrateItemTuples","_migrateEquipmentCategories","_migrateSpellDescriptors","exists","_migrateItemTraits","_migrateRaceItemCreatureType","creatureType","oldTypes","lowerCaseKey","charAt","_migrateItemMaterials","materialPath","tg","ma","newMat","_migrateSpellSubschool","customSubschools","ssLoop","ssId","ssLabel","_migrateItemDefaultAmmo","_migrateItemDurability","_migrateItemHeld","_migrateItemUnusedData","priceUnits","identifiedName","weaponData","useCustomTag","itemActionData","migrateItemActionData","additions","deletions","inventoryItems","sitem","subItem","itemUpdateData","subUpdate","migrateContainerItems","_migrateActionDamageType","damageGroupPaths","damageGroupKey","damageGroup","_Action_ConvertDamageType","_migrateActionLimitedUses","_migrateActionExtraAttacks","attackParts","formulaicAttacks","_migrateActionAmmunitionUsage","_migrateActionDuration","_migrateActionMaterials","_migrateActionConditionals","reResult","migrateSceneTokens","migrateSceneActors","noEncumbrance","dataType","newLink","movedUuid","_index","hiddenLinks","_delete","hasOldAction","spellDuration","oldSpellPointCostFormula","damageTypeString","damageTypeList","tests","damageTest","testString","aeUpdate","migrateActiveEffectData","getNewRelativeOrigin","newOrigin","originFlag","migrateRollData","migrateMessageData","cmData","newRolls","newRoll","migrateMessages","migrateActor","migrateItem","migrateMessage","migrateSystem","systemPacks","startMessage","smsgId","permanent","_migrateWorldSettings","actorMigration","itemMigration","packMigration","chatMigration","sceneMigration","preparePacks","expireFromTokens","globalThis","_canvas","PF1","PF1CONST","dice.RollPF","layers","layerClass","_canvas.TemplateLayerPF","objectClass","_canvas.MeasuredTemplatePF","_canvas.TokenPF","hudClass","_canvas.TokenHUDPF","documents.TokenDocumentPF","documents.actor.ActorCharacterPF","documents.actor.ActorNPCPF","documents.actor.ActorHauntPF","documents.actor.ActorTrapPF","documents.actor.ActorVehiclePF","dataModels","models.actor.HauntModel","models.actor.TrapModel","models.actor.VehicleModel","documents.item.ItemAttackPF","documents.item.ItemBuffPF","documents.item.ItemClassPF","documents.item.ItemConsumablePF","documents.item.ItemContainerPF","documents.item.ItemEquipmentPF","documents.item.ItemFeatPF","documents.item.ItemLootPF","documents.item.ItemRacePF","documents.item.ItemSpellPF","documents.item.ItemWeaponPF","documents.item.ItemImplantPF","documents.ActiveEffectPF","legacyTransferral","models.ae.AEBaseModel","models.ae.AEBuffModel","documents.CombatPF","documents.CombatantPF","documents.ChatMessagePF","models.chat.BaseMessageModel","models.chat.ItemMessageModel","models.chat.ActionMessageModel","models.chat.CheckMessageModel","applications.ItemDirectoryPF","dice.D20RollPF","dice.DamageRoll","functions","AmbientLight","_canvas.lowLightVision.LLVMixin","register$1","Actors","applications.actor.ActorSheetPFCharacter","applications.actor.ActorSheetPFNPC","applications.actor.ActorSheetPFNPCLite","applications.actor.ActorSheetPFNPCLoot","applications.actor.ActorSheetPFHaunt","applications.actor.ActorSheetPFTrap","applications.actor.ActorSheetPFVehicle","Items","applications.item.ItemSheetPF","applications.item.ItemSheetPF_Container","applications.journal.JournalTextPageSheetPF1","LABEL","DETECTION_TYPE","SIGHT","initializeSocket","initializeModuleIntegration","integration","SpeedProvider","registerSystem","Pf1SpeedProvider","colors","getRanges","baseSpeed","getBaseSpeed","inHeavyArmor","inHeavyLoad","runMultiplier","useElevation","getSetting","elevation","registries","registry.DamageTypes","registry.Materials","registry.ScriptCalls","registry.Conditions","registry.Sources","registryName","registryClass","registerTokenRuler","TokenRulerPF","rulerClass","applyWaypointSpeedData","wp","factor","factorBound","factorBase","singleMove","doubleMove","running","runningFar","exceedMovement","_getGridHighlightStyle","waypoint","measurement","scaledCost","getCostFunction","jump","gregorian","earthCalendarConfig","calendar","days","ordinal","abbreviation","months","GolarianCalendarData","CalendarData","setEarthTime","YEAR_OFFSET","syncCanonical","second","oldtime","getFullYear","earthCalendar","isLeapYear","getMonth","getDate","leapDays","golarianCalendarConfig","golarianCalendarClass","worldCalendarConfig","worldCalendarClass","toLocalize","toLocalizeConst","toSort","doLocalize","localized","akey","aval","bkey","bval","labelA","labelB","doLocalizeKeys","flattenObject","localizeLabels","doLocalizePaths","golarianCalendar","PREVIOUS_MIGRATION_VERSION","documents.settings.migrateSystemSettings","changelogVersion","curVersion","chatUtils.hideRollInfo","chatUtils.hideGMSensitiveInfo","chatUtils.hideInvisibleTargets","chatUtils.addTargetCallbacks","chatUtils.alterTargetDefense","chatUtils.alterAmmoRecovery","_canvas.attackReach.addReachListeners","applications.CurrencyTransfer","macros.createItemMacro","macros.createActionMacro","macros.createSkillMacro","macros.createSaveMacro","macros.createMiscActorMacro","sizingTemplateData","sizeContent","systemVision","visionTab","enableCustomVision","toggleCustomVision","dmTab","visionContent","applications.ChangeLogWindow","Settings"],"mappings":"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AQF,EAAQxC,UACM,mBAAjB0C,GAAOzB,QACVyB,EAAAzB,MAAQyB,EAAMzB,QAE5B,CACA,qFApsBa,CACX0B,KAAM,CACJ,EACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,OAEFC,OAAQ,CACN,EACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MAEFC,KAAM,CACJ,EACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,KACA,MACA,MACA,IACA,KACA,KACA,KACA,qBAQS,CACX,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,mBAxmGW,CACXnqB,IAAK,iBACLshB,IAAK,iBACLb,IAAK,iBACLc,IAAK,iBACLC,IAAK,iBACLC,IAAK,iCAMM,CACXzhB,IAAK,sBACLshB,IAAK,sBACLb,IAAK,sBACLc,IAAK,sBACLC,IAAK,sBACLC,IAAK,8CAoUM,CACX2I,UAAW,kCACX9gB,QAAS,gCACT+gB,KAAM,6BACNC,MAAO,8BACPC,UAAW,kCACXC,KAAM,6BACN7L,SAAU,iCACV8L,KAAM,kCACNznB,OAAQ,+BACR0nB,IAAK,4BACLC,MAAO,8BACPC,OAAQ,+BACRC,KAAM,6BACNC,QAAS,+DAME,CACXT,KAAM,6BACNC,MAAO,8BACPC,UAAW,kCACXC,KAAM,6BACN7L,SAAU,iCACV8L,KAAM,kCACNznB,OAAQ,+BACR2nB,MAAO,8BACPC,OAAQ,+BACRC,KAAM,sEAwBK,CACXvhB,QAAS,gCACT+gB,KAAM,6BACNU,SAAU,iCACVnpB,OAAQ,+BACRgpB,OAAQ,+BACRC,KAAM,6BACNC,QAAS,kEAxBE,CACXV,UAAW,kCACX9gB,QAAS,gCACT+gB,KAAM,6B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,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,YACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,QAER,CACEmhB,IAAK,cACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNx9D,QAAQ,EACR1pB,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uDACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yDACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kDACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kDACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0DACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0DACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,qDACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wDACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,iDACNqpG,KAAM,UACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNx9D,QAAQ,EACR1pB,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNC,MAAO,iBACPz9D,QAAQ,EACR1pB,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8CACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,oCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8CACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,iDACNqpG,KAAM,QACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,qCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,iDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,aACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,sCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,2DACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNqpG,KAAM,SACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,sCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,sDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,2DACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,sCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,iDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,qCACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,sCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,qCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,kDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,mDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,kDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,+CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,wDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,2DACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,yCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,2DACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,oDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,cACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,EACPnV,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,8CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,WACL1lB,KAAM,uCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,MAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,cACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,eACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,gCACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,eACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,IACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,YACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,GACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,aACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,aACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,cACL1lB,KAAM,eACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,aACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACP6qK,KAAM,oBACNhxL,KAAM,UAER,CACEmhB,IAAK,aACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP94F,MAAO,EACPnmB,KAAM,UAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNmsF,KAAM,oBACNx9D,QAAQ,EACRxzH,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNmsF,KAAM,oBACNlnF,IAAK,sCACL0pB,QAAQ,EACRxzH,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNx9D,QAAQ,EACRxzH,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,qBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNC,MAAO,YACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,kBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,gBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,cACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNqpG,KAAM,QACND,KAAM,aACNmsF,KAAM,oBACNC,MAAO,mBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iCACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,iBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,kBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNqpG,KAAM,MACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,yBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,eACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNqpG,KAAM,MACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,YACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,eACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,gBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,mBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,gBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNqpG,KAAM,KACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,oBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNqpG,KAAM,MACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,kBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNqpG,KAAM,MACND,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,oBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,0BACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNmsF,KAAM,oBACNC,MAAO,iBACPjxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNmsF,KAAM,oBACNhxL,KAAM,aAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,wCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2DACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,0CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oDACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,UACNwzH,QAAQ,GAEV,CACEryG,IAAK,UACL1lB,KAAM,4CACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,4CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,qDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,qDACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,UACN8pG,IAAK,uCAEP,CACE3oF,IAAK,UACL1lB,KAAM,uCACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2CACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,eACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,cACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,uBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,wBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,8BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gCACNqpG,KAAM,OACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNqpG,KAAM,KACND,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,0BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNqpG,KAAM,MACND,KAAM,aACNoa,MAAO,IACP+xE,KAAM,oBACNlnF,IAAK,sCACL9pG,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,+BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,sBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,mBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,kBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,oCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,UACL1lB,KAAM,4BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,2BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,oBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,yBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,iBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,qCACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,qBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,wBACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,WACL1lB,KAAM,6BACNopG,KAAM,aACNoa,MAAO,GACP+xE,KAAM,oBACNhxL,KAAM,WAER,CACEmhB,IAAK,YACL1lB,KAAM,gBACNopG,KAAM,aACNoa,MAAO,GACPj/G,KAAM,QACN8pG,IAAK,sCACLlF,UAAW,0BAEb,CACEzjF,IAAK,YACL1lB,KAAM,gBACNop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","x_google_ignoreList":[18]}